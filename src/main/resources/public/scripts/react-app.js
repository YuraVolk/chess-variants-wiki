/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ 4127:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "w": () => (/* binding */ chessGlyphIndex)
/* harmony export */ });
var chessGlyphIndex = {
  doubleBackwardArrow: "!",
  downloadIcon: '"',
  endBackwardArrow: "#",
  forwardDoubleArrow: "α",
  userSearch: "$",
  userConnection: "%",
  notAllowed: "&",
  clock: "'",
  extraInformation: "(",
  authorshipNotice: ")",
  draw: "+",
  backwardArrow: ",",
  userInformation: "-",
  smallBackwardArrow: "/",
  leaderBoard: ";",
  equal: "=",
  downwardArrow: "<",
  upperArrow: ">",
  endForwardArrow: "@",
  urlAttached: "A",
  crossMark: "B",
  rightOutwardsArrow: "C",
  hashtag: "D",
  newspaper: "E",
  twitter: "F",
  checkMark: "G",
  camera: "H",
  alternativeLine: "I",
  play: "J",
  pause: "K",
  reload: "L",
  world: "M",
  points: "N",
  medal: "O",
  soundOff: "P",
  circleCrossMark: "Q",
  steadyEvaluation: "R",
  facebook: "S",
  circle: "T",
  soundOn: "U",
  plus: "V",
  openEye: "W",
  copyToClipboard: "X",
  wavingFlag: "Y",
  editText: "Z",
  fullArrowLeft: "[",
  fullArrowRight: "]",
  smallArrowForward: "\\",
  goBackArrow: "_",
  youtube: "`",
  calendar: "a",
  user: "b",
  chat: "c",
  lock: "d",
  box: "e",
  circularArrows: "f",
  lightBulb: "g",
  briefcase: "h",
  board: "i",
  knightArrows: "j",
  newMessage: "k",
  drawing: "l",
  twoUsers: "m",
  twoUsers2: "n",
  openingBook: "o",
  disclaimer: "p",
  ringingBell: "q",
  list: "r",
  rookAndPawn: "s",
  hamburgerList: "t",
  mail: "u",
  userExtraInformation: "v",
  house: "w",
  sheetAndPencil: "x",
  openMail: "y",
  chatBox: "z",
  fullArrowDown: "{",
  smallArrowUp: "|",
  fullArrowUp: "}",
  arrowIntoBox: "¡",
  key: "¢",
  file: "£",
  books: "¤",
  sharing: "¥",
  userNotAllowed: "¦",
  userCrossMark: "§",
  questionMark: "©",
  boardWithCircle: "«",
  googlePlus: "®",
  reset: "°",
  reddit: "±",
  openBook: "´",
  userPlus: "¶",
  cog: "·",
  pin: "»",
  suitcase: "¼",
  mark: "½",
  cake: "¾",
  openLink: "¿",
  bishopStroke: "Ä",
  linkedin: "Å",
  knight: "Ç",
  threeCheck: "Ë",
  chess960rapid: "Ñ",
  connection: "Õ",
  quotes: "Ö",
  exit: "×",
  crossedBinoculars: "Þ",
  leaderBoardReversed: "ß",
  bishopFull: "ä",
  printer: "å",
  verticalEvaluation: "ç",
  t: "ë",
  pawn: "í",
  twoPawns: "î",
  unrated: "ð",
  elite: "ñ",
  bug: "õ",
  cpu: "ö",
  forwardArrowCircle: "÷",
  squareCrossMark: "ü",
  android: "þ",
  twoUsersPlus: "ÿ",
  crossedArrows: "Đ",
  king: "Ā",
  kingFull: "ā",
  bishop: "Ă",
  twoFullRooks: "ă",
  kingStrokes: "Ą",
  fullKnight2: "ą",
  chess960: "Č",
  leaderBoardAscent: "č",
  crazyhouse: "Ď",
  checklist: "ď",
  target: "đ",
  pawnAndHalfRook: "Ē",
  halfRookAndPawn: "ē",
  knightStrokes: "Ė",
  pawnLogo: "Ę",
  queenFull: "ę",
  exchange: "Ě",
  userNext: "Ğ",
  userPrevious: "Ġ",
  compass: "ġ",
  pawnStrokes: "Ģ",
  rookStrokes: "ģ",
  screenDisplays: "Ħ",
  kingOfTheHill: "Ī",
  antichess: "ī",
  queen: "Į",
  threePawns: "į",
  queenStrokes: "Ķ",
  rookSmallStrokes: "Ļ",
  rookSmall: "Ľ",
  bishopPair: "Ł",
  rookPair: "Ņ",
  knightPair: "Ň",
  twoUsersSearch: "Ŋ",
  shield: "ŋ",
  kingSmall: "Ō",
  bishopSmall: "Ő",
  knightSmall: "Ŗ",
  userNoConnection: "Ř",
  userStream: "v",
  queenAlternative: "Ş",
  pawnAlternative: "Š",
  threePawnsAlternative: "Ţ",
  twoPawnsAlternative: "Ť",
  rookAlternative: "Ŧ",
  knightPairFull: "Ż",
  bishopPairFull: "Ž",
  addBoard: "ˆ",
  diamond: "Ͱ",
  scales: "ͱ",
  pawn3d: "Ͳ",
  userShieldPlus: "ͳ",
  gold: "Ͷ",
  ellipsis: "Ώ",
  analysis: "Δ",
  archive: "Θ",
  arrowBottomIntoBox: "Ξ",
  disclaimerEditor: "Σ",
  sendTrophy: "Υ",
  addCheckMark: "Φ",
  checkMarkSquare: "Ψ",
  squareStaircase: "ά",
  arrowsUpBottom: "έ",
  star: "ή",
  verticalDash: "ί",
  shieldCheckMark: "β",
  top3: "ε",
  addImage: "ζ",
  chessStream: "η",
  removeTrophy: "κ",
  importantMail: "λ",
  arrowLeave: "μ",
  donut: "ν",
  computerAnalysis: "ξ",
  checkMarkSquareSmall: "ο",
  diagonalExpandArrows: "π",
  leaderBoardHorizontal: "ρ",
  checkMarkAsCircle: "χ",
  arrowFromBox: "ϊ",
  boxArrowBottom: "ό",
  boxArrowLeft: "ύ",
  boxArrowRight: "ώ",
  fourArrowsCentral: "Ϙ",
  clashingSwords: "τ",
  ratingOffset: "υ",
  smilingFace: "ς",
  fileCabinet: "σ",
  editClock: "ϙ",
  userShield: "Ϛ",
  homeFilled: "ϛ",
  paymentCard: "Ϝ",
  fourArrowsOutwards: "ϝ",
  puzzle: "Ϟ",
  addPhoto: "ϟ",
  arrowWallLeft: "Ϡ",
  arrowWallRight: "ϡ",
  boardConfiguration: "Ϸ",
  fourBlocks: "ϸ",
  sandglass: "Ϻ",
  crown: "ϻ",
  cloudUpload: "Ẹ",
  webChatBox: "ẹ",
  puzzleRush: "Ẻ",
  knightHops: "ẻ",
  instagram: "ἀ",
  squarePlus: "ἁ",
  squareMinus: "ἂ",
  squareEqual: "ἃ",
  square: "ἄ",
  fireFull: "ἅ",
  pawnRecycle: "ἆ",
  noEngine: "ἇ",
  google: "Ἀ",
  fourPlayer: "Ἁ",
  pieceMeal: "Ἂ",
  arrowBoldUp: "Ἃ",
  arrowBoldDown: "Ἄ",
  blunder: "Ἅ",
  mistake: "Ἆ",
  videoChatBox: "Ἇ",
  bonesCrossed: "ἐ",
  displays: "ἑ",
  arrowEnter: "ἒ",
  newspaperHalf: "ἓ",
  bookmark: "ἔ",
  puzzleLarge: "ἕ",
  movePawn: "Ἐ",
  pawn3dLarge: "Ἑ",
  sun: "Ἒ",
  rapid: "Ἓ",
  blitz: "Ἔ",
  bullet: "Ἕ",
  mortarboard: "ἠ",
  laptop: "ἡ",
  resetWidth: "ἢ",
  pawnConnection: "ἣ",
  copyToClipboardFromText: "ἤ",
  fire: "ἥ",
  crownSmall: "ἦ",
  orderedList: "ἧ",
  chess960daily: "Ἠ",
  arrowWallBottom: "Ἡ",
  pawn3dBold: "Ἢ",
  plusInCircle: "Ἣ",
  lightCorner: "Ἤ",
  darkCorner: "Ἥ",
  steepCurve: "Ἦ",
  heart: "Ἧ",
  checkMarkThin: "ἰ",
  connectionDiagonal: "ἱ",
  diadem: "ἲ",
  plusMinus: "ἳ",
  recycling: "ἴ",
  metrics: "ἵ",
  top1: "ἶ",
  engineCheckMark: "ἷ",
  wikipedia: "Ἰ",
  tournament: "Ἱ",
  houseConfiguration: "Ἲ",
  computerHindsight: "Ἳ",
  computerCheckMark: "Ἴ",
  lightDarkTheme: "Ἵ",
  whistlingBell: "Ἶ",
  crossMarkCompact: "Ἷ",
  eyeCrossed: "ὀ",
  fide: "ὁ",
  favorite: "ὂ",
  tShirtPawn: "ὃ",
  addSmile: "ὄ",
  library: "ὅ",
  discord: "Ὀ",
  analysisCheckMark: "Ὁ",
  versusComputer: "Ὂ",
  dollarSign: "Ὃ",
  bestMove: "Ὄ",
  gift: "Ὅ",
  evaluationLinear: "ὐ",
  evaluationThrowaway: "ὑ",
  evaluationEqual: "ὒ",
  evaluationDead: "ὓ",
  evaluationSharp: "ὔ",
  evaluationPerplexing: "ὕ",
  evaluationSmooth: "ὖ",
  libraryAdd: "ὗ",
  selfPartner: "Ὑ",
  fourPlayerConfiguration: "Ὓ",
  listDownFlow: "Ὕ",
  puzzleBattle: "Ὗ",
  hyperbullet: "ὠ",
  gameLink: "ὡ",
  gameStudy: "ὢ",
  evaluationCrazy: "ὣ",
  engine: "ὤ",
  crossedSwordsInCircle: "ὥ",
  hallmark: "ὦ",
  like: "ὧ",
  boardTwoPlayers: "Ὠ",
  fourPlayerChess: "Ὡ",
  variants: "Ὢ",
  cloudUploadCompact: "Ὣ",
  clockIncrement: "Ὤ",
  videoCamera: "Ὥ",
  inaccuracy: "Ὧ",
  bot: "ὰ",
  torpedo: "ά",
  vk: "ὲ",
  blindfold: "έ",
  customSettings: "ή",
  captureAnything: "ὶ",
  pawnSideways: "ί",
  noCastling: "ὸ",
  fogOfWar: "ό",
  automate: "ὺ",
  atomic: "ύ",
  pawnCounterfeit: "ὼ",
  elephant: "ώ",
  fullBlock: "ᾀ",
  fourFullBlocks: "ᾁ",
  nineFullBlocks: "ᾂ",
  nineFullBlocksCrossed: "ᾃ",
  hamburgerMenuCompact: "ᾄ",
  listCompact: "ᾅ",
  geoMark: "ᾆ",
  crossedDonut: "ᾇ",
  handshake: "ᾈ",
  verified: "ᾉ",
  sandglassRunningOut: "ᾊ",
  rapidLowOnTime: "ᾋ",
  tourneyBanner: "ᾌ",
  noCloud: "ᾍ",
  fork: "ᾎ",
  donutTarget: "ᾏ",
  newCalendarDay: "ᾐ",
  cornerInfiltration: "ᾑ",
  hastTagCompact: "ᾒ",
  chatterbox: "ᾓ",
  circleStar: "ᾔ",
  targetPractice: "ᾕ",
  pawnPromotion: "ᾖ",
  flagProgression: "ᾗ",
  pawnDoubleAttack: "ᾘ",
  kingAndRook: "ᾙ",
  specialMedal: "ᾚ",
  pawnBanner: "ᾛ",
  userSquare: "ᾜ",
  verifiedCandidate: "ᾝ",
  saveFile: "ᾞ",
  duck: "ᾟ",
  addBanner: "ᾠ",
  qrCode: "ᾡ",
  noAnalysis: "ᾢ",
  dualPawn: "ᾣ",
  gameEscape: "ᾤ",
  tournamentCup: "ᾥ",
  noExchanges: "ᾦ",
  tikTok: "ᾰ",
  pieChart: "ᾱ",
  search: "–",
  binoculars: "—",
  largeBoard: "’",
  exclamation: "†",
  tournamentCupIcon: "‡",
  trashBin: "•",
  arrowForwardBoldCompact: "…",
  giftDiamond: "‹",
  filter: "›",
  noChat: "⁄",
  newSheet: "€",
  xml: "∞",
  blockUser: "∫",
  facebookLike: "≤",
  facebookDislike: "≥",
  apple: "◊",
  phone: ""
};

/***/ }),

/***/ 73490:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "$": () => (/* binding */ importSVGGroupImages),
/* harmony export */   "Ws": () => (/* binding */ RasterPieceDisplayGroup),
/* harmony export */   "_n": () => (/* binding */ verifyRasterPieceDisplayGroup),
/* harmony export */   "hz": () => (/* binding */ verifySVGPieceDisplayGroup),
/* harmony export */   "ir": () => (/* binding */ importRasterGroupImages),
/* harmony export */   "l1": () => (/* binding */ SVGPieceDisplayGroup)
/* harmony export */ });
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
var SVGPieceDisplayGroup = /*#__PURE__*/function (SVGPieceDisplayGroup) {
  SVGPieceDisplayGroup["Alpha"] = "Alpha";
  SVGPieceDisplayGroup["Classic"] = "Classic";
  SVGPieceDisplayGroup["Standard"] = "Standard";
  SVGPieceDisplayGroup["Neo"] = "Neo";
  return SVGPieceDisplayGroup;
}({});
var RasterPieceDisplayGroup = /*#__PURE__*/function (RasterPieceDisplayGroup) {
  RasterPieceDisplayGroup["Metal"] = "Metal";
  return RasterPieceDisplayGroup;
}({});
var verifySVGPieceDisplayGroup = group => group in SVGPieceDisplayGroup;
var verifyRasterPieceDisplayGroup = group => group in RasterPieceDisplayGroup;
var svgImageContexts = {
  [SVGPieceDisplayGroup.Alpha]: __webpack_require__(35402),
  [SVGPieceDisplayGroup.Classic]: __webpack_require__(94499),
  [SVGPieceDisplayGroup.Standard]: __webpack_require__(77173),
  [SVGPieceDisplayGroup.Neo]: __webpack_require__(55874)
};
function importSVGGroupImages() {
  var images = {
    [SVGPieceDisplayGroup.Alpha]: {},
    [SVGPieceDisplayGroup.Classic]: {},
    [SVGPieceDisplayGroup.Standard]: {},
    [SVGPieceDisplayGroup.Neo]: {}
  };
  var key;
  for (key in svgImageContexts) {
    if (Object.prototype.hasOwnProperty.call(svgImageContexts, key)) {
      var resolve = svgImageContexts[key];
      var _iterator = _createForOfIteratorHelper(resolve.keys()),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var r = _step.value;
          images[key][r.replace(/\.\/|\.svg/g, "")] = resolve(r).default;
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
  }
  return images;
}
var rasterImageContexts = {
  [RasterPieceDisplayGroup.Metal]: {
    r: __webpack_require__(47733),
    b: __webpack_require__(69953),
    y: __webpack_require__(63406),
    g: __webpack_require__(57159),
    d: __webpack_require__(47174),
    dw: __webpack_require__(10544),
    white: __webpack_require__(74103),
    black: __webpack_require__(47325)
  }
};
function importRasterGroupImages() {
  var images = {
    [RasterPieceDisplayGroup.Metal]: {}
  };
  var key;
  for (key in rasterImageContexts) {
    if (Object.prototype.hasOwnProperty.call(rasterImageContexts, key)) {
      var currentGroup = images[key];
      var resolveWrap = rasterImageContexts[key];
      var color = void 0;
      for (color in resolveWrap) {
        var resolve = resolveWrap[color];
        var _iterator2 = _createForOfIteratorHelper(resolve.keys()),
          _step2;
        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
            var r = _step2.value;
            var validatedName = r.replace(/\.\/|\.png/g, "");
            if (!(validatedName in currentGroup)) {
              currentGroup[validatedName] = {
                r: "",
                b: "",
                y: "",
                g: "",
                d: "",
                dw: "",
                white: "",
                black: ""
              };
            }
            currentGroup[validatedName][color] = resolve(r).default;
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
      }
    }
  }
  return images;
}

/***/ }),

/***/ 18027:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CG": () => (/* binding */ verifyTupleType),
/* harmony export */   "Fc": () => (/* binding */ getEnumKeys),
/* harmony export */   "VS": () => (/* binding */ createTuple),
/* harmony export */   "fJ": () => (/* binding */ verifyFunctionType),
/* harmony export */   "fi": () => (/* binding */ createTupleFromCallback),
/* harmony export */   "h0": () => (/* binding */ throwOnNever),
/* harmony export */   "lM": () => (/* binding */ assertNonUndefined),
/* harmony export */   "s8": () => (/* binding */ importAll)
/* harmony export */ });
// eslint-disable-next-line @typescript-eslint/no-explicit-any

var verifyFunctionType = func => typeof func === "function";
var createTuple = (val, length) => Array.from({
  length
}).fill(val);
var createTupleFromCallback = (val, length) => Array.from({
  length
}, val);
var verifyTupleType = (arr, length) => arr.length === length;
function assertNonUndefined(data) {
  if (data == null) throw new Error("Expected the data above to be anything but null or undefined");
}
function throwOnNever(arg) {
  console.dir(arg);
  throw new TypeError("Unexpected argument that is supposed to be of type never");
}
function importAll(r) {
  r.keys().forEach(r);
}
function getEnumKeys(object) {
  var resultingArray = [];
  var key;
  for (key in object) resultingArray.push(key);
  return resultingArray;
}

/***/ }),

/***/ 87792:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "$": () => (/* binding */ GameDisplayContext)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(89526);

var GameDisplayContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({});

/***/ }),

/***/ 97118:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "l": () => (/* binding */ PlaceholderWrapper)
});

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(89526);
// EXTERNAL MODULE: ./src/main/client/ts/components/BoardComponents/BoardPlaceholder/BoardPlaceholder.module.scss
var BoardPlaceholder_module = __webpack_require__(33432);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(17692);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(71972);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js + 1 modules
var inheritsLoose = __webpack_require__(51498);
;// CONCATENATED MODULE: ./node_modules/dom-helpers/esm/hasClass.js
/**
 * Checks if a given element has a CSS class.
 * 
 * @param element the element
 * @param className the CSS class name
 */
function hasClass(element, className) {
  if (element.classList) return !!className && element.classList.contains(className);
  return (" " + (element.className.baseVal || element.className) + " ").indexOf(" " + className + " ") !== -1;
}
;// CONCATENATED MODULE: ./node_modules/dom-helpers/esm/addClass.js

/**
 * Adds a CSS class to a given element.
 * 
 * @param element the element
 * @param className the CSS class name
 */

function addClass_addClass(element, className) {
  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + " " + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + " " + className);
}
;// CONCATENATED MODULE: ./node_modules/dom-helpers/esm/removeClass.js
function replaceClassName(origClass, classToRemove) {
  return origClass.replace(new RegExp("(^|\\s)" + classToRemove + "(?:\\s|$)", 'g'), '$1').replace(/\s+/g, ' ').replace(/^\s*|\s*$/g, '');
}
/**
 * Removes a CSS class from a given element.
 * 
 * @param element the element
 * @param className the CSS class name
 */


function removeClass_removeClass(element, className) {
  if (element.classList) {
    element.classList.remove(className);
  } else if (typeof element.className === 'string') {
    element.className = replaceClassName(element.className, className);
  } else {
    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));
  }
}
// EXTERNAL MODULE: ./node_modules/react-dom/index.js
var react_dom = __webpack_require__(73961);
;// CONCATENATED MODULE: ./node_modules/react-transition-group/esm/config.js
/* harmony default export */ var config = ({
  disabled: false
});
;// CONCATENATED MODULE: ./node_modules/react-transition-group/esm/TransitionGroupContext.js

/* harmony default export */ var TransitionGroupContext = (react.createContext(null));
;// CONCATENATED MODULE: ./node_modules/react-transition-group/esm/utils/reflow.js
var forceReflow = function forceReflow(node) {
  return node.scrollTop;
};
;// CONCATENATED MODULE: ./node_modules/react-transition-group/esm/Transition.js









var UNMOUNTED = 'unmounted';
var EXITED = 'exited';
var ENTERING = 'entering';
var ENTERED = 'entered';
var EXITING = 'exiting';
/**
 * The Transition component lets you describe a transition from one component
 * state to another _over time_ with a simple declarative API. Most commonly
 * it's used to animate the mounting and unmounting of a component, but can also
 * be used to describe in-place transition states as well.
 *
 * ---
 *
 * **Note**: `Transition` is a platform-agnostic base component. If you're using
 * transitions in CSS, you'll probably want to use
 * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)
 * instead. It inherits all the features of `Transition`, but contains
 * additional features necessary to play nice with CSS transitions (hence the
 * name of the component).
 *
 * ---
 *
 * By default the `Transition` component does not alter the behavior of the
 * component it renders, it only tracks "enter" and "exit" states for the
 * components. It's up to you to give meaning and effect to those states. For
 * example we can add styles to a component when it enters or exits:
 *
 * ```jsx
 * import { Transition } from 'react-transition-group';
 *
 * const duration = 300;
 *
 * const defaultStyle = {
 *   transition: `opacity ${duration}ms ease-in-out`,
 *   opacity: 0,
 * }
 *
 * const transitionStyles = {
 *   entering: { opacity: 1 },
 *   entered:  { opacity: 1 },
 *   exiting:  { opacity: 0 },
 *   exited:  { opacity: 0 },
 * };
 *
 * const Fade = ({ in: inProp }) => (
 *   <Transition in={inProp} timeout={duration}>
 *     {state => (
 *       <div style={{
 *         ...defaultStyle,
 *         ...transitionStyles[state]
 *       }}>
 *         I'm a fade Transition!
 *       </div>
 *     )}
 *   </Transition>
 * );
 * ```
 *
 * There are 4 main states a Transition can be in:
 *  - `'entering'`
 *  - `'entered'`
 *  - `'exiting'`
 *  - `'exited'`
 *
 * Transition state is toggled via the `in` prop. When `true` the component
 * begins the "Enter" stage. During this stage, the component will shift from
 * its current transition state, to `'entering'` for the duration of the
 * transition and then to the `'entered'` stage once it's complete. Let's take
 * the following example (we'll use the
 * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):
 *
 * ```jsx
 * function App() {
 *   const [inProp, setInProp] = useState(false);
 *   return (
 *     <div>
 *       <Transition in={inProp} timeout={500}>
 *         {state => (
 *           // ...
 *         )}
 *       </Transition>
 *       <button onClick={() => setInProp(true)}>
 *         Click to Enter
 *       </button>
 *     </div>
 *   );
 * }
 * ```
 *
 * When the button is clicked the component will shift to the `'entering'` state
 * and stay there for 500ms (the value of `timeout`) before it finally switches
 * to `'entered'`.
 *
 * When `in` is `false` the same thing happens except the state moves from
 * `'exiting'` to `'exited'`.
 */

var Transition = /*#__PURE__*/function (_React$Component) {
  (0,inheritsLoose/* default */.Z)(Transition, _React$Component);

  function Transition(props, context) {
    var _this;

    _this = _React$Component.call(this, props, context) || this;
    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears

    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;
    var initialStatus;
    _this.appearStatus = null;

    if (props.in) {
      if (appear) {
        initialStatus = EXITED;
        _this.appearStatus = ENTERING;
      } else {
        initialStatus = ENTERED;
      }
    } else {
      if (props.unmountOnExit || props.mountOnEnter) {
        initialStatus = UNMOUNTED;
      } else {
        initialStatus = EXITED;
      }
    }

    _this.state = {
      status: initialStatus
    };
    _this.nextCallback = null;
    return _this;
  }

  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {
    var nextIn = _ref.in;

    if (nextIn && prevState.status === UNMOUNTED) {
      return {
        status: EXITED
      };
    }

    return null;
  } // getSnapshotBeforeUpdate(prevProps) {
  //   let nextStatus = null
  //   if (prevProps !== this.props) {
  //     const { status } = this.state
  //     if (this.props.in) {
  //       if (status !== ENTERING && status !== ENTERED) {
  //         nextStatus = ENTERING
  //       }
  //     } else {
  //       if (status === ENTERING || status === ENTERED) {
  //         nextStatus = EXITING
  //       }
  //     }
  //   }
  //   return { nextStatus }
  // }
  ;

  var _proto = Transition.prototype;

  _proto.componentDidMount = function componentDidMount() {
    this.updateStatus(true, this.appearStatus);
  };

  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    var nextStatus = null;

    if (prevProps !== this.props) {
      var status = this.state.status;

      if (this.props.in) {
        if (status !== ENTERING && status !== ENTERED) {
          nextStatus = ENTERING;
        }
      } else {
        if (status === ENTERING || status === ENTERED) {
          nextStatus = EXITING;
        }
      }
    }

    this.updateStatus(false, nextStatus);
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    this.cancelNextCallback();
  };

  _proto.getTimeouts = function getTimeouts() {
    var timeout = this.props.timeout;
    var exit, enter, appear;
    exit = enter = appear = timeout;

    if (timeout != null && typeof timeout !== 'number') {
      exit = timeout.exit;
      enter = timeout.enter; // TODO: remove fallback for next major

      appear = timeout.appear !== undefined ? timeout.appear : enter;
    }

    return {
      exit: exit,
      enter: enter,
      appear: appear
    };
  };

  _proto.updateStatus = function updateStatus(mounting, nextStatus) {
    if (mounting === void 0) {
      mounting = false;
    }

    if (nextStatus !== null) {
      // nextStatus will always be ENTERING or EXITING.
      this.cancelNextCallback();

      if (nextStatus === ENTERING) {
        if (this.props.unmountOnExit || this.props.mountOnEnter) {
          var node = this.props.nodeRef ? this.props.nodeRef.current : react_dom.findDOMNode(this); // https://github.com/reactjs/react-transition-group/pull/749
          // With unmountOnExit or mountOnEnter, the enter animation should happen at the transition between `exited` and `entering`.
          // To make the animation happen,  we have to separate each rendering and avoid being processed as batched.

          if (node) forceReflow(node);
        }

        this.performEnter(mounting);
      } else {
        this.performExit();
      }
    } else if (this.props.unmountOnExit && this.state.status === EXITED) {
      this.setState({
        status: UNMOUNTED
      });
    }
  };

  _proto.performEnter = function performEnter(mounting) {
    var _this2 = this;

    var enter = this.props.enter;
    var appearing = this.context ? this.context.isMounting : mounting;

    var _ref2 = this.props.nodeRef ? [appearing] : [react_dom.findDOMNode(this), appearing],
        maybeNode = _ref2[0],
        maybeAppearing = _ref2[1];

    var timeouts = this.getTimeouts();
    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED
    // if we are mounting and running this it means appear _must_ be set

    if (!mounting && !enter || config.disabled) {
      this.safeSetState({
        status: ENTERED
      }, function () {
        _this2.props.onEntered(maybeNode);
      });
      return;
    }

    this.props.onEnter(maybeNode, maybeAppearing);
    this.safeSetState({
      status: ENTERING
    }, function () {
      _this2.props.onEntering(maybeNode, maybeAppearing);

      _this2.onTransitionEnd(enterTimeout, function () {
        _this2.safeSetState({
          status: ENTERED
        }, function () {
          _this2.props.onEntered(maybeNode, maybeAppearing);
        });
      });
    });
  };

  _proto.performExit = function performExit() {
    var _this3 = this;

    var exit = this.props.exit;
    var timeouts = this.getTimeouts();
    var maybeNode = this.props.nodeRef ? undefined : react_dom.findDOMNode(this); // no exit animation skip right to EXITED

    if (!exit || config.disabled) {
      this.safeSetState({
        status: EXITED
      }, function () {
        _this3.props.onExited(maybeNode);
      });
      return;
    }

    this.props.onExit(maybeNode);
    this.safeSetState({
      status: EXITING
    }, function () {
      _this3.props.onExiting(maybeNode);

      _this3.onTransitionEnd(timeouts.exit, function () {
        _this3.safeSetState({
          status: EXITED
        }, function () {
          _this3.props.onExited(maybeNode);
        });
      });
    });
  };

  _proto.cancelNextCallback = function cancelNextCallback() {
    if (this.nextCallback !== null) {
      this.nextCallback.cancel();
      this.nextCallback = null;
    }
  };

  _proto.safeSetState = function safeSetState(nextState, callback) {
    // This shouldn't be necessary, but there are weird race conditions with
    // setState callbacks and unmounting in testing, so always make sure that
    // we can cancel any pending setState callbacks after we unmount.
    callback = this.setNextCallback(callback);
    this.setState(nextState, callback);
  };

  _proto.setNextCallback = function setNextCallback(callback) {
    var _this4 = this;

    var active = true;

    this.nextCallback = function (event) {
      if (active) {
        active = false;
        _this4.nextCallback = null;
        callback(event);
      }
    };

    this.nextCallback.cancel = function () {
      active = false;
    };

    return this.nextCallback;
  };

  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {
    this.setNextCallback(handler);
    var node = this.props.nodeRef ? this.props.nodeRef.current : react_dom.findDOMNode(this);
    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;

    if (!node || doesNotHaveTimeoutOrListener) {
      setTimeout(this.nextCallback, 0);
      return;
    }

    if (this.props.addEndListener) {
      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],
          maybeNode = _ref3[0],
          maybeNextCallback = _ref3[1];

      this.props.addEndListener(maybeNode, maybeNextCallback);
    }

    if (timeout != null) {
      setTimeout(this.nextCallback, timeout);
    }
  };

  _proto.render = function render() {
    var status = this.state.status;

    if (status === UNMOUNTED) {
      return null;
    }

    var _this$props = this.props,
        children = _this$props.children,
        _in = _this$props.in,
        _mountOnEnter = _this$props.mountOnEnter,
        _unmountOnExit = _this$props.unmountOnExit,
        _appear = _this$props.appear,
        _enter = _this$props.enter,
        _exit = _this$props.exit,
        _timeout = _this$props.timeout,
        _addEndListener = _this$props.addEndListener,
        _onEnter = _this$props.onEnter,
        _onEntering = _this$props.onEntering,
        _onEntered = _this$props.onEntered,
        _onExit = _this$props.onExit,
        _onExiting = _this$props.onExiting,
        _onExited = _this$props.onExited,
        _nodeRef = _this$props.nodeRef,
        childProps = (0,objectWithoutPropertiesLoose/* default */.Z)(_this$props, ["children", "in", "mountOnEnter", "unmountOnExit", "appear", "enter", "exit", "timeout", "addEndListener", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "nodeRef"]);

    return (
      /*#__PURE__*/
      // allows for nested Transitions
      react.createElement(TransitionGroupContext.Provider, {
        value: null
      }, typeof children === 'function' ? children(status, childProps) : react.cloneElement(react.Children.only(children), childProps))
    );
  };

  return Transition;
}(react.Component);

Transition.contextType = TransitionGroupContext;
Transition.propTypes =  false ? 0 : {}; // Name the function so it is clearer in the documentation

function noop() {}

Transition.defaultProps = {
  in: false,
  mountOnEnter: false,
  unmountOnExit: false,
  appear: false,
  enter: true,
  exit: true,
  onEnter: noop,
  onEntering: noop,
  onEntered: noop,
  onExit: noop,
  onExiting: noop,
  onExited: noop
};
Transition.UNMOUNTED = UNMOUNTED;
Transition.EXITED = EXITED;
Transition.ENTERING = ENTERING;
Transition.ENTERED = ENTERED;
Transition.EXITING = EXITING;
/* harmony default export */ var esm_Transition = (Transition);
;// CONCATENATED MODULE: ./node_modules/react-transition-group/esm/CSSTransition.js











var _addClass = function addClass(node, classes) {
  return node && classes && classes.split(' ').forEach(function (c) {
    return addClass_addClass(node, c);
  });
};

var removeClass = function removeClass(node, classes) {
  return node && classes && classes.split(' ').forEach(function (c) {
    return removeClass_removeClass(node, c);
  });
};
/**
 * A transition component inspired by the excellent
 * [ng-animate](https://docs.angularjs.org/api/ngAnimate) library, you should
 * use it if you're using CSS transitions or animations. It's built upon the
 * [`Transition`](https://reactcommunity.org/react-transition-group/transition)
 * component, so it inherits all of its props.
 *
 * `CSSTransition` applies a pair of class names during the `appear`, `enter`,
 * and `exit` states of the transition. The first class is applied and then a
 * second `*-active` class in order to activate the CSS transition. After the
 * transition, matching `*-done` class names are applied to persist the
 * transition state.
 *
 * ```jsx
 * function App() {
 *   const [inProp, setInProp] = useState(false);
 *   return (
 *     <div>
 *       <CSSTransition in={inProp} timeout={200} classNames="my-node">
 *         <div>
 *           {"I'll receive my-node-* classes"}
 *         </div>
 *       </CSSTransition>
 *       <button type="button" onClick={() => setInProp(true)}>
 *         Click to Enter
 *       </button>
 *     </div>
 *   );
 * }
 * ```
 *
 * When the `in` prop is set to `true`, the child component will first receive
 * the class `example-enter`, then the `example-enter-active` will be added in
 * the next tick. `CSSTransition` [forces a
 * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)
 * between before adding the `example-enter-active`. This is an important trick
 * because it allows us to transition between `example-enter` and
 * `example-enter-active` even though they were added immediately one after
 * another. Most notably, this is what makes it possible for us to animate
 * _appearance_.
 *
 * ```css
 * .my-node-enter {
 *   opacity: 0;
 * }
 * .my-node-enter-active {
 *   opacity: 1;
 *   transition: opacity 200ms;
 * }
 * .my-node-exit {
 *   opacity: 1;
 * }
 * .my-node-exit-active {
 *   opacity: 0;
 *   transition: opacity 200ms;
 * }
 * ```
 *
 * `*-active` classes represent which styles you want to animate **to**, so it's
 * important to add `transition` declaration only to them, otherwise transitions
 * might not behave as intended! This might not be obvious when the transitions
 * are symmetrical, i.e. when `*-enter-active` is the same as `*-exit`, like in
 * the example above (minus `transition`), but it becomes apparent in more
 * complex transitions.
 *
 * **Note**: If you're using the
 * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)
 * prop, make sure to define styles for `.appear-*` classes as well.
 */


var CSSTransition = /*#__PURE__*/function (_React$Component) {
  (0,inheritsLoose/* default */.Z)(CSSTransition, _React$Component);

  function CSSTransition() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.appliedClasses = {
      appear: {},
      enter: {},
      exit: {}
    };

    _this.onEnter = function (maybeNode, maybeAppearing) {
      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing),
          node = _this$resolveArgument[0],
          appearing = _this$resolveArgument[1];

      _this.removeClasses(node, 'exit');

      _this.addClass(node, appearing ? 'appear' : 'enter', 'base');

      if (_this.props.onEnter) {
        _this.props.onEnter(maybeNode, maybeAppearing);
      }
    };

    _this.onEntering = function (maybeNode, maybeAppearing) {
      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing),
          node = _this$resolveArgument2[0],
          appearing = _this$resolveArgument2[1];

      var type = appearing ? 'appear' : 'enter';

      _this.addClass(node, type, 'active');

      if (_this.props.onEntering) {
        _this.props.onEntering(maybeNode, maybeAppearing);
      }
    };

    _this.onEntered = function (maybeNode, maybeAppearing) {
      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing),
          node = _this$resolveArgument3[0],
          appearing = _this$resolveArgument3[1];

      var type = appearing ? 'appear' : 'enter';

      _this.removeClasses(node, type);

      _this.addClass(node, type, 'done');

      if (_this.props.onEntered) {
        _this.props.onEntered(maybeNode, maybeAppearing);
      }
    };

    _this.onExit = function (maybeNode) {
      var _this$resolveArgument4 = _this.resolveArguments(maybeNode),
          node = _this$resolveArgument4[0];

      _this.removeClasses(node, 'appear');

      _this.removeClasses(node, 'enter');

      _this.addClass(node, 'exit', 'base');

      if (_this.props.onExit) {
        _this.props.onExit(maybeNode);
      }
    };

    _this.onExiting = function (maybeNode) {
      var _this$resolveArgument5 = _this.resolveArguments(maybeNode),
          node = _this$resolveArgument5[0];

      _this.addClass(node, 'exit', 'active');

      if (_this.props.onExiting) {
        _this.props.onExiting(maybeNode);
      }
    };

    _this.onExited = function (maybeNode) {
      var _this$resolveArgument6 = _this.resolveArguments(maybeNode),
          node = _this$resolveArgument6[0];

      _this.removeClasses(node, 'exit');

      _this.addClass(node, 'exit', 'done');

      if (_this.props.onExited) {
        _this.props.onExited(maybeNode);
      }
    };

    _this.resolveArguments = function (maybeNode, maybeAppearing) {
      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] // here `maybeNode` is actually `appearing`
      : [maybeNode, maybeAppearing];
    };

    _this.getClassNames = function (type) {
      var classNames = _this.props.classNames;
      var isStringClassNames = typeof classNames === 'string';
      var prefix = isStringClassNames && classNames ? classNames + "-" : '';
      var baseClassName = isStringClassNames ? "" + prefix + type : classNames[type];
      var activeClassName = isStringClassNames ? baseClassName + "-active" : classNames[type + "Active"];
      var doneClassName = isStringClassNames ? baseClassName + "-done" : classNames[type + "Done"];
      return {
        baseClassName: baseClassName,
        activeClassName: activeClassName,
        doneClassName: doneClassName
      };
    };

    return _this;
  }

  var _proto = CSSTransition.prototype;

  _proto.addClass = function addClass(node, type, phase) {
    var className = this.getClassNames(type)[phase + "ClassName"];

    var _this$getClassNames = this.getClassNames('enter'),
        doneClassName = _this$getClassNames.doneClassName;

    if (type === 'appear' && phase === 'done' && doneClassName) {
      className += " " + doneClassName;
    } // This is to force a repaint,
    // which is necessary in order to transition styles when adding a class name.


    if (phase === 'active') {
      if (node) forceReflow(node);
    }

    if (className) {
      this.appliedClasses[type][phase] = className;

      _addClass(node, className);
    }
  };

  _proto.removeClasses = function removeClasses(node, type) {
    var _this$appliedClasses$ = this.appliedClasses[type],
        baseClassName = _this$appliedClasses$.base,
        activeClassName = _this$appliedClasses$.active,
        doneClassName = _this$appliedClasses$.done;
    this.appliedClasses[type] = {};

    if (baseClassName) {
      removeClass(node, baseClassName);
    }

    if (activeClassName) {
      removeClass(node, activeClassName);
    }

    if (doneClassName) {
      removeClass(node, doneClassName);
    }
  };

  _proto.render = function render() {
    var _this$props = this.props,
        _ = _this$props.classNames,
        props = (0,objectWithoutPropertiesLoose/* default */.Z)(_this$props, ["classNames"]);

    return /*#__PURE__*/react.createElement(esm_Transition, (0,esm_extends/* default */.Z)({}, props, {
      onEnter: this.onEnter,
      onEntered: this.onEntered,
      onEntering: this.onEntering,
      onExit: this.onExit,
      onExiting: this.onExiting,
      onExited: this.onExited
    }));
  };

  return CSSTransition;
}(react.Component);

CSSTransition.defaultProps = {
  classNames: ''
};
CSSTransition.propTypes =  false ? 0 : {};
/* harmony default export */ var esm_CSSTransition = (CSSTransition);
;// CONCATENATED MODULE: ./src/main/client/ts/components/BoardComponents/BoardPlaceholder/PlaceholderInterface.tsx



var PlaceholderWrapper = _ref => {
  var enabled = _ref.enabled,
    children = _ref.children;
  return /*#__PURE__*/react.createElement("div", {
    className: BoardPlaceholder_module/* default.placeholder-wrap */.Z["placeholder-wrap"]
  }, /*#__PURE__*/react.createElement(esm_CSSTransition, {
    in: enabled,
    timeout: {
      enter: 0,
      exit: 300
    },
    unmountOnExit: true,
    classNames: {
      enterActive: BoardPlaceholder_module/* default.placeholder--enter-active */.Z["placeholder--enter-active"],
      enterDone: BoardPlaceholder_module/* default.placeholder--enter-done */.Z["placeholder--enter-done"],
      exitActive: BoardPlaceholder_module/* default.placeholder--exit-active */.Z["placeholder--exit-active"],
      exitDone: BoardPlaceholder_module/* default.placeholder--exit-done */.Z["placeholder--exit-done"]
    }
  }, children));
};

/***/ }),

/***/ 72293:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Th": () => (/* binding */ GameDisplay),
  "Hn": () => (/* binding */ alterCoordinate),
  "LS": () => (/* binding */ cornerAreaToPx),
  "w0": () => (/* binding */ dimensionRegressionConstant),
  "uh": () => (/* binding */ getCSSPropertiesFromDimension)
});

// UNUSED EXPORTS: cornerArea

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(89526);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/Board/BoardInterface.ts
var BoardInterface = __webpack_require__(29939);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/GameInformation/GameUnits/PieceString.ts
var PieceString = __webpack_require__(20915);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/MoveTree/MoveTreeInterface.ts
var MoveTreeInterface = __webpack_require__(37017);
// EXTERNAL MODULE: ./src/main/client/ts/components/BoardComponents/GameDisplay/GameDisplay.module.scss
var GameDisplay_module = __webpack_require__(91219);
// EXTERNAL MODULE: ./src/main/client/ts/components/BoardComponents/GameDisplay/GameDisplayPiece.tsx + 5 modules
var GameDisplayPiece = __webpack_require__(15246);
// EXTERNAL MODULE: ./src/main/client/ts/logic/index/GameBoardSlice.ts + 1 modules
var GameBoardSlice = __webpack_require__(28150);
// EXTERNAL MODULE: ./node_modules/react-redux/es/index.js + 13 modules
var es = __webpack_require__(12384);
// EXTERNAL MODULE: ./src/main/client/ts/components/BoardComponents/BoardContext.ts
var BoardContext = __webpack_require__(87792);
;// CONCATENATED MODULE: ./src/main/client/ts/components/BoardComponents/GameDisplay/GameDisplayPromotion.tsx
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }







var PromotionDialog = props => {
  var id = (0,react.useContext)(BoardContext/* GameDisplayContext */.$).id;
  var chainedMoveSettings = (0,es/* useSelector */.v9)(state => (0,GameBoardSlice/* selectChainedMoveSettings */.hB)(state, id));
  if (!chainedMoveSettings.promotionOptions) return null;
  var promotionOptions = chainedMoveSettings.promotionOptions;
  if (!promotionOptions.promotion) {
    props.onPieceClickCallback(promotionOptions);
    return null;
  }
  var elements = promotionOptions.promotion.slice(0, props.promotionPieceLimit);
  var dimension = 1;
  while (elements.length > dimension * dimension) {
    dimension++;
  }
  var borderPadding = props.pieceSize * dimension / 20;
  var totalDimensionSize = props.pieceSize * dimension + borderPadding;
  var calcStyles = {
    width: "".concat(totalDimensionSize, "px"),
    height: "".concat(totalDimensionSize, "px")
  };
  return /*#__PURE__*/react.createElement("div", {
    className: GameDisplay_module/* default.promotion-dialog */.Z["promotion-dialog"],
    style: calcStyles
  }, elements.map((pieceString, i) => {
    return /*#__PURE__*/react.createElement("div", {
      key: "".concat(pieceString.value, "-").concat(i),
      className: GameDisplay_module/* default.promotion-dialog__piece-display */.Z["promotion-dialog__piece-display"],
      onClick: () => props.onPieceClickCallback(_objectSpread(_objectSpread({}, promotionOptions), {}, {
        promotion: [pieceString]
      }))
    }, /*#__PURE__*/react.createElement(GameDisplayPiece/* PieceImage */.x6, {
      pieceString: PieceString/* PieceString.fromObjectToClass */.Ff.fromObjectToClass(pieceString)
    }));
  }));
};
// EXTERNAL MODULE: ./src/main/client/ts/components/BoardComponents/GameDisplay/GameDisplaySquare.tsx + 1 modules
var GameDisplaySquare = __webpack_require__(59065);
// EXTERNAL MODULE: ./src/main/client/ts/components/BoardComponents/GameDisplay/GameDisplayBank.tsx
var GameDisplayBank = __webpack_require__(75424);
// EXTERNAL MODULE: ./src/main/client/ts/redux/WorkerSync/WorkerSaga.ts
var WorkerSaga = __webpack_require__(34972);
// EXTERNAL MODULE: ./src/main/client/ts/hooks/useTimer.ts
var useTimer = __webpack_require__(46396);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js
var injectStylesIntoStyleTag = __webpack_require__(75701);
var injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(injectStylesIntoStyleTag);
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./src/main/client/scss/Arrows.module.scss
var Arrows_module = __webpack_require__(81689);
;// CONCATENATED MODULE: ./src/main/client/scss/Arrows.module.scss

            

var options = {};

options.insert = "head";
options.singleton = false;

var update = injectStylesIntoStyleTag_default()(Arrows_module/* default */.Z, options);



/* harmony default export */ var scss_Arrows_module = (Arrows_module/* default.locals */.Z.locals || {});
// EXTERNAL MODULE: ./src/main/client/ts/baseTypes.ts
var baseTypes = __webpack_require__(18027);
;// CONCATENATED MODULE: ./src/main/client/ts/components/BoardComponents/GameDisplay/GameDisplayChainedMoveNotice.tsx
function _objectDestructuringEmpty(obj) { if (obj == null) throw new TypeError("Cannot destructure " + obj); }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }









var ChainedMoveNoticeType = {
  SEIRAWAN_DROP: 0,
  MOVE_DUCK: 1,
  DROP_DUCK: 2
};
var seirawanCountdownNumbers = {
  START_SECONDS: 25,
  BLINKING_START: 15,
  WARNING_START: 5
};
var duckCountdownNumbers = {
  START_SECONDS: 20,
  BLINKING_START: 10,
  WARNING_START: 5
};
var GameDisplayChainedMoveNotice = props => {
  var _useContext = (0,react.useContext)(BoardContext/* GameDisplayContext */.$),
    id = _useContext.id,
    worker = _useContext.worker;
  var chainedMoveSettings = (0,es/* useSelector */.v9)(state => (0,GameBoardSlice/* selectChainedMoveSettings */.hB)(state, id));
  var _useTimer = (0,useTimer/* useTimer */.J)({
      totalTime: (props.noticeType === ChainedMoveNoticeType.SEIRAWAN_DROP ? seirawanCountdownNumbers : duckCountdownNumbers).START_SECONDS,
      interval: 1000,
      onTimeout: () => {
        if (props.noticeType === ChainedMoveNoticeType.SEIRAWAN_DROP) {
          cancelSeirawanDrop();
        } else cancelDuckDrop();
      }
    }),
    secondsLeft = _useTimer.secondsLeft,
    stop = _useTimer.stop,
    start = _useTimer.start;
  var dispatch = (0,es/* useDispatch */.I0)();
  var cancelSeirawanDrop = (0,react.useCallback)(() => {
    if (!chainedMoveSettings.seirawanDrops) return;
    stop();
    var copiedMove = _extends({}, (_objectDestructuringEmpty(chainedMoveSettings.seirawanDrops.move), chainedMoveSettings.seirawanDrops.move));
    delete copiedMove.nextChainedMoves;
    var newMove = copiedMove;
    if (chainedMoveSettings.seirawanDrops.chainedMoves.length > 0) {
      var chainedMovesIterator = chainedMoveSettings.seirawanDrops.chainedMoves.values();
      var yieldedDrop = chainedMovesIterator.next().value;
      if (yieldedDrop.nextChainedMoves) {
        newMove.nextChainedMoves = yieldedDrop.nextChainedMoves;
      }
    }
    dispatch((0,WorkerSaga/* createMoveAction */.sF)({
      id,
      worker,
      args: [[copiedMove]]
    }));
  }, [chainedMoveSettings.seirawanDrops, dispatch, id, worker, stop]);
  var cancelDuckDrop = (0,react.useCallback)(() => {
    stop();
    dispatch((0,GameBoardSlice/* resetInteractionSettings */.X3)({
      id
    }));
  }, [id, dispatch, stop]);
  (0,react.useEffect)(() => {
    if (props.noticeType !== false) start();
  }, [props.noticeType, start]);
  if (props.noticeType === false) return null;
  switch (props.noticeType) {
    case ChainedMoveNoticeType.SEIRAWAN_DROP:
      {
        var className = "".concat(GameDisplay_module/* default.chained-move-notice */.Z["chained-move-notice"], " ").concat(GameDisplay_module/* default.chained-move-notice--seirawan-drop */.Z["chained-move-notice--seirawan-drop"]);
        if (secondsLeft <= seirawanCountdownNumbers.BLINKING_START) {
          className += " " + GameDisplay_module/* default.chained-move-notice--blink */.Z["chained-move-notice--blink"];
        }
        return /*#__PURE__*/react.createElement("div", {
          className: className,
          onClick: () => cancelSeirawanDrop()
        }, /*#__PURE__*/react.createElement("span", {
          className: GameDisplay_module/* default.chained-move-notice__description */.Z["chained-move-notice__description"]
        }, "Continue without placing a piece"), secondsLeft <= seirawanCountdownNumbers.WARNING_START ? /*#__PURE__*/react.createElement("span", {
          className: GameDisplay_module/* default.chained-move-notice__countdown */.Z["chained-move-notice__countdown"]
        }, secondsLeft) : /*#__PURE__*/react.createElement("div", {
          className: GameDisplay_module/* default.chained-move-notice__arrow */.Z["chained-move-notice__arrow"]
        }, /*#__PURE__*/react.createElement("div", {
          className: scss_Arrows_module["prolonged-concave-arrow-wrap"]
        }, /*#__PURE__*/react.createElement("div", {
          className: scss_Arrows_module["prolonged-concave-arrow"]
        }))));
      }
    case ChainedMoveNoticeType.DROP_DUCK:
    case ChainedMoveNoticeType.MOVE_DUCK:
      {
        var _className = "".concat(GameDisplay_module/* default.chained-move-notice */.Z["chained-move-notice"]);
        if (secondsLeft <= duckCountdownNumbers.WARNING_START) {
          _className += " " + GameDisplay_module/* default.chained-move-notice--duck-move */.Z["chained-move-notice--duck-move"];
        } else if (secondsLeft <= seirawanCountdownNumbers.BLINKING_START) {
          _className += " ".concat(GameDisplay_module/* default.chained-move-notice--duck-move */.Z["chained-move-notice--duck-move"], " ").concat(GameDisplay_module/* default.chained-move-notice--blink */.Z["chained-move-notice--blink"]);
        }
        return /*#__PURE__*/react.createElement("div", {
          className: _className
        }, /*#__PURE__*/react.createElement("span", {
          className: GameDisplay_module/* default.chained-move-notice__description */.Z["chained-move-notice__description"]
        }, props.noticeType === ChainedMoveNoticeType.MOVE_DUCK ? "Move the duck!" : "Click on a square to place the duck!"), /*#__PURE__*/react.createElement("span", {
          className: GameDisplay_module/* default.chained-move-notice__takeback-icon */.Z["chained-move-notice__takeback-icon"],
          onClick: () => cancelDuckDrop()
        }));
      }
    default:
      return (0,baseTypes/* throwOnNever */.h0)(props.noticeType);
  }
};
// EXTERNAL MODULE: ./src/main/client/ts/components/BoardComponents/GameDisplay/GameDisplayPlayerBox.tsx + 1 modules
var GameDisplayPlayerBox = __webpack_require__(58924);
// EXTERNAL MODULE: ./src/main/client/ts/components/BoardComponents/GameDisplay/GameSquareWrap.tsx + 1 modules
var GameSquareWrap = __webpack_require__(52423);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/GameInformation/GameUnits/GameUnits.ts
var GameUnits = __webpack_require__(9960);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/GameInformation/GameData.ts
var GameData = __webpack_require__(76758);
// EXTERNAL MODULE: ./src/main/client/ts/logic/utils/Tags/TagLogic/FENDataTag.ts
var FENDataTag = __webpack_require__(80913);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/MoveTree/MoveTree.ts + 1 modules
var MoveTree = __webpack_require__(99234);
// EXTERNAL MODULE: ./src/main/client/ts/interfaces/Colors.ts
var Colors = __webpack_require__(7970);
;// CONCATENATED MODULE: ./src/main/client/ts/components/BoardComponents/GameDisplay/Arrows/GameArrowsCanvas.ts
function GameArrowsCanvas_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function GameArrowsCanvas_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? GameArrowsCanvas_ownKeys(Object(source), !0).forEach(function (key) { GameArrowsCanvas_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : GameArrowsCanvas_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function GameArrowsCanvas_defineProperty(obj, key, value) { key = GameArrowsCanvas_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function GameArrowsCanvas_toPropertyKey(arg) { var key = GameArrowsCanvas_toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function GameArrowsCanvas_toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }




var colors = {
  [0]: (0,Colors/* createHexColor */.TG)("#F8553F"),
  [1]: (0,Colors/* createHexColor */.TG)("#48C1F9"),
  [2]: (0,Colors/* createHexColor */.TG)("#FFAA00"),
  [3]: (0,Colors/* createHexColor */.TG)("#9FCF3F")
};
class ArrowsCanvas {
  constructor(canvas, drawingCanvas, dimension) {
    GameArrowsCanvas_defineProperty(this, "boardRatio", void 0);
    GameArrowsCanvas_defineProperty(this, "canvasRatio", void 0);
    GameArrowsCanvas_defineProperty(this, "resolution", void 0);
    GameArrowsCanvas_defineProperty(this, "startingPoint", {
      x: 0,
      y: 0
    });
    GameArrowsCanvas_defineProperty(this, "endPoint", {
      x: 0,
      y: 0
    });
    GameArrowsCanvas_defineProperty(this, "isMouseDown", false);
    GameArrowsCanvas_defineProperty(this, "drawingContext", void 0);
    GameArrowsCanvas_defineProperty(this, "context", void 0);
    this.canvas = canvas;
    this.dimension = dimension;
    var nullableContext = canvas.getContext("2d");
    (0,baseTypes/* assertNonUndefined */.lM)(nullableContext);
    var canvasSize = cornerAreaToPx * dimension;
    canvas.width = canvas.height = drawingCanvas.width = drawingCanvas.height = dimension * cornerAreaToPx * ArrowsCanvas.SCALE;
    this.context = nullableContext;
    this.context.scale(ArrowsCanvas.SCALE, ArrowsCanvas.SCALE);
    var nullableDrawingContext = drawingCanvas.getContext("2d");
    (0,baseTypes/* assertNonUndefined */.lM)(nullableDrawingContext);
    this.drawingContext = nullableDrawingContext;
    this.drawingContext.scale(ArrowsCanvas.SCALE, ArrowsCanvas.SCALE);
    this.resolution = dimensionRegressionConstant / dimension / ArrowsCanvas.SCALE;
    this.canvasRatio = canvasSize / dimension;
    this.boardRatio = dimension / GameData/* boardDimension */.iJ;
    this.setColor(this.drawingContext, 2);
    this.setColor(this.context, 2);
  }
  numberToCoordinate(num) {
    return cornerAreaToPx * Math.floor(num / cornerAreaToPx) + cornerAreaToPx / 2;
  }
  highlightSquare(context, _ref) {
    var x = _ref.x,
      y = _ref.y;
    context.beginPath();
    context.lineWidth = 3;
    context.arc(x, y, this.resolution - 5, 0, ArrowsCanvas.PI_RADIUS);
    context.stroke();
  }
  drawArrowHead(context, _ref2, _ref3) {
    var startX = _ref2.x,
      startY = _ref2.y;
    var endX = _ref3.x,
      endY = _ref3.y;
    var angle,
      x = 0,
      y = 0;
    var alterXY = () => {
      x = this.resolution / 2 * Math.cos(angle) + endX;
      y = this.resolution / 2 * Math.sin(angle) + endY;
    };
    context.beginPath();
    angle = Math.atan2(endY - startY, endX - startX);
    alterXY();
    context.moveTo(x, y);
    for (var i = 0; i < 2; i++) {
      angle += 1 / 3 * ArrowsCanvas.PI_RADIUS;
      alterXY();
      context.lineTo(x, y);
    }
    context.closePath();
    context.fill();
  }
  highlightWithArrow(context, start, _ref4) {
    var endX = _ref4.x,
      endY = _ref4.y;
    var startX = start.x,
      startY = start.y;
    var xFactor, yFactor;
    if (startX === endX) {
      yFactor = Math.sign(endY - startY) * (cornerAreaToPx >> 2);
      xFactor = 0;
    } else if (startY === endY) {
      xFactor = Math.sign(endX - startX) * (cornerAreaToPx >> 2);
      yFactor = 0;
    } else {
      var slope = Math.abs((endY - startY) / (endX - startX));
      xFactor = Math.sign(endX - startX) * (cornerAreaToPx >> 2) / Math.sqrt(slope * slope);
      yFactor = Math.sign(endY - startY) * Math.abs(xFactor) * slope;
    }
    context.beginPath();
    context.lineCap = "round";
    context.lineWidth = ArrowsCanvas.ARROW_STEM_WIDTH;
    context.moveTo(startX, startY);
    var endXFactor = endX - xFactor,
      endYFactor = endY - yFactor;
    context.lineTo(endXFactor, endYFactor);
    context.stroke();
    this.drawArrowHead(context, start, {
      x: endXFactor,
      y: endYFactor
    });
  }
  getMousePosition(mouseEvent) {
    var rect = this.canvas.getBoundingClientRect();
    return {
      x: this.numberToCoordinate((mouseEvent.clientX - rect.left) * this.boardRatio),
      y: this.numberToCoordinate((mouseEvent.clientY - rect.top) * this.boardRatio)
    };
  }
  setColor(context, color) {
    context.strokeStyle = context.fillStyle = (0,Colors/* wrapIndexedColor */.Hi)(colors[color]);
  }
  adaptNumber(num) {
    return num * this.dimension / GameData/* boardDimension */.iJ * this.canvasRatio;
  }
  clearCanvas() {
    this.drawingContext.clearRect(0, 0, this.canvas.width, this.canvas.height);
    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);
  }
  getNumericColorFromKeys(keys) {
    if (keys.has("Alt")) {
      return 1;
    } else if (keys.has("Control")) {
      return 0;
    } else if (keys.has("Shift")) {
      return 3;
    } else {
      return 2;
    }
  }
  setKeysPressed(keys) {
    var color = this.getNumericColorFromKeys(keys);
    this.setColor(this.drawingContext, color);
    this.setColor(this.context, color);
    if (this.isMouseDown) {
      this.drawingContext.clearRect(0, 0, this.canvas.width, this.canvas.height);
      if (this.startingPoint.x === this.endPoint.x && this.startingPoint.y === this.endPoint.y) {
        this.highlightSquare(this.drawingContext, this.startingPoint);
      } else {
        this.highlightWithArrow(this.drawingContext, this.startingPoint, this.endPoint);
      }
    }
  }
  drawSquare(_ref5) {
    var _ref6 = _slicedToArray(_ref5, 2),
      color = _ref6[0],
      _ref6$ = _slicedToArray(_ref6[1], 2),
      x = _ref6$[0],
      y = _ref6$[1];
    this.setColor(this.context, color);
    var canvasX = this.numberToCoordinate(this.adaptNumber(x)),
      canvasY = this.numberToCoordinate(this.adaptNumber(y));
    this.highlightSquare(this.context, {
      x: canvasX,
      y: canvasY
    });
  }
  drawArrow(_ref7) {
    var _ref8 = _slicedToArray(_ref7, 3),
      color = _ref8[0],
      _ref8$ = _slicedToArray(_ref8[1], 2),
      startX = _ref8$[0],
      startY = _ref8$[1],
      _ref8$2 = _slicedToArray(_ref8[2], 2),
      endX = _ref8$2[0],
      endY = _ref8$2[1];
    this.setColor(this.context, color);
    this.highlightWithArrow(this.context, {
      x: this.numberToCoordinate(this.adaptNumber(startX)),
      y: this.numberToCoordinate(this.adaptNumber(startY))
    }, {
      x: this.numberToCoordinate(this.adaptNumber(endX)),
      y: this.numberToCoordinate(this.adaptNumber(endY))
    });
  }
  onPointerDown(event) {
    if (event.button === 2) {
      this.isMouseDown = true;
      this.startingPoint = this.getMousePosition(event);
      this.endPoint = GameArrowsCanvas_objectSpread({}, this.startingPoint);
      this.highlightSquare(this.drawingContext, this.startingPoint);
    }
  }
  onPointerUp(event) {
    if (event.button === 2) {
      this.isMouseDown = false;
      if (this.startingPoint.x === this.endPoint.x && this.startingPoint.y === this.endPoint.y) {
        this.highlightSquare(this.context, this.startingPoint);
      } else {
        this.highlightWithArrow(this.context, this.startingPoint, this.endPoint);
      }
      this.drawingContext.clearRect(0, 0, this.canvas.width, this.canvas.height);
    } else if (event.button === 1) this.clearCanvas();
  }
  onPointerMove(event) {
    this.endPoint = this.getMousePosition(event);
    if (!this.isMouseDown || this.startingPoint.x === this.endPoint.x && this.startingPoint.y === this.endPoint.y) return;
    this.drawingContext.clearRect(0, 0, this.canvas.width, this.canvas.height);
    this.highlightWithArrow(this.drawingContext, this.startingPoint, this.endPoint);
  }
}
GameArrowsCanvas_defineProperty(ArrowsCanvas, "SCALE", 3);
GameArrowsCanvas_defineProperty(ArrowsCanvas, "ARROW_STEM_WIDTH", 4);
GameArrowsCanvas_defineProperty(ArrowsCanvas, "PI_RADIUS", 2 * Math.PI);
;// CONCATENATED MODULE: ./src/main/client/ts/hooks/useOnKeyDown.ts
function useOnKeyDown_slicedToArray(arr, i) { return useOnKeyDown_arrayWithHoles(arr) || useOnKeyDown_iterableToArrayLimit(arr, i) || useOnKeyDown_unsupportedIterableToArray(arr, i) || useOnKeyDown_nonIterableRest(); }
function useOnKeyDown_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function useOnKeyDown_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return useOnKeyDown_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useOnKeyDown_arrayLikeToArray(o, minLen); }
function useOnKeyDown_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function useOnKeyDown_iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function useOnKeyDown_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var useOnKeyDown = (keys, callback) => {
  var keySet = (0,react.useMemo)(() => new Set(keys), [keys]);
  var _useState = (0,react.useState)(new Set()),
    _useState2 = useOnKeyDown_slicedToArray(_useState, 2),
    currentKeys = _useState2[0],
    setCurrentKeys = _useState2[1];
  var onKeyDown = (0,react.useCallback)(event => {
    var newSet = new Set(...currentKeys);
    if (!newSet.has(event.key) && keySet.has(event.key)) {
      newSet.add(event.key);
      callback === null || callback === void 0 ? void 0 : callback(newSet);
      setCurrentKeys(newSet);
    }
  }, [callback, currentKeys, keySet]);
  var onKeyReleased = (0,react.useCallback)(event => {
    var newSet = new Set(...currentKeys);
    if (keySet.has(event.key)) {
      newSet.delete(event.key);
      callback === null || callback === void 0 ? void 0 : callback(newSet);
      setCurrentKeys(newSet);
    }
  }, [callback, currentKeys, keySet]);
  (0,react.useEffect)(() => {
    document.addEventListener("keydown", onKeyDown);
    document.addEventListener("keyup", onKeyReleased);
    return () => {
      document.removeEventListener("keydown", onKeyDown);
      document.removeEventListener("keyup", onKeyReleased);
    };
  }, [onKeyDown, onKeyReleased]);
  return currentKeys;
};
;// CONCATENATED MODULE: ./src/main/client/ts/components/BoardComponents/GameDisplay/Arrows/GameDisplayArrows.tsx
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = GameDisplayArrows_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function GameDisplayArrows_slicedToArray(arr, i) { return GameDisplayArrows_arrayWithHoles(arr) || GameDisplayArrows_iterableToArrayLimit(arr, i) || GameDisplayArrows_unsupportedIterableToArray(arr, i) || GameDisplayArrows_nonIterableRest(); }
function GameDisplayArrows_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function GameDisplayArrows_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return GameDisplayArrows_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return GameDisplayArrows_arrayLikeToArray(o, minLen); }
function GameDisplayArrows_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function GameDisplayArrows_iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function GameDisplayArrows_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }









var GameDisplayArrows = props => {
  var _useContext = (0,react.useContext)(BoardContext/* GameDisplayContext */.$),
    id = _useContext.id;
  var currentMove = (0,es/* useSelector */.v9)(state => (0,GameBoardSlice/* selectGameBoardCurrentMove */.xt)(state, id));
  var moveTree = (0,es/* useSelector */.v9)(state => (0,GameBoardSlice/* selectGameBoardMoveTree */.Wl)(state, id));
  var selectedMove = (0,MoveTreeInterface/* getMoveFromPathAndTree */.Yr)(moveTree, currentMove);
  var mainCanvasRef = (0,react.useRef)(null);
  var drawingCanvasRef = (0,react.useRef)(null);
  var _useState = (0,react.useState)(),
    _useState2 = GameDisplayArrows_slicedToArray(_useState, 2),
    arrowsManager = _useState2[0],
    setCanvasArrowsManager = _useState2[1];
  (0,react.useEffect)(() => {
    if (!mainCanvasRef.current || !drawingCanvasRef.current || !(0,MoveTree/* verifyValidMove */.xn)(selectedMove) || !props.baseBoardRef || typeof props.baseBoardRef === "function") return;
    var arrowsManager = new ArrowsCanvas(mainCanvasRef.current, drawingCanvasRef.current, props.boardDimension);
    arrowsManager.clearCanvas();
    var _iterator = _createForOfIteratorHelper(selectedMove.metadata.highlightedArrows),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var arrow = _step.value;
        arrowsManager.drawArrow(arrow);
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    var _iterator2 = _createForOfIteratorHelper(selectedMove.metadata.highlightedSquares),
      _step2;
    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        var square = _step2.value;
        arrowsManager.drawSquare(square);
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
    arrowsManager.setKeysPressed(new Set());
    var baseBoard = props.baseBoardRef.current;
    var pointerDownListener = event => {
      event.preventDefault();
      arrowsManager.onPointerDown(event);
    };
    var pointerUpListener = event => {
      event.preventDefault();
      arrowsManager.onPointerUp(event);
    };
    var pointerMoveListener = event => {
      event.preventDefault();
      arrowsManager.onPointerMove(event);
    };
    var contextMenuListener = event => {
      event.preventDefault();
    };
    if (baseBoard) {
      baseBoard.addEventListener("pointerdown", pointerDownListener);
      baseBoard.addEventListener("pointerup", pointerUpListener);
      baseBoard.addEventListener("pointermove", pointerMoveListener);
      baseBoard.addEventListener("contextmenu", contextMenuListener);
    }
    setCanvasArrowsManager(arrowsManager);
    return () => {
      baseBoard === null || baseBoard === void 0 ? void 0 : baseBoard.removeEventListener("pointerdown", pointerDownListener);
      baseBoard === null || baseBoard === void 0 ? void 0 : baseBoard.removeEventListener("pointerup", pointerUpListener);
      baseBoard === null || baseBoard === void 0 ? void 0 : baseBoard.removeEventListener("pointermove", pointerMoveListener);
      baseBoard === null || baseBoard === void 0 ? void 0 : baseBoard.removeEventListener("contextmenu", contextMenuListener);
    };
  }, [props, selectedMove, currentMove]);
  useOnKeyDown(["Shift", "Alt", "Control"], keys => {
    arrowsManager === null || arrowsManager === void 0 ? void 0 : arrowsManager.setKeysPressed(keys);
  });
  return /*#__PURE__*/react.createElement("div", {
    className: GameDisplay_module/* default.arrows-wrap */.Z["arrows-wrap"]
  }, /*#__PURE__*/react.createElement("canvas", {
    className: GameDisplay_module/* default.arrows-wrap__canvas */.Z["arrows-wrap__canvas"],
    ref: mainCanvasRef
  }), /*#__PURE__*/react.createElement("canvas", {
    className: GameDisplay_module/* default.arrows-wrap__canvas */.Z["arrows-wrap__canvas"],
    ref: drawingCanvasRef
  }));
};
;// CONCATENATED MODULE: ./src/main/client/ts/components/BoardComponents/GameDisplay/GameDisplay.tsx
function GameDisplay_slicedToArray(arr, i) { return GameDisplay_arrayWithHoles(arr) || GameDisplay_iterableToArrayLimit(arr, i) || GameDisplay_unsupportedIterableToArray(arr, i) || GameDisplay_nonIterableRest(); }
function GameDisplay_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function GameDisplay_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return GameDisplay_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return GameDisplay_arrayLikeToArray(o, minLen); }
function GameDisplay_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function GameDisplay_iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function GameDisplay_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }




















var cornerArea = 3,
  cornerAreaToPx = 2 << cornerArea + 1,
  dimensionRegressionConstant = cornerAreaToPx * GameData/* boardDimension */.iJ;
function getCSSPropertiesFromDimension(dimension) {
  var dimensionMax = Math.max(...dimension);
  return {
    "--board-piece-size": "".concat(dimensionRegressionConstant / dimensionMax, "px")
  };
}
function alterCoordinate(_ref, perspective) {
  var _ref2 = GameDisplay_slicedToArray(_ref, 2),
    i = _ref2[0],
    j = _ref2[1];
  var arrayDimension = GameData/* boardDimension */.iJ - 1;
  switch (perspective) {
    case 0:
      return [i, j];
    case 1:
      return [j, arrayDimension - i];
    case 2:
      return [arrayDimension - i, j];
    case 3:
      return [arrayDimension - j, i];
  }
}
(0,GameDisplayPiece/* initImagesList */.Vq)();
var GameDisplay = props => {
  var _chainedMoveSettings$3, _chainedMoveSettings$4;
  var _useContext = (0,react.useContext)(BoardContext/* GameDisplayContext */.$),
    worker = _useContext.worker,
    id = _useContext.id;
  var chainedMoveSettings = (0,es/* useSelector */.v9)(state => (0,GameBoardSlice/* selectChainedMoveSettings */.hB)(state, id));
  var boardSquares = (0,es/* useSelector */.v9)(state => (0,GameBoardSlice/* selectGameBoardSquares */.zD)(state, id));
  var highlightedSquares = (0,es/* useSelector */.v9)(state => (0,GameBoardSlice/* selectHighlightedSquares */.An)(state, id));
  var squareVisibility = (0,es/* useSelector */.v9)(state => (0,GameBoardSlice/* selectSquareVisibility */.Tn)(state, id));
  var variantDataRules = (0,es/* useSelector */.v9)(state => (0,GameBoardSlice/* selectGameBoardVariantData */.C0)(state, id));
  var dimension = (0,es/* useSelector */.v9)(state => (0,GameBoardSlice/* selectGameBoardFENSettings */.Zi)(state, id).fenOptions.dim);
  var _useState = (0,react.useState)(),
    _useState2 = GameDisplay_slicedToArray(_useState, 2),
    hoveredSquare = _useState2[0],
    setHoveredSquare = _useState2[1];
  var dispatch = (0,es/* useDispatch */.I0)();
  var getLegalMoves = (0,react.useCallback)((i, j) => {
    if (chainedMoveSettings.duck) {
      var pieceString = PieceString/* PieceString.fromObjectToClass */.Ff.fromObjectToClass(boardSquares[i][j]);
      if (pieceString.isEmpty() || pieceString.piece !== GameUnits/* nonPlayablePieces.duck */.KR.duck) return;
      dispatch((0,GameBoardSlice/* getChainedDuckMoves */.Pe)({
        id
      }));
    } else {
      dispatch((0,WorkerSaga/* createLegalMovesAction */.C0)({
        id,
        worker,
        args: [i, j]
      }));
    }
  }, [boardSquares, chainedMoveSettings.duck, dispatch, id, worker]);
  var makeMove = move => {
    var currentMove = move[move.length - 1];
    var firstMove = move[0];
    if ((0,MoveTreeInterface/* verifyStandardMove */.$j)(firstMove) && firstMove.promotion && firstMove.promotion.length !== 1) {
      dispatch((0,GameBoardSlice/* setChainedMoveSettings */.qG)({
        id,
        settings: {
          promotionOptions: firstMove
        }
      }));
    } else if (currentMove.nextChainedMoves) {
      if (!(0,MoveTreeInterface/* verifyDroppingMove */.x7)(currentMove) && variantDataRules.seirawanSetup && (0,MoveTreeInterface/* verifyDroppingMoveArray */.lc)(currentMove.nextChainedMoves)) {
        dispatch((0,GameBoardSlice/* setChainedMoveSettings */.qG)({
          id,
          settings: {
            seirawanDrops: {
              move: currentMove,
              chainedMoves: currentMove.nextChainedMoves
            }
          }
        }));
      } else if (!(0,MoveTreeInterface/* verifyDroppingMove */.x7)(currentMove) && variantDataRules.duckChess) {
        dispatch((0,GameBoardSlice/* getChainedDuckDrops */.cD)({
          id,
          move: currentMove
        }));
      }
    } else dispatch((0,WorkerSaga/* createMoveAction */.sF)({
      id,
      worker,
      args: [move]
    }));
  };
  var handleSquareClick = (i, j) => {
    var legalMove = highlightedSquares[i][j];
    if (legalMove === undefined) {
      getLegalMoves(i, j);
    } else {
      makeMove(legalMove);
    }
  };
  var obtainNoticeType = (0,react.useCallback)(() => {
    var _chainedMoveSettings$, _chainedMoveSettings$2;
    if (chainedMoveSettings.seirawanDrops) {
      return ChainedMoveNoticeType.SEIRAWAN_DROP;
    } else if ((_chainedMoveSettings$ = chainedMoveSettings.duck) !== null && _chainedMoveSettings$ !== void 0 && _chainedMoveSettings$.duckDroppingMove) {
      return ChainedMoveNoticeType.DROP_DUCK;
    } else if ((_chainedMoveSettings$2 = chainedMoveSettings.duck) !== null && _chainedMoveSettings$2 !== void 0 && _chainedMoveSettings$2.duckMove) {
      return ChainedMoveNoticeType.MOVE_DUCK;
    } else {
      return false;
    }
  }, [(_chainedMoveSettings$3 = chainedMoveSettings.duck) === null || _chainedMoveSettings$3 === void 0 ? void 0 : _chainedMoveSettings$3.duckDroppingMove, (_chainedMoveSettings$4 = chainedMoveSettings.duck) === null || _chainedMoveSettings$4 === void 0 ? void 0 : _chainedMoveSettings$4.duckMove, chainedMoveSettings.seirawanDrops]);
  var noticeType = obtainNoticeType();
  var onSquareHover = (0,react.useCallback)(coordinate => {
    if (!variantDataRules.atomic || !highlightedSquares[coordinate[0]][coordinate[1]] || !PieceString/* PieceString.fromObjectToClass */.Ff.fromObjectToClass(boardSquares[coordinate[0]][coordinate[1]]).isPiece()) return;
    setHoveredSquare(coordinate);
  }, [boardSquares, highlightedSquares, variantDataRules.atomic]);
  var onSquareLeaveHover = (0,react.useCallback)(() => {
    if (!variantDataRules.atomic) return;
    setHoveredSquare(undefined);
  }, [variantDataRules.atomic]);
  (0,react.useEffect)(() => {
    setHoveredSquare(undefined);
  }, [highlightedSquares]);
  var cssProperties = getCSSPropertiesFromDimension(dimension),
    dimensionMax = Math.max(...dimension);
  var boardRef = (0,react.useRef)(null);
  return /*#__PURE__*/react.createElement("div", {
    className: GameDisplay_module/* default.wrap */.Z.wrap,
    style: cssProperties
  }, /*#__PURE__*/react.createElement("div", {
    ref: boardRef
  }, boardSquares.map((r, initialI) => {
    return /*#__PURE__*/react.createElement("div", {
      className: GameDisplay_module/* default.row */.Z.row,
      key: initialI
    }, r.map((_, initialIJ) => {
      if ((0,FENDataTag/* checkDimensionIntersection */.u)([dimensionMax, dimensionMax], [initialI, initialIJ])) return null;
      var _alterCoordinate = alterCoordinate([initialI, initialIJ], props.currentPerspective),
        _alterCoordinate2 = GameDisplay_slicedToArray(_alterCoordinate, 2),
        i = _alterCoordinate2[0],
        j = _alterCoordinate2[1];
      var modificationsArray = squareVisibility[i][j].slice();
      if (highlightedSquares[i][j]) modificationsArray.push(BoardInterface/* DisplaySettings.Highlighted */.Ft.Highlighted);
      return /*#__PURE__*/react.createElement(GameSquareWrap/* GameDisplaySquareWrap */.y, {
        onClickHandler: () => handleSquareClick(i, j),
        key: "".concat(i).concat(j),
        coordinate: [i, j],
        onMouseEnterHandler: coordinate => onSquareHover(coordinate),
        onMouseLeaveHandler: () => onSquareLeaveHover(),
        atomicHoveredSquare: hoveredSquare
      }, /*#__PURE__*/react.createElement(GameDisplaySquare/* GameDisplaySquare */.X, {
        pieceString: boardSquares[i][j],
        displaySettings: modificationsArray
      }));
    }));
  })), /*#__PURE__*/react.createElement("div", {
    className: GameDisplay_module/* default.dialog-window */.Z["dialog-window"]
  }, /*#__PURE__*/react.createElement(PromotionDialog, {
    promotionPieceLimit: 16,
    pieceSize: 32,
    onPieceClickCallback: data => makeMove([data])
  }), /*#__PURE__*/react.createElement(GameDisplayChainedMoveNotice, {
    noticeType: noticeType
  })), !props.locked && /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(GameDisplayBank/* PieceBankList */.Dn, null), /*#__PURE__*/react.createElement(GameDisplayPlayerBox/* PlayerBoxContainer */.F, null), /*#__PURE__*/react.createElement(GameDisplayArrows, {
    boardDimension: dimensionMax,
    baseBoardRef: boardRef
  })));
};

/***/ }),

/***/ 75424:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Dn": () => (/* binding */ PieceBankList),
/* harmony export */   "vx": () => (/* binding */ initializeComponentWithDirections)
/* harmony export */ });
/* unused harmony export PieceBank */
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(89526);
/* harmony import */ var _baseTypes__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(18027);
/* harmony import */ var _GameDisplay_module_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(91219);
/* harmony import */ var _GameDisplaySquare__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(59065);
/* harmony import */ var _client_ts_redux_WorkerSync_WorkerSaga__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(34972);
/* harmony import */ var _client_ts_logic_index_GameBoardSlice__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(28150);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(12384);
/* harmony import */ var _moveGeneration_GameInformation_GameUnits_GameUnits__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(9960);
/* harmony import */ var _moveGeneration_Board_BoardInterface__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(29939);
/* harmony import */ var _BoardContext__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(87792);
/* harmony import */ var _client_ts_redux_GeneralBoardSelectors__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(23742);
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }












var initializeComponentWithDirections = configuration => {
  var bankStyles = [configuration.styles.base];
  switch (configuration.color) {
    case 0:
      bankStyles.push(configuration.styles.bottom, configuration.styles.right);
      break;
    case 1:
      bankStyles.push(configuration.styles.bottom, configuration.styles.left);
      break;
    case 2:
      bankStyles.push(configuration.styles.top, configuration.styles.left);
      break;
    case 3:
      bankStyles.push(configuration.styles.top, configuration.styles.right);
      break;
    default:
      (0,_baseTypes__WEBPACK_IMPORTED_MODULE_10__/* .throwOnNever */ .h0)(configuration.color);
  }
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {
    className: bankStyles.join(" "),
    key: bankStyles.join(",")
  }, configuration.component);
};
var PieceBank = props => {
  var dispatch = (0,react_redux__WEBPACK_IMPORTED_MODULE_5__/* .useDispatch */ .I0)();
  var _useContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_BoardContext__WEBPACK_IMPORTED_MODULE_8__/* .GameDisplayContext */ .$),
    id = _useContext.id,
    worker = _useContext.worker,
    stateController = _useContext.stateController;
  var chainedMoveSettings = (0,react_redux__WEBPACK_IMPORTED_MODULE_5__/* .useSelector */ .v9)(state => stateController === "gameBoards" ? (0,_client_ts_logic_index_GameBoardSlice__WEBPACK_IMPORTED_MODULE_4__/* .selectChainedMoveSettings */ .hB)(state, id) : undefined);
  var variantDataRules = (0,react_redux__WEBPACK_IMPORTED_MODULE_5__/* .useSelector */ .v9)(state => (0,_client_ts_logic_index_GameBoardSlice__WEBPACK_IMPORTED_MODULE_4__/* .selectGameBoardVariantData */ .C0)(state, id));
  var onBankPieceClick = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(piece => {
    if (!chainedMoveSettings) return;
    if (chainedMoveSettings.seirawanDrops) {
      dispatch((0,_client_ts_logic_index_GameBoardSlice__WEBPACK_IMPORTED_MODULE_4__/* .getChainedSeirawanMoves */ .Ef)({
        id,
        piece
      }));
    } else {
      dispatch((0,_client_ts_redux_WorkerSync_WorkerSaga__WEBPACK_IMPORTED_MODULE_3__/* .createDroppingMovesAction */ .ED)({
        id,
        worker,
        args: [piece]
      }));
    }
  }, [chainedMoveSettings, id, dispatch, worker]);
  if (Object.keys(props.pieces).length === 0) return null;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {
    className: _GameDisplay_module_scss__WEBPACK_IMPORTED_MODULE_1__/* ["default"]["piece-bank"] */ .Z["piece-bank"]
  }, props.pieces.map((_ref, i) => {
    var _ref2 = _slicedToArray(_ref, 2),
      piece = _ref2[0],
      count = _ref2[1];
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {
      className: _GameDisplay_module_scss__WEBPACK_IMPORTED_MODULE_1__/* ["default"]["piece-bank__piece-wrap"] */ .Z["piece-bank__piece-wrap"],
      key: "".concat(piece.value, "-").concat(count, "-").concat(i),
      onClick: () => onBankPieceClick(piece)
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {
      className: _GameDisplay_module_scss__WEBPACK_IMPORTED_MODULE_1__/* ["default"]["piece-bank__piece"] */ .Z["piece-bank__piece"]
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_GameDisplaySquare__WEBPACK_IMPORTED_MODULE_2__/* .GameDisplaySquare */ .X, {
      pieceString: piece,
      displaySettings: variantDataRules !== null && variantDataRules !== void 0 && variantDataRules.blindfold ? [_moveGeneration_Board_BoardInterface__WEBPACK_IMPORTED_MODULE_7__/* .DisplaySettings.Blindfolded */ .Ft.Blindfolded] : []
    })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {
      className: _GameDisplay_module_scss__WEBPACK_IMPORTED_MODULE_1__/* ["default"]["piece-bank__piece-count"] */ .Z["piece-bank__piece-count"]
    }, count));
  }));
};
var PieceBankList = () => {
  var _useContext2 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_BoardContext__WEBPACK_IMPORTED_MODULE_8__/* .GameDisplayContext */ .$),
    id = _useContext2.id,
    stateController = _useContext2.stateController;
  var _useSelector = (0,react_redux__WEBPACK_IMPORTED_MODULE_5__/* .useSelector */ .v9)(state => (0,_client_ts_redux_GeneralBoardSelectors__WEBPACK_IMPORTED_MODULE_9__/* .selectFENSettings */ .dp)({
      stateController,
      state,
      id
    })),
    _useSelector$fenOptio = _useSelector.fenOptions,
    areBanksEnabled = _useSelector$fenOptio.areBanksEnabled,
    bank = _useSelector$fenOptio.bank;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {
    className: _GameDisplay_module_scss__WEBPACK_IMPORTED_MODULE_1__/* ["default"]["piece-bank-container"] */ .Z["piece-bank-container"]
  }, areBanksEnabled.map((enabled, color) => {
    if (!enabled || !(0,_moveGeneration_GameInformation_GameUnits_GameUnits__WEBPACK_IMPORTED_MODULE_6__/* .verifyNumericColor */ .O3)(color)) return null;
    var pieceBank = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(PieceBank, {
      pieces: bank[color]
    });
    var configuration = {
      color,
      component: pieceBank,
      styles: {
        base: _GameDisplay_module_scss__WEBPACK_IMPORTED_MODULE_1__/* ["default"]["piece-bank-wrap"] */ .Z["piece-bank-wrap"],
        top: _GameDisplay_module_scss__WEBPACK_IMPORTED_MODULE_1__/* ["default"]["piece-bank-wrap--top"] */ .Z["piece-bank-wrap--top"],
        left: _GameDisplay_module_scss__WEBPACK_IMPORTED_MODULE_1__/* ["default"]["piece-bank-wrap--left"] */ .Z["piece-bank-wrap--left"],
        bottom: _GameDisplay_module_scss__WEBPACK_IMPORTED_MODULE_1__/* ["default"]["piece-bank-wrap--bottom"] */ .Z["piece-bank-wrap--bottom"],
        right: _GameDisplay_module_scss__WEBPACK_IMPORTED_MODULE_1__/* ["default"]["piece-bank-wrap--right"] */ .Z["piece-bank-wrap--right"]
      }
    };
    return initializeComponentWithDirections(configuration);
  }));
};

/***/ }),

/***/ 15246:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "x6": () => (/* binding */ PieceImage),
  "Vq": () => (/* binding */ initImagesList),
  "s1": () => (/* binding */ resetNamesEnum)
});

// UNUSED EXPORTS: obtainColorFromString

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(89526);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(17692);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(71972);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js + 1 modules
var inheritsLoose = __webpack_require__(51498);
;// CONCATENATED MODULE: ./node_modules/tslib/tslib.es6.js
/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    if (typeof b !== "function" && b !== null)
        throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.push(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.push(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};

function __runInitializers(thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};

function __propKey(x) {
    return typeof x === "symbol" ? x : "".concat(x);
};

function __setFunctionName(f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

var __createBinding = Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});

function __exportStar(m, o) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

/** @deprecated */
function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

/** @deprecated */
function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
}

function __spreadArray(to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
}

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

var __setModuleDefault = Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
}

function __classPrivateFieldSet(receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
}

function __classPrivateFieldIn(state, receiver) {
    if (receiver === null || (typeof receiver !== "object" && typeof receiver !== "function")) throw new TypeError("Cannot use 'in' operator on non-object");
    return typeof state === "function" ? receiver === state : state.has(receiver);
}

// EXTERNAL MODULE: ./node_modules/content-type/index.js
var content_type = __webpack_require__(16585);
;// CONCATENATED MODULE: ./node_modules/@tanem/svg-injector/dist/svg-injector.esm.js



var cache = new Map();

var cloneSvg = function cloneSvg(sourceSvg) {
  return sourceSvg.cloneNode(true);
};

var isLocal = function isLocal() {
  return window.location.protocol === 'file:';
};

var makeAjaxRequest = function makeAjaxRequest(url, httpRequestWithCredentials, callback) {
  var httpRequest = new XMLHttpRequest();

  httpRequest.onreadystatechange = function () {
    try {
      if (!/\.svg/i.test(url) && httpRequest.readyState === 2) {
        var contentType = httpRequest.getResponseHeader('Content-Type');

        if (!contentType) {
          throw new Error('Content type not found');
        }

        var type = (0,content_type/* parse */.Q)(contentType).type;

        if (!(type === 'image/svg+xml' || type === 'text/plain')) {
          throw new Error("Invalid content type: ".concat(type));
        }
      }

      if (httpRequest.readyState === 4) {
        if (httpRequest.status === 404 || httpRequest.responseXML === null) {
          throw new Error(isLocal() ? 'Note: SVG injection ajax calls do not work locally without ' + 'adjusting security settings in your browser. Or consider ' + 'using a local webserver.' : 'Unable to load SVG file: ' + url);
        }

        if (httpRequest.status === 200 || isLocal() && httpRequest.status === 0) {
          callback(null, httpRequest);
        } else {
          throw new Error('There was a problem injecting the SVG: ' + httpRequest.status + ' ' + httpRequest.statusText);
        }
      }
    } catch (error) {
      httpRequest.abort();

      if (error instanceof Error) {
        callback(error, httpRequest);
      } else {
        throw error;
      }
    }
  };

  httpRequest.open('GET', url);
  httpRequest.withCredentials = httpRequestWithCredentials;

  if (httpRequest.overrideMimeType) {
    httpRequest.overrideMimeType('text/xml');
  }

  httpRequest.send();
};

var requestQueue = {};
var queueRequest = function queueRequest(url, callback) {
  requestQueue[url] = requestQueue[url] || [];
  requestQueue[url].push(callback);
};
var processRequestQueue = function processRequestQueue(url) {
  var _loop_1 = function _loop_1(i, len) {
    setTimeout(function () {
      if (Array.isArray(requestQueue[url])) {
        var cacheValue = cache.get(url);
        var callback = requestQueue[url][i];

        if (cacheValue instanceof SVGSVGElement) {
          callback(null, cloneSvg(cacheValue));
        }

        if (cacheValue instanceof Error) {
          callback(cacheValue);
        }

        if (i === requestQueue[url].length - 1) {
          delete requestQueue[url];
        }
      }
    }, 0);
  };

  for (var i = 0, len = requestQueue[url].length; i < len; i++) {
    _loop_1(i);
  }
};

var loadSvgCached = function loadSvgCached(url, httpRequestWithCredentials, callback) {
  if (cache.has(url)) {
    var cacheValue = cache.get(url);

    if (cacheValue === undefined) {
      queueRequest(url, callback);
      return;
    }

    if (cacheValue instanceof SVGSVGElement) {
      callback(null, cloneSvg(cacheValue));
      return;
    }
  }

  cache.set(url, undefined);
  queueRequest(url, callback);
  makeAjaxRequest(url, httpRequestWithCredentials, function (error, httpRequest) {
    if (error) {
      cache.set(url, error);
    } else if (httpRequest.responseXML instanceof Document && httpRequest.responseXML.documentElement && httpRequest.responseXML.documentElement instanceof SVGSVGElement) {
      cache.set(url, httpRequest.responseXML.documentElement);
    }

    processRequestQueue(url);
  });
};

var loadSvgUncached = function loadSvgUncached(url, httpRequestWithCredentials, callback) {
  makeAjaxRequest(url, httpRequestWithCredentials, function (error, httpRequest) {
    if (error) {
      callback(error);
    } else if (httpRequest.responseXML instanceof Document && httpRequest.responseXML.documentElement && httpRequest.responseXML.documentElement instanceof SVGSVGElement) {
      callback(null, httpRequest.responseXML.documentElement);
    }
  });
};

var idCounter = 0;

var uniqueId = function uniqueId() {
  return ++idCounter;
};

var injectedElements = [];
var ranScripts = {};
var svgNamespace = 'http://www.w3.org/2000/svg';
var xlinkNamespace = 'http://www.w3.org/1999/xlink';

var injectElement = function injectElement(el, evalScripts, renumerateIRIElements, cacheRequests, httpRequestWithCredentials, beforeEach, callback) {
  var elUrl = el.getAttribute('data-src') || el.getAttribute('src');

  if (!elUrl) {
    callback(new Error('Invalid data-src or src attribute'));
    return;
  }

  if (injectedElements.indexOf(el) !== -1) {
    injectedElements.splice(injectedElements.indexOf(el), 1);
    el = null;
    return;
  }

  injectedElements.push(el);
  el.setAttribute('src', '');
  var loadSvg = cacheRequests ? loadSvgCached : loadSvgUncached;
  loadSvg(elUrl, httpRequestWithCredentials, function (error, svg) {
    if (!svg) {
      injectedElements.splice(injectedElements.indexOf(el), 1);
      el = null;
      callback(error);
      return;
    }

    var elId = el.getAttribute('id');

    if (elId) {
      svg.setAttribute('id', elId);
    }

    var elTitle = el.getAttribute('title');

    if (elTitle) {
      svg.setAttribute('title', elTitle);
    }

    var elWidth = el.getAttribute('width');

    if (elWidth) {
      svg.setAttribute('width', elWidth);
    }

    var elHeight = el.getAttribute('height');

    if (elHeight) {
      svg.setAttribute('height', elHeight);
    }

    var mergedClasses = Array.from(new Set(__spreadArray(__spreadArray(__spreadArray([], (svg.getAttribute('class') || '').split(' '), true), ['injected-svg'], false), (el.getAttribute('class') || '').split(' '), true))).join(' ').trim();
    svg.setAttribute('class', mergedClasses);
    var elStyle = el.getAttribute('style');

    if (elStyle) {
      svg.setAttribute('style', elStyle);
    }

    svg.setAttribute('data-src', elUrl);
    var elData = [].filter.call(el.attributes, function (at) {
      return /^data-\w[\w-]*$/.test(at.name);
    });
    Array.prototype.forEach.call(elData, function (dataAttr) {
      if (dataAttr.name && dataAttr.value) {
        svg.setAttribute(dataAttr.name, dataAttr.value);
      }
    });

    if (renumerateIRIElements) {
      var iriElementsAndProperties_1 = {
        clipPath: ['clip-path'],
        'color-profile': ['color-profile'],
        cursor: ['cursor'],
        filter: ['filter'],
        linearGradient: ['fill', 'stroke'],
        marker: ['marker', 'marker-start', 'marker-mid', 'marker-end'],
        mask: ['mask'],
        path: [],
        pattern: ['fill', 'stroke'],
        radialGradient: ['fill', 'stroke']
      };
      var element_1;
      var elements_1;
      var properties_1;
      var currentId_1;
      var newId_1;
      Object.keys(iriElementsAndProperties_1).forEach(function (key) {
        element_1 = key;
        properties_1 = iriElementsAndProperties_1[key];
        elements_1 = svg.querySelectorAll(element_1 + '[id]');

        var _loop_1 = function _loop_1(a, elementsLen) {
          currentId_1 = elements_1[a].id;
          newId_1 = currentId_1 + '-' + uniqueId();
          var referencingElements;
          Array.prototype.forEach.call(properties_1, function (property) {
            referencingElements = svg.querySelectorAll('[' + property + '*="' + currentId_1 + '"]');

            for (var b = 0, referencingElementLen = referencingElements.length; b < referencingElementLen; b++) {
              var attrValue = referencingElements[b].getAttribute(property);

              if (attrValue && !attrValue.match(new RegExp('url\\("?#' + currentId_1 + '"?\\)'))) {
                continue;
              }

              referencingElements[b].setAttribute(property, 'url(#' + newId_1 + ')');
            }
          });
          var allLinks = svg.querySelectorAll('[*|href]');
          var links = [];

          for (var c = 0, allLinksLen = allLinks.length; c < allLinksLen; c++) {
            var href = allLinks[c].getAttributeNS(xlinkNamespace, 'href');

            if (href && href.toString() === '#' + elements_1[a].id) {
              links.push(allLinks[c]);
            }
          }

          for (var d = 0, linksLen = links.length; d < linksLen; d++) {
            links[d].setAttributeNS(xlinkNamespace, 'href', '#' + newId_1);
          }

          elements_1[a].id = newId_1;
        };

        for (var a = 0, elementsLen = elements_1.length; a < elementsLen; a++) {
          _loop_1(a);
        }
      });
    }

    svg.removeAttribute('xmlns:a');
    var scripts = svg.querySelectorAll('script');
    var scriptsToEval = [];
    var script;
    var scriptType;

    for (var i = 0, scriptsLen = scripts.length; i < scriptsLen; i++) {
      scriptType = scripts[i].getAttribute('type');

      if (!scriptType || scriptType === 'application/ecmascript' || scriptType === 'application/javascript' || scriptType === 'text/javascript') {
        script = scripts[i].innerText || scripts[i].textContent;

        if (script) {
          scriptsToEval.push(script);
        }

        svg.removeChild(scripts[i]);
      }
    }

    if (scriptsToEval.length > 0 && (evalScripts === 'always' || evalScripts === 'once' && !ranScripts[elUrl])) {
      for (var l = 0, scriptsToEvalLen = scriptsToEval.length; l < scriptsToEvalLen; l++) {
        new Function(scriptsToEval[l])(window);
      }

      ranScripts[elUrl] = true;
    }

    var styleTags = svg.querySelectorAll('style');
    Array.prototype.forEach.call(styleTags, function (styleTag) {
      styleTag.textContent += '';
    });
    svg.setAttribute('xmlns', svgNamespace);
    svg.setAttribute('xmlns:xlink', xlinkNamespace);
    beforeEach(svg);

    if (!el.parentNode) {
      injectedElements.splice(injectedElements.indexOf(el), 1);
      el = null;
      callback(new Error('Parent node is null'));
      return;
    }

    el.parentNode.replaceChild(svg, el);
    injectedElements.splice(injectedElements.indexOf(el), 1);
    el = null;
    callback(null, svg);
  });
};

var SVGInjector = function SVGInjector(elements, _a) {
  var _b = _a === void 0 ? {} : _a,
      _c = _b.afterAll,
      afterAll = _c === void 0 ? function () {
    return undefined;
  } : _c,
      _d = _b.afterEach,
      afterEach = _d === void 0 ? function () {
    return undefined;
  } : _d,
      _e = _b.beforeEach,
      beforeEach = _e === void 0 ? function () {
    return undefined;
  } : _e,
      _f = _b.cacheRequests,
      cacheRequests = _f === void 0 ? true : _f,
      _g = _b.evalScripts,
      evalScripts = _g === void 0 ? 'never' : _g,
      _h = _b.httpRequestWithCredentials,
      httpRequestWithCredentials = _h === void 0 ? false : _h,
      _j = _b.renumerateIRIElements,
      renumerateIRIElements = _j === void 0 ? true : _j;

  if (elements && 'length' in elements) {
    var elementsLoaded_1 = 0;

    for (var i = 0, j = elements.length; i < j; i++) {
      injectElement(elements[i], evalScripts, renumerateIRIElements, cacheRequests, httpRequestWithCredentials, beforeEach, function (error, svg) {
        afterEach(error, svg);

        if (elements && 'length' in elements && elements.length === ++elementsLoaded_1) {
          afterAll(elementsLoaded_1);
        }
      });
    }
  } else if (elements) {
    injectElement(elements, evalScripts, renumerateIRIElements, cacheRequests, httpRequestWithCredentials, beforeEach, function (error, svg) {
      afterEach(error, svg);
      afterAll(1);
      elements = null;
    });
  } else {
    afterAll(0);
  }
};



// EXTERNAL MODULE: ./node_modules/prop-types/index.js
var prop_types = __webpack_require__(2652);
;// CONCATENATED MODULE: ./node_modules/react-svg/dist/react-svg.esm.js







// Hat-tip: https://github.com/developit/preact-compat/blob/master/src/index.js#L402.
var shallowDiffers = function shallowDiffers(a, b) {
  for (var i in a) {
    if (!(i in b)) {
      return true;
    }
  }

  for (var _i in b) {
    if (a[_i] !== b[_i]) {
      return true;
    }
  }

  return false;
};

var _excluded = ["afterInjection", "beforeInjection", "evalScripts", "fallback", "httpRequestWithCredentials", "loading", "renumerateIRIElements", "src", "useRequestCache", "wrapper"];
var react_svg_esm_svgNamespace = 'http://www.w3.org/2000/svg';
var react_svg_esm_xlinkNamespace = 'http://www.w3.org/1999/xlink';
var ReactSVG = /*#__PURE__*/function (_React$Component) {
  (0,inheritsLoose/* default */.Z)(ReactSVG, _React$Component);

  function ReactSVG() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.initialState = {
      hasError: false,
      isLoading: true
    };
    _this.state = _this.initialState;
    _this._isMounted = false;
    _this.reactWrapper = void 0;
    _this.nonReactWrapper = void 0;

    _this.refCallback = function (reactWrapper) {
      _this.reactWrapper = reactWrapper;
    };

    return _this;
  }

  var _proto = ReactSVG.prototype;

  _proto.renderSVG = function renderSVG() {
    var _this2 = this;

    /* istanbul ignore else */
    if (this.reactWrapper instanceof Node) {
      var _this$props = this.props,
          beforeInjection = _this$props.beforeInjection,
          evalScripts = _this$props.evalScripts,
          httpRequestWithCredentials = _this$props.httpRequestWithCredentials,
          renumerateIRIElements = _this$props.renumerateIRIElements,
          src = _this$props.src,
          useRequestCache = _this$props.useRequestCache;
      /* eslint-disable @typescript-eslint/no-non-null-assertion */

      var afterInjection = this.props.afterInjection;
      var wrapper = this.props.wrapper;
      /* eslint-enable @typescript-eslint/no-non-null-assertion */

      var nonReactWrapper;
      var nonReactTarget;

      if (wrapper === 'svg') {
        nonReactWrapper = document.createElementNS(react_svg_esm_svgNamespace, wrapper);
        nonReactWrapper.setAttribute('xmlns', react_svg_esm_svgNamespace);
        nonReactWrapper.setAttribute('xmlns:xlink', react_svg_esm_xlinkNamespace);
        nonReactTarget = document.createElementNS(react_svg_esm_svgNamespace, wrapper);
      } else {
        nonReactWrapper = document.createElement(wrapper);
        nonReactTarget = document.createElement(wrapper);
      }

      nonReactWrapper.appendChild(nonReactTarget);
      nonReactTarget.dataset.src = src;
      this.nonReactWrapper = this.reactWrapper.appendChild(nonReactWrapper);

      var afterEach = function afterEach(error, svg) {
        if (error) {
          _this2.removeSVG();

          if (!_this2._isMounted) {
            afterInjection(error);
            return;
          }
        } // TODO (Tane): It'd be better to cleanly unsubscribe from SVGInjector
        // callbacks instead of tracking a property like this.


        if (_this2._isMounted) {
          _this2.setState(function () {
            return {
              hasError: !!error,
              isLoading: false
            };
          }, function () {
            afterInjection(error, svg);
          });
        }
      };

      SVGInjector(nonReactTarget, {
        afterEach: afterEach,
        beforeEach: beforeInjection,
        cacheRequests: useRequestCache,
        evalScripts: evalScripts,
        httpRequestWithCredentials: httpRequestWithCredentials,
        renumerateIRIElements: renumerateIRIElements
      });
    }
  };

  _proto.removeSVG = function removeSVG() {
    var _this$nonReactWrapper;

    if ((_this$nonReactWrapper = this.nonReactWrapper) != null && _this$nonReactWrapper.parentNode) {
      this.nonReactWrapper.parentNode.removeChild(this.nonReactWrapper);
      this.nonReactWrapper = null;
    }
  };

  _proto.componentDidMount = function componentDidMount() {
    this._isMounted = true;
    this.renderSVG();
  };

  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    var _this3 = this;

    if (shallowDiffers(prevProps, this.props)) {
      this.setState(function () {
        return _this3.initialState;
      }, function () {
        _this3.removeSVG();

        _this3.renderSVG();
      });
    }
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    this._isMounted = false;
    this.removeSVG();
  };

  _proto.render = function render() {
    /* eslint-disable @typescript-eslint/no-unused-vars */
    var _this$props2 = this.props;
        _this$props2.afterInjection;
        _this$props2.beforeInjection;
        _this$props2.evalScripts;
        var Fallback = _this$props2.fallback;
        _this$props2.httpRequestWithCredentials;
        var Loading = _this$props2.loading;
        _this$props2.renumerateIRIElements;
        _this$props2.src;
        _this$props2.useRequestCache;
        var wrapper = _this$props2.wrapper,
        rest = (0,objectWithoutPropertiesLoose/* default */.Z)(_this$props2, _excluded);
    /* eslint-enable @typescript-eslint/no-unused-vars */
    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion


    var Wrapper = wrapper;
    return /*#__PURE__*/react.createElement(Wrapper, (0,esm_extends/* default */.Z)({}, rest, {
      ref: this.refCallback
    }, wrapper === 'svg' ? {
      xmlns: react_svg_esm_svgNamespace,
      xmlnsXlink: react_svg_esm_xlinkNamespace
    } : {}), this.state.isLoading && Loading && /*#__PURE__*/react.createElement(Loading, null), this.state.hasError && Fallback && /*#__PURE__*/react.createElement(Fallback, null));
  };

  return ReactSVG;
}(react.Component);
ReactSVG.defaultProps = {
  afterInjection: function afterInjection() {
    return undefined;
  },
  beforeInjection: function beforeInjection() {
    return undefined;
  },
  evalScripts: 'never',
  fallback: null,
  httpRequestWithCredentials: false,
  loading: null,
  renumerateIRIElements: true,
  useRequestCache: true,
  wrapper: 'div'
};
ReactSVG.propTypes = {
  afterInjection: prop_types.func,
  beforeInjection: prop_types.func,
  evalScripts: prop_types.oneOf(['always', 'once', 'never']),
  fallback: prop_types.oneOfType([prop_types.func, prop_types.object, prop_types.string]),
  httpRequestWithCredentials: prop_types.bool,
  loading: prop_types.oneOfType([prop_types.func, prop_types.object, prop_types.string]),
  renumerateIRIElements: prop_types.bool,
  src: prop_types.string.isRequired,
  useRequestCache: prop_types.bool,
  wrapper: prop_types.oneOf(['div', 'span', 'svg'])
} ;



// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/GameInformation/GameUnits/PieceString.ts
var PieceString = __webpack_require__(20915);
// EXTERNAL MODULE: ./src/main/client/ts/components/BoardComponents/GameDisplay/GameDisplay.module.scss
var GameDisplay_module = __webpack_require__(91219);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/GameInformation/GameUnits/GameUnits.ts
var GameUnits = __webpack_require__(9960);
// EXTERNAL MODULE: ./src/main/client/img/imageIndex.ts
var imageIndex = __webpack_require__(73490);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/PieceControl/PieceControlInterface.ts
var PieceControlInterface = __webpack_require__(16703);
// EXTERNAL MODULE: ./src/main/client/ts/interfaces/Colors.ts
var Colors = __webpack_require__(7970);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/GameInformation/GameData.ts
var GameData = __webpack_require__(76758);
;// CONCATENATED MODULE: ./src/main/client/img/svgDeclarations.ts

var svgBasicShapesArray = (0,GameData/* validateComprehensiveUnionArray */.QH)()(["circle", "ellipse", "line", "path", "polygon", "polyline", "rect"]);
var svgBasicShapeSelector = svgBasicShapesArray.join(",");
;// CONCATENATED MODULE: ./src/main/client/ts/interfaces/ColorUtils.ts
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
var DEFAULT_DARK_THRESHOLD = 30;
function checkIfRGBisTooDark(rgb, threshold) {
  var _rgb = _slicedToArray(rgb, 3),
    red = _rgb[0],
    blue = _rgb[1],
    green = _rgb[2];
  return 0.2126 * red + 0.7152 * green + 0.0722 * blue > threshold;
}
// EXTERNAL MODULE: ./src/main/client/ts/services/PersistedStorage/PieceThemeContext.ts
var PieceThemeContext = __webpack_require__(68409);
// EXTERNAL MODULE: ./node_modules/react-redux/es/index.js + 13 modules
var es = __webpack_require__(12384);
// EXTERNAL MODULE: ./src/main/client/ts/components/BoardComponents/BoardContext.ts
var BoardContext = __webpack_require__(87792);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/PieceControl/PieceControlDeclarations.ts
var PieceControlDeclarations = __webpack_require__(85702);
// EXTERNAL MODULE: ./src/main/client/ts/baseTypes.ts
var baseTypes = __webpack_require__(18027);
// EXTERNAL MODULE: ./src/main/client/ts/redux/GeneralBoardSelectors.ts
var GeneralBoardSelectors = __webpack_require__(23742);
;// CONCATENATED MODULE: ./src/main/client/ts/components/BoardComponents/GameDisplay/GameDisplayPiece.tsx
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
















var serializer = new XMLSerializer();
var MakeSVG = (path, configuration, toggleInformation) => {
  return /*#__PURE__*/react.createElement(ReactSVG, {
    src: path,
    beforeInjection: svg => {
      var _svg$closest;
      if (configuration.size) {
        svg.style.height = configuration.size;
      } else {
        svg.style.height = "32px";
      }
      if (configuration.beforeInjection) {
        configuration.beforeInjection(svg);
      }
      (_svg$closest = svg.closest("*")) === null || _svg$closest === void 0 ? void 0 : _svg$closest.setAttribute("style", "opacity: 0;");
    },
    afterInjection: (_, svg) => {
      var _svg$closest2;
      (0,baseTypes/* assertNonUndefined */.lM)(svg);
      Array.from(svg.querySelectorAll(svgBasicShapeSelector)).forEach(p => {
        var styles = getComputedStyle(p);
        var fill = styles.fill;
        if (fill === "none") {
          p.style.fill = "none";
        } else if (Number(styles.opacity) > 0.3) {
          var rgb = fill.split("(")[1].split(",");
          var rgbColors = [(0,Colors/* createRGBColor */.yk)(Number(rgb[0])), (0,Colors/* createRGBColor */.yk)(Number(rgb[1])), (0,Colors/* createRGBColor */.yk)(Number(rgb[2].slice(0, -1)))];
          if (checkIfRGBisTooDark(rgbColors, DEFAULT_DARK_THRESHOLD)) {
            p.style.fill = (0,Colors/* wrapIndexedColor */.Hi)(configuration.customColor);
          } else {
            p.style.fill = fill;
          }
        }
        p.style.opacity = styles.opacity;
      });
      (_svg$closest2 = svg.closest("*")) === null || _svg$closest2 === void 0 ? void 0 : _svg$closest2.removeAttribute("style");
      var svgString = "data:image/svg+xml;base64,".concat(window.btoa(serializer.serializeToString(svg)));
      toggleInformation === null || toggleInformation === void 0 ? void 0 : toggleInformation(svgString);
      var image = document.createElement("img");
      image.setAttribute("src", svgString);
      image.setAttribute("style", "width: ".concat(configuration.size, "; height: ").concat(configuration.size));
      svg.replaceWith(image);
      if (configuration.afterInjection) {
        configuration.afterInjection(svg);
      }
    },
    className: "".concat(configuration.className, " ").concat(configuration.stonewall ? GameDisplay_module/* default.square__piece--stonewall */.Z["square__piece--stonewall"] : "")
  });
};
var extendedEnumKeys = _objectSpread(_objectSpread({}, GameUnits/* colorEnum */.JF), {}, {
  d: PieceString/* deadColorIndex */.Ir,
  dw: PieceString/* deadColorIndex */.Ir,
  white: 0,
  black: 1
});
(0,PieceControlDeclarations/* initPieceControlDeclarations */.D)();
var GameDisplayPiece_images = (0,imageIndex/* importSVGGroupImages */.$)(),
  rasterImages = (0,imageIndex/* importRasterGroupImages */.ir)();
var namesEnum = {};
var initImagesList = () => {
  var pieceLetter;
  var _loop = function _loop() {
    if (!Object.prototype.hasOwnProperty.call(PieceControlInterface/* pieceControlConfigSettings */.Gf, pieceLetter)) return "continue";
    var setting = PieceControlInterface/* pieceControlConfigSettings */.Gf[pieceLetter];
    var svgPieceRecord = (0,baseTypes/* getEnumKeys */.Fc)(imageIndex/* SVGPieceDisplayGroup */.l1).reduce((p, group) => {
      return _objectSpread(_objectSpread({}, p), {}, {
        [group]: Object.keys(extendedEnumKeys).reduce((p, n) => {
          return _objectSpread(_objectSpread({}, p), {}, {
            [n]: GameDisplayPiece_images[group][setting.naming.shortName]
          });
        }, {})
      });
    }, {});
    var rasterPieceRecord = (0,baseTypes/* getEnumKeys */.Fc)(imageIndex/* RasterPieceDisplayGroup */.Ws).reduce((p, group) => {
      return _objectSpread(_objectSpread({}, p), {}, {
        [group]: rasterImages[group][setting.naming.shortName]
      });
    }, {});
    namesEnum[pieceLetter] = _objectSpread(_objectSpread({}, svgPieceRecord), rasterPieceRecord);
  };
  for (pieceLetter in PieceControlInterface/* pieceControlConfigSettings */.Gf) {
    var _ret = _loop();
    if (_ret === "continue") continue;
  }
};
var resetNamesEnum = () => {
  namesEnum = {};
};
var createDefaultPieceImageConfiguration = () => ({
  size: "inherit",
  className: GameDisplay_module/* default.square__piece */.Z.square__piece,
  cache: false,
  customColor: (0,Colors/* createHexColor */.TG)("#fff")
});
var createPieceImage = (settings, callback) => {
  var _settings$configurati;
  var pieceTheme = (_settings$configurati = settings.configuration.pieceTheme) !== null && _settings$configurati !== void 0 ? _settings$configurati : settings.pieceTheme;
  if ((0,imageIndex/* verifyRasterPieceDisplayGroup */._n)(pieceTheme)) {
    return /*#__PURE__*/react.createElement("img", {
      src: settings.url,
      className: settings.configuration.className,
      width: settings.configuration.size,
      height: settings.configuration.size
    });
  } else {
    return MakeSVG(settings.url, _objectSpread(_objectSpread({}, settings.configuration), {}, {
      stonewall: settings.stringColor === "dw"
    }), callback);
  }
};
var obtainColorFromString = (colorString, context) => {
  if (colorString === "white" || colorString === "black") {
    return context.colors.whiteBlackColors[extendedEnumKeys[colorString]];
  } else {
    return context.colors.pieceColors[extendedEnumKeys[colorString]];
  }
};
var PieceImage = props => {
  var _props$configuration, _configuration$pieceT;
  var context = (0,react.useContext)(PieceThemeContext/* UserContext */.St);
  var _useContext = (0,react.useContext)(BoardContext/* GameDisplayContext */.$),
    id = _useContext.id,
    stateController = _useContext.stateController;
  var variantDataRules = (0,es/* useSelector */.v9)(state => (0,GeneralBoardSelectors/* selectVariantData */.DL)({
    state,
    id,
    stateController
  }));
  var whiteBlack = (0,es/* useSelector */.v9)(state => (0,GeneralBoardSelectors/* selectFENSettings */.dp)({
    state,
    id,
    stateController
  }).fenOptions.wb);
  var configuration = _objectSpread(_objectSpread({}, createDefaultPieceImageConfiguration()), props.configuration),
    piece = PieceControlInterface/* pieceControlConfigSettings */.Gf[props.pieceString.piece].naming.shortName;
  var color = GameUnits/* stringColorEnum */.Od[props.pieceString.color];
  if ((variantDataRules.stonewall || props.renderWithStonewall) && color === "d") color = "dw";
  if (whiteBlack && color === "r") color = "white";
  if (whiteBlack && color === "y") color = "black";
  var imageConfiguration = _objectSpread(_objectSpread({}, configuration), {}, {
    customColor: (_props$configuration = props.configuration) !== null && _props$configuration !== void 0 && _props$configuration.customColor ? configuration.customColor : obtainColorFromString(color, context)
  });
  var pieceTheme = (_configuration$pieceT = configuration.pieceTheme) !== null && _configuration$pieceT !== void 0 ? _configuration$pieceT : context.pieceTheme;
  if (configuration.cache) {
    var imagePath = namesEnum[props.pieceString.piece][pieceTheme],
      image = imagePath[color];
    if (typeof image === "string") {
      return createPieceImage({
        url: image,
        configuration: imageConfiguration,
        stringColor: color,
        pieceTheme,
        whiteBlack
      }, base64 => {
        imagePath[color] = {
          base64
        };
      });
    } else {
      return /*#__PURE__*/react.createElement("img", {
        src: image.base64,
        alt: piece,
        width: configuration.size,
        height: configuration.size,
        className: configuration.className
      });
    }
  } else {
    var imageUrl = (0,imageIndex/* verifyRasterPieceDisplayGroup */._n)(pieceTheme) ? rasterImages[pieceTheme][piece][color] : GameDisplayPiece_images[pieceTheme][piece];
    return createPieceImage({
      url: imageUrl,
      configuration: imageConfiguration,
      stringColor: color,
      pieceTheme,
      whiteBlack
    });
  }
};

/***/ }),

/***/ 58924:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "F": () => (/* binding */ PlayerBoxContainer)
});

// UNUSED EXPORTS: PlayerBox

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(89526);
// EXTERNAL MODULE: ./src/main/client/ts/components/BoardComponents/GameDisplay/GameDisplay.module.scss
var GameDisplay_module = __webpack_require__(91219);
// EXTERNAL MODULE: ./src/main/client/ts/components/BoardComponents/GameDisplay/GameDisplayBank.tsx
var GameDisplayBank = __webpack_require__(75424);
// EXTERNAL MODULE: ./src/main/client/ts/interfaces/Colors.ts
var Colors = __webpack_require__(7970);
;// CONCATENATED MODULE: ./src/main/client/img/playerIcons/user-image.svg
/* harmony default export */ var user_image = (__webpack_require__.p + "../assets/1c1d64ca4724f088adfb22d006c9c02f.svg");
// EXTERNAL MODULE: ./src/main/client/ts/services/PersistedStorage/PieceThemeContext.ts
var PieceThemeContext = __webpack_require__(68409);
// EXTERNAL MODULE: ./src/main/client/ts/utils/StringFormatUtils.ts
var StringFormatUtils = __webpack_require__(14093);
// EXTERNAL MODULE: ./src/main/client/ts/logic/index/GameBoardSlice.ts + 1 modules
var GameBoardSlice = __webpack_require__(28150);
// EXTERNAL MODULE: ./node_modules/react-redux/es/index.js + 13 modules
var es = __webpack_require__(12384);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/GameInformation/GameData.ts
var GameData = __webpack_require__(76758);
// EXTERNAL MODULE: ./src/main/client/ts/components/BoardComponents/BoardContext.ts
var BoardContext = __webpack_require__(87792);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/GameInformation/GameUnits/GameUnits.ts
var GameUnits = __webpack_require__(9960);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/MoveTree/MoveTreeInterface.ts
var MoveTreeInterface = __webpack_require__(37017);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/MoveTree/MoveTree.ts + 1 modules
var MoveTree = __webpack_require__(99234);
// EXTERNAL MODULE: ./src/main/client/ts/logic/BaseInterfaces.ts
var BaseInterfaces = __webpack_require__(34355);
// EXTERNAL MODULE: ./src/main/client/ts/redux/GeneralBoardSelectors.ts
var GeneralBoardSelectors = __webpack_require__(23742);
;// CONCATENATED MODULE: ./src/main/client/ts/components/BoardComponents/GameDisplay/GameDisplayPlayerBox.tsx
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
















var PlayerBox = props => {
  var _points$props$color;
  var _useContext = (0,react.useContext)(BoardContext/* GameDisplayContext */.$),
    id = _useContext.id,
    stateController = _useContext.stateController;
  var _useSelector = (0,es/* useSelector */.v9)(state => (0,GeneralBoardSelectors/* selectFENSettings */.dp)({
      stateController,
      id,
      state
    })),
    _useSelector$fenOptio = _useSelector.fenOptions,
    wb = _useSelector$fenOptio.wb,
    dim = _useSelector$fenOptio.dim,
    noCorners = _useSelector$fenOptio.noCorners,
    points = _useSelector.points,
    sideToMove = _useSelector.sideToMove;
  var gameData = (0,es/* useSelector */.v9)(state => (0,GameBoardSlice/* selectGameData */.gg)(state, id));
  var userContext = (0,react.useContext)(PieceThemeContext/* UserContext */.St);
  var wrappedColor = (0,BaseInterfaces/* isVerticalPlacement */.sC)(props.color) && wb ? (0,Colors/* wrapIndexedColor */.Hi)(userContext.colors.whiteBlackColors[props.color === 0 ? 0 : 1]) : (0,Colors/* wrapIndexedColor */.Hi)(userContext.colors.pieceColors[props.color]);
  var _gameData$players$pro = gameData.players[props.color],
    _gameData$players$pro2 = _gameData$players$pro.name,
    name = _gameData$players$pro2 === void 0 ? (0,GameData/* getPlayerNameFromColor */.oh)(props.color, wb) : _gameData$players$pro2,
    elo = _gameData$players$pro.elo;
  var isPossibleToPlaceInCorner = Math.max(...dim) === GameData/* boardDimension */.iJ && !noCorners;
  var component = /*#__PURE__*/react.createElement("div", {
    className: "".concat(GameDisplay_module/* default.player-box */.Z["player-box"], " ").concat(!isPossibleToPlaceInCorner ? GameDisplay_module/* default.player-box--no-corners */.Z["player-box--no-corners"] : "")
  }, /*#__PURE__*/react.createElement("div", {
    className: GameDisplay_module/* default.player-box__clock */.Z["player-box__clock"],
    style: {
      backgroundColor: wrappedColor
    }
  }, /*#__PURE__*/react.createElement("div", {
    className: GameDisplay_module/* default.player-box__clock-icon */.Z["player-box__clock-icon"]
  }), /*#__PURE__*/react.createElement("span", {
    className: GameDisplay_module/* default.player-box__clock-seconds */.Z["player-box__clock-seconds"]
  }, (0,StringFormatUtils/* convertSecondsToFlexibleHoursMinutesSeconds */.lj)(props.timeInSeconds))), /*#__PURE__*/react.createElement("div", {
    className: GameDisplay_module/* default.player-box__player-data */.Z["player-box__player-data"]
  }, /*#__PURE__*/react.createElement("div", {
    className: GameDisplay_module/* default.player-box__player-icon */.Z["player-box__player-icon"],
    style: {
      borderColor: wrappedColor,
      backgroundColor: wrappedColor
    }
  }, /*#__PURE__*/react.createElement("img", {
    src: user_image,
    alt: "Default player icon"
  })), /*#__PURE__*/react.createElement("div", {
    className: GameDisplay_module/* default.player-box__player-info */.Z["player-box__player-info"]
  }, /*#__PURE__*/react.createElement("p", {
    className: GameDisplay_module/* default.player-box__player-text */.Z["player-box__player-text"]
  }, name), elo !== undefined && /*#__PURE__*/react.createElement("p", {
    className: GameDisplay_module/* default.player-box__player-text */.Z["player-box__player-text"]
  }, "(", elo, ")"))), /*#__PURE__*/react.createElement("div", {
    className: GameDisplay_module/* default.player-box__player-points-wrap */.Z["player-box__player-points-wrap"]
  }, /*#__PURE__*/react.createElement("span", {
    className: GameDisplay_module/* default.player-box__player-points */.Z["player-box__player-points"]
  }, (_points$props$color = points[props.color]) !== null && _points$props$color !== void 0 ? _points$props$color : 0)));
  var configuration = {
    color: props.color,
    component,
    styles: {
      base: "".concat(GameDisplay_module/* default.player-box-wrap */.Z["player-box-wrap"], " ").concat(sideToMove === props.color ? GameDisplay_module/* default.player-box-wrap--active */.Z["player-box-wrap--active"] : "", " ").concat(!isPossibleToPlaceInCorner ? GameDisplay_module/* default.player-box-wrap--no-corners */.Z["player-box-wrap--no-corners"] : ""),
      top: GameDisplay_module/* default.player-box-wrap--top */.Z["player-box-wrap--top"],
      left: GameDisplay_module/* default.player-box-wrap--left */.Z["player-box-wrap--left"],
      bottom: GameDisplay_module/* default.player-box-wrap--bottom */.Z["player-box-wrap--bottom"],
      right: GameDisplay_module/* default.player-box-wrap--right */.Z["player-box-wrap--right"]
    }
  };
  return (0,GameDisplayBank/* initializeComponentWithDirections */.vx)(configuration);
};
var PlayerBoxContainer = () => {
  var _useContext2 = (0,react.useContext)(BoardContext/* GameDisplayContext */.$),
    id = _useContext2.id,
    stateController = _useContext2.stateController;
  var _useSelector2 = (0,es/* useSelector */.v9)(state => (0,GeneralBoardSelectors/* selectFENSettings */.dp)({
      stateController,
      id,
      state
    })),
    _useSelector2$fenOpti = _useSelector2.fenOptions,
    boxOffset = _useSelector2$fenOpti.boxOffset,
    dead = _useSelector2$fenOpti.dead;
  var moveTree = (0,es/* useSelector */.v9)(state => (0,GeneralBoardSelectors/* selectMoveTree */.Ex)({
    stateController,
    id,
    state
  }));
  var currentMove = (0,es/* useSelector */.v9)(state => (0,GeneralBoardSelectors/* selectCurrentMove */.st)({
    stateController,
    id,
    state
  }));
  var gameData = (0,es/* useSelector */.v9)(state => (0,GameBoardSlice/* selectGameData */.gg)(state, id));
  var playerBoxes = [];
  var _iterator = _createForOfIteratorHelper(GameData/* colors */.O9),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var _selectedMove$metadat;
      var color = _step.value;
      if (dead[color]) continue;
      var newColor = color;
      for (var i = 0; i < boxOffset; i++) {
        newColor++;
        if (newColor === GameData/* totalPlayers */.q3) newColor = 0;
      }
      if (!(0,GameUnits/* verifyNumericColor */.O3)(newColor)) continue;
      var selectedMove = (0,MoveTreeInterface/* getMoveFromPathAndTree */.Yr)(moveTree, currentMove);
      var currentTime = !(0,MoveTree/* verifyValidMove */.xn)(selectedMove) ? gameData.timeControl.baseTime : (_selectedMove$metadat = selectedMove.metadata.playerClock) !== null && _selectedMove$metadat !== void 0 ? _selectedMove$metadat : gameData.timeControl.baseTime;
      playerBoxes.push( /*#__PURE__*/react.createElement(PlayerBox, {
        color: newColor,
        timeInSeconds: currentTime,
        key: GameData/* playerNames */.Q3[color]
      }));
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return /*#__PURE__*/react.createElement("div", {
    className: GameDisplay_module/* default.player-box-container */.Z["player-box-container"]
  }, playerBoxes);
};

/***/ }),

/***/ 59065:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "X": () => (/* binding */ GameDisplaySquare)
});

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(89526);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/GameInformation/GameUnits/PieceString.ts
var PieceString = __webpack_require__(20915);
// EXTERNAL MODULE: ./src/main/client/ts/components/BoardComponents/GameDisplay/GameDisplay.module.scss
var GameDisplay_module = __webpack_require__(91219);
// EXTERNAL MODULE: ./src/main/client/img/pieces/wallStandard.svg
var wallStandard = __webpack_require__(27337);
;// CONCATENATED MODULE: ./src/main/client/img/pieces/duckStandard.svg
/* harmony default export */ var duckStandard = (__webpack_require__.p + "../assets/6c0874137e5c4eef4747736df96a3fcd.svg");
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/Board/BoardInterface.ts
var BoardInterface = __webpack_require__(29939);
// EXTERNAL MODULE: ./src/main/client/ts/components/BoardComponents/GameDisplay/GameDisplayPiece.tsx + 5 modules
var GameDisplayPiece = __webpack_require__(15246);
// EXTERNAL MODULE: ./src/main/client/ts/baseTypes.ts
var baseTypes = __webpack_require__(18027);
;// CONCATENATED MODULE: ./src/main/client/ts/components/BoardComponents/GameDisplay/GameDisplaySquare.tsx








var GameDisplaySquare = props => {
  var displaySettings = new Set(props.displaySettings),
    pieceString = PieceString/* PieceString.fromObjectToClass */.Ff.fromObjectToClass(props.pieceString);
  if (pieceString.isWall()) {
    switch (pieceString.piece) {
      case "X":
        return /*#__PURE__*/react.createElement("div", {
          className: GameDisplay_module/* default.square */.Z.square
        }, /*#__PURE__*/react.createElement("img", {
          src: wallStandard/* default */.Z
        }));
      case "x":
        return /*#__PURE__*/react.createElement("div", {
          className: "".concat(GameDisplay_module/* default.square */.Z.square, " ").concat(GameDisplay_module/* default.square--ghosted */.Z["square--ghosted"])
        });
      case "Θ":
        return /*#__PURE__*/react.createElement("div", {
          className: GameDisplay_module/* default.square */.Z.square
        }, /*#__PURE__*/react.createElement("img", {
          src: duckStandard
        }));
      default:
        (0,baseTypes/* throwOnNever */.h0)(pieceString.piece);
    }
  }
  var isFogged = displaySettings.has(BoardInterface/* DisplaySettings.Fogged */.Ft.Fogged);
  var noPieceDisplay = pieceString.isEmpty() || displaySettings.has(BoardInterface/* DisplaySettings.Blindfolded */.Ft.Blindfolded) || isFogged;
  var pieceSVG = noPieceDisplay ? /*#__PURE__*/react.createElement("div", null) : /*#__PURE__*/react.createElement(GameDisplayPiece/* PieceImage */.x6, {
    pieceString: pieceString,
    configuration: {
      cache: true
    }
  });
  var isGhosted = displaySettings.has(BoardInterface/* DisplaySettings.Ghosted */.Ft.Ghosted);
  var isHighlighted = displaySettings.has(BoardInterface/* DisplaySettings.Highlighted */.Ft.Highlighted) && !isGhosted;
  var transformation = {
    boxShadow: ""
  };
  if (displaySettings.has(BoardInterface/* DisplaySettings.PieceFacesCenter */.Ft.PieceFacesCenter)) {
    var transform = "";
    switch (pieceString.color) {
      case 0:
        break;
      case 1:
        transform = "0.25turn";
        break;
      case 2:
        transform = "0.5turn";
        break;
      case 3:
        transform = "-0.25turn";
        break;
      default:
        break;
    }
    transformation.transform = "rotate(".concat(transform, ")");
  }
  return /*#__PURE__*/react.createElement("div", {
    style: transformation,
    className: "".concat(GameDisplay_module/* default.square */.Z.square, " ").concat(isHighlighted ? GameDisplay_module/* default.square--active */.Z["square--active"] : "", "\n         ").concat(isGhosted ? GameDisplay_module/* default.square--ghosted */.Z["square--ghosted"] : "", "\n         ").concat(isFogged ? GameDisplay_module/* default.square--fogged */.Z["square--fogged"] : "")
  }, pieceSVG);
};

/***/ }),

/***/ 52423:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "y": () => (/* binding */ GameDisplaySquareWrap)
});

// EXTERNAL MODULE: ./src/main/client/ts/logic/index/GameBoardSlice.ts + 1 modules
var GameBoardSlice = __webpack_require__(28150);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/Board/BoardInterface.ts
var BoardInterface = __webpack_require__(29939);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(89526);
// EXTERNAL MODULE: ./node_modules/react-redux/es/index.js + 13 modules
var es = __webpack_require__(12384);
// EXTERNAL MODULE: ./src/main/client/ts/components/BoardComponents/BoardContext.ts
var BoardContext = __webpack_require__(87792);
// EXTERNAL MODULE: ./src/main/client/ts/components/BoardComponents/GameDisplay/GameDisplay.module.scss
var GameDisplay_module = __webpack_require__(91219);
;// CONCATENATED MODULE: ./src/main/client/img/game/fleurDeLis.svg
/* harmony default export */ var fleurDeLis = (__webpack_require__.p + "../assets/250fbc7b3ff81e92514de946afa1f09c.svg");
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/GameInformation/GameUnits/PieceString.ts
var PieceString = __webpack_require__(20915);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/FENDataDecorators/Atomic.ts
var Atomic = __webpack_require__(9896);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/PieceControl/PieceControlInterface.ts
var PieceControlInterface = __webpack_require__(16703);
// EXTERNAL MODULE: ./src/main/client/ts/redux/GeneralBoardSelectors.ts
var GeneralBoardSelectors = __webpack_require__(23742);
;// CONCATENATED MODULE: ./src/main/client/ts/components/BoardComponents/GameDisplay/GameSquareWrap.tsx
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }











var GameDisplaySquareWrap = props => {
  var _useContext = (0,react.useContext)(BoardContext/* GameDisplayContext */.$),
    id = _useContext.id,
    stateController = _useContext.stateController;
  var children = props.children,
    coordinate = props.coordinate,
    onClickHandler = props.onClickHandler,
    onMouseEnterHandler = props.onMouseEnterHandler,
    onMouseLeaveHandler = props.onMouseLeaveHandler,
    atomicHoveredSquare = props.atomicHoveredSquare;
  var variantDataRules = (0,es/* useSelector */.v9)(state => (0,GeneralBoardSelectors/* selectVariantData */.DL)({
    stateController,
    id,
    state
  }));
  var _useSelector = (0,es/* useSelector */.v9)(state => (0,GeneralBoardSelectors/* selectFENSettings */.dp)({
      stateController,
      id,
      state
    })),
    _useSelector$fenOptio = _useSelector.fenOptions,
    royal = _useSelector$fenOptio.royal,
    lives = _useSelector$fenOptio.lives,
    isCustomRoyals = _useSelector.isCustomRoyals;
  var squareVisibility = (0,es/* useSelector */.v9)(state => (0,GameBoardSlice/* selectSquareVisibility */.Tn)(state, id));
  var boardSquares = (0,es/* useSelector */.v9)(state => (0,GeneralBoardSelectors/* selectBoardSquares */.SZ)({
    stateController,
    id,
    state
  }));
  var surroundings = [];
  var hillStyles = {
    boxShadow: "",
    borderRightStyle: undefined,
    borderLeftStyle: undefined,
    borderTopStyle: undefined,
    borderBottomStyle: undefined
  };
  var hillSquares = variantDataRules.kingOfTheHill;
  if (coordinate) {
    var _hillStyles$boxShadow;
    if (hillSquares !== false && hillSquares.some(c => (0,BoardInterface/* compareCoordinates */.ef)(coordinate, c))) {
      if (!hillSquares.some(c => (0,BoardInterface/* compareCoordinates */.ef)([coordinate[0] - 1, coordinate[1]], c))) {
        hillStyles.borderTopStyle = "ridge";
        hillStyles.boxShadow += "rgb(0 0 0 / 40%) 0px 6px 4px -4px inset,";
      }
      if (!hillSquares.some(c => (0,BoardInterface/* compareCoordinates */.ef)([coordinate[0] + 1, coordinate[1]], c))) {
        hillStyles.borderBottomStyle = "groove";
        hillStyles.boxShadow += "rgb(0 0 0 / 40%) 0px -6px 4px -4px inset,";
      }
      if (!hillSquares.some(c => (0,BoardInterface/* compareCoordinates */.ef)([coordinate[0], coordinate[1] + 1], c))) {
        hillStyles.borderRightStyle = "groove";
        hillStyles.boxShadow += "rgb(0 0 0 / 40%) -6px 0px 4px -4px inset,";
      }
      if (!hillSquares.some(c => (0,BoardInterface/* compareCoordinates */.ef)([coordinate[0], coordinate[1] - 1], c))) {
        hillStyles.borderLeftStyle = "ridge";
        hillStyles.boxShadow += "rgb(0 0 0 / 40%) 6px 0px 4px -4px inset,";
      }
    }
    if ((_hillStyles$boxShadow = hillStyles.boxShadow) !== null && _hillStyles$boxShadow !== void 0 && _hillStyles$boxShadow.endsWith(",")) hillStyles.boxShadow = hillStyles.boxShadow.slice(0, -1);
    var royalIndex = royal.findIndex(c => c && (0,BoardInterface/* compareCoordinates */.ef)(c, coordinate));
    if (royalIndex !== -1 && !squareVisibility[coordinate[0]][coordinate[1]].includes(BoardInterface/* DisplaySettings.Fogged */.Ft.Fogged)) {
      if (isCustomRoyals) {
        surroundings.push( /*#__PURE__*/react.createElement("img", {
          src: fleurDeLis,
          alt: "Fleur de Lis icon",
          className: GameDisplay_module/* default.square-wrap-surroundings__fleur-de-lis */.Z["square-wrap-surroundings__fleur-de-lis"]
        }));
      }
      var live = lives[royalIndex];
      if (variantDataRules.nCheck && live !== null) {
        surroundings.push( /*#__PURE__*/react.createElement("span", {
          className: GameDisplay_module/* default.square-wrap-surroundings__lives-indicator */.Z["square-wrap-surroundings__lives-indicator"]
        }, live === Infinity ? "∞" : live));
      }
    }
    if (atomicHoveredSquare) {
      if ((0,BoardInterface/* compareCoordinates */.ef)(atomicHoveredSquare, coordinate)) {
        surroundings.push( /*#__PURE__*/react.createElement("div", {
          className: GameDisplay_module/* default.square-wrap-surroundings__atomic-explosion */.Z["square-wrap-surroundings__atomic-explosion"]
        }));
      } else {
        var _iterator = _createForOfIteratorHelper(Atomic.Atomic.atomicCoordinates),
          _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var atomicDisplacement = _step.value;
            var atomicCoordinate = [atomicHoveredSquare[0] + atomicDisplacement[0], atomicHoveredSquare[1] + atomicDisplacement[1]];
            if (!(0,BoardInterface/* compareCoordinates */.ef)(coordinate, atomicCoordinate)) continue;
            var pieceString = PieceString/* PieceString.fromObjectToClass */.Ff.fromObjectToClass(boardSquares[atomicCoordinate[0]][atomicCoordinate[1]]);
            if (pieceString.isWall() || pieceString.isEmpty()) continue;
            if (PieceControlInterface/* pieceControlConfigSettings */.Gf[boardSquares[atomicCoordinate[0]][atomicCoordinate[1]]._piece].moveGenerationSettings.isPawn && !pieceString.isDead()) {
              surroundings.push( /*#__PURE__*/react.createElement("div", {
                className: GameDisplay_module/* default.square-wrap-surroundings__atomic-immunity */.Z["square-wrap-surroundings__atomic-immunity"]
              }));
            } else {
              surroundings.push( /*#__PURE__*/react.createElement("div", {
                className: GameDisplay_module/* default.square-wrap-surroundings__atomic-explosion */.Z["square-wrap-surroundings__atomic-explosion"]
              }));
            }
            break;
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      }
    }
  }
  return /*#__PURE__*/react.createElement("div", {
    className: "".concat(GameDisplay_module/* default.square-wrap */.Z["square-wrap"], " ").concat(hillSquares ? GameDisplay_module/* default.square-wrap--king-of-the-hill */.Z["square-wrap--king-of-the-hill"] : ""),
    style: hillStyles,
    onClick: onClickHandler,
    onMouseEnter: () => onMouseEnterHandler === null || onMouseEnterHandler === void 0 ? void 0 : onMouseEnterHandler(coordinate !== null && coordinate !== void 0 ? coordinate : [0, 0]),
    onMouseLeave: onMouseLeaveHandler
  }, children, surroundings.length !== 0 && /*#__PURE__*/react.createElement("div", {
    className: GameDisplay_module/* default.square-wrap-surroundings */.Z["square-wrap-surroundings"]
  }, surroundings));
};

/***/ }),

/***/ 13540:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "I5": () => (/* binding */ SpecialTag),
/* harmony export */   "K9": () => (/* binding */ GameVariantRule),
/* harmony export */   "aM": () => (/* binding */ GameStonewallRule),
/* harmony export */   "dY": () => (/* binding */ tooltipID),
/* harmony export */   "xc": () => (/* binding */ GamePromotionRule)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(89526);
/* harmony import */ var _GameVariantRules_module_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(49330);
/* harmony import */ var _client_ts_interfaces_Colors__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(7970);
/* harmony import */ var _moveGeneration_GameInformation_GameUnits_PieceString__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20915);
/* harmony import */ var _BoardComponents_GameDisplay_GameDisplayPiece__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(15246);
/* harmony import */ var _utils_StringFormatUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(14093);
/* harmony import */ var _client_ts_baseTypes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(18027);







var SpecialTag = {
  NoEnPassant: "noEnPassant",
  NoZombies: "noZombies"
};
var tooltipID = "variantRuleTooltip";
var convertToCSScase = tag => "variant-rule--".concat((0,_utils_StringFormatUtils__WEBPACK_IMPORTED_MODULE_4__/* .convertCamelCaseToKebabCase */ ._e)(tag));
var verifyVariantRuleStylesString = str => str in _GameVariantRules_module_scss__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z;
var GameVariantRule = props => {
  var _props$information = props.information,
    description = _props$information.description,
    textualForm = _props$information.textualForm,
    tag = _props$information.tag,
    color = _props$information.color,
    displayIcon = _props$information.displayIcon;
  if (textualForm === undefined) {
    (0,_client_ts_baseTypes__WEBPACK_IMPORTED_MODULE_5__/* .assertNonUndefined */ .lM)(color);
    var extraClassName = convertToCSScase(tag);
    var extraClass = verifyVariantRuleStylesString(extraClassName) ? " ".concat(extraClassName) : "";
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", {
      "data-tooltip-id": tooltipID,
      "data-tooltip-content": description,
      className: _GameVariantRules_module_scss__WEBPACK_IMPORTED_MODULE_1__/* ["default"]["variant-rule"] */ .Z["variant-rule"] + extraClass,
      "data-content": displayIcon,
      style: {
        color: (0,_client_ts_interfaces_Colors__WEBPACK_IMPORTED_MODULE_6__/* .wrapIndexedColor */ .Hi)(color)
      }
    });
  } else {
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", {
      "data-tooltip-id": tooltipID,
      "data-tooltip-content": description,
      className: "".concat(_GameVariantRules_module_scss__WEBPACK_IMPORTED_MODULE_1__/* ["default"]["variant-rule"] */ .Z["variant-rule"], " ").concat(_GameVariantRules_module_scss__WEBPACK_IMPORTED_MODULE_1__/* ["default"]["variant-rule--textual-rule"] */ .Z["variant-rule--textual-rule"])
    }, textualForm);
  }
};
var GamePromotionRule = props => {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", {
    className: "".concat(_GameVariantRules_module_scss__WEBPACK_IMPORTED_MODULE_1__/* ["default"]["variant-rule"] */ .Z["variant-rule"], " ").concat(_GameVariantRules_module_scss__WEBPACK_IMPORTED_MODULE_1__/* ["default"]["variant-rule--promotion-wrap"] */ .Z["variant-rule--promotion-wrap"]),
    "data-tooltip-id": tooltipID,
    "data-tooltip-content": "".concat(props.promotionPieces.description, " ").concat(props.promotionRank.description)
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", {
    className: _GameVariantRules_module_scss__WEBPACK_IMPORTED_MODULE_1__/* ["default"]["variant-rule--textual-rule"] */ .Z["variant-rule--textual-rule"]
  }, "".concat(props.promotionRank.rank).concat((0,_utils_StringFormatUtils__WEBPACK_IMPORTED_MODULE_4__/* .formatOrdinalNumber */ .od)(props.promotionRank.rank), "=")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", {
    className: "".concat(_GameVariantRules_module_scss__WEBPACK_IMPORTED_MODULE_1__/* ["default"]["variant-rule--promotion"] */ .Z["variant-rule--promotion"])
  }, props.promotionPieces.pieces.map(letter => {
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
      key: letter
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_BoardComponents_GameDisplay_GameDisplayPiece__WEBPACK_IMPORTED_MODULE_3__/* .PieceImage */ .x6, {
      pieceString: (0,_moveGeneration_GameInformation_GameUnits_PieceString__WEBPACK_IMPORTED_MODULE_2__/* .createPieceFromData */ .HC)(_moveGeneration_GameInformation_GameUnits_PieceString__WEBPACK_IMPORTED_MODULE_2__/* .deadColorIndex */ .Ir, letter),
      configuration: {
        size: "22px",
        customColor: (0,_client_ts_interfaces_Colors__WEBPACK_IMPORTED_MODULE_6__/* .createHexColor */ .TG)("#FF8C00"),
        className: _GameVariantRules_module_scss__WEBPACK_IMPORTED_MODULE_1__/* ["default"]["variant-rule--promotion__promotion-piece"] */ .Z["variant-rule--promotion__promotion-piece"]
      }
    }));
  })));
};
var GameStonewallRule = props => {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", {
    className: "".concat(_GameVariantRules_module_scss__WEBPACK_IMPORTED_MODULE_1__/* ["default"]["variant-rule"] */ .Z["variant-rule"], " ").concat(_GameVariantRules_module_scss__WEBPACK_IMPORTED_MODULE_1__/* ["default"]["variant-rule--stonewall"] */ .Z["variant-rule--stonewall"]),
    "data-tooltip-id": tooltipID,
    "data-tooltip-content": props.description
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_BoardComponents_GameDisplay_GameDisplayPiece__WEBPACK_IMPORTED_MODULE_3__/* .PieceImage */ .x6, {
    pieceString: (0,_moveGeneration_GameInformation_GameUnits_PieceString__WEBPACK_IMPORTED_MODULE_2__/* .createPieceFromData */ .HC)(_moveGeneration_GameInformation_GameUnits_PieceString__WEBPACK_IMPORTED_MODULE_2__/* .deadColorIndex */ .Ir, "R"),
    configuration: {
      size: "22px"
    },
    renderWithStonewall: true
  }));
};

/***/ }),

/***/ 46396:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "J": () => (/* binding */ useTimer)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(89526);
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var useTimer = parameters => {
  var _parameters$totalTime, _parameters$decrement;
  var totalTime = (_parameters$totalTime = parameters.totalTime) !== null && _parameters$totalTime !== void 0 ? _parameters$totalTime : Infinity,
    decrement = (_parameters$decrement = parameters.decrement) !== null && _parameters$decrement !== void 0 ? _parameters$decrement : 1;
  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(totalTime),
    _useState2 = _slicedToArray(_useState, 2),
    secondsLeft = _useState2[0],
    setSeconds = _useState2[1];
  var _useState3 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(Boolean(parameters.autoStart)),
    _useState4 = _slicedToArray(_useState3, 2),
    isRunning = _useState4[0],
    toggleRunning = _useState4[1];
  var intervalRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(NaN);
  var pause = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {
    toggleRunning(false);
  }, []);
  var reset = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {
    setSeconds(totalTime);
  }, [totalTime]);
  var start = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {
    toggleRunning(true);
  }, []);
  var toggle = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {
    if (isRunning) {
      toggleRunning(false);
      setSeconds(totalTime);
    } else toggleRunning(true);
  }, [isRunning, totalTime]);
  var stop = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {
    toggleRunning(false);
    setSeconds(totalTime);
  }, [totalTime]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (isRunning) {
      intervalRef.current = window.setInterval(() => {
        var newSeconds = secondsLeft - decrement;
        if (newSeconds <= 0) {
          var _parameters$onTimeout;
          (_parameters$onTimeout = parameters.onTimeout) === null || _parameters$onTimeout === void 0 ? void 0 : _parameters$onTimeout.call(parameters);
          toggleRunning(false);
        } else {
          var _parameters$onUpdate;
          (_parameters$onUpdate = parameters.onUpdate) === null || _parameters$onUpdate === void 0 ? void 0 : _parameters$onUpdate.call(parameters);
          setSeconds(newSeconds);
        }
      }, parameters.interval);
    } else {
      window.clearInterval(intervalRef.current);
    }
    return () => window.clearInterval(intervalRef.current);
  }, [decrement, isRunning, parameters, secondsLeft]);
  return {
    pause,
    reset,
    start,
    toggle,
    stop,
    secondsLeft,
    isRunning
  };
};

/***/ }),

/***/ 7970:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "$9": () => (/* binding */ validateIndexedColor),
/* harmony export */   "Hi": () => (/* binding */ wrapIndexedColor),
/* harmony export */   "TG": () => (/* binding */ createHexColor),
/* harmony export */   "yk": () => (/* binding */ createRGBColor)
/* harmony export */ });
/* unused harmony exports verifyHexColor, validateHexColor, wrapRGBColor, verifyRGBColor, validateRGBColor, createHSLColor, wrapHSLColor, verifyHSLColor, validateHSLColor */
/* harmony import */ var _baseTypes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(18027);

var hexColorRegex = /^#(?:[0-9a-fA-F]{3}){1,2}$/;
var createHexColor = color => {
  if (hexColorRegex.test(color)) {
    return color;
  } else throw new TypeError("The supplied hex color is not a hex color: " + color);
};
var verifyHexColor = color => typeof color === "string";
var validateHexColor = color => {
  if (typeof color === "string") {
    try {
      createHexColor(color);
      return true;
    } catch (_unused) {
      return false;
    }
  } else return false;
};
var createRGBColor = color => {
  if (color >= 0 || color <= 255) {
    return color;
  } else throw new TypeError("The supplied RGB color value is not an RGB color value: ".concat(color));
};
var wrapRGBColor = color => "rgb(".concat(color.join(","), ")");
var verifyRGBColor = color => Array.isArray(color);
var validateRGBColor = color => {
  if (Array.isArray(color) && (0,_baseTypes__WEBPACK_IMPORTED_MODULE_0__/* .verifyTupleType */ .CG)(color, 3) && color.every(c => typeof c === "number")) {
    try {
      color.forEach(c => createRGBColor(c));
      return true;
    } catch (_unused2) {
      return false;
    }
  } else return false;
};
var createHSLColor = color => {
  if ((color.hue >= 0 || color.hue <= 359) && (color.saturation >= 0 || color.saturation <= 100) && (color.lightness >= 0 || color.lightness <= 100)) {
    return color;
  } else throw new TypeError("The supplied HSL value is not an HSL color: \" + color");
};
var wrapHSLColor = color => "hsl(".concat(color.hue, ",").concat(color.saturation, "%,").concat(color.lightness, "%)");
var verifyHSLColor = color => typeof color === "object";
var validateHSLColor = color => {
  var verifyNumberRecord = obj => {
    for (var key in obj) {
      if (!Object.prototype.hasOwnProperty.call(obj, key)) continue;
      if (typeof obj[key] !== "number") return false;
    }
    return true;
  };
  if (typeof color === "object" && color && "hue" in color && "saturation" in color && "lightness" in color && verifyNumberRecord(color)) {
    try {
      createHSLColor(color);
      return true;
    } catch (_unused3) {
      return false;
    }
  } else return false;
};
var wrapIndexedColor = color => {
  if (verifyHexColor(color)) {
    return color;
  } else if (verifyRGBColor(color)) {
    return wrapRGBColor(color);
  } else if (verifyHSLColor(color)) {
    return wrapHSLColor(color);
  } else {
    return (0,_baseTypes__WEBPACK_IMPORTED_MODULE_0__/* .throwOnNever */ .h0)(color);
  }
};
var validateIndexedColor = color => {
  return validateHexColor(color) || validateRGBColor(color) || validateHSLColor(color);
};

/***/ }),

/***/ 34355:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BD": () => (/* binding */ initializeBoardSquares),
/* harmony export */   "ft": () => (/* binding */ getVerticalPlacementModulus),
/* harmony export */   "sC": () => (/* binding */ isVerticalPlacement),
/* harmony export */   "x_": () => (/* binding */ getHorizontalPlacementModulus)
/* harmony export */ });
/* harmony import */ var _baseTypes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(18027);
/* harmony import */ var _movegen_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76758);


var initializeBoardSquares = baseValue => (0,_baseTypes__WEBPACK_IMPORTED_MODULE_1__/* .createTupleFromCallback */ .fi)(() => (0,_baseTypes__WEBPACK_IMPORTED_MODULE_1__/* .createTupleFromCallback */ .fi)(baseValue, _movegen_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_0__/* .boardDimension */ .iJ), _movegen_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_0__/* .boardDimension */ .iJ);
var isVerticalPlacement = color => color % 2 === 0;
function getVerticalPlacementModulus(num) {
  var result = num % 2;
  if (result !== 0 && result !== 1) throw new Error("Invalid number passed: ".concat(num));
  return result;
}
function getHorizontalPlacementModulus(num) {
  var result = num % 2 ^ 1;
  if (result !== 0 && result !== 1) throw new Error("Invalid number passed: ".concat(num));
  return result;
}

/***/ }),

/***/ 28150:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "ck": () => (/* binding */ changeCurrentFogPerspective),
  "Xz": () => (/* binding */ changeCurrentMove),
  "bA": () => (/* binding */ createNewGameBoard),
  "ZP": () => (/* binding */ GameBoardSlice),
  "sP": () => (/* binding */ gameBoardsAdapter),
  "cD": () => (/* binding */ getChainedDuckDrops),
  "Pe": () => (/* binding */ getChainedDuckMoves),
  "Ef": () => (/* binding */ getChainedSeirawanMoves),
  "QC": () => (/* binding */ getCurrentMove),
  "LU": () => (/* binding */ goToBeginning),
  "tV": () => (/* binding */ goToEnd),
  "su": () => (/* binding */ goToNextMove),
  "Gq": () => (/* binding */ goToNextPly),
  "eN": () => (/* binding */ goToPreviousMove),
  "IC": () => (/* binding */ goToPreviousPly),
  "X3": () => (/* binding */ resetInteractionSettings),
  "hB": () => (/* binding */ selectChainedMoveSettings),
  "WW": () => (/* binding */ selectFogPerspective),
  "I3": () => (/* binding */ selectGameBoard),
  "xt": () => (/* binding */ selectGameBoardCurrentMove),
  "Zi": () => (/* binding */ selectGameBoardFENSettings),
  "Wl": () => (/* binding */ selectGameBoardMoveTree),
  "dP": () => (/* binding */ selectGameBoardPGN),
  "G3": () => (/* binding */ selectGameBoardRules),
  "zD": () => (/* binding */ selectGameBoardSquares),
  "SN": () => (/* binding */ selectGameBoardType),
  "C0": () => (/* binding */ selectGameBoardVariantData),
  "gg": () => (/* binding */ selectGameData),
  "An": () => (/* binding */ selectHighlightedSquares),
  "FE": () => (/* binding */ selectInternalMoves),
  "Tn": () => (/* binding */ selectSquareVisibility),
  "qG": () => (/* binding */ setChainedMoveSettings),
  "sU": () => (/* binding */ setLegalMoves),
  "C3": () => (/* binding */ updateInteractionSettings)
});

// UNUSED EXPORTS: gameBoardsSlice, selectInitiallyAliveColors

// EXTERNAL MODULE: ./src/main/client/ts/baseTypes.ts
var baseTypes = __webpack_require__(18027);
// EXTERNAL MODULE: ./src/main/client/ts/logic/BaseInterfaces.ts
var BaseInterfaces = __webpack_require__(34355);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/GameInformation/GameData.ts
var GameData = __webpack_require__(76758);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/GameInformation/GameUnits/PieceString.ts
var PieceString = __webpack_require__(20915);
// EXTERNAL MODULE: ./node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js + 2 modules
var redux_toolkit_esm = __webpack_require__(96057);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/MoveTree/MoveTreeInterface.ts
var MoveTreeInterface = __webpack_require__(37017);
;// CONCATENATED MODULE: ./src/main/client/ts/logic/index/reducers/BoardReducers.ts
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }




var boardReducers = {
  getChainedDuckMoves: (state, action) => {
    var _gameBoard$chainedMov;
    var id = action.payload.id;
    var gameBoard = gameBoardsAdapter.getSelectors().selectById(state, id);
    if (!(gameBoard !== null && gameBoard !== void 0 && (_gameBoard$chainedMov = gameBoard.chainedMoveSettings.duck) !== null && _gameBoard$chainedMov !== void 0 && _gameBoard$chainedMov.duckMove)) return;
    var highlightedSquares = (0,BaseInterfaces/* initializeBoardSquares */.BD)(() => undefined);
    var _iterator = _createForOfIteratorHelper(gameBoard.chainedMoveSettings.duck.duckMove),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var move = _step.value;
        highlightedSquares[move.endCoordinates[0]][move.endCoordinates[1]] = [gameBoard.chainedMoveSettings.duck.move, move];
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    gameBoardsAdapter.updateOne(state, {
      type: "gameBoard/updateChainedDuckMoves",
      payload: {
        id: action.payload.id,
        changes: {
          highlightedSquares
        }
      }
    });
  },
  getChainedDuckDrops: (state, action) => {
    var _action$payload = action.payload,
      id = _action$payload.id,
      move = _action$payload.move;
    var gameBoard = gameBoardsAdapter.getSelectors().selectById(state, id);
    if (!move.nextChainedMoves || !gameBoard) return;
    if ((0,MoveTreeInterface/* verifyDroppingMoveArray */.lc)(move.nextChainedMoves)) {
      gameBoard.chainedMoveSettings = {
        duck: {
          duckDroppingMove: move.nextChainedMoves,
          move
        }
      };
      var highlightedSquares = (0,BaseInterfaces/* initializeBoardSquares */.BD)(() => undefined);
      var _iterator2 = _createForOfIteratorHelper(move.nextChainedMoves),
        _step2;
      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var drop = _step2.value;
          highlightedSquares[drop.endCoordinates[0]][drop.endCoordinates[1]] = [move, drop];
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
      gameBoardsAdapter.updateOne(state, {
        type: "gameBoard/updateChainedDuckDrops",
        payload: {
          id: action.payload.id,
          changes: {
            highlightedSquares
          }
        }
      });
    } else if ((0,MoveTreeInterface/* verifyStandardMoveArray */._r)(move.nextChainedMoves)) {
      gameBoardsAdapter.updateOne(state, {
        type: "gameBoard/updateChainedDuckDropsSettings",
        payload: {
          id: action.payload.id,
          changes: {
            chainedMoveSettings: {
              duck: {
                duckMove: move.nextChainedMoves,
                move
              }
            }
          }
        }
      });
    }
  },
  getChainedSeirawanMoves: (state, action) => {
    var _action$payload2 = action.payload,
      id = _action$payload2.id,
      piece = _action$payload2.piece;
    var gameBoard = gameBoardsAdapter.getSelectors().selectById(state, id);
    if (!(gameBoard !== null && gameBoard !== void 0 && gameBoard.chainedMoveSettings.seirawanDrops)) return;
    var highlightedSquares = (0,BaseInterfaces/* initializeBoardSquares */.BD)(() => undefined);
    var _iterator3 = _createForOfIteratorHelper(gameBoard.chainedMoveSettings.seirawanDrops.chainedMoves),
      _step3;
    try {
      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
        var drop = _step3.value;
        if (PieceString/* PieceString.comparePieceStringObjects */.Ff.comparePieceStringObjects(drop.piece, piece)) {
          highlightedSquares[drop.endCoordinates[0]][drop.endCoordinates[1]] = [gameBoard.chainedMoveSettings.seirawanDrops.move, drop];
          break;
        }
      }
    } catch (err) {
      _iterator3.e(err);
    } finally {
      _iterator3.f();
    }
    gameBoardsAdapter.updateOne(state, {
      type: "gameBoard/updateChainedSeirawanMoves",
      payload: {
        id,
        changes: {
          highlightedSquares
        }
      }
    });
  },
  setLegalMoves: (state, action) => {
    var highlightedSquares = (0,BaseInterfaces/* initializeBoardSquares */.BD)(() => undefined);
    var _action$payload3 = action.payload,
      legalMoves = _action$payload3.legalMoves,
      id = _action$payload3.id;
    var _iterator4 = _createForOfIteratorHelper(legalMoves),
      _step4;
    try {
      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
        var legalMove = _step4.value;
        highlightedSquares[legalMove.endCoordinates[0]][legalMove.endCoordinates[1]] = [legalMove];
      }
    } catch (err) {
      _iterator4.e(err);
    } finally {
      _iterator4.f();
    }
    gameBoardsAdapter.updateOne(state, {
      type: "gameBoard/setLegalMoves",
      payload: {
        id,
        changes: {
          highlightedSquares
        }
      }
    });
  }
};
// EXTERNAL MODULE: ./src/main/client/ts/logic/index/reducers/MoveTreeReducers.ts
var MoveTreeReducers = __webpack_require__(95116);
;// CONCATENATED MODULE: ./src/main/client/ts/logic/index/GameBoardSlice.ts
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }







var gameBoardsAdapter = (0,redux_toolkit_esm/* createEntityAdapter */.HF)();
var gameBoardsSlice = (0,redux_toolkit_esm/* createSlice */.oM)({
  name: "gameBoards",
  initialState: gameBoardsAdapter.getInitialState(),
  reducers: _objectSpread(_objectSpread(_objectSpread({}, boardReducers), MoveTreeReducers/* moveTreeReducers */.D), {}, {
    createNewGameBoard: (state, action) => {
      var pieceStringObject = PieceString/* emptyPieceString.toObject */.v2.toObject();
      var newGameBoard = {
        id: action.payload.id,
        currentMove: [0],
        moveTree: [],
        boardSquares: (0,BaseInterfaces/* initializeBoardSquares */.BD)(() => pieceStringObject),
        highlightedSquares: (0,BaseInterfaces/* initializeBoardSquares */.BD)(() => undefined),
        squareVisibility: (0,BaseInterfaces/* initializeBoardSquares */.BD)(() => []),
        chainedMoveSettings: {},
        initializationComplete: false,
        serializedPGN: {
          board: "",
          moves: ""
        },
        variantRules: [],
        initiallyAliveColors: (0,baseTypes/* createTuple */.VS)(true, GameData/* totalPlayers */.q3),
        variantType: GameData/* VariantType.FFA */.Jy.FFA,
        allowedInternalMoves: [],
        currentFogPerspective: false
      };
      gameBoardsAdapter.addOne(state, newGameBoard);
    },
    resetInteractionSettings: (state, action) => {
      var gameBoard = gameBoardsAdapter.getSelectors().selectById(state, action.payload.id);
      if (!(gameBoard !== null && gameBoard !== void 0 && gameBoard.chainedMoveSettings.seirawanDrops)) return;
      gameBoardsAdapter.updateOne(state, {
        type: "gameBoard/performResetInteractionSettings",
        payload: {
          id: action.payload.id,
          changes: {
            chainedMoveSettings: {},
            highlightedSquares: (0,BaseInterfaces/* initializeBoardSquares */.BD)(() => undefined)
          }
        }
      });
    },
    setChainedMoveSettings: (state, action) => {
      var gameBoard = gameBoardsAdapter.getSelectors().selectById(state, action.payload.id);
      if (!gameBoard) return;
      gameBoardsAdapter.updateOne(state, {
        type: "gameBoard/performResetInteractionSettings",
        payload: {
          id: action.payload.id,
          changes: {
            chainedMoveSettings: action.payload.settings
          }
        }
      });
    },
    updateInteractionSettings: (state, action) => {
      var gameBoard = gameBoardsAdapter.getSelectors().selectById(state, action.payload.id);
      if (!gameBoard) return;
      gameBoardsAdapter.updateOne(state, {
        type: "gameBoard/updateBoardInteractionSettings",
        payload: {
          id: action.payload.id,
          changes: _objectSpread(_objectSpread({}, action.payload.settings), {}, {
            highlightedSquares: (0,BaseInterfaces/* initializeBoardSquares */.BD)(() => undefined),
            chainedMoveSettings: {},
            initializationComplete: true
          })
        }
      });
    },
    changeCurrentMove: (state, action) => {
      var _action$payload = action.payload,
        id = _action$payload.id,
        path = _action$payload.path;
      gameBoardsAdapter.updateOne(state, {
        type: "gameBoard/switchCurrentMove",
        payload: {
          id,
          changes: {
            currentMove: path
          }
        }
      });
    },
    changeCurrentFogPerspective: (state, action) => {
      var _action$payload2 = action.payload,
        id = _action$payload2.id,
        perspective = _action$payload2.perspective,
        visibility = _action$payload2.visibility;
      gameBoardsAdapter.updateOne(state, {
        type: "gameBoard/changeCurrentFogPerspective",
        payload: {
          id,
          changes: {
            currentFogPerspective: perspective,
            squareVisibility: visibility
          }
        }
      });
    }
  })
});
var getCurrentMove = (state, id) => gameBoardsAdapter.getSelectors().selectById(state.gameBoards, id);
var _gameBoardsSlice$acti = gameBoardsSlice.actions,
  createNewGameBoard = _gameBoardsSlice$acti.createNewGameBoard,
  getChainedDuckMoves = _gameBoardsSlice$acti.getChainedDuckMoves,
  getChainedSeirawanMoves = _gameBoardsSlice$acti.getChainedSeirawanMoves,
  resetInteractionSettings = _gameBoardsSlice$acti.resetInteractionSettings,
  setChainedMoveSettings = _gameBoardsSlice$acti.setChainedMoveSettings,
  getChainedDuckDrops = _gameBoardsSlice$acti.getChainedDuckDrops,
  updateInteractionSettings = _gameBoardsSlice$acti.updateInteractionSettings,
  setLegalMoves = _gameBoardsSlice$acti.setLegalMoves,
  changeCurrentMove = _gameBoardsSlice$acti.changeCurrentMove,
  goToBeginning = _gameBoardsSlice$acti.goToBeginning,
  goToEnd = _gameBoardsSlice$acti.goToEnd,
  goToNextMove = _gameBoardsSlice$acti.goToNextMove,
  goToNextPly = _gameBoardsSlice$acti.goToNextPly,
  goToPreviousMove = _gameBoardsSlice$acti.goToPreviousMove,
  goToPreviousPly = _gameBoardsSlice$acti.goToPreviousPly,
  changeCurrentFogPerspective = _gameBoardsSlice$acti.changeCurrentFogPerspective;

var selectGameBoard = (state, id) => {
  var gameBoard = gameBoardsAdapter.getSelectors().selectById(state.gameBoards, id);
  if (false) {}

  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
  return gameBoard;
};
var selectGameBoardCurrentMove = (state, id) => selectGameBoard(state, id).currentMove;
var selectGameBoardMoveTree = (state, id) => selectGameBoard(state, id).moveTree;
var selectGameBoardSquares = (state, id) => selectGameBoard(state, id).boardSquares;
var selectGameBoardPGN = (state, id) => selectGameBoard(state, id).serializedPGN;
var selectGameBoardType = (state, id) => selectGameBoard(state, id).variantType;
var selectGameBoardRules = (state, id) => selectGameBoard(state, id).variantRules;
var selectGameBoardFENSettings = (state, id) => {
  var fenSettings = selectGameBoard(state, id).publicFENSettings;
  if (false) {}

  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
  return fenSettings;
};
var selectSquareVisibility = (state, id) => selectGameBoard(state, id).squareVisibility;
var selectInternalMoves = (state, id) => selectGameBoard(state, id).allowedInternalMoves;
var selectGameBoardVariantData = (state, id) => {
  var variantDataRules = selectGameBoard(state, id).variantDataRules;
  if (false) {}

  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
  return variantDataRules;
};
var selectGameData = (state, id) => {
  var gameData = selectGameBoard(state, id).gameData;
  if (false) {}

  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
  return gameData;
};
var selectInitiallyAliveColors = (state, id) => selectGameBoard(state, id).initiallyAliveColors;
var selectFogPerspective = (state, id) => selectGameBoard(state, id).currentFogPerspective;
var selectHighlightedSquares = (state, id) => selectGameBoard(state, id).highlightedSquares;
var selectChainedMoveSettings = (state, id) => selectGameBoard(state, id).chainedMoveSettings;
/* harmony default export */ var GameBoardSlice = (gameBoardsSlice.reducer);

/***/ }),

/***/ 72822:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "bj": () => (/* binding */ dispatchSyncRecord),
  "cq": () => (/* binding */ initialDispatches),
  "$s": () => (/* binding */ requiredDispatches)
});

// EXTERNAL MODULE: ./node_modules/reflect-metadata/Reflect.js
var Reflect = __webpack_require__(21714);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/Board/Board.ts + 1 modules
var Board = __webpack_require__(80273);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/GameInformation/GameData.ts
var GameData = __webpack_require__(76758);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/GameInformation/GameUnits/PieceString.ts
var PieceString = __webpack_require__(20915);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/MoveTree/MoveTreeInterface.ts
var MoveTreeInterface = __webpack_require__(37017);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/VariantRules/VariantRule.ts
var VariantRule = __webpack_require__(75942);
// EXTERNAL MODULE: ./src/main/client/ts/utils/ArrayUtils.ts
var ArrayUtils = __webpack_require__(34092);
// EXTERNAL MODULE: ./src/main/client/ts/logic/utils/Tags/InputOutputProcessing.ts + 4 modules
var InputOutputProcessing = __webpack_require__(19041);
// EXTERNAL MODULE: ./src/main/client/ts/baseTypes.ts
var baseTypes = __webpack_require__(18027);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/Board/BoardInterface.ts
var BoardInterface = __webpack_require__(29939);
;// CONCATENATED MODULE: ./src/main/client/ts/logic/movegen/Board/BoardMoveValidator.ts
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }

function validateBoardMove(board, move) {
  var startingMoves;
  var firstMove = move[0];
  if ((0,MoveTreeInterface/* verifyStandardMove */.$j)(firstMove)) {
    startingMoves = board.getLegalMoves(firstMove.startCoordinates[0], firstMove.startCoordinates[1]);
  } else if ((0,MoveTreeInterface/* verifyDroppingMove */.x7)(firstMove)) {
    startingMoves = board.getDroppingMoves(firstMove.piece);
  } else if ((0,MoveTreeInterface/* verifyInternalMove */.LR)(firstMove)) {
    startingMoves = board.getAllowedInternalMoves();
  } else throw new Error("Unexpected move signature encountered: ".concat(JSON.stringify(move)));
  var specialMoveSettings = {
    hasEnPassant: false
  };
  if (board.variantData.duckChess && move.length === 1) return false;
  var _iterator = _createForOfIteratorHelper(move),
    _step;
  try {
    var _loop = function _loop() {
      var moveComponent = _step.value;
      var move = startingMoves.find(legalMove => (0,MoveTreeInterface/* compareMoves */.JG)(legalMove, moveComponent));
      if (!move) return {
        v: false
      };
      if ((0,MoveTreeInterface/* verifyStandardMove */.$j)(move) && move.specialType === MoveTreeInterface/* SpecialMove.EnPassant */.uj.EnPassant) {
        specialMoveSettings.hasEnPassant = true;
      }
      if (move.nextChainedMoves) {
        startingMoves = move.nextChainedMoves;
      }
    };
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var _ret = _loop();
      if (typeof _ret === "object") return _ret.v;
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return specialMoveSettings;
}
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/MoveTree/MoveTree.ts + 1 modules
var MoveTree = __webpack_require__(99234);
;// CONCATENATED MODULE: ./src/main/client/ts/logic/movegen/MoveTree/MoveTreeValidator.ts
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function MoveTreeValidator_createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = MoveTreeValidator_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function MoveTreeValidator_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return MoveTreeValidator_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return MoveTreeValidator_arrayLikeToArray(o, minLen); }
function MoveTreeValidator_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }







function validateMoveTree(board, moves) {
  var clonedBoard = board.createClone();
  clonedBoard.moves = (0,MoveTree/* createMoveTree */.g7)(clonedBoard.createSnapshot());
  clonedBoard.pregenerateAttacks();
  var dimension = Math.max(...clonedBoard.data.fenOptions.tag("dim"));
  function traverse(current) {
    var currentFullMove = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    var currentTimeOnClocks = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : (0,baseTypes/* createTuple */.VS)(board.gameData.timeControl.baseTime, GameData/* totalPlayers */.q3);
    var moves = [];
    var previousSideToMove = -1;
    for (var i = 0; i < current.length; i++) {
      var moveWrapper = current[i];
      var moveData = moveWrapper.moveData,
        path = moveWrapper.path,
        alternativeLines = moveWrapper.alternativeLines;
      var newMoveWrapper = (0,MoveTreeInterface/* createBaseMoveWrapper */.Zp)({
        moveData,
        path: path.slice()
      }, {
        comment: moveWrapper.comment
      });
      var validationResult = void 0;
      try {
        if (validationResult = validateBoardMove(clonedBoard, moveData) || undefined) {
          newMoveWrapper.moveData = moveData;
        } else break;
      } catch (_unused) {
        break;
      }
      var firstStandardMoveSet = false;
      var _iterator = MoveTreeValidator_createForOfIteratorHelper(moveData),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var moveComponent = _step.value;
          if ((0,MoveTreeInterface/* verifyStandardMove */.$j)(moveComponent)) {
            if (moveComponent.promotion) {
              moveComponent.promotion = moveComponent.promotion.map(p => {
                if (p.isWall()) return p;
                return (0,PieceString/* createPieceFromData */.HC)(clonedBoard.data.sideToMove, p.piece);
              });
            }
            if (!firstStandardMoveSet) {
              newMoveWrapper.metadata.movingPiece = clonedBoard.board[moveComponent.startCoordinates[0]][moveComponent.startCoordinates[1]];
              firstStandardMoveSet = true;
            }
            if (validationResult.hasEnPassant) {
              moveComponent.specialType = MoveTreeInterface/* SpecialMove.EnPassant */.uj.EnPassant;
              validationResult.hasEnPassant = false;
              newMoveWrapper.metadata.isCapture = true;
            }
            if (clonedBoard.data.getCapturedPieces(moveComponent).length > 0) newMoveWrapper.metadata.isCapture = true;
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      if (i === 0 || (0,ArrayUtils/* findLastIndex */.qr)(clonedBoard.data.fenOptions.tag("dead"), b => !b) === previousSideToMove) {
        newMoveWrapper.metadata.currentFullMove = ++currentFullMove;
      }
      newMoveWrapper.metadata.currentSideToMove = previousSideToMove = clonedBoard.data.sideToMove;
      var results = clonedBoard.makeMove(moveData);
      for (var _i = 0; _i < GameData/* totalPlayers */.q3; _i++) {
        if (results.checkmates[_i]) {
          newMoveWrapper.metadata.checkmates++;
        } else if (results.checks[_i]) {
          newMoveWrapper.metadata.checks++;
        }
      }
      var _iterator2 = MoveTreeValidator_createForOfIteratorHelper(alternativeLines),
        _step2;
      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var line = _step2.value;
          newMoveWrapper.alternativeLines.push(traverse(line, currentFullMove, [...currentTimeOnClocks]));
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
      if (moveWrapper.metadata.playerClock) {
        currentTimeOnClocks[previousSideToMove] -= moveWrapper.metadata.playerClock;
      }
      newMoveWrapper.metadata = _objectSpread({}, moveWrapper.metadata);
      newMoveWrapper.metadata.playerClock = currentTimeOnClocks[previousSideToMove];
      var currentMove = clonedBoard.moves.getMove(newMoveWrapper.path);
      (0,MoveTree/* assertValidMove */.RR)(currentMove);
      currentMove.metadata = newMoveWrapper.metadata;
      currentMove.comment = moveWrapper.comment;
      clonedBoard.moves.stringifyMove(currentMove, dimension);
    }
    return moves;
  }
  traverse(moves.moves);
  return clonedBoard.moves;
}
function changeGameTermination(board) {
  var currentMove = board.moves.getMove([board.moves.moves.length - 1]);
  var snapshot = board.moves.getBoardSnapshot((0,MoveTree/* verifyValidMove */.xn)(currentMove) ? currentMove : -1);
  (0,baseTypes/* assertNonUndefined */.lM)(snapshot);
  if (snapshot.boardSnapshot.data.gameOver) {
    board.gameData.termination = snapshot.boardSnapshot.data.gameOver;
    if (board.gameData.result) return;
    if (board.isTwoPlayer || board.gameType.type === GameData/* VariantType.Teams */.Jy.Teams) {
      var currentSnapshot = board.createSnapshot();
      board.loadSnapshot(snapshot.boardSnapshot);
      board.gameData.result = board.data.getCurrentResult();
      board.loadSnapshot(currentSnapshot);
    } else {
      var currentResults = [];
      var dead = board.data.fenOptions.tag("dead"),
        resigned = board.data.fenOptions.tag("resigned"),
        wb = board.data.fenOptions.tag("wb"),
        points = snapshot.boardSnapshot.data.points;
      var _iterator3 = MoveTreeValidator_createForOfIteratorHelper(GameData/* colors */.O9),
        _step3;
      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
          var color = _step3.value;
          if (dead[color] || resigned[color]) continue;
          currentResults.push("".concat((0,GameData/* getPlayerNameFromColor */.oh)(color, wb), ": ").concat(points[color]));
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
      board.gameData.result = currentResults.join(" – ");
    }
  }
}
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardVariantModules/InsufficientMaterial/InsufficientMaterialConstructor.ts
var InsufficientMaterialConstructor = __webpack_require__(84926);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardVariantModules/InsufficientMaterial/InsufficientMaterialChecker.ts
var InsufficientMaterialChecker = __webpack_require__(14599);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardVariantModules/InsufficientMaterial/StateSerializer.ts
var StateSerializer = __webpack_require__(72420);
;// CONCATENATED MODULE: ./src/main/client/ts/logic/index/GameBoardWorker.ts
var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _dec12, _dec13, _dec14, _dec15, _dec16, _dec17, _dec18, _dec19, _dec20, _dec21, _dec22, _dec23, _dec24, _dec25, _dec26, _dec27, _dec28, _dec29, _dec30, _dec31, _dec32, _class;
function GameBoardWorker_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function GameBoardWorker_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? GameBoardWorker_ownKeys(Object(source), !0).forEach(function (key) { GameBoardWorker_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : GameBoardWorker_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function GameBoardWorker_createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = GameBoardWorker_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function GameBoardWorker_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return GameBoardWorker_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return GameBoardWorker_arrayLikeToArray(o, minLen); }
function GameBoardWorker_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function GameBoardWorker_defineProperty(obj, key, value) { key = GameBoardWorker_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function GameBoardWorker_toPropertyKey(arg) { var key = GameBoardWorker_toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function GameBoardWorker_toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }
















var requiredDispatches = [];
var initialDispatches = [];
var dispatchSyncRecord = {};
function withWorkerResult() {
  return function (_, propertyKey, descriptor) {
    var originalMethod = descriptor.value;
    (0,baseTypes/* assertNonUndefined */.lM)(originalMethod);
    descriptor.value = function () {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      postMessage([propertyKey, originalMethod.apply(this, args)]);
    };
  };
}
function workerDataSync(type, gameObjectPropertySync) {
  return function (_, propertyKey) {
    if (type === "required") {
      initialDispatches.push(propertyKey);
      requiredDispatches.push(propertyKey);
    } else {
      initialDispatches.push(propertyKey);
    }
    dispatchSyncRecord[propertyKey] = gameObjectPropertySync;
  };
}
var RequestManager = (_dec = withWorkerResult(), _dec2 = workerDataSync("required", "publicFENSettings"), _dec3 = withWorkerResult(), _dec4 = workerDataSync("initial", "initiallyAliveColors"), _dec5 = withWorkerResult(), _dec6 = workerDataSync("required", "moveTree"), _dec7 = withWorkerResult(), _dec8 = withWorkerResult(), _dec9 = withWorkerResult(), _dec10 = workerDataSync("required", "serializedPGN"), _dec11 = withWorkerResult(), _dec12 = withWorkerResult(), _dec13 = withWorkerResult(), _dec14 = workerDataSync("required", "allowedInternalMoves"), _dec15 = withWorkerResult(), _dec16 = workerDataSync("initial", "variantDataRules"), _dec17 = withWorkerResult(), _dec18 = workerDataSync("required", "boardSquares"), _dec19 = withWorkerResult(), _dec20 = workerDataSync("required", "gameData"), _dec21 = withWorkerResult(), _dec22 = workerDataSync("required", "currentMove"), _dec23 = withWorkerResult(), _dec24 = workerDataSync("initial", "variantRules"), _dec25 = withWorkerResult(), _dec26 = workerDataSync("initial", "variantType"), _dec27 = withWorkerResult(), _dec28 = withWorkerResult(), _dec29 = withWorkerResult(), _dec30 = withWorkerResult(), _dec31 = workerDataSync("required", "squareVisibility"), _dec32 = withWorkerResult(), (_class = class RequestManager {
  constructor() {
    GameBoardWorker_defineProperty(this, "board", void 0);
    GameBoardWorker_defineProperty(this, "initiallyAliveColors", []);
    GameBoardWorker_defineProperty(this, "internalMoves", []);
    GameBoardWorker_defineProperty(this, "legalMoves", new Map());
    GameBoardWorker_defineProperty(this, "fogOfWarPerspective", false);
  }
  stripPieceStrings(object) {
    // eslint-disable-next-line @typescript-eslint/no-unsafe-return
    return JSON.parse(JSON.stringify(object));
  }
  generateInitiallyAliveColors() {
    return this.board.data.fenOptions.tag("dead").map(d => !d).reduce((p, n, i) => {
      if (n) {
        return [...p, i];
      } else return p;
    }, []);
  }
  generateCurrentMoves() {
    this.internalMoves = this.board.getAllowedInternalMoves(), this.legalMoves = new Map();
    var _iterator = GameBoardWorker_createForOfIteratorHelper(this.board.getPlayerPieces()[this.board.data.sideToMove]),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var piece = _step.value;
        this.legalMoves.set((0,BoardInterface/* stringifyCoordinate */.Kv)(piece), this.board.getLegalMoves(piece[0], piece[1]));
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
  }
  construct(_variantName, pgn4) {
    this.board = new Board/* Board */.$(pgn4);
    this.board = (0,VariantRule/* decorateClassWithVariants */.I)(this.board, Board/* Board */.$, this.board.variantRules.boardDecorators);
    this.generateInitiallyAliveColors();
    var insufficientMaterialModule = new InsufficientMaterialConstructor.InsufficientMaterialConstructor(this.board, state => {
      this.board.insufficientMaterialChecker = new InsufficientMaterialChecker.InsufficientMaterialChecker(state, this.board);
      this.board.moves = validateMoveTree(this.board, this.board.moves);
      this.board.moves.currentMove = [-1];
      changeGameTermination(this.board);
      this.generateCurrentMoves();
      postMessage(["construct", StateSerializer.serializeInsufficientMaterialState(state)]);
    });
    insufficientMaterialModule.generateInsufficientMaterialState();
    return StateSerializer.serializeInsufficientMaterialState(insufficientMaterialModule.state);
  }
  constructWithGeneratedData(pgn4, insufficientMaterialState) {
    this.board = new Board/* Board */.$(pgn4);
    this.board = (0,VariantRule/* decorateClassWithVariants */.I)(this.board, Board/* Board */.$, this.board.variantRules.boardDecorators);
    this.generateInitiallyAliveColors();
    this.board.insufficientMaterialChecker = new InsufficientMaterialChecker.InsufficientMaterialChecker((0,StateSerializer.deserializeInsufficientMaterialState)(insufficientMaterialState), this.board);
    this.board.moves = validateMoveTree(this.board, this.board.moves);
    this.board.moves.currentMove = [-1];
    changeGameTermination(this.board);
    this.generateCurrentMoves();
  }
  getFENSettings() {
    var board = this.board;
    var royalCount = (0,baseTypes/* createTuple */.VS)(0, GameData/* totalPlayers */.q3);
    var isCustomRoyals = false;
    var _iterator2 = GameBoardWorker_createForOfIteratorHelper(this.board.board),
      _step2;
    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        var row = _step2.value;
        var _iterator3 = GameBoardWorker_createForOfIteratorHelper(row),
          _step3;
        try {
          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
            var square = _step3.value;
            if (square.isPiece() && square.piece === "K" && ++royalCount[square.color] > 1) {
              isCustomRoyals = true;
              break;
            }
          }
        } catch (err) {
          _iterator3.e(err);
        } finally {
          _iterator3.f();
        }
        if (isCustomRoyals) break;
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
    var points = [...board.data.points];
    return {
      sideToMove: board.data.sideToMove,
      points,
      isCustomRoyals,
      fenOptions: board.data.fenOptions.createSerializedState()
    };
  }
  getInitiallyAliveColors() {
    return this.initiallyAliveColors;
  }
  getMoveTree() {
    var traverse = function traverse(moves) {
      var fullMoveCounter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
      var results = [];
      var _iterator4 = GameBoardWorker_createForOfIteratorHelper(moves),
        _step4;
      try {
        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
          var moveWrapper = _step4.value;
          var resultingWrapper = {
            alternativeLines: [],
            comment: moveWrapper.comment,
            path: moveWrapper.path.slice(),
            cachedNames: GameBoardWorker_objectSpread({}, moveWrapper.cachedNames),
            metadata: {
              currentSideToMove: moveWrapper.metadata.currentSideToMove,
              playerClock: moveWrapper.metadata.playerClock,
              highlightedArrows: moveWrapper.metadata.highlightedArrows,
              highlightedSquares: moveWrapper.metadata.highlightedSquares
            }
          };
          if (moveWrapper.metadata.currentFullMove) resultingWrapper.metadata.currentFullMove = moveWrapper.metadata.currentFullMove;
          var _iterator5 = GameBoardWorker_createForOfIteratorHelper(moveWrapper.alternativeLines),
            _step5;
          try {
            for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
              var alternativeLine = _step5.value;
              resultingWrapper.alternativeLines.push(traverse(alternativeLine, fullMoveCounter - 1));
            }
          } catch (err) {
            _iterator5.e(err);
          } finally {
            _iterator5.f();
          }
          results.push(resultingWrapper);
        }
      } catch (err) {
        _iterator4.e(err);
      } finally {
        _iterator4.f();
      }
      return results;
    };
    return traverse(this.board.moves.moves);
  }
  loadSnapshotByPath(path) {
    var snapshot;
    if ((0,ArrayUtils/* compareArrays */.Rt)(path, [-1])) {
      var preliminarySnapshot = this.board.moves.getBoardSnapshot(-1);
      (0,baseTypes/* assertNonUndefined */.lM)(preliminarySnapshot);
      snapshot = preliminarySnapshot;
    } else {
      var currentMove = this.board.moves.getMove(path);
      (0,MoveTree/* assertValidMove */.RR)(currentMove);
      var _preliminarySnapshot = this.board.moves.getBoardSnapshot(currentMove);
      if (!_preliminarySnapshot) return false;
      snapshot = _preliminarySnapshot;
    }
    this.board.loadSnapshot(snapshot.boardSnapshot);
    this.board.moves.currentMove = [...path];
    this.generateCurrentMoves();
    return true;
  }
  verifyNextChainedMovesAreDeleted(move) {
    return !("nextChainedMoves" in move);
  }
  convertStrippedMoveToNormal(move) {
    var newMove = [];
    var _iterator6 = GameBoardWorker_createForOfIteratorHelper(move),
      _step6;
    try {
      for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {
        var moveComponent = _step6.value;
        delete moveComponent.nextChainedMoves;
        if (!this.verifyNextChainedMovesAreDeleted(moveComponent)) throw new Error("Could not delete nextChainedMoves in move component");
        if ((0,MoveTreeInterface/* verifyStandardMove */.$j)(moveComponent)) {
          var _moveComponent$promot;
          newMove.push(GameBoardWorker_objectSpread(GameBoardWorker_objectSpread({}, moveComponent), {}, {
            promotion: (_moveComponent$promot = moveComponent.promotion) === null || _moveComponent$promot === void 0 ? void 0 : _moveComponent$promot.map(p => PieceString/* PieceString.fromObjectToClass */.Ff.fromObjectToClass(p))
          }));
        } else if ((0,MoveTreeInterface/* verifyDroppingMove */.x7)(moveComponent)) {
          newMove.push(GameBoardWorker_objectSpread(GameBoardWorker_objectSpread({}, moveComponent), {}, {
            piece: PieceString/* PieceString.fromObjectToClass */.Ff.fromObjectToClass(moveComponent.piece)
          }));
        } else newMove.push(moveComponent);
      }
    } catch (err) {
      _iterator6.e(err);
    } finally {
      _iterator6.f();
    }
    if (!(0,MoveTreeInterface/* verifyRequiredMove */.nc)(newMove)) throw new Error("Supplied move object had 0 move components");
    return newMove;
  }
  makeMove(passedMove) {
    var board = this.board,
      move = this.convertStrippedMoveToNormal(passedMove);
    board.moves.augmentMoveWithMetadata({
      move,
      board,
      makeMoveFunction: () => {
        return board.makeMove(move);
      }
    });
    this.generateCurrentMoves();
  }
  serializeBoardToPGN() {
    return (0,InputOutputProcessing/* serializeBoard */.V)(this.board);
  }
  getDroppingMoves(pieceString) {
    if (this.board.data.gameOver) return [];
    return this.stripPieceStrings(this.board.getDroppingMoves(PieceString/* PieceString.fromObjectToClass */.Ff.fromObjectToClass(pieceString)));
  }
  getLegalMoves(i, j) {
    var _this$legalMoves$get;
    if (this.board.data.gameOver) return [];
    return this.stripPieceStrings((_this$legalMoves$get = this.legalMoves.get((0,BoardInterface/* stringifyCoordinate */.Kv)([i, j]))) !== null && _this$legalMoves$get !== void 0 ? _this$legalMoves$get : this.board.getLegalMoves(i, j));
  }
  getInternalMoves() {
    if (this.board.data.gameOver) return [];
    return this.stripPieceStrings(this.internalMoves);
  }
  getVariantData() {
    return this.stripPieceStrings(this.board.variantData);
  }
  getBoard() {
    return this.board.board.map(r => r.map(p => p.toObject()));
  }
  getGameData() {
    var newGameData = GameBoardWorker_objectSpread({}, this.board.gameData);
    if (typeof newGameData.date === "object") {
      newGameData.date = newGameData.date.toUTCString();
    }
    return newGameData;
  }
  getCurrentMove() {
    return this.board.moves.currentMove;
  }
  getVariantRules() {
    var resultingRules = [];
    var _iterator7 = GameBoardWorker_createForOfIteratorHelper(this.board.variantRules),
      _step7;
    try {
      for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {
        var variantRule = _step7.value;
        resultingRules.push(variantRule.getPublicProperties());
      }
    } catch (err) {
      _iterator7.e(err);
    } finally {
      _iterator7.f();
    }
    return resultingRules;
  }
  getVariantType() {
    return this.board.gameType.type;
  }
  deleteMove(path) {
    if (this.board.moves.moves.length !== 0) this.board.moves.deleteMove(path);
  }
  playPreferredBotMove() {
    if (this.board.data.getRealPlayers() <= 1) return;
    var legalMoves = [];
    var _iterator8 = GameBoardWorker_createForOfIteratorHelper(this.board.getPlayerPieces()[this.board.data.sideToMove]),
      _step8;
    try {
      for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {
        var _this$legalMoves$get2;
        var piece = _step8.value;
        legalMoves.push(...((_this$legalMoves$get2 = this.legalMoves.get((0,BoardInterface/* stringifyCoordinate */.Kv)(piece))) !== null && _this$legalMoves$get2 !== void 0 ? _this$legalMoves$get2 : this.board.getLegalMoves(piece[0], piece[1])));
      }
      // TODO Pick strongest piece
    } catch (err) {
      _iterator8.e(err);
    } finally {
      _iterator8.f();
    }
    legalMoves.push(...this.board.preGeneratedAttacks[this.board.data.sideToMove].pieceDrops.piece);
    legalMoves.push(...this.board.preGeneratedAttacks[this.board.data.sideToMove].pieceDrops.pawn);
    legalMoves.push(...this.internalMoves);
    var algorithm = this.board.data.fenOptions.getDefaultZombieAlgorithm(this.board.data.sideToMove);
    var moves = algorithm.evaluate(legalMoves, this.board);
    return this.stripPieceStrings(algorithm.pickPreferredMove(moves));
  }
  changeFogPerspective() {
    if (!this.board.variantData.fogOfWar || this.board.data.getRealPlayers() <= 1) return this.fogOfWarPerspective;
    if (this.fogOfWarPerspective === false) {
      this.fogOfWarPerspective = this.board.data.sideToMove;
    } else {
      var newPerspective = this.board.data.nextTurn(this.fogOfWarPerspective);
      if (newPerspective === this.board.data.sideToMove) {
        this.fogOfWarPerspective = false;
      } else this.fogOfWarPerspective = newPerspective;
    }
    return this.fogOfWarPerspective;
  }
  getSquareVisibility() {
    if (this.fogOfWarPerspective === false) {
      return this.board.getSquareVisibility();
    } else {
      var sideToMove = this.board.data.sideToMove;
      this.board.data.sideToMove = this.fogOfWarPerspective;
      var squareVisibility = this.board.getSquareVisibility();
      this.board.data.sideToMove = sideToMove;
      return squareVisibility;
    }
  }
}, (_applyDecoratedDescriptor(_class.prototype, "constructWithGeneratedData", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, "constructWithGeneratedData"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "getFENSettings", [_dec2, _dec3], Object.getOwnPropertyDescriptor(_class.prototype, "getFENSettings"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "getInitiallyAliveColors", [_dec4, _dec5], Object.getOwnPropertyDescriptor(_class.prototype, "getInitiallyAliveColors"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "getMoveTree", [_dec6, _dec7], Object.getOwnPropertyDescriptor(_class.prototype, "getMoveTree"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "loadSnapshotByPath", [_dec8], Object.getOwnPropertyDescriptor(_class.prototype, "loadSnapshotByPath"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "makeMove", [_dec9], Object.getOwnPropertyDescriptor(_class.prototype, "makeMove"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "serializeBoardToPGN", [_dec10, _dec11], Object.getOwnPropertyDescriptor(_class.prototype, "serializeBoardToPGN"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "getDroppingMoves", [_dec12], Object.getOwnPropertyDescriptor(_class.prototype, "getDroppingMoves"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "getLegalMoves", [_dec13], Object.getOwnPropertyDescriptor(_class.prototype, "getLegalMoves"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "getInternalMoves", [_dec14, _dec15], Object.getOwnPropertyDescriptor(_class.prototype, "getInternalMoves"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "getVariantData", [_dec16, _dec17], Object.getOwnPropertyDescriptor(_class.prototype, "getVariantData"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "getBoard", [_dec18, _dec19], Object.getOwnPropertyDescriptor(_class.prototype, "getBoard"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "getGameData", [_dec20, _dec21], Object.getOwnPropertyDescriptor(_class.prototype, "getGameData"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "getCurrentMove", [_dec22, _dec23], Object.getOwnPropertyDescriptor(_class.prototype, "getCurrentMove"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "getVariantRules", [_dec24, _dec25], Object.getOwnPropertyDescriptor(_class.prototype, "getVariantRules"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "getVariantType", [_dec26, _dec27], Object.getOwnPropertyDescriptor(_class.prototype, "getVariantType"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "deleteMove", [_dec28], Object.getOwnPropertyDescriptor(_class.prototype, "deleteMove"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "playPreferredBotMove", [_dec29], Object.getOwnPropertyDescriptor(_class.prototype, "playPreferredBotMove"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "changeFogPerspective", [_dec30], Object.getOwnPropertyDescriptor(_class.prototype, "changeFogPerspective"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "getSquareVisibility", [_dec31, _dec32], Object.getOwnPropertyDescriptor(_class.prototype, "getSquareVisibility"), _class.prototype)), _class));
var requestManager = new RequestManager();
self.onmessage = e => {
  if (!(e.data.requestName in RequestManager.prototype)) return;
  var method = RequestManager.prototype[e.data.requestName];
  method.apply(requestManager, e.data.parameters);
};

/***/ }),

/***/ 95116:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "D": () => (/* binding */ moveTreeReducers),
/* harmony export */   "M": () => (/* binding */ moveTreeActionTypes)
/* harmony export */ });
/* harmony import */ var _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76758);
/* harmony import */ var _moveGeneration_MoveTree_MoveTree__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(99234);
/* harmony import */ var _moveGeneration_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(37017);
/* harmony import */ var _utils_ArrayUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(34092);
/* harmony import */ var _GameBoardSlice__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(28150);





var moveTreeActionTypes = {
  goToBeginning: "gameBoards/goToBeginning",
  goToPreviousMove: "gameBoards/goToPreviousMove",
  goToPreviousPly: "gameBoards/goToPreviousPly",
  goToNextPly: "gameBoards/goToNextPly",
  goToNextMove: "gameBoards/goToNextMove",
  goToEnd: "gameBoards/goToEnd"
};
var moveTreeReducers = {
  goToBeginning: (state, action) => {
    _GameBoardSlice__WEBPACK_IMPORTED_MODULE_3__/* .gameBoardsAdapter.updateOne */ .sP.updateOne(state, {
      type: moveTreeActionTypes.goToBeginning,
      payload: {
        id: action.payload.id,
        changes: {
          currentMove: [-1]
        }
      }
    });
  },
  goToPreviousMove: (state, action) => {
    var gameBoardObject = _GameBoardSlice__WEBPACK_IMPORTED_MODULE_3__/* .gameBoardsAdapter.getSelectors */ .sP.getSelectors().selectById(state, action.payload.id);
    if (!gameBoardObject) return;
    var moveTree = gameBoardObject.moveTree,
      currentMove = gameBoardObject.currentMove;
    var moveInformation = (0,_moveGeneration_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_2__/* .getMoveFromPathAndTree */ .Yr)(moveTree, currentMove);
    (0,_moveGeneration_MoveTree_MoveTree__WEBPACK_IMPORTED_MODULE_1__/* .assertValidMove */ .RR)(moveInformation);
    if ((0,_utils_ArrayUtils__WEBPACK_IMPORTED_MODULE_4__/* .compareArrays */ .Rt)(currentMove, [-1])) return;
    var sideToMove = moveInformation.metadata.currentSideToMove;
    var newCurrentMove = currentMove.slice();
    for (var i = 0; i < _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_0__/* .totalPlayers */ .q3; i++) {
      var iteratedCurrentMove = newCurrentMove.slice();
      iteratedCurrentMove[iteratedCurrentMove.length - 1]--;
      if ((0,_utils_ArrayUtils__WEBPACK_IMPORTED_MODULE_4__/* .compareArrays */ .Rt)(iteratedCurrentMove, [-1])) {
        newCurrentMove = [-1];
        break;
      } else {
        var selectedMove = (0,_moveGeneration_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_2__/* .getMoveFromPathAndTree */ .Yr)(moveTree, iteratedCurrentMove);
        if (!(0,_moveGeneration_MoveTree_MoveTree__WEBPACK_IMPORTED_MODULE_1__/* .verifyValidMove */ .xn)(selectedMove)) break;
        newCurrentMove = iteratedCurrentMove;
        if (selectedMove.metadata.currentSideToMove === sideToMove) break;
      }
    }
    _GameBoardSlice__WEBPACK_IMPORTED_MODULE_3__/* .gameBoardsAdapter.updateOne */ .sP.updateOne(state, {
      type: moveTreeActionTypes.goToPreviousMove,
      payload: {
        id: action.payload.id,
        changes: {
          currentMove: newCurrentMove
        }
      }
    });
  },
  goToPreviousPly: (state, action) => {
    var gameBoardObject = _GameBoardSlice__WEBPACK_IMPORTED_MODULE_3__/* .gameBoardsAdapter.getSelectors */ .sP.getSelectors().selectById(state, action.payload.id);
    if (!gameBoardObject || (0,_utils_ArrayUtils__WEBPACK_IMPORTED_MODULE_4__/* .compareArrays */ .Rt)(gameBoardObject.currentMove, [-1])) return;
    var newCurrentMove = gameBoardObject.currentMove.slice();
    newCurrentMove[newCurrentMove.length - 1]--;
    _GameBoardSlice__WEBPACK_IMPORTED_MODULE_3__/* .gameBoardsAdapter.updateOne */ .sP.updateOne(state, {
      type: moveTreeActionTypes.goToPreviousPly,
      payload: {
        id: action.payload.id,
        changes: {
          currentMove: newCurrentMove
        }
      }
    });
  },
  goToNextPly: (state, action) => {
    var gameBoardObject = _GameBoardSlice__WEBPACK_IMPORTED_MODULE_3__/* .gameBoardsAdapter.getSelectors */ .sP.getSelectors().selectById(state, action.payload.id);
    if (!gameBoardObject) return;
    var currentMove = gameBoardObject.currentMove,
      moveTree = gameBoardObject.moveTree;
    var newCurrentMove = currentMove.slice();
    newCurrentMove[newCurrentMove.length - 1]++;
    if (!(0,_moveGeneration_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_2__/* .getMoveFromPathAndTree */ .Yr)(moveTree, newCurrentMove)) return;
    _GameBoardSlice__WEBPACK_IMPORTED_MODULE_3__/* .gameBoardsAdapter.updateOne */ .sP.updateOne(state, {
      type: moveTreeActionTypes.goToNextPly,
      payload: {
        id: action.payload.id,
        changes: {
          currentMove: newCurrentMove
        }
      }
    });
  },
  goToNextMove: (state, action) => {
    var gameBoardObject = _GameBoardSlice__WEBPACK_IMPORTED_MODULE_3__/* .gameBoardsAdapter.getSelectors */ .sP.getSelectors().selectById(state, action.payload.id);
    if (!gameBoardObject) return;
    var moveTree = gameBoardObject.moveTree,
      currentMove = gameBoardObject.currentMove;
    var moveInformation = (0,_moveGeneration_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_2__/* .getMoveFromPathAndTree */ .Yr)(moveTree, currentMove);
    (0,_moveGeneration_MoveTree_MoveTree__WEBPACK_IMPORTED_MODULE_1__/* .assertValidMove */ .RR)(moveInformation);
    var sideToMove = moveInformation.metadata.currentSideToMove;
    var newCurrentMove = currentMove.slice();
    for (var i = 0; i < _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_0__/* .totalPlayers */ .q3; i++) {
      var iteratedCurrentMove = newCurrentMove.slice();
      iteratedCurrentMove[iteratedCurrentMove.length - 1]++;
      var selectedMove = (0,_moveGeneration_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_2__/* .getMoveFromPathAndTree */ .Yr)(moveTree, iteratedCurrentMove);
      if (!(0,_moveGeneration_MoveTree_MoveTree__WEBPACK_IMPORTED_MODULE_1__/* .verifyValidMove */ .xn)(selectedMove)) break;
      newCurrentMove = iteratedCurrentMove;
      if (selectedMove.metadata.currentSideToMove === sideToMove) break;
    }
    _GameBoardSlice__WEBPACK_IMPORTED_MODULE_3__/* .gameBoardsAdapter.updateOne */ .sP.updateOne(state, {
      type: moveTreeActionTypes.goToNextMove,
      payload: {
        id: action.payload.id,
        changes: {
          currentMove: newCurrentMove
        }
      }
    });
  },
  goToEnd: (state, action) => {
    var gameBoardObject = _GameBoardSlice__WEBPACK_IMPORTED_MODULE_3__/* .gameBoardsAdapter.getSelectors */ .sP.getSelectors().selectById(state, action.payload.id);
    if (!gameBoardObject) return;
    _GameBoardSlice__WEBPACK_IMPORTED_MODULE_3__/* .gameBoardsAdapter.updateOne */ .sP.updateOne(state, {
      type: moveTreeActionTypes.goToEnd,
      payload: {
        id: action.payload.id,
        changes: {
          currentMove: [gameBoardObject.moveTree.length - 1]
        }
      }
    });
  }
};

/***/ }),

/***/ 80273:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "$": () => (/* binding */ Board),
  "i": () => (/* binding */ baseImmunes)
});

// EXTERNAL MODULE: ./src/main/client/ts/baseTypes.ts
var baseTypes = __webpack_require__(18027);
// EXTERNAL MODULE: ./src/main/client/ts/logic/BaseInterfaces.ts
var BaseInterfaces = __webpack_require__(34355);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/MoveTree/MoveTree.ts + 1 modules
var MoveTree = __webpack_require__(99234);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/MoveTree/MoveTreeInterface.ts
var MoveTreeInterface = __webpack_require__(37017);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/FENData/FENData.ts + 1 modules
var FENData = __webpack_require__(26814);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/GameInformation/GameData.ts
var GameData = __webpack_require__(76758);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/GameInformation/GameUnits/GameUnits.ts
var GameUnits = __webpack_require__(9960);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/GameInformation/GameUnits/PieceString.ts
var PieceString = __webpack_require__(20915);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/VariantRules/VariantRule.ts
var VariantRule = __webpack_require__(75942);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/VariantRules/VariantRuleSetup.ts
var VariantRuleSetup = __webpack_require__(32957);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/PieceControl/PieceControl.ts
var PieceControl = __webpack_require__(56602);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/PieceControl/PieceControlInterface.ts
var PieceControlInterface = __webpack_require__(16703);
;// CONCATENATED MODULE: ./src/main/client/ts/logic/movegen/PieceControl/PieceControlBuilder.ts
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }








class PieceControlConfigurator {
  constructor(control) {
    _defineProperty(this, "_control", void 0);
    _defineProperty(this, "_isConfigured", void 0);
    this._control = control;
    this._isConfigured = {
      coordinates: [0, 0],
      board: (0,BaseInterfaces/* initializeBoardSquares */.BD)(() => PieceString/* emptyPieceString */.v2),
      immunePieces: (0,baseTypes/* createTuple */.VS)(false, GameData/* totalPlayers */.q3),
      color: 0
    };
  }
  setCoordinates(x, y) {
    this._isConfigured.coordinates = [x, y];
    return this;
  }
  setBaseImmunePieces(immune) {
    this._isConfigured.immunePieces = immune;
    return this;
  }
  setColor(color) {
    this._isConfigured.color = color;
    return this;
  }
  setBoard(board) {
    this._isConfigured.board = board;
    return this;
  }
  constructPieceControl() {
    this._control.configure(this._isConfigured);
    return this._control;
  }
}
class PieceControlBuilder {
  constructor() {
    _defineProperty(this, "_generalConfig", void 0);
    this._generalConfig = {};
  }
  setFENData(fenData) {
    this._generalConfig.fenData = fenData;
  }
  setVariantRules(rules) {
    this._generalConfig.variantRules = rules;
  }
  createPieceControlWrap(letter) {
    var information = PieceControlInterface/* pieceControlConfigSettings */.Gf[letter];
    var control = new information.construct();
    if (!this._generalConfig.fenData || !this._generalConfig.variantRules) throw new Error("PieceControl builder setup is not complete");
    control.setFENData(this._generalConfig.fenData);
    var decoratedControl = (0,VariantRule/* decorateClassWithVariants */.I)(control, PieceControl/* PieceControl */.V, (0,VariantRuleSetup/* copyVariantRules */.KH)(this._generalConfig.variantRules));
    return () => {
      return new PieceControlConfigurator(decoratedControl);
    };
  }
}
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/PieceControl/PieceControlDeclarations.ts
var PieceControlDeclarations = __webpack_require__(85702);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/Board/BoardInterface.ts
var BoardInterface = __webpack_require__(29939);
// EXTERNAL MODULE: ./src/main/client/ts/utils/ObjectUtils.ts
var ObjectUtils = __webpack_require__(35637);
// EXTERNAL MODULE: ./src/main/client/ts/logic/utils/Tags/InputOutputProcessing.ts + 4 modules
var InputOutputProcessing = __webpack_require__(19041);
;// CONCATENATED MODULE: ./src/main/client/ts/logic/movegen/Board/Board.ts
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { Board_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function Board_defineProperty(obj, key, value) { key = Board_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function Board_toPropertyKey(arg) { var key = Board_toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function Board_toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
















(0,PieceControlDeclarations/* initPieceControlDeclarations */.D)();
var baseImmunes = (0,baseTypes/* createTuple */.VS)(false, GameData/* totalPlayers */.q3);
class Board {
  initDecoratorSettings() {
    /* no-op */
  }

  /*---------------------------------- INITIALIZATION -----------------------------------------*/
  constructor(pgn4) {
    Board_defineProperty(this, "controls", {});
    Board_defineProperty(this, "data", void 0);
    Board_defineProperty(this, "moves", void 0);
    Board_defineProperty(this, "preGeneratedAttacks", (0,baseTypes/* createTupleFromCallback */.fi)(BoardInterface/* createBasePreGeneratedAttacks */.RN, GameData/* totalPlayers */.q3));
    Board_defineProperty(this, "board", void 0);
    Board_defineProperty(this, "isComplexSetup", (0,BoardInterface/* createComplexMoveLegalityTracker */.Ov)());
    Board_defineProperty(this, "gameData", void 0);
    Board_defineProperty(this, "gameType", (0,BoardInterface/* createGameTypeSettings */.Bd)());
    Board_defineProperty(this, "variantRules", void 0);
    Board_defineProperty(this, "variantData", void 0);
    Board_defineProperty(this, "isTwoPlayer", void 0);
    Board_defineProperty(this, "insufficientMaterialChecker", void 0);
    Board_defineProperty(this, "__baseClass", void 0);
    this.__baseClass = this;
    var parsingResults = (0,InputOutputProcessing/* parsePGN4 */.W)(pgn4);
    this.gameType.type = parsingResults.gameType;
    this.variantRules = parsingResults.variantRules;
    this.gameData = parsingResults.gameData;
    this.board = parsingResults.board;
    this.data = parsingResults.fenData;
    this.data.injectBoard(this);
    this.data = (0,VariantRule/* decorateClassWithVariants */.I)(this.data, FENData/* FENData */.c, this.variantRules.fenDataDecorators);
    this.variantData = parsingResults.variantRuleData;
    this.variantRules = (0,VariantRuleSetup/* validateVariantRules */.xU)(this);
    this.isTwoPlayer = this.data.getRealPlayers() === 2;
    this.initPieceControls(parsingResults.pieceSet);
    this.moves = (0,MoveTree/* createMoveTree */.g7)(this.createSnapshot());
    this.moves.moves = parsingResults.moves;
    this.pregenerateAttacks();
  }
  initPieceControls(pieces) {
    if (pieces.size === 0) return;
    var builder = new PieceControlBuilder();
    builder.setFENData(this.data);
    builder.setVariantRules(this.variantRules.pieceControlDecorators);
    var _iterator = _createForOfIteratorHelper(pieces),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var piece = _step.value;
        var pieceControlConfigurator = builder.createPieceControlWrap(piece);
        this.controls[piece] = pieceControlConfigurator;
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
  }
  getSquareVisibility() {
    return (0,BaseInterfaces/* initializeBoardSquares */.BD)(() => []);
  }
  createSnapshot() {
    return {
      data: this.data.createSnapshot(),
      board: this.board.map(a => [...a]),
      isComplexSetup: Object.assign({}, this.isComplexSetup)
    };
  }
  loadSnapshot(snapshot) {
    this.isComplexSetup = _objectSpread({}, snapshot.isComplexSetup);
    this.data.loadSnapshot(snapshot.data);
    this.board = snapshot.board.map(row => [...row]);
    this.pregenerateAttacks();
    this.runComplexLegalityEvaluationChecks();
  }
  createClone() {
    var targetObject = (0,ObjectUtils/* copyClass */.lJ)(this.__baseClass, Board);
    targetObject.board = this.board.map(a => [...a]); // PieceStrings are immutable
    targetObject.isComplexSetup = Object.assign({}, this.isComplexSetup);
    targetObject.preGeneratedAttacks = (0,baseTypes/* createTupleFromCallback */.fi)(BoardInterface/* createBasePreGeneratedAttacks */.RN, GameData/* totalPlayers */.q3);
    targetObject.data = this.data.createClone();
    targetObject = (0,VariantRule/* decorateClassWithVariants */.I)(targetObject, Board, (0,VariantRuleSetup/* copyVariantRules */.KH)(this.__baseClass.variantRules.boardDecorators));
    targetObject.data.injectBoard(targetObject);
    targetObject.data = (0,VariantRule/* decorateClassWithVariants */.I)(targetObject.data, FENData/* FENData */.c, (0,VariantRuleSetup/* copyVariantRules */.KH)(this.__baseClass.variantRules.fenDataDecorators));
    var presumedPieceLetters = new Set();
    var letter;
    for (letter in this.controls) {
      if (Object.prototype.hasOwnProperty.call(this.controls, letter)) {
        presumedPieceLetters.add(letter);
      }
    }
    targetObject.initPieceControls(presumedPieceLetters);
    targetObject.pregenerateAttacks();
    return targetObject;
  }

  /*---------------------------------- INITIALIZATION -----------------------------------------*/
  /*-------------------------------------------------------------------------------------------*/
  /*------------------------------------- UTILITIES -------------------------------------------*/

  isKingInCheck(baseColor) {
    var fenRoyal = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.data.fenOptions.tag("royal");
    var royal = fenRoyal[baseColor];
    if (!royal || this.data.fenOptions.tag("dead")[baseColor]) return false;
    var coordinates = royal;
    return !!(this.preGeneratedAttacks[baseColor].slidingPieces[coordinates[0]][coordinates[1]] || this.preGeneratedAttacks[baseColor].hoppingPieces[coordinates[0]][coordinates[1]]);
  }
  getPlayerPieces() {
    var playerPieces = [[], [], [], []];
    for (var i = 0; i < GameData/* boardDimension */.iJ; i++) {
      for (var j = 0; j < GameData/* boardDimension */.iJ; j++) {
        var square = this.board[i][j];
        if (square.isEmpty()) continue;
        var color = square.color;
        if (color !== PieceString/* deadColorIndex */.Ir) playerPieces[color].push([i, j]);
      }
    }
    return playerPieces;
  }
  getCheckmatesAndStalemates() {
    var dead = this.data.fenOptions.tag("dead"),
      royal = this.data.fenOptions.tag("royal");
    var kingChecks = (0,baseTypes/* createTuple */.VS)(false, GameData/* totalPlayers */.q3);
    var legalMoves = (0,baseTypes/* createTuple */.VS)(false, GameData/* totalPlayers */.q3);
    var playerPieces = this.getPlayerPieces();
    legalMoves[this.data.sideToMove] = true;
    var _iterator2 = _createForOfIteratorHelper(GameData/* colors */.O9),
      _step2;
    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        var color = _step2.value;
        if (dead[color]) continue;
        var playerArmy = playerPieces[color];
        if (this.isKingInCheck(color)) {
          kingChecks[color] = true;
        }
        var _iterator3 = _createForOfIteratorHelper(playerArmy),
          _step3;
        try {
          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
            var piece = _step3.value;
            if (this.getLegalMoves(piece[0], piece[1], color).length) {
              legalMoves[color] = true;
              break;
            }
          }
        } catch (err) {
          _iterator3.e(err);
        } finally {
          _iterator3.f();
        }
        if (!legalMoves[color]) {
          if (this.preGeneratedAttacks[color].pieceDrops.pawn.length || this.preGeneratedAttacks[color].pieceDrops.piece.length) {
            legalMoves[color] = true;
          }
        }
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
    var kingCaptures = royal.map((r, i) => !dead[i] && r ? this.board[r[0]][r[1]].isEmpty() || this.board[r[0]][r[1]].color !== i : false);
    return {
      checkmates: legalMoves.map((move, i) => kingCaptures[i] || !move && kingChecks[i]),
      stalemates: legalMoves.map((move, i) => !move && !kingChecks[i]),
      checks: kingChecks
    };
  }
  runComplexLegalityEvaluationChecks() {
    if (this.isComplexSetup.hasComplexRules) return;
    for (var i = 0; i < GameData/* boardDimension */.iJ; i++) {
      for (var j = 0; j < GameData/* boardDimension */.iJ; j++) {
        var square = this.board[i][j];
        if (square.isPiece() && PieceControlInterface/* pieceControlConfigSettings */.Gf[square.piece].moveGenerationSettings.isComplex) {
          this.isComplexSetup.hasComplexPieces = true;
          return;
        }
      }
    }
  }
  getCurrentChecks() {
    var sideToMove = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.data.sideToMove;
    var dead = this.data.fenOptions.tag("dead"),
      resigned = this.data.fenOptions.tag("resigned"),
      royal = this.data.fenOptions.tag("royal");
    var playerRoyals = royal.map((r, i) => r && !dead[i] && !resigned[i] ? r : null);
    var attackingCoordinates = (0,baseTypes/* createTupleFromCallback */.fi)(() => [], GameData/* totalPlayers */.q3);
    var _iterator4 = _createForOfIteratorHelper(this.preGeneratedAttacks[sideToMove].pieceMovements),
      _step4;
    try {
      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
        var _step4$value = _slicedToArray(_step4.value, 2),
          startingCoordinate = _step4$value[0],
          attackList = _step4$value[1];
        var _iterator5 = _createForOfIteratorHelper(attackList),
          _step5;
        try {
          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
            var attack = _step5.value;
            var _iterator6 = _createForOfIteratorHelper(GameData/* colors */.O9),
              _step6;
            try {
              for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {
                var color = _step6.value;
                if (color === sideToMove) continue;
                var _royal = playerRoyals[color];
                if (_royal && (0,BoardInterface/* compareCoordinates */.ef)(_royal, attack.move)) {
                  attackingCoordinates[color].push(startingCoordinate);
                }
              }
            } catch (err) {
              _iterator6.e(err);
            } finally {
              _iterator6.f();
            }
          }
        } catch (err) {
          _iterator5.e(err);
        } finally {
          _iterator5.f();
        }
      }
    } catch (err) {
      _iterator4.e(err);
    } finally {
      _iterator4.f();
    }
    return attackingCoordinates;
  }

  /*------------------------------------- UTILITIES -------------------------------------------*/
  /*-------------------------------------------------------------------------------------------*/
  /*---------------------------------------- API ----------------------------------------------*/

  makeMove(move) {
    var ignoreNextMoves = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    var returnValues;
    var sideToMove = this.data.sideToMove,
      pregeneratedAttacks = this.preGeneratedAttacks;
    for (var i = 0; i < move.length; i++) {
      if (i === move.length - 1) {
        returnValues = this.data.affectOptions(move[i], {
          ignoreCheckmateChecks: ignoreNextMoves,
          ignoreNextTurn: false
        });
      } else {
        this.data.affectOptions(move[i], {
          ignoreCheckmateChecks: ignoreNextMoves,
          ignoreNextTurn: true
        });
      }
    }
    this.runComplexLegalityEvaluationChecks();
    if (ignoreNextMoves) return returnValues;
    var path = this.moves.currentMove.slice();
    path[path.length - 1]++;
    this.moves.currentMove = this.moves.setNewMove({
      move: (0,MoveTreeInterface/* createBaseMoveWrapper */.Zp)({
        path,
        moveData: move
      }),
      snapshot: {
        boardSnapshot: this.createSnapshot(),
        pregeneratedAttacks: pregeneratedAttacks[sideToMove]
      },
      fenDataString: this.moves.constructPreliminaryHashString(this)
    });
    if (this.data.gameOver || this.data.getRealPlayers() === 1) return returnValues;
    if (returnValues.checkmates[this.data.sideToMove]) {
      returnValues = this.makeMove([{
        type: MoveTreeInterface/* InternalMoveSignature.TeamsCheckmate */.Fi.TeamsCheckmate
      }], true);
    } else if (returnValues.stalemates[this.data.sideToMove]) {
      returnValues = this.makeMove([{
        type: MoveTreeInterface/* InternalMoveSignature.Stalemate */.Fi.Stalemate
      }]);
    }
    return returnValues;
  }
  pregenerateAttacks() {
    var exclusiveSideToMoveGeneration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
    var royal = this.data.fenOptions.tag("royal");
    this.preGeneratedAttacks = (0,baseTypes/* createTupleFromCallback */.fi)(BoardInterface/* createBasePreGeneratedAttacks */.RN, GameData/* totalPlayers */.q3);
    this.getPlayerPieces().forEach((army, armyColor) => {
      if (exclusiveSideToMoveGeneration !== false && exclusiveSideToMoveGeneration !== armyColor) return;
      var preGeneratedAttacks = this.preGeneratedAttacks[armyColor];
      var _iterator7 = _createForOfIteratorHelper(army),
        _step7;
      try {
        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {
          var coordinate = _step7.value;
          var square = this.board[coordinate[0]][coordinate[1]];
          if (!square.isPiece()) continue;
          var color = square.color;
          var letter = square.piece;
          var controlBuilder = this.controls[letter]().setColor(color).setCoordinates(coordinate[0], coordinate[1]).setBoard(this.board);
          var setting = PieceControlInterface/* pieceControlConfigSettings */.Gf[square.piece];
          var resultingMoves = [];
          var control = controlBuilder.setBaseImmunePieces(this.gameType.getBaseColors(color)).constructPieceControl();
          resultingMoves.push(...control.getPseudoLegalMoves());
          control = controlBuilder.setBaseImmunePieces(baseImmunes).constructPieceControl();
          if (setting.moveGenerationSettings.isJumping) {
            var attacks = control.rayGenJumpingAttacks();
            var _iterator8 = _createForOfIteratorHelper(attacks),
              _step8;
            try {
              for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {
                var attack = _step8.value.move;
                var _iterator9 = _createForOfIteratorHelper(GameData/* colors */.O9),
                  _step9;
                try {
                  for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {
                    var _color = _step9.value;
                    if (_color === armyColor) continue;
                    var _preGeneratedAttacks = this.preGeneratedAttacks[_color];
                    _preGeneratedAttacks.hoppingPieces[attack[0]][attack[1]]++;
                    _preGeneratedAttacks.hoppingPieceLines.push([coordinate, attack]);
                    var l = _preGeneratedAttacks.attackingColors[attack[0]][attack[1]];
                    if (~l && _preGeneratedAttacks.attackingColors[attack[0]][attack[1]] !== _color + 1) {
                      _preGeneratedAttacks.attackingColors[attack[0]][attack[1]] = l === 0 ? 1 + _color : -1;
                    }
                  }
                } catch (err) {
                  _iterator9.e(err);
                } finally {
                  _iterator9.f();
                }
              }
            } catch (err) {
              _iterator8.e(err);
            } finally {
              _iterator8.f();
            }
          }
          if (setting.moveGenerationSettings.isSliding) {
            var _attacks = control.rayGenSlidingAttacks();
            var _iterator10 = _createForOfIteratorHelper(_attacks),
              _step10;
            try {
              for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {
                var _attack = _step10.value;
                var _iterator12 = _createForOfIteratorHelper(GameData/* colors */.O9),
                  _step12;
                try {
                  for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {
                    var _color2 = _step12.value;
                    if (_color2 === armyColor) continue;
                    var _preGeneratedAttacks2 = this.preGeneratedAttacks[_color2];
                    var _iterator13 = _createForOfIteratorHelper(_attack),
                      _step13;
                    try {
                      for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {
                        var subAttack = _step13.value.move;
                        _preGeneratedAttacks2.slidingPieces[subAttack[0]][subAttack[1]]++;
                        var _l = _preGeneratedAttacks2.attackingColors[subAttack[0]][subAttack[1]];
                        if (~_l && _preGeneratedAttacks2.attackingColors[subAttack[0]][subAttack[1]] !== _color2 + 1) {
                          _preGeneratedAttacks2.attackingColors[subAttack[0]][subAttack[1]] = _l === 0 ? 1 + _color2 : -1;
                        }
                      }
                    } catch (err) {
                      _iterator13.e(err);
                    } finally {
                      _iterator13.f();
                    }
                    if (_attack.length !== 0) {
                      _preGeneratedAttacks2.slidingPiecesLines.push([coordinate, _attack.map(m => m.move)]);
                    } else {
                      var coordinateArray = [];
                      _preGeneratedAttacks2.slidingPiecesLines.push([coordinate, coordinateArray]);
                    }
                  }
                } catch (err) {
                  _iterator12.e(err);
                } finally {
                  _iterator12.f();
                }
              }
            } catch (err) {
              _iterator10.e(err);
            } finally {
              _iterator10.f();
            }
            var rayGen = control.rayGenSlidingAttacks(PieceControlInterface/* AttackType.RayTraceLimited */.hK.RayTraceLimited);
            var _iterator11 = _createForOfIteratorHelper(rayGen),
              _step11;
            try {
              for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {
                var _attack2 = _step11.value;
                var _iterator14 = _createForOfIteratorHelper(GameData/* colors */.O9),
                  _step14;
                try {
                  for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {
                    var _color3 = _step14.value;
                    if (_color3 === armyColor) continue;
                    var _preGeneratedAttacks3 = this.preGeneratedAttacks[_color3];
                    if (_attack2.length !== 0) {
                      var isRoyalOnLine = false;
                      var resultingAttack = [];
                      var _iterator15 = _createForOfIteratorHelper(_attack2),
                        _step15;
                      try {
                        for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {
                          var _royal$_color;
                          var move = _step15.value.move;
                          resultingAttack.push(move);
                          if (isRoyalOnLine) {
                            _preGeneratedAttacks3.slidingPieces[move[0]][move[1]]++;
                          } else if ((0,BoardInterface/* compareCoordinates */.ef)((_royal$_color = royal[_color3]) !== null && _royal$_color !== void 0 ? _royal$_color : [-1, -1], move)) {
                            isRoyalOnLine = true;
                          }
                        }
                      } catch (err) {
                        _iterator15.e(err);
                      } finally {
                        _iterator15.f();
                      }
                      _preGeneratedAttacks3.slidingPiecesRayTracing.push([coordinate, _attack2.map(m => m.move)]);
                    } else {
                      _preGeneratedAttacks3.slidingPiecesLines.push([coordinate, []]);
                    }
                  }
                } catch (err) {
                  _iterator14.e(err);
                } finally {
                  _iterator14.f();
                }
              }
            } catch (err) {
              _iterator11.e(err);
            } finally {
              _iterator11.f();
            }
          }
          preGeneratedAttacks.pieceMovements.set((0,BoardInterface/* stringifyCoordinate */.Kv)(coordinate), resultingMoves);
        }
      } catch (err) {
        _iterator7.e(err);
      } finally {
        _iterator7.f();
      }
      preGeneratedAttacks.pieceDrops.piece = this.getDroppingMoves((0,PieceString/* createPieceFromData */.HC)(armyColor, GameUnits/* nonPlayablePieces.wall */.KR.wall));
      preGeneratedAttacks.pieceDrops.pawn = this.getDroppingMoves((0,PieceString/* createPieceFromData */.HC)(armyColor, PieceString/* pawnPieceString.piece */.Fb.piece));
    });
  }
  isSetupComplex() {
    return this.isComplexSetup.hasComplexPieces || this.isComplexSetup.hasComplexRules || this.data.isComplexEvaluation();
  }
  isTheMoveLegal(color, moveData) {
    var isSeirawanDrop = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    var royals = this.data.fenOptions.tag("royal");
    var _moveData$startCoordi = _slicedToArray(moveData.startCoordinates, 2),
      pieceI = _moveData$startCoordi[0],
      pieceJ = _moveData$startCoordi[1],
      _moveData$endCoordina = _slicedToArray(moveData.endCoordinates, 2),
      attackI = _moveData$endCoordina[0],
      attackJ = _moveData$endCoordina[1];
    var royal = royals[color];
    if (!this.board[attackI][attackJ].isEmpty() && royal && attackI === royal[0] && attackJ === royal[1]) return false;
    if (this.isSetupComplex()) {
      var snapshot = this.createSnapshot();
      var moveArray = [{
        startCoordinates: [pieceI, pieceJ],
        endCoordinates: [attackI, attackJ]
      }];
      if (isSeirawanDrop) moveArray.push({
        piece: PieceString/* wallPieceString */.cG,
        endCoordinates: [pieceI, pieceJ]
      });
      var _this$makeMove = this.makeMove(moveArray, true),
        checks = _this$makeMove.checks,
        checkmates = _this$makeMove.checkmates;
      var isKingInCheck = checks[color] || checkmates[color];
      if (!isKingInCheck) {
        this.pregenerateAttacks(color);
        isKingInCheck = this.isKingInCheck(color);
      }
      this.loadSnapshot(snapshot);
      return !isKingInCheck;
    } else {
      var _ref = royal !== null && royal !== void 0 ? royal : [null, null],
        _ref2 = _slicedToArray(_ref, 2),
        royalI = _ref2[0],
        royalJ = _ref2[1];
      var preGeneratedAttacks = this.preGeneratedAttacks[color];
      if (royalI === null) return true;
      var isRoyalMove = royalI === pieceI && royalJ === pieceJ;
      var attackers = preGeneratedAttacks.hoppingPieces[royalI][royalJ] + preGeneratedAttacks.slidingPieces[royalI][royalJ];
      var targetSafety = preGeneratedAttacks.slidingPieces[attackI][attackJ] + preGeneratedAttacks.hoppingPieces[attackI][attackJ] === 0;
      var legalitySettings = {
        canKingCapture: undefined
      };
      var _iterator16 = _createForOfIteratorHelper(GameData/* colors */.O9),
        _step16;
      try {
        for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {
          var kingCaptureColor = _step16.value;
          var _royal2 = royals[kingCaptureColor];
          if (kingCaptureColor !== color && _royal2 && _royal2[0] === attackI && _royal2[1] === attackJ) {
            var royalDefendedSquare = preGeneratedAttacks.attackingColors[_royal2[1]][_royal2[0]];
            if ((royalDefendedSquare === kingCaptureColor + 1 || royalDefendedSquare === 0) && (isRoyalMove || preGeneratedAttacks.attackingColors[royalI][royalJ] === kingCaptureColor + 1)) {
              legalitySettings.canKingCapture = kingCaptureColor + 1;
            }
          }
        }
      } catch (err) {
        _iterator16.e(err);
      } finally {
        _iterator16.f();
      }
      if (!this.gameType.isFFA() && legalitySettings.canKingCapture !== undefined) return true;
      var _iterator17 = _createForOfIteratorHelper(preGeneratedAttacks.slidingPiecesRayTracing),
        _step17;
      try {
        for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {
          var _step17$value = _slicedToArray(_step17.value, 2),
            _attackingPiece2 = _step17$value[0],
            _attackLine = _step17$value[1];
          var isPieceUnderAttack = false,
            _isRoyalUnderAttack = false,
            isTheTargetSquarePinListed = false;
          var _iterator21 = _createForOfIteratorHelper(_attackLine),
            _step21;
          try {
            for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {
              var _step21$value = _slicedToArray(_step21.value, 2),
                _attackedX = _step21$value[0],
                _attackedY = _step21$value[1];
              if (!isPieceUnderAttack && _attackedX === pieceI && _attackedY === pieceJ) isPieceUnderAttack = true;else if (!isTheTargetSquarePinListed && !_isRoyalUnderAttack && _attackedX === attackI && _attackedY === attackJ) isTheTargetSquarePinListed = true;
              if (!_isRoyalUnderAttack && _attackedX === royalI && _attackedY === royalJ) _isRoyalUnderAttack = true;
              if (isRoyalMove) {
                if (_isRoyalUnderAttack && _attackedX === attackI && _attackedY === attackJ) {
                  if (legalitySettings.canKingCapture && legalitySettings.canKingCapture > 0 && this.board[_attackedX][_attackedY].color + 1 === legalitySettings.canKingCapture) continue;
                  return false;
                }
              } else {
                if (isPieceUnderAttack && _isRoyalUnderAttack && !(0,BoardInterface/* compareCoordinates */.ef)(_attackingPiece2, moveData.endCoordinates) && !isTheTargetSquarePinListed) {
                  if (legalitySettings.canKingCapture && legalitySettings.canKingCapture > 0 && this.board[_attackedX][_attackedY].color + 1 === legalitySettings.canKingCapture) continue;
                  return false;
                }
              }
            }
          } catch (err) {
            _iterator21.e(err);
          } finally {
            _iterator21.f();
          }
        }
      } catch (err) {
        _iterator17.e(err);
      } finally {
        _iterator17.f();
      }
      if (attackers > 1) {
        return isRoyalMove ? targetSafety || Boolean(legalitySettings.canKingCapture) : Boolean(legalitySettings.canKingCapture);
      } else if (attackers === 1) {
        if (!isRoyalMove) {
          if (preGeneratedAttacks.hoppingPieces[royalI][royalJ] === 1) {
            var _iterator18 = _createForOfIteratorHelper(preGeneratedAttacks.hoppingPieceLines),
              _step18;
            try {
              for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {
                var _step18$value = _slicedToArray(_step18.value, 2),
                  attackingPiece = _step18$value[0],
                  attackCoordinates = _step18$value[1];
                if (attackCoordinates[0] === royalI && attackCoordinates[1] === royalJ && attackingPiece[0] === attackI && attackingPiece[1] === attackJ) {
                  return true;
                }
              }
            } catch (err) {
              _iterator18.e(err);
            } finally {
              _iterator18.f();
            }
            return Boolean(legalitySettings.canKingCapture);
          } else {
            var _iterator19 = _createForOfIteratorHelper(preGeneratedAttacks.slidingPiecesLines),
              _step19;
            try {
              for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {
                var _step19$value = _slicedToArray(_step19.value, 2),
                  _attackingPiece = _step19$value[0],
                  attackLine = _step19$value[1];
                var isRoyalUnderAttack = false,
                  isTheTargetSquareBlocked = false;
                var _iterator20 = _createForOfIteratorHelper(attackLine),
                  _step20;
                try {
                  for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {
                    var _step20$value = _slicedToArray(_step20.value, 2),
                      attackedX = _step20$value[0],
                      attackedY = _step20$value[1];
                    if (!isRoyalUnderAttack && attackedX === royalI && attackedY === royalJ) isRoyalUnderAttack = true;else if (!isTheTargetSquareBlocked && !isRoyalUnderAttack && attackedX === attackI && attackedY === attackJ) isTheTargetSquareBlocked = true;
                    if (isRoyalUnderAttack && !(0,BoardInterface/* compareCoordinates */.ef)(_attackingPiece, moveData.endCoordinates) && !isTheTargetSquareBlocked) {
                      if (legalitySettings.canKingCapture && legalitySettings.canKingCapture > 0 && this.board[attackedX][attackedY].color + 1 === legalitySettings.canKingCapture) continue;
                      return Boolean(legalitySettings.canKingCapture);
                    }
                  }
                } catch (err) {
                  _iterator20.e(err);
                } finally {
                  _iterator20.f();
                }
              }
            } catch (err) {
              _iterator19.e(err);
            } finally {
              _iterator19.f();
            }
            return true;
          }
        } else {
          return targetSafety || Boolean(legalitySettings.canKingCapture);
        }
      } else {
        return isRoyalMove ? targetSafety || Boolean(legalitySettings.canKingCapture) : true;
      }
    }
  }
  getCastlingMoves(parameters) {
    var i = parameters.i,
      j = parameters.j,
      baseColor = parameters.baseColor;
    var specialMoves = [];
    var royal = this.data.fenOptions.tag("royal")[baseColor];
    if (royal && royal[0] === i && royal[1] === j) {
      if (this.data.fenOptions.isKingsideCastlingAvailable(baseColor, this)) {
        specialMoves.push({
          startCoordinates: [i, j],
          endCoordinates: this.data.fenOptions.getKingsideCastlingEndCoordinate(baseColor),
          specialType: MoveTreeInterface/* SpecialMove.CastlingKingside */.uj.CastlingKingside
        });
      }
      if (this.data.fenOptions.isQueensideCastlingAvailable(baseColor, this)) {
        specialMoves.push({
          startCoordinates: [i, j],
          endCoordinates: this.data.fenOptions.getQueensideCastlingEndCoordinate(baseColor),
          specialType: MoveTreeInterface/* SpecialMove.CastlingQueenside */.uj.CastlingQueenside
        });
      }
    }
    return specialMoves;
  }
  getEnPassantMoves(parameters) {
    var i = parameters.i,
      j = parameters.j,
      baseColor = parameters.baseColor,
      pieceLetter = parameters.pieceLetter;
    var specialMoves = [];
    if (PieceControlInterface/* pieceControlConfigSettings */.Gf[pieceLetter].moveGenerationSettings.isPawn) {
      var enPassantCaptures = this.data.fenOptions.getAvailableEnPassantCaptures(baseColor);
      var pawnAttacks = this.controls[pieceLetter]().setBaseImmunePieces(this.gameType.getBaseColors(baseColor)).setBoard(this.board).setCoordinates(i, j).setColor(baseColor).constructPieceControl().rayGenJumpingAttacks();
      if (enPassantCaptures.length !== 0) {
        var _iterator22 = _createForOfIteratorHelper(pawnAttacks),
          _step22;
        try {
          for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {
            var attack = _step22.value;
            var _iterator23 = _createForOfIteratorHelper(enPassantCaptures),
              _step23;
            try {
              for (_iterator23.s(); !(_step23 = _iterator23.n()).done;) {
                var enP = _step23.value;
                if ((0,BoardInterface/* compareCoordinates */.ef)(attack.move, enP)) {
                  var snapshot = this.createSnapshot();
                  var move = [{
                    startCoordinates: [i, j],
                    endCoordinates: attack.move,
                    specialType: MoveTreeInterface/* SpecialMove.EnPassant */.uj.EnPassant,
                    isIrreversible: attack.irreversible
                  }];
                  this.makeMove(move, true);
                  this.pregenerateAttacks();
                  if (!this.isKingInCheck(baseColor)) specialMoves.push(move[0]);
                  this.loadSnapshot(snapshot);
                }
              }
            } catch (err) {
              _iterator23.e(err);
            } finally {
              _iterator23.f();
            }
          }
        } catch (err) {
          _iterator22.e(err);
        } finally {
          _iterator22.f();
        }
      }
    }
    return specialMoves;
  }
  getSpecialMoves(parameters) {
    return [...this.getCastlingMoves(parameters), ...this.getEnPassantMoves(parameters)];
  }
  getLegalMoves(i, j) {
    var _this$board$i;
    var baseColor = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.data.sideToMove;
    var isSeirawanDrop = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
    var pieceString = (_this$board$i = this.board[i]) === null || _this$board$i === void 0 ? void 0 : _this$board$i[j],
      royal = this.data.fenOptions.tag("royal")[baseColor];
    if (pieceString.isPiece()) {
      var color = pieceString.color;
      if (color !== baseColor) return [];
      var pseudoLegalMoves = this.preGeneratedAttacks[color].pieceMovements.get((0,BoardInterface/* stringifyCoordinate */.Kv)([i, j]));
      (0,baseTypes/* assertNonUndefined */.lM)(pseudoLegalMoves);
      var specialMoves = this.getSpecialMoves({
        i,
        j,
        baseColor,
        pieceLetter: pieceString.piece
      });
      return [...pseudoLegalMoves.map(generatedMove => {
        var moveData = {
          startCoordinates: [i, j],
          endCoordinates: generatedMove.move,
          isIrreversible: generatedMove.irreversible
        };
        if (generatedMove.move[2]) {
          moveData.promotion = generatedMove.move[2].split("").map(piece => (0,PieceString/* createPieceFromData */.HC)(color, piece));
        }
        return moveData;
      }).filter(m => {
        var capturedPieces = this.data.getCapturedPieces(m);
        var isKingCapture = royal && capturedPieces.find(c => royal[0] === c[0] && royal[1] === c[1]);
        return this.isTheMoveLegal(color, m, isSeirawanDrop) && !isKingCapture;
      }), ...specialMoves];
    } else {
      return [];
    }
  }

  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  getDroppingMoves(_piece) {
    var _sideToMove = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.data.sideToMove;
    return [];
  }
  getAllowedInternalMoves() {
    var sideToMove = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.data.sideToMove;
    var currentMoves = [MoveTreeInterface/* InternalMoveSignature.DrawByAgreement */.Fi.DrawByAgreement];
    var currentSnapshot = this.createSnapshot();
    this.makeMove([{
      type: MoveTreeInterface/* InternalMoveSignature.Resign */.Fi.Resign
    }], true);
    var maximum = Math.max(...this.data.points);
    var pointIndexes = this.data.points.reduce((p, n, i) => n === maximum ? [...p, i] : p, []);
    this.loadSnapshot(currentSnapshot);
    if (pointIndexes.length === 1 && pointIndexes[0] === sideToMove) {
      currentMoves.push(MoveTreeInterface/* InternalMoveSignature.ClaimWin */.Fi.ClaimWin);
    } else {
      currentMoves.push(MoveTreeInterface/* InternalMoveSignature.Resign */.Fi.Resign, MoveTreeInterface/* InternalMoveSignature.Timeout */.Fi.Timeout);
    }
    return currentMoves.map(type => ({
      type
    }));
  }

  /*---------------------------------------- API ----------------------------------------------*/
}

/***/ }),

/***/ 29939:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Bd": () => (/* binding */ createGameTypeSettings),
/* harmony export */   "Ft": () => (/* binding */ DisplaySettings),
/* harmony export */   "Kv": () => (/* binding */ stringifyCoordinate),
/* harmony export */   "Ov": () => (/* binding */ createComplexMoveLegalityTracker),
/* harmony export */   "RN": () => (/* binding */ createBasePreGeneratedAttacks),
/* harmony export */   "Xm": () => (/* binding */ unstringifyCoordinate),
/* harmony export */   "ef": () => (/* binding */ compareCoordinates)
/* harmony export */ });
/* harmony import */ var _baseTypes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(18027);
/* harmony import */ var _BaseInterfaces__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(34355);
/* harmony import */ var _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(76758);
/* harmony import */ var _GameInformation_GameUnits_GameUnits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(9960);




var DisplaySettings = {
  Highlighted: 0,
  Fogged: 1,
  Ghosted: 2,
  Blindfolded: 3,
  PieceFacesCenter: 4
};
var baseTeams = [true, false, true, false];
var stringifyCoordinate = coordinate => "".concat(coordinate[0], ":").concat(coordinate[1]);
var unstringifyCoordinate = coordinate => {
  var result = coordinate.split(":").map(v => Number(v));
  if ((0,_baseTypes__WEBPACK_IMPORTED_MODULE_3__/* .verifyTupleType */ .CG)(result, 2) && result.every(n => !Number.isNaN(n))) {
    return result;
  } else throw new Error("Unexpected stringified coordinate: ".concat(coordinate));
};
var createGameTypeSettings = () => ({
  type: _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_1__/* .VariantType.FFA */ .Jy.FFA,
  teamSettings: {
    firstTeamColors: baseTeams.map(e => e),
    secondTeamColors: baseTeams.map(e => !e)
  },
  getBaseColors(color) {
    if (this.isFFA()) {
      return (0,_baseTypes__WEBPACK_IMPORTED_MODULE_3__/* .createTupleFromCallback */ .fi)((_, i) => i === color, _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_1__/* .totalPlayers */ .q3);
    } else {
      return this.teamSettings.firstTeamColors[color] ? this.teamSettings.firstTeamColors : this.teamSettings.secondTeamColors;
    }
  },
  isFFA() {
    return this.type === _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_1__/* .VariantType.FFA */ .Jy.FFA || this.type === _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_1__/* .VariantType.Solo */ .Jy.Solo;
  },
  isSameTeam(colorA, colorB) {
    if (colorA === colorB) return true;
    if (this.isFFA()) {
      return false;
    } else {
      return this.teamSettings.firstTeamColors[colorA] ? this.teamSettings.firstTeamColors[colorA] && this.teamSettings.firstTeamColors[colorA] : this.teamSettings.secondTeamColors[colorA] && this.teamSettings.secondTeamColors[colorB];
    }
  },
  getTeammateColor(color) {
    if (this.isFFA()) return color;
    var teammateIndex = this.teamSettings.firstTeamColors[color] ? this.teamSettings.firstTeamColors.map((b, i) => b && i !== color).indexOf(true) : this.teamSettings.secondTeamColors.map((b, i) => b && i !== color).indexOf(true);
    return (0,_GameInformation_GameUnits_GameUnits__WEBPACK_IMPORTED_MODULE_2__/* .verifyNumericColor */ .O3)(teammateIndex) ? teammateIndex : color;
  }
});
var createComplexMoveLegalityTracker = () => ({
  hasComplexPieces: false,
  hasComplexRules: false
});
var createBasePreGeneratedAttacks = () => {
  return {
    hoppingPieces: (0,_BaseInterfaces__WEBPACK_IMPORTED_MODULE_0__/* .initializeBoardSquares */ .BD)(() => 0),
    slidingPieces: (0,_BaseInterfaces__WEBPACK_IMPORTED_MODULE_0__/* .initializeBoardSquares */ .BD)(() => 0),
    hoppingPieceLines: [],
    slidingPiecesLines: [],
    slidingPiecesRayTracing: [],
    attackingColors: (0,_BaseInterfaces__WEBPACK_IMPORTED_MODULE_0__/* .initializeBoardSquares */ .BD)(() => 0),
    pieceMovements: new Map(),
    pieceDrops: {
      pawn: [],
      piece: []
    },
    variantRuleCache: {}
  };
};
var compareCoordinates = (coordinate1, coordinate2) => coordinate1[0] === coordinate2[0] && coordinate1[1] === coordinate2[1];

/***/ }),

/***/ 26814:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "c": () => (/* binding */ FENData),
  "m": () => (/* reexport */ FENOptions)
});

// EXTERNAL MODULE: ./src/main/client/ts/logic/BaseInterfaces.ts
var BaseInterfaces = __webpack_require__(34355);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/FENData/FENDataInterface.ts
var FENDataInterface = __webpack_require__(52463);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/MoveTree/MoveTreeInterface.ts
var MoveTreeInterface = __webpack_require__(37017);
// EXTERNAL MODULE: ./src/main/client/ts/baseTypes.ts
var baseTypes = __webpack_require__(18027);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/GameInformation/GameData.ts
var GameData = __webpack_require__(76758);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/GameInformation/GameUnits/PieceString.ts
var PieceString = __webpack_require__(20915);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/PieceControl/PieceControlInterface.ts
var PieceControlInterface = __webpack_require__(16703);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/Board/BoardInterface.ts
var BoardInterface = __webpack_require__(29939);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/GameInformation/GameUnits/GameUnits.ts
var GameUnits = __webpack_require__(9960);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardVariantModules/EngineMoveGeneration/BotInterface.ts
var BotInterface = __webpack_require__(69283);
// EXTERNAL MODULE: ./src/main/client/ts/utils/ObjectUtils.ts
var ObjectUtils = __webpack_require__(35637);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/FENData/FENOptions/FENOptionsTagsInterface.ts + 1 modules
var FENOptionsTagsInterface = __webpack_require__(54434);
;// CONCATENATED MODULE: ./src/main/client/ts/logic/movegen/FENData/FENOptions/FENOptions.ts
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }






class FENOptions {
  constructor() {
    _defineProperty(this, "tags", (0,FENOptionsTagsInterface/* createFENOptionsTags */.fL)());
    _defineProperty(this, "castlingKingsideData", (0,baseTypes/* createTupleFromCallback */.fi)(() => ({
      endCoordinates: -1,
      pieceCoordinates: -1,
      pieceEndCoordinates: -1,
      checkSquares: []
    }), GameData/* totalPlayers */.q3));
    _defineProperty(this, "castlingQueensideData", (0,baseTypes/* createTupleFromCallback */.fi)(() => ({
      endCoordinates: -1,
      pieceCoordinates: -1,
      pieceEndCoordinates: -1,
      checkSquares: []
    }), GameData/* totalPlayers */.q3));
  }
  static loadSerializedState(state) {
    var newTags = (0,FENOptionsTagsInterface/* createFENOptionsTags */.fL)();
    var key;
    for (key in newTags) {
      if (Object.prototype.hasOwnProperty.call(newTags, key)) {
        newTags[key].value = state[key];
      }
    }
    return newTags;
  }
  createSnapshot() {
    return {
      tagsSnapshot: (0,FENOptionsTagsInterface/* createFENOptionsTagsSnapshot */.rE)(this.tags)
    };
  }
  loadTagSnapshot(value, tag) {
    tag.loadSnapshot(value);
  }
  loadSnapshot(snapshot) {
    var key;
    for (key in snapshot.tagsSnapshot) {
      if (!Object.prototype.hasOwnProperty.call(snapshot.tagsSnapshot, key)) continue;
      this.loadTagSnapshot(snapshot.tagsSnapshot[key], this.tags[key]);
    }
  }
  verifyKeyTag(key, snapshot) {
    return key in snapshot;
  }
  createClone() {
    var newOptions = (0,ObjectUtils/* copyClass */.lJ)(this, FENOptions);
    var snapshot = this.createSnapshot();
    newOptions.tags = (0,FENOptionsTagsInterface/* createFENOptionsTags */.fL)();
    newOptions.loadSnapshot(snapshot);
    var key;
    for (key in this.tags) {
      if (Object.prototype.hasOwnProperty.call(this.tags, key) && !this.verifyKeyTag(key, snapshot.tagsSnapshot)) {
        newOptions.tags[key].value = this.tags[key].value;
      }
    }
    return newOptions;
  }
  tag(key) {
    return this.tags[key].value;
  }
  setTag(key, value) {
    this.tags[key].value = value;
  }
  createSerializedState() {
    var serializedState = {};
    var fenTag;
    for (fenTag in this.tags) {
      if (!Object.prototype.hasOwnProperty.call(this.tags, fenTag)) continue;
      var tag = this.tags[fenTag];
      serializedState[fenTag] = tag.createSnapshot();
    }
    return serializedState;
  }
  generateCastling(board) {
    var _this = this;
    var _this$tag = this.tag("dim"),
      _this$tag2 = _slicedToArray(_this$tag, 2),
      dimensionRY = _this$tag2[0],
      dimensionBG = _this$tag2[1];
    if (!this.tag("noCorners")) {
      if (dimensionRY > 8) dimensionRY = 8;
      if (dimensionBG > 8) dimensionBG = 8;
    }
    var dimensions = [dimensionRY, dimensionBG, dimensionRY, dimensionBG];
    var royalRanks = this.tag("royal").map((r, i) => r ? r[(0,BaseInterfaces/* getHorizontalPlacementModulus */.x_)(i)] : r);
    var royalCoordinates = this.tag("royal").map((r, i) => r ? r[(0,BaseInterfaces/* getHorizontalPlacementModulus */.x_)(i)] : r);
    var kingsideCastlePieceCoordinate = [];
    var queensideCastlePieceCoordinate = [];
    var boardSquares = board.board;
    for (var i = 0; i < this.tag("royal").length; i++) {
      var royalCoordinateI = royalCoordinates[i];
      var royalRanksI = royalRanks[i];
      if (royalCoordinateI === null || royalRanksI === null) {
        kingsideCastlePieceCoordinate.push(-1);
        queensideCastlePieceCoordinate.push(-1);
        continue;
      }
      var condition = i % 2 === 0;
      for (var j = royalCoordinateI; j < 14; j++) {
        var pieceString = boardSquares[condition ? royalRanksI : j][condition ? j : royalRanksI];
        if (!pieceString.isEmpty() && pieceString.piece === this.tag("castleWith")) {
          kingsideCastlePieceCoordinate.push(j);
          break;
        } else if (j === 13) {
          kingsideCastlePieceCoordinate.push(-1);
        }
      }
      for (var _j = royalCoordinateI; _j > -1; _j--) {
        var _pieceString = boardSquares[condition ? royalRanksI : _j][condition ? _j : royalRanksI];
        if (!_pieceString.isEmpty() && _pieceString.piece === this.tag("castleWith")) {
          queensideCastlePieceCoordinate.push(_j);
          break;
        } else if (_j === 0) {
          queensideCastlePieceCoordinate.push(-1);
        }
      }
    }
    var _loop = function _loop() {
      var royalCoordinate = royalCoordinates[_i2];
      if (royalCoordinate === null) return "continue";
      var d = dimensions[_i2] - 6 < 1 ? 1 : dimensions[_i2] - 6;
      if (kingsideCastlePieceCoordinate[_i2] === -1) {
        _this.tag("castleKingside")[_i2] = false;
      } else {
        var kArr = [...Array(kingsideCastlePieceCoordinate[_i2] - royalCoordinate - 1).keys()];
        var endCoordinates = royalCoordinate + d;
        var castlingData = {
          endCoordinates,
          checkSquares: kArr.map(j => j + royalCoordinate + 1),
          pieceCoordinates: kingsideCastlePieceCoordinate[_i2],
          pieceEndCoordinates: endCoordinates - 1
        };
        if (royalCoordinate <= 6) {
          _this.castlingQueensideData[_i2] = castlingData;
        } else {
          _this.castlingKingsideData[_i2] = castlingData;
        }
      }
      if (queensideCastlePieceCoordinate[_i2] === -1) {
        _this.tags.castleQueenside.value[_i2] = false;
      } else {
        var qArr = [...Array(royalCoordinate - queensideCastlePieceCoordinate[_i2] - 1).keys()];
        var _endCoordinates = royalCoordinate - d;
        var _castlingData = {
          endCoordinates: _endCoordinates,
          checkSquares: royalCoordinate <= 6 ? qArr.map(j => j + royalCoordinate - 2) : qArr.map(j => j + royalCoordinate - 3),
          pieceCoordinates: queensideCastlePieceCoordinate[_i2],
          pieceEndCoordinates: _endCoordinates + 1
        };
        if (royalCoordinate <= 6) {
          _this.castlingKingsideData[_i2] = _castlingData;
        } else {
          _this.castlingQueensideData[_i2] = _castlingData;
        }
      }
    };
    for (var _i2 = 0; _i2 < this.tag("royal").length; _i2++) {
      var _ret = _loop();
      if (_ret === "continue") continue;
    }
  }
  isCastlingAvailable(player, board, checks) {
    var royal = this.tag("royal")[player];
    if (royal === null) return false;
    var royalCoordinate = royal[(0,BaseInterfaces/* getVerticalPlacementModulus */.ft)(player)];
    var squares = board.board;
    var _iterator = _createForOfIteratorHelper(checks),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var checkSquare = _step.value;
        var coordinateA = (0,BaseInterfaces/* isVerticalPlacement */.sC)(player) ? royalCoordinate : checkSquare;
        var coordinateB = (0,BaseInterfaces/* isVerticalPlacement */.sC)(player) ? checkSquare : royalCoordinate;
        if (!squares[coordinateA][coordinateB].isEmpty() || board.preGeneratedAttacks[player].hoppingPieces[coordinateA][coordinateB] > 0 || board.preGeneratedAttacks[player].slidingPieces[coordinateA][coordinateB] > 0) return false;
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    if (board.isKingInCheck(player)) return false;
    return true;
  }
  isKingsideCastlingAvailable(player, board) {
    if (!this.tag("castleKingside")[player]) return false;
    if (this.castlingKingsideData[player].endCoordinates === -1) {
      this.generateCastling(board);
    }
    return this.isCastlingAvailable(player, board, this.castlingKingsideData[player].checkSquares);
  }
  isQueensideCastlingAvailable(player, board) {
    if (!this.tag("castleQueenside")[player]) return false;
    if (this.castlingQueensideData[player].endCoordinates === -1) {
      this.generateCastling(board);
    }
    return this.isCastlingAvailable(player, board, this.castlingQueensideData[player].checkSquares);
  }
  getCastlingEndCoordinate(player, coordinates) {
    var _this$tag$player;
    var royalCoordinate = (_this$tag$player = this.tag("royal")[player]) === null || _this$tag$player === void 0 ? void 0 : _this$tag$player[(0,BaseInterfaces/* getVerticalPlacementModulus */.ft)(player)];
    (0,baseTypes/* assertNonUndefined */.lM)(coordinates);
    (0,baseTypes/* assertNonUndefined */.lM)(royalCoordinate);
    var coordinateA = (0,BaseInterfaces/* isVerticalPlacement */.sC)(player) ? royalCoordinate : coordinates;
    var coordinateB = (0,BaseInterfaces/* isVerticalPlacement */.sC)(player) ? coordinates : royalCoordinate;
    return [coordinateA, coordinateB];
  }
  getKingsideCastlingEndCoordinate(player) {
    return this.getCastlingEndCoordinate(player, this.castlingKingsideData[player].endCoordinates);
  }
  getQueensideCastlingEndCoordinate(player) {
    return this.getCastlingEndCoordinate(player, this.castlingQueensideData[player].endCoordinates);
  }
  getKingsideCastlingPieceEndCoordinate(player) {
    return this.getCastlingEndCoordinate(player, this.castlingKingsideData[player].pieceEndCoordinates);
  }
  getQueensideCastlingPieceEndCoordinate(player) {
    return this.getCastlingEndCoordinate(player, this.castlingQueensideData[player].pieceEndCoordinates);
  }
  getKingsideCastlingTandemPiece(player) {
    return this.castlingKingsideData[player].pieceCoordinates;
  }
  getQueensideCastlingTandemPiece(player) {
    return this.castlingQueensideData[player].pieceCoordinates;
  }
  getAvailableEnPassantCaptures(baseColor) {
    var coordinates = [];
    this.tag("enPassant").forEach((enPassant, i) => {
      if (i === baseColor) return;
      if (enPassant) coordinates.push(enPassant[0]);
    });
    return coordinates.map(e => [...e]);
  }
  getDefaultZombieAlgorithm(baseColor) {
    var algorithm = BotInterface.botAlgorithms.get(this.tag("resigned")[baseColor] ? this.tag("zombieType")[baseColor] : BotInterface.ZombieType.F_Checker);
    (0,baseTypes/* assertNonUndefined */.lM)(algorithm);
    return algorithm;
  }
}
;// CONCATENATED MODULE: ./src/main/client/ts/logic/movegen/FENData/FENData.ts
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { FENData_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function FENData_createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = FENData_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function FENData_slicedToArray(arr, i) { return FENData_arrayWithHoles(arr) || FENData_iterableToArrayLimit(arr, i) || FENData_unsupportedIterableToArray(arr, i) || FENData_nonIterableRest(); }
function FENData_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function FENData_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return FENData_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return FENData_arrayLikeToArray(o, minLen); }
function FENData_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function FENData_iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function FENData_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function FENData_defineProperty(obj, key, value) { key = FENData_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function FENData_toPropertyKey(arg) { var key = FENData_toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function FENData_toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }










var defaultPointsForMate = 20;
class FENData {
  initDecoratorSettings() {
    /* no-op */
  }
  constructor() {
    FENData_defineProperty(this, "points", void 0);
    FENData_defineProperty(this, "sideToMove", void 0);
    FENData_defineProperty(this, "fenOptions", void 0);
    FENData_defineProperty(this, "plyCount", void 0);
    FENData_defineProperty(this, "board", void 0);
    FENData_defineProperty(this, "privateGameOver", false);
    FENData_defineProperty(this, "__baseClass", void 0);
    this.points = [0, 0, 0, 0];
    this.sideToMove = 0;
    this.fenOptions = new FENOptions();
    this.plyCount = 0;
    this.__baseClass = this;
  }
  get gameOver() {
    return this.privateGameOver;
  }
  set gameOver(gameOver) {
    if (gameOver === false || this.privateGameOver === false) {
      this.privateGameOver = gameOver;
    }
  }
  injectBoard(board) {
    this.board = board;
    this.fenOptions.generateCastling(board);
  }
  createClone() {
    var newFENData = new FENData();
    newFENData.fenOptions = this.fenOptions.createClone();
    newFENData.points = [...this.points];
    newFENData.sideToMove = this.sideToMove;
    newFENData.plyCount = this.plyCount;
    return newFENData;
  }
  createSnapshot() {
    return {
      points: [...this.points],
      sideToMove: this.sideToMove,
      fenOptionsSnapshot: this.fenOptions.createSnapshot(),
      plyCount: this.plyCount,
      gameOver: this.gameOver
    };
  }
  loadSnapshot(snapshot) {
    this.fenOptions.loadSnapshot(snapshot.fenOptionsSnapshot);
    this.points = [...snapshot.points];
    this.sideToMove = snapshot.sideToMove;
    this.plyCount = snapshot.plyCount;
    this.privateGameOver = snapshot.gameOver;
  }
  getCapturedPieces(moveData) {
    var pieceString = this.board.board[moveData.endCoordinates[0]][moveData.endCoordinates[1]];
    return pieceString.isEmpty() || pieceString.isDead() ? [] : [[...moveData.endCoordinates]];
  }
  getCastlingPieceEndCoordinates(coordinates, color) {
    return [(0,BaseInterfaces/* isVerticalPlacement */.sC)(color) ? [coordinates[0], this.fenOptions.getKingsideCastlingTandemPiece(color)] : [this.fenOptions.getKingsideCastlingTandemPiece(color), coordinates[1]], (0,BaseInterfaces/* isVerticalPlacement */.sC)(color) ? [coordinates[0], this.fenOptions.getQueensideCastlingTandemPiece(color)] : [this.fenOptions.getQueensideCastlingTandemPiece(color), coordinates[1]]];
  }
  processStandardMove(moveData) {
    var _promotion$;
    var _moveData$startCoordi = FENData_slicedToArray(moveData.startCoordinates, 2),
      startI = _moveData$startCoordi[0],
      startJ = _moveData$startCoordi[1],
      _moveData$endCoordina = FENData_slicedToArray(moveData.endCoordinates, 2),
      endI = _moveData$endCoordina[0],
      endJ = _moveData$endCoordina[1],
      promotion = moveData.promotion;
    var endPiece = this.board.board[endI][endJ];
    var piece = (_promotion$ = promotion === null || promotion === void 0 ? void 0 : promotion[0]) !== null && _promotion$ !== void 0 ? _promotion$ : this.board.board[startI][startJ];
    var capturedPieces = this.getCapturedPieces(moveData);
    this.board.board[endI][endJ] = piece;
    this.board.board[startI][startJ] = PieceString/* emptyPieceString */.v2;
    var _iterator = FENData_createForOfIteratorHelper(capturedPieces),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var coordinate = _step.value;
        if ((0,BoardInterface/* compareCoordinates */.ef)(coordinate, moveData.startCoordinates)) {
          this.board.board[endI][endJ] = PieceString/* emptyPieceString */.v2;
        } else if (!(0,BoardInterface/* compareCoordinates */.ef)(coordinate, moveData.endCoordinates)) {
          this.board.board[coordinate[0]][coordinate[1]] = PieceString/* emptyPieceString */.v2;
        }
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    var _this$getCastlingPiec = this.getCastlingPieceEndCoordinates(moveData.startCoordinates, this.sideToMove),
      _this$getCastlingPiec2 = FENData_slicedToArray(_this$getCastlingPiec, 2),
      kingsidePiece = _this$getCastlingPiec2[0],
      queensidePiece = _this$getCastlingPiec2[1];
    if ("specialType" in moveData) {
      var type = moveData.specialType;
      switch (type) {
        case MoveTreeInterface/* SpecialMove.CastlingKingside */.uj.CastlingKingside:
          {
            var secondKPiece = (0,BaseInterfaces/* isVerticalPlacement */.sC)(this.sideToMove) ? this.board.board[startI][this.fenOptions.getKingsideCastlingTandemPiece(this.sideToMove)] : this.board.board[this.fenOptions.getKingsideCastlingTandemPiece(this.sideToMove)][startJ];
            var _this$fenOptions$getK = this.fenOptions.getKingsideCastlingPieceEndCoordinate(this.sideToMove),
              _this$fenOptions$getK2 = FENData_slicedToArray(_this$fenOptions$getK, 2),
              kI = _this$fenOptions$getK2[0],
              kJ = _this$fenOptions$getK2[1];
            this.board.board[kI][kJ] = secondKPiece;
            this.board.board[kingsidePiece[0]][kingsidePiece[1]] = PieceString/* emptyPieceString */.v2;
            break;
          }
        case MoveTreeInterface/* SpecialMove.CastlingQueenside */.uj.CastlingQueenside:
          {
            var secondQPiece = (0,BaseInterfaces/* isVerticalPlacement */.sC)(this.sideToMove) ? this.board.board[startI][this.fenOptions.getQueensideCastlingTandemPiece(this.sideToMove)] : this.board.board[this.fenOptions.getQueensideCastlingTandemPiece(this.sideToMove)][startJ];
            var _this$fenOptions$getQ = this.fenOptions.getQueensideCastlingPieceEndCoordinate(this.sideToMove),
              _this$fenOptions$getQ2 = FENData_slicedToArray(_this$fenOptions$getQ, 2),
              qI = _this$fenOptions$getQ2[0],
              qJ = _this$fenOptions$getQ2[1];
            this.board.board[qI][qJ] = secondQPiece;
            this.board.board[queensidePiece[0]][queensidePiece[1]] = PieceString/* emptyPieceString */.v2;
            break;
          }
        default:
          if (type === undefined || !(type in MoveTreeInterface/* SpecialMove */.uj)) {
            console.error("Unknown special move constant: ".concat(String(type)));
          }
      }
    }
    var castleKingside = this.fenOptions.tag("castleKingside"),
      castleQueenside = this.fenOptions.tag("castleQueenside"),
      royal = this.fenOptions.tag("royal");
    this.fenOptions.setTag("royal", this.fenOptions.tag("royal").map((r, i) => {
      if (r) {
        if (r[0] === startI && r[1] === startJ) {
          castleKingside[i] = false;
          castleQueenside[i] = false;
          return [endI, endJ];
        } else return [...r];
      } else return null;
    }));
    var _iterator2 = FENData_createForOfIteratorHelper(GameData/* colors */.O9),
      _step2;
    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        var color = _step2.value;
        var royalPiece = royal[color];
        if (!royalPiece) continue;
        if ((0,BoardInterface/* compareCoordinates */.ef)(royalPiece, moveData.startCoordinates)) {
          castleKingside[color] = false;
          castleQueenside[color] = false;
          break;
        } else if ((0,BoardInterface/* compareCoordinates */.ef)(kingsidePiece, moveData.startCoordinates)) {
          castleKingside[color] = false;
          break;
        } else if ((0,BoardInterface/* compareCoordinates */.ef)(queensidePiece, moveData.startCoordinates)) {
          castleQueenside[color] = false;
          break;
        }
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
    return {
      endPiece: endPiece.isEmpty() ? [] : [endPiece]
    };
  }
  spreadPointsBetweenPlayersEvenly() {
    var resigned = this.fenOptions.tag("resigned"),
      dead = this.fenOptions.tag("dead");
    var realPlayers = resigned.reduce((p, n, i) => p + Number(n || dead[i]), 0);
    var individualPoints = Math.ceil(this.obtainPointsForMate() / realPlayers);
    var _iterator3 = FENData_createForOfIteratorHelper(GameData/* colors */.O9),
      _step3;
    try {
      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
        var color = _step3.value;
        if (!dead[color]) {
          this.assignPoints(color, individualPoints);
        }
      }
    } catch (err) {
      _iterator3.e(err);
    } finally {
      _iterator3.f();
    }
  }
  branchBetweenResignationMoves(move, sideToMove) {
    var playerName = (0,GameData/* getPlayerNameFromColor */.oh)(sideToMove).toUpperCase();
    switch (move) {
      case MoveTreeInterface/* InternalMoveSignature.Resign */.Fi.Resign:
        this.gameOver = "".concat(playerName, " RESIGNED!");
        break;
      case MoveTreeInterface/* InternalMoveSignature.Timeout */.Fi.Timeout:
        this.gameOver = "".concat(playerName, " FORFEITS ON TIME!");
        break;
      case MoveTreeInterface/* InternalMoveSignature.ClaimWin */.Fi.ClaimWin:
        this.gameOver = "".concat(playerName, " CLAIMED THE WIN!");
        break;
      default:
        (0,baseTypes/* throwOnNever */.h0)(move);
    }
  }
  processInternalMove(internalMove) {
    var _this$board$insuffici;
    var resigned = this.fenOptions.tag("resigned"),
      dead = this.fenOptions.tag("dead");
    var stalemates = (0,baseTypes/* createTuple */.VS)(false, GameData/* totalPlayers */.q3);
    var insufficientMaterial = (_this$board$insuffici = this.board.insufficientMaterialChecker) === null || _this$board$insuffici === void 0 ? void 0 : _this$board$insuffici.checkCurrentState(this.board).every((b, i) => {
      if (i === this.sideToMove) {
        return b;
      } else {
        return b || dead[i];
      }
    });
    switch (internalMove.type) {
      case MoveTreeInterface/* InternalMoveSignature.Stalemate */.Fi.Stalemate:
        dead[this.sideToMove] = true;
        stalemates[this.sideToMove] = true;
        break;
      case MoveTreeInterface/* InternalMoveSignature.Resign */.Fi.Resign:
      case MoveTreeInterface/* InternalMoveSignature.Timeout */.Fi.Timeout:
        if (insufficientMaterial) {
          this.assignGeneralTermination("Timeout vs Insufficient Material");
        }
      // * Fallthrough
      case MoveTreeInterface/* InternalMoveSignature.ClaimWin */.Fi.ClaimWin:
        {
          resigned[this.sideToMove] = true;
          this.turnPiecesDead(this.sideToMove, _objectSpread(_objectSpread({}, (0,FENDataInterface/* createDefaultArmyDeathSettings */.P8)()), {}, {
            excludeRoyals: true,
            doNotSetDead: true
          }));
          var deadPlayers = dead.map((d, i) => d || resigned[i]).filter(Boolean);
          var isResignationOver = deadPlayers.length === GameData/* totalPlayers */.q3 - 1;
          if (insufficientMaterial) {
            this.spreadPointsBetweenPlayersEvenly();
          } else if (deadPlayers.length === GameData/* totalPlayers */.q3 - 1) {
            var alivePlayer = deadPlayers.findIndex(d => !d);
            if ((0,GameUnits/* verifyNumericColor */.O3)(alivePlayer)) {
              this.assignPoints(alivePlayer, this.countTotalPointsOnBoard().reduce((p, n, i) => p + (i === alivePlayer ? n : 0), 0));
              isResignationOver = true;
            }
          } else if (!this.board.gameType.isFFA()) {
            isResignationOver = true;
          }
          if (isResignationOver) {
            this.branchBetweenResignationMoves(internalMove.type, this.sideToMove);
          }
          break;
        }
      case MoveTreeInterface/* InternalMoveSignature.DrawByAgreement */.Fi.DrawByAgreement:
        this.gameOver = "½-½ AGREED.";
        break;
      case MoveTreeInterface/* InternalMoveSignature.Pass */.Fi.Pass:
        break;
      case MoveTreeInterface/* InternalMoveSignature.TeamsCheckmate */.Fi.TeamsCheckmate:
        {
          this.gameOver = "CHECKMATE \u2022 ".concat(this.getCurrentResult());
          this.turnPiecesDead(this.sideToMove);
          this.turnPiecesDead(this.board.gameType.getTeammateColor(this.sideToMove));
          break;
        }
      default:
        (0,baseTypes/* throwOnNever */.h0)(internalMove.type);
    }
    return {
      stalemates
    };
  }
  processDroppingMove(move) {
    var bank = this.fenOptions.tag("bank"),
      areBanksEnabled = this.fenOptions.tag("areBanksEnabled"),
      setupComplete = this.fenOptions.tag("setupComplete");
    if (!this.board.variantData.duckChess && !areBanksEnabled[this.sideToMove]) return;
    var playerBank = bank[this.sideToMove];
    var pieceStringReference = [...playerBank.keys()].find(pieceString => pieceString.piece === move.piece.piece);
    if (!pieceStringReference && !this.board.variantData.duckChess && move.piece.piece !== GameUnits/* nonPlayablePieces.duck */.KR.duck) return;
    var safeReference = pieceStringReference !== null && pieceStringReference !== void 0 ? pieceStringReference : move.piece;
    this.board.board[move.endCoordinates[0]][move.endCoordinates[1]] = move.piece;
    if (!setupComplete[this.sideToMove]) return;
    var bankPieceCount = playerBank.get(safeReference);
    if (bankPieceCount == 1) {
      playerBank.delete(safeReference);
    } else if (bankPieceCount) {
      playerBank.set(safeReference, bankPieceCount - 1);
    }
  }
  turnPiecesDead(color) {
    var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (0,FENDataInterface/* createDefaultArmyDeathSettings */.P8)();
    var royal = this.fenOptions.tag("royal"),
      dead = this.fenOptions.tag("dead");
    var royalPiece = royal[color];
    if (!settings.doNotSetDead) {
      dead[color] = true;
      royal[color] = null;
    }
    var _iterator4 = FENData_createForOfIteratorHelper(this.board.getPlayerPieces()[color]),
      _step4;
    try {
      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
        var coordinate = _step4.value;
        if (settings.excludeRoyals && royalPiece && (0,BoardInterface/* compareCoordinates */.ef)(coordinate, royalPiece)) continue;
        var piece = this.board.board[coordinate[0]][coordinate[1]].piece;
        if (settings.onlyPawns && !PieceControlInterface/* pieceControlConfigSettings */.Gf[piece].moveGenerationSettings.isPawn) continue;
        this.board.board[coordinate[0]][coordinate[1]] = (0,PieceString/* createPieceFromData */.HC)(PieceString/* deadColorIndex */.Ir, this.board.board[coordinate[0]][coordinate[1]].piece);
      }
    } catch (err) {
      _iterator4.e(err);
    } finally {
      _iterator4.f();
    }
  }
  getKingCaptures() {
    var kingCaptures = (0,baseTypes/* createTuple */.VS)(false, GameData/* totalPlayers */.q3);
    var _iterator5 = FENData_createForOfIteratorHelper(GameData/* colors */.O9),
      _step5;
    try {
      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
        var color = _step5.value;
        var royalCoordinate = this.fenOptions.tag("royal")[color];
        if (!royalCoordinate) continue;
        var pieceString = this.board.board[royalCoordinate[0]][royalCoordinate[1]];
        if (pieceString.isEmpty() || pieceString.color !== color) {
          kingCaptures[color] = true;
        }
      }
    } catch (err) {
      _iterator5.e(err);
    } finally {
      _iterator5.f();
    }
    return kingCaptures;
  }
  processPointsForChecks(currentChecks) {
    var sideToMove = this.sideToMove;
    var updatedChecks = this.board.getCurrentChecks(),
      playerChecks = (0,baseTypes/* createTuple */.VS)(false, GameData/* totalPlayers */.q3);
    var _iterator6 = FENData_createForOfIteratorHelper(GameData/* colors */.O9),
      _step6;
    try {
      for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {
        var color = _step6.value;
        var _iterator7 = FENData_createForOfIteratorHelper(updatedChecks[color]),
          _step7;
        try {
          for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {
            var coordinate = _step7.value;
            if (!currentChecks[color].has(coordinate)) {
              playerChecks[color] = true;
              break;
            }
          }
        } catch (err) {
          _iterator7.e(err);
        } finally {
          _iterator7.f();
        }
      }
    } catch (err) {
      _iterator6.e(err);
    } finally {
      _iterator6.f();
    }
    var checkedPlayers = playerChecks.filter(Boolean).length;
    if (checkedPlayers === 2) {
      this.assignPoints(sideToMove, 1);
    } else if (checkedPlayers === 3) {
      this.assignPoints(sideToMove, 5);
    }
  }
  affectOptions(move) {
    var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (0,FENDataInterface/* createDefaultFENEffectSettings */.Yx)();
    var moveStalemates;
    var endSquare;
    var currentChecks = this.board.getCurrentChecks().map(arr => new Set(arr));
    if ((0,MoveTreeInterface/* verifyInternalMove */.LR)(move)) {
      moveStalemates = this.processInternalMove(move).stalemates;
    } else if ((0,MoveTreeInterface/* verifyStandardMove */.$j)(move)) {
      endSquare = this.processStandardMove(move).endPiece;
    } else if ((0,MoveTreeInterface/* verifyDroppingMove */.x7)(move)) {
      this.processDroppingMove(move);
    }
    if (!settings.ignoreCheckmateChecks) this.board.pregenerateAttacks();
    var _ref = settings.ignoreCheckmateChecks ? {
        checkmates: (0,baseTypes/* createTuple */.VS)(false, GameData/* totalPlayers */.q3),
        checks: (0,baseTypes/* createTuple */.VS)(false, GameData/* totalPlayers */.q3),
        stalemates: (0,baseTypes/* createTuple */.VS)(false, GameData/* totalPlayers */.q3)
      } : this.board.getCheckmatesAndStalemates(),
      checkmates = _ref.checkmates,
      stalemates = _ref.stalemates,
      checks = _ref.checks;
    if (moveStalemates) {
      for (var i = 0; i < GameData/* totalPlayers */.q3; i++) {
        if (moveStalemates[i]) {
          stalemates[i] = true;
        }
      }
    }
    var totalMateSum = checkmates.reduce((p, n) => n ? p + this.obtainPointsForMate() : p, 0);
    var boardAlternations = {
      pointDistribution: {
        checkmatePoints: checkmates.map((_, i) => i === this.sideToMove ? totalMateSum : 0),
        pieceCapturingPoints: (0,baseTypes/* createTuple */.VS)(0, GameData/* totalPlayers */.q3)
      }
    };
    if (endSquare) {
      var _iterator8 = FENData_createForOfIteratorHelper(endSquare),
        _step8;
      try {
        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {
          var piece = _step8.value;
          boardAlternations.pointDistribution.pieceCapturingPoints[this.sideToMove] = this.getPointsForPiece(piece);
        }
      } catch (err) {
        _iterator8.e(err);
      } finally {
        _iterator8.f();
      }
    }
    var kingCaptures = this.getKingCaptures();
    var dead = this.fenOptions.tag("dead"),
      resigned = this.fenOptions.tag("resigned");
    if (this.board.gameType.isFFA()) {
      var _iterator9 = FENData_createForOfIteratorHelper(GameData/* colors */.O9),
        _step9;
      try {
        for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {
          var color = _step9.value;
          if (dead[color] || resigned[color]) {
            continue;
          }
          if (checkmates[color] || color === this.sideToMove && stalemates[color]) {
            this.turnPiecesDead(color);
            continue;
          }
          this.assignPoints(color, boardAlternations.pointDistribution.checkmatePoints[color] + boardAlternations.pointDistribution.pieceCapturingPoints[color]);
        }
      } catch (err) {
        _iterator9.e(err);
      } finally {
        _iterator9.f();
      }
    } else {
      var _iterator10 = FENData_createForOfIteratorHelper(GameData/* colors */.O9),
        _step10;
      try {
        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {
          var _color = _step10.value;
          if (kingCaptures[_color]) {
            this.turnPiecesDead(_color);
            this.assignGeneralTermination("King Captured");
          }
        }
      } catch (err) {
        _iterator10.e(err);
      } finally {
        _iterator10.f();
      }
    }
    var realPlayers = this.getRealPlayers();
    var isOver = this.board.gameType.isFFA() ? realPlayers === 1 : realPlayers !== GameData/* totalPlayers */.q3;
    if (isOver) this.assignGeneralTermination("Checkmate");
    if (!settings.ignoreNextTurn && !isOver) {
      var _this$board$insuffici2;
      this.processPointsForChecks(currentChecks);
      var insufficientPieces = (_this$board$insuffici2 = this.board.insufficientMaterialChecker) === null || _this$board$insuffici2 === void 0 ? void 0 : _this$board$insuffici2.checkCurrentState(this.board);
      if (!this.gameOver && insufficientPieces !== null && insufficientPieces !== void 0 && insufficientPieces.every((insufficient, i) => dead[i] || insufficient)) {
        this.gameOver = "INSUFFICIENT MATERIAL \u2022 ".concat(this.getCurrentResult());
        this.spreadPointsBetweenPlayersEvenly();
      }
      if (this.getRealPlayers() > 1) {
        this.sideToMove = this.nextTurn();
      }
    }
    return {
      checkmates,
      stalemates,
      checks
    };
  }
  getRealPlayers() {
    var dead = this.fenOptions.tag("dead"),
      resigned = this.fenOptions.tag("resigned");
    var totalPlayers = 0;
    var _iterator11 = FENData_createForOfIteratorHelper(GameData/* colors */.O9),
      _step11;
    try {
      for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {
        var color = _step11.value;
        if (resigned[color] || dead[color]) continue;
        totalPlayers++;
      }
    } catch (err) {
      _iterator11.e(err);
    } finally {
      _iterator11.f();
    }
    return totalPlayers;
  }
  nextTurn() {
    var player = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.sideToMove;
    if (this.getRealPlayers() <= 1) throw new Error("Next turn called while the game is terminated");
    return (0,FENDataInterface/* getNeighboringSideToMove */.cq)(player, this.fenOptions.tag("dead"));
  }
  previousTurn() {
    var player = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.sideToMove;
    var dead = this.fenOptions.tag("dead");
    if (this.getRealPlayers() <= 1) throw new Error("Previous turn called while the game is terminated");
    var sideToMove = player;
    do {
      sideToMove = sideToMove === 0 ? GameData/* totalPlayers */.q3 - 1 : sideToMove - 1;
    } while (dead[sideToMove]);
    if ((0,GameUnits/* verifyNumericColor */.O3)(sideToMove)) {
      return sideToMove;
    } else throw new Error("Unexpected numeric color: ".concat(sideToMove));
  }
  isComplexEvaluation() {
    return false;
  }
  obtainPointsForMate() {
    return defaultPointsForMate;
  }
  assignPoints(sideToMove, points) {
    if (points > 0) {
      this.points[sideToMove] += points;
    }
  }
  getPointsForPiece(pieceString) {
    if (pieceString.isPiece() && this.board.gameType.isFFA()) {
      return PieceControlInterface/* pieceControlConfigSettings */.Gf[pieceString.piece].points.singlesPoints;
    } else return 0;
  }
  countTotalPointsOnBoard() {
    var royal = this.fenOptions.tag("royal"),
      resigned = this.fenOptions.tag("resigned"),
      zombieImmune = this.fenOptions.tag("zombieImmune");
    var resultingPoints = [0, 0, 0, 0];
    this.board.getPlayerPieces().forEach((army, color) => {
      if (zombieImmune[color]) return;
      var royalPiece = royal[color];
      var _iterator12 = FENData_createForOfIteratorHelper(army),
        _step12;
      try {
        for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {
          var coordinate = _step12.value;
          if (royalPiece && (0,BoardInterface/* compareCoordinates */.ef)(coordinate, royalPiece)) {
            resultingPoints[color] += this.obtainPointsForMate();
          } else if (resigned[color]) {
            var piece = this.board.board[coordinate[0]][coordinate[1]].piece;
            resultingPoints[color] += PieceControlInterface/* pieceControlConfigSettings */.Gf[piece].points.singlesPoints;
          }
        }
      } catch (err) {
        _iterator12.e(err);
      } finally {
        _iterator12.f();
      }
    });
    return resultingPoints;
  }
  getCurrentResult() {
    if (this.board.gameType.isFFA()) {
      var dead = this.fenOptions.tag("dead"),
        resigned = this.fenOptions.tag("resigned");
      if (!this.board.isTwoPlayer) throw new Error("Result can only get called for 2P and teams");
      var max = Math.max(...this.points);
      var firstAlivePlayer, maximumIndex;
      var _iterator13 = FENData_createForOfIteratorHelper(GameData/* colors */.O9),
        _step13;
      try {
        for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {
          var color = _step13.value;
          if (dead[color] || resigned[color]) continue;
          if (this.points[color] === max) {
            if (maximumIndex === undefined) {
              maximumIndex = color;
            } else return "½-½";
          }
          if (firstAlivePlayer === undefined) firstAlivePlayer = color;
        }
      } catch (err) {
        _iterator13.e(err);
      } finally {
        _iterator13.f();
      }
      return firstAlivePlayer === maximumIndex ? "1-0" : "0-1";
    } else {
      var result = "½-½";
      var _iterator14 = FENData_createForOfIteratorHelper(GameData/* colors */.O9),
        _step14;
      try {
        for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {
          var _color2 = _step14.value;
          if (this.points[_color2] > 0) {
            result = this.board.gameType.teamSettings.firstTeamColors[_color2] ? "1-0" : "0-1";
            break;
          }
        }
      } catch (err) {
        _iterator14.e(err);
      } finally {
        _iterator14.f();
      }
      return result;
    }
  }
  assignGeneralTermination(generalTermination, sideToMove) {
    if (this.board.gameType.isFFA() && !this.board.isTwoPlayer) {
      if (sideToMove !== undefined) {
        switch (generalTermination) {
          case "Stalemate":
            this.gameOver = "".concat((0,GameData/* getPlayerNameFromColor */.oh)(sideToMove).toUpperCase(), " STALEMATED!");
            return;
        }
      }
      if ((0,GameData/* verifyWinningTermination */.Ce)(generalTermination)) {
        this.gameOver = "".concat(generalTermination.toUpperCase(), "!");
      } else if ((0,GameData/* verifyDrawingTermination */.WF)(generalTermination)) {
        this.gameOver = "".concat(generalTermination.toUpperCase());
      } else {
        (0,baseTypes/* throwOnNever */.h0)(generalTermination);
      }
    } else {
      this.gameOver = "".concat(generalTermination.toUpperCase(), " \u2022 ").concat(this.getCurrentResult());
    }
  }
}


/***/ }),

/***/ 52463:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "P8": () => (/* binding */ createDefaultArmyDeathSettings),
/* harmony export */   "Yx": () => (/* binding */ createDefaultFENEffectSettings),
/* harmony export */   "cq": () => (/* binding */ getNeighboringSideToMove)
/* harmony export */ });
/* harmony import */ var _moveGeneration_GameInformation_GameUnits_GameUnits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9960);
/* harmony import */ var _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(76758);


var createDefaultFENEffectSettings = () => ({
  ignoreCheckmateChecks: false,
  ignoreNextTurn: false
});
var createDefaultArmyDeathSettings = () => ({
  excludeRoyals: false,
  onlyPawns: false,
  doNotSetDead: false
});
function getNeighboringSideToMove(player, dead) {
  var sideToMove = player;
  do {
    sideToMove = sideToMove === _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_1__/* .totalPlayers */ .q3 - 1 ? 0 : sideToMove + 1;
  } while (dead[sideToMove]);
  if ((0,_moveGeneration_GameInformation_GameUnits_GameUnits__WEBPACK_IMPORTED_MODULE_0__/* .verifyNumericColor */ .O3)(sideToMove)) {
    return sideToMove;
  } else throw new Error("Unexpected numeric color: ".concat(sideToMove));
}

/***/ }),

/***/ 54434:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "fL": () => (/* binding */ createFENOptionsTags),
  "rE": () => (/* binding */ createFENOptionsTagsSnapshot),
  "bv": () => (/* binding */ verifyDynamicFENOptionKey)
});

// UNUSED EXPORTS: verifyDynamicTag

// EXTERNAL MODULE: ./src/main/client/ts/baseTypes.ts
var baseTypes = __webpack_require__(18027);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/GameInformation/GameData.ts
var GameData = __webpack_require__(76758);
// EXTERNAL MODULE: ./src/main/client/ts/utils/ArrayUtils.ts
var ArrayUtils = __webpack_require__(34092);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/Board/BoardInterface.ts
var BoardInterface = __webpack_require__(29939);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/GameInformation/GameUnits/GameUnits.ts
var GameUnits = __webpack_require__(9960);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/GameInformation/GameUnits/PieceString.ts
var PieceString = __webpack_require__(20915);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/PieceControl/PieceControlInterface.ts
var PieceControlInterface = __webpack_require__(16703);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardVariantModules/EngineMoveGeneration/BotInterface.ts
var BotInterface = __webpack_require__(69283);
// EXTERNAL MODULE: ./src/main/client/ts/logic/utils/Tags/Moves/ParsePGNMoves.ts
var ParsePGNMoves = __webpack_require__(55771);
// EXTERNAL MODULE: ./src/main/client/ts/logic/utils/Tags/Utils.ts
var Utils = __webpack_require__(37842);
// EXTERNAL MODULE: ./src/main/client/ts/utils/ObjectUtils.ts
var ObjectUtils = __webpack_require__(35637);
;// CONCATENATED MODULE: ./src/main/client/ts/logic/movegen/FENData/FENOptions/FENOptionsTags.ts
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }











var verifyParameterType = (param, type) => {
  return Array.isArray(param) && (0,baseTypes/* verifyTupleType */.CG)(param, GameData/* totalPlayers */.q3) && param.every(v => typeof v === type);
};
function createBooleanTupleTag(parameters) {
  var defaultValue = parameters.defaultValue,
    key = parameters.key,
    isStatic = parameters.isStatic;
  var resultingObject = {
    value: [...defaultValue],
    parse(value) {
      if (verifyParameterType(value, "boolean")) {
        return value;
      } else return this.createSnapshot();
    },
    serialize() {
      if (key === "castleKingside" || key === "castleQueenside" || key === "dead" || key === "areBanksEnabled") return;
      if (!(0,ArrayUtils/* compareArrays */.Rt)(this.value, defaultValue)) {
        return "'".concat(key, "':(").concat(this.value.join(","), ")");
      } else return;
    },
    createSnapshot() {
      return [...this.value];
    },
    loadSnapshot(snapshot) {
      var tuple = [...snapshot];
      this.value = tuple;
    }
  };
  if (isStatic) delete resultingObject.loadSnapshot;
  return resultingObject;
}
var defaultPawnBaseRank = 2;
var createPawnBaseRankTag = () => ({
  value: defaultPawnBaseRank,
  parse(value) {
    return typeof value === "number" && value > 0 && value <= GameData/* boardDimension */.iJ ? value : this.value;
  },
  serialize() {
    return this.value === defaultPawnBaseRank ? undefined : "'pawnBaseRank':".concat(this.value);
  },
  createSnapshot() {
    return this.value;
  }
});
var createEnPassantTag = () => ({
  value: (0,baseTypes/* createTuple */.VS)(null, GameData/* totalPlayers */.q3),
  parse(input) {
    if (verifyParameterType(input, "string")) {
      return input.map(v => {
        var _parseEnPassantCoordi;
        return (_parseEnPassantCoordi = (0,Utils/* parseEnPassantCoordinates */.Lx)(v)) !== null && _parseEnPassantCoordi !== void 0 ? _parseEnPassantCoordi : null;
      });
    } else return this.createSnapshot();
  },
  serialize() {
    if (this.value.some(v => !v)) {
      return "'enPassant':(".concat(this.value.map(enP => enP ? "'".concat((0,GameData/* convertCoordinateToPGN4 */.kZ)(enP[0]), ":").concat((0,GameData/* convertCoordinateToPGN4 */.kZ)(enP[1]), "'") : "''").join(","), ")");
    } else return;
  },
  createSnapshot() {
    return this.value.map(enP => enP ? [[...enP[0]], [...enP[1]]] : enP);
  },
  loadSnapshot(snapshot) {
    this.value = snapshot.map(enP => enP ? [[...enP[0]], [...enP[1]]] : enP);
  }
});
var defaultCastleWith = "R";
var createCastleWithTag = () => ({
  value: defaultCastleWith,
  parse(input) {
    return typeof input === "string" ? input : this.value;
  },
  serialize() {
    return this.value === defaultCastleWith ? undefined : "'castleWith':".concat(this.value);
  },
  createSnapshot() {
    return this.value;
  }
});
var defaultBoxOffset = 0;
var createBoxOffsetTag = () => ({
  value: defaultBoxOffset,
  parse(input) {
    return typeof input === "number" && (0,GameUnits/* verifyNumericColor */.O3)(input) ? input : this.value;
  },
  serialize() {
    return this.value === defaultBoxOffset ? undefined : "'boxOffset':".concat(this.value);
  },
  createSnapshot() {
    return this.value;
  }
});
function createBooleanTag(parameters) {
  var defaultValue = parameters.defaultValue,
    key = parameters.key,
    isStatic = parameters.isStatic;
  var result = {
    value: defaultValue,
    parse(input) {
      return typeof input === "boolean" ? input : this.createSnapshot();
    },
    serialize() {
      return this.value === defaultValue ? undefined : "'".concat(key, "':").concat(String(this.value));
    },
    createSnapshot() {
      return this.value;
    },
    loadSnapshot(snapshot) {
      this.value = snapshot;
    }
  };
  if (isStatic) delete result.loadSnapshot;
  return result;
}
var defaultDimension = [14, 14];
var createDimensionTag = () => ({
  value: [...defaultDimension],
  parse(baseInput) {
    if (typeof baseInput !== "string") return this.createSnapshot();
    var input = baseInput.split("x");
    return Array.isArray(input) && (0,baseTypes/* verifyTupleType */.CG)(input, 2) && input.every(i => {
      var v = Number(i);
      return !isNaN(v) && v >= 2 && v <= 14 && v % 2 === 0;
    }) ? input.map(v => Number(v)).reverse() : this.createSnapshot();
  },
  serialize() {
    if ((0,ArrayUtils/* compareArrays */.Rt)(this.value, defaultDimension)) return;
    return "'dim':'".concat(this.value.join("x"), "'");
  },
  createSnapshot() {
    return [...this.value];
  }
});
var defaultZombies = (0,baseTypes/* createTuple */.VS)(BotInterface.ZombieType.Rando, GameData/* totalPlayers */.q3);
var createZombiesTag = () => ({
  value: [...defaultZombies],
  parse(input) {
    if (Array.isArray(input) && (0,baseTypes/* verifyTupleType */.CG)(input, GameData/* totalPlayers */.q3) && input.every(v => typeof v === "string")) {
      var newZombies = this.createSnapshot();
      var _iterator = _createForOfIteratorHelper(GameData/* colors */.O9),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var color = _step.value;
          var zombieType = input[color];
          if ((0,BotInterface.verifyZombieType)(zombieType)) newZombies[color] = zombieType;
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      return newZombies;
    } else return this.createSnapshot();
  },
  serialize() {
    if ((0,ArrayUtils/* compareArrays */.Rt)(this.value, defaultZombies)) return;
    return "'zombieType':(".concat(this.value.map((t, i) => t === defaultZombies[i] ? "''" : "'".concat(t, "'")).join(","), ")");
  },
  createSnapshot() {
    return [...this.value];
  }
});
var createRoyalTag = () => ({
  value: (0,baseTypes/* createTuple */.VS)(null, GameData/* totalPlayers */.q3),
  parse(input) {
    if (verifyParameterType(input, "string")) {
      return input.map(c => {
        var _parseSingleCoordinat;
        return (_parseSingleCoordinat = (0,Utils/* parseSingleCoordinate */._q)(c)) !== null && _parseSingleCoordinat !== void 0 ? _parseSingleCoordinat : null;
      });
    } else return this.createSnapshot();
  },
  serialize() {
    return "'royal':(".concat(this.value.map(r => r ? "'".concat((0,GameData/* convertCoordinateToPGN4 */.kZ)(r), "'") : "''").join(","), ")");
  },
  createSnapshot() {
    return this.value.map(c => c ? [...c] : c);
  },
  loadSnapshot(snapshot) {
    this.value = snapshot.map(c => c ? [...c] : c);
  }
});
var createLivesTag = () => ({
  value: (0,baseTypes/* createTuple */.VS)(null, GameData/* totalPlayers */.q3),
  parse(input) {
    if (verifyParameterType(input, "number")) {
      return input;
    } else return this.createSnapshot();
  },
  serialize() {
    if (this.value.some(v => v !== null)) {
      return "'lives':(".concat(this.value.map(l => l ? String(l) : "1").join(","), ")");
    } else return;
  },
  createSnapshot() {
    return [...this.value];
  },
  loadSnapshot(snapshot) {
    this.value = [...snapshot];
  }
});
var createBankTag = () => ({
  value: (0,baseTypes/* createTupleFromCallback */.fi)(() => new Map(), GameData/* totalPlayers */.q3),
  parse(input) {
    var defaultBanks = (0,baseTypes/* createTupleFromCallback */.fi)(() => new Map(), GameData/* totalPlayers */.q3);
    if (verifyParameterType(input, "string")) {
      var _iterator2 = _createForOfIteratorHelper(GameData/* colors */.O9),
        _step2;
      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var color = _step2.value;
          var _iterator3 = _createForOfIteratorHelper(input[color].split(",")),
            _step3;
          try {
            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
              var pieceDefinition = _step3.value;
              var _pieceDefinition$spli = pieceDefinition.split("x").map((e, i) => i === 1 ? Number(e) : e),
                _pieceDefinition$spli2 = _slicedToArray(_pieceDefinition$spli, 2),
                piece = _pieceDefinition$spli2[0],
                _pieceDefinition$spli3 = _pieceDefinition$spli2[1],
                count = _pieceDefinition$spli3 === void 0 ? 1 : _pieceDefinition$spli3;
              if (typeof piece !== "string" || typeof count !== "number") continue;
              if (!/^(?:r|b|y|g).$/.test(piece)) continue;
              var pieceLetter = piece.charAt(1);
              if ((0,PieceControlInterface/* verifyPieceLetter */.IM)(pieceLetter)) {
                defaultBanks[color].set((0,PieceString/* createPieceFromString */.m9)(piece), count);
              }
            }
          } catch (err) {
            _iterator3.e(err);
          } finally {
            _iterator3.f();
          }
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
    }
    return defaultBanks;
  },
  serialize() {
    if (this.value.some(b => b.size !== 0)) {
      return "'bank':(".concat(this.value.map(bank => {
        var resultingStrings = [];
        var _iterator4 = _createForOfIteratorHelper(bank),
          _step4;
        try {
          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
            var _step4$value = _slicedToArray(_step4.value, 2),
              piece = _step4$value[0],
              count = _step4$value[1];
            if (count === 1) {
              resultingStrings.push(piece.value);
            } else {
              resultingStrings.push("".concat(piece.value, "x").concat(count));
            }
          }
        } catch (err) {
          _iterator4.e(err);
        } finally {
          _iterator4.f();
        }
        return "'".concat(resultingStrings.join(","), "'");
      }).join(","), ")");
    } else return;
  },
  createSnapshot() {
    return this.value.map(m => [...m.entries()].map(_ref => {
      var _ref2 = _slicedToArray(_ref, 2),
        pieceString = _ref2[0],
        count = _ref2[1];
      return [pieceString.toObject(), count];
    }));
  },
  loadSnapshot(snapshot) {
    this.value = snapshot.map(v => new Map(v.map(_ref3 => {
      var _ref4 = _slicedToArray(_ref3, 2),
        pieceStringObject = _ref4[0],
        count = _ref4[1];
      return [PieceString/* PieceString.fromObjectToClass */.Ff.fromObjectToClass(pieceStringObject), count];
    })));
  }
});
var createPromotedFromTag = () => ({
  value: new Map(),
  parse(input) {
    var promotedFromMap = new Map();
    if (!(0,ObjectUtils/* verifyObjectType */.T9)(input)) return promotedFromMap;
    for (var key in input) {
      if (!Object.prototype.hasOwnProperty.call(promotedFromMap, key)) continue;
      var parsedCoordinate = (0,Utils/* parseSingleCoordinate */._q)(key);
      var pieceLetter = input[key];
      if (!parsedCoordinate || typeof pieceLetter !== "string" || !(0,PieceControlInterface/* verifyPieceLetter */.IM)(pieceLetter)) continue;
      promotedFromMap.set(parsedCoordinate, pieceLetter);
    }
    return promotedFromMap;
  },
  serialize() {
    if (this.value.size === 0) return;
    var promotedFromStrings = [];
    var _iterator5 = _createForOfIteratorHelper(this.value),
      _step5;
    try {
      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
        var _step5$value = _slicedToArray(_step5.value, 2),
          coordinate = _step5$value[0],
          piece = _step5$value[1];
        promotedFromStrings.push("'".concat((0,GameData/* convertCoordinateToPGN4 */.kZ)(coordinate), "':'").concat(piece, "'"));
      }
    } catch (err) {
      _iterator5.e(err);
    } finally {
      _iterator5.f();
    }
    return "'promotedFrom':{".concat(promotedFromStrings.join(","), "}");
  },
  createSnapshot() {
    var newMap = [];
    var _iterator6 = _createForOfIteratorHelper(this.value.entries()),
      _step6;
    try {
      for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {
        var _step6$value = _slicedToArray(_step6.value, 2),
          coordinate = _step6$value[0],
          pieceLetter = _step6$value[1];
        newMap.push([[...coordinate], pieceLetter]);
      }
    } catch (err) {
      _iterator6.e(err);
    } finally {
      _iterator6.f();
    }
    return newMap;
  },
  loadSnapshot(snapshot) {
    this.value.clear();
    var _iterator7 = _createForOfIteratorHelper(snapshot),
      _step7;
    try {
      for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {
        var _step7$value = _slicedToArray(_step7.value, 2),
          coordinate = _step7$value[0],
          pieceLetter = _step7$value[1];
        this.value.set([...coordinate], pieceLetter);
      }
    } catch (err) {
      _iterator7.e(err);
    } finally {
      _iterator7.f();
    }
  }
});
var createSetupPointsTag = () => ({
  value: null,
  parse(input) {
    if (verifyParameterType(input, "number")) {
      return input;
    } else return this.createSnapshot();
  },
  serialize() {
    if (this.value) {
      return "'setupPoints':(".concat(this.value.join(","), ")");
    } else return;
  },
  createSnapshot() {
    return this.value ? [...this.value] : this.value;
  },
  loadSnapshot(snapshot) {
    this.value = snapshot ? [...snapshot] : snapshot;
  }
});
var createSeirawanDropsTag = () => ({
  value: (0,baseTypes/* createTupleFromCallback */.fi)(() => new Set(), GameData/* totalPlayers */.q3),
  parse(input) {
    var defaultValue = (0,baseTypes/* createTupleFromCallback */.fi)(() => new Set(), GameData/* totalPlayers */.q3);
    if (Array.isArray(input) && ((0,baseTypes/* verifyTupleType */.CG)(input, GameData/* totalPlayers */.q3) || (0,baseTypes/* verifyTupleType */.CG)(input, GameData/* totalPlayers */.q3 + 1)) && input.every(v => Array.isArray(v))) {
      var _iterator8 = _createForOfIteratorHelper(GameData/* colors */.O9),
        _step8;
      try {
        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {
          var color = _step8.value;
          var seirawanDropsArray = input[color];
          if (!seirawanDropsArray.every(v => typeof v === "string")) continue;
          var _iterator9 = _createForOfIteratorHelper(seirawanDropsArray),
            _step9;
          try {
            for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {
              var pieceDefinition = _step9.value;
              if (!ParsePGNMoves/* PGN4_SYNTAX.COORDINATE_REGEX.test */.T.COORDINATE_REGEX.test(pieceDefinition)) continue;
              var coordinate = (0,Utils/* parseSingleCoordinate */._q)(pieceDefinition);
              if (coordinate) {
                defaultValue[color].add((0,BoardInterface/* stringifyCoordinate */.Kv)(coordinate));
              }
            }
          } catch (err) {
            _iterator9.e(err);
          } finally {
            _iterator9.f();
          }
        }
      } catch (err) {
        _iterator8.e(err);
      } finally {
        _iterator8.f();
      }
    }
    return defaultValue;
  },
  serialize() {
    if (this.value.every(m => m.size === 0)) return;
    return "'seirawanDrops':(".concat(this.value.map(coordinates => {
      return "(".concat([...coordinates].map(coord => "'".concat((0,GameData/* convertCoordinateToPGN4 */.kZ)((0,BoardInterface/* unstringifyCoordinate */.Xm)(coord)), "'")).join(","), ")");
    }).join(","), ")");
  },
  createSnapshot() {
    return this.value.map(s => [...s.values()]);
  },
  loadSnapshot(snapshot) {
    this.value = snapshot.map(s => new Set(s));
  }
});
;// CONCATENATED MODULE: ./src/main/client/ts/logic/movegen/FENData/FENOptions/FENOptionsTagsInterface.ts



var verifyDynamicFENOptionKey = (fenTag, key) => "loadSnapshot" in fenTag;
var verifyDynamicTag = fenTag => "loadSnapshot" in fenTag;
function createFENOptionsTags() {
  return {
    dead: createBooleanTupleTag({
      key: "dead",
      defaultValue: (0,baseTypes/* createTuple */.VS)(false, GameData/* totalPlayers */.q3),
      isStatic: false
    }),
    resigned: createBooleanTupleTag({
      key: "resigned",
      defaultValue: (0,baseTypes/* createTuple */.VS)(false, GameData/* totalPlayers */.q3),
      isStatic: false
    }),
    pawnBaseRank: createPawnBaseRankTag(),
    enPassant: createEnPassantTag(),
    boxOffset: createBoxOffsetTag(),
    wb: createBooleanTag({
      key: "wb",
      defaultValue: false,
      isStatic: true
    }),
    dim: createDimensionTag(),
    noCorners: createBooleanTag({
      key: "noCorners",
      defaultValue: false,
      isStatic: true
    }),
    castleKingside: createBooleanTupleTag({
      key: "castleKingside",
      defaultValue: (0,baseTypes/* createTuple */.VS)(true, GameData/* totalPlayers */.q3),
      isStatic: false
    }),
    castleQueenside: createBooleanTupleTag({
      key: "castleQueenside",
      defaultValue: (0,baseTypes/* createTuple */.VS)(true, GameData/* totalPlayers */.q3),
      isStatic: false
    }),
    castleWith: createCastleWithTag(),
    zombieType: createZombiesTag(),
    zombieImmune: createBooleanTupleTag({
      key: "zombieImmune",
      defaultValue: (0,baseTypes/* createTuple */.VS)(false, GameData/* totalPlayers */.q3),
      isStatic: false
    }),
    royal: createRoyalTag(),
    lives: createLivesTag(),
    bank: createBankTag(),
    promotedFrom: createPromotedFromTag(),
    setupPoints: createSetupPointsTag(),
    setupComplete: createBooleanTupleTag({
      key: "setupComplete",
      defaultValue: (0,baseTypes/* createTuple */.VS)(true, GameData/* totalPlayers */.q3),
      isStatic: false
    }),
    seirawanDrops: createSeirawanDropsTag(),
    areBanksEnabled: createBooleanTupleTag({
      key: "areBanksEnabled",
      defaultValue: (0,baseTypes/* createTuple */.VS)(false, GameData/* totalPlayers */.q3),
      isStatic: false
    })
  };
}
function createFENOptionsTagsSnapshot(tags) {
  var resultingTags = {};
  var fenTag;
  for (fenTag in tags) {
    if (!Object.prototype.hasOwnProperty.call(tags, fenTag)) continue;
    var tag = tags[fenTag];
    if (!verifyDynamicFENOptionKey(tag, fenTag) || !verifyDynamicTag(tag)) continue;
    resultingTags[fenTag] = tag.createSnapshot();
  }
  return resultingTags;
}

/***/ }),

/***/ 76758:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "By": () => (/* binding */ convertCoordinateToPGN4Array),
/* harmony export */   "Ce": () => (/* binding */ verifyWinningTermination),
/* harmony export */   "Iu": () => (/* binding */ stringifyTimeControl),
/* harmony export */   "Jy": () => (/* binding */ VariantType),
/* harmony export */   "O9": () => (/* binding */ colors),
/* harmony export */   "Q3": () => (/* binding */ playerNames),
/* harmony export */   "QH": () => (/* binding */ validateComprehensiveUnionArray),
/* harmony export */   "R4": () => (/* binding */ getOppositePlacedColor),
/* harmony export */   "WF": () => (/* binding */ verifyDrawingTermination),
/* harmony export */   "YG": () => (/* binding */ obtainTimeControlType),
/* harmony export */   "_U": () => (/* binding */ TimeControlType),
/* harmony export */   "iJ": () => (/* binding */ boardDimension),
/* harmony export */   "kZ": () => (/* binding */ convertCoordinateToPGN4),
/* harmony export */   "oh": () => (/* binding */ getPlayerNameFromColor),
/* harmony export */   "q3": () => (/* binding */ totalPlayers),
/* harmony export */   "wH": () => (/* binding */ validateTerminationString)
/* harmony export */ });
/* unused harmony export createDefaultNumericColorAdjustment */
/* harmony import */ var _client_ts_baseTypes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(18027);
/* harmony import */ var _utils_NumberUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(35948);


var validateComprehensiveUnionArray = () => arr => arr;
var playerNames = validateComprehensiveUnionArray()(["Red", "Blue", "Yellow", "Green", "White", "Black"]);
var individualTerminations = validateComprehensiveUnionArray()(["Won the Race", "Checkmated", "Stalemated", "Forfeits on Time", "Claimed the Win", "Resigned"]);
var generalWinningTerminations = validateComprehensiveUnionArray()(["Checkmate", "King Captured", "King of the Hill", "Stalemate"]);
var verifyWinningTermination = termination => {
  var generalWins = generalWinningTerminations;
  return generalWins.includes(termination);
};
var generalDrawingTerminations = validateComprehensiveUnionArray()(["50-move Rule", "Insufficient Material", "Threefold Repetition", "Timeout vs Insufficient Material"]);
var verifyDrawingTermination = termination => {
  var generalDraws = generalDrawingTerminations;
  return generalDraws.includes(termination);
};
var generalTerminations = validateComprehensiveUnionArray()([...generalWinningTerminations, ...generalDrawingTerminations]);
var results = validateComprehensiveUnionArray()(["0-1", "1-0", "½-½"]);
var validateTerminationString = termination => {
  var capitalizedTermination = termination.toUpperCase();
  if (playerNames.some(str => capitalizedTermination.startsWith(str.toUpperCase())) && individualTerminations.some(str => capitalizedTermination.endsWith(str.toUpperCase() + "!"))) {
    return true;
  } else if (/.*?\s•\s.*/.test(capitalizedTermination) && generalTerminations.some(str => capitalizedTermination.startsWith(str.toUpperCase())) && results.some(str => capitalizedTermination.endsWith(str.toUpperCase()))) {
    return true;
  } else if (capitalizedTermination === "½-½ AGREED.") {
    return true;
  }
  return false;
};
var stringifyTimeControl = timeControl => {
  var noIncrement = timeControl.increment === 0;
  var timeControlString = "";
  if (timeControl.baseTime < 60) {
    timeControlString += noIncrement ? "".concat(timeControl.baseTime * 60, " sec") : "".concat(timeControl.baseTime * 60, "s");
  } else if (timeControl.baseTime > 60 && noIncrement) {
    timeControlString += "".concat((0,_utils_NumberUtils__WEBPACK_IMPORTED_MODULE_0__/* .truncateNumber */ .O)(timeControl.baseTime / 60, 1), " min");
  } else {
    timeControlString += (0,_utils_NumberUtils__WEBPACK_IMPORTED_MODULE_0__/* .truncateNumber */ .O)(timeControl.baseTime / 60, 1);
  }
  if (!noIncrement) {
    timeControlString += "|";
    timeControlString += timeControl.increment;
  }
  if (timeControl.isDelay) {
    timeControlString += "D";
  }
  return timeControlString;
};
var obtainTimeControlType = timeControl => {
  var baseTime = timeControl.baseTime,
    increment = timeControl.increment,
    isDelay = timeControl.isDelay;
  if (isDelay) {
    var formula = baseTime / 40 + increment;
    if (formula > 11.5) {
      return TimeControlType.Rapid;
    } else if (formula <= 1.375) {
      return TimeControlType.Hyperbullet;
    } else if (formula <= 4.5) {
      return TimeControlType.Bullet;
    } else {
      return TimeControlType.Blitz;
    }
  } else {
    var _formula = baseTime / 60 + increment;
    if (_formula > 7.5) {
      return TimeControlType.Rapid;
    } else if (_formula <= 0.5) {
      return TimeControlType.Hyperbullet;
    } else if (_formula <= 3) {
      return TimeControlType.Bullet;
    } else {
      return TimeControlType.Blitz;
    }
  }
};
var convertCoordinateToPGN4 = function convertCoordinateToPGN4(coordinate) {
  var dimension = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : boardDimension;
  if (dimension === boardDimension) {
    return "".concat(String.fromCharCode(coordinate[1] + 97)).concat(boardDimension - coordinate[0]);
  } else {
    var alternation = (boardDimension - dimension) / 2;
    return "".concat(String.fromCharCode(coordinate[1] - alternation + 97)).concat(boardDimension - coordinate[0] - alternation);
  }
};
var convertCoordinateToPGN4Array = function convertCoordinateToPGN4Array(coordinate) {
  var dimension = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : boardDimension;
  if (dimension === boardDimension) {
    return [String.fromCharCode(coordinate[1] + 97), boardDimension - coordinate[0]];
  } else {
    var alternation = (boardDimension - dimension) / 2;
    return [String.fromCharCode(coordinate[1] - alternation + 97), boardDimension - coordinate[0] - alternation];
  }
};
var getOppositePlacedColor = color => {
  switch (color) {
    case 0:
      return 2;
    case 1:
      return 3;
    case 2:
      return 0;
    case 3:
      return 1;
    default:
      return (0,_client_ts_baseTypes__WEBPACK_IMPORTED_MODULE_1__/* .throwOnNever */ .h0)(color);
  }
};
var getPlayerNameFromColor = function getPlayerNameFromColor(color) {
  var wb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  switch (color) {
    case 0:
      return wb ? "White" : "Red";
    case 1:
      return "Blue";
    case 2:
      return wb ? "Black" : "Yellow";
    case 3:
      return "Green";
    default:
      return (0,_client_ts_baseTypes__WEBPACK_IMPORTED_MODULE_1__/* .throwOnNever */ .h0)(color);
  }
};
var createDefaultNumericColorAdjustment = () => ({
  wb: false
});
var TimeControlType = /*#__PURE__*/function (TimeControlType) {
  TimeControlType["Hyperbullet"] = "Hyperbullet";
  TimeControlType["Bullet"] = "Bullet";
  TimeControlType["Blitz"] = "Blitz";
  TimeControlType["Rapid"] = "Rapid";
  return TimeControlType;
}({});
var VariantType = /*#__PURE__*/function (VariantType) {
  VariantType["FFA"] = "FFA";
  VariantType["Teams"] = "Teams";
  VariantType["Solo"] = "Solo";
  return VariantType;
}({});
var totalPlayers = 4;
var boardDimension = 14;
var colors = [0, 1, 2, 3];

/***/ }),

/***/ 9960:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "JF": () => (/* binding */ colorEnum),
/* harmony export */   "KR": () => (/* binding */ nonPlayablePieces),
/* harmony export */   "O3": () => (/* binding */ verifyNumericColor),
/* harmony export */   "OT": () => (/* binding */ verifyColorEnumValue),
/* harmony export */   "Od": () => (/* binding */ stringColorEnum)
/* harmony export */ });
/* unused harmony exports playerEnum, verifyPlayerEnumValue */
var verifyNumericColor = num => num >= 0 && num < 4;
var nonPlayablePieces = {
  wall: "X",
  transparentWall: "x",
  duck: "Θ"
};
var colorEnum = {
  r: 0,
  b: 1,
  y: 2,
  g: 3
};
var verifyColorEnumValue = value => value in colorEnum;
var playerEnum = {
  Red: 0,
  Blue: 1,
  Yellow: 2,
  Green: 3,
  White: 0,
  Black: 2
};
var verifyPlayerEnumValue = player => player in playerEnum;
var stringColorEnum = {
  [0]: "r",
  [1]: "b",
  [2]: "y",
  [3]: "g",
  [4]: "d"
};

/***/ }),

/***/ 20915:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Fb": () => (/* binding */ pawnPieceString),
/* harmony export */   "Ff": () => (/* binding */ PieceString),
/* harmony export */   "HC": () => (/* binding */ createPieceFromData),
/* harmony export */   "Ir": () => (/* binding */ deadColorIndex),
/* harmony export */   "St": () => (/* binding */ duckPieceString),
/* harmony export */   "cG": () => (/* binding */ wallPieceString),
/* harmony export */   "m9": () => (/* binding */ createPieceFromString),
/* harmony export */   "v2": () => (/* binding */ emptyPieceString)
/* harmony export */ });
/* harmony import */ var _moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16703);
/* harmony import */ var _GameUnits__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(9960);
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }


var deadColorIndex = 4;
class PieceString {
  static comparePieceStrings(pieceString1, pieceString2) {
    return pieceString1._piece === pieceString2._piece && pieceString1._color === pieceString2._color;
  }
  static comparePieceStringObjects(pieceString1, pieceString2) {
    return pieceString1._piece === pieceString2._piece && pieceString1._color === pieceString2._color;
  }
  static fromObjectToClass(object) {
    return new PieceString(object._color, object._piece);
  }
  constructor(_color, _piece) {
    _defineProperty(this, "value", void 0);
    this._color = _color;
    this._piece = _piece;
    this.value = _piece.length ? /[xXΘ]/.test(_piece) ? _piece : _GameUnits__WEBPACK_IMPORTED_MODULE_1__/* .stringColorEnum */ .Od[_color] + _piece : "";
  }
  isDead() {
    return this._color === deadColorIndex && !this.isWall();
  }
  isEmpty() {
    return this._piece.length === 0;
  }
  isWall() {
    return this.value.length === 1;
  }
  isPiece() {
    return this.value.length === 2 && this._color !== deadColorIndex;
  }
  get piece() {
    if (this.isEmpty()) throw new TypeError("Accessing a piece string piece value while the piece string is empty.");
    return this._piece;
  }
  get color() {
    if (this.isEmpty()) throw new TypeError("Accessing a piece string color value while the piece string is empty.");
    return this._color;
  }
  getStringifiedColor() {
    return this.value.charAt(0);
  }
  toObject() {
    return {
      _piece: this._piece,
      _color: this._color,
      value: this.value
    };
  }
}
var createPieceFromData = (color, piece) => {
  if ((0,_moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_0__/* .verifyPieceLetter */ .IM)(piece)) {
    return new PieceString(color, piece);
  }
  throw new Error("Wrong color signature for the piece provided");
};
var createPieceFromString = piece => {
  var verifyColorEnum = p => p in _GameUnits__WEBPACK_IMPORTED_MODULE_1__/* .colorEnum */ .JF;
  if (piece.length === 1 && (0,_moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_0__/* .verifyPieceLetter */ .IM)(piece)) {
    return new PieceString(deadColorIndex, piece);
  } else {
    var color = piece.charAt(0);
    var pieceLetter = piece.charAt(1);
    if (!(0,_moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_0__/* .verifyPieceLetter */ .IM)(pieceLetter)) throw new Error("Wrong signature for the piece provided");
    if (color === "d") {
      return new PieceString(deadColorIndex, pieceLetter);
    } else {
      if (verifyColorEnum(color)) {
        return new PieceString(_GameUnits__WEBPACK_IMPORTED_MODULE_1__/* .colorEnum */ .JF[color], pieceLetter);
      } else throw new Error("Wrong color signature for the piece provided");
    }
  }
};
var testEmptyPieceString = new PieceString(0, _moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_0__/* .emptyLetter */ .md);
if (!testEmptyPieceString.isEmpty()) throw new Error("Empty piece string is not isEmpty");
var emptyPieceString = testEmptyPieceString;
var testWallPieceString = new PieceString(deadColorIndex, _moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_0__/* .wallPieceLetter */ .W2);
if (!testWallPieceString.isWall()) throw new Error("Wall piece string is not isWall");
var wallPieceString = testWallPieceString;
var testActivePieceString = new PieceString(0, _moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_0__/* .pawnPieceLetter */ .lH);
if (!testActivePieceString.isPiece()) throw new Error("Active piece string is not isActive");
var pawnPieceString = testActivePieceString;
var testDuckPieceString = new PieceString(deadColorIndex, _moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_0__/* .duckLetter */ .KN);
if (!testDuckPieceString.isWall()) throw new Error("Wall piece string is not isWall");
var duckPieceString = testActivePieceString;

/***/ }),

/***/ 99234:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "RR": () => (/* binding */ assertValidMove),
  "g7": () => (/* binding */ createMoveTree),
  "xn": () => (/* binding */ verifyValidMove)
});

// UNUSED EXPORTS: alterCurrentPath

// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/MoveTree/MoveTreeInterface.ts
var MoveTreeInterface = __webpack_require__(37017);
// EXTERNAL MODULE: ./src/main/client/ts/baseTypes.ts
var baseTypes = __webpack_require__(18027);
// EXTERNAL MODULE: ./src/main/client/ts/utils/ArrayUtils.ts
var ArrayUtils = __webpack_require__(34092);
// EXTERNAL MODULE: ./src/main/client/ts/logic/BaseInterfaces.ts
var BaseInterfaces = __webpack_require__(34355);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/Board/BoardInterface.ts
var BoardInterface = __webpack_require__(29939);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/GameInformation/GameData.ts
var GameData = __webpack_require__(76758);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/GameInformation/GameUnits/PieceString.ts
var PieceString = __webpack_require__(20915);
;// CONCATENATED MODULE: ./src/main/client/ts/logic/movegen/MoveTree/MoveNotationStringifier.ts
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }







function generateCastlingString(moveData) {
  switch (moveData.specialType) {
    case MoveTreeInterface/* SpecialMove.CastlingKingside */.uj.CastlingKingside:
      return "O-O";
    case MoveTreeInterface/* SpecialMove.CastlingQueenside */.uj.CastlingQueenside:
      return "O-O-O";
    default:
      return "";
  }
}
function extractPiece(metadata) {
  return metadata.movingPiece.piece !== PieceString/* pawnPieceString.piece */.Fb.piece ? metadata.movingPiece.piece : "";
}
function obtainAmbiguousOrthogonality(parameters) {
  var moveMetadata = parameters.moveMetadata,
    move = parameters.move,
    _parameters$snapshot = parameters.snapshot,
    board = _parameters$snapshot.boardSnapshot.board,
    pieceMovements = _parameters$snapshot.pregeneratedAttacks.pieceMovements,
    isCapture = parameters.isCapture;
  var _moveMetadata$movingP = moveMetadata.movingPiece,
    piece = _moveMetadata$movingP.piece,
    color = _moveMetadata$movingP.color;
  var isPawn = piece === PieceString/* pawnPieceString.piece */.Fb.piece;
  var registeredPieces = [];
  var _iterator = _createForOfIteratorHelper(pieceMovements),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var _step$value = _slicedToArray(_step.value, 2),
        _piece = _step$value[0],
        movements = _step$value[1];
      var parsedCoordinate = (0,BoardInterface/* unstringifyCoordinate */.Xm)(_piece);
      var boardPiece = board[parsedCoordinate[0]][parsedCoordinate[1]];
      if (boardPiece.isEmpty() || boardPiece.color !== color || boardPiece.piece !== _piece) continue;
      if (movements.find(m => (0,ArrayUtils/* compareArrays */.Rt)(move.endCoordinates, m.move)) !== undefined) {
        registeredPieces.push(parsedCoordinate);
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  if (color === PieceString/* deadColorIndex */.Ir) return [false, false];
  var ambiguousRank = isCapture && isPawn && (0,BaseInterfaces/* isVerticalPlacement */.sC)(color) || registeredPieces.some((c, i) => registeredPieces.some((c2, j) => i !== j && c[0] === c2[0]));
  var ambiguousFile = isCapture && isPawn && !(0,BaseInterfaces/* isVerticalPlacement */.sC)(color) || registeredPieces.some((c, i) => registeredPieces.some((c2, j) => i !== j && c[1] === c2[1]));
  return [ambiguousRank, ambiguousFile];
}
function extractPromotion(move) {
  return move.promotion ? "=".concat(move.promotion[0].piece) : "";
}
function extractChecksAndCheckmates(metadata) {
  return "+".repeat(metadata.checks) + "#".repeat(metadata.checkmates);
}
var shortenedMoveNotationStringify = (moveWrapper, snapshot, dimension) => {
  var _moveWrapper$metadata;
  var resultingString = "";
  var isFirstCapturingMoveSet = false;
  var _iterator2 = _createForOfIteratorHelper(moveWrapper.moveData),
    _step2;
  try {
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
      var move = _step2.value;
      if ((0,MoveTreeInterface/* verifyStandardMove */.$j)(move)) {
        if (resultingString += generateCastlingString(move)) continue;
        resultingString += extractPiece(moveWrapper.metadata);
        var isCapture = !isFirstCapturingMoveSet && moveWrapper.metadata.isCapture;
        var _obtainAmbiguousOrtho = obtainAmbiguousOrthogonality({
            isCapture,
            move,
            snapshot,
            moveMetadata: moveWrapper.metadata
          }),
          _obtainAmbiguousOrtho2 = _slicedToArray(_obtainAmbiguousOrtho, 2),
          ambiguousRank = _obtainAmbiguousOrtho2[0],
          ambiguousFile = _obtainAmbiguousOrtho2[1];
        if (ambiguousFile && !ambiguousRank) {
          resultingString += (0,GameData/* convertCoordinateToPGN4Array */.By)(move.startCoordinates, dimension)[1];
        } else if (!ambiguousFile && ambiguousRank) {
          resultingString += (0,GameData/* convertCoordinateToPGN4Array */.By)(move.startCoordinates, dimension)[0];
        } else if (ambiguousFile && ambiguousRank) {
          resultingString += (0,GameData/* convertCoordinateToPGN4 */.kZ)(move.startCoordinates, dimension);
        }
        if (isCapture) {
          resultingString += "x";
          isFirstCapturingMoveSet = true;
        }
        resultingString += (0,GameData/* convertCoordinateToPGN4 */.kZ)(move.endCoordinates, dimension);
        resultingString += extractPromotion(move);
      } else if ((0,MoveTreeInterface/* verifyDroppingMove */.x7)(move)) {
        resultingString += "@".concat(move.piece.piece);
        resultingString += "".concat((0,GameData/* convertCoordinateToPGN4 */.kZ)(move.endCoordinates, dimension));
      } else if ((0,MoveTreeInterface/* verifyInternalMove */.LR)(move)) {
        resultingString += move.type;
      } else (0,baseTypes/* throwOnNever */.h0)(move);
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }
  resultingString += extractChecksAndCheckmates(moveWrapper.metadata);
  resultingString += (_moveWrapper$metadata = moveWrapper.metadata.annotation) !== null && _moveWrapper$metadata !== void 0 ? _moveWrapper$metadata : "";
  return resultingString;
};
var fullMoveNotationStringify = moveWrapper => {
  var resultingString = "";
  var firstStandardMoveCaptureSet = false;
  var _iterator3 = _createForOfIteratorHelper(moveWrapper.moveData),
    _step3;
  try {
    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
      var move = _step3.value;
      if ((0,MoveTreeInterface/* verifyStandardMove */.$j)(move)) {
        if (resultingString += generateCastlingString(move)) continue;
        resultingString += extractPiece(moveWrapper.metadata);
        resultingString += (0,GameData/* convertCoordinateToPGN4 */.kZ)(move.startCoordinates);
        if (!firstStandardMoveCaptureSet && moveWrapper.metadata.isCapture) {
          resultingString += "x";
          firstStandardMoveCaptureSet = true;
        } else resultingString += "-";
        resultingString += (0,GameData/* convertCoordinateToPGN4 */.kZ)(move.endCoordinates);
        resultingString += extractPromotion(move);
      } else if ((0,MoveTreeInterface/* verifyDroppingMove */.x7)(move)) {
        resultingString += "@".concat(move.piece.piece);
        resultingString += "-".concat((0,GameData/* convertCoordinateToPGN4 */.kZ)(move.endCoordinates));
      } else if ((0,MoveTreeInterface/* verifyInternalMove */.LR)(move)) {
        resultingString += move.type;
      } else (0,baseTypes/* throwOnNever */.h0)(move);
    }
  } catch (err) {
    _iterator3.e(err);
  } finally {
    _iterator3.f();
  }
  resultingString += extractChecksAndCheckmates(moveWrapper.metadata);
  return resultingString;
};
var moveNotation = {
  fullMoveNotation: fullMoveNotationStringify,
  shortenedMoveNotation: shortenedMoveNotationStringify
};
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/FENData/FENOptions/FENOptionsTagsInterface.ts + 1 modules
var FENOptionsTagsInterface = __webpack_require__(54434);
;// CONCATENATED MODULE: ./src/main/client/ts/logic/movegen/MoveTree/MoveTree.ts
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function MoveTree_slicedToArray(arr, i) { return MoveTree_arrayWithHoles(arr) || MoveTree_iterableToArrayLimit(arr, i) || MoveTree_unsupportedIterableToArray(arr, i) || MoveTree_nonIterableRest(); }
function MoveTree_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function MoveTree_iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function MoveTree_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function MoveTree_createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = MoveTree_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function MoveTree_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return MoveTree_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return MoveTree_arrayLikeToArray(o, minLen); }
function MoveTree_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }






function alterCurrentPath(current, path) {
  var currentMove = [...current];
  for (var i = 0; i < currentMove.length; i++) {
    if (path[i] > currentMove[i]) break;
    if (path[i] === currentMove[i]) {
      if (i === path.length - 1) {
        currentMove = currentMove.slice(0, i + 1);
        currentMove[i]--;
        break;
      }
    } else {
      currentMove = currentMove.slice(0, i + 1);
      currentMove[i] = path[i] - 1;
      break;
    }
  }
  var indexOfMinus = currentMove.indexOf(-1);
  if (indexOfMinus !== -1) {
    currentMove = currentMove.slice(0, indexOfMinus);
    var lastNumber = 0;
    do {
      var popped = currentMove.pop();
      if (popped === undefined) {
        lastNumber = -1;
        break;
      }
      lastNumber = popped;
    } while (lastNumber <= 0);
    if (lastNumber !== -1) currentMove.push(lastNumber);
  }
  return currentMove;
}
function verifyValidMove(move) {
  return move !== undefined && !Array.isArray(move);
}
function assertValidMove(move) {
  if (!move || Array.isArray(move)) {
    throw new Error("The selected move is not a valid move");
  }
}
var createMoveTree = baseSnapshot => {
  var snapshots = new WeakMap();
  var boardHashes = new Map();
  var moves = [];
  var startingSnapshot = {
    boardSnapshot: baseSnapshot,
    get hash() {
      throw new Error("Should not access hash on base move");
    },
    get pregeneratedAttacks() {
      throw new Error("Should not access pregenerated attacks on base move");
    }
  };
  function obtainMatchingAlternativeLine(baseMoveWrapper, newMoveWrapper) {
    var _iterator = MoveTree_createForOfIteratorHelper(baseMoveWrapper.alternativeLines),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var _step$value = MoveTree_slicedToArray(_step.value, 1),
          alternativeFirstMove = _step$value[0];
        if (alternativeFirstMove.moveData.length !== newMoveWrapper.moveData.length) continue;
        if (alternativeFirstMove.moveData.every((m, i) => (0,MoveTreeInterface/* compareMoves */.JG)(m, newMoveWrapper.moveData[i]))) {
          return alternativeFirstMove.path;
        }
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    return false;
  }
  function stripEmptyAlternativeLines() {
    var current = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : moves;
    var _iterator2 = MoveTree_createForOfIteratorHelper(current),
      _step2;
    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        var moveWrapper = _step2.value;
        for (var i = 0; i < moveWrapper.alternativeLines.length; i++) {
          if (moveWrapper.alternativeLines[i].length === 0) {
            moveWrapper.alternativeLines.splice(i, 1);
          } else stripEmptyAlternativeLines(moveWrapper.alternativeLines[i]);
        }
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
  }
  function stripDeletedMoveHashes(current, currentMove) {
    var _iterator3 = MoveTree_createForOfIteratorHelper(current),
      _step3;
    try {
      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
        var moveWrapper = _step3.value;
        var snapshot = snapshots.get(moveWrapper);
        if (!snapshot) continue;
        var hash = snapshot.hash;
        var boardHash = boardHashes.get(hash);
        if (boardHash) {
          if (boardHash.length === 1) {
            boardHashes.delete(hash);
          } else {
            var currentLine = boardHash.findIndex(p => (0,ArrayUtils/* compareArrays */.Rt)(p, currentMove));
            if (currentLine === -1) {
              console.error("Current line for move wrapper not found in board hashes");
            } else {
              boardHash.splice(currentLine, 1);
            }
          }
        }
        var _iterator4 = MoveTree_createForOfIteratorHelper(moveWrapper.alternativeLines),
          _step4;
        try {
          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
            var line = _step4.value;
            stripDeletedMoveHashes(line, currentMove);
          }
        } catch (err) {
          _iterator4.e(err);
        } finally {
          _iterator4.f();
        }
      }
    } catch (err) {
      _iterator3.e(err);
    } finally {
      _iterator3.f();
    }
  }
  function addBoardSnapshot(parameters, currentMove) {
    var move = parameters.move,
      snapshot = parameters.snapshot,
      fenDataString = parameters.fenDataString;
    snapshots.set(move, {
      boardSnapshot: snapshot.boardSnapshot,
      pregeneratedAttacks: snapshot.pregeneratedAttacks,
      hash: fenDataString
    });
    var boardHash = boardHashes.get(fenDataString);
    if (boardHash) {
      var hasAdditionalPath = boardHash.find(p => (0,ArrayUtils/* compareArrays */.Rt)(p, currentMove));
      boardHashes.set(fenDataString, hasAdditionalPath ? boardHash : [...boardHash, currentMove.slice()]);
    } else boardHashes.set(fenDataString, [currentMove.slice()]);
  }
  var assignMoveWrapperKey = (object, key, value) => {
    object[key] = value;
  };
  return {
    moves,
    currentMove: [-1],
    getMove(path) {
      return (0,MoveTreeInterface/* getMoveFromPathAndTree */.Yr)(moves, path);
    },
    setNewMove(parameters) {
      var move = parameters.move;
      var moveWrapper = this.getMove(move.path.slice(0, -1));
      var path = move.path.slice();
      if (!moveWrapper) return path;
      if (Array.isArray(moveWrapper)) {
        if (moveWrapper.length > move.path[move.path.length - 1]) {
          var currentMove = this.getMove(move.path);
          if (Array.isArray(currentMove)) {
            this.setNewMove(_objectSpread(_objectSpread({}, parameters), {}, {
              move: _objectSpread(_objectSpread({}, move), {}, {
                path: [...move.path, currentMove.length]
              })
            }));
          } else if (currentMove) {
            var alternativeLine = obtainMatchingAlternativeLine(currentMove, move);
            if (alternativeLine) {
              return alternativeLine;
            } else {
              currentMove.alternativeLines.push([]);
              var newMove = _objectSpread(_objectSpread({}, move), {}, {
                path: [...move.path, currentMove.alternativeLines.length - 1, 0]
              });
              path = newMove.path.slice();
              return this.setNewMove(_objectSpread(_objectSpread({}, parameters), {}, {
                move: newMove
              }));
            }
          }
        } else {
          moveWrapper.push(move);
          addBoardSnapshot(parameters, this.currentMove);
        }
      } else {
        var key;
        for (key in move) {
          if (Object.prototype.hasOwnProperty.call(move, key)) assignMoveWrapperKey(moveWrapper, key, move[key]);
        }
        addBoardSnapshot(parameters, this.currentMove);
      }
      return path;
    },
    getBoardSnapshot(move) {
      if (move === -1) {
        return startingSnapshot;
      } else {
        return snapshots.get(move);
      }
    },
    deleteMove(path) {
      var items = [];
      var moveWrapper = this.getMove(path.slice(0, -1));
      if (!moveWrapper) return;
      var finalIndex = path[path.length - 1];
      if (Array.isArray(moveWrapper)) {
        items = [...moveWrapper.splice(finalIndex, moveWrapper.length - finalIndex)];
      } else {
        if (moveWrapper.alternativeLines.length > 0) {
          items = moveWrapper.alternativeLines.splice(path[path.length - 1], 1)[0];
        }
      }
      stripDeletedMoveHashes(items, this.currentMove);
      stripEmptyAlternativeLines();
      var newCurrentMove = alterCurrentPath(this.currentMove, path);
      this.currentMove = newCurrentMove.length === 0 ? [-1] : newCurrentMove;
    },
    getHash(preliminaryHashString) {
      var hash = boardHashes.get(preliminaryHashString);
      if (hash === undefined) return 0;
      var totalCount = 0;
      var _iterator5 = MoveTree_createForOfIteratorHelper(hash),
        _step5;
      try {
        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
          var line = _step5.value;
          for (var i = 0; i < line.length; i++) {
            if (i + 1 % 2 !== 0 && i === line.length - 1) {
              totalCount++;
            } else if (line[i] !== this.currentMove[i]) break;
          }
        }
      } catch (err) {
        _iterator5.e(err);
      } finally {
        _iterator5.f();
      }
      return totalCount;
    },
    stringifyMove(moveWrapper, dimension) {
      var snapshot = this.getBoardSnapshot(moveWrapper);
      if (!snapshot) {
        console.error("No snapshot assigned when moveWrapper is called");
        return "";
      }
      var key;
      for (key in moveNotation) {
        if (!Object.prototype.hasOwnProperty.call(moveNotation, key)) continue;
        moveWrapper.cachedNames[key] = moveNotation[key](moveWrapper, snapshot, dimension);
      }
    },
    augmentMoveWithMetadata(parameters) {
      var move = parameters.move,
        board = parameters.board,
        makeMoveFunction = parameters.makeMoveFunction;
      var standardMove = move.find(m => (0,MoveTreeInterface/* verifyStandardMove */.$j)(m));
      var movingPiece = standardMove ? board.board[standardMove.startCoordinates[0]][standardMove.startCoordinates[1]] : PieceString/* pawnPieceString */.Fb;
      var capturedPieces = standardMove ? board.data.getCapturedPieces(standardMove).length !== 0 : false;
      var postMoveResults = makeMoveFunction();
      var deadColors = [...board.data.fenOptions.tag("dead")];
      var currentSideToMove = board.data.sideToMove,
        currentMove = board.moves.getMove(board.moves.currentMove);
      assertValidMove(currentMove);
      if (board.moves.currentMove[board.moves.currentMove.length - 1] === 0 || (0,ArrayUtils/* findLastIndex */.qr)(deadColors, b => !b) === currentSideToMove) {
        var lastCurrentMoves = board.moves.getMove(board.moves.currentMove.slice(0, -1));
        if (!Array.isArray(lastCurrentMoves)) throw new Error("The selected move is not within an array");
        for (var i = lastCurrentMoves.length - 1; i >= 0; i--) {
          var lastCurrent = lastCurrentMoves[i].metadata.currentFullMove;
          if (lastCurrent) {
            currentMove.metadata.currentFullMove = lastCurrent + 1;
            break;
          } else if (i === 0) {
            if (currentMove.path.length === 1) {
              currentMove.metadata.currentFullMove = 1;
            } else {
              var alternativeLineContainer = board.moves.getMove(board.moves.currentMove.slice(0, -3));
              if (!Array.isArray(alternativeLineContainer)) throw new Error("The selected move is not within an array");
              currentMove.metadata.currentFullMove = alternativeLineContainer[(0,ArrayUtils/* findLastIndex */.qr)(alternativeLineContainer, m => Boolean(m.metadata.currentFullMove))].metadata.currentFullMove;
            }
          }
        }
      }
      currentMove.metadata.currentSideToMove = currentSideToMove;
      currentMove.metadata.isCapture = capturedPieces;
      currentMove.metadata.movingPiece = movingPiece;
      var _iterator6 = MoveTree_createForOfIteratorHelper(GameData/* colors */.O9),
        _step6;
      try {
        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {
          var color = _step6.value;
          if (postMoveResults.checkmates[color]) {
            currentMove.metadata.checkmates++;
          } else if (postMoveResults.checks[color]) {
            currentMove.metadata.checks++;
          }
        }
      } catch (err) {
        _iterator6.e(err);
      } finally {
        _iterator6.f();
      }
      this.stringifyMove(currentMove, Math.max(...board.data.fenOptions.tag("dim")));
    },
    constructPreliminaryHashString(boardObject) {
      var board = boardObject.board,
        data = boardObject.data;
      var builder = "";
      builder += data.sideToMove;
      var key;
      for (key in data.fenOptions.tags) {
        var tag = data.fenOptions.tags[key];
        if (!(0,FENOptionsTagsInterface/* verifyDynamicFENOptionKey */.bv)(tag, key)) continue;
        var serializedForm = tag.serialize();
        if (serializedForm) builder += serializedForm;
      }
      builder = board.reduce((p, n) => p + n.map(ps => ps.value || "-").join(""), builder);
      return builder;
    }
  };
};

/***/ }),

/***/ 37017:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "$j": () => (/* binding */ verifyStandardMove),
/* harmony export */   "Fi": () => (/* binding */ InternalMoveSignature),
/* harmony export */   "JG": () => (/* binding */ compareMoves),
/* harmony export */   "LR": () => (/* binding */ verifyInternalMove),
/* harmony export */   "Qc": () => (/* binding */ verifyMoveWrapperProperties),
/* harmony export */   "SK": () => (/* binding */ createDummyMoveMetadata),
/* harmony export */   "Yr": () => (/* binding */ getMoveFromPathAndTree),
/* harmony export */   "Zp": () => (/* binding */ createBaseMoveWrapper),
/* harmony export */   "_r": () => (/* binding */ verifyStandardMoveArray),
/* harmony export */   "iw": () => (/* binding */ getLatestChainedMoves),
/* harmony export */   "lc": () => (/* binding */ verifyDroppingMoveArray),
/* harmony export */   "nc": () => (/* binding */ verifyRequiredMove),
/* harmony export */   "uj": () => (/* binding */ SpecialMove),
/* harmony export */   "x7": () => (/* binding */ verifyDroppingMove)
/* harmony export */ });
/* unused harmony export verifyInternalMoveArray */
/* harmony import */ var _Board_BoardInterface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(29939);
/* harmony import */ var _GameInformation_GameUnits_PieceString__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20915);
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }


var SpecialMove = /*#__PURE__*/function (SpecialMove) {
  SpecialMove[SpecialMove["CastlingKingside"] = 0] = "CastlingKingside";
  SpecialMove[SpecialMove["CastlingQueenside"] = 1] = "CastlingQueenside";
  SpecialMove[SpecialMove["EnPassant"] = 2] = "EnPassant";
  return SpecialMove;
}({});
var InternalMoveSignature = /*#__PURE__*/function (InternalMoveSignature) {
  InternalMoveSignature["Resign"] = "R";
  InternalMoveSignature["Timeout"] = "T";
  InternalMoveSignature["ClaimWin"] = "C";
  InternalMoveSignature["DrawByAgreement"] = "D";
  InternalMoveSignature["Stalemate"] = "S";
  InternalMoveSignature["Pass"] = "P";
  InternalMoveSignature["TeamsCheckmate"] = "#";
  return InternalMoveSignature;
}({});
var verifyRequiredMove = move => move.length > 0;
function verifyMoveWrapperProperties(moveWrapper) {
  return Boolean(moveWrapper.alternativeLines && moveWrapper.comment !== undefined && moveWrapper.path && moveWrapper.metadata && moveWrapper.moveData);
}
function compareMoves(move1, move2) {
  if (verifyStandardMove(move1)) {
    if (!verifyStandardMove(move2)) return false;
    return (0,_Board_BoardInterface__WEBPACK_IMPORTED_MODULE_0__/* .compareCoordinates */ .ef)(move1.startCoordinates, move2.startCoordinates) && (0,_Board_BoardInterface__WEBPACK_IMPORTED_MODULE_0__/* .compareCoordinates */ .ef)(move1.endCoordinates, move2.endCoordinates) && (move1.specialType === move2.specialType || move1.specialType === SpecialMove.EnPassant || move2.specialType === SpecialMove.EnPassant);
  } else if (verifyDroppingMove(move1)) {
    if (!verifyDroppingMove(move2)) return false;
    return (0,_Board_BoardInterface__WEBPACK_IMPORTED_MODULE_0__/* .compareCoordinates */ .ef)(move1.endCoordinates, move2.endCoordinates) && _GameInformation_GameUnits_PieceString__WEBPACK_IMPORTED_MODULE_1__/* .PieceString.comparePieceStrings */ .Ff.comparePieceStrings(move1.piece, move2.piece);
  } else if (verifyInternalMove(move1)) {
    if (!verifyInternalMove(move2)) return false;
    return move1.type === move2.type;
  }
  throw new Error("Unexpected move signature of first move ".concat(JSON.stringify(move1)));
}
function createDummyMoveMetadata() {
  return {
    isCapture: false,
    movingPiece: _GameInformation_GameUnits_PieceString__WEBPACK_IMPORTED_MODULE_1__/* .pawnPieceString */ .Fb,
    checks: 0,
    checkmates: 0,
    currentSideToMove: 0,
    highlightedArrows: [],
    highlightedSquares: []
  };
}
var createBaseMoveWrapper = function createBaseMoveWrapper(requiredSettings) {
  var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var wrapper = {
    path: requiredSettings.path,
    moveData: requiredSettings.moveData,
    comment: "",
    alternativeLines: [],
    metadata: createDummyMoveMetadata(),
    cachedNames: {
      fullMoveNotation: "",
      shortenedMoveNotation: ""
    }
  };
  return _objectSpread(_objectSpread({}, wrapper), settings);
};
var verifyInternalMove = move => "type" in move;
var verifyDroppingMove = move => "piece" in move;
var verifyStandardMove = move => "startCoordinates" in move;
var verifyInternalMoveArray = move => "type" in move[0];
var verifyDroppingMoveArray = move => "piece" in move[0];
var verifyStandardMoveArray = move => "startCoordinates" in move[0];
var getMoveFromPathAndTree = (moves, path) => {
  var _movePath$shift;
  if (path.length === 0) return moves;
  var movePath = path.slice();
  if (movePath[0] >= moves.length) return;
  var currentSelection = moves[(_movePath$shift = movePath.shift()) !== null && _movePath$shift !== void 0 ? _movePath$shift : 0];
  while (movePath.length > 0) {
    var currentIndex = movePath.shift();
    if (currentIndex !== undefined) {
      if (currentIndex >= currentSelection.alternativeLines.length) return;
      var alternativeLine = currentSelection.alternativeLines[currentIndex];
      var index = movePath.shift();
      if (index === undefined) {
        return alternativeLine;
      }
      if (index >= alternativeLine.length) return;
      currentSelection = alternativeLine[index];
    }
  }
  return currentSelection;
};
var getLatestChainedMoves = move => {
  if (move.length > 0 && move[0].nextChainedMoves) {
    return getLatestChainedMoves(move[0].nextChainedMoves);
  } else return move;
};

/***/ }),

/***/ 56602:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "V": () => (/* binding */ PieceControl)
/* harmony export */ });
/* harmony import */ var _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76758);
/* harmony import */ var _GameInformation_GameUnits_PieceString__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20915);
/* harmony import */ var _PieceControlInterface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(16703);
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }



class PieceControl {
  initDecoratorSettings() {
    /* no-op */
  }
  /*---------------------------------- INITIALIZATION -----------------------------------------*/

  constructor() {
    _defineProperty(this, "color", void 0);
    _defineProperty(this, "sliding", void 0);
    _defineProperty(this, "jumping", void 0);
    _defineProperty(this, "hooks", void 0);
    _defineProperty(this, "moves", void 0);
    _defineProperty(this, "rayGenCache", void 0);
    _defineProperty(this, "baseRankActive", void 0);
    _defineProperty(this, "immunePieces", void 0);
    _defineProperty(this, "fenData", void 0);
    _defineProperty(this, "board", void 0);
    _defineProperty(this, "i", void 0);
    _defineProperty(this, "j", void 0);
    _defineProperty(this, "__baseClass", void 0);
    this.moves = [];
    this.color = 0;
    this.sliding = [];
    this.jumping = [];
    this.rayGenCache = [];
    this.hooks = {
      useTrajectory: undefined,
      usePerspective: undefined,
      usePawnLogic: undefined,
      useHopping: false
    };
    this.baseRankActive = false;
    this.immunePieces = [false, false, false, false];
    this.__baseClass = this;
  }
  configure(configuration) {
    var _configuration$baseRa;
    this.color = configuration.color;
    this.immunePieces = configuration.immunePieces;
    var _configuration$coordi = _slicedToArray(configuration.coordinates, 2);
    this.i = _configuration$coordi[0];
    this.j = _configuration$coordi[1];
    var baseRankCalc = [13 - this.i, this.j, this.i, 13 - this.j][this.color] - this.fenData.fenOptions.tag("pawnBaseRank");
    this.baseRankActive = (_configuration$baseRa = configuration.baseRank) !== null && _configuration$baseRa !== void 0 ? _configuration$baseRa : baseRankCalc === -1 || baseRankCalc === -2;
    this.board = configuration.board;
  }
  setFENData(fenData) {
    this.fenData = fenData;
  }
  isRayTrace(attackType) {
    return attackType === _PieceControlInterface__WEBPACK_IMPORTED_MODULE_2__/* .AttackType.RayTrace */ .hK.RayTrace || attackType === _PieceControlInterface__WEBPACK_IMPORTED_MODULE_2__/* .AttackType.RayTraceLimited */ .hK.RayTraceLimited;
  }

  /*---------------------------------- INITIALIZATION -----------------------------------------*/
  /*-------------------------------------------------------------------------------------------*/
  /*--------------------------------- MOVE GENERATION -----------------------------------------*/

  modifyDisplacements(i, j) {
    var baseDisplacements = [[i, j], [j, -i], [-i, -j], [-j, i]];
    return baseDisplacements[this.color];
  }
  pushMove(settings) {
    if (!settings.isRayGen && this.hooks.usePawnLogic && this.hooks.usePawnLogic.promotionRanks && this.hooks.usePawnLogic.promotionRanks[this.color] === (this.color % 2 === 0 ? settings.i : settings.j) && this.hooks.usePawnLogic.promotionPieces) {
      var _settings$irreversibl;
      this.moves.push({
        move: [settings.i, settings.j, this.hooks.usePawnLogic.promotionPieces.join("")],
        irreversible: (_settings$irreversibl = settings.irreversible) !== null && _settings$irreversibl !== void 0 ? _settings$irreversibl : false
      });
      return;
    } else {
      var _settings$irreversibl2;
      this.moves.push({
        move: [settings.i, settings.j],
        irreversible: (_settings$irreversibl2 = settings.irreversible) !== null && _settings$irreversibl2 !== void 0 ? _settings$irreversibl2 : false
      });
    }
  }
  generateSlidingAttack(settings) {
    var _settings$limit, _settings$special, _this$hooks$usePerspe;
    var _settings$displacemen = _slicedToArray(settings.displacement, 2),
      displacementI = _settings$displacemen[0],
      displacementJ = _settings$displacemen[1],
      limit = (_settings$limit = settings.limit) !== null && _settings$limit !== void 0 ? _settings$limit : Infinity;
    var rayGenCache = settings.rayGenCache,
      special = (_settings$special = settings.special) !== null && _settings$special !== void 0 ? _settings$special : _PieceControlInterface__WEBPACK_IMPORTED_MODULE_2__/* .AttackType.Normal */ .hK.Normal;
    var rayTraceLimit = 0;
    if ((_this$hooks$usePerspe = this.hooks.usePerspective) !== null && _this$hooks$usePerspe !== void 0 && _this$hooks$usePerspe[this.color]) {
      var _this$modifyDisplacem = this.modifyDisplacements(displacementI, displacementJ);
      var _this$modifyDisplacem2 = _slicedToArray(_this$modifyDisplacem, 2);
      displacementI = _this$modifyDisplacem2[0];
      displacementJ = _this$modifyDisplacem2[1];
    }
    var startI = this.i + displacementI,
      startJ = this.j + displacementJ;
    var iLength = this.board[0].length,
      jLength = this.board.length;
    var isRayGen = rayGenCache !== null && rayGenCache !== void 0 ? rayGenCache : this.isRayTrace(special);
    while (limit > 0 && startI >= 0 && startI < iLength && startJ >= 0 && startJ < jLength) {
      // TODO add trajectories?
      if (this.getMovePossibility({
        displacement: [startI, startJ],
        special,
        rayGenCache
      })) {
        this.pushMove({
          i: startI,
          j: startJ,
          isRayGen: Boolean(isRayGen),
          irreversible: settings.irreversible
        });
      }
      if (special === _PieceControlInterface__WEBPACK_IMPORTED_MODULE_2__/* .AttackType.RayTraceLimited */ .hK.RayTraceLimited && !this.board[startI][startJ].isEmpty()) {
        rayTraceLimit++;
        if (rayTraceLimit === 2) break;
      }
      if (!this.isRayTrace(special) && !this.board[startI][startJ].isEmpty()) {
        break;
      }
      startI += displacementI;
      startJ += displacementJ;
      limit--;
    }
  }
  generateJumpAttack(settings) {
    var _settings$special2, _this$hooks$usePerspe2;
    var _settings$displacemen2 = _slicedToArray(settings.displacement, 2),
      displacementI = _settings$displacemen2[0],
      displacementJ = _settings$displacemen2[1];
    var rayGenCache = settings.rayGenCache,
      squareBlockingIndex = settings.squareBlockingIndex,
      special = (_settings$special2 = settings.special) !== null && _settings$special2 !== void 0 ? _settings$special2 : _PieceControlInterface__WEBPACK_IMPORTED_MODULE_2__/* .AttackType.Normal */ .hK.Normal;
    if ((_this$hooks$usePerspe2 = this.hooks.usePerspective) !== null && _this$hooks$usePerspe2 !== void 0 && _this$hooks$usePerspe2[this.color]) {
      var _this$modifyDisplacem3 = this.modifyDisplacements(displacementI, displacementJ);
      var _this$modifyDisplacem4 = _slicedToArray(_this$modifyDisplacem3, 2);
      displacementI = _this$modifyDisplacem4[0];
      displacementJ = _this$modifyDisplacem4[1];
    }
    var startI = this.i + displacementI,
      startJ = this.j + displacementJ;
    var isRayGen = rayGenCache !== null && rayGenCache !== void 0 ? rayGenCache : this.isRayTrace(special);
    var isTestPassed = true;
    if (this.hooks.useTrajectory && squareBlockingIndex !== undefined) {
      var _this$hooks$usePerspe3;
      var trajectory = this.hooks.useTrajectory[squareBlockingIndex];
      var trajectoryX, trajectoryY;
      if ((_this$hooks$usePerspe3 = this.hooks.usePerspective) !== null && _this$hooks$usePerspe3 !== void 0 && _this$hooks$usePerspe3[this.color]) {
        var _this$modifyDisplacem5 = this.modifyDisplacements(trajectory[0], trajectory[1]);
        var _this$modifyDisplacem6 = _slicedToArray(_this$modifyDisplacem5, 2);
        trajectoryX = _this$modifyDisplacem6[0];
        trajectoryY = _this$modifyDisplacem6[1];
      } else {
        trajectoryX = trajectory[0], trajectoryY = trajectory[1];
      }
      if (!this.getMovePossibility({
        displacement: [this.i + trajectoryX, this.j + trajectoryY],
        special,
        rayGenCache
      })) {
        isTestPassed = false;
      }
    }
    if (isTestPassed && this.getMovePossibility({
      displacement: [startI, startJ],
      special,
      rayGenCache
    })) {
      this.pushMove({
        i: startI,
        j: startJ,
        isRayGen: Boolean(isRayGen),
        irreversible: settings.irreversible
      });
    }
  }
  getMovePossibility(configuration) {
    var _configuration$displa = _slicedToArray(configuration.displacement, 2),
      i = _configuration$displa[0],
      j = _configuration$displa[1],
      rayGenCache = configuration.rayGenCache,
      special = configuration.special;
    if (i < 0 || i >= _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_0__/* .boardDimension */ .iJ || j < 0 || j >= _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_0__/* .boardDimension */ .iJ) return false;
    var piece = this.board[i][j];
    if (!piece.isEmpty() && piece.color !== _GameInformation_GameUnits_PieceString__WEBPACK_IMPORTED_MODULE_1__/* .deadColorIndex */ .Ir && !rayGenCache && !this.isRayTrace(special !== null && special !== void 0 ? special : _PieceControlInterface__WEBPACK_IMPORTED_MODULE_2__/* .AttackType.Normal */ .hK.Normal)) {
      if (this.immunePieces[piece.color] || this.fenData.fenOptions.tag("zombieImmune")[piece.color]) return false;
    }
    var pushTo = () => {
      if (rayGenCache) {
        this.rayGenCache.push(rayGenCache);
      }
      return true;
    };
    if (special === undefined || special === _PieceControlInterface__WEBPACK_IMPORTED_MODULE_2__/* .AttackType.Normal */ .hK.Normal) {
      if (!piece.isWall()) {
        return pushTo();
      }
    } else if (special === _PieceControlInterface__WEBPACK_IMPORTED_MODULE_2__/* .AttackType.RayGen */ .hK.RayGen) {
      if (!piece.isEmpty()) {
        return pushTo();
      }
    } else if (special === _PieceControlInterface__WEBPACK_IMPORTED_MODULE_2__/* .AttackType.AttackOnly */ .hK.AttackOnly) {
      if (!piece.isEmpty() && !piece.isWall()) {
        return pushTo();
      }
    } else if (special === _PieceControlInterface__WEBPACK_IMPORTED_MODULE_2__/* .AttackType.MoveOnly */ .hK.MoveOnly) {
      if (piece.isEmpty()) {
        return pushTo();
      }
    } else if (this.isRayTrace(special)) {
      return pushTo();
    }
    return false;
  }

  /*--------------------------------- MOVE GENERATION -----------------------------------------*/
  /*-------------------------------------------------------------------------------------------*/
  /*------------------------------- OUTPUT GENERATION -----------------------------------------*/

  getPossibleCells() {
    if (this.hooks.useHopping) {
      this.sliding.forEach(displacement => this.generateSlidingAttack({
        displacement,
        special: _PieceControlInterface__WEBPACK_IMPORTED_MODULE_2__/* .AttackType.RayGen */ .hK.RayGen,
        rayGenCache: [...displacement]
      }));
      var moves = this.moves.slice();
      this.moves = [];
      moves.forEach((s, i) => {
        var startI = s.move[0] + this.rayGenCache[i][0];
        var startJ = s.move[1] + this.rayGenCache[i][1];
        if (this.getMovePossibility({
          displacement: [startI, startJ]
        })) {
          this.pushMove({
            i: startI,
            j: startJ
          });
        }
      });
      this.rayGenCache = [];
    } else {
      this.sliding.forEach(a => this.generateSlidingAttack({
        displacement: a
      }));
      this.jumping.forEach(a => this.generateJumpAttack({
        displacement: a
      }));
    }
  }
  rayGenJumpingAttacks() {
    this.jumping.forEach(a => this.generateJumpAttack({
      displacement: a,
      special: _PieceControlInterface__WEBPACK_IMPORTED_MODULE_2__/* .AttackType.RayTrace */ .hK.RayTrace
    }));
    return this.moves.splice(0);
  }
  rayGenSlidingAttacks(trace) {
    var slidingLines = [];
    this.sliding.forEach(a => {
      this.generateSlidingAttack({
        displacement: a,
        special: trace
      });
      if (this.moves.length !== 0) {
        slidingLines.push(this.moves.splice(0));
      }
    });
    return slidingLines;
  }
  getPseudoLegalMoves() {
    this.getPossibleCells();
    return this.moves.splice(0);
  }

  /*------------------------------- OUTPUT GENERATION -----------------------------------------*/
}

/***/ }),

/***/ 85702:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "D": () => (/* binding */ initPieceControlDeclarations)
/* harmony export */ });
/* harmony import */ var _PieceControl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(56602);
/* harmony import */ var _PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(16703);


var orthogonalMoves = [[-1, 0], [1, 0], [0, 1], [0, -1]];
var diagonalMoves = [[-1, -1], [1, 1], [-1, 1], [1, -1]];
var kingDirections = [...orthogonalMoves, ...diagonalMoves];
var knightHops = [[-1, -2], [-2, -1], [-1, 2], [2, -1], [-2, 1], [1, -2], [1, 2], [2, 1]];
var camelHops = [[-1, -3], [-3, -1], [-1, 3], [3, -1], [-3, 1], [1, -3], [1, 3], [3, 1]];
var dabbabaHops = [[-2, 0], [2, 0], [0, 2], [0, -2]];
var alfilHops = [[-2, -2], [2, 2], [-2, 2], [2, -2]];
var initPieceControlDeclarations = () => {
  (0,_PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .createPieceDeclaration */ .pN)({
    baseClassRef: class extends _PieceControl__WEBPACK_IMPORTED_MODULE_0__/* .PieceControl */ .V {
      constructor() {
        super();
        this.sliding = orthogonalMoves;
      }
    },
    configuration: {
      points: {
        singlesPoints: 5,
        teamsPoints: 5,
        botFFAValue: 7,
        botTeamsValue: 7
      },
      piece: _PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .defaultPieces.rook */ .bB.rook,
      moveGenerationSettings: {
        isComplex: false,
        isJumping: false,
        isSliding: true,
        isPawn: false,
        isColorBound: false
      },
      naming: {
        name: "Rook",
        shortName: _PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .defaultPieces.rook.toLowerCase */ .bB.rook.toLowerCase()
      }
    }
  });
  (0,_PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .createPieceDeclaration */ .pN)({
    baseClassRef: class extends _PieceControl__WEBPACK_IMPORTED_MODULE_0__/* .PieceControl */ .V {
      constructor() {
        super();
        this.sliding = diagonalMoves;
      }
    },
    configuration: {
      points: {
        singlesPoints: 5,
        teamsPoints: 4,
        botFFAValue: 6,
        botTeamsValue: 6
      },
      piece: _PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .defaultPieces.bishop */ .bB.bishop,
      moveGenerationSettings: {
        isComplex: false,
        isJumping: false,
        isSliding: true,
        isPawn: false,
        isColorBound: true
      },
      naming: {
        name: "Bishop",
        shortName: _PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .defaultPieces.bishop.toLowerCase */ .bB.bishop.toLowerCase()
      }
    }
  });
  (0,_PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .createPieceDeclaration */ .pN)({
    baseClassRef: class extends _PieceControl__WEBPACK_IMPORTED_MODULE_0__/* .PieceControl */ .V {
      constructor() {
        super();
        this.jumping = kingDirections;
      }
    },
    configuration: {
      points: {
        singlesPoints: 3,
        teamsPoints: 0,
        botFFAValue: 3,
        botTeamsValue: 3
      },
      piece: _PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .defaultPieces.king */ .bB.king,
      moveGenerationSettings: {
        isComplex: false,
        isJumping: true,
        isSliding: false,
        isPawn: false,
        isColorBound: false
      },
      naming: {
        name: "King",
        shortName: _PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .defaultPieces.king.toLowerCase */ .bB.king.toLowerCase()
      }
    }
  });
  (0,_PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .createPieceDeclaration */ .pN)({
    baseClassRef: class extends _PieceControl__WEBPACK_IMPORTED_MODULE_0__/* .PieceControl */ .V {
      constructor() {
        super();
        this.sliding = kingDirections;
      }
    },
    configuration: {
      points: {
        singlesPoints: 9,
        teamsPoints: 10,
        botFFAValue: 14,
        botTeamsValue: 15
      },
      piece: _PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .defaultPieces.queen */ .bB.queen,
      moveGenerationSettings: {
        isComplex: false,
        isJumping: false,
        isSliding: true,
        isPawn: false,
        isColorBound: false
      },
      naming: {
        name: "Queen",
        shortName: _PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .defaultPieces.queen.toLowerCase */ .bB.queen.toLowerCase()
      }
    }
  });
  (0,_PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .createPieceDeclaration */ .pN)({
    baseClassRef: class extends _PieceControl__WEBPACK_IMPORTED_MODULE_0__/* .PieceControl */ .V {
      constructor() {
        super();
        this.sliding = kingDirections;
      }
    },
    configuration: {
      points: {
        singlesPoints: 9,
        teamsPoints: 10,
        botFFAValue: 13,
        botTeamsValue: 13
      },
      piece: _PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .dameLetter */ .t$,
      moveGenerationSettings: {
        isComplex: false,
        isJumping: false,
        isSliding: true,
        isPawn: false,
        isColorBound: false
      },
      naming: {
        name: "1-point queen",
        shortName: _PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .dameLetter.toLowerCase */ .t$.toLowerCase()
      }
    }
  });
  (0,_PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .createPieceDeclaration */ .pN)({
    baseClassRef: class extends _PieceControl__WEBPACK_IMPORTED_MODULE_0__/* .PieceControl */ .V {
      constructor() {
        super();
        this.jumping = knightHops;
      }
    },
    configuration: {
      points: {
        singlesPoints: 3,
        teamsPoints: 3,
        botFFAValue: 4,
        botTeamsValue: 4
      },
      piece: _PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .defaultPieces.knight */ .bB.knight,
      moveGenerationSettings: {
        isComplex: false,
        isJumping: true,
        isSliding: false,
        isPawn: false,
        isColorBound: false
      },
      naming: {
        name: "Knight",
        shortName: _PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .defaultPieces.knight.toLowerCase */ .bB.knight.toLowerCase()
      }
    }
  });
  (0,_PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .createPieceDeclaration */ .pN)({
    baseClassRef: class extends _PieceControl__WEBPACK_IMPORTED_MODULE_0__/* .PieceControl */ .V {
      constructor() {
        super();
        this.jumping = [...knightHops, ...kingDirections];
      }
    },
    configuration: {
      points: {
        singlesPoints: 5,
        teamsPoints: 5,
        botFFAValue: 7,
        botTeamsValue: 7
      },
      piece: "M",
      moveGenerationSettings: {
        isComplex: false,
        isJumping: true,
        isSliding: false,
        isPawn: false,
        isColorBound: false
      },
      naming: {
        name: "General",
        shortName: "m",
        description: "combines king and knight"
      }
    }
  });
  (0,_PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .createPieceDeclaration */ .pN)({
    baseClassRef: class extends _PieceControl__WEBPACK_IMPORTED_MODULE_0__/* .PieceControl */ .V {
      constructor() {
        super();
        this.jumping = diagonalMoves;
      }
    },
    configuration: {
      points: {
        singlesPoints: 1,
        teamsPoints: 1,
        botFFAValue: 0.6,
        botTeamsValue: 0.6
      },
      piece: "F",
      moveGenerationSettings: {
        isComplex: false,
        isJumping: true,
        isSliding: false,
        isPawn: false,
        isColorBound: true
      },
      naming: {
        name: "Ferz",
        shortName: "f",
        description: "moves one square diagonally"
      }
    }
  });
  (0,_PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .createPieceDeclaration */ .pN)({
    baseClassRef: class extends _PieceControl__WEBPACK_IMPORTED_MODULE_0__/* .PieceControl */ .V {
      constructor() {
        super();
        this.jumping = orthogonalMoves;
      }
    },
    configuration: {
      points: {
        singlesPoints: 1,
        teamsPoints: 1,
        botFFAValue: 0.4,
        botTeamsValue: 0.4
      },
      piece: "W",
      moveGenerationSettings: {
        isComplex: false,
        isJumping: true,
        isSliding: false,
        isPawn: false,
        isColorBound: false
      },
      naming: {
        name: "Wazir",
        shortName: "w",
        description: "moves one square horizontally or vertically"
      }
    }
  });
  (0,_PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .createPieceDeclaration */ .pN)({
    baseClassRef: class extends _PieceControl__WEBPACK_IMPORTED_MODULE_0__/* .PieceControl */ .V {
      constructor() {
        super();
        this.jumping = orthogonalMoves;
      }
    },
    configuration: {
      points: {
        singlesPoints: 1,
        teamsPoints: 1,
        botFFAValue: 0.4,
        botTeamsValue: 0.4
      },
      piece: "W",
      moveGenerationSettings: {
        isComplex: false,
        isJumping: true,
        isSliding: false,
        isPawn: false,
        isColorBound: false
      },
      naming: {
        name: "Wazir",
        shortName: "w",
        description: "moves one square horizontally or vertically"
      }
    }
  });
  (0,_PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .createPieceDeclaration */ .pN)({
    baseClassRef: class extends _PieceControl__WEBPACK_IMPORTED_MODULE_0__/* .PieceControl */ .V {
      constructor() {
        super();
        this.jumping = dabbabaHops;
      }
    },
    configuration: {
      points: {
        singlesPoints: 1,
        teamsPoints: 1,
        botFFAValue: 1.6,
        botTeamsValue: 1.6
      },
      piece: "S",
      moveGenerationSettings: {
        isComplex: false,
        isJumping: true,
        isSliding: false,
        isPawn: false,
        isColorBound: true
      },
      naming: {
        name: "Dabbaba",
        shortName: "s",
        description: "jumps two squares horizontally or vertically"
      }
    }
  });
  (0,_PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .createPieceDeclaration */ .pN)({
    baseClassRef: class extends _PieceControl__WEBPACK_IMPORTED_MODULE_0__/* .PieceControl */ .V {
      constructor() {
        super();
        this.sliding = dabbabaHops;
      }
    },
    configuration: {
      points: {
        singlesPoints: 4,
        teamsPoints: 4,
        botFFAValue: 5.4,
        botTeamsValue: 5.4
      },
      piece: "T",
      moveGenerationSettings: {
        isComplex: false,
        isJumping: false,
        isSliding: true,
        isPawn: false,
        isColorBound: true
      },
      naming: {
        name: "Dabbaba-rider",
        shortName: "t"
      }
    }
  });
  (0,_PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .createPieceDeclaration */ .pN)({
    baseClassRef: class extends _PieceControl__WEBPACK_IMPORTED_MODULE_0__/* .PieceControl */ .V {
      constructor() {
        super();
        this.jumping = alfilHops;
      }
    },
    configuration: {
      points: {
        singlesPoints: 1,
        teamsPoints: 1,
        botFFAValue: 0.5,
        botTeamsValue: 0.5
      },
      piece: "I",
      moveGenerationSettings: {
        isComplex: false,
        isJumping: true,
        isSliding: false,
        isPawn: false,
        isColorBound: true
      },
      naming: {
        name: "Alfil",
        shortName: "i",
        description: "jumps two squares diagonally"
      }
    }
  });
  (0,_PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .createPieceDeclaration */ .pN)({
    baseClassRef: class extends _PieceControl__WEBPACK_IMPORTED_MODULE_0__/* .PieceControl */ .V {
      constructor() {
        super();
        this.sliding = alfilHops;
      }
    },
    configuration: {
      points: {
        singlesPoints: 3,
        teamsPoints: 3,
        botFFAValue: 4.5,
        botTeamsValue: 4.5
      },
      piece: "J",
      moveGenerationSettings: {
        isComplex: false,
        isJumping: false,
        isSliding: true,
        isPawn: false,
        isColorBound: true
      },
      naming: {
        name: "Alfil-rider",
        shortName: "j"
      }
    }
  });
  (0,_PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .createPieceDeclaration */ .pN)({
    baseClassRef: class extends _PieceControl__WEBPACK_IMPORTED_MODULE_0__/* .PieceControl */ .V {
      constructor() {
        super();
        this.jumping = [...alfilHops, ...dabbabaHops];
      }
    },
    configuration: {
      points: {
        singlesPoints: 3,
        teamsPoints: 3,
        botFFAValue: 3,
        botTeamsValue: 3
      },
      piece: "Y",
      moveGenerationSettings: {
        isComplex: false,
        isJumping: true,
        isSliding: false,
        isPawn: false,
        isColorBound: true
      },
      naming: {
        name: "Alibaba",
        shortName: "y",
        description: "combines alfil and dabbaba"
      }
    }
  });
  (0,_PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .createPieceDeclaration */ .pN)({
    baseClassRef: class extends _PieceControl__WEBPACK_IMPORTED_MODULE_0__/* .PieceControl */ .V {
      constructor() {
        super();
        this.sliding = [...alfilHops, ...dabbabaHops];
      }
    },
    configuration: {
      points: {
        singlesPoints: 6,
        teamsPoints: 6,
        botFFAValue: 6.2,
        botTeamsValue: 6.2
      },
      piece: "Z",
      moveGenerationSettings: {
        isComplex: false,
        isJumping: false,
        isSliding: true,
        isPawn: false,
        isColorBound: true
      },
      naming: {
        name: "Alibaba-rider",
        shortName: "z"
      }
    }
  });
  (0,_PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .createPieceDeclaration */ .pN)({
    baseClassRef: class extends _PieceControl__WEBPACK_IMPORTED_MODULE_0__/* .PieceControl */ .V {
      constructor() {
        super();
        this.jumping = knightHops;
        this.sliding = kingDirections;
      }
    },
    configuration: {
      points: {
        singlesPoints: 12,
        teamsPoints: 12,
        botFFAValue: 17,
        botTeamsValue: 17
      },
      piece: "A",
      moveGenerationSettings: {
        isComplex: false,
        isJumping: true,
        isSliding: true,
        isPawn: false,
        isColorBound: false
      },
      naming: {
        name: "Amazon",
        shortName: "a",
        description: "combines queen and knight"
      }
    }
  });
  (0,_PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .createPieceDeclaration */ .pN)({
    baseClassRef: class extends _PieceControl__WEBPACK_IMPORTED_MODULE_0__/* .PieceControl */ .V {
      constructor() {
        super();
        this.jumping = camelHops;
      }
    },
    configuration: {
      points: {
        singlesPoints: 3,
        teamsPoints: 3,
        botFFAValue: 4.2,
        botTeamsValue: 4.2
      },
      piece: "C",
      moveGenerationSettings: {
        isComplex: false,
        isJumping: true,
        isSliding: false,
        isPawn: false,
        isColorBound: true
      },
      naming: {
        name: "Camel",
        shortName: "c",
        description: "an elongated 3-1 knight"
      }
    }
  });
  (0,_PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .createPieceDeclaration */ .pN)({
    baseClassRef: class extends _PieceControl__WEBPACK_IMPORTED_MODULE_0__/* .PieceControl */ .V {
      constructor() {
        super();
        this.jumping = knightHops;
        this.sliding = orthogonalMoves;
      }
    },
    configuration: {
      points: {
        singlesPoints: 7,
        teamsPoints: 7,
        botFFAValue: 10,
        botTeamsValue: 10
      },
      piece: "E",
      moveGenerationSettings: {
        isComplex: false,
        isJumping: true,
        isSliding: true,
        isPawn: false,
        isColorBound: false
      },
      naming: {
        name: "Chancellor",
        shortName: "a",
        description: "combines rook and knight"
      }
    }
  });
  (0,_PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .createPieceDeclaration */ .pN)({
    baseClassRef: class extends _PieceControl__WEBPACK_IMPORTED_MODULE_0__/* .PieceControl */ .V {
      constructor() {
        super();
        this.jumping = knightHops;
        this.sliding = diagonalMoves;
      }
    },
    configuration: {
      points: {
        singlesPoints: 7,
        teamsPoints: 7,
        botFFAValue: 9,
        botTeamsValue: 9
      },
      piece: "H",
      moveGenerationSettings: {
        isComplex: false,
        isJumping: true,
        isSliding: true,
        isPawn: false,
        isColorBound: false
      },
      naming: {
        name: "Archbishop",
        shortName: "h",
        description: "combines bishop and knight"
      }
    }
  });
  (0,_PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .createPieceDeclaration */ .pN)({
    baseClassRef: class extends _PieceControl__WEBPACK_IMPORTED_MODULE_0__/* .PieceControl */ .V {
      constructor() {
        super();
        this.sliding = knightHops;
      }
    },
    configuration: {
      points: {
        singlesPoints: 7,
        teamsPoints: 7,
        botFFAValue: 10,
        botTeamsValue: 10
      },
      piece: "O",
      moveGenerationSettings: {
        isComplex: false,
        isJumping: false,
        isSliding: true,
        isPawn: false,
        isColorBound: false
      },
      naming: {
        name: "Knight-rider",
        shortName: "o"
      }
    }
  });
  (0,_PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .createPieceDeclaration */ .pN)({
    baseClassRef: class extends _PieceControl__WEBPACK_IMPORTED_MODULE_0__/* .PieceControl */ .V {
      constructor() {
        super();
        this.sliding = camelHops;
      }
    },
    configuration: {
      points: {
        singlesPoints: 7,
        teamsPoints: 7,
        botFFAValue: 8,
        botTeamsValue: 8
      },
      piece: "L",
      moveGenerationSettings: {
        isComplex: false,
        isJumping: false,
        isSliding: true,
        isPawn: false,
        isColorBound: true
      },
      naming: {
        name: "Camel-rider",
        shortName: "l"
      }
    }
  });
  (0,_PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .createPieceDeclaration */ .pN)({
    baseClassRef: class extends _PieceControl__WEBPACK_IMPORTED_MODULE_0__/* .PieceControl */ .V {
      constructor() {
        super();
        this.jumping = [...camelHops, ...knightHops];
      }
    },
    configuration: {
      points: {
        singlesPoints: 5,
        teamsPoints: 5,
        botFFAValue: 8,
        botTeamsValue: 8
      },
      piece: "V",
      moveGenerationSettings: {
        isComplex: false,
        isJumping: true,
        isSliding: false,
        isPawn: false,
        isColorBound: false
      },
      naming: {
        name: "Wildebeest",
        shortName: "v",
        description: "combines camel and knight"
      }
    }
  });
  (0,_PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .createPieceDeclaration */ .pN)({
    baseClassRef: class extends _PieceControl__WEBPACK_IMPORTED_MODULE_0__/* .PieceControl */ .V {
      constructor() {
        super();
        this.hooks.usePerspective = [true, true, true, true];
        this.hooks.usePawnLogic = {};
      }
      getPossibleCells() {
        this.generateJumpAttack({
          displacement: [-1, -1],
          special: _PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .AttackType.AttackOnly */ .hK.AttackOnly
        });
        this.generateJumpAttack({
          displacement: [-1, 1],
          special: _PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .AttackType.AttackOnly */ .hK.AttackOnly
        });
        this.generateSlidingAttack({
          displacement: [-1, 0],
          special: _PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .AttackType.MoveOnly */ .hK.MoveOnly,
          limit: this.baseRankActive ? 2 : 1,
          irreversible: true
        });
        return this.moves;
      }
      rayGenJumpingAttacks() {
        this.generateJumpAttack({
          displacement: [-1, -1],
          special: _PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .AttackType.RayTrace */ .hK.RayTrace
        });
        this.generateJumpAttack({
          displacement: [-1, 1],
          special: _PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .AttackType.RayTrace */ .hK.RayTrace
        });
        var moves = this.moves.slice();
        this.moves = [];
        return moves;
      }
    },
    configuration: {
      points: {
        singlesPoints: 1,
        teamsPoints: 1,
        botFFAValue: 1,
        botTeamsValue: 0.4
      },
      piece: _PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .pawnPieceLetter */ .lH,
      moveGenerationSettings: {
        isComplex: false,
        isJumping: true,
        isSliding: false,
        isPawn: true,
        isColorBound: false
      },
      naming: {
        name: "Pawn",
        shortName: _PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .pawnPieceLetter.toLowerCase */ .lH.toLowerCase()
      }
    }
  });
  (0,_PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .createPieceDeclaration */ .pN)({
    baseClassRef: class extends _PieceControl__WEBPACK_IMPORTED_MODULE_0__/* .PieceControl */ .V {
      constructor() {
        super();
        this.hooks.usePerspective = [true, true, true, true];
        this.hooks.usePawnLogic = {};
      }
      getPossibleCells() {
        this.generateSlidingAttack({
          displacement: [-1, -1],
          special: _PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .AttackType.MoveOnly */ .hK.MoveOnly,
          limit: this.baseRankActive ? 2 : 1,
          irreversible: true
        });
        this.generateSlidingAttack({
          displacement: [-1, 1],
          special: _PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .AttackType.MoveOnly */ .hK.MoveOnly,
          limit: this.baseRankActive ? 2 : 1,
          irreversible: true
        });
        this.generateJumpAttack({
          displacement: [-1, -1],
          special: _PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .AttackType.AttackOnly */ .hK.AttackOnly
        });
        return this.moves;
      }
      rayGenJumpingAttacks() {
        this.generateJumpAttack({
          displacement: [-1, -1],
          special: _PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .AttackType.RayTrace */ .hK.RayTrace
        });
        var moves = this.moves.slice();
        this.moves = [];
        return moves;
      }
    },
    configuration: {
      points: {
        singlesPoints: 1,
        teamsPoints: 1,
        botFFAValue: 1,
        botTeamsValue: 0.4
      },
      piece: "α",
      moveGenerationSettings: {
        isComplex: false,
        isJumping: true,
        isSliding: false,
        isPawn: true,
        isColorBound: false
      },
      naming: {
        name: "Berolina",
        shortName: "alpha",
        description: "a pawn that moves diagonally and captures forwards"
      }
    }
  });
  var stoneGeneralControl = (0,_PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .createPieceDeclaration */ .pN)({
    baseClassRef: class extends _PieceControl__WEBPACK_IMPORTED_MODULE_0__/* .PieceControl */ .V {
      constructor() {
        super();
        this.hooks.usePerspective = [true, true, true, true];
        this.hooks.usePawnLogic = {};
      }
      getPossibleCells() {
        this.generateSlidingAttack({
          displacement: [-1, -1],
          special: _PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .AttackType.MoveOnly */ .hK.MoveOnly,
          limit: this.baseRankActive ? 2 : 0,
          irreversible: true
        });
        this.generateSlidingAttack({
          displacement: [-1, 1],
          special: _PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .AttackType.MoveOnly */ .hK.MoveOnly,
          limit: this.baseRankActive ? 2 : 0,
          irreversible: true
        });
        this.generateJumpAttack({
          displacement: [-1, -1],
          irreversible: true
        });
        this.generateJumpAttack({
          displacement: [-1, 1],
          irreversible: true
        });
        return this.moves;
      }
      rayGenJumpingAttacks() {
        this.generateJumpAttack({
          displacement: [-1, -1],
          special: _PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .AttackType.RayTrace */ .hK.RayTrace
        });
        this.generateJumpAttack({
          displacement: [-1, 1],
          special: _PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .AttackType.RayTrace */ .hK.RayTrace
        });
        var moves = this.moves.slice();
        this.moves = [];
        return moves;
      }
    },
    configuration: {
      points: {
        singlesPoints: 1,
        teamsPoints: 1,
        botFFAValue: 1,
        botTeamsValue: 0.4
      },
      piece: "γ",
      moveGenerationSettings: {
        isComplex: false,
        isJumping: true,
        isSliding: false,
        isPawn: true,
        isColorBound: false
      },
      naming: {
        name: "Stone General",
        shortName: "gamma",
        description: "a pawn that moves and captures diagonally"
      }
    }
  });
  var soldierControl = (0,_PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .createPieceDeclaration */ .pN)({
    baseClassRef: class extends _PieceControl__WEBPACK_IMPORTED_MODULE_0__/* .PieceControl */ .V {
      constructor() {
        super();
        this.hooks.usePerspective = [true, true, true, true];
        this.hooks.usePawnLogic = {};
      }
      getPossibleCells() {
        this.generateSlidingAttack({
          displacement: [-1, 0],
          special: _PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .AttackType.MoveOnly */ .hK.MoveOnly,
          limit: this.baseRankActive ? 2 : 0,
          irreversible: true
        });
        this.generateJumpAttack({
          displacement: [-1, 0],
          irreversible: true
        });
        return this.moves;
      }
      rayGenJumpingAttacks() {
        this.generateJumpAttack({
          displacement: [-1, 0],
          special: _PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .AttackType.RayTrace */ .hK.RayTrace
        });
        var moves = this.moves.slice();
        this.moves = [];
        return moves;
      }
    },
    configuration: {
      points: {
        singlesPoints: 1,
        teamsPoints: 1,
        botFFAValue: 1,
        botTeamsValue: 0.4
      },
      piece: "β",
      moveGenerationSettings: {
        isComplex: false,
        isJumping: true,
        isSliding: false,
        isPawn: true,
        isColorBound: false
      },
      naming: {
        name: "Soldier",
        shortName: "beta",
        description: "a pawn that moves and captures forwards only"
      }
    }
  });
  (0,_PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .createPieceDeclaration */ .pN)({
    baseClassRef: class extends _PieceControl__WEBPACK_IMPORTED_MODULE_0__/* .PieceControl */ .V {
      constructor() {
        super();
        this.hooks.usePerspective = [true, true, true, true];
        this.hooks.usePawnLogic = {};
      }
      getPossibleCells() {
        stoneGeneralControl.getPossibleCells.call(this);
        soldierControl.getPossibleCells.call(this);
        return this.moves;
      }
      rayGenJumpingAttacks() {
        stoneGeneralControl.rayGenJumpingAttacks.call(this);
        soldierControl.rayGenJumpingAttacks.call(this);
        var moves = this.moves.slice();
        this.moves = [];
        return moves;
      }
    },
    configuration: {
      points: {
        singlesPoints: 1,
        teamsPoints: 1,
        botFFAValue: 1,
        botTeamsValue: 0.4
      },
      piece: "δ",
      moveGenerationSettings: {
        isComplex: false,
        isJumping: true,
        isSliding: false,
        isPawn: true,
        isColorBound: false
      },
      naming: {
        name: "Sergeant",
        shortName: "delta",
        description: "a pawn that moves and captures forwards and diagonally"
      }
    }
  });
  var xiangqiHorseControl = (0,_PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .createPieceDeclaration */ .pN)({
    baseClassRef: class extends _PieceControl__WEBPACK_IMPORTED_MODULE_0__/* .PieceControl */ .V {
      constructor() {
        super();
        this.hooks.useTrajectory = [[-1, 0], [1, 0], [0, 1], [0, -1]];
      }
      getPossibleCells() {
        this.generateJumpAttack({
          displacement: [-1, -2],
          special: _PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .AttackType.Normal */ .hK.Normal,
          squareBlockingIndex: 3
        });
        this.generateJumpAttack({
          displacement: [1, -2],
          special: _PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .AttackType.Normal */ .hK.Normal,
          squareBlockingIndex: 3
        });
        this.generateJumpAttack({
          displacement: [-1, 2],
          special: _PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .AttackType.Normal */ .hK.Normal,
          squareBlockingIndex: 2
        });
        this.generateJumpAttack({
          displacement: [1, 2],
          special: _PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .AttackType.Normal */ .hK.Normal,
          squareBlockingIndex: 2
        });
        this.generateJumpAttack({
          displacement: [2, -1],
          special: _PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .AttackType.Normal */ .hK.Normal,
          squareBlockingIndex: 1
        });
        this.generateJumpAttack({
          displacement: [2, 1],
          special: _PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .AttackType.Normal */ .hK.Normal,
          squareBlockingIndex: 1
        });
        this.generateJumpAttack({
          displacement: [-2, -1],
          special: _PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .AttackType.Normal */ .hK.Normal,
          squareBlockingIndex: 0
        });
        this.generateJumpAttack({
          displacement: [-2, 1],
          special: _PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .AttackType.Normal */ .hK.Normal,
          squareBlockingIndex: 0
        });
        return this.moves;
      }
    },
    configuration: {
      points: {
        singlesPoints: 2,
        teamsPoints: 2,
        botFFAValue: 2.1,
        botTeamsValue: 2.1
      },
      piece: "U",
      moveGenerationSettings: {
        isComplex: true,
        isJumping: true,
        isSliding: false,
        isPawn: false,
        isColorBound: false
      },
      naming: {
        name: "Xiangqi horse",
        shortName: "u",
        description: "moves one square orthogonally and then one diagonally"
      }
    }
  });
  (0,_PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .createPieceDeclaration */ .pN)({
    baseClassRef: class extends _PieceControl__WEBPACK_IMPORTED_MODULE_0__/* .PieceControl */ .V {
      constructor() {
        super();
        this.hooks.useTrajectory = [[-1, 0], [1, 0], [0, 1], [0, -1]];
      }
      getPossibleCells() {
        xiangqiHorseControl.getPossibleCells.call(this);
        this.sliding.forEach(displacement => {
          this.generateSlidingAttack({
            displacement
          });
        });
        return this.moves;
      }
    },
    configuration: {
      points: {
        singlesPoints: 6,
        teamsPoints: 6,
        botFFAValue: 7.5,
        botTeamsValue: 7.5
      },
      piece: "Δ",
      moveGenerationSettings: {
        isComplex: true,
        isJumping: true,
        isSliding: true,
        isPawn: false,
        isColorBound: false
      },
      naming: {
        name: "Dragon bishop",
        shortName: "deltaUpper",
        description: "combines bishop and xiangqi horse"
      }
    }
  });
  (0,_PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .createPieceDeclaration */ .pN)({
    baseClassRef: class extends _PieceControl__WEBPACK_IMPORTED_MODULE_0__/* .PieceControl */ .V {
      constructor() {
        super();
        this.hooks.useHopping = true;
        this.sliding = kingDirections;
      }
    },
    configuration: {
      points: {
        singlesPoints: 3,
        teamsPoints: 3,
        botFFAValue: 5.8,
        botTeamsValue: 5.8
      },
      piece: _PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .grasshopperPieceLetter */ .OB,
      moveGenerationSettings: {
        isComplex: true,
        isJumping: true,
        isSliding: false,
        isPawn: false,
        isColorBound: false
      },
      naming: {
        name: "Grasshopper",
        shortName: _PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .grasshopperPieceLetter.toLowerCase */ .OB.toLowerCase(),
        description: "jumps in any direction hopping over the first piece, landing immediately behind it"
      }
    }
  });
};

/***/ }),

/***/ 16703:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AB": () => (/* binding */ nonPlayableValues),
/* harmony export */   "Gf": () => (/* binding */ pieceControlConfigSettings),
/* harmony export */   "IM": () => (/* binding */ verifyPieceLetter),
/* harmony export */   "KN": () => (/* binding */ duckLetter),
/* harmony export */   "OB": () => (/* binding */ grasshopperPieceLetter),
/* harmony export */   "W2": () => (/* binding */ wallPieceLetter),
/* harmony export */   "bB": () => (/* binding */ defaultPieces),
/* harmony export */   "hK": () => (/* binding */ AttackType),
/* harmony export */   "lH": () => (/* binding */ pawnPieceLetter),
/* harmony export */   "md": () => (/* binding */ emptyLetter),
/* harmony export */   "pN": () => (/* binding */ createPieceDeclaration),
/* harmony export */   "t$": () => (/* binding */ dameLetter)
/* harmony export */ });
/* harmony import */ var _GameInformation_GameUnits_GameUnits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9960);
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }

var AttackType = {
  Normal: 0,
  MoveOnly: 1,
  AttackOnly: 2,
  RayGen: 3,
  RayTrace: 4,
  RayTraceLimited: 5
};
var nonPlayableValues = Object.values(_GameInformation_GameUnits_GameUnits__WEBPACK_IMPORTED_MODULE_0__/* .nonPlayablePieces */ .KR);
var verifyPieceLetter = piece => piece in pieceControlConfigSettings || nonPlayableValues.includes(piece);
var pieceControlConfigSettings = nonPlayableValues.reduce((p, n) => _objectSpread(_objectSpread({}, p), {}, {
  [n]: {
    points: {
      singlesPoints: 0,
      teamsPoints: 0,
      botFFAValue: 0,
      botTeamsValue: 0
    },
    piece: n,
    moveGenerationSettings: {
      isComplex: false,
      isJumping: false,
      isSliding: false,
      isPawn: false
    },
    naming: {
      name: "Wall",
      shortName: n
    }
  }
}), {});
var createPieceDeclaration = configuration => {
  pieceControlConfigSettings[configuration.configuration.piece] = _objectSpread(_objectSpread({}, configuration.configuration), {}, {
    construct: configuration.baseClassRef
  });
  return new configuration.baseClassRef();
};
function createPredefinedPieceLetter(letter) {
  return letter;
}
var pawnPieceLetter = createPredefinedPieceLetter("P");
var wallPieceLetter = createPredefinedPieceLetter(_GameInformation_GameUnits_GameUnits__WEBPACK_IMPORTED_MODULE_0__/* .nonPlayablePieces.wall */ .KR.wall);
var grasshopperPieceLetter = createPredefinedPieceLetter("G");
var defaultPieces = {
  queen: createPredefinedPieceLetter("Q"),
  rook: createPredefinedPieceLetter("R"),
  bishop: createPredefinedPieceLetter("B"),
  knight: createPredefinedPieceLetter("N"),
  king: createPredefinedPieceLetter("K")
};
var emptyLetter = createPredefinedPieceLetter("");
var duckLetter = createPredefinedPieceLetter(_GameInformation_GameUnits_GameUnits__WEBPACK_IMPORTED_MODULE_0__/* .nonPlayablePieces.duck */ .KR.duck);
var dameLetter = createPredefinedPieceLetter("D");

/***/ }),

/***/ 75942:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "$": () => (/* binding */ VariantRule),
/* harmony export */   "I": () => (/* binding */ decorateClassWithVariants)
/* harmony export */ });
/* harmony import */ var _client_ts_utils_ObjectUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(35637);
/* harmony import */ var _baseTypes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(18027);
var _Reflect$getPrototype;
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }


var verifyHandlerProperty = (handler, key) => key in handler;
var verifyPrototypeProperty = (superClass, key) => key in superClass.prototype;
class VariantRule {
  constructor() {
    _defineProperty(this, "dependencies", new Map());
    _defineProperty(this, "decorator", void 0);
    _defineProperty(this, "wrappingDecorators", []);
  }
  static initVariantRule(rv) {
    VariantRule.variantRuleList.push(rv);
  }
  initializeBaseHandler(handler) {
    this.decorator = handler;
  }
  initializeWrappingHandler(handler) {
    this.wrappingDecorators.push(handler);
  }
  injectIntoBaseClass(callback) {
    return callback.bind(this.decorator);
  }
  callHandler(method, args) {
    var _iterator = _createForOfIteratorHelper(this.wrappingDecorators),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var decorator = _step.value;
        if (!verifyHandlerProperty(decorator, method)) continue;
        var decoratorMethod = decorator[method];
        if (!(0,_baseTypes__WEBPACK_IMPORTED_MODULE_0__/* .verifyFunctionType */ .fJ)(decoratorMethod)) continue;
        // eslint-disable-next-line @typescript-eslint/no-unsafe-return
        return decoratorMethod.call(decorator, ...args);
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    var decoratorType = this.getDecoratorType();
    if (!verifyPrototypeProperty(decoratorType, method)) throw new Error("Method called to callHandler is not a part of prototype");
    var prototypeMethod = decoratorType.prototype[method];
    if (!(0,_baseTypes__WEBPACK_IMPORTED_MODULE_0__/* .verifyFunctionType */ .fJ)(prototypeMethod)) throw new Error("Method called to callHandler is not a part of prototype");
    // eslint-disable-next-line @typescript-eslint/no-unsafe-return
    return prototypeMethod.call(this.decorator, ...args);
  }
  getInsufficientMaterialData() {
    return {
      isPartiallyDisabled: false,
      isDisabled: false
    };
  }
}
_defineProperty(VariantRule, "variantRuleList", []);
var objectPrototype = new Set(Reflect.ownKeys((_Reflect$getPrototype = Reflect.getPrototypeOf({})) !== null && _Reflect$getPrototype !== void 0 ? _Reflect$getPrototype : []));
function decorateClassWithVariants(baseClass, classReference, variants) {
  if (variants.length === 0) return baseClass;
  var decoratorProperties = (0,_client_ts_utils_ObjectUtils__WEBPACK_IMPORTED_MODULE_1__/* .copyClass */ .lJ)(baseClass, classReference, true);
  var methods = new Set();
  decoratorProperties.initDecoratorSettings = () => {
    // Do nothing, this method only exists for the purpose of being overridden
  };
  methods.add("initDecoratorSettings");
  var lastInheritedMethods = new Set();
  var basePrototype = null;
  var verifyKeyInDecoratorProperties = k => typeof k !== "number" && k in decoratorProperties && !objectPrototype.has(k) && !lastInheritedMethods.has(k);
  while (basePrototype = Reflect.getPrototypeOf((_basePrototype = basePrototype) !== null && _basePrototype !== void 0 ? _basePrototype : baseClass)) {
    var _basePrototype;
    Reflect.ownKeys(basePrototype).forEach(k => {
      if (verifyKeyInDecoratorProperties(k)) {
        decoratorProperties[k] = baseClass[k];
        methods.add(k);
        lastInheritedMethods.add(k);
      }
    });
  }
  var verifyOwnProperty = k => k in baseClass;
  var _iterator2 = _createForOfIteratorHelper(Object.getOwnPropertyNames(baseClass)),
    _step2;
  try {
    var _loop = function _loop() {
      var property = _step2.value;
      if (!verifyOwnProperty(property)) throw new Error("Expected prototype to not be overridden");
      var localProperty = property;
      Object.defineProperty(decoratorProperties, property, {
        get: function get() {
          return baseClass[localProperty];
        },
        set: function set(v) {
          baseClass[localProperty] = v;
        },
        enumerable: true,
        configurable: false
      });
    };
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
      _loop();
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }
  decoratorProperties.__baseClass = baseClass;
  var _iterator3 = _createForOfIteratorHelper(methods),
    _step3;
  try {
    var _loop2 = function _loop2() {
      var method = _step3.value;
      var variantRuleChain = variants.filter(rv => method in rv);
      if (variantRuleChain.length === 0) return "continue";
      variantRuleChain[0].initializeBaseHandler(decoratorProperties);
      var variantDecorator = variantRuleChain.reduce((p, c) => {
        c.initializeBaseHandler(decoratorProperties);
        c.initializeWrappingHandler(p);
        return c;
      });
      if (method in decoratorProperties) {
        var variant = Reflect.get(variantDecorator, method);
        if (typeof variant === "function") {
          var variantFunc = variant;
          if ((0,_baseTypes__WEBPACK_IMPORTED_MODULE_0__/* .verifyFunctionType */ .fJ)(decoratorProperties[method])) {
            Object.defineProperty(decoratorProperties, method, {
              value: function value() {
                // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-call
                return variantFunc.bind(variantDecorator)(...arguments);
              },
              enumerable: false,
              writable: false,
              configurable: false
            });
          }
        }
      }
    };
    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
      var _ret = _loop2();
      if (_ret === "continue") continue;
    }
  } catch (err) {
    _iterator3.e(err);
  } finally {
    _iterator3.f();
  }
  decoratorProperties.initDecoratorSettings();
  return decoratorProperties;
}
(0,_baseTypes__WEBPACK_IMPORTED_MODULE_0__/* .importAll */ .s8)(__webpack_require__(73949));

/***/ }),

/***/ 9987:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AllowPassing": () => (/* binding */ AllowPassing)
/* harmony export */ });
/* harmony import */ var _Board_Board__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(80273);
/* harmony import */ var _MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(37017);
/* harmony import */ var _VariantRule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(75942);
/* harmony import */ var _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(9680);
/* harmony import */ var _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(4127);
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }





var tag = "allowPassing";
class AllowPassing extends _VariantRule__WEBPACK_IMPORTED_MODULE_2__/* .VariantRule */ .$ {
  getDecoratorType() {
    return _Board_Board__WEBPACK_IMPORTED_MODULE_0__/* .Board */ .$;
  }
  getPublicProperties() {
    return {
      parameterValue: true,
      information: {
        name: "Allow Passing",
        description: "Players can pass instead of making a move",
        tag,
        color: _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_3__/* .variantRuleColors.minor */ .p.minor,
        displayIcon: _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_4__/* .chessGlyphIndex.pause */ .w.pause
      }
    };
  }
  matchesPGNDeclaration(match) {
    return /^AllowPassing$/i.test(match);
  }
  serializeToParsingForm() {
    return "AllowPassing";
  }
  isDisabled(_ref) {
    var variantDataRules = _ref.variantDataRules;
    return variantDataRules.giveaway;
  }
  getAllowedInternalMoves() {
    var sideToMove = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.decorator.data.sideToMove;
    var passingMoves = this.decorator.isKingInCheck(sideToMove) ? [] : [{
      type: _MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_1__/* .InternalMoveSignature.Pass */ .Fi.Pass
    }];
    var _iterator = _createForOfIteratorHelper(this.wrappingDecorators),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var decorator = _step.value;
        if (decorator.getAllowedInternalMoves) {
          return [...passingMoves, ...decorator.getAllowedInternalMoves(sideToMove)];
        }
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    return [...passingMoves, ..._Board_Board__WEBPACK_IMPORTED_MODULE_0__/* .Board.prototype.getAllowedInternalMoves.call */ .$.prototype.getAllowedInternalMoves.call(this.decorator, sideToMove)];
  }
}
_VariantRule__WEBPACK_IMPORTED_MODULE_2__/* .VariantRule.initVariantRule */ .$.initVariantRule(AllowPassing);

/***/ }),

/***/ 12546:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AlternativeTeams": () => (/* binding */ AlternativeTeams)
/* harmony export */ });
/* harmony import */ var _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76758);
/* harmony import */ var _Board_Board__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(80273);
/* harmony import */ var _VariantRule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(75942);
/* harmony import */ var _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(9680);
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }




var tag = "alternativeTeams";
class AlternativeTeams extends _VariantRule__WEBPACK_IMPORTED_MODULE_2__/* .VariantRule */ .$ {
  constructor(teammate) {
    super();
    _defineProperty(this, "teammate", void 0);
    if (typeof teammate === "number") {
      this.teammate = teammate;
    } else {
      this.teammate = 2;
    }
  }
  getDecoratorType() {
    return _Board_Board__WEBPACK_IMPORTED_MODULE_1__/* .Board */ .$;
  }
  getPublicProperties() {
    var rbTeams = this.teammate === 1;
    var teamOne = rbTeams ? "Red & Blue" : "Red & Green";
    var teamTwo = rbTeams ? "Yellow & Green" : "Blue & Yellow";
    return {
      parameterValue: this.teammate,
      information: {
        name: "Teams",
        description: "Alternative Teams: ".concat(teamOne, " form a team against ").concat(teamTwo),
        tag,
        color: _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_3__/* .variantRuleColors.autogenous */ .p.autogenous,
        displayIcon: "Đ"
      }
    };
  }
  matchesPGNDeclaration(match) {
    var matchArray = match.match(/^Teammate=(1|3)$/);
    if (matchArray) {
      this.teammate = Number(matchArray[1]);
      return true;
    } else {
      return false;
    }
  }
  serializeToParsingForm() {
    return "Teammate=".concat(this.teammate);
  }
  isDisabled(_ref) {
    var gameType = _ref.gameType;
    return gameType !== _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_0__/* .VariantType.Teams */ .Jy.Teams;
  }
  getParametrizedOptions() {
    return new Map([["Red & Yellow v Blue & Green", 2], ["Red & Blue v Yellow & Green", 1], ["Red & Green v Blue & Yellow", 3]]);
  }
  initDecoratorSettings() {
    var teamSettings = this.decorator.gameType.teamSettings;
    if (this.teammate === 1) {
      teamSettings.firstTeamColors = [true, true, false, false];
      teamSettings.secondTeamColors = [false, false, true, true];
    } else if (this.teammate === 3) {
      teamSettings.firstTeamColors = [true, false, false, true];
      teamSettings.secondTeamColors = [false, true, true, false];
    }
    var _iterator = _createForOfIteratorHelper(this.wrappingDecorators),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var _decorator$initDecora;
        var decorator = _step.value;
        (_decorator$initDecora = decorator.initDecoratorSettings) === null || _decorator$initDecora === void 0 ? void 0 : _decorator$initDecora.call(decorator);
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
  }
}
_VariantRule__WEBPACK_IMPORTED_MODULE_2__/* .VariantRule.initVariantRule */ .$.initVariantRule(AlternativeTeams);

/***/ }),

/***/ 52702:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BarePieceRule": () => (/* binding */ BarePieceRule)
/* harmony export */ });
/* harmony import */ var _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4127);
/* harmony import */ var _Board_Board__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(80273);
/* harmony import */ var _Board_BoardInterface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(29939);
/* harmony import */ var _MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(37017);
/* harmony import */ var _VariantRule__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(75942);
/* harmony import */ var _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(9680);
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }






var tag = "barePieceRule";
class BarePieceRule extends _VariantRule__WEBPACK_IMPORTED_MODULE_4__/* .VariantRule */ .$ {
  getDecoratorType() {
    return _Board_Board__WEBPACK_IMPORTED_MODULE_1__/* .Board */ .$;
  }
  getPublicProperties() {
    return {
      parameterValue: true,
      information: {
        name: "Bare piece rule",
        description: "Players with only one remaining piece are forfeit",
        tag,
        color: _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_5__/* .variantRuleColors.minor */ .p.minor,
        displayIcon: _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_0__/* .chessGlyphIndex.filter */ .w.filter
      }
    };
  }
  matchesPGNDeclaration(match) {
    return /^BarePieceLoses$/i.test(match);
  }
  isDisabled() {
    return false;
  }
  getInsufficientMaterialData() {
    return {
      isPartiallyDisabled: true,
      isDisabled: false
    };
  }
  serializeToParsingForm() {
    return "BarePieceLoses";
  }
  makeMove() {
    var _this$decorator = this.decorator,
      sideToMove = _this$decorator.data.sideToMove,
      board = _this$decorator.board,
      preGeneratedAttacks = _this$decorator.preGeneratedAttacks;
    var results = this.callHandler("makeMove", arguments);
    var playerPieces = this.decorator.getPlayerPieces()[sideToMove];
    if (playerPieces.length === 1) {
      var pieceMovements = preGeneratedAttacks[sideToMove].pieceMovements.get((0,_Board_BoardInterface__WEBPACK_IMPORTED_MODULE_2__/* .stringifyCoordinate */ .Kv)(playerPieces[0]));
      if (pieceMovements) {
        var _iterator = _createForOfIteratorHelper(pieceMovements),
          _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var coordinate = _step.value.move;
            if (board[coordinate[0]][coordinate[1]].isPiece()) {
              return results;
            }
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
        return this.decorator.makeMove([{
          type: _MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_3__/* .InternalMoveSignature.Resign */ .Fi.Resign
        }]);
      }
    }
    return results;
  }
}
_VariantRule__WEBPACK_IMPORTED_MODULE_4__/* .VariantRule.initVariantRule */ .$.initVariantRule(BarePieceRule);

/***/ }),

/***/ 37010:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Blindfold": () => (/* binding */ Blindfold)
/* harmony export */ });
/* harmony import */ var _Board_Board__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(80273);
/* harmony import */ var _Board_BoardInterface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(29939);
/* harmony import */ var _VariantRule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(75942);
/* harmony import */ var _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(9680);
/* harmony import */ var _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(4127);





var tag = "blindfold";
class Blindfold extends _VariantRule__WEBPACK_IMPORTED_MODULE_2__/* .VariantRule */ .$ {
  getDecoratorType() {
    return _Board_Board__WEBPACK_IMPORTED_MODULE_0__/* .Board */ .$;
  }
  getPublicProperties() {
    return {
      parameterValue: true,
      information: {
        name: "Blindfold",
        description: "Pieces are invisible",
        tag,
        color: _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_3__/* .variantRuleColors.visual */ .p.visual,
        displayIcon: _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_4__/* .chessGlyphIndex.blindfold */ .w.blindfold
      }
    };
  }
  matchesPGNDeclaration(match) {
    return /^Blindfold$/i.test(match);
  }
  serializeToParsingForm() {
    return "Blindfold";
  }
  isDisabled(_ref) {
    var variantDataRules = _ref.variantDataRules;
    return variantDataRules.fogOfWar;
  }
  getSquareVisibility() {
    var squareVisibility = this.callHandler("getSquareVisibility", arguments);
    return squareVisibility.map((r, i) => r.map((v, j) => {
      if (this.decorator.board[i][j].isWall()) {
        return v;
      } else {
        return [...v, _Board_BoardInterface__WEBPACK_IMPORTED_MODULE_1__/* .DisplaySettings.Blindfolded */ .Ft.Blindfolded];
      }
    }));
  }
}
_VariantRule__WEBPACK_IMPORTED_MODULE_2__/* .VariantRule.initVariantRule */ .$.initVariantRule(Blindfold);

/***/ }),

/***/ 1953:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CaptureTheKing": () => (/* binding */ CaptureTheKing)
/* harmony export */ });
/* harmony import */ var _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4127);
/* harmony import */ var _Board_Board__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(80273);
/* harmony import */ var _VariantRule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(75942);
/* harmony import */ var _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(9680);




var tag = "captureTheKing";
class CaptureTheKing extends _VariantRule__WEBPACK_IMPORTED_MODULE_2__/* .VariantRule */ .$ {
  getDecoratorType() {
    return _Board_Board__WEBPACK_IMPORTED_MODULE_1__/* .Board */ .$;
  }
  getPublicProperties() {
    return {
      parameterValue: true,
      information: {
        name: "Capture the King",
        description: "To checkmate, kings must be captured",
        tag,
        color: _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_3__/* .variantRuleColors.minor */ .p.minor,
        displayIcon: _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_0__/* .chessGlyphIndex.king */ .w.king
      }
    };
  }
  matchesPGNDeclaration(match) {
    return /^CaptureTheKing$/i.test(match);
  }
  serializeToParsingForm() {
    return "CaptureTheKing";
  }
  isDisabled(_ref) {
    var variantDataRules = _ref.variantDataRules;
    return variantDataRules.giveaway || variantDataRules.taboo;
  }
  getInsufficientMaterialData() {
    return {
      isPartiallyDisabled: true,
      isDisabled: false
    };
  }
  isKingInCheck() {
    return false;
  }
  isTheMoveLegal() {
    return true;
  }
}
_VariantRule__WEBPACK_IMPORTED_MODULE_2__/* .VariantRule.initVariantRule */ .$.initVariantRule(CaptureTheKing);

/***/ }),

/***/ 89506:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Chess960": () => (/* binding */ Chess960)
/* harmony export */ });
/* harmony import */ var _client_ts_logic_BaseInterfaces__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(34355);
/* harmony import */ var _Board_Board__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(80273);
/* harmony import */ var _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(76758);
/* harmony import */ var _VariantRule__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(75942);
/* harmony import */ var _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(9680);
/* harmony import */ var _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(4127);
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }






var tag = "chess960";
class Chess960 extends _VariantRule__WEBPACK_IMPORTED_MODULE_3__/* .VariantRule */ .$ {
  static createBaseChess960mappings() {
    return {
      colorBoundPieces: [2, 5],
      supermajorPieces: [3],
      minorPieces: [1, 6],
      royalPiece: [4],
      edgePieces: [0, 7]
    };
  }
  constructor(positionID) {
    super();
    _defineProperty(this, "positionID", void 0);
    if (typeof positionID === "number") {
      this.positionID = positionID;
    } else {
      this.positionID = -1;
    }
  }
  getDecoratorType() {
    return _Board_Board__WEBPACK_IMPORTED_MODULE_1__/* .Board */ .$;
  }
  getPublicProperties() {
    return {
      parameterValue: this.positionID,
      information: {
        name: "Chess960",
        description: "Initial position with randomly shuffled pieces on home ranks",
        tag,
        color: _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_4__/* .variantRuleColors.startingPosition */ .p.startingPosition,
        displayIcon: _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_5__/* .chessGlyphIndex.chess960 */ .w.chess960
      }
    };
  }
  matchesPGNDeclaration(match) {
    var matchArray = match.match(Chess960.regExp);
    if (matchArray) {
      var newID = Number(matchArray[1]);
      if (newID < 0 || newID > 15760) return false;
      this.positionID = newID;
      return true;
    } else {
      return false;
    }
  }
  serializeToParsingForm() {
    return "Chess960=".concat(this.positionID);
  }
  isDisabled() {
    return false;
  }
  initDecoratorSettings() {
    if (this.positionID === -1) throw new Error("Position ID for Chess960 is not defined");
    var nr = this.positionID;
    var boardSquares = this.decorator.board;
    var rank = Chess960.chess960ranges.findIndex(r => nr >= r[0] && nr <= r[1]);
    if (rank === -1) {
      if (nr > Chess960.legacy.legacy2PThreshold) {
        rank = Chess960.legacy.legacy2PRank;
        nr -= Chess960.legacy.legacy2PTakeaway;
      } else {
        rank = Chess960.legacy.legacy4Prank;
      }
    }
    var pieceArrays = [[], [], [], []];
    var ranks = [13 - rank, rank, rank, 13 - rank];
    pieceArrays[0] = boardSquares[ranks[0]].slice(Chess960.displacement[0], Chess960.displacement[1]);
    pieceArrays[1] = boardSquares.map(row => row[ranks[1]]).slice(Chess960.displacement[0], Chess960.displacement[1]);
    pieceArrays[2] = boardSquares[ranks[2]].slice(Chess960.displacement[0], Chess960.displacement[1]);
    pieceArrays[3] = boardSquares.map(row => row[ranks[3]]).slice(Chess960.displacement[0], Chess960.displacement[1]);
    var walls = pieceArrays.map(a => a.map(p => p.isWall() ? true : false));
    var intersections = [];
    var _iterator = _createForOfIteratorHelper(walls),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var wall = _step.value;
        intersections.push(wall.reduce((p, c, i) => {
          if (c) {
            return p.filter(v => Chess960.pieceMasks[i].includes(v));
          } else return p;
        }, Chess960.c960range));
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    var calcNr = nr - Chess960.chess960ranges[rank][0];
    var positions = [];
    var generatePositionIndexes = calcNr => {
      var colorBoundIndexes = [2 * Math.floor(calcNr % 16 / 4), 1 + 2 * (calcNr % 16 % 4)].sort();
      var supermajorIndex = Math.floor(calcNr / 16) % 6;
      var minorPieceIndexes = Chess960.minorPieceCache[Math.floor(calcNr / 96) % 10];
      var position = {
        colorBoundPieces: Array(8).fill(false),
        supermajorPieces: Array(8).fill(false),
        minorPieces: Array(8).fill(false),
        royalPiece: Array(8).fill(false),
        edgePieces: Array(8).fill(false)
      };
      var edgeSet = false,
        royalSet = false,
        colorDelta = 0,
        majorDelta = 0;
      for (var i = 0; i < _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .boardDimension */ .iJ - Chess960.displacement[0] * 2; i++) {
        if (i === colorBoundIndexes[0] || i === colorBoundIndexes[1]) {
          position.colorBoundPieces[i] = true;
          colorDelta++;
        } else if (i === supermajorIndex + colorDelta) {
          position.supermajorPieces[i] = true;
          majorDelta++;
        } else if (i === minorPieceIndexes[0] + colorDelta + majorDelta || i === minorPieceIndexes[1] + colorDelta + majorDelta) {
          position.minorPieces[i] = true;
        } else {
          position[edgeSet ? royalSet ? "edgePieces" : "royalPiece" : "edgePieces"][i] = true;
          royalSet = edgeSet;
          edgeSet = true;
        }
      }
      return position;
    };
    for (var _i = 0, _intersections = intersections; _i < _intersections.length; _i++) {
      var intersection = _intersections[_i];
      if (intersection.length === 0) return null;
      var calcTempNr = calcNr;
      var cycles = 0;
      while (cycles < 2) {
        if (intersection.includes(calcTempNr)) {
          positions.push(generatePositionIndexes(calcTempNr));
          break;
        } else if (intersection.includes(Chess960.twins[calcTempNr - 1])) {
          positions.push(generatePositionIndexes(Chess960.twins[calcTempNr - 1]));
          break;
        }
        calcTempNr++;
        if (calcTempNr === 960) calcTempNr = 0, cycles++;
      }
      if (cycles === 2) intersections.push([]);
    }
    var fenData = this.decorator.data;
    var royalPieces = fenData.fenOptions.tag("royal");
    var royalOnCorrectRank = royalPieces.map((r, i) => r !== null ? r[(0,_client_ts_logic_BaseInterfaces__WEBPACK_IMPORTED_MODULE_0__/* .getVerticalPlacementModulus */ .ft)(i)] === ranks[i] ? r[(0,_client_ts_logic_BaseInterfaces__WEBPACK_IMPORTED_MODULE_0__/* .getVerticalPlacementModulus */ .ft)(i)] : -1 : -1);
    var replaceRow = player => {
      var pieces = Chess960.createBaseChess960mappings();
      var royal = royalPieces[player];
      if (!royal) return;
      var r = royal[(0,_client_ts_logic_BaseInterfaces__WEBPACK_IMPORTED_MODULE_0__/* .getVerticalPlacementModulus */ .ft)(player)];
      var supermajorOverRoyal = royalOnCorrectRank[player] ? r <= 6 : false;
      for (var i = Chess960.displacement[0]; i < Chess960.displacement[1]; i++) {
        var k = void 0;
        for (k in pieces) {
          if (!Object.prototype.hasOwnProperty.call(pieces, k) || !positions[player][k][i - 3]) continue;
          if (royalOnCorrectRank[player] !== -1 && k === "royalPiece" && r !== i) {
            royal[(0,_client_ts_logic_BaseInterfaces__WEBPACK_IMPORTED_MODULE_0__/* .getVerticalPlacementModulus */ .ft)(player)] = i;
          }
          var mI = supermajorOverRoyal ? intersections[player].length === 960 ? _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .boardDimension */ .iJ - 1 - i : i : i;
          var piece = pieces[k].shift();
          if (piece !== undefined) {
            boardSquares[(0,_client_ts_logic_BaseInterfaces__WEBPACK_IMPORTED_MODULE_0__/* .isVerticalPlacement */ .sC)(player) ? ranks[player] : mI][(0,_client_ts_logic_BaseInterfaces__WEBPACK_IMPORTED_MODULE_0__/* .isVerticalPlacement */ .sC)(player) ? mI : ranks[player]] = pieceArrays[player][piece];
            break;
          }
        }
      }
    };
    var _iterator2 = _createForOfIteratorHelper(_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .colors */ .O9),
      _step2;
    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        var color = _step2.value;
        replaceRow(color);
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
    var _iterator3 = _createForOfIteratorHelper(this.wrappingDecorators),
      _step3;
    try {
      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
        var _decorator$initDecora;
        var decorator = _step3.value;
        (_decorator$initDecora = decorator.initDecoratorSettings) === null || _decorator$initDecora === void 0 ? void 0 : _decorator$initDecora.call(decorator);
      }
    } catch (err) {
      _iterator3.e(err);
    } finally {
      _iterator3.f();
    }
  }
}
_VariantRule__WEBPACK_IMPORTED_MODULE_3__/* .VariantRule.initVariantRule */ .$.initVariantRule(Chess960);
_defineProperty(Chess960, "chess960ranges", [...Array.from({
  length: 9
}, (_, i) => [960 * (i + 1) + 1, 960 + 960 * (i + 1)]), ...Array.from({
  length: 5
}, (_, i) => [10000 + 960 * (i + 1) + 1, 10960 + 960 * (i + 1)])]);
_defineProperty(Chess960, "minorPieceCache", function () {
  var minorPieceCache = [];
  for (var i = 0; i < 4; i++) {
    for (var j = i + 1; j < 5; j++) {
      minorPieceCache.push([i, j]);
    }
  }
  return minorPieceCache;
}());
// prettier-ignore
_defineProperty(Chess960, "pieceMasks", [[404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959], [5, 6, 7, 9, 10, 11, 13, 14, 15, 17, 18, 19, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 49, 50, 51, 53, 54, 55, 57, 58, 59, 61, 62, 63, 65, 66, 67, 69, 70, 71, 73, 74, 75, 77, 78, 79, 81, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95, 101, 102, 103, 105, 106, 107, 109, 110, 111, 113, 114, 115, 129, 130, 131, 145, 146, 147, 161, 162, 163, 177, 178, 179, 197, 198, 199, 201, 202, 203, 205, 206, 207, 209, 210, 211, 225, 226, 227, 241, 242, 243, 257, 258, 259, 273, 274, 275, 293, 294, 295, 297, 298, 299, 301, 302, 303, 305, 306, 307, 321, 322, 323, 337, 338, 339, 353, 354, 355, 369, 370, 371, 421, 422, 423, 425, 426, 427, 429, 430, 431, 437, 438, 439, 441, 442, 443, 445, 446, 447, 453, 454, 455, 457, 458, 459, 461, 462, 463, 469, 470, 471, 473, 474, 475, 477, 478, 479, 517, 518, 519, 521, 522, 523, 525, 526, 527, 533, 534, 535, 537, 538, 539, 541, 542, 543, 549, 550, 551, 553, 554, 555, 557, 558, 559, 565, 566, 567, 569, 570, 571, 573, 574, 575, 613, 614, 615, 617, 618, 619, 621, 622, 623, 629, 630, 631, 633, 634, 635, 637, 638, 639, 645, 646, 647, 649, 650, 651, 653, 654, 655, 661, 662, 663, 665, 666, 667, 669, 670, 671], [4, 5, 6, 7, 20, 21, 22, 23, 36, 37, 38, 39, 52, 53, 54, 55, 68, 69, 70, 71, 84, 85, 86, 87, 100, 101, 102, 103, 116, 117, 118, 119, 132, 133, 134, 135, 148, 149, 150, 151, 164, 165, 166, 167, 180, 181, 182, 183, 196, 197, 198, 199, 212, 213, 214, 215, 228, 229, 230, 231, 244, 245, 246, 247, 260, 261, 262, 263, 276, 277, 278, 279, 292, 293, 294, 295, 308, 309, 310, 311, 324, 325, 326, 327, 340, 341, 342, 343, 356, 357, 358, 359, 372, 373, 374, 375, 388, 389, 390, 391, 404, 405, 406, 407, 420, 421, 422, 423, 436, 437, 438, 439, 452, 453, 454, 455, 468, 469, 470, 471, 484, 485, 486, 487, 500, 501, 502, 503, 516, 517, 518, 519, 532, 533, 534, 535, 548, 549, 550, 551, 564, 565, 566, 567, 580, 581, 582, 583, 596, 597, 598, 599, 612, 613, 614, 615, 628, 629, 630, 631, 644, 645, 646, 647, 660, 661, 662, 663, 676, 677, 678, 679, 692, 693, 694, 695, 708, 709, 710, 711, 724, 725, 726, 727, 740, 741, 742, 743, 756, 757, 758, 759, 772, 773, 774, 775, 788, 789, 790, 791, 804, 805, 806, 807, 820, 821, 822, 823, 836, 837, 838, 839, 852, 853, 854, 855, 868, 869, 870, 871, 884, 885, 886, 887, 900, 901, 902, 903, 916, 917, 918, 919, 932, 933, 934, 935, 948, 949, 950, 951], [16, 20, 34, 35, 38, 39, 40, 44, 58, 59, 62, 63, 112, 116, 130, 131, 134, 135, 136, 140, 154, 155, 158, 159, 208, 212, 226, 227, 230, 231, 232, 236, 250, 251, 254, 255, 304, 308, 322, 323, 326, 327, 328, 332, 346, 347, 350, 351, 400, 404, 418, 419, 422, 423, 424, 428, 442, 443, 446, 447, 496, 500, 514, 515, 518, 519, 520, 524, 538, 539, 542, 543, 592, 596, 610, 611, 614, 615, 616, 620, 634, 635, 638, 639, 688, 692, 706, 707, 710, 711, 712, 716, 730, 731, 734, 735, 784, 788, 802, 803, 806, 807, 808, 812, 826, 827, 830, 831, 880, 884, 898, 899, 902, 903, 904, 908, 922, 923, 926, 927], [14, 15, 30, 31, 46, 47, 62, 63, 66, 67, 70, 71, 76, 77, 82, 83, 86, 87, 92, 93, 110, 111, 126, 127, 142, 143, 158, 159, 162, 163, 166, 167, 172, 173, 178, 179, 182, 183, 188, 189, 194, 195, 198, 199, 204, 205, 210, 211, 214, 215, 220, 221, 226, 227, 230, 231, 236, 237, 240, 241, 244, 245, 256, 257, 260, 261, 272, 273, 276, 277, 290, 291, 294, 295, 300, 301, 306, 307, 310, 311, 316, 317, 322, 323, 326, 327, 332, 333, 336, 337, 340, 341, 352, 353, 356, 357, 368, 369, 372, 373, 398, 399, 414, 415, 430, 431, 446, 447, 450, 451, 454, 455, 460, 461, 466, 467, 470, 471, 476, 477, 482, 483, 486, 487, 492, 493, 498, 499, 502, 503, 508, 509, 514, 515, 518, 519, 524, 525, 528, 529, 532, 533, 544, 545, 548, 549, 560, 561, 564, 565, 578, 579, 582, 583, 588, 589, 594, 595, 598, 599, 604, 605, 610, 611, 614, 615, 620, 621, 624, 625, 628, 629, 640, 641, 644, 645, 656, 657, 660, 661, 672, 673, 676, 677, 688, 689, 692, 693, 768, 769, 772, 773, 784, 785, 788, 789, 864, 865, 868, 869, 880, 881, 884, 885], [2, 6, 10, 14, 18, 22, 26, 30, 34, 38, 42, 46, 50, 54, 58, 62, 66, 70, 74, 78, 82, 86, 90, 94, 98, 102, 106, 110, 114, 118, 122, 126, 130, 134, 138, 142, 146, 150, 154, 158, 162, 166, 170, 174, 178, 182, 186, 190, 194, 198, 202, 206, 210, 214, 218, 222, 226, 230, 234, 238, 242, 246, 250, 254, 258, 262, 266, 270, 274, 278, 282, 286, 290, 294, 298, 302, 306, 310, 314, 318, 322, 326, 330, 334, 338, 342, 346, 350, 354, 358, 362, 366, 370, 374, 378, 382, 386, 390, 394, 398, 402, 406, 410, 414, 418, 422, 426, 430, 434, 438, 442, 446, 450, 454, 458, 462, 466, 470, 474, 478, 482, 486, 490, 494, 498, 502, 506, 510, 514, 518, 522, 526, 530, 534, 538, 542, 546, 550, 554, 558, 562, 566, 570, 574, 578, 582, 586, 590, 594, 598, 602, 606, 610, 614, 618, 622, 626, 630, 634, 638, 642, 646, 650, 654, 658, 662, 666, 670, 674, 678, 682, 686, 690, 694, 698, 702, 706, 710, 714, 718, 722, 726, 730, 734, 738, 742, 746, 750, 754, 758, 762, 766, 770, 774, 778, 782, 786, 790, 794, 798, 802, 806, 810, 814, 818, 822, 826, 830, 834, 838, 842, 846, 850, 854, 858, 862, 866, 870, 874, 878, 882, 886, 890, 894, 898, 902, 906, 910, 914, 918, 922, 926, 930, 934, 938, 942, 946, 950, 954, 958], [192, 193, 194, 196, 197, 198, 200, 201, 202, 208, 209, 210, 212, 213, 214, 216, 217, 218, 224, 225, 226, 228, 229, 230, 232, 233, 234, 240, 241, 242, 244, 245, 246, 248, 249, 250, 291, 295, 299, 307, 311, 315, 323, 327, 331, 339, 343, 347, 355, 359, 363, 368, 369, 370, 372, 373, 374, 376, 377, 378, 480, 481, 482, 484, 485, 486, 488, 489, 490, 496, 497, 498, 500, 501, 502, 504, 505, 506, 512, 513, 514, 516, 517, 518, 520, 521, 522, 528, 529, 530, 532, 533, 534, 536, 537, 538, 579, 583, 587, 595, 599, 603, 611, 615, 619, 627, 631, 635, 643, 647, 651, 656, 657, 658, 660, 661, 662, 664, 665, 666, 672, 673, 674, 676, 677, 678, 680, 681, 682, 688, 689, 690, 692, 693, 694, 696, 697, 698, 704, 705, 706, 708, 709, 710, 712, 713, 714, 720, 721, 722, 724, 725, 726, 728, 729, 730, 771, 775, 779, 787, 791, 795, 803, 807, 811, 819, 823, 827, 835, 839, 843, 848, 849, 850, 852, 853, 854, 856, 857, 858, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 931, 935, 939, 944, 945, 946, 948, 949, 950, 952, 953, 954], [1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 20, 21, 22, 24, 25, 26, 28, 29, 30, 32, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 48, 49, 50, 52, 53, 54, 56, 57, 58, 60, 61, 62, 64, 65, 66, 68, 69, 70, 72, 73, 74, 76, 77, 78, 96, 97, 98, 100, 101, 102, 104, 105, 106, 108, 109, 110, 112, 113, 114, 116, 117, 118, 120, 121, 122, 124, 125, 126, 128, 129, 130, 132, 133, 134, 136, 137, 138, 140, 141, 142, 144, 145, 146, 148, 149, 150, 152, 153, 154, 156, 157, 158, 160, 161, 162, 164, 165, 166, 168, 169, 170, 172, 173, 174, 192, 193, 194, 196, 197, 198, 200, 201, 202, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 224, 225, 226, 228, 229, 230, 232, 233, 234, 236, 237, 238, 240, 241, 242, 244, 245, 246, 248, 249, 250, 252, 253, 254, 256, 257, 258, 260, 261, 262, 264, 265, 266, 268, 269, 270, 384, 385, 386, 388, 389, 390, 392, 393, 394, 396, 397, 398, 400, 401, 402, 404, 405, 406, 408, 409, 410, 412, 413, 414, 416, 417, 418, 420, 421, 422, 424, 425, 426, 428, 429, 430, 432, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 450, 452, 453, 454, 456, 457, 458, 460, 461, 462, 480, 481, 482, 484, 485, 486, 488, 489, 490, 492, 493, 494, 496, 497, 498, 500, 501, 502, 504, 505, 506, 508, 509, 510, 512, 513, 514, 516, 517, 518, 520, 521, 522, 524, 525, 526, 528, 529, 530, 532, 533, 534, 536, 537, 538, 540, 541, 542, 544, 545, 546, 548, 549, 550, 552, 553, 554, 556, 557, 558, 672, 673, 674, 676, 677, 678, 680, 681, 682, 684, 685, 686, 688, 689, 690, 692, 693, 694, 696, 697, 698, 700, 701, 702, 704, 705, 706, 708, 709, 710, 712, 713, 714, 716, 717, 718, 720, 721, 722, 724, 725, 726, 728, 729, 730, 732, 733, 734, 736, 737, 738, 740, 741, 742, 744, 745, 746, 748, 749, 750]]);
_defineProperty(Chess960, "c960range", function () {
  var arr = [...Array(961).keys()];
  arr.shift();
  return arr;
}());
// prettier-ignore
_defineProperty(Chess960, "twins", [959, 955, 951, 947, 958, 954, 950, 946, 957, 953, 949, 945, 956, 952, 948, 944, 943, 939, 935, 931, 942, 938, 934, 930, 941, 937, 933, 929, 940, 936, 932, 928, 927, 923, 919, 915, 926, 922, 918, 914, 925, 921, 917, 913, 924, 920, 916, 912, 911, 907, 903, 899, 910, 906, 902, 898, 909, 905, 901, 897, 908, 904, 900, 896, 895, 891, 887, 883, 894, 890, 886, 882, 893, 889, 885, 881, 892, 888, 884, 880, 879, 875, 871, 867, 878, 874, 870, 866, 877, 873, 869, 865, 876, 872, 868, 864, 863, 859, 855, 851, 862, 858, 854, 850, 861, 857, 853, 849, 860, 856, 852, 848, 847, 843, 839, 835, 846, 842, 838, 834, 845, 841, 837, 833, 844, 840, 836, 832, 831, 827, 823, 819, 830, 826, 822, 818, 829, 825, 821, 817, 828, 824, 820, 816, 815, 811, 807, 803, 814, 810, 806, 802, 813, 809, 805, 801, 812, 808, 804, 800, 799, 795, 791, 787, 798, 794, 790, 786, 797, 793, 789, 785, 796, 792, 788, 784, 783, 779, 775, 771, 782, 778, 774, 770, 781, 777, 773, 769, 780, 776, 772, 768, 671, 667, 663, 659, 670, 666, 662, 658, 669, 665, 661, 657, 668, 664, 660, 656, 655, 651, 647, 643, 654, 650, 646, 642, 653, 649, 645, 641, 652, 648, 644, 640, 639, 635, 631, 627, 638, 634, 630, 626, 637, 633, 629, 625, 636, 632, 628, 624, 623, 619, 615, 611, 622, 618, 614, 610, 621, 617, 613, 609, 620, 616, 612, 608, 607, 603, 599, 595, 606, 602, 598, 594, 605, 601, 597, 593, 604, 600, 596, 592, 591, 587, 583, 579, 590, 586, 582, 578, 589, 585, 581, 577, 588, 584, 580, 576, 383, 379, 375, 371, 382, 378, 374, 370, 381, 377, 373, 369, 380, 376, 372, 368, 367, 363, 359, 355, 366, 362, 358, 354, 365, 361, 357, 353, 364, 360, 356, 352, 351, 347, 343, 339, 350, 346, 342, 338, 349, 345, 341, 337, 348, 344, 340, 336, 335, 331, 327, 323, 334, 330, 326, 322, 333, 329, 325, 321, 332, 328, 324, 320, 319, 315, 311, 307, 318, 314, 310, 306, 317, 313, 309, 305, 316, 312, 308, 304, 303, 299, 295, 291, 302, 298, 294, 290, 301, 297, 293, 289, 300, 296, 292, 288, 767, 763, 759, 755, 766, 762, 758, 754, 765, 761, 757, 753, 764, 760, 756, 752, 751, 747, 743, 739, 750, 746, 742, 738, 749, 745, 741, 737, 748, 744, 740, 736, 735, 731, 727, 723, 734, 730, 726, 722, 733, 729, 725, 721, 732, 728, 724, 720, 719, 715, 711, 707, 718, 714, 710, 706, 717, 713, 709, 705, 716, 712, 708, 704, 703, 699, 695, 691, 702, 698, 694, 690, 701, 697, 693, 689, 700, 696, 692, 688, 687, 683, 679, 675, 686, 682, 678, 674, 685, 681, 677, 673, 684, 680, 676, 672, 575, 571, 567, 563, 574, 570, 566, 562, 573, 569, 565, 561, 572, 568, 564, 560, 559, 555, 551, 547, 558, 554, 550, 546, 557, 553, 549, 545, 556, 552, 548, 544, 543, 539, 535, 531, 542, 538, 534, 530, 541, 537, 533, 529, 540, 536, 532, 528, 527, 523, 519, 515, 526, 522, 518, 514, 525, 521, 517, 513, 524, 520, 516, 512, 511, 507, 503, 499, 510, 506, 502, 498, 509, 505, 501, 497, 508, 504, 500, 496, 495, 491, 487, 483, 494, 490, 486, 482, 493, 489, 485, 481, 492, 488, 484, 480, 287, 283, 279, 275, 286, 282, 278, 274, 285, 281, 277, 273, 284, 280, 276, 272, 271, 267, 263, 259, 270, 266, 262, 258, 269, 265, 261, 257, 268, 264, 260, 256, 255, 251, 247, 243, 254, 250, 246, 242, 253, 249, 245, 241, 252, 248, 244, 240, 239, 235, 231, 227, 238, 234, 230, 226, 237, 233, 229, 225, 236, 232, 228, 224, 223, 219, 215, 211, 222, 218, 214, 210, 221, 217, 213, 209, 220, 216, 212, 208, 207, 203, 199, 195, 206, 202, 198, 194, 205, 201, 197, 193, 204, 200, 196, 192, 479, 475, 471, 467, 478, 474, 470, 466, 477, 473, 469, 465, 476, 472, 468, 464, 463, 459, 455, 451, 462, 458, 454, 450, 461, 457, 453, 449, 460, 456, 452, 448, 447, 443, 439, 435, 446, 442, 438, 434, 445, 441, 437, 433, 444, 440, 436, 432, 431, 427, 423, 419, 430, 426, 422, 418, 429, 425, 421, 417, 428, 424, 420, 416, 415, 411, 407, 403, 414, 410, 406, 402, 413, 409, 405, 401, 412, 408, 404, 400, 399, 395, 391, 387, 398, 394, 390, 386, 397, 393, 389, 385, 396, 392, 388, 384, 191, 187, 183, 179, 190, 186, 182, 178, 189, 185, 181, 177, 188, 184, 180, 176, 175, 171, 167, 163, 174, 170, 166, 162, 173, 169, 165, 161, 172, 168, 164, 160, 159, 155, 151, 147, 158, 154, 150, 146, 157, 153, 149, 145, 156, 152, 148, 144, 143, 139, 135, 131, 142, 138, 134, 130, 141, 137, 133, 129, 140, 136, 132, 128, 127, 123, 119, 115, 126, 122, 118, 114, 125, 121, 117, 113, 124, 120, 116, 112, 111, 107, 103, 99, 110, 106, 102, 98, 109, 105, 101, 97, 108, 104, 100, 96, 95, 91, 87, 83, 94, 90, 86, 82, 93, 89, 85, 81, 92, 88, 84, 80, 79, 75, 71, 67, 78, 74, 70, 66, 77, 73, 69, 65, 76, 72, 68, 64, 63, 59, 55, 51, 62, 58, 54, 50, 61, 57, 53, 49, 60, 56, 52, 48, 47, 43, 39, 35, 46, 42, 38, 34, 45, 41, 37, 33, 44, 40, 36, 32, 31, 27, 23, 19, 30, 26, 22, 18, 29, 25, 21, 17, 28, 24, 20, 16, 15, 11, 7, 3, 14, 10, 6, 2, 13, 9, 5, 1, 12, 8, 4, 0]);
_defineProperty(Chess960, "legacy", {
  legacy2PThreshold: 1000,
  legacy2PRank: 3,
  legacy4Prank: 0,
  legacy2PTakeaway: 6160
});
_defineProperty(Chess960, "displacement", [3, 11]);
_defineProperty(Chess960, "regExp", /Chess960=(\d{1,5})/i);

/***/ }),

/***/ 43210:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Crazyhouse": () => (/* binding */ Crazyhouse)
/* harmony export */ });
/* harmony import */ var _Board_Board__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(80273);
/* harmony import */ var _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(76758);
/* harmony import */ var _VariantRule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(75942);
/* harmony import */ var _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(9680);
/* harmony import */ var _moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(16703);
/* harmony import */ var _FENDataDecorators_FiftyMoveRule__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(83433);
/* harmony import */ var _client_ts_logic_BaseInterfaces__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(34355);
/* harmony import */ var _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(4127);
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }








var tag = "crazyhouse";
class Crazyhouse extends _VariantRule__WEBPACK_IMPORTED_MODULE_2__/* .VariantRule */ .$ {
  constructor() {
    super(...arguments);
    _defineProperty(this, "dependencies", new Map([[_FENDataDecorators_FiftyMoveRule__WEBPACK_IMPORTED_MODULE_5__.FiftyMoveRule, [Infinity]]]));
  }
  getDecoratorType() {
    return _Board_Board__WEBPACK_IMPORTED_MODULE_0__/* .Board */ .$;
  }
  getPublicProperties() {
    return {
      parameterValue: true,
      information: {
        name: "Crazyhouse",
        description: "You can drop pieces from banks",
        tag,
        color: _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_3__/* .variantRuleColors.extending */ .p.extending,
        displayIcon: _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_7__/* .chessGlyphIndex.crazyhouse */ .w.crazyhouse
      }
    };
  }
  matchesPGNDeclaration(match) {
    return /^Crazyhouse$/i.test(match);
  }
  serializeToParsingForm() {
    return "Crazyhouse";
  }
  isDisabled() {
    return false;
  }
  getInsufficientMaterialData() {
    return {
      isPartiallyDisabled: false,
      isDisabled: true
    };
  }
  initDecoratorSettings() {
    this.decorator.data.fenOptions.setTag("areBanksEnabled", [true, true, true, true]);
    var _iterator = _createForOfIteratorHelper(this.wrappingDecorators),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var _decorator$initDecora;
        var decorator = _step.value;
        (_decorator$initDecora = decorator.initDecoratorSettings) === null || _decorator$initDecora === void 0 ? void 0 : _decorator$initDecora.call(decorator);
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
  }
  getDroppingMoves(piece) {
    var color = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.decorator.data.sideToMove;
    if (piece.color !== color) return [];
    var royal = this.decorator.data.fenOptions.tag("royal")[color];
    if (royal && this.decorator.preGeneratedAttacks[color].hoppingPieces[royal[0]][royal[1]]) return [];
    var isPawn = _moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_4__/* .pieceControlConfigSettings */ .Gf[piece.piece].moveGenerationSettings.isPawn;
    var resultingMoveDrops = [];
    var isRY = (0,_client_ts_logic_BaseInterfaces__WEBPACK_IMPORTED_MODULE_6__/* .isVerticalPlacement */ .sC)(color);
    var pawnPromotionRank = this.decorator.variantData.promotionRank === false ? -1 : this.decorator.variantData.promotionRank;
    var pawnBaseRank = this.decorator.data.fenOptions.tag("pawnBaseRank");
    for (var i = 0; i < _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_1__/* .boardDimension */ .iJ; i++) {
      if (isPawn && isRY && (pawnPromotionRank === i || pawnBaseRank === i)) {
        continue;
      }
      for (var j = 0; j < _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_1__/* .boardDimension */ .iJ; j++) {
        if (isPawn && !isRY && (pawnPromotionRank === j || pawnBaseRank === j)) {
          continue;
        }
        var square = this.decorator.board[i][j];
        if (!square.isEmpty()) continue;
        resultingMoveDrops.push({
          piece,
          endCoordinates: [i, j]
        });
      }
    }
    if (this.decorator.isKingInCheck(color)) {
      return resultingMoveDrops.filter(moveDrop => {
        var _this$decorator$makeM = this.decorator.makeMove([moveDrop], true),
          checks = _this$decorator$makeM.checks,
          checkmates = _this$decorator$makeM.checkmates;
        return !checks[color] || checkmates[color] || this.decorator.isKingInCheck(color);
      });
    } else {
      return resultingMoveDrops;
    }
  }
}
_VariantRule__WEBPACK_IMPORTED_MODULE_2__/* .VariantRule.initVariantRule */ .$.initVariantRule(Crazyhouse);

/***/ }),

/***/ 94001:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DuckChess": () => (/* binding */ DuckChess)
/* harmony export */ });
/* harmony import */ var _Board_Board__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(80273);
/* harmony import */ var _MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(37017);
/* harmony import */ var _VariantRule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(75942);
/* harmony import */ var _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(9680);
/* harmony import */ var _CaptureTheKing__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(1953);
/* harmony import */ var _GameInformation_GameUnits_PieceString__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(20915);
/* harmony import */ var _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(76758);
/* harmony import */ var _GameInformation_GameUnits_GameUnits__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(9960);
/* harmony import */ var _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(4127);
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }









var tag = "duckChess";
class DuckChess extends _VariantRule__WEBPACK_IMPORTED_MODULE_2__/* .VariantRule */ .$ {
  constructor() {
    super(...arguments);
    _defineProperty(this, "dependencies", new Map([[_CaptureTheKing__WEBPACK_IMPORTED_MODULE_4__.CaptureTheKing, []]]));
  }
  getDecoratorType() {
    return _Board_Board__WEBPACK_IMPORTED_MODULE_0__/* .Board */ .$;
  }
  getPublicProperties() {
    return {
      parameterValue: true,
      information: {
        name: "Duck Chess",
        description: "The duck must be moved to an empty square after every move",
        tag,
        color: _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_3__/* .variantRuleColors.extending */ .p.extending,
        displayIcon: _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_8__/* .chessGlyphIndex.duck */ .w.duck
      }
    };
  }
  matchesPGNDeclaration(match) {
    return /^DuckChess$/i.test(match);
  }
  serializeToParsingForm() {
    return "DuckChess";
  }
  isDisabled(_ref) {
    var variantDataRules = _ref.variantDataRules;
    return variantDataRules.taboo;
  }
  getLegalMoves(i, j) {
    var moves = this.callHandler("getLegalMoves", arguments);
    var latestMoves = (0,_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_1__/* .getLatestChainedMoves */ .iw)(moves);
    var ducks = [],
      emptySquares = [];
    for (var _i = 0; _i < _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_6__/* .boardDimension */ .iJ; _i++) {
      for (var _j = 0; _j < _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_6__/* .boardDimension */ .iJ; _j++) {
        var pieceString = this.decorator.board[_i][_j];
        if (pieceString.isWall() && pieceString.piece === _GameInformation_GameUnits_GameUnits__WEBPACK_IMPORTED_MODULE_7__/* .nonPlayablePieces.duck */ .KR.duck) {
          ducks.push([_i, _j]);
        } else if (pieceString.isEmpty()) {
          emptySquares.push([_i, _j]);
        }
      }
    }
    var droppingChainedMoves = [];
    var duckChainedMoves = [];
    if (ducks.length === 0) {
      var _iterator = _createForOfIteratorHelper(emptySquares),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var emptySquare = _step.value;
          droppingChainedMoves.push({
            piece: _GameInformation_GameUnits_PieceString__WEBPACK_IMPORTED_MODULE_5__/* .duckPieceString */ .St,
            endCoordinates: emptySquare
          });
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      droppingChainedMoves.push({
        piece: _GameInformation_GameUnits_PieceString__WEBPACK_IMPORTED_MODULE_5__/* .duckPieceString */ .St,
        endCoordinates: [i, j]
      });
    } else {
      var _iterator2 = _createForOfIteratorHelper(ducks),
        _step2;
      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var duck = _step2.value;
          var _iterator3 = _createForOfIteratorHelper(emptySquares),
            _step3;
          try {
            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
              var _emptySquare = _step3.value;
              duckChainedMoves.push({
                startCoordinates: duck,
                endCoordinates: _emptySquare
              });
            }
          } catch (err) {
            _iterator3.e(err);
          } finally {
            _iterator3.f();
          }
          duckChainedMoves.push({
            startCoordinates: duck,
            endCoordinates: [i, j]
          });
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
    }
    var _iterator4 = _createForOfIteratorHelper(latestMoves),
      _step4;
    try {
      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
        var move = _step4.value;
        move.nextChainedMoves = droppingChainedMoves.length > 0 ? droppingChainedMoves : duckChainedMoves;
      }
    } catch (err) {
      _iterator4.e(err);
    } finally {
      _iterator4.f();
    }
    return moves;
  }
}
_VariantRule__WEBPACK_IMPORTED_MODULE_2__/* .VariantRule.initVariantRule */ .$.initVariantRule(DuckChess);

/***/ }),

/***/ 55136:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FogOfWar": () => (/* binding */ FogOfWar)
/* harmony export */ });
/* harmony import */ var _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4127);
/* harmony import */ var _BaseInterfaces__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(34355);
/* harmony import */ var _Board_Board__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(80273);
/* harmony import */ var _Board_BoardInterface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(29939);
/* harmony import */ var _VariantRule__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(75942);
/* harmony import */ var _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(9680);
/* harmony import */ var _CaptureTheKing__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(1953);
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }







var tag = "fogOfWar";
class FogOfWar extends _VariantRule__WEBPACK_IMPORTED_MODULE_4__/* .VariantRule */ .$ {
  constructor() {
    super(...arguments);
    _defineProperty(this, "dependencies", new Map([[_CaptureTheKing__WEBPACK_IMPORTED_MODULE_6__.CaptureTheKing, []]]));
  }
  getDecoratorType() {
    return _Board_Board__WEBPACK_IMPORTED_MODULE_2__/* .Board */ .$;
  }
  getPublicProperties() {
    return {
      parameterValue: true,
      information: {
        name: "Fog of War",
        description: "Players can only see their pieces and the squares they can legally move to",
        tag,
        color: _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_5__/* .variantRuleColors.widespread */ .p.widespread,
        displayIcon: _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_0__/* .chessGlyphIndex.fogOfWar */ .w.fogOfWar
      }
    };
  }
  matchesPGNDeclaration(match) {
    return /^FogOfWar$/i.test(match);
  }
  serializeToParsingForm() {
    return "FogOfWar";
  }
  isDisabled(_ref) {
    var variantDataRules = _ref.variantDataRules;
    return variantDataRules.taboo;
  }
  getSquareVisibility() {
    var currentPlayerMoves = (0,_BaseInterfaces__WEBPACK_IMPORTED_MODULE_1__/* .initializeBoardSquares */ .BD)(() => false);
    var preGeneratedAttacks = this.decorator.preGeneratedAttacks[this.decorator.data.sideToMove];
    var _iterator = _createForOfIteratorHelper(preGeneratedAttacks.pieceMovements),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var _step$value = _slicedToArray(_step.value, 2),
          piece = _step$value[0],
          moves = _step$value[1];
        var startingCoordinate = (0,_Board_BoardInterface__WEBPACK_IMPORTED_MODULE_3__/* .unstringifyCoordinate */ .Xm)(piece);
        currentPlayerMoves[startingCoordinate[0]][startingCoordinate[1]] = true;
        var _iterator2 = _createForOfIteratorHelper(moves),
          _step2;
        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
            var move = _step2.value.move;
            currentPlayerMoves[move[0]][move[1]] = true;
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    for (var _i = 0, _arr = [...preGeneratedAttacks.pieceDrops.pawn, ...preGeneratedAttacks.pieceDrops.piece]; _i < _arr.length; _i++) {
      var drop = _arr[_i];
      currentPlayerMoves[drop.endCoordinates[0]][drop.endCoordinates[1]] = true;
    }
    var squareVisibility = this.callHandler("getSquareVisibility", arguments);
    return squareVisibility.map((r, i) => r.map((v, j) => {
      if (this.decorator.board[i][j].isWall() || currentPlayerMoves[i][j]) {
        return v;
      } else {
        return [...v, _Board_BoardInterface__WEBPACK_IMPORTED_MODULE_3__/* .DisplaySettings.Fogged */ .Ft.Fogged];
      }
    }));
  }
}
_VariantRule__WEBPACK_IMPORTED_MODULE_4__/* .VariantRule.initVariantRule */ .$.initVariantRule(FogOfWar);

/***/ }),

/***/ 66798:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ForcedCapture": () => (/* binding */ ForcedCapture)
/* harmony export */ });
/* harmony import */ var _Board_Board__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(80273);
/* harmony import */ var _Board_BoardInterface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(29939);
/* harmony import */ var _VariantRule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(75942);
/* harmony import */ var _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(9680);
/* harmony import */ var _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(4127);
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }





var tag = "forcedCapture";
class ForcedCapture extends _VariantRule__WEBPACK_IMPORTED_MODULE_2__/* .VariantRule */ .$ {
  getDecoratorType() {
    return _Board_Board__WEBPACK_IMPORTED_MODULE_0__/* .Board */ .$;
  }
  getPublicProperties() {
    return {
      parameterValue: true,
      information: {
        name: "Forced Capture",
        description: "Capturing is always compulsory",
        tag,
        color: _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_3__/* .variantRuleColors.widespread */ .p.widespread,
        displayIcon: _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_4__/* .chessGlyphIndex.target */ .w.target
      }
    };
  }
  matchesPGNDeclaration(match) {
    return /^ForcedCapture$/i.test(match);
  }
  serializeToParsingForm() {
    return "ForcedCapture";
  }
  isDisabled() {
    return false;
  }
  getInsufficientMaterialData() {
    return {
      isPartiallyDisabled: true,
      isDisabled: false
    };
  }
  pregenerateAttacks() {
    var _this$decorator = this.decorator,
      sideToMove = _this$decorator.data.sideToMove,
      board = _this$decorator.board,
      preGeneratedAttacks = _this$decorator.preGeneratedAttacks;
    this.callHandler("pregenerateAttacks", arguments);
    var _iterator = _createForOfIteratorHelper(this.decorator.getPlayerPieces()[sideToMove]),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var piece = _step.value;
        var moves = preGeneratedAttacks[sideToMove].pieceMovements.get((0,_Board_BoardInterface__WEBPACK_IMPORTED_MODULE_1__/* .stringifyCoordinate */ .Kv)(piece));
        if (moves) {
          var _iterator2 = _createForOfIteratorHelper(moves),
            _step2;
          try {
            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
              var coordinate = _step2.value.move;
              if (board[coordinate[0]][coordinate[1]].isPiece()) {
                preGeneratedAttacks[sideToMove].variantRuleCache.hasCaptures = true;
                return;
              }
            }
          } catch (err) {
            _iterator2.e(err);
          } finally {
            _iterator2.f();
          }
        }
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    preGeneratedAttacks[sideToMove].variantRuleCache.hasCaptures = false;
  }
  isTheMoveLegal(_, moveData) {
    var isCapturing = this.decorator.data.getCapturedPieces(moveData).length > 0;
    if (!isCapturing && this.decorator.preGeneratedAttacks[this.decorator.data.sideToMove].variantRuleCache.hasCaptures) return false;
    return this.callHandler("isTheMoveLegal", arguments);
  }
}
_VariantRule__WEBPACK_IMPORTED_MODULE_2__/* .VariantRule.initVariantRule */ .$.initVariantRule(ForcedCapture);

/***/ }),

/***/ 83543:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Anonymous": () => (/* binding */ Anonymous),
/* harmony export */   "SelfPartner": () => (/* binding */ SelfPartner),
/* harmony export */   "SemiAnonymous": () => (/* binding */ SemiAnonymous)
/* harmony export */ });
/* harmony import */ var _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4127);
/* harmony import */ var _utils_ArrayUtils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(34092);
/* harmony import */ var _Board_Board__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(80273);
/* harmony import */ var _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(76758);
/* harmony import */ var _GameInformation_GameUnits_GameUnits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(9960);
/* harmony import */ var _VariantRule__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(75942);
/* harmony import */ var _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(9680);
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }







var tag = "anonymous";
class Anonymous extends _VariantRule__WEBPACK_IMPORTED_MODULE_4__/* .VariantRule */ .$ {
  getDecoratorType() {
    return _Board_Board__WEBPACK_IMPORTED_MODULE_1__/* .Board */ .$;
  }
  getPublicProperties() {
    return {
      parameterValue: true,
      information: {
        name: "Anonymous",
        description: "Players' names and ratings are hidden",
        tag,
        color: _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_5__/* .variantRuleColors.metadata */ .p.metadata,
        displayIcon: _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_0__/* .chessGlyphIndex.userInformation */ .w.userInformation
      }
    };
  }
  matchesPGNDeclaration(match) {
    return /^Anonymous$/i.test(match);
  }
  serializeToParsingForm() {
    return "Anonymous";
  }
  isDisabled() {
    return false;
  }
  initDecoratorSettings() {
    for (var i = 0; i < _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .totalPlayers */ .q3; i++) {
      this.decorator.gameData.players[i].name = "Anonymous";
      this.decorator.gameData.players[i].elo = undefined;
    }
    var _iterator = _createForOfIteratorHelper(this.wrappingDecorators),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var _decorator$initDecora;
        var decorator = _step.value;
        (_decorator$initDecora = decorator.initDecoratorSettings) === null || _decorator$initDecora === void 0 ? void 0 : _decorator$initDecora.call(decorator);
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
  }
}
_VariantRule__WEBPACK_IMPORTED_MODULE_4__/* .VariantRule.initVariantRule */ .$.initVariantRule(Anonymous);
var semiAnonTag = "semiAnonymous";
class SemiAnonymous extends _VariantRule__WEBPACK_IMPORTED_MODULE_4__/* .VariantRule */ .$ {
  getDecoratorType() {
    return _Board_Board__WEBPACK_IMPORTED_MODULE_1__/* .Board */ .$;
  }
  getPublicProperties() {
    return {
      parameterValue: true,
      information: {
        name: "Semi-Anonymous",
        description: "Players's colors are hidden",
        tag: semiAnonTag,
        color: _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_5__/* .variantRuleColors.metadata */ .p.metadata,
        displayIcon: _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_0__/* .chessGlyphIndex.userExtraInformation */ .w.userExtraInformation
      }
    };
  }
  matchesPGNDeclaration(match) {
    return /^Semi-Anonymous$/i.test(match);
  }
  serializeToParsingForm() {
    return "Semi-Anonymous";
  }
  isDisabled() {
    return false;
  }
  initDecoratorSettings() {
    (0,_utils_ArrayUtils__WEBPACK_IMPORTED_MODULE_6__/* .shuffleArray */ .Sy)(this.decorator.gameData.players);
    var _iterator2 = _createForOfIteratorHelper(this.wrappingDecorators),
      _step2;
    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        var _decorator$initDecora2;
        var decorator = _step2.value;
        (_decorator$initDecora2 = decorator.initDecoratorSettings) === null || _decorator$initDecora2 === void 0 ? void 0 : _decorator$initDecora2.call(decorator);
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
  }
}
_VariantRule__WEBPACK_IMPORTED_MODULE_4__/* .VariantRule.initVariantRule */ .$.initVariantRule(SemiAnonymous);
var spTag = "selfPartner";
class SelfPartner extends _VariantRule__WEBPACK_IMPORTED_MODULE_4__/* .VariantRule */ .$ {
  getDecoratorType() {
    return _Board_Board__WEBPACK_IMPORTED_MODULE_1__/* .Board */ .$;
  }
  getPublicProperties() {
    return {
      parameterValue: true,
      information: {
        name: "Self-Partner",
        description: "Both sides of the team were played by one player",
        tag: spTag,
        color: _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_5__/* .variantRuleColors.metadata */ .p.metadata,
        displayIcon: _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_0__/* .chessGlyphIndex.selfPartner */ .w.selfPartner
      }
    };
  }
  matchesPGNDeclaration(match) {
    return /^SelfPartner$/i.test(match);
  }
  serializeToParsingForm() {
    return "SelfPartner";
  }
  isDisabled(_ref) {
    var gameType = _ref.gameType,
      fenTags = _ref.fenTags;
    return gameType !== _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .VariantType.Teams */ .Jy.Teams || fenTags.resigned.value.filter(Boolean).length !== 0;
  }
  initDecoratorSettings() {
    var _iterator3 = _createForOfIteratorHelper(this.wrappingDecorators),
      _step3;
    try {
      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
        var _decorator$initDecora3;
        var decorator = _step3.value;
        (_decorator$initDecora3 = decorator.initDecoratorSettings) === null || _decorator$initDecora3 === void 0 ? void 0 : _decorator$initDecora3.call(decorator);
      }
    } catch (err) {
      _iterator3.e(err);
    } finally {
      _iterator3.f();
    }
    var gameType = this.decorator.gameType;
    var firstTeamPlayer = gameType.teamSettings.firstTeamColors.indexOf(true),
      secondTeamPlayer = gameType.teamSettings.secondTeamColors.indexOf(true);
    if ((0,_GameInformation_GameUnits_GameUnits__WEBPACK_IMPORTED_MODULE_3__/* .verifyNumericColor */ .O3)(firstTeamPlayer)) {
      this.decorator.gameData.players[gameType.getTeammateColor(firstTeamPlayer)].name = this.decorator.gameData.players[firstTeamPlayer].name;
    }
    if ((0,_GameInformation_GameUnits_GameUnits__WEBPACK_IMPORTED_MODULE_3__/* .verifyNumericColor */ .O3)(secondTeamPlayer)) {
      this.decorator.gameData.players[gameType.getTeammateColor(secondTeamPlayer)].name = this.decorator.gameData.players[secondTeamPlayer].name;
    }
  }
}
_VariantRule__WEBPACK_IMPORTED_MODULE_4__/* .VariantRule.initVariantRule */ .$.initVariantRule(SelfPartner);

/***/ }),

/***/ 23681:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Ghostboard": () => (/* binding */ Ghostboard)
/* harmony export */ });
/* harmony import */ var _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4127);
/* harmony import */ var _Board_Board__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(80273);
/* harmony import */ var _Board_BoardInterface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(29939);
/* harmony import */ var _VariantRule__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(75942);
/* harmony import */ var _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(9680);





var tag = "ghostboard";
class Ghostboard extends _VariantRule__WEBPACK_IMPORTED_MODULE_3__/* .VariantRule */ .$ {
  getDecoratorType() {
    return _Board_Board__WEBPACK_IMPORTED_MODULE_1__/* .Board */ .$;
  }
  getPublicProperties() {
    return {
      parameterValue: true,
      information: {
        name: "Ghostboard",
        description: "Board, clocks and players are invisible",
        tag,
        color: _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_4__/* .variantRuleColors.visual */ .p.visual,
        displayIcon: _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_0__/* .chessGlyphIndex.crossedBinoculars */ .w.crossedBinoculars
      }
    };
  }
  matchesPGNDeclaration(match) {
    return /^Ghostboard$/i.test(match);
  }
  serializeToParsingForm() {
    return "Ghostboard";
  }
  isDisabled() {
    return false;
  }
  getSquareVisibility() {
    var squareVisibility = this.callHandler("getSquareVisibility", arguments);
    return squareVisibility.map(r => r.map(v => [...v, _Board_BoardInterface__WEBPACK_IMPORTED_MODULE_2__/* .DisplaySettings.Ghosted */ .Ft.Ghosted]));
  }
}
_VariantRule__WEBPACK_IMPORTED_MODULE_3__/* .VariantRule.initVariantRule */ .$.initVariantRule(Ghostboard);

/***/ }),

/***/ 4214:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ParadigmChess30": () => (/* binding */ ParadigmChess30)
/* harmony export */ });
/* harmony import */ var _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4127);
/* harmony import */ var _Board_Board__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(80273);
/* harmony import */ var _VariantRule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(75942);
/* harmony import */ var _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(9680);
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }




var tag = "paradigmChess30";
class ParadigmChess30 extends _VariantRule__WEBPACK_IMPORTED_MODULE_2__/* .VariantRule */ .$ {
  constructor(positionId) {
    super();
    _defineProperty(this, "preMethodExecution", false);
    _defineProperty(this, "positionId", void 0);
    if (typeof positionId === "number") {
      this.positionId = positionId;
    } else {
      this.positionId = -1;
    }
  }
  getPublicProperties() {
    return {
      parameterValue: this.positionId,
      information: {
        name: "Paradigm Chess30",
        description: "Paradigm Chess30: Dragon bishops combine the movement of bishop and xiangqi horse. 30 semi-random starting positions",
        tag,
        color: _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_3__/* .variantRuleColors.startingPosition */ .p.startingPosition,
        displayIcon: _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_0__/* .chessGlyphIndex.bishop */ .w.bishop
      }
    };
  }
  getDecoratorType() {
    return _Board_Board__WEBPACK_IMPORTED_MODULE_1__/* .Board */ .$;
  }
  matchesPGNDeclaration(match) {
    var matchArray = match.match(/^ParadigmChess30=((\d{1,3}))$/i);
    if (matchArray) {
      var newID = Number(matchArray[1]);
      if (newID < 0 || newID > 450) return false;
      this.positionId = newID;
      return true;
    } else return false;
  }
  serializeToParsingForm() {
    return "ParadigmChess30=".concat(this.positionId);
  }
  isDisabled() {
    return false;
  }
  getInformation() {
    return {
      name: "Paradigm Chess30",
      description: "Paradigm Chess30: Dragon bishops combine the movement of bishop and xiangqi horse. 30 semi-random starting positions",
      tag
    };
  }
  initDecoratorSettings() {
    if (this.positionId === -1) throw new Error("Position ID for Paradigm Chess30 is not defined");
    var nr = this.positionId;
    var boardSquares = this.decorator.board;
    var data = this.decorator.data;
    var rank = ParadigmChess30.paradigmRanges.findIndex(r => nr >= r[0] && nr <= r[1]);
    if (rank === -1) {
      rank = ParadigmChess30.legacy.twoPlayerRank;
      nr += ParadigmChess30.legacy.twoPlayerAdjustment;
    }
    var calcNr = nr - ParadigmChess30.paradigmRanges[rank][0];
    var ranks = [13 - rank, rank, rank, 13 - rank];
    var pieceArrays = [[], [], [], []];
    pieceArrays[0] = boardSquares[ranks[0]].slice(4, 10);
    pieceArrays[1] = boardSquares.map(row => row[ranks[1]]).slice(4, 10);
    pieceArrays[2] = boardSquares[ranks[2]].slice(4, 10);
    pieceArrays[3] = boardSquares.map(row => row[ranks[3]]).slice(4, 10);
    var royalPieces = data.fenOptions.tag("royal"),
      dead = data.fenOptions.tag("dead");
    var replaceRow = player => {
      var _royalPieces$player;
      var r = (_royalPieces$player = royalPieces[player]) === null || _royalPieces$player === void 0 ? void 0 : _royalPieces$player[player % 2 === 0 ? 1 : 0];
      var pieceCoordinates = [[5, 8], [4, 9], [r === undefined || r >= 7 ? 6 : 7]];
      var moveCoordinate = (i, iter) => {
        var _pieceCoordinates$i$s;
        if (dead[player]) return;
        var coordinateA = player % 2 === 0 ? ranks[player] : iter;
        var coordinateB = player % 2 === 0 ? iter : ranks[player];
        if (pieceArrays[player][pieceCoordinates[i][0] - 4].isWall() || boardSquares[coordinateA][coordinateB].isWall()) return;
        royalPieces.some(r => {
          if (r && r[0] === coordinateA && r[1] === coordinateB) {
            r[0] = coordinateB, r[1] = coordinateA;
            return true;
          }
          return false;
        });
        boardSquares[coordinateA][coordinateB] = pieceArrays[player][((_pieceCoordinates$i$s = pieceCoordinates[i].shift()) !== null && _pieceCoordinates$i$s !== void 0 ? _pieceCoordinates$i$s : 4) - 4];
      };
      var c = 0;
      var rp = r === undefined || r >= 7 ? 7 : 6;
      var permutations = rp === 6 ? ParadigmChess30.permutations[calcNr].slice().reverse() : ParadigmChess30.permutations[calcNr];
      for (var i = 4; i < 10; i++) {
        if (i === rp) continue;
        moveCoordinate(permutations[c++], i);
      }
    };
    for (var i = 0; i < 4; i++) replaceRow(i);
    var _iterator = _createForOfIteratorHelper(this.wrappingDecorators),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var _decorator$initDecora;
        var decorator = _step.value;
        (_decorator$initDecora = decorator.initDecoratorSettings) === null || _decorator$initDecora === void 0 ? void 0 : _decorator$initDecora.call(decorator);
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
  }
}
_VariantRule__WEBPACK_IMPORTED_MODULE_2__/* .VariantRule.initVariantRule */ .$.initVariantRule(ParadigmChess30);
_defineProperty(ParadigmChess30, "paradigmRanges", [...Array.from({
  length: 14
}, (_, i) => [30 * (i + 1) + 1, 30 + 30 * (i + 1)])]);
// 0 = color bound, 1 = minor, 2 = major
_defineProperty(ParadigmChess30, "permutations", [[0, 0, 1, 1, 2], [0, 0, 1, 2, 1], [0, 0, 2, 1, 1], [0, 1, 0, 1, 2], [0, 1, 0, 2, 1], [0, 1, 1, 0, 2], [0, 1, 1, 2, 0], [0, 1, 2, 0, 1], [0, 1, 2, 1, 0], [0, 2, 0, 1, 1], [0, 2, 1, 0, 1], [0, 2, 1, 1, 0], [1, 0, 0, 1, 2], [1, 0, 0, 2, 1], [1, 0, 1, 0, 2], [1, 0, 1, 2, 0], [1, 0, 2, 0, 1], [1, 0, 2, 1, 0], [1, 1, 0, 0, 2], [1, 1, 0, 2, 0], [1, 1, 2, 0, 0], [1, 2, 0, 0, 1], [1, 2, 0, 1, 0], [1, 2, 1, 0, 0], [2, 0, 0, 1, 1], [2, 0, 1, 0, 1], [2, 0, 1, 1, 0], [2, 1, 0, 0, 1], [2, 1, 0, 1, 0], [2, 1, 1, 0, 0]]);
_defineProperty(ParadigmChess30, "legacy", {
  twoPlayerRank: 3,
  twoPlayerAdjustment: 30 * 4
});

/***/ }),

/***/ 97148:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PiecesFaceCenter": () => (/* binding */ PiecesFaceCenter)
/* harmony export */ });
/* harmony import */ var _Board_Board__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(80273);
/* harmony import */ var _Board_BoardInterface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(29939);
/* harmony import */ var _VariantRule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(75942);
/* harmony import */ var _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(9680);
/* harmony import */ var _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(4127);





var tag = "piecesFaceCenter";
class PiecesFaceCenter extends _VariantRule__WEBPACK_IMPORTED_MODULE_2__/* .VariantRule */ .$ {
  getDecoratorType() {
    return _Board_Board__WEBPACK_IMPORTED_MODULE_0__/* .Board */ .$;
  }
  getPublicProperties() {
    return {
      parameterValue: true,
      information: {
        name: "Pieces Face Center",
        description: "Pieces are rotated to face center",
        tag,
        color: _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_3__/* .variantRuleColors.visual */ .p.visual,
        displayIcon: _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_4__/* .chessGlyphIndex.pawn3dLarge */ .w.pawn3dLarge
      }
    };
  }
  matchesPGNDeclaration(match) {
    return /^PiecesFaceCenter$/i.test(match);
  }
  serializeToParsingForm() {
    return "PiecesFaceCenter";
  }
  isDisabled() {
    return false;
  }
  getSquareVisibility() {
    var squareVisibility = this.callHandler("getSquareVisibility", arguments);
    return squareVisibility.map((r, i) => r.map((v, j) => {
      if (!this.decorator.board[i][j].isPiece()) {
        return v;
      } else {
        return [...v, _Board_BoardInterface__WEBPACK_IMPORTED_MODULE_1__/* .DisplaySettings.PieceFacesCenter */ .Ft.PieceFacesCenter];
      }
    }));
  }
}
_VariantRule__WEBPACK_IMPORTED_MODULE_2__/* .VariantRule.initVariantRule */ .$.initVariantRule(PiecesFaceCenter);

/***/ }),

/***/ 33340:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SeirawanSetup": () => (/* binding */ SeirawanSetup)
/* harmony export */ });
/* harmony import */ var _Board_Board__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(80273);
/* harmony import */ var _Board_BoardInterface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(29939);
/* harmony import */ var _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(76758);
/* harmony import */ var _MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(37017);
/* harmony import */ var _VariantRule__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(75942);
/* harmony import */ var _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(9680);
/* harmony import */ var _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(4127);
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }







var tag = "seirawanSetup";
class SeirawanSetup extends _VariantRule__WEBPACK_IMPORTED_MODULE_4__/* .VariantRule */ .$ {
  getDecoratorType() {
    return _Board_Board__WEBPACK_IMPORTED_MODULE_0__/* .Board */ .$;
  }
  getPublicProperties() {
    return {
      parameterValue: true,
      information: {
        name: "Seirawan Setup",
        description: "When moving a piece for the first time, a piece from the bank can be placed on the vacated square, as part of the move",
        tag,
        color: _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_5__/* .variantRuleColors.extending */ .p.extending,
        displayIcon: _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_6__/* .chessGlyphIndex.pieceMeal */ .w.pieceMeal
      }
    };
  }
  matchesPGNDeclaration(match) {
    return /^SeirawanSetup$/i.test(match);
  }
  serializeToParsingForm() {
    return "SeirawanSetup";
  }
  isDisabled(_ref) {
    var variantDataRules = _ref.variantDataRules;
    return variantDataRules.crazyhouse || variantDataRules.setupChess !== false;
  }
  initDecoratorSettings() {
    var fenOptions = this.decorator.data.fenOptions;
    var areBanksEnabled = fenOptions.tag("areBanksEnabled"),
      dead = fenOptions.tag("dead"),
      seirawanDrops = fenOptions.tag("seirawanDrops"),
      bank = fenOptions.tag("bank");
    var _iterator = _createForOfIteratorHelper(_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .colors */ .O9),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var color = _step.value;
        if (!dead[color] && seirawanDrops[color].size > 0 && bank[color].size > 0) {
          areBanksEnabled[color] = true;
        }
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    var _iterator2 = _createForOfIteratorHelper(this.wrappingDecorators),
      _step2;
    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        var _decorator$initDecora;
        var decorator = _step2.value;
        (_decorator$initDecora = decorator.initDecoratorSettings) === null || _decorator$initDecora === void 0 ? void 0 : _decorator$initDecora.call(decorator);
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
  }
  makeMove(move) {
    var _this$decorator$data = this.decorator.data,
      fenOptions = _this$decorator$data.fenOptions,
      sideToMove = _this$decorator$data.sideToMove;
    var areBanksEnabled = fenOptions.tag("areBanksEnabled"),
      seirawanDrops = fenOptions.tag("seirawanDrops"),
      bank = fenOptions.tag("bank");
    var disabledIndex = false;
    if ((0,_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_3__/* .verifyStandardMove */ .$j)(move[0])) {
      seirawanDrops[sideToMove].delete((0,_Board_BoardInterface__WEBPACK_IMPORTED_MODULE_1__/* .stringifyCoordinate */ .Kv)(move[0].startCoordinates));
      if (seirawanDrops[sideToMove].size === 0 || bank[sideToMove].size === 0) {
        disabledIndex = true;
      }
    }
    var returnValue = this.callHandler("makeMove", arguments);
    if (disabledIndex) {
      seirawanDrops[sideToMove].clear();
      bank[sideToMove].clear();
      areBanksEnabled[sideToMove] = false;
    }
    return returnValue;
  }
  getLegalMoves(i, j) {
    var _this$decorator$data2 = this.decorator.data,
      fenOptions = _this$decorator$data2.fenOptions,
      sideToMove = _this$decorator$data2.sideToMove;
    var seirawanDrops = fenOptions.tag("seirawanDrops"),
      bank = fenOptions.tag("bank");
    var startCoordinates = [i, j];
    var stringifiedCoordinate = (0,_Board_BoardInterface__WEBPACK_IMPORTED_MODULE_1__/* .stringifyCoordinate */ .Kv)(startCoordinates);
    var coordinate = [...seirawanDrops[sideToMove]].find(c => c === stringifiedCoordinate);
    var validateWithDrops = bank[sideToMove].size !== 0 && coordinate !== undefined;
    var moves = this.callHandler("getLegalMoves", arguments);
    var continuations = [];
    var _iterator3 = _createForOfIteratorHelper(bank[sideToMove].keys()),
      _step3;
    try {
      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
        var piece = _step3.value;
        continuations.push({
          piece,
          endCoordinates: startCoordinates
        });
      }
    } catch (err) {
      _iterator3.e(err);
    } finally {
      _iterator3.f();
    }
    if (validateWithDrops && (0,_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_3__/* .verifyRequiredMove */ .nc)(continuations)) {
      var _iterator4 = _createForOfIteratorHelper(moves),
        _step4;
      try {
        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
          var move = _step4.value;
          move.nextChainedMoves = continuations;
        }
      } catch (err) {
        _iterator4.e(err);
      } finally {
        _iterator4.f();
      }
    }
    return moves;
  }
}
_VariantRule__WEBPACK_IMPORTED_MODULE_4__/* .VariantRule.initVariantRule */ .$.initVariantRule(SeirawanSetup);

/***/ }),

/***/ 73401:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SelfCheck": () => (/* binding */ SelfCheck)
/* harmony export */ });
/* harmony import */ var _Board_Board__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(80273);
/* harmony import */ var _Board_BoardInterface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(29939);
/* harmony import */ var _VariantRule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(75942);
/* harmony import */ var _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(9680);
/* harmony import */ var _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(4127);
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }





var tag = "selfCheck";
class SelfCheck extends _VariantRule__WEBPACK_IMPORTED_MODULE_2__/* .VariantRule */ .$ {
  getDecoratorType() {
    return _Board_Board__WEBPACK_IMPORTED_MODULE_0__/* .Board */ .$;
  }
  getPublicProperties() {
    return {
      parameterValue: true,
      information: {
        name: "Self-check",
        description: "Self-checks cost lives. Checkmate yourself to earn points",
        tag,
        color: _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_3__/* .variantRuleColors.minor */ .p.minor,
        displayIcon: _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_4__/* .chessGlyphIndex.donut */ .w.donut
      }
    };
  }
  matchesPGNDeclaration(match) {
    return /^SelfCheck$/i.test(match);
  }
  serializeToParsingForm() {
    return "SelfCheck";
  }
  isDisabled(_ref) {
    var variantDataRules = _ref.variantDataRules;
    return !variantDataRules.nCheck || !variantDataRules.captureTheKing;
  }
  getCurrentChecks() {
    var baseColor = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.decorator.data.sideToMove;
    var _this$decorator = this.decorator,
      _this$decorator$data = _this$decorator.data,
      fenOptions = _this$decorator$data.fenOptions,
      sideToMove = _this$decorator$data.sideToMove,
      preGeneratedAttacks = _this$decorator.preGeneratedAttacks;
    var baseChecks = this.callHandler("getCurrentChecks", arguments);
    var royal = fenOptions.tag("royal")[baseColor];
    var newCoordinates = [];
    if (royal) {
      var _iterator = _createForOfIteratorHelper(preGeneratedAttacks[sideToMove].hoppingPieceLines),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var _step$value = _slicedToArray(_step.value, 2),
            attackingPiece = _step$value[0],
            attackCoordinates = _step$value[1];
          if ((0,_Board_BoardInterface__WEBPACK_IMPORTED_MODULE_1__/* .compareCoordinates */ .ef)(attackCoordinates, royal)) {
            newCoordinates.push((0,_Board_BoardInterface__WEBPACK_IMPORTED_MODULE_1__/* .stringifyCoordinate */ .Kv)(attackingPiece));
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      var _iterator2 = _createForOfIteratorHelper(preGeneratedAttacks[sideToMove].slidingPiecesLines),
        _step2;
      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var _step2$value = _slicedToArray(_step2.value, 2),
            _attackingPiece = _step2$value[0],
            attackLine = _step2$value[1];
          var _iterator3 = _createForOfIteratorHelper(attackLine),
            _step3;
          try {
            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
              var _attackCoordinates = _step3.value;
              if ((0,_Board_BoardInterface__WEBPACK_IMPORTED_MODULE_1__/* .compareCoordinates */ .ef)(_attackCoordinates, royal)) {
                newCoordinates.push((0,_Board_BoardInterface__WEBPACK_IMPORTED_MODULE_1__/* .stringifyCoordinate */ .Kv)(_attackingPiece));
                break;
              }
            }
          } catch (err) {
            _iterator3.e(err);
          } finally {
            _iterator3.f();
          }
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
    }
    baseChecks[baseColor] = newCoordinates;
    return baseChecks;
  }
}
_VariantRule__WEBPACK_IMPORTED_MODULE_2__/* .VariantRule.initVariantRule */ .$.initVariantRule(SelfCheck);

/***/ }),

/***/ 301:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SetupChess": () => (/* binding */ SetupChess)
/* harmony export */ });
/* harmony import */ var _moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16703);
/* harmony import */ var _baseTypes__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(18027);
/* harmony import */ var _Board_Board__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(80273);
/* harmony import */ var _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(76758);
/* harmony import */ var _MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(37017);
/* harmony import */ var _VariantRule__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(75942);
/* harmony import */ var _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(9680);
/* harmony import */ var _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(4127);
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }








var tag = "setupChess";
class SetupChess extends _VariantRule__WEBPACK_IMPORTED_MODULE_4__/* .VariantRule */ .$ {
  constructor(setupPoints) {
    super();
    _defineProperty(this, "disabled", false);
    _defineProperty(this, "setupPoints", void 0);
    _defineProperty(this, "wereBanksEnabled", [false, false, false, false]);
    _defineProperty(this, "permutationCoordinates", [[], [], [], []]);
    _defineProperty(this, "pawnPermutationCoordinates", [[], [], [], []]);
    if (typeof setupPoints === "number") {
      this.setupPoints = setupPoints;
    } else {
      this.setupPoints = false;
    }
  }
  getDecoratorType() {
    return _Board_Board__WEBPACK_IMPORTED_MODULE_1__/* .Board */ .$;
  }
  getPublicProperties() {
    return {
      parameterValue: this.setupPoints,
      information: {
        name: "Setup Material",
        description: "Set up ".concat(this.setupPoints || 0, " points before the game starts"),
        tag,
        color: _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_5__/* .variantRuleColors.phased */ .p.phased,
        displayIcon: _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_6__/* .chessGlyphIndex.movePawn */ .w.movePawn
      }
    };
  }
  matchesPGNDeclaration(match) {
    var matchArray = match.match(/^Setup=(\d+)$/);
    if (matchArray) {
      this.setupPoints = Number(matchArray[1]);
      return true;
    } else {
      return false;
    }
  }
  serializeToParsingForm() {
    return "Setup=".concat(this.setupPoints || 0);
  }
  isDisabled() {
    return false;
  }
  getInsufficientMaterialData() {
    return {
      isPartiallyDisabled: false,
      isDisabled: true
    };
  }
  getParametrizedOptions() {
    var options = new Map([["Off", false]]);
    for (var i = 1; i < 50; i++) options.set(String(i), i);
    for (var _i = 50; _i <= 120; _i += 5) options.set(String(_i), _i);
    return options;
  }
  initDecoratorSettings() {
    var _this = this;
    var fenOptions = this.decorator.data.fenOptions;
    var areBanksEnabled = fenOptions.tag("areBanksEnabled"),
      dead = fenOptions.tag("dead"),
      setupComplete = fenOptions.tag("setupComplete"),
      setupPoints = fenOptions.tag("setupPoints"),
      pawnBaseRank = fenOptions.tag("pawnBaseRank"),
      royal = fenOptions.tag("royal"),
      castleKingside = fenOptions.tag("castleKingside"),
      castleQueenside = fenOptions.tag("castleQueenside");
    var areSetupPointsUnset = setupPoints === null;
    var modifyDisplacements = (i, j, color) => {
      var baseDisplacements = [[13 - i, j], [j, i], [i, j], [13 - j, i]];
      return baseDisplacements[color];
    };
    var _iterator = _createForOfIteratorHelper(_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .colors */ .O9),
      _step;
    try {
      var _loop = function _loop() {
        var color = _step.value;
        var bankEnabled = false;
        if (areBanksEnabled[color]) {
          _this.wereBanksEnabled[color] = true;
          bankEnabled = true;
        } else if (!setupComplete[color]) {
          areBanksEnabled[color] = true;
          bankEnabled = true;
        }
        if (bankEnabled) {
          var files = (0,_baseTypes__WEBPACK_IMPORTED_MODULE_7__/* .createTupleFromCallback */ .fi)((_, i) => i, _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .boardDimension */ .iJ);
          var pawnRanks = [pawnBaseRank, pawnBaseRank + 1].filter(rank => rank >= 0 && rank <= 13);
          var ranks = [pawnBaseRank - 1, ...pawnRanks];
          _this.permutationCoordinates[color] = files.flatMap(file => ranks.map(rank => modifyDisplacements(rank, file, color)));
          _this.pawnPermutationCoordinates[color] = files.flatMap(file => pawnRanks.map(rank => modifyDisplacements(rank, file, color)));
        }
        if (!areSetupPointsUnset && !dead[color]) {
          setupPoints[color] = _this.setupPoints === false ? 0 : _this.setupPoints;
        }
        if (!royal[color]) {
          castleKingside[color] = false;
          castleQueenside[color] = false;
        }
      };
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        _loop();
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    var _iterator2 = _createForOfIteratorHelper(this.wrappingDecorators),
      _step2;
    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        var _decorator$initDecora;
        var decorator = _step2.value;
        (_decorator$initDecora = decorator.initDecoratorSettings) === null || _decorator$initDecora === void 0 ? void 0 : _decorator$initDecora.call(decorator);
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
  }
  getLegalMoves() {
    if (!this.disabled) return [];
    return this.callHandler("getLegalMoves", arguments);
  }
  getCoordinateList(piece) {
    return _moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_0__/* .pieceControlConfigSettings */ .Gf[piece.piece].moveGenerationSettings.isPawn ? this.pawnPermutationCoordinates : this.permutationCoordinates;
  }
  getDroppingMoves(piece) {
    var color = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.decorator.data.sideToMove;
    if (piece.color !== color) return [];
    if (!this.disabled && !this.decorator.data.fenOptions.tag("setupComplete")[color]) {
      var coordinateList = this.getCoordinateList(piece);
      var resultingMoveDrops = [];
      var _iterator3 = _createForOfIteratorHelper(coordinateList[color]),
        _step3;
      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
          var coordinate = _step3.value;
          if (this.decorator.board[coordinate[0]][coordinate[1]].isEmpty()) {
            resultingMoveDrops.push({
              piece,
              endCoordinates: coordinate
            });
          }
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
      return resultingMoveDrops;
    } else return this.callHandler("getDroppingMoves", arguments);
  }
  makeMove(move) {
    var ignoreNextMoves = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    var fenOptions = this.decorator.data.fenOptions;
    var areBanksEnabled = fenOptions.tag("areBanksEnabled"),
      dead = fenOptions.tag("dead"),
      setupComplete = fenOptions.tag("setupComplete"),
      setupPoints = fenOptions.tag("setupPoints"),
      bank = fenOptions.tag("bank"),
      royal = fenOptions.tag("royal");
    var color = this.decorator.data.sideToMove,
      moveData = move[0];
    var results = this.callHandler("makeMove", arguments);
    if (!this.disabled && !setupComplete[color] && (0,_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_3__/* .verifyDroppingMove */ .x7)(moveData) && setupPoints) {
      var pointValue = _moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_0__/* .pieceControlConfigSettings */ .Gf[moveData.piece.piece].points.singlesPoints;
      if (moveData.piece.piece === "K") {
        bank[color].delete(moveData.piece);
        royal[color] = moveData.endCoordinates;
      } else {
        setupPoints[color] -= pointValue;
      }
      var pointsLeft = setupPoints[color];
      var _iterator4 = _createForOfIteratorHelper(bank[color]),
        _step4;
      try {
        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
          var _step4$value = _slicedToArray(_step4.value, 1),
            piece = _step4$value[0];
          if (piece.piece !== "K" && pointValue > pointsLeft) {
            bank[color].delete(piece);
          }
        }
      } catch (err) {
        _iterator4.e(err);
      } finally {
        _iterator4.f();
      }
      if (bank[color].size === 0) {
        setupComplete[color] = true;
      } else {
        var coordinateList = this.getCoordinateList(moveData.piece);
        var anyDrop = false;
        var _iterator5 = _createForOfIteratorHelper(coordinateList[color]),
          _step5;
        try {
          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
            var coordinate = _step5.value;
            if (this.decorator.board[coordinate[0]][coordinate[1]].isEmpty()) {
              anyDrop = true;
              break;
            }
          }
        } catch (err) {
          _iterator5.e(err);
        } finally {
          _iterator5.f();
        }
        if (!anyDrop) {
          setupComplete[color] = true;
        }
      }
    }
    if (setupComplete.every((v, i) => v || dead[i])) {
      this.disabled = true;
      var _iterator6 = _createForOfIteratorHelper(_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .colors */ .O9),
        _step6;
      try {
        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {
          var _color = _step6.value;
          if (!this.wereBanksEnabled[_color]) {
            areBanksEnabled[_color] = false;
            bank[_color].clear();
          }
        }
      } catch (err) {
        _iterator6.e(err);
      } finally {
        _iterator6.f();
      }
    }
    if (!this.disabled && !ignoreNextMoves && setupComplete[this.decorator.data.sideToMove]) {
      _Board_Board__WEBPACK_IMPORTED_MODULE_1__/* .Board.prototype.makeMove.call */ .$.prototype.makeMove.call(this.decorator, [{
        type: _MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_3__/* .InternalMoveSignature.Pass */ .Fi.Pass
      }]);
    }
    return results;
  }
}
_VariantRule__WEBPACK_IMPORTED_MODULE_4__/* .VariantRule.initVariantRule */ .$.initVariantRule(SetupChess);

/***/ }),

/***/ 25896:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Taboo": () => (/* binding */ Taboo)
/* harmony export */ });
/* harmony import */ var _Board_Board__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(80273);
/* harmony import */ var _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(76758);
/* harmony import */ var _VariantRule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(75942);
/* harmony import */ var _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(9680);
/* harmony import */ var _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(4127);
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }





var tag = "taboo";
class Taboo extends _VariantRule__WEBPACK_IMPORTED_MODULE_2__/* .VariantRule */ .$ {
  getDecoratorType() {
    return _Board_Board__WEBPACK_IMPORTED_MODULE_0__/* .Board */ .$;
  }
  getPublicProperties() {
    return {
      parameterValue: true,
      information: {
        name: "Taboo",
        description: "Giving check is forbidden",
        tag,
        color: _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_3__/* .variantRuleColors.widespread */ .p.widespread,
        displayIcon: _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_4__/* .chessGlyphIndex.equal */ .w.equal
      }
    };
  }
  matchesPGNDeclaration(match) {
    return /^Taboo$/i.test(match);
  }
  serializeToParsingForm() {
    return "Taboo";
  }
  isDisabled() {
    return false;
  }
  isSetupComplex() {
    return true;
  }
  isTheMoveLegal(_, moveData) {
    var initialDead = this.decorator.data.fenOptions.tag("dead").slice();
    var snapshot = this.decorator.createSnapshot();
    try {
      this.decorator.makeMove([moveData], true);
      var newDead = this.decorator.data.fenOptions.tag("dead").slice();
      var _iterator = _createForOfIteratorHelper(_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_1__/* .colors */ .O9),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var color = _step.value;
          if (!initialDead[color] && newDead[color] || this.decorator.isKingInCheck(color)) return false;
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      return true;
    } finally {
      this.decorator.loadSnapshot(snapshot);
    }
  }
}
_VariantRule__WEBPACK_IMPORTED_MODULE_2__/* .VariantRule.initVariantRule */ .$.initVariantRule(Taboo);

/***/ }),

/***/ 53241:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "comfuterAlgorithm": () => (/* binding */ comfuterAlgorithm)
/* harmony export */ });
/* harmony import */ var _client_ts_baseTypes__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(18027);
/* harmony import */ var _client_ts_logic_BaseInterfaces__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(34355);
/* harmony import */ var _moveGeneration_Board_BoardInterface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(29939);
/* harmony import */ var _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(76758);
/* harmony import */ var _moveGeneration_GameInformation_GameUnits_PieceString__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(20915);
/* harmony import */ var _moveGeneration_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(37017);
/* harmony import */ var _moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(16703);
/* harmony import */ var _BotInterface__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(69283);
/* harmony import */ var _RandomEvaluation__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(12160);
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }









var onlyUnique = (value, index, self) => self.indexOf(value) === index;
var stringifyKey = (i, j, color) => "".concat(i, ",").concat(j, "/").concat(color !== null && color !== void 0 ? color : "");
function getPieceInFront(i, j, color) {
  switch (color) {
    case 0:
      return [i - 1, j];
    case 1:
      return [i, j + 1];
    case 2:
      return [i + 1, j];
    case 3:
      return [i, j - 1];
  }
}
function createComfuterAlgorithm() {
  var boardAccessors;
  function augmentBoardAccessorsFromBoard(board) {
    return {
      board,
      boardSquares: board.board,
      data: board.data,
      remainingReal: board.data.getRealPlayers(),
      remaining: board.data.fenOptions.tag("dead").map((v, i) => v ? false : i).filter(v => v === false),
      coverage: (0,_client_ts_logic_BaseInterfaces__WEBPACK_IMPORTED_MODULE_0__/* .initializeBoardSquares */ .BD)(() => []),
      pieces: board.getPlayerPieces(),
      controls: board.controls,
      royal: board.data.fenOptions.tag("royal"),
      hangingCache: new Map(),
      coverageCache: new Map(),
      pieceValueCache: new Map()
    };
  }
  function initializeBoardAccessorsFromBoard(board) {
    var promotionRank = board.variantData.promotionRank !== false ? [_moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .boardDimension */ .iJ - board.variantData.promotionRank, board.variantData.promotionRank - 1, board.variantData.promotionRank - 1, _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .boardDimension */ .iJ - board.variantData.promotionRank] : (0,_client_ts_baseTypes__WEBPACK_IMPORTED_MODULE_8__/* .createTuple */ .VS)(99, _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .totalPlayers */ .q3);
    boardAccessors = _objectSpread(_objectSpread({}, augmentBoardAccessorsFromBoard(board)), {}, {
      variantData: board.variantData,
      promotionRank,
      isFFA: board.gameType.isFFA(),
      isTeams: !board.gameType.isFFA(),
      zombieType: board.data.fenOptions.tag("zombieType"),
      defaultSideToMove: board.data.sideToMove
    });
  }
  function getDistanceFromPromotion(color, i, j) {
    if (i === -1) return 99;
    return Math.abs(boardAccessors.promotionRank[color] - (color & 1 ? i : j)) || 99;
  }
  function getDistanceFromKing(i, j, color) {
    if (i === -1) return 999;
    var royalPiece = boardAccessors.royal[color];
    if (!royalPiece) return 999;
    var x = Math.abs(i - royalPiece[0]),
      y = Math.abs(j - royalPiece[1]);
    if (x === 0 && y === 0) return 999;
    return Math.max(x, y);
  }
  function inspectCoverage() {
    var _boardAccessors = boardAccessors,
      board = _boardAccessors.board,
      boardSquares = _boardAccessors.boardSquares,
      pieces = _boardAccessors.pieces,
      coverage = _boardAccessors.coverage;
    var _iterator = _createForOfIteratorHelper(_moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .colors */ .O9),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var color = _step.value;
        var _iterator2 = _createForOfIteratorHelper(pieces[color]),
          _step2;
        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
            var coordinate = _step2.value;
            var pc = boardSquares[coordinate[0]][coordinate[1]];
            if (!pc.isPiece()) continue;
            var destinations = board.preGeneratedAttacks[color].pieceMovements.get((0,_moveGeneration_Board_BoardInterface__WEBPACK_IMPORTED_MODULE_1__/* .stringifyCoordinate */ .Kv)(coordinate));
            if (!destinations) continue;
            var _iterator3 = _createForOfIteratorHelper(destinations),
              _step3;
            try {
              for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
                var dest = _step3.value;
                coverage[dest.move[0]][dest.move[1]].push(coordinate);
              }
            } catch (err) {
              _iterator3.e(err);
            } finally {
              _iterator3.f();
            }
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
  }
  function getCoverage(i, j, color) {
    var _boardAccessors2 = boardAccessors,
      coverageCache = _boardAccessors2.coverageCache,
      coverage = _boardAccessors2.coverage,
      boardSquares = _boardAccessors2.boardSquares,
      data = _boardAccessors2.data,
      board = _boardAccessors2.board,
      zombieType = _boardAccessors2.zombieType,
      defaultSideToMove = _boardAccessors2.defaultSideToMove;
    var resigned = data.fenOptions.tag("resigned");
    var key = stringifyKey(i, j, color);
    if (coverageCache.has(key)) return coverageCache.get(key);
    var attackers = [],
      defenders = [];
    var cvg = coverage[i][j];
    if (cvg.length) {
      var _iterator4 = _createForOfIteratorHelper(cvg),
        _step4;
      try {
        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
          var pieceC = _step4.value;
          var piece = boardSquares[pieceC[0]][pieceC[1]];
          if (!piece.isPiece()) continue;
          var pieceColor = piece.color;
          if (resigned[pieceColor] && zombieType[pieceColor] === _BotInterface__WEBPACK_IMPORTED_MODULE_6__.ZombieType.Rando) continue;
          if (board.gameType.isSameTeam(pieceColor, defaultSideToMove)) {
            defenders.push(pieceC);
          } else {
            attackers.push(pieceC);
          }
        }
      } catch (err) {
        _iterator4.e(err);
      } finally {
        _iterator4.f();
      }
    }
    var cache = color === defaultSideToMove ? {
      attackers,
      defenders
    } : {
      defenders: attackers,
      attackers: defenders
    };
    coverageCache.set(key, cache);
    return cache;
  }
  function getPieceValue(i, j) {
    var _boardAccessors3 = boardAccessors,
      boardSquares = _boardAccessors3.boardSquares,
      pieceValueCache = _boardAccessors3.pieceValueCache,
      isFFA = _boardAccessors3.isFFA,
      isTeams = _boardAccessors3.isTeams,
      remainingReal = _boardAccessors3.remainingReal,
      royal = _boardAccessors3.royal,
      board = _boardAccessors3.board;
    var coordinates = [i, j];
    var pieceString = boardSquares[i][j];
    if (!pieceString.isPiece()) return 0;
    var piece = pieceString.piece;
    var key = "".concat(coordinates[0], ",").concat(coordinates[1], "/").concat(pieceString.color);
    if (pieceValueCache.has(key)) return pieceValueCache.get(key);
    var value = 0;
    var controlSetting = _moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_5__/* .pieceControlConfigSettings */ .Gf[piece];
    if (!controlSetting.moveGenerationSettings.isPawn) {
      value = isTeams ? controlSetting.points.botTeamsValue : controlSetting.points.botFFAValue;
    } else {
      value = isFFA ? 1 : 0.4;
      var promotionDistance = getDistanceFromPromotion(pieceString.color, ...coordinates);
      value += 2 / (getDistanceFromKing(...coordinates, pieceString.color) * 3) * (remainingReal / 4);
      value += 3 / (promotionDistance * 3);
      if (promotionDistance < 2) {
        var inFront = getPieceInFront(...coordinates, pieceString.color);
        var _getCoverage = getCoverage(...inFront, pieceString.color),
          attackers = _getCoverage.attackers,
          defenders = _getCoverage.defenders;
        if (!defenders.length) {
          value += 3 / promotionDistance;
        }
        if (attackers.length < defenders.length) {
          value += 2 / promotionDistance;
        }
      }
    }
    var isRoyal = false;
    var _iterator5 = _createForOfIteratorHelper(royal),
      _step5;
    try {
      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
        var royalPiece = _step5.value;
        if (!royalPiece) continue;
        if (royalPiece[0] === coordinates[0] && royalPiece[1] === coordinates[1]) {
          isRoyal = true;
          break;
        }
      }
    } catch (err) {
      _iterator5.e(err);
    } finally {
      _iterator5.f();
    }
    if (!isRoyal && piece !== _moveGeneration_GameInformation_GameUnits_PieceString__WEBPACK_IMPORTED_MODULE_3__/* .pawnPieceString.piece */ .Fb.piece) {
      var _iterator6 = _createForOfIteratorHelper(_moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .colors */ .O9),
        _step6;
      try {
        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {
          var color = _step6.value;
          if (!board.gameType.isSameTeam(color, pieceString.color)) {
            var d = getDistanceFromKing(...coordinates, color);
            if (d < 3) d = 2;
            value += (5 - remainingReal) / d;
          }
        }
      } catch (err) {
        _iterator6.e(err);
      } finally {
        _iterator6.f();
      }
    }
    pieceValueCache.set(key, value);
    return value;
  }
  function getCoordinationEval(player) {
    var _boardAccessors4 = boardAccessors,
      pieces = _boardAccessors4.pieces,
      remainingReal = _boardAccessors4.remainingReal;
    var e = 0;
    var _iterator7 = _createForOfIteratorHelper(pieces[player]),
      _step7;
    try {
      for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {
        var piece = _step7.value;
        var _getCoverage2 = getCoverage(piece[0], piece[1], player),
          defenders = _getCoverage2.defenders;
        var _iterator8 = _createForOfIteratorHelper(defenders),
          _step8;
        try {
          for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {
            var d = _step8.value;
            e += 30 / (getPieceValue(d[0], d[1]) * 2);
          }
        } catch (err) {
          _iterator8.e(err);
        } finally {
          _iterator8.f();
        }
      }
    } catch (err) {
      _iterator7.e(err);
    } finally {
      _iterator7.f();
    }
    if (remainingReal === 2) {
      e *= 0.4;
    } else if (remainingReal === 3) {
      e *= 0.7;
    }
    return e / 55;
  }
  function firstPlayerMovesBefore(p1, p2) {
    var _boardAccessors5 = boardAccessors,
      data = _boardAccessors5.data,
      defaultSideToMove = _boardAccessors5.defaultSideToMove;
    var next = data.nextTurn();
    do {
      if (p1 === next) return true;
      if (p2 === next) return false;
      next = data.nextTurn(next);
    } while (next !== defaultSideToMove);
    return true;
  }
  function canRespondDirectlyToThreat(player, attackers) {
    var _boardAccessors6 = boardAccessors,
      boardSquares = _boardAccessors6.boardSquares;
    var attackingPlayers = [];
    var _iterator9 = _createForOfIteratorHelper(attackers),
      _step9;
    try {
      for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {
        var pc = _step9.value;
        var square = boardSquares[pc[0]][pc[1]];
        if (!square.isPiece()) continue;
        attackingPlayers.push(square.color);
      }
    } catch (err) {
      _iterator9.e(err);
    } finally {
      _iterator9.f();
    }
    attackingPlayers = attackingPlayers.filter(onlyUnique);
    var _iterator10 = _createForOfIteratorHelper(attackingPlayers),
      _step10;
    try {
      for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {
        var a = _step10.value;
        if (firstPlayerMovesBefore(player, a)) return false;
      }
    } catch (err) {
      _iterator10.e(err);
    } finally {
      _iterator10.f();
    }
    return true;
  }
  function hanging(i, j) {
    var pieceValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : getPieceValue(i, j);
    var _boardAccessors7 = boardAccessors,
      hangingCache = _boardAccessors7.hangingCache,
      boardSquares = _boardAccessors7.boardSquares,
      remaining = _boardAccessors7.remaining,
      data = _boardAccessors7.data;
    var key = stringifyKey(i, j);
    if (hangingCache.has(key)) return hangingCache.get(key);
    var square = boardSquares[i][j];
    if (!square.isPiece()) return 0;
    var _getCoverage3 = getCoverage(i, j, square.color),
      attackers = _getCoverage3.attackers,
      defenders = _getCoverage3.defenders;
    var attackerValue = 999;
    var _iterator11 = _createForOfIteratorHelper(attackers),
      _step11;
    try {
      for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {
        var _pc = _step11.value;
        attackerValue = Math.min(attackerValue, getPieceValue(_pc[0], _pc[1]));
      }
    } catch (err) {
      _iterator11.e(err);
    } finally {
      _iterator11.f();
    }
    var attackedFromLeft = false;
    var nextTurn = data.nextTurn(square.color);
    if (remaining.length > 2) {
      var _iterator12 = _createForOfIteratorHelper(attackers),
        _step12;
      try {
        for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {
          var pc = _step12.value;
          if (boardSquares[pc[0]][pc[1]].color === nextTurn) {
            attackedFromLeft = true;
            break;
          }
        }
      } catch (err) {
        _iterator12.e(err);
      } finally {
        _iterator12.f();
      }
    }
    var threatened = pieceValue - attackerValue;
    var pawnDefends;
    var _iterator13 = _createForOfIteratorHelper(defenders),
      _step13;
    try {
      for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {
        var _pc2 = _step13.value;
        if (boardSquares[_pc2[0]][_pc2[1]].piece === _moveGeneration_GameInformation_GameUnits_PieceString__WEBPACK_IMPORTED_MODULE_3__/* .pawnPieceString.piece */ .Fb.piece) {
          pawnDefends = _pc2;
          break;
        }
      }
    } catch (err) {
      _iterator13.e(err);
    } finally {
      _iterator13.f();
    }
    var h = 0;
    var underDefended = attackers.length - defenders.length > 0;
    if (underDefended) h = pieceValue;
    if (underDefended && pawnDefends) h = 0;
    if (pawnDefends && attackers.length - defenders.length > 1) {
      h = getPieceValue(pawnDefends[0], pawnDefends[1]);
    }
    if (!h && threatened > 0) h = threatened;
    if (!h && attackedFromLeft && threatened >= -2) {
      h = -threatened;
    }
    if (h && canRespondDirectlyToThreat(square.color, attackers)) {
      h /= 6;
    }
    hangingCache.set(key, h);
    return h;
  }
  function getMobilityEval(player) {
    var _boardAccessors8 = boardAccessors,
      pieces = _boardAccessors8.pieces,
      boardSquares = _boardAccessors8.boardSquares,
      isTeams = _boardAccessors8.isTeams,
      royal = _boardAccessors8.royal,
      defaultSideToMove = _boardAccessors8.defaultSideToMove,
      board = _boardAccessors8.board;
    var e = 0;
    var _iterator14 = _createForOfIteratorHelper(pieces[player]),
      _step14;
    try {
      for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {
        var _board$preGeneratedAt, _board$preGeneratedAt2;
        var coordinate = _step14.value;
        if (hanging(coordinate[0], coordinate[1]) > 2) continue;
        var piece = boardSquares[coordinate[0]][coordinate[1]];
        if (!piece.isPiece()) continue;
        var destinations = (_board$preGeneratedAt = (_board$preGeneratedAt2 = board.preGeneratedAttacks[player].pieceMovements.get((0,_moveGeneration_Board_BoardInterface__WEBPACK_IMPORTED_MODULE_1__/* .stringifyCoordinate */ .Kv)(coordinate))) === null || _board$preGeneratedAt2 === void 0 ? void 0 : _board$preGeneratedAt2.length) !== null && _board$preGeneratedAt !== void 0 ? _board$preGeneratedAt : 0;
        if (/[QDAEHΔ]/.test(piece.piece)) destinations /= isTeams ? 2 : 3;
        if (/[RBV]]/.test(piece.piece)) destinations /= isTeams ? 1.5 : 2;
        e += destinations / (isTeams ? 10 : board.gameType.type === _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .VariantType.Solo */ .Jy.Solo ? 21 : 16);
        var isRoyal = false;
        var _iterator15 = _createForOfIteratorHelper(royal),
          _step15;
        try {
          for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {
            var royalPiece = _step15.value;
            if (!royalPiece) continue;
            if (royalPiece[0] === coordinate[0] && royalPiece[1] === coordinate[1]) {
              isRoyal = true;
              break;
            }
          }
        } catch (err) {
          _iterator15.e(err);
        } finally {
          _iterator15.f();
        }
        if (!isRoyal && !isTeams && piece.piece === _moveGeneration_GameInformation_GameUnits_PieceString__WEBPACK_IMPORTED_MODULE_3__/* .pawnPieceString.piece */ .Fb.piece) {
          var blockedBy = getPieceInFront(coordinate[0], coordinate[1], player);
          var bSqr = boardSquares[blockedBy[0]][blockedBy[1]];
          if (bSqr.isEmpty()) continue;
          if (!bSqr.isPiece()) {
            e -= 2;
          } else if (board.gameType.isSameTeam(bSqr.color, defaultSideToMove)) {
            e -= 0.5;
          } else if (bSqr.piece === _moveGeneration_GameInformation_GameUnits_PieceString__WEBPACK_IMPORTED_MODULE_3__/* .pawnPieceString.piece */ .Fb.piece) {
            e -= 1.8;
          } else if (player === bSqr.color) {
            e -= 0.5;
          }
        }
      }
    } catch (err) {
      _iterator14.e(err);
    } finally {
      _iterator14.f();
    }
    return e;
  }
  function getDistFromHill(player) {
    var royalPiece = boardAccessors.royal[player];
    if (!royalPiece) return 999;
    var x = Math.abs(6.5 - royalPiece[0]);
    var y = Math.abs(6.5 - royalPiece[1]);
    var d = (x + y) / 2 + Math.max(x, y) / 2;
    if (!d) return 999;
    return d;
  }
  function getMatesEval() {
    var _boardAccessors9 = boardAccessors,
      board = _boardAccessors9.board,
      variantData = _boardAccessors9.variantData,
      data = _boardAccessors9.data,
      pieces = _boardAccessors9.pieces,
      remainingReal = _boardAccessors9.remainingReal;
    board.data.sideToMove = board.data.previousTurn();
    var _board$getCheckmatesA = board.getCheckmatesAndStalemates(),
      checkmates = _board$getCheckmatesA.checkmates,
      stalemates = _board$getCheckmatesA.stalemates,
      checks = _board$getCheckmatesA.checks;
    board.data.sideToMove = board.data.nextTurn();
    var e = 0;
    var _iterator16 = _createForOfIteratorHelper(_moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .colors */ .O9),
      _step16;
    try {
      for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {
        var _color2 = _step16.value;
        if (checkmates[_color2]) {
          e += 500;
        } else if (stalemates[_color2]) e -= 300;
      }
    } catch (err) {
      _iterator16.e(err);
    } finally {
      _iterator16.f();
    }
    var checksLength = checks.filter(Boolean).length;
    if (checksLength === 3) {
      e += 10;
    } else if (checksLength === 2) {
      e += 1;
    } else if (checksLength === 1) {
      var prev = data.previousTurn();
      if (remainingReal > 2 && checks[prev]) {
        e += 1.2;
      } else if (remainingReal === 2) {
        e += 0.1;
      } else {
        e += 0.4;
      }
    }
    if (checksLength && variantData.nCheck) {
      var _iterator17 = _createForOfIteratorHelper(_moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .colors */ .O9),
        _step17;
      try {
        for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {
          var color = _step17.value;
          var lives = data.fenOptions.tag("lives")[color];
          if (lives && checks[color]) e += 4 / (lives + 1);
        }
      } catch (err) {
        _iterator17.e(err);
      } finally {
        _iterator17.f();
      }
      e += 0.3;
    }
    if (variantData.barePieceRule) {
      var _iterator18 = _createForOfIteratorHelper(_moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .colors */ .O9),
        _step18;
      try {
        for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {
          var _color = _step18.value;
          if (pieces[_color].length <= 1) e += 300;
        }
      } catch (err) {
        _iterator18.e(err);
      } finally {
        _iterator18.f();
      }
    }
    return e;
  }
  function getMaterialEval() {
    var _boardAccessors10 = boardAccessors,
      board = _boardAccessors10.board,
      pieces = _boardAccessors10.pieces,
      isTeams = _boardAccessors10.isTeams,
      remainingReal = _boardAccessors10.remainingReal,
      defaultSideToMove = _boardAccessors10.defaultSideToMove,
      variantData = _boardAccessors10.variantData;
    var myMaterial = 0,
      oppMaterial = 0;
    var _iterator19 = _createForOfIteratorHelper(_moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .colors */ .O9),
      _step19;
    try {
      for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {
        var color = _step19.value;
        if (board.gameType.isSameTeam(color, defaultSideToMove)) {
          var _iterator20 = _createForOfIteratorHelper(pieces[color]),
            _step20;
          try {
            for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {
              var pc = _step20.value;
              var pieceValue = getPieceValue(pc[0], pc[1]);
              pieceValue -= hanging(pc[0], pc[1]);
              myMaterial += pieceValue;
            }
          } catch (err) {
            _iterator20.e(err);
          } finally {
            _iterator20.f();
          }
        } else {
          var _iterator21 = _createForOfIteratorHelper(pieces[color]),
            _step21;
          try {
            for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {
              var _pc3 = _step21.value;
              var pcVal = getPieceValue(_pc3[0], _pc3[1]);
              if (!isTeams && remainingReal === 4 && Math.abs(color - defaultSideToMove) === 2 && !variantData.giveaway) {
                pcVal /= board.gameType.type === _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .VariantType.Solo */ .Jy.Solo ? 2 : 3;
              }
              pcVal -= hanging(_pc3[0], _pc3[1], pcVal);
              oppMaterial -= pcVal;
            }
          } catch (err) {
            _iterator21.e(err);
          } finally {
            _iterator21.f();
          }
        }
      }
    } catch (err) {
      _iterator19.e(err);
    } finally {
      _iterator19.f();
    }
    if (!isTeams && remainingReal === 4) {
      oppMaterial /= 1.4;
      myMaterial *= 1.2;
    }
    if (!isTeams && remainingReal === 3) {
      oppMaterial /= 1.25;
      myMaterial *= 1.1;
    }
    myMaterial *= 2;
    oppMaterial *= 2;
    return {
      myMaterial,
      oppMaterial
    };
  }
  function getPinsEval() {
    var _boardAccessors11 = boardAccessors,
      board = _boardAccessors11.board,
      royal = _boardAccessors11.royal,
      pieces = _boardAccessors11.pieces,
      defaultSideToMove = _boardAccessors11.defaultSideToMove,
      remainingReal = _boardAccessors11.remainingReal;
    var pinnedEval = 0,
      discovsEval = 0;
    var _iterator22 = _createForOfIteratorHelper(_moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .colors */ .O9),
      _step22;
    try {
      for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {
        var i = _step22.value;
        var discovered = [];
        var pins = [];
        var _iterator23 = _createForOfIteratorHelper(pieces[i]),
          _step23;
        try {
          for (_iterator23.s(); !(_step23 = _iterator23.n()).done;) {
            var piece = _step23.value;
            var royalPiece = royal[i];
            if (!royalPiece) break;
            if (royalPiece[0] === piece[0] && royalPiece[1] === piece[1]) continue;
            var _royalPiece = _slicedToArray(royalPiece, 2),
              royalX = _royalPiece[0],
              royalY = _royalPiece[1];
            var pieceX = piece[0],
              pieceY = piece[1];
            var _iterator24 = _createForOfIteratorHelper(board.preGeneratedAttacks[i].slidingPiecesRayTracing),
              _step24;
            try {
              for (_iterator24.s(); !(_step24 = _iterator24.n()).done;) {
                var _step24$value = _slicedToArray(_step24.value, 2),
                  attackPiece = _step24$value[0],
                  attackLine = _step24$value[1];
                var isPieceUnderAttack = false,
                  isRoyalUnderAttack = false;
                var _iterator25 = _createForOfIteratorHelper(attackLine),
                  _step25;
                try {
                  for (_iterator25.s(); !(_step25 = _iterator25.n()).done;) {
                    var _step25$value = _slicedToArray(_step25.value, 2),
                      attackedX = _step25$value[0],
                      attackedY = _step25$value[1];
                    if (!isPieceUnderAttack && attackedX === pieceX && attackedY === pieceY) isPieceUnderAttack = true;
                    if (!isRoyalUnderAttack && attackedX === royalX && attackedY === royalY) isRoyalUnderAttack = true;
                    if (isPieceUnderAttack && isRoyalUnderAttack) {
                      pins.push(piece);
                    } else if (isRoyalUnderAttack && !isPieceUnderAttack) {
                      discovered.push([attackPiece[0], attackPiece[1]]);
                    }
                  }
                } catch (err) {
                  _iterator25.e(err);
                } finally {
                  _iterator25.f();
                }
              }
            } catch (err) {
              _iterator24.e(err);
            } finally {
              _iterator24.f();
            }
          }
        } catch (err) {
          _iterator23.e(err);
        } finally {
          _iterator23.f();
        }
        for (var _i = 0, _pins = pins; _i < _pins.length; _i++) {
          var coordinate = _pins[_i];
          if (hanging(coordinate[0], coordinate[1]) > 2) continue;
          var pieceValue = Math.sqrt(getPieceValue(coordinate[0], coordinate[1]));
          if (!board.gameType.isSameTeam(i, defaultSideToMove)) {
            pinnedEval += pieceValue / 2;
          } else {
            pinnedEval -= pieceValue;
          }
        }
        for (var _i2 = 0, _discovered = discovered; _i2 < _discovered.length; _i2++) {
          var _coordinate = _discovered[_i2];
          if (hanging(_coordinate[0], _coordinate[1]) > 2) continue;
          var _pieceValue = Math.sqrt(getPieceValue(_coordinate[0], _coordinate[1]));
          if (board.gameType.isSameTeam(i, defaultSideToMove)) {
            discovsEval += _pieceValue / 2;
          } else {
            discovsEval -= _pieceValue;
          }
        }
      }
    } catch (err) {
      _iterator22.e(err);
    } finally {
      _iterator22.f();
    }
    pinnedEval *= remainingReal / 6;
    discovsEval *= remainingReal / 6;
    if (discovsEval < 0) discovsEval /= 10;
    return {
      pinnedEval,
      discovsEval
    };
  }
  function getKingSafetyEval(player) {
    var _boardAccessors12 = boardAccessors,
      board = _boardAccessors12.board,
      royal = _boardAccessors12.royal,
      boardSquares = _boardAccessors12.boardSquares,
      remainingReal = _boardAccessors12.remainingReal,
      data = _boardAccessors12.data,
      variantData = _boardAccessors12.variantData,
      defaultSideToMove = _boardAccessors12.defaultSideToMove;
    var kingEval = 0,
      checkableEval = 0,
      exposedEval = 0;
    if (variantData.giveaway) return {
      kingEval,
      checkableEval,
      exposedEval
    };
    var baseReferences = (0,_client_ts_logic_BaseInterfaces__WEBPACK_IMPORTED_MODULE_0__/* .initializeBoardSquares */ .BD)(() => []);
    var _iterator26 = _createForOfIteratorHelper(board.preGeneratedAttacks[player].hoppingPieceLines),
      _step26;
    try {
      for (_iterator26.s(); !(_step26 = _iterator26.n()).done;) {
        var _step26$value = _slicedToArray(_step26.value, 2),
          coordinate = _step26$value[0],
          attack = _step26$value[1];
        baseReferences[attack[0]][attack[1]].push([coordinate[0], coordinate[1]]);
      }
    } catch (err) {
      _iterator26.e(err);
    } finally {
      _iterator26.f();
    }
    var _iterator27 = _createForOfIteratorHelper(board.preGeneratedAttacks[player].slidingPiecesLines),
      _step27;
    try {
      for (_iterator27.s(); !(_step27 = _iterator27.n()).done;) {
        var _step27$value = _slicedToArray(_step27.value, 2),
          _coordinate2 = _step27$value[0],
          line = _step27$value[1];
        var _iterator30 = _createForOfIteratorHelper(line),
          _step30;
        try {
          for (_iterator30.s(); !(_step30 = _iterator30.n()).done;) {
            var _attack = _step30.value;
            baseReferences[_attack[0]][_attack[1]].push([_coordinate2[0], _coordinate2[1]]);
          }
        } catch (err) {
          _iterator30.e(err);
        } finally {
          _iterator30.f();
        }
      }
    } catch (err) {
      _iterator27.e(err);
    } finally {
      _iterator27.f();
    }
    var royalPiece = royal[player];
    var squareAccessDefinitions = new Set();
    if (royalPiece) {
      var isChecked = Boolean(board.preGeneratedAttacks[player].slidingPieces[royalPiece[0]][royalPiece[1]] || board.preGeneratedAttacks[player].hoppingPieces[royalPiece[0]][royalPiece[1]]);
      for (var i = 0; i < _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .boardDimension */ .iJ; i++) {
        for (var j = 0; j < _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .boardDimension */ .iJ; j++) {
          if (isChecked) {
            var checkableSq = 0;
            if (remainingReal === 2) {
              checkableSq -= 0.8;
            } else {
              var players = baseReferences[i][j].map(coord => {
                var piece = boardSquares[coord[0]][coord[1]];
                if (!piece.isPiece()) return player;
                return piece.color;
              });
              var prev = data.nextTurn(player);
              var next = data.previousTurn(player);
              var _iterator28 = _createForOfIteratorHelper(players),
                _step28;
              try {
                for (_iterator28.s(); !(_step28 = _iterator28.n()).done;) {
                  var _player = _step28.value;
                  if (remainingReal === 3) {
                    checkableSq -= _player === next ? 3 : 2;
                  } else if (remainingReal === 4) {
                    checkableSq -= _player === next ? 5 : _player === prev ? 2 : 3;
                  }
                }
              } catch (err) {
                _iterator28.e(err);
              } finally {
                _iterator28.f();
              }
            }
            var _getCoverage4 = getCoverage(i, j, player),
              defenders = _getCoverage4.defenders;
            if (defenders.length) checkableSq += 2.5;
            if (checkableSq > 0) checkableSq = 0;
            var accessKey = stringifyKey(i, j);
            if (!squareAccessDefinitions.has(accessKey)) {
              exposedEval -= 0.123;
              squareAccessDefinitions.add(accessKey);
            }
            checkableEval += checkableSq;
          }
        }
      }
      var ki = royalPiece[0],
        kj = royalPiece[1];
      for (var d = 1; d < 3; d++) {
        var x = [ki, ki + d, ki - d];
        var y = [kj, kj + d, kj - d];
        for (var _i3 = 0, _x2 = x; _i3 < _x2.length; _i3++) {
          var _i4 = _x2[_i3];
          var _iterator29 = _createForOfIteratorHelper(y),
            _step29;
          try {
            for (_iterator29.s(); !(_step29 = _iterator29.n()).done;) {
              var _boardSquares$_i;
              var _j = _step29.value;
              // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition
              if (!((_boardSquares$_i = boardSquares[_i4]) !== null && _boardSquares$_i !== void 0 && _boardSquares$_i[_j])) continue;
              if (_i4 === ki && _j === kj) continue;
              var pieceString = boardSquares[_i4][_j];
              if (!pieceString.isPiece()) continue;
              if (board.gameType.isSameTeam(pieceString.color, player)) {
                kingEval += pieceString.piece === _moveGeneration_GameInformation_GameUnits_PieceString__WEBPACK_IMPORTED_MODULE_3__/* .pawnPieceString.piece */ .Fb.piece ? 2 : 1;
              } else {
                kingEval -= getPieceValue(_i4, _j);
              }
            }
          } catch (err) {
            _iterator29.e(err);
          } finally {
            _iterator29.f();
          }
        }
      }
      for (var k = -1; k < 2; k++) {
        for (var h = -1; h < 2; h++) {
          var _boardSquares$_i2;
          var _i5 = ki + k;
          var _j2 = kj + h;
          // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition
          if (!((_boardSquares$_i2 = boardSquares[_i5]) !== null && _boardSquares$_i2 !== void 0 && _boardSquares$_i2[_j2])) continue;
          var _getCoverage5 = getCoverage(_i5, _j2, player),
            attackers = _getCoverage5.attackers,
            _defenders = _getCoverage5.defenders;
          kingEval -= 2 * attackers.length;
          kingEval += 1 * _defenders.length;
        }
      }
      kingEval /= 10;
    }
    if (variantData.nCheck && !board.gameType.isSameTeam(board.data.sideToMove, defaultSideToMove)) {
      var lives = data.fenOptions.tag("lives")[board.data.sideToMove];
      switch (lives) {
        case null:
          break;
        case 2:
          checkableEval *= 1.5;
          break;
        case 1:
          checkableEval *= 3;
          break;
        default:
          checkableEval *= 1.3;
      }
    }
    return {
      kingEval,
      checkableEval,
      exposedEval
    };
  }
  function isZombieEatZombie(move) {
    if (!(0,_moveGeneration_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_4__/* .verifyStandardMove */ .$j)(move)) return false;
    var _boardAccessors13 = boardAccessors,
      data = _boardAccessors13.data,
      defaultSideToMove = _boardAccessors13.defaultSideToMove,
      boardSquares = _boardAccessors13.boardSquares,
      variantData = _boardAccessors13.variantData;
    if (variantData.giveaway) return false;
    var resigned = data.fenOptions.tag("resigned");
    if (!resigned[defaultSideToMove]) return false;
    var targetPiece = boardSquares[move.endCoordinates[0]][move.endCoordinates[1]];
    if (!targetPiece.isPiece()) return false;
    if (resigned[targetPiece.color]) return true;
    return false;
  }
  function getEval(move) {
    var totalEval = 0;
    var _boardAccessors14 = boardAccessors,
      board = _boardAccessors14.board,
      data = _boardAccessors14.data,
      defaultSideToMove = _boardAccessors14.defaultSideToMove,
      variantData = _boardAccessors14.variantData,
      royal = _boardAccessors14.royal,
      isTeams = _boardAccessors14.isTeams;
    var snapshot = board.createSnapshot();
    var isKingsideCastle = data.fenOptions.isKingsideCastlingAvailable(data.sideToMove, board),
      isQueensideCastle = data.fenOptions.isQueensideCastlingAvailable(data.sideToMove, board);
    board.makeMove([move], true);
    board.pregenerateAttacks();
    boardAccessors = _objectSpread(_objectSpread({}, boardAccessors), augmentBoardAccessorsFromBoard(board));
    inspectCoverage();
    var _getMaterialEval = getMaterialEval(),
      myMaterial = _getMaterialEval.myMaterial,
      oppMaterial = _getMaterialEval.oppMaterial;
    var hillEval = variantData.kingOfTheHill ? 416 / (3 * getDistFromHill(defaultSideToMove)) : 0;
    if (variantData.giveaway) {
      totalEval = -3 * myMaterial - oppMaterial - getCoordinationEval(defaultSideToMove) * 10 + hillEval;
    } else {
      totalEval += getMatesEval();
      var royalPiece = royal[defaultSideToMove];
      if (royalPiece) {
        var _getCoverage6 = getCoverage(royalPiece[0], royalPiece[1], defaultSideToMove),
          attackers = _getCoverage6.attackers;
        if (attackers.length) totalEval -= 700;
      }
      totalEval += getMobilityEval(defaultSideToMove);
      totalEval += getCoordinationEval(defaultSideToMove);
      if (isTeams) {
        var partner = _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .colors.find */ .O9.find(v => v !== defaultSideToMove && board.gameType.isSameTeam(defaultSideToMove, v));
        if (partner) Object.values(getKingSafetyEval(partner)).forEach(v => totalEval += v);
      }
      Object.values(getPinsEval()).forEach(v => totalEval += v);
      Object.values(getKingSafetyEval(defaultSideToMove)).forEach(v => totalEval += v);
      totalEval += myMaterial + oppMaterial + hillEval;
    }
    var isCastling = "specialType" in move && (move.specialType === _moveGeneration_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_4__/* .SpecialMove.CastlingKingside */ .uj.CastlingKingside || move.specialType === _moveGeneration_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_4__/* .SpecialMove.CastlingQueenside */ .uj.CastlingQueenside);
    if (!isCastling && (isKingsideCastle || isQueensideCastle)) totalEval -= 0.5;
    if (isZombieEatZombie(move)) {
      totalEval -= 10000;
    }
    switch (board.moves.getHash(board.moves.constructPreliminaryHashString(board))) {
      case 1:
        totalEval -= 10000;
        break;
      case 2:
        totalEval -= 20000;
        break;
    }
    if (variantData.fiftyMoveRule && variantData.fiftyMoveRule - board.data.plyCount < 8) totalEval -= 150000;
    board.loadSnapshot(snapshot);
    return totalEval;
  }
  return {
    stringifiedType: _BotInterface__WEBPACK_IMPORTED_MODULE_6__.ZombieType.Futer,
    evaluate(moves, board) {
      initializeBoardAccessorsFromBoard(board.createClone());
      var moveValues = new Map();
      var _iterator31 = _createForOfIteratorHelper(moves),
        _step31;
      try {
        for (_iterator31.s(); !(_step31 = _iterator31.n()).done;) {
          var move = _step31.value;
          if ((0,_moveGeneration_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_4__/* .verifyInternalMove */ .LR)(move)) {
            switch (move.type) {
              case _moveGeneration_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_4__/* .InternalMoveSignature.Resign */ .Fi.Resign:
              case _moveGeneration_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_4__/* .InternalMoveSignature.Timeout */ .Fi.Timeout:
                moveValues.set(move, -Infinity);
                break;
              case _moveGeneration_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_4__/* .InternalMoveSignature.ClaimWin */ .Fi.ClaimWin:
                moveValues.set(move, Infinity);
                break;
            }
          } else moveValues.set(move, getEval(move));
        }
      } catch (err) {
        _iterator31.e(err);
      } finally {
        _iterator31.f();
      }
      return moveValues;
    },
    pickPreferredMove(evaluations) {
      var sorted = [...evaluations.entries()].sort((a, b) => b[1] - a[1]);
      var best = [];
      var _iterator32 = _createForOfIteratorHelper(sorted),
        _step32;
      try {
        for (_iterator32.s(); !(_step32 = _iterator32.n()).done;) {
          var _step32$value = _slicedToArray(_step32.value, 2),
            move = _step32$value[0],
            evaluated = _step32$value[1];
          if (sorted[0][1] - evaluated > 0.5) break;
          best.push(move);
        }
      } catch (err) {
        _iterator32.e(err);
      } finally {
        _iterator32.f();
      }
      if (best.length > 5) best.length = 5;
      var pick = Math.floor(Math.random() * best.length);
      if (pick > 0 && Math.random() > 0.8) pick = 0;
      if (pick > 1 && Math.random() > 0.8) pick = 1;
      if (pick > 2 && Math.random() > 0.8) pick = 2;
      return (0,_RandomEvaluation__WEBPACK_IMPORTED_MODULE_7__.randomlyPickNextChainedMoves)(best[pick]);
    }
  };
}
var comfuterAlgorithm = (0,_BotInterface__WEBPACK_IMPORTED_MODULE_6__.createBotAlgorithm)(createComfuterAlgorithm());

/***/ }),

/***/ 42751:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "comfuterCheckerAlgorithm": () => (/* binding */ comfuterCheckerAlgorithm),
/* harmony export */   "comfuterMuncherAlgorithm": () => (/* binding */ comfuterMuncherAlgorithm),
/* harmony export */   "comfuterPusherAlgorithm": () => (/* binding */ comfuterPusherAlgorithm),
/* harmony export */   "createComfuterBasedAlgorithm": () => (/* binding */ createComfuterBasedAlgorithm),
/* harmony export */   "patzerAlgorithm": () => (/* binding */ patzerAlgorithm)
/* harmony export */ });
/* harmony import */ var _moveGeneration_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37017);
/* harmony import */ var _moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(16703);
/* harmony import */ var _BotInterface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(69283);
/* harmony import */ var _ComfuterEvaluation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(53241);
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }




var createComfuterBasedAlgorithm = algorithm => _objectSpread(_objectSpread({}, algorithm), {}, {
  pickPreferredMove() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    return _ComfuterEvaluation__WEBPACK_IMPORTED_MODULE_3__.comfuterAlgorithm.pickPreferredMove.apply(this, args);
  }
});
var comfuterCheckerAlgorithm = (0,_BotInterface__WEBPACK_IMPORTED_MODULE_2__.createBotAlgorithm)(createComfuterBasedAlgorithm({
  stringifiedType: _BotInterface__WEBPACK_IMPORTED_MODULE_2__.ZombieType.F_Checker,
  evaluate(moves, board) {
    var baseEvaluations = _ComfuterEvaluation__WEBPACK_IMPORTED_MODULE_3__.comfuterAlgorithm.evaluate.call(this, moves, board);
    var _iterator = _createForOfIteratorHelper(baseEvaluations),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var _step$value = _slicedToArray(_step.value, 2),
          move = _step$value[0],
          evaluation = _step$value[1];
        if ((0,_moveGeneration_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_0__/* .verifyInternalMove */ .LR)(move)) continue;
        var snapshot = board.createSnapshot();
        var _board$makeMove = board.makeMove([move]),
          checks = _board$makeMove.checks,
          checkmates = _board$makeMove.checkmates;
        var checksLength = checks.filter(Boolean).length;
        baseEvaluations.set(move, evaluation + (checkmates.includes(true) ? checksLength * 500 : checksLength * 1500));
        board.moves.deleteMove(board.moves.currentMove);
        board.loadSnapshot(snapshot);
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    return baseEvaluations;
  }
}));
var comfuterMuncherAlgorithm = (0,_BotInterface__WEBPACK_IMPORTED_MODULE_2__.createBotAlgorithm)(createComfuterBasedAlgorithm({
  stringifiedType: _BotInterface__WEBPACK_IMPORTED_MODULE_2__.ZombieType.F_Muncher,
  evaluate(moves, board) {
    var baseEvaluations = _ComfuterEvaluation__WEBPACK_IMPORTED_MODULE_3__.comfuterAlgorithm.evaluate.call(this, moves, board);
    var _iterator2 = _createForOfIteratorHelper(baseEvaluations),
      _step2;
    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        var _step2$value = _slicedToArray(_step2.value, 2),
          move = _step2$value[0],
          evaluation = _step2$value[1];
        if (!(0,_moveGeneration_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_0__/* .verifyStandardMove */ .$j)(move)) continue;
        if (move.specialType === _moveGeneration_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_0__/* .SpecialMove.EnPassant */ .uj.EnPassant || board.board[move.endCoordinates[0]][move.endCoordinates[1]].isEmpty()) continue;
        baseEvaluations.set(move, evaluation + 5000);
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
    return baseEvaluations;
  }
}));
var comfuterPusherAlgorithm = (0,_BotInterface__WEBPACK_IMPORTED_MODULE_2__.createBotAlgorithm)(createComfuterBasedAlgorithm({
  stringifiedType: _BotInterface__WEBPACK_IMPORTED_MODULE_2__.ZombieType.F_Pusher,
  evaluate(moves, board) {
    var baseEvaluations = _ComfuterEvaluation__WEBPACK_IMPORTED_MODULE_3__.comfuterAlgorithm.evaluate.call(this, moves, board);
    var _iterator3 = _createForOfIteratorHelper(baseEvaluations),
      _step3;
    try {
      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
        var _step3$value = _slicedToArray(_step3.value, 2),
          move = _step3$value[0],
          evaluation = _step3$value[1];
        if (!(0,_moveGeneration_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_0__/* .verifyStandardMove */ .$j)(move)) continue;
        var pieceString = board.board[move.startCoordinates[0]][move.startCoordinates[1]];
        if (pieceString.isPiece() && !_moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .pieceControlConfigSettings */ .Gf[pieceString.piece].moveGenerationSettings.isPawn) {
          baseEvaluations.set(move, evaluation + 5000);
        }
      }
    } catch (err) {
      _iterator3.e(err);
    } finally {
      _iterator3.f();
    }
    return baseEvaluations;
  }
}));
var patzerAlgorithm = (0,_BotInterface__WEBPACK_IMPORTED_MODULE_2__.createBotAlgorithm)(createComfuterBasedAlgorithm({
  stringifiedType: _BotInterface__WEBPACK_IMPORTED_MODULE_2__.ZombieType.Patzer,
  evaluate(moves, defaultBoard) {
    var baseEvaluations = _ComfuterEvaluation__WEBPACK_IMPORTED_MODULE_3__.comfuterAlgorithm.evaluate.call(this, moves, defaultBoard);
    var _iterator4 = _createForOfIteratorHelper(baseEvaluations),
      _step4;
    try {
      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
        var _step4$value = _slicedToArray(_step4.value, 2),
          move = _step4$value[0],
          evaluation = _step4$value[1];
        baseEvaluations.set(move, -evaluation);
      }
    } catch (err) {
      _iterator4.e(err);
    } finally {
      _iterator4.f();
    }
    return baseEvaluations;
  }
}));

/***/ }),

/***/ 78497:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RanterAlgorithm": () => (/* binding */ RanterAlgorithm)
/* harmony export */ });
/* harmony import */ var _BotInterface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(69283);
/* harmony import */ var _ComfuterEvaluation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(53241);
/* harmony import */ var _ComfuterEvaluationExtensions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(42751);
/* harmony import */ var _RandomEvaluation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(12160);




var RanterAlgorithm = (0,_BotInterface__WEBPACK_IMPORTED_MODULE_0__.createBotAlgorithm)((0,_ComfuterEvaluationExtensions__WEBPACK_IMPORTED_MODULE_2__.createComfuterBasedAlgorithm)({
  stringifiedType: _BotInterface__WEBPACK_IMPORTED_MODULE_0__.ZombieType.Ranter,
  evaluate() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    if (Math.random() < 0.5) {
      return _RandomEvaluation__WEBPACK_IMPORTED_MODULE_3__.randoBotAlgorithm.evaluate.apply(this, args);
    } else return _ComfuterEvaluation__WEBPACK_IMPORTED_MODULE_1__.comfuterAlgorithm.evaluate.apply(this, args);
  }
}));

/***/ }),

/***/ 12160:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "randoBotAlgorithm": () => (/* binding */ randoBotAlgorithm),
/* harmony export */   "randomlyPickNextChainedMoves": () => (/* binding */ randomlyPickNextChainedMoves)
/* harmony export */ });
/* harmony import */ var _moveGeneration_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37017);
/* harmony import */ var _BotInterface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(69283);
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }


function randomlyPickNextChainedMoves(move) {
  var resultingMove = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  var newMove = [...resultingMove, move];
  if (move.nextChainedMoves && !move.isForcedContinuation && Math.random() > 0.5) {
    return randomlyPickNextChainedMoves(move.nextChainedMoves[Math.floor(Math.random() * move.nextChainedMoves.length)], newMove);
  } else {
    if (!(0,_moveGeneration_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_0__/* .verifyRequiredMove */ .nc)(newMove)) throw new Error("Required move length is 0");
    return newMove;
  }
}
var randoBotAlgorithm = (0,_BotInterface__WEBPACK_IMPORTED_MODULE_1__.createBotAlgorithm)({
  stringifiedType: _BotInterface__WEBPACK_IMPORTED_MODULE_1__.ZombieType.Rando,
  evaluate(moves, board) {
    var copyOfMoves = moves.slice();
    for (var i = moves.length - 1; i > 0; i--) {
      var j = Math.floor(Math.random() * (i + 1));
      var _ref = [moves[j], moves[i]];
      copyOfMoves[i] = _ref[0];
      copyOfMoves[j] = _ref[1];
    }
    var data = board.data,
      boardSquares = board.board;
    var zombieEatZombieMoves = [];
    var otherMoves = [];
    var _iterator = _createForOfIteratorHelper(copyOfMoves),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var move = _step.value;
        if ((0,_moveGeneration_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_0__/* .verifyStandardMove */ .$j)(move)) {
          var targetPiece = boardSquares[move.endCoordinates[1]][move.endCoordinates[0]];
          if (targetPiece.isPiece() && data.fenOptions.tag("resigned")[targetPiece.color]) {
            zombieEatZombieMoves.push(move);
            continue;
          }
        }
        otherMoves.push(move);
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    var startingEvaluation = 0;
    return new Map([...otherMoves.reduce((p, n) => (p.push([n, --startingEvaluation]), p), []), ...zombieEatZombieMoves.reduce((p, n) => (p.push([n, --startingEvaluation / 2]), p), [])]);
  },
  pickPreferredMove(evaluations) {
    return randomlyPickNextChainedMoves([...evaluations.entries()].reduce((p, n) => n[1] > p[1] ? n : p)[0]);
  }
});

/***/ }),

/***/ 48656:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "checkerAlgorithm": () => (/* binding */ checkerAlgorithm),
/* harmony export */   "createRandomBasedAlgorithm": () => (/* binding */ createRandomBasedAlgorithm),
/* harmony export */   "muncherAlgorithm": () => (/* binding */ muncherAlgorithm),
/* harmony export */   "pusherAlgorithm": () => (/* binding */ pusherAlgorithm)
/* harmony export */ });
/* harmony import */ var _moveGeneration_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37017);
/* harmony import */ var _moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(16703);
/* harmony import */ var _BotInterface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(69283);
/* harmony import */ var _RandomEvaluation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(12160);
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }




var createRandomBasedAlgorithm = algorithm => _objectSpread(_objectSpread({}, algorithm), {}, {
  pickPreferredMove() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    return _RandomEvaluation__WEBPACK_IMPORTED_MODULE_3__.randoBotAlgorithm.pickPreferredMove.apply(this, args);
  }
});
var checkerAlgorithm = (0,_BotInterface__WEBPACK_IMPORTED_MODULE_2__.createBotAlgorithm)(createRandomBasedAlgorithm({
  stringifiedType: _BotInterface__WEBPACK_IMPORTED_MODULE_2__.ZombieType.Checker,
  evaluate(moves, board) {
    var baseEvaluations = _RandomEvaluation__WEBPACK_IMPORTED_MODULE_3__.randoBotAlgorithm.evaluate.call(this, moves, board);
    var _iterator = _createForOfIteratorHelper(baseEvaluations),
      _step;
    try {
      var _loop = function _loop() {
        var _step$value = _slicedToArray(_step.value, 2),
          move = _step$value[0],
          evaluation = _step$value[1];
        var snapshot = board.createSnapshot();
        var _board$makeMove = board.makeMove([move]),
          checks = _board$makeMove.checks,
          checkmates = _board$makeMove.checkmates;
        if (checks.filter((c, i) => c && !checkmates[i] === c).length === 0) {
          baseEvaluations.set(move, evaluation / (evaluation / 2));
        }
        board.loadSnapshot(snapshot);
      };
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        _loop();
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    return baseEvaluations;
  }
}));
var muncherAlgorithm = (0,_BotInterface__WEBPACK_IMPORTED_MODULE_2__.createBotAlgorithm)(createRandomBasedAlgorithm({
  stringifiedType: _BotInterface__WEBPACK_IMPORTED_MODULE_2__.ZombieType.Muncher,
  evaluate(moves, board) {
    var baseEvaluations = _RandomEvaluation__WEBPACK_IMPORTED_MODULE_3__.randoBotAlgorithm.evaluate.call(this, moves, board);
    var _iterator2 = _createForOfIteratorHelper(baseEvaluations),
      _step2;
    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        var _step2$value = _slicedToArray(_step2.value, 2),
          move = _step2$value[0],
          evaluation = _step2$value[1];
        if (!(0,_moveGeneration_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_0__/* .verifyStandardMove */ .$j)(move)) continue;
        if (move.specialType === _moveGeneration_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_0__/* .SpecialMove.EnPassant */ .uj.EnPassant || board.board[move.endCoordinates[0]][move.endCoordinates[1]].isEmpty()) continue;
        baseEvaluations.set(move, evaluation / (evaluation / 2));
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
    return baseEvaluations;
  }
}));
var pusherAlgorithm = (0,_BotInterface__WEBPACK_IMPORTED_MODULE_2__.createBotAlgorithm)(createRandomBasedAlgorithm({
  stringifiedType: _BotInterface__WEBPACK_IMPORTED_MODULE_2__.ZombieType.Pusher,
  evaluate(moves, board) {
    var baseEvaluations = _RandomEvaluation__WEBPACK_IMPORTED_MODULE_3__.randoBotAlgorithm.evaluate.call(this, moves, board);
    var _iterator3 = _createForOfIteratorHelper(baseEvaluations),
      _step3;
    try {
      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
        var _step3$value = _slicedToArray(_step3.value, 2),
          move = _step3$value[0],
          evaluation = _step3$value[1];
        if (!(0,_moveGeneration_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_0__/* .verifyStandardMove */ .$j)(move)) continue;
        var pieceString = board.board[move.startCoordinates[0]][move.startCoordinates[1]];
        if (pieceString.isPiece() && !_moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .pieceControlConfigSettings */ .Gf[pieceString.piece].moveGenerationSettings.isPawn) {
          baseEvaluations.set(move, evaluation / (evaluation / 2));
        }
      }
    } catch (err) {
      _iterator3.e(err);
    } finally {
      _iterator3.f();
    }
    return baseEvaluations;
  }
}));

/***/ }),

/***/ 69283:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ZombieType": () => (/* binding */ ZombieType),
/* harmony export */   "botAlgorithms": () => (/* binding */ botAlgorithms),
/* harmony export */   "createBotAlgorithm": () => (/* binding */ createBotAlgorithm),
/* harmony export */   "verifyZombieType": () => (/* binding */ verifyZombieType)
/* harmony export */ });
var ZombieType = /*#__PURE__*/function (ZombieType) {
  ZombieType["Rando"] = "rando";
  ZombieType["Futer"] = "comfuter";
  ZombieType["Ranter"] = "ranter";
  ZombieType["Patzer"] = "patzer";
  ZombieType["Pusher"] = "pusher";
  ZombieType["Checker"] = "checker";
  ZombieType["Muncher"] = "muncher";
  ZombieType["F_Pusher"] = "pusher_comfuter";
  ZombieType["F_Checker"] = "checker_comfuter";
  ZombieType["F_Muncher"] = "muncher_comfuter";
  return ZombieType;
}({});
var verifyZombieType = zombieType => zombieType in ZombieType;
var botAlgorithms = new Map();
function createBotAlgorithm(algorithm) {
  botAlgorithms.set(algorithm.stringifiedType, algorithm);
  return algorithm;
}

/***/ }),

/***/ 14599:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "InsufficientMaterialChecker": () => (/* binding */ InsufficientMaterialChecker)
/* harmony export */ });
/* harmony import */ var _InsufficientMaterialConstructor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(84926);
/* harmony import */ var _client_ts_baseTypes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(18027);
/* harmony import */ var _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(76758);
/* harmony import */ var _FENDataDecorators_StalemateOptions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(47822);
/* harmony import */ var _moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(16703);
/* harmony import */ var _PieceControlDecorators_PromotionRank__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(46393);
/* harmony import */ var _moveGeneration_Board_BoardInterface__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(29939);
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }







class InsufficientMaterialChecker {
  constructor(state, board) {
    _defineProperty(this, "noRoyalsToMate", false);
    _defineProperty(this, "isDisabled", false);
    _defineProperty(this, "promotionPieces", void 0);
    _defineProperty(this, "hasPromotion", void 0);
    this.state = state;
    var _iterator = _createForOfIteratorHelper(board.variantRules),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var variantRule = _step.value;
        var _variantRule$getInsuf = variantRule.getInsufficientMaterialData(),
          isDisabled = _variantRule$getInsuf.isDisabled,
          isPartiallyDisabled = _variantRule$getInsuf.isPartiallyDisabled;
        if (isDisabled) {
          this.isDisabled = true;
          break;
        } else if (isPartiallyDisabled) this.noRoyalsToMate = true;
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    this.hasPromotion = board.variantData.promotionRank !== _PieceControlDecorators_PromotionRank__WEBPACK_IMPORTED_MODULE_4__.disabledRank;
    this.promotionPieces = board.variantData.promotionPieces || [];
  }
  getRoyalPieceMedians(board) {
    var _this$state = this.state,
      walls = _this$state.walls,
      royalMoveMedians = _this$state.royalMoveMedians,
      royal = board.data.fenOptions.tag("royal"),
      variantData = board.variantData,
      boardSquares = board.board;
    var extraWalls = boardSquares.reduce((accumulator, row, i) => {
      return accumulator + row.reduce((accumulator, square, j) => {
        if (square.isWall() && !walls[i][j]) {
          return accumulator + 1;
        } else return accumulator;
      }, 0);
    }, 0);
    return royalMoveMedians.map((median, i) => {
      if (!royal[i]) return;
      var minimumMedian;
      if (variantData.stalemateOptions === _FENDataDecorators_StalemateOptions__WEBPACK_IMPORTED_MODULE_2__.stalemateOptionsValues.stalemateLoses) {
        minimumMedian = 1;
        median--;
      } else {
        median++;
        minimumMedian = 2;
      }
      median -= extraWalls;
      if (median < minimumMedian) median = minimumMedian;
      return median;
    });
  }
  obtainPieceSymbolFromCoordinate(board, coordinate) {
    var _this$state2 = this.state,
      optimizedPieces = _this$state2.optimizedPieces,
      pieceSquareMedians = _this$state2.pieceSquareMedians,
      backwardsPieceRegistry = _this$state2.backwardsPieceRegistry;
    var piece = board.board[coordinate[0]][coordinate[1]];
    if (_moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_3__/* .pieceControlConfigSettings */ .Gf[piece.piece].moveGenerationSettings.isPawn && this.hasPromotion) {
      var availableSymbols = [...optimizedPieces].filter(p => (0,_moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_3__/* .verifyPieceLetter */ .IM)(p) && !_moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_3__/* .pieceControlConfigSettings */ .Gf[p].moveGenerationSettings.isPawn).map(p => pieceSquareMedians[p]);
      if (availableSymbols.length === 0) {
        return {
          selectedSymbol: _InsufficientMaterialConstructor__WEBPACK_IMPORTED_MODULE_0__.InsufficientMaterialConstructor.NON_INDEXED_PIECE_SYMBOL,
          piece
        };
      } else {
        var candidates = availableSymbols.map(s => {
          return s[Object.getOwnPropertySymbols(s)[0]].reduce((p, n) => p + (n !== null && n !== void 0 ? n : 0), 0);
        });
        var candidateIndex = candidates.indexOf(Math.max(...candidates));
        var symbol = Object.getOwnPropertySymbols(availableSymbols[candidateIndex])[0];
        return {
          selectedSymbol: symbol,
          piece
        };
      }
    } else {
      var _availableSymbols = Object.getOwnPropertySymbols(pieceSquareMedians[piece.piece]);
      var selectedSymbol = _availableSymbols.length === 1 ? _availableSymbols[0] : backwardsPieceRegistry[piece.piece][coordinate[0]][coordinate[1]];
      (0,_client_ts_baseTypes__WEBPACK_IMPORTED_MODULE_6__/* .assertNonUndefined */ .lM)(selectedSymbol);
      return {
        selectedSymbol,
        piece
      };
    }
  }
  getPartialIntersection(parameters) {
    var pieceSquareMedians = this.state.pieceSquareMedians,
      board = parameters.board,
      army = parameters.army,
      pieces = parameters.pieces,
      royalColor = parameters.royalColor;
    var _iterator2 = _createForOfIteratorHelper(army),
      _step2;
    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        var coordinate = _step2.value;
        var _this$obtainPieceSymb = this.obtainPieceSymbolFromCoordinate(board, coordinate),
          piece = _this$obtainPieceSymb.piece,
          selectedSymbol = _this$obtainPieceSymb.selectedSymbol;
        var symbolsLength = Object.getOwnPropertySymbols(pieceSquareMedians[piece.piece]).length;
        if (symbolsLength > 1 || _moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_3__/* .pieceControlConfigSettings */ .Gf[piece.piece].moveGenerationSettings.isColorBound) {
          var _iterator3 = _createForOfIteratorHelper(pieces[royalColor]),
            _step3;
          try {
            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
              var enemyCoordinate = _step3.value;
              var _this$obtainPieceSymb2 = this.obtainPieceSymbolFromCoordinate(board, enemyCoordinate),
                enemySymbol = _this$obtainPieceSymb2.selectedSymbol;
              if (selectedSymbol === enemySymbol) return Infinity;
            }
          } catch (err) {
            _iterator3.e(err);
          } finally {
            _iterator3.f();
          }
        } else return Infinity;
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
    return -1;
  }
  checkCurrentState(board) {
    var _this = this;
    var fenOptions = board.data.fenOptions;
    var dead = fenOptions.tag("dead"),
      royal = fenOptions.tag("royal");
    var pieces = board.getPlayerPieces(),
      resultingInsufficientPieces = (0,_client_ts_baseTypes__WEBPACK_IMPORTED_MODULE_6__/* .createTuple */ .VS)(false, _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_1__/* .totalPlayers */ .q3);
    if (this.isDisabled) return resultingInsufficientPieces;
    var royalPieceMedians = this.getRoyalPieceMedians(board),
      _this$state3 = this.state,
      oppositionMedians = _this$state3.oppositionMedians,
      pieceSquareMedians = _this$state3.pieceSquareMedians;
    var squaresPlayerCanOutrange = (0,_client_ts_baseTypes__WEBPACK_IMPORTED_MODULE_6__/* .createTupleFromCallback */ .fi)(() => (0,_client_ts_baseTypes__WEBPACK_IMPORTED_MODULE_6__/* .createTuple */ .VS)(0, _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_1__/* .totalPlayers */ .q3), _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_1__/* .totalPlayers */ .q3);
    var _iterator4 = _createForOfIteratorHelper(_moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_1__/* .colors */ .O9),
      _step4;
    try {
      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
        var color = _step4.value;
        var army = pieces[color];
        if (dead[color]) continue;
        var _iterator6 = _createForOfIteratorHelper(_moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_1__/* .colors */ .O9),
          _step6;
        try {
          var _loop = function _loop() {
            var royalColor = _step6.value;
            if (color === royalColor || dead[royalColor]) return "continue";
            if (!royal[royalColor] || _this.noRoyalsToMate) {
              squaresPlayerCanOutrange[royalColor][color] = _this.getPartialIntersection({
                board,
                army,
                pieces,
                royalColor
              });
            } else {
              var royalSquares = royalPieceMedians[royalColor];
              if (royalSquares === undefined) return "continue";
              var fenRoyal = royal[color],
                currentColorBounds = [];
              var _iterator7 = _createForOfIteratorHelper(army),
                _step7;
              try {
                for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {
                  var coordinate = _step7.value;
                  if (fenRoyal && (0,_moveGeneration_Board_BoardInterface__WEBPACK_IMPORTED_MODULE_5__/* .compareCoordinates */ .ef)(coordinate, fenRoyal)) {
                    if (board.variantData.royalsCannotCapture) {
                      squaresPlayerCanOutrange[color][royalColor]++;
                    } else {
                      squaresPlayerCanOutrange[color][royalColor] += oppositionMedians[color][royalColor];
                    }
                  } else {
                    var _this$obtainPieceSymb3 = _this.obtainPieceSymbolFromCoordinate(board, coordinate),
                      piece = _this$obtainPieceSymb3.piece,
                      selectedSymbol = _this$obtainPieceSymb3.selectedSymbol;
                    if (_this.hasPromotion && _moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_3__/* .pieceControlConfigSettings */ .Gf[piece.piece].moveGenerationSettings.isPawn) {
                      var medians = _this.promotionPieces.map(piece => {
                        var _pieceSquareMedians$p;
                        var subSymbol = Object.getOwnPropertySymbols(pieceSquareMedians[piece])[0];
                        return (_pieceSquareMedians$p = pieceSquareMedians[piece][subSymbol][royalColor]) !== null && _pieceSquareMedians$p !== void 0 ? _pieceSquareMedians$p : 0;
                      });
                      squaresPlayerCanOutrange[color][royalColor] += Math.max(...medians);
                    } else {
                      var _pieceSquareMedians$p2;
                      if (_moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_3__/* .pieceControlConfigSettings */ .Gf[piece.piece].moveGenerationSettings.isColorBound) {
                        if (currentColorBounds.includes(selectedSymbol)) continue;
                        currentColorBounds.push(selectedSymbol);
                      }
                      squaresPlayerCanOutrange[color][royalColor] += (_pieceSquareMedians$p2 = pieceSquareMedians[piece.piece][selectedSymbol][royalColor]) !== null && _pieceSquareMedians$p2 !== void 0 ? _pieceSquareMedians$p2 : 0;
                    }
                  }
                }
              } catch (err) {
                _iterator7.e(err);
              } finally {
                _iterator7.f();
              }
              squaresPlayerCanOutrange[color][royalColor] += pieces[royalColor].length - 1;
            }
          };
          for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {
            var _ret = _loop();
            if (_ret === "continue") continue;
          }
        } catch (err) {
          _iterator6.e(err);
        } finally {
          _iterator6.f();
        }
      }
    } catch (err) {
      _iterator4.e(err);
    } finally {
      _iterator4.f();
    }
    var _iterator5 = _createForOfIteratorHelper(_moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_1__/* .colors */ .O9),
      _step5;
    try {
      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
        var _color = _step5.value;
        if (dead[_color]) continue;
        var sum = 0;
        for (var i = 0; i < _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_1__/* .totalPlayers */ .q3; i++) {
          if (i === _color) continue;
          sum += squaresPlayerCanOutrange[i][_color];
        }
        var _royal = royalPieceMedians[_color];
        if (_royal !== undefined && sum <= _royal || sum < 0) resultingInsufficientPieces[_color] = true;
      }
    } catch (err) {
      _iterator5.e(err);
    } finally {
      _iterator5.f();
    }
    return resultingInsufficientPieces;
  }
}

/***/ }),

/***/ 84926:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "InsufficientMaterialConstructor": () => (/* binding */ InsufficientMaterialConstructor)
/* harmony export */ });
/* harmony import */ var _client_ts_baseTypes__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(18027);
/* harmony import */ var _client_ts_logic_BaseInterfaces__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(34355);
/* harmony import */ var _moveGeneration_Board_Board__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(80273);
/* harmony import */ var _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(76758);
/* harmony import */ var _moveGeneration_GameInformation_GameUnits_PieceString__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(20915);
/* harmony import */ var _moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(16703);
/* harmony import */ var _Utilities__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(63659);
/* harmony import */ var _PieceControlDecorators_PromotionRank__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(46393);
/* harmony import */ var _moveGeneration_Board_BoardInterface__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(29939);
/* harmony import */ var _utils_NumberUtils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(35948);
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }










class InsufficientMaterialConstructor {
  constructor(board, callback) {
    _defineProperty(this, "board", void 0);
    _defineProperty(this, "emptyBoard", void 0);
    _defineProperty(this, "pieceMoveRegistry", {});
    _defineProperty(this, "possibleRoyals", (0,_client_ts_baseTypes__WEBPACK_IMPORTED_MODULE_8__/* .createTupleFromCallback */ .fi)(() => [], _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .totalPlayers */ .q3));
    _defineProperty(this, "boardDestinations", new Map());
    _defineProperty(this, "royalPieceSets", (0,_client_ts_baseTypes__WEBPACK_IMPORTED_MODULE_8__/* .createTupleFromCallback */ .fi)(() => new Set(), _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .totalPlayers */ .q3));
    _defineProperty(this, "state", void 0);
    this.callback = callback;
    this.board = board.createClone();
    this.emptyBoard = this.board.board.map(row => row.map(square => square.isWall() ? square : _moveGeneration_GameInformation_GameUnits_PieceString__WEBPACK_IMPORTED_MODULE_3__/* .emptyPieceString */ .v2));
    this.state = {
      walls: this.emptyBoard.map(row => row.map(square => square.isWall())),
      backwardsPieceRegistry: {},
      royalMoveMedians: (0,_client_ts_baseTypes__WEBPACK_IMPORTED_MODULE_8__/* .createTuple */ .VS)(0, _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .totalPlayers */ .q3),
      pieceSquareMedians: {
        [_moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_4__/* .grasshopperPieceLetter */ .OB]: {
          [InsufficientMaterialConstructor.NON_INDEXED_PIECE_SYMBOL]: [2, 2, 2, 2]
        }
      },
      optimizedPieces: (0,_Utilities__WEBPACK_IMPORTED_MODULE_5__.optimizePieceSet)(this.board.variantData.promotionPieces || [], true),
      oppositionMedians: (0,_client_ts_baseTypes__WEBPACK_IMPORTED_MODULE_8__/* .createTupleFromCallback */ .fi)(() => (0,_client_ts_baseTypes__WEBPACK_IMPORTED_MODULE_8__/* .createTuple */ .VS)(0, _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .totalPlayers */ .q3), _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .totalPlayers */ .q3)
    };
  }
  initializeRoyals() {
    var boardSquares = this.board.board,
      promotionPieces = this.board.variantData.promotionPieces || [];
    this.board.data.fenOptions.tag("royal").forEach((royal, color) => {
      if (royal) {
        var piece = boardSquares[royal[0]][royal[1]].piece;
        if (_moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_4__/* .pieceControlConfigSettings */ .Gf[piece].moveGenerationSettings.isPawn) {
          this.possibleRoyals[color] = [piece, ...promotionPieces];
        } else this.possibleRoyals[color] = [piece];
      } else if (promotionPieces.includes(_moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_4__/* .defaultPieces.king */ .bB.king)) {
        this.possibleRoyals[color] = [_moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_4__/* .defaultPieces.king */ .bB.king];
      }
    });
    var _iterator = _createForOfIteratorHelper(_moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .colors */ .O9),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var color = _step.value;
        if (this.possibleRoyals[color].length > 1) {
          this.royalPieceSets[color] = (0,_Utilities__WEBPACK_IMPORTED_MODULE_5__.optimizePieceSet)(this.possibleRoyals[color], false);
        } else if (this.possibleRoyals[color].length === 1) {
          this.royalPieceSets[color].add(this.possibleRoyals[color][0]);
        }
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
  }
  recurseThroughSquares(i, j, piece) {
    var emptyBoard = this.emptyBoard,
      controls = this.board.controls,
      pieceMoveRegistry = this.pieceMoveRegistry;
    var currentSquares = new Set(),
      unvisitedSquares = new Set();
    if (!piece.isPiece()) throw new TypeError("Wrong piece signature detected at ".concat(piece.value));
    var baseBuilder = controls[piece.piece]().setColor(piece.color).setBoard(emptyBoard).setBaseImmunePieces(_moveGeneration_Board_Board__WEBPACK_IMPORTED_MODULE_1__/* .baseImmunes */ .i);
    var registryResult = (0,_client_ts_logic_BaseInterfaces__WEBPACK_IMPORTED_MODULE_0__/* .initializeBoardSquares */ .BD)(() => new Uint16Array(_moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .boardDimension */ .iJ).fill(_Utilities__WEBPACK_IMPORTED_MODULE_5__.oneBitMask));
    function recurse(x, y) {
      var control = baseBuilder.setCoordinates(x, y).constructPieceControl();
      var moves = control.getPseudoLegalMoves(),
        moveLength = moves.length;
      if (moveLength === 0) return;
      for (var _i = 0; _i < moveLength; _i++) {
        var move = moves[_i].move;
        var moveString = (0,_moveGeneration_Board_BoardInterface__WEBPACK_IMPORTED_MODULE_7__/* .stringifyCoordinate */ .Kv)(move);
        registryResult[x][y][move[0]] |= _Utilities__WEBPACK_IMPORTED_MODULE_5__.binaryMasks[move[1]];
        if (!currentSquares.has(moveString)) {
          unvisitedSquares.add(moveString);
        }
      }
      var _iterator2 = _createForOfIteratorHelper(unvisitedSquares),
        _step2;
      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var value = _step2.value;
          var _value$split = value.split(":"),
            _value$split2 = _slicedToArray(_value$split, 2),
            _x2 = _value$split2[0],
            _y = _value$split2[1];
          if (!currentSquares.has(value)) {
            currentSquares.add(value);
            recurse(parseInt(_x2, 10), parseInt(_y, 10));
          }
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
    }
    recurse(i, j);
    if (!(piece.piece in pieceMoveRegistry)) pieceMoveRegistry[piece.piece] = {};
    pieceMoveRegistry[piece.piece][Symbol()] = registryResult;
    var permutations = new Uint16Array(14).fill(_Utilities__WEBPACK_IMPORTED_MODULE_5__.oneBitMask);
    currentSquares.forEach(value => {
      var valueArr = value.split(":");
      permutations[parseInt(valueArr[0], 10)] |= _Utilities__WEBPACK_IMPORTED_MODULE_5__.binaryMasks[parseInt(valueArr[1], 10)];
    });
    unvisitedSquares.forEach(value => {
      var valueArr = value.split(":");
      permutations[parseInt(valueArr[0], 10)] |= _Utilities__WEBPACK_IMPORTED_MODULE_5__.binaryMasks[parseInt(valueArr[1], 10)];
    });
    return permutations;
  }
  addToBoardDestinations(i, j, piece) {
    var permutations = this.recurseThroughSquares(i, j, piece);
    var boardPiece = this.boardDestinations.get(piece.piece);
    if (boardPiece) {
      this.boardDestinations.set(piece.piece, boardPiece.concat(permutations));
    } else {
      this.boardDestinations.set(piece.piece, [permutations]);
    }
  }
  getBoardDestinations() {
    var boardSquares = this.board.board,
      promotionRank = this.board.variantData.promotionRank || _PieceControlDecorators_PromotionRank__WEBPACK_IMPORTED_MODULE_6__.disabledRank,
      promotionPieces = this.board.variantData.promotionPieces || [];
    for (var i = 0; i < _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .boardDimension */ .iJ; i++) {
      for (var j = 0; j < _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .boardDimension */ .iJ; j++) {
        if (boardSquares[i][j].isPiece()) this.addToBoardDestinations(i, j, boardSquares[i][j]);
      }
    }
    var hasPromotion = promotionRank !== _PieceControlDecorators_PromotionRank__WEBPACK_IMPORTED_MODULE_6__.disabledRank && promotionPieces.some(p => (0,_moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_4__/* .verifyPieceLetter */ .IM)(p));
    var promotionRanks = [_moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .boardDimension */ .iJ - promotionRank, promotionRank - 1, promotionRank - 1, _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .boardDimension */ .iJ - promotionRank];
    var optimizedPieces = (0,_Utilities__WEBPACK_IMPORTED_MODULE_5__.optimizePieceSet)(promotionPieces, true);
    if (hasPromotion) {
      var _iterator3 = _createForOfIteratorHelper(_moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .colors */ .O9),
        _step3;
      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
          var color = _step3.value;
          color &= 1;
          for (var x = 0; x < _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .boardDimension */ .iJ; x++) {
            var _i2 = color ? promotionRanks[color] : x,
              _j = color ? x : promotionRanks[color];
            if (this.state.walls[_i2][_j]) continue;
            var _iterator4 = _createForOfIteratorHelper(optimizedPieces),
              _step4;
            try {
              for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
                var piece = _step4.value;
                this.addToBoardDestinations(_i2, _j, (0,_moveGeneration_GameInformation_GameUnits_PieceString__WEBPACK_IMPORTED_MODULE_3__/* .createPieceFromData */ .HC)(0, piece));
              }
            } catch (err) {
              _iterator4.e(err);
            } finally {
              _iterator4.f();
            }
          }
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
    }
  }
  initializeBackwardsPieceRegistry() {
    var _this = this;
    var entries = this.boardDestinations.entries(),
      backwardsPieceRegistry = this.state.backwardsPieceRegistry,
      pieceMoveRegistry = this.pieceMoveRegistry;
    var _iterator5 = _createForOfIteratorHelper(entries),
      _step5;
    try {
      var _loop = function _loop() {
        var _step5$value = _slicedToArray(_step5.value, 2),
          entry = _step5$value[0],
          uintArray = _step5$value[1];
        if (_moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_4__/* .pieceControlConfigSettings */ .Gf[entry].moveGenerationSettings.isPawn || entry === _moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_4__/* .grasshopperPieceLetter */ .OB || !(0,_moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_4__/* .verifyPieceLetter */ .IM)(entry)) return "continue";
        var isAlwaysIntersecting = true;
        var permutationArray = [];
        var _iterator6 = _createForOfIteratorHelper(uintArray),
          _step6;
        try {
          var _loop2 = function _loop2() {
            var permutationEntry = _step6.value;
            if (permutationArray.length === 0) {
              permutationArray.push(permutationEntry);
            } else {
              var index = permutationArray.findIndex(uintArr => {
                if (typeof uintArr !== "number") return uintArr.every((n, j) => n === permutationEntry[j]);
                return false;
              });
              if (~index) {
                permutationArray.push(index);
              } else {
                permutationArray.push(permutationEntry);
                isAlwaysIntersecting = false;
              }
            }
          };
          for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {
            _loop2();
          }
        } catch (err) {
          _iterator6.e(err);
        } finally {
          _iterator6.f();
        }
        if (isAlwaysIntersecting) {
          pieceMoveRegistry[entry] = {
            [Symbol()]: pieceMoveRegistry[entry][Object.getOwnPropertySymbols(pieceMoveRegistry[entry])[0]]
          };
        } else {
          if (!(entry in backwardsPieceRegistry)) {
            backwardsPieceRegistry[entry] = (0,_client_ts_logic_BaseInterfaces__WEBPACK_IMPORTED_MODULE_0__/* .initializeBoardSquares */ .BD)(() => null);
          }
          var remappedSymbols = [];
          var _iterator7 = _createForOfIteratorHelper(permutationArray),
            _step7;
          try {
            for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {
              var squares = _step7.value;
              var remappedSymbol = void 0;
              if (typeof squares === "number") {
                remappedSymbols.push(squares);
                continue;
              }
              for (var _i3 = 0; _i3 < _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .boardDimension */ .iJ; _i3++) {
                for (var j = 0; j < _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .boardDimension */ .iJ; j++) {
                  if (squares[_i3] & _Utilities__WEBPACK_IMPORTED_MODULE_5__.binaryMasks[j] ^ _Utilities__WEBPACK_IMPORTED_MODULE_5__.oneBitMask) {
                    var _this$state$backwards, _j2, _this$state$backwards2;
                    if (!remappedSymbol) {
                      remappedSymbol = Symbol();
                      remappedSymbols.push(remappedSymbol);
                    }
                    (_this$state$backwards2 = (_this$state$backwards = _this.state.backwardsPieceRegistry[entry][_i3])[_j2 = j]) !== null && _this$state$backwards2 !== void 0 ? _this$state$backwards2 : _this$state$backwards[_j2] = remappedSymbol;
                  }
                }
              }
            }
          } catch (err) {
            _iterator7.e(err);
          } finally {
            _iterator7.f();
          }
          var uintValues = Object.getOwnPropertySymbols(pieceMoveRegistry[entry]).map(sym => pieceMoveRegistry[entry][sym]);
          pieceMoveRegistry[entry] = {};
          for (var i = 0; i < uintValues.length; i++) {
            var remapped = remappedSymbols[i];
            if (typeof remapped === "number") continue;
            if (typeof remapped === "undefined") break;
            pieceMoveRegistry[entry][remapped] = uintValues[i];
          }
        }
      };
      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
        var _ret = _loop();
        if (_ret === "continue") continue;
      }
    } catch (err) {
      _iterator5.e(err);
    } finally {
      _iterator5.f();
    }
  }
  generateOppositionSquares() {
    var boardSquares = this.board.board,
      controls = this.board.controls,
      emptyBoard = this.emptyBoard;
    var royalMoves = (0,_client_ts_baseTypes__WEBPACK_IMPORTED_MODULE_8__/* .createTuple */ .VS)((0,_client_ts_logic_BaseInterfaces__WEBPACK_IMPORTED_MODULE_0__/* .initializeBoardSquares */ .BD)(() => new Uint16Array(_moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .boardDimension */ .iJ).fill(_Utilities__WEBPACK_IMPORTED_MODULE_5__.oneBitMask)), _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .totalPlayers */ .q3);
    var oppositionRowEchelon = (0,_client_ts_baseTypes__WEBPACK_IMPORTED_MODULE_8__/* .createTuple */ .VS)(undefined, _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .totalPlayers */ .q3);
    this.board.data.fenOptions.tag("royal").forEach((royal, color) => {
      if (!royal) return;
      var royalPiece = boardSquares[royal[0]][royal[1]];
      var controlBuilder = controls[royalPiece.piece];
      var builder = controlBuilder().setColor(0).setBaseImmunePieces(_moveGeneration_Board_Board__WEBPACK_IMPORTED_MODULE_1__/* .baseImmunes */ .i).setBoard(emptyBoard);
      var finalArray = (0,_client_ts_logic_BaseInterfaces__WEBPACK_IMPORTED_MODULE_0__/* .initializeBoardSquares */ .BD)(() => new Uint16Array(14).fill(_Utilities__WEBPACK_IMPORTED_MODULE_5__.oneBitMask));
      for (var i = 0; i < boardSquares.length; i++) {
        for (var j = 0; j < boardSquares[0].length; j++) {
          if (emptyBoard[i][j].isWall()) continue;
          var control = builder.setCoordinates(i, j).constructPieceControl();
          var moves = control.getPseudoLegalMoves();
          var permutationArray = new Uint16Array(_moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .boardDimension */ .iJ).fill(_Utilities__WEBPACK_IMPORTED_MODULE_5__.oneBitMask);
          var _iterator8 = _createForOfIteratorHelper(moves),
            _step8;
          try {
            for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {
              var move = _step8.value.move;
              permutationArray[move[0]] |= _Utilities__WEBPACK_IMPORTED_MODULE_5__.binaryMasks[move[1]];
            }
          } catch (err) {
            _iterator8.e(err);
          } finally {
            _iterator8.f();
          }
          finalArray[i][j] = permutationArray;
          royalMoves[color][i][j] = permutationArray;
        }
      }
      oppositionRowEchelon[color] = finalArray;
    });
    var _iterator9 = _createForOfIteratorHelper(_moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .colors */ .O9),
      _step9;
    try {
      for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {
        var color = _step9.value;
        this.state.royalMoveMedians[color] = (0,_Utilities__WEBPACK_IMPORTED_MODULE_5__.findMinimumOnBoardSquares)(royalMoves[color]);
      }
    } catch (err) {
      _iterator9.e(err);
    } finally {
      _iterator9.f();
    }
    return {
      oppositionRowEchelon,
      royalMoves
    };
  }
  generateOppositeMedians(rowEchelon) {
    var emptyBoard = this.emptyBoard,
      oppositionMedians = this.state.oppositionMedians,
      royals = this.board.data.fenOptions.tag("royal");
    for (var i = 0; i < _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .totalPlayers */ .q3; i++) {
      for (var j = 0; j < _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .totalPlayers */ .q3; j++) {
        if (i === j || rowEchelon[i] === undefined) continue;
        var royalPieceA = royals[i],
          royalPieceB = royals[j];
        if (!royalPieceA || !royalPieceB) continue;
        var finalArray = Array.from({
          length: 14
        }, () => Array.from({
          length: 14
        }, () => 0));
        var _loop3 = function _loop3(i2) {
          var _loop4 = function _loop4(_j3) {
            var _jjIndex$toString, _iiIndex$toString;
            if (emptyBoard[i2][_j3].isWall()) return "continue";
            var jjIndex = rowEchelon[j];
            var iiIndex = rowEchelon[i];
            if (!jjIndex || !iiIndex) throw new Error("Central opposition matrix indexes are undefined: ".concat((_jjIndex$toString = jjIndex === null || jjIndex === void 0 ? void 0 : jjIndex.toString()) !== null && _jjIndex$toString !== void 0 ? _jjIndex$toString : "undefined", "  ").concat((_iiIndex$toString = iiIndex === null || iiIndex === void 0 ? void 0 : iiIndex.toString()) !== null && _iiIndex$toString !== void 0 ? _iiIndex$toString : "undefined"));
            if (jjIndex[i2][_j3][royalPieceA[1]] & _Utilities__WEBPACK_IMPORTED_MODULE_5__.binaryMasks[royalPieceA[0]] ^ _Utilities__WEBPACK_IMPORTED_MODULE_5__.oneBitMask && iiIndex[i2][_j3][royalPieceB[1]] & _Utilities__WEBPACK_IMPORTED_MODULE_5__.binaryMasks[royalPieceB[0]] ^ _Utilities__WEBPACK_IMPORTED_MODULE_5__.oneBitMask) {
              return "continue";
            }
            var uintArray = jjIndex[i2][_j3].map((e, x) => e & iiIndex[i2][_j3][x]);
            var newResultingSquares = 0;
            for (var dimSquare = 0; dimSquare < _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .boardDimension */ .iJ; dimSquare++) {
              newResultingSquares += (0,_utils_NumberUtils__WEBPACK_IMPORTED_MODULE_9__/* .bitCount */ .y)(uintArray[dimSquare]) - 1;
            }
            finalArray[i2][_j3] = newResultingSquares;
          };
          for (var _j3 = 0; _j3 < _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .boardDimension */ .iJ; _j3++) {
            var _ret2 = _loop4(_j3);
            if (_ret2 === "continue") continue;
          }
        };
        for (var i2 = 0; i2 < _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .boardDimension */ .iJ; i2++) {
          _loop3(i2);
        }
        var minimum = Infinity;
        for (var _i4 = 0; _i4 < _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .boardDimension */ .iJ; _i4++) {
          for (var j2 = 0; j2 < _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .boardDimension */ .iJ; j2++) {
            if (finalArray[_i4][j2] !== 0 && finalArray[_i4][j2] < minimum) {
              minimum = finalArray[_i4][j2];
            }
          }
        }
        oppositionMedians[i][j] = minimum - 1;
      }
    }
  }
  generatePieceMoveMedians(royalMoves) {
    var _this2 = this;
    var pieceMoveRegistry = this.pieceMoveRegistry,
      _this$state = this.state,
      pieceSquareMedians = _this$state.pieceSquareMedians,
      walls = _this$state.walls,
      royalPieceSets = this.royalPieceSets;
    var currentMessages = 0,
      requiredMessages = 0;
    var _loop5 = function _loop5(pieceLetter) {
      if (!(0,_moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_4__/* .verifyPieceLetter */ .IM)(pieceLetter) || !Object.prototype.hasOwnProperty.call(pieceMoveRegistry, pieceLetter)) return "continue";
      if (pieceLetter in pieceSquareMedians) return "continue";
      pieceSquareMedians[pieceLetter] = {};
      var registeredSymbols = Object.getOwnPropertySymbols(pieceMoveRegistry[pieceLetter]);
      var _iterator10 = _createForOfIteratorHelper(registeredSymbols),
        _step10;
      try {
        var _loop6 = function _loop6() {
          var registeredSymbol = _step10.value;
          var pieceMedianCounter = new Worker(new URL(/* worker import */ __webpack_require__.p + __webpack_require__.u(270), __webpack_require__.b));
          pieceMedianCounter.postMessage({
            walls,
            moveRegistryArray: pieceMoveRegistry[pieceLetter][registeredSymbol].map(r => r.map(uint => uint.buffer)),
            royalMoves: royalMoves.map(board => board.map(r => r.map(uint => uint.buffer))),
            royalPieceSet: royalPieceSets.map(s => [...s])
          });
          requiredMessages++;
          pieceMedianCounter.onmessage = e => {
            pieceSquareMedians[pieceLetter][registeredSymbol] = e.data;
            pieceMedianCounter.terminate();
            if (requiredMessages === ++currentMessages) {
              _this2.callback(_this2.state);
            }
          };
        };
        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {
          _loop6();
        }
      } catch (err) {
        _iterator10.e(err);
      } finally {
        _iterator10.f();
      }
    };
    for (var pieceLetter in pieceMoveRegistry) {
      var _ret3 = _loop5(pieceLetter);
      if (_ret3 === "continue") continue;
    }
  }
  generateInsufficientMaterialState() {
    this.initializeRoyals();
    this.getBoardDestinations();
    this.initializeBackwardsPieceRegistry();
    var _this$generateOpposit = this.generateOppositionSquares(),
      royalMoves = _this$generateOpposit.royalMoves,
      oppositionRowEchelon = _this$generateOpposit.oppositionRowEchelon;
    this.generateOppositeMedians(oppositionRowEchelon);
    this.generatePieceMoveMedians(royalMoves);
  }
}
_defineProperty(InsufficientMaterialConstructor, "NON_INDEXED_PIECE_SYMBOL", Symbol());

/***/ }),

/***/ 7270:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _client_ts_baseTypes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(18027);
/* harmony import */ var _client_ts_logic_BaseInterfaces__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(34355);
/* harmony import */ var _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(76758);
/* harmony import */ var _client_ts_utils_ArrayUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(34092);
/* harmony import */ var _Utilities__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(63659);
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }





self.onmessage = e => {
  var _e$data = e.data,
    walls = _e$data.walls,
    royalPieceSet = _e$data.royalPieceSet,
    royalMoves = _e$data.royalMoves,
    moveRegistryArray = _e$data.moveRegistryArray;
  var resultingMedianArray = (0,_client_ts_baseTypes__WEBPACK_IMPORTED_MODULE_3__/* .createTupleFromCallback */ .fi)(() => (0,_client_ts_logic_BaseInterfaces__WEBPACK_IMPORTED_MODULE_0__/* .initializeBoardSquares */ .BD)(() => 0), _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_1__/* .totalPlayers */ .q3);
  for (var i = 0; i < _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_1__/* .boardDimension */ .iJ; i++) {
    for (var j = 0; j < _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_1__/* .boardDimension */ .iJ; j++) {
      if (walls[i][j]) continue;
      var moves = new Uint16Array(moveRegistryArray[i][j]);
      var _iterator = _createForOfIteratorHelper(_moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_1__/* .colors */ .O9),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var color = _step.value;
          if (royalPieceSet[color].length === 0) {
            resultingMedianArray[color] = undefined;
            continue;
          } else {
            var resultingSquares = 0;
            for (var royalI = 0; royalI < _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_1__/* .boardDimension */ .iJ; royalI++) {
              var _loop = function _loop() {
                var royalMoveSet = new Uint16Array(royalMoves[color][royalI][royalJ]);
                var result = moves.map((e, x) => e & royalMoveSet[x]);
                var newResultingSquares = (0,_Utilities__WEBPACK_IMPORTED_MODULE_2__.countBitsOnBoard)(result);
                if (newResultingSquares > resultingSquares) {
                  resultingSquares = newResultingSquares;
                }
              };
              for (var royalJ = 0; royalJ < _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_1__/* .boardDimension */ .iJ; royalJ++) {
                _loop();
              }
            }
            var resultingMedian = resultingMedianArray[color];
            if (resultingMedian) resultingMedian[i][j] = resultingSquares;
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
  }
  postMessage(resultingMedianArray.map(arr => {
    if (arr) {
      var minimum = (0,_client_ts_utils_ArrayUtils__WEBPACK_IMPORTED_MODULE_4__/* .countMinimumOf2DArrayExcludingZero */ .Bx)(arr);
      return minimum === Infinity ? 0 : minimum;
    } else return arr;
  }));
};

/***/ }),

/***/ 72420:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "deserializeInsufficientMaterialState": () => (/* binding */ deserializeInsufficientMaterialState),
/* harmony export */   "serializeInsufficientMaterialState": () => (/* binding */ serializeInsufficientMaterialState)
/* harmony export */ });
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function serializeInsufficientMaterialState(state) {
  var backwardsPieceRegistry = {};
  var counters = {};
  var individualCounter = 0;
  var key;
  for (key in state.backwardsPieceRegistry) {
    if (!Object.prototype.hasOwnProperty.call(state.backwardsPieceRegistry, key)) continue;
    backwardsPieceRegistry[key] = state.backwardsPieceRegistry[key].map(r => r.map(e => {
      if (e !== null) {
        if (e in counters) {
          return counters[e];
        } else {
          counters[e] = individualCounter++;
          return counters[e];
        }
      } else return e;
    }));
  }
  var pieceSquareMedians = {};
  for (key in state.pieceSquareMedians) {
    if (!Object.prototype.hasOwnProperty.call(state.pieceSquareMedians, key)) continue;
    var result = {};
    var _iterator = _createForOfIteratorHelper(Object.getOwnPropertySymbols(state.pieceSquareMedians[key])),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var symbol = _step.value;
        if (symbol in counters) {
          result[counters[symbol]] = state.pieceSquareMedians[key][symbol];
        } else result[individualCounter--] = state.pieceSquareMedians[key][symbol];
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    pieceSquareMedians[key] = result;
  }
  return _objectSpread(_objectSpread({}, state), {}, {
    backwardsPieceRegistry,
    pieceSquareMedians,
    optimizedPieces: [...state.optimizedPieces]
  });
}
function deserializeInsufficientMaterialState(state) {
  var backwardsPieceRegistry = {};
  var counters = {};
  var key;
  for (key in state.backwardsPieceRegistry) {
    if (!Object.prototype.hasOwnProperty.call(state.backwardsPieceRegistry, key)) continue;
    counters[key] = {};
    backwardsPieceRegistry[key] = state.backwardsPieceRegistry[key].map(r => r.map(e => {
      if (e !== null) {
        if (!(e in counters[key])) counters[key][e] = Symbol();
        return counters[key][e];
      } else return e;
    }));
  }
  var pieceSquareMedians = {};
  for (key in state.pieceSquareMedians) {
    if (!Object.prototype.hasOwnProperty.call(state.pieceSquareMedians, key)) continue;
    var result = {};
    for (var numericKey in state.pieceSquareMedians[key]) {
      if (!Object.prototype.hasOwnProperty.call(state.pieceSquareMedians[key], numericKey)) continue;
      var indexingNumber = Number(numericKey);
      if (key in counters && indexingNumber in counters[key]) {
        result[counters[key][indexingNumber]] = state.pieceSquareMedians[key][indexingNumber];
      } else result[Symbol()] = state.pieceSquareMedians[key][indexingNumber];
    }
    pieceSquareMedians[key] = result;
  }
  return _objectSpread(_objectSpread({}, state), {}, {
    backwardsPieceRegistry,
    pieceSquareMedians,
    optimizedPieces: new Set(state.optimizedPieces)
  });
}

/***/ }),

/***/ 63659:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "binaryMasks": () => (/* binding */ binaryMasks),
/* harmony export */   "countBitsOnBoard": () => (/* binding */ countBitsOnBoard),
/* harmony export */   "findMinimumOnBoardSquares": () => (/* binding */ findMinimumOnBoardSquares),
/* harmony export */   "oneBitMask": () => (/* binding */ oneBitMask),
/* harmony export */   "optimizePieceSet": () => (/* binding */ optimizePieceSet)
/* harmony export */ });
/* harmony import */ var _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76758);
/* harmony import */ var _moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(16703);
/* harmony import */ var _utils_NumberUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(35948);
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }



var binaryMasks = Array(_moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_0__/* .boardDimension */ .iJ).fill(1).map((v, i) => v << _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_0__/* .boardDimension */ .iJ | v << _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_0__/* .boardDimension */ .iJ - 1 - i);
var oneBitMask = 1 << _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_0__/* .boardDimension */ .iJ;
function countBitsOnBoard(board) {
  var setBits = 0;
  for (var x = 0; x < _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_0__/* .boardDimension */ .iJ; x++) {
    setBits += (0,_utils_NumberUtils__WEBPACK_IMPORTED_MODULE_2__/* .bitCount */ .y)(board[x] ^ oneBitMask);
  }
  return setBits;
}
function findMinimumOnBoardSquares(board) {
  var minimum = Infinity;
  for (var i = 0; i < _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_0__/* .boardDimension */ .iJ; i++) {
    for (var j = 0; j < _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_0__/* .boardDimension */ .iJ; j++) {
      var setBits = countBitsOnBoard(board[i][j]);
      if (setBits !== 0 && setBits < minimum) {
        minimum = setBits;
      }
    }
  }
  return minimum;
}
function optimizePieceSet(possiblePieces, maximumTarget) {
  var optimalRoyalMoveSets = [["β", "W", "R", "E", "M", "Q", "D", "A"], ["γ", "F", "B", "H", "M", "Q", "D", "A", "Δ"], ["Y", "Z"], ["I", "J"], ["S", "T"], ["S", "Y"], ["I", "Y"], ["U", "N", "O"], ["H", "A"], ["E", "A"], ["Δ", "H"], ["C", "L"], ["C", "V"]];
  var moveSet = new Set();
  for (var _i = 0, _optimalRoyalMoveSets = optimalRoyalMoveSets; _i < _optimalRoyalMoveSets.length; _i++) {
    var optimalMoveSet = _optimalRoyalMoveSets[_i];
    var detractionSet = maximumTarget ? optimalMoveSet.slice().reverse() : optimalMoveSet;
    var _iterator = _createForOfIteratorHelper(possiblePieces),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var piece = _step.value;
        if (detractionSet.includes(piece)) {
          var target = detractionSet.slice(0, -detractionSet.indexOf(piece));
          target.forEach(t => {
            if (possiblePieces.includes(t) && (0,_moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .verifyPieceLetter */ .IM)(t)) moveSet.add(t);
          });
          break;
        }
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
  }
  if (moveSet.size === 0) {
    possiblePieces.forEach(p => {
      if ((0,_moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .verifyPieceLetter */ .IM)(p)) moveSet.add(p);
    });
  }
  return moveSet;
}

/***/ }),

/***/ 9896:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Atomic": () => (/* binding */ Atomic)
/* harmony export */ });
/* harmony import */ var _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76758);
/* harmony import */ var _moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(16703);
/* harmony import */ var _FENData_FENData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(26814);
/* harmony import */ var _VariantRule__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(75942);
/* harmony import */ var _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(9680);
/* harmony import */ var _PieceControlDecorators_RoyalsCannotCapture__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(87247);
/* harmony import */ var _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(4127);
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }







var tag = "atomic";
class Atomic extends _VariantRule__WEBPACK_IMPORTED_MODULE_3__/* .VariantRule */ .$ {
  constructor() {
    super(...arguments);
    _defineProperty(this, "dependencies", new Map([[_PieceControlDecorators_RoyalsCannotCapture__WEBPACK_IMPORTED_MODULE_5__.RoyalsCannotCapture, []]]));
  }
  getDecoratorType() {
    return _FENData_FENData__WEBPACK_IMPORTED_MODULE_2__/* .FENData */ .c;
  }
  getPublicProperties() {
    return {
      parameterValue: true,
      information: {
        name: "Atomic",
        description: "Captures cause all surrounding pieces except pawns to explode",
        tag,
        color: _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_4__/* .variantRuleColors.extending */ .p.extending,
        displayIcon: _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_6__/* .chessGlyphIndex.atomic */ .w.atomic
      }
    };
  }
  matchesPGNDeclaration(match) {
    return /^Atomic$/i.test(match);
  }
  serializeToParsingForm() {
    return "Atomic";
  }
  isDisabled() {
    return false;
  }
  isComplexEvaluation() {
    return true;
  }
  getCapturedPieces(moveData) {
    var baseCoordinates = this.callHandler("getCapturedPieces", arguments);
    var addCoordinate = (disI, disJ) => {
      var coordinateI = moveData.endCoordinates[0] + disI;
      var coordinateJ = moveData.endCoordinates[1] + disJ;
      if (coordinateI >= 0 && coordinateI <= _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_0__/* .boardDimension */ .iJ && coordinateJ >= 0 && coordinateJ <= _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_0__/* .boardDimension */ .iJ) {
        var pieceString = this.decorator.board.board[coordinateI][coordinateJ];
        if ((pieceString.isPiece() || pieceString.isDead()) && !_moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .pieceControlConfigSettings */ .Gf[pieceString.piece].moveGenerationSettings.isPawn) {
          baseCoordinates.push([coordinateI, coordinateJ]);
        }
      }
    };
    if (baseCoordinates.length !== 0) {
      var _iterator = _createForOfIteratorHelper(Atomic.atomicCoordinates),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var _step$value = _slicedToArray(_step.value, 2),
            i = _step$value[0],
            j = _step$value[1];
          addCoordinate(i, j);
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      baseCoordinates.push([...moveData.startCoordinates]);
    }
    return baseCoordinates;
  }
}
_VariantRule__WEBPACK_IMPORTED_MODULE_3__/* .VariantRule.initVariantRule */ .$.initVariantRule(Atomic);
_defineProperty(Atomic, "atomicCoordinates", [[-1, -1], [-1, 0], [0, -1], [-1, 1], [1, -1], [1, 0], [0, 1], [1, 1]]);

/***/ }),

/***/ 83782:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DeadKingWalking": () => (/* binding */ DeadKingWalking)
/* harmony export */ });
/* harmony import */ var _moveGeneration_FENData_FENData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(26814);
/* harmony import */ var _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(76758);
/* harmony import */ var _moveGeneration_GameInformation_GameUnits_GameUnits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(9960);
/* harmony import */ var _moveGeneration_GameInformation_GameUnits_PieceString__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(20915);
/* harmony import */ var _moveGeneration_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(37017);
/* harmony import */ var _moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(16703);
/* harmony import */ var _moveGeneration_VariantRules_VariantRule__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(75942);
/* harmony import */ var _moveGeneration_VariantRules_VariantRuleInterface__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(9680);
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }








var tag = "deadKingWalking";
class DeadKingWalking extends _moveGeneration_VariantRules_VariantRule__WEBPACK_IMPORTED_MODULE_6__/* .VariantRule */ .$ {
  getDecoratorType() {
    return _moveGeneration_FENData_FENData__WEBPACK_IMPORTED_MODULE_0__/* .FENData */ .c;
  }
  getPublicProperties() {
    return {
      parameterValue: true,
      information: {
        name: "Zombies",
        description: "Resigned players are controlled by a bot",
        tag,
        color: _moveGeneration_VariantRules_VariantRuleInterface__WEBPACK_IMPORTED_MODULE_7__/* .variantRuleColors.autogenous */ .p.autogenous,
        displayIcon: ""
      }
    };
  }
  matchesPGNDeclaration(match) {
    return /^DeadKingWalking$/i.test(match);
  }
  serializeToParsingForm() {
    return "DeadKingWalking";
  }
  isDisabled(_ref) {
    var variantDataRules = _ref.variantDataRules,
      gameType = _ref.gameType,
      fenTags = _ref.fenTags;
    return gameType === _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_1__/* .VariantType.Teams */ .Jy.Teams || fenTags.dead.value.reduce((p, n, i) => p + Number(n || fenTags.resigned.value[i]), 0) <= _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_1__/* .totalPlayers */ .q3 - 1 || variantDataRules.pointsForMate !== false && variantDataRules.pointsForMate < 6;
  }
  processInternalMove(internalMove) {
    if (internalMove.type === _moveGeneration_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_4__/* .InternalMoveSignature.Resign */ .Fi.Resign || internalMove.type === _moveGeneration_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_4__/* .InternalMoveSignature.ClaimWin */ .Fi.ClaimWin || internalMove.type === _moveGeneration_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_4__/* .InternalMoveSignature.Timeout */ .Fi.Timeout) {
      var _this$decorator = this.decorator,
        sideToMove = _this$decorator.sideToMove,
        fenOptions = _this$decorator.fenOptions,
        board = _this$decorator.board;
      var dead = fenOptions.tag("dead"),
        resigned = fenOptions.tag("resigned");
      resigned[sideToMove] = true;
      dead[sideToMove] = true;
      var _iterator = _createForOfIteratorHelper(board.getPlayerPieces()[sideToMove]),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var coordinate = _step.value;
          var piece = board.board[coordinate[0]][coordinate[1]].piece;
          if (_moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_5__/* .pieceControlConfigSettings */ .Gf[piece].moveGenerationSettings.isPawn) {
            board.board[coordinate[0]][coordinate[1]] = (0,_moveGeneration_GameInformation_GameUnits_PieceString__WEBPACK_IMPORTED_MODULE_3__/* .createPieceFromData */ .HC)(_moveGeneration_GameInformation_GameUnits_PieceString__WEBPACK_IMPORTED_MODULE_3__/* .deadColorIndex */ .Ir, piece);
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      var deadPlayers = dead.map((d, i) => d || resigned[i]).filter(Boolean);
      if (deadPlayers.length === _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_1__/* .totalPlayers */ .q3 - 1) {
        var alivePlayer = deadPlayers.findIndex(d => !d);
        if ((0,_moveGeneration_GameInformation_GameUnits_GameUnits__WEBPACK_IMPORTED_MODULE_2__/* .verifyNumericColor */ .O3)(alivePlayer)) {
          this.decorator.assignPoints(alivePlayer, this.decorator.countTotalPointsOnBoard().reduce((p, n, i) => p + (i === alivePlayer ? n : 0), 0));
        }
      }
      return {
        stalemates: [false, false, false, false]
      };
    } else return this.callHandler("processInternalMove", arguments);
  }
}
_moveGeneration_VariantRules_VariantRule__WEBPACK_IMPORTED_MODULE_6__/* .VariantRule.initVariantRule */ .$.initVariantRule(DeadKingWalking);

/***/ }),

/***/ 95143:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EnPassant": () => (/* binding */ EnPassant)
/* harmony export */ });
/* harmony import */ var _MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37017);
/* harmony import */ var _FENData_FENData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(26814);
/* harmony import */ var _GameInformation_GameUnits_PieceString__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20915);
/* harmony import */ var _VariantRule__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(75942);
/* harmony import */ var _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(9680);
/* harmony import */ var _moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(16703);
/* harmony import */ var _GameInformation_GameUnits_GameUnits__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(9960);
/* harmony import */ var _client_ts_baseTypes__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(18027);
/* harmony import */ var _client_ts_logic_BaseInterfaces__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(34355);
/* harmony import */ var _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(4127);
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }










var tag = "enPassant";
class EnPassant extends _VariantRule__WEBPACK_IMPORTED_MODULE_3__/* .VariantRule */ .$ {
  getDecoratorType() {
    return _FENData_FENData__WEBPACK_IMPORTED_MODULE_1__/* .FENData */ .c;
  }
  getPublicProperties() {
    return {
      parameterValue: true,
      information: {
        name: "En Passant",
        description: "Pawns can capture en passant",
        tag,
        color: _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_4__/* .variantRuleColors.minor */ .p.minor,
        displayIcon: _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_8__/* .chessGlyphIndex.pawnConnection */ .w.pawnConnection
      }
    };
  }
  matchesPGNDeclaration(match) {
    return /^EnPassant$/i.test(match);
  }
  serializeToParsingForm() {
    return "EnPassant";
  }
  isDisabled() {
    return false;
  }
  processStandardMove(moveData) {
    var enPassants = this.decorator.fenOptions.tag("enPassant");
    var _moveData$startCoordi = _slicedToArray(moveData.startCoordinates, 2),
      startI = _moveData$startCoordi[0],
      startJ = _moveData$startCoordi[1],
      _moveData$endCoordina = _slicedToArray(moveData.endCoordinates, 2),
      endI = _moveData$endCoordina[0],
      endJ = _moveData$endCoordina[1];
    if (moveData.specialType === _MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_0__/* .SpecialMove.EnPassant */ .uj.EnPassant) {
      var eligibleEnPassants = [];
      enPassants.forEach((e, i) => {
        if (!e) return;
        if (e[0][0] === endI && e[0][1] === endJ) eligibleEnPassants.push(i);
      });
      for (var _i2 = 0, _eligibleEnPassants = eligibleEnPassants; _i2 < _eligibleEnPassants.length; _i2++) {
        var enPassantCoordinate = _eligibleEnPassants[_i2];
        var enPassant = enPassants[enPassantCoordinate];
        (0,_client_ts_baseTypes__WEBPACK_IMPORTED_MODULE_9__/* .assertNonUndefined */ .lM)(enPassant);
        this.decorator.board.board[enPassant[1][0]][enPassant[1][1]] = _GameInformation_GameUnits_PieceString__WEBPACK_IMPORTED_MODULE_2__/* .emptyPieceString */ .v2;
        enPassants[enPassantCoordinate] = null;
      }
    } else {
      var pieceString = this.decorator.board.board[startI][startJ];
      if (!pieceString.isEmpty() && pieceString.piece !== _GameInformation_GameUnits_GameUnits__WEBPACK_IMPORTED_MODULE_6__/* .nonPlayablePieces.duck */ .KR.duck) {
        enPassants[this.decorator.sideToMove] = null;
        var setting = _moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_5__/* .pieceControlConfigSettings */ .Gf[pieceString.piece];
        if (setting.moveGenerationSettings.isPawn && Math.abs((0,_client_ts_logic_BaseInterfaces__WEBPACK_IMPORTED_MODULE_7__/* .isVerticalPlacement */ .sC)(this.decorator.sideToMove) ? startI - endI : startJ - endJ) === 2) {
          var enPassantInfo = [[Math.ceil((startI + endI) / 2), Math.ceil((startJ + endJ) / 2)], [endI, endJ]];
          enPassants[this.decorator.sideToMove] = enPassantInfo;
        }
      }
    }
    return this.callHandler("processStandardMove", arguments);
  }
}
_VariantRule__WEBPACK_IMPORTED_MODULE_3__/* .VariantRule.initVariantRule */ .$.initVariantRule(EnPassant);

/***/ }),

/***/ 67870:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FatalCapture": () => (/* binding */ FatalCapture)
/* harmony export */ });
/* harmony import */ var _baseTypes__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(18027);
/* harmony import */ var _FENData_FENData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(26814);
/* harmony import */ var _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(76758);
/* harmony import */ var _GameInformation_GameUnits_PieceString__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20915);
/* harmony import */ var _VariantRule__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(75942);
/* harmony import */ var _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(9680);
/* harmony import */ var _PieceControlDecorators_RoyalsCannotCapture__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(87247);
/* harmony import */ var _moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(16703);
/* harmony import */ var _MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(37017);
/* harmony import */ var _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(4127);
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }










var tag = "fatalCapture";
class FatalCapture extends _VariantRule__WEBPACK_IMPORTED_MODULE_3__/* .VariantRule */ .$ {
  constructor() {
    super(...arguments);
    _defineProperty(this, "dependencies", new Map([[_PieceControlDecorators_RoyalsCannotCapture__WEBPACK_IMPORTED_MODULE_5__.RoyalsCannotCapture, []]]));
  }
  getDecoratorType() {
    return _FENData_FENData__WEBPACK_IMPORTED_MODULE_0__/* .FENData */ .c;
  }
  getPublicProperties() {
    return {
      parameterValue: true,
      information: {
        name: "Fatal Capture",
        description: "Pieces (but not pawns) die when they capture",
        tag,
        color: _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_4__/* .variantRuleColors.extending */ .p.extending,
        displayIcon: _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_8__/* .chessGlyphIndex.trashBin */ .w.trashBin
      }
    };
  }
  matchesPGNDeclaration(match) {
    return /^FatalCapture$/i.test(match);
  }
  serializeToParsingForm() {
    return "FatalCapture";
  }
  isDisabled() {
    return false;
  }
  affectOptions(move) {
    var endCaptureCoordinates;
    if ((0,_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_7__/* .verifyStandardMove */ .$j)(move)) {
      var _move$startCoordinate = _slicedToArray(move.startCoordinates, 2),
        startI = _move$startCoordinate[0],
        startJ = _move$startCoordinate[1],
        _move$endCoordinates = _slicedToArray(move.endCoordinates, 2),
        endI = _move$endCoordinates[0],
        endJ = _move$endCoordinates[1];
      var isCapture = this.decorator.board.board[endI][endJ].isPiece();
      var royal = this.decorator.fenOptions.tag("royal")[this.decorator.sideToMove];
      if (royal && startI === royal[0] && startJ === royal[1] && isCapture) {
        return {
          checkmates: this.decorator.board.gameType.getBaseColors(this.decorator.sideToMove),
          checks: (0,_baseTypes__WEBPACK_IMPORTED_MODULE_9__/* .createTuple */ .VS)(false, _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_1__/* .totalPlayers */ .q3),
          stalemates: (0,_baseTypes__WEBPACK_IMPORTED_MODULE_9__/* .createTuple */ .VS)(false, _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_1__/* .totalPlayers */ .q3)
        };
      }
      endCaptureCoordinates = isCapture ? move.endCoordinates : undefined;
    }
    var returnType = this.callHandler("affectOptions", arguments);
    if (endCaptureCoordinates) {
      var pieceString = this.decorator.board.board[endCaptureCoordinates[0]][endCaptureCoordinates[1]];
      if (!_moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_6__/* .pieceControlConfigSettings */ .Gf[pieceString.piece].moveGenerationSettings.isPawn) {
        this.decorator.board.board[endCaptureCoordinates[0]][endCaptureCoordinates[1]] = (0,_GameInformation_GameUnits_PieceString__WEBPACK_IMPORTED_MODULE_2__/* .createPieceFromData */ .HC)(_GameInformation_GameUnits_PieceString__WEBPACK_IMPORTED_MODULE_2__/* .deadColorIndex */ .Ir, this.decorator.board.board[endCaptureCoordinates[0]][endCaptureCoordinates[1]].piece);
      }
    }
    return returnType;
  }
}
_VariantRule__WEBPACK_IMPORTED_MODULE_3__/* .VariantRule.initVariantRule */ .$.initVariantRule(FatalCapture);

/***/ }),

/***/ 83433:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FiftyMoveRule": () => (/* binding */ FiftyMoveRule)
/* harmony export */ });
/* harmony import */ var _FENData_FENData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(26814);
/* harmony import */ var _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(76758);
/* harmony import */ var _VariantRule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(75942);
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }



var tag = "fiftyMoveRule";
class FiftyMoveRule extends _VariantRule__WEBPACK_IMPORTED_MODULE_2__/* .VariantRule */ .$ {
  constructor(fullMoves) {
    super();
    _defineProperty(this, "totalFullMoves", void 0);
    if (typeof fullMoves === "number" && fullMoves > 0) {
      this.totalFullMoves = fullMoves;
    } else {
      this.totalFullMoves = 50;
    }
  }
  getDecoratorType() {
    return _FENData_FENData__WEBPACK_IMPORTED_MODULE_0__/* .FENData */ .c;
  }
  getPublicProperties() {
    var isDisabled = this.totalFullMoves === Infinity;
    return {
      parameterValue: this.totalFullMoves,
      information: {
        name: "N Move Rule",
        textualForm: "",
        description: isDisabled ? "50 move rule disabled" : "After ".concat(this.totalFullMoves, " full moves without captures or pawn pushes game is over"),
        tag
      }
    };
  }
  matchesPGNDeclaration(match) {
    var matchArray = match.match(/^FiftyMoveRule=((?:\d+)|(?:Infinity))$/i);
    if (matchArray) {
      this.totalFullMoves = Number(matchArray[1]);
      return true;
    } else {
      return false;
    }
  }
  serializeToParsingForm() {
    return "FiftyMoveRule=".concat(this.totalFullMoves);
  }
  isDisabled() {
    return false;
  }
  getParametrizedOptions() {
    var options = new Map();
    for (var _i = 0, _arr = [50, 150, 200, 25, 10]; _i < _arr.length; _i++) {
      var value = _arr[_i];
      options.set("".concat(value, " Move rule"), value);
    }
    options.set("Unlimited", Infinity);
    return options;
  }
  processStandardMove(moveData) {
    if (this.decorator.getCapturedPieces(moveData).length > 0) {
      this.decorator.plyCount = 0;
    }
    return this.callHandler("processStandardMove", arguments);
  }
  affectOptions(move) {
    var results = this.callHandler("affectOptions", arguments);
    if (move.isIrreversible) {
      this.decorator.plyCount = 0;
    } else {
      this.decorator.plyCount++;
    }
    var alivePlayers = _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_1__/* .totalPlayers */ .q3 - this.decorator.fenOptions.tag("dead").filter(Boolean).length;
    if (alivePlayers > 0 && Math.floor(this.decorator.plyCount / alivePlayers) > this.totalFullMoves) {
      this.decorator.assignGeneralTermination("50-move Rule");
      this.injectIntoBaseClass(function () {
        this.spreadPointsBetweenPlayersEvenly();
      })();
    }
    return results;
  }
}
_VariantRule__WEBPACK_IMPORTED_MODULE_2__/* .VariantRule.initVariantRule */ .$.initVariantRule(FiftyMoveRule);

/***/ }),

/***/ 35561:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Giveaway": () => (/* binding */ Giveaway)
/* harmony export */ });
/* harmony import */ var _FENData_FENData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(26814);
/* harmony import */ var _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(76758);
/* harmony import */ var _VariantRule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(75942);
/* harmony import */ var _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(9680);
/* harmony import */ var _BoardDecorators_ForcedCapture__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(66798);
/* harmony import */ var _StalemateOptions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(47822);
/* harmony import */ var _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(4127);
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }







var tag = "giveaway";
class Giveaway extends _VariantRule__WEBPACK_IMPORTED_MODULE_2__/* .VariantRule */ .$ {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    super(...args);
    _defineProperty(this, "dependencies", new Map([[_BoardDecorators_ForcedCapture__WEBPACK_IMPORTED_MODULE_4__.ForcedCapture, []], [_StalemateOptions__WEBPACK_IMPORTED_MODULE_5__.StalemateOptions, [_StalemateOptions__WEBPACK_IMPORTED_MODULE_5__.stalemateOptionsValues.stalemateWins]]]));
    _defineProperty(this, "initiallyAliveColors", _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_1__/* .totalPlayers */ .q3);
  }
  getDecoratorType() {
    return _FENData_FENData__WEBPACK_IMPORTED_MODULE_0__/* .FENData */ .c;
  }
  getPublicProperties() {
    return {
      parameterValue: true,
      information: {
        name: "Giveaway",
        description: "First to lose all pieces or stalemate wins",
        tag,
        color: _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_3__/* .variantRuleColors.widespread */ .p.widespread,
        displayIcon: _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_6__/* .chessGlyphIndex.gift */ .w.gift
      }
    };
  }
  matchesPGNDeclaration(match) {
    return /^Giveaway$/i.test(match);
  }
  serializeToParsingForm() {
    return "Giveaway";
  }
  isDisabled(_ref) {
    var variantDataRules = _ref.variantDataRules;
    return variantDataRules.taboo;
  }
  initDecoratorSettings() {
    this.decorator.fenOptions.setTag("royal", [null, null, null, null]);
    this.initiallyAliveColors = this.decorator.fenOptions.tag("dead").map((d, i) => d || this.decorator.fenOptions.tag("resigned")[i]).filter(Boolean).length;
    var _iterator = _createForOfIteratorHelper(this.wrappingDecorators),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var _decorator$initDecora;
        var decorator = _step.value;
        (_decorator$initDecora = decorator.initDecoratorSettings) === null || _decorator$initDecora === void 0 ? void 0 : _decorator$initDecora.call(decorator);
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
  }
  processStandardMove(moveData) {
    var capturedPieces = this.decorator.getCapturedPieces(moveData);
    var board = this.decorator.board.board;
    var _iterator2 = _createForOfIteratorHelper(capturedPieces),
      _step2;
    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        var capturedPiece = _step2.value;
        var pieceString = board[capturedPiece[0]][capturedPiece[1]];
        if (pieceString.isPiece()) {
          this.assignPoints(pieceString.color, Giveaway.pointsForPiece, true);
        }
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
    this.callHandler("processStandardMove", arguments);
    return {
      endPiece: []
    };
  }
  affectOptions() {
    var returnType = this.callHandler("affectOptions", arguments);
    this.decorator.fenOptions.setTag("royal", [null, null, null, null]);
    return returnType;
  }
  obtainPointsForMate() {
    // Checkmates do not exist, so the only scenario in which this gets called is stalemate
    var aliveColors = this.decorator.fenOptions.tag("dead").filter(Boolean).length;
    switch (aliveColors) {
      case 1:
        if (this.initiallyAliveColors === _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_1__/* .totalPlayers */ .q3) {
          return Giveaway.stalematePoints[1];
        }
      // * Fallthrough
      case 2:
        if (this.initiallyAliveColors >= _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_1__/* .totalPlayers */ .q3 - 1) {
          return Giveaway.stalematePoints[2];
        }
      // * Fallthrough
      case 3:
        return Giveaway.stalematePoints[3];
      default:
        console.error("Unexpected players length ".concat(aliveColors));
        return 0;
    }
  }
  assignPoints(sideToMove, points) {
    var isGiveawayAssigned = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    if (isGiveawayAssigned) {
      var _iterator3 = _createForOfIteratorHelper(this.wrappingDecorators),
        _step3;
      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
          var decorator = _step3.value;
          if (decorator.assignPoints) {
            decorator.assignPoints(sideToMove, points);
            return;
          }
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
      _FENData_FENData__WEBPACK_IMPORTED_MODULE_0__/* .FENData.prototype.assignPoints.call */ .c.prototype.assignPoints.call(this.decorator, sideToMove, points);
    }
  }
}
_VariantRule__WEBPACK_IMPORTED_MODULE_2__/* .VariantRule.initVariantRule */ .$.initVariantRule(Giveaway);
_defineProperty(Giveaway, "pointsForPiece", 3);
_defineProperty(Giveaway, "stalematePoints", {
  [1]: 200,
  [2]: 400,
  [3]: 600
});

/***/ }),

/***/ 22469:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "KingOfTheHill": () => (/* binding */ KingOfTheHill)
/* harmony export */ });
/* harmony import */ var _client_ts_utils_ArrayUtils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(34092);
/* harmony import */ var _Board_BoardInterface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(29939);
/* harmony import */ var _FENData_FENData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(26814);
/* harmony import */ var _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(76758);
/* harmony import */ var _MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(37017);
/* harmony import */ var _VariantRule__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(75942);
/* harmony import */ var _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(9680);
/* harmony import */ var _client_ts_logic_utils_Tags_Utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(37842);
/* harmony import */ var _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(4127);
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }









var tag = "kingOfTheHill";
class KingOfTheHill extends _VariantRule__WEBPACK_IMPORTED_MODULE_4__/* .VariantRule */ .$ {
  constructor(hillSquares) {
    super();
    _defineProperty(this, "hillSquares", void 0);
    if (Array.isArray(hillSquares) && hillSquares.every(c => Array.isArray(c) && c.length === 2 && c.every(n => typeof n === "number"))) {
      this.hillSquares = hillSquares;
    } else {
      this.hillSquares = KingOfTheHill.defaultCoordinates;
    }
  }
  getDecoratorType() {
    return _FENData_FENData__WEBPACK_IMPORTED_MODULE_1__/* .FENData */ .c;
  }
  getPublicProperties() {
    return {
      parameterValue: this.hillSquares,
      information: {
        name: "King of the Hill",
        description: "A king reaching the hill will checkmate all opponents",
        tag,
        color: _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_5__/* .variantRuleColors.autogenous */ .p.autogenous,
        displayIcon: _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_6__/* .chessGlyphIndex.kingOfTheHill */ .w.kingOfTheHill
      }
    };
  }
  matchesPGNDeclaration(match) {
    var matchArray = match.toLowerCase().match(/^KotH(?:=(.+))?$/i);
    if (matchArray) {
      if (matchArray[1]) {
        var coordinatesArray = [];
        var presumedOption = matchArray[1].split(",");
        var _iterator = _createForOfIteratorHelper(presumedOption),
          _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var coordinate = _step.value;
            var parsedCoordinate = (0,_client_ts_logic_utils_Tags_Utils__WEBPACK_IMPORTED_MODULE_7__/* .parseSingleCoordinate */ ._q)(coordinate);
            if (parsedCoordinate) {
              coordinatesArray.push(parsedCoordinate);
            }
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
        if (coordinatesArray.length > 0) {
          this.hillSquares = coordinatesArray;
        }
      }
      return true;
    } else {
      return false;
    }
  }
  serializeToParsingForm() {
    if ((0,_client_ts_utils_ArrayUtils__WEBPACK_IMPORTED_MODULE_8__/* .compareArrays */ .Rt)(this.hillSquares, KingOfTheHill.defaultCoordinates)) {
      return "KotH";
    } else {
      return "KotH=".concat(this.hillSquares.map(c => (0,_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .convertCoordinateToPGN4 */ .kZ)(c)).join(","));
    }
  }
  isDisabled() {
    return false;
  }
  getInsufficientMaterialData() {
    return {
      isPartiallyDisabled: true,
      isDisabled: true
    };
  }
  affectOptions() {
    var _this$decorator = this.decorator,
      board = _this$decorator.board,
      sideToMove = _this$decorator.sideToMove,
      fenOptions = _this$decorator.fenOptions;
    var returnValues = this.callHandler("affectOptions", arguments);
    var royal = fenOptions.tag("royal")[sideToMove],
      dead = fenOptions.tag("dead"),
      wb = fenOptions.tag("wb");
    if (board.variantData.giveaway && this.hillSquares.some(c => {
      var pieceString = board.board[c[0]][c[1]];
      return pieceString.isPiece() && pieceString.piece === KingOfTheHill.defaultRoyal;
    })) {
      this.decorator.processInternalMove({
        type: _MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_3__/* .InternalMoveSignature.Stalemate */ .Fi.Stalemate
      });
      returnValues.stalemates[sideToMove] = true;
    } else if (royal && this.hillSquares.some(c => (0,_Board_BoardInterface__WEBPACK_IMPORTED_MODULE_0__/* .compareCoordinates */ .ef)(c, royal))) {
      var pointsForMate = this.decorator.obtainPointsForMate();
      var _iterator2 = _createForOfIteratorHelper(_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .colors */ .O9),
        _step2;
      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var color = _step2.value;
          if (color === sideToMove) continue;
          if (!dead[color]) {
            dead[color] = true;
            this.decorator.assignPoints(sideToMove, pointsForMate);
          }
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
      if (this.decorator.board.variantData.taboo) {
        this.decorator.gameOver = "".concat((0,_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .getPlayerNameFromColor */ .oh)(sideToMove, wb).toUpperCase(), " WON THE RACE!");
      } else {
        this.decorator.assignGeneralTermination("King of the Hill");
      }
    }
    return returnValues;
  }
}
_VariantRule__WEBPACK_IMPORTED_MODULE_4__/* .VariantRule.initVariantRule */ .$.initVariantRule(KingOfTheHill);
_defineProperty(KingOfTheHill, "defaultCoordinates", [[7, 7], [7, 6], [6, 7], [6, 6]]);
_defineProperty(KingOfTheHill, "defaultRoyal", "K");

/***/ }),

/***/ 23446:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NCheck": () => (/* binding */ NCheck)
/* harmony export */ });
/* harmony import */ var _client_ts_baseTypes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(18027);
/* harmony import */ var _Board_BoardInterface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(29939);
/* harmony import */ var _FENData_FENData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(26814);
/* harmony import */ var _FENData_FENDataInterface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(52463);
/* harmony import */ var _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(76758);
/* harmony import */ var _MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(37017);
/* harmony import */ var _VariantRule__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(75942);
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }







var tag = "nCheck";
class NCheck extends _VariantRule__WEBPACK_IMPORTED_MODULE_5__/* .VariantRule */ .$ {
  constructor(defaultChecks) {
    super();
    _defineProperty(this, "defaultChecks", void 0);
    if (Array.isArray(defaultChecks) && (0,_client_ts_baseTypes__WEBPACK_IMPORTED_MODULE_6__/* .verifyTupleType */ .CG)(defaultChecks, _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_3__/* .totalPlayers */ .q3) && defaultChecks.every(check => typeof check === "number")) {
      this.defaultChecks = defaultChecks;
    } else {
      this.defaultChecks = (0,_client_ts_baseTypes__WEBPACK_IMPORTED_MODULE_6__/* .createTuple */ .VS)(3, _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_3__/* .totalPlayers */ .q3);
    }
  }
  getDecoratorType() {
    return _FENData_FENData__WEBPACK_IMPORTED_MODULE_1__/* .FENData */ .c;
  }
  getPublicProperties() {
    var checks = this.defaultChecks.filter(Boolean).reduce((p, n, i, arr) => p + (arr[i - 1] === arr[i] ? "" : "-".concat(n)), "").slice(1);
    return {
      parameterValue: this.defaultChecks,
      information: {
        name: "N-Check",
        textualForm: "".concat(checks, "+"),
        description: "Checking a king ".concat(checks, " times is checkmate"),
        tag
      }
    };
  }
  matchesPGNDeclaration(match) {
    var matchArray = match.toLowerCase().match(/^(\d\d?\d?(?:-\d\d?\d?){0,3})-check$/i);
    if (matchArray) {
      var checks = matchArray[1].split("-");
      for (var i = 0; i <= checks.length; i++) {
        if (checks[i]) {
          this.defaultChecks[i] = Number(checks[i]);
        } else {
          while (i !== _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_3__/* .totalPlayers */ .q3) {
            this.defaultChecks[i] = this.defaultChecks[i - 1];
            i++;
          }
        }
      }
      return true;
    } else {
      return false;
    }
  }
  serializeToParsingForm() {
    return "".concat(this.defaultChecks.join("-"), "-check");
  }
  isDisabled(_ref) {
    var variantDataRules = _ref.variantDataRules;
    return variantDataRules.giveaway;
  }
  getInsufficientMaterialData() {
    return {
      isPartiallyDisabled: true,
      isDisabled: false
    };
  }
  getParametrizedOptions() {
    var resultingMap = new Map([["N+ Off", false]]);
    for (var i = 1; i < 10; i++) resultingMap.set("".concat(i, "+"), (0,_client_ts_baseTypes__WEBPACK_IMPORTED_MODULE_6__/* .createTuple */ .VS)(i, _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_3__/* .totalPlayers */ .q3));
    for (var _i = 0, _arr = [12, 15, 20, 30, 50]; _i < _arr.length; _i++) {
      var value = _arr[_i];
      resultingMap.set("".concat(value, "+"), (0,_client_ts_baseTypes__WEBPACK_IMPORTED_MODULE_6__/* .createTuple */ .VS)(value, _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_3__/* .totalPlayers */ .q3));
    }
    return resultingMap;
  }
  initDecoratorSettings() {
    var lives = this.decorator.fenOptions.tag("lives");
    var _iterator = _createForOfIteratorHelper(_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_3__/* .colors */ .O9),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var color = _step.value;
        if (lives[color] === null) {
          lives[color] = this.defaultChecks[color];
        }
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    var _iterator2 = _createForOfIteratorHelper(this.wrappingDecorators),
      _step2;
    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        var _decorator$initDecora;
        var decorator = _step2.value;
        (_decorator$initDecora = decorator.initDecoratorSettings) === null || _decorator$initDecora === void 0 ? void 0 : _decorator$initDecora.call(decorator);
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
  }
  affectOptions(move) {
    var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (0,_FENData_FENDataInterface__WEBPACK_IMPORTED_MODULE_2__/* .createDefaultFENEffectSettings */ .Yx)();
    var _this$decorator = this.decorator,
      board = _this$decorator.board,
      sideToMove = _this$decorator.sideToMove;
    var currentChecks = board.getCurrentChecks().map(arr => new Set(arr));
    var isNCheckValidated = !settings.ignoreCheckmateChecks && !settings.ignoreNextTurn;
    var royal = this.decorator.fenOptions.tag("royal"),
      lives = this.decorator.fenOptions.tag("lives");
    var results = this.callHandler("affectOptions", arguments);
    var isStandardMove = (0,_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_4__/* .verifyStandardMove */ .$j)(move);
    if (isNCheckValidated) {
      var updatedChecks = board.getCurrentChecks(sideToMove);
      var playerChecks = (0,_client_ts_baseTypes__WEBPACK_IMPORTED_MODULE_6__/* .createTuple */ .VS)(0, _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_3__/* .totalPlayers */ .q3);
      var _iterator3 = _createForOfIteratorHelper(_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_3__/* .colors */ .O9),
        _step3;
      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
          var _color = _step3.value;
          var _iterator5 = _createForOfIteratorHelper(updatedChecks[_color]),
            _step5;
          try {
            for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
              var coordinate = _step5.value;
              var royalPiece = royal[_color];
              if (!currentChecks[_color].has(coordinate) || royalPiece && isStandardMove && (0,_Board_BoardInterface__WEBPACK_IMPORTED_MODULE_0__/* .compareCoordinates */ .ef)(move.endCoordinates, royalPiece)) {
                playerChecks[_color]++;
              }
            }
          } catch (err) {
            _iterator5.e(err);
          } finally {
            _iterator5.f();
          }
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
      if (lives.every(live => live !== null)) {
        var _iterator4 = _createForOfIteratorHelper(_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_3__/* .colors */ .O9),
          _step4;
        try {
          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
            var color = _step4.value;
            lives[color] -= playerChecks[color];
            if (lives[color] <= 0) {
              this.decorator.assignPoints(sideToMove, this.decorator.obtainPointsForMate());
              this.decorator.turnPiecesDead(color);
              lives[color] = 0;
            }
          }
        } catch (err) {
          _iterator4.e(err);
        } finally {
          _iterator4.f();
        }
      }
      if (this.decorator.getRealPlayers() > 1) {
        this.decorator.sideToMove = this.decorator.nextTurn(sideToMove);
        board.pregenerateAttacks();
      }
    }
    return results;
  }
}
_VariantRule__WEBPACK_IMPORTED_MODULE_5__/* .VariantRule.initVariantRule */ .$.initVariantRule(NCheck);

/***/ }),

/***/ 55867:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OppositeMultiplier": () => (/* binding */ OppositeMultiplier)
/* harmony export */ });
/* harmony import */ var _FENData_FENData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(26814);
/* harmony import */ var _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(76758);
/* harmony import */ var _PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(16703);
/* harmony import */ var _VariantRule__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(75942);
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }




var tag = "oppositeMultiplier";
class OppositeMultiplier extends _VariantRule__WEBPACK_IMPORTED_MODULE_3__/* .VariantRule */ .$ {
  constructor() {
    super(...arguments);
    _defineProperty(this, "oppositeMultiplierValue", 2);
  }
  getDecoratorType() {
    return _FENData_FENData__WEBPACK_IMPORTED_MODULE_0__/* .FENData */ .c;
  }
  getPublicProperties() {
    return {
      parameterValue: this.oppositeMultiplierValue,
      information: {
        name: "Opposite's piece value",
        textualForm: "Ox".concat(this.oppositeMultiplierValue),
        description: "Opposite's pieces are worth ".concat(this.oppositeMultiplierValue, " times their normal points value until one player is eliminated"),
        tag
      }
    };
  }
  matchesPGNDeclaration(match) {
    var matchArray = match.toLowerCase().match(/^OppX=(\d)$/i);
    if (matchArray) {
      var numericValue = Number(matchArray[1]);
      if (numericValue <= 0 || numericValue > OppositeMultiplier.MAXIMUM_MULTIPLIER) return false;
      this.oppositeMultiplierValue = numericValue;
      return true;
    } else {
      return false;
    }
  }
  serializeToParsingForm() {
    return "OppX=".concat(this.oppositeMultiplierValue);
  }
  isDisabled(_ref) {
    var variantDataRules = _ref.variantDataRules,
      gameType = _ref.gameType,
      fenTags = _ref.fenTags;
    return gameType === _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_1__/* .VariantType.Teams */ .Jy.Teams || variantDataRules.giveaway || fenTags.dead.value.reduce((p, n, i) => p + Number(n || fenTags.resigned.value[i]), 0) <= _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_1__/* .totalPlayers */ .q3 - 1;
  }
  getParametrizedOptions() {
    var options = new Map([["Ox Off", false]]);
    for (var i = 1; i <= OppositeMultiplier.MAXIMUM_MULTIPLIER; i++) options.set("Ox".concat(i), i);
    return options;
  }
  getPointsForPiece(pieceString) {
    var dead = this.decorator.fenOptions.tag("dead"),
      resigned = this.decorator.fenOptions.tag("resigned");
    var aliveColors = dead.map((d, i) => d || resigned[i]).filter(Boolean).length;
    if (aliveColors === _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_1__/* .totalPlayers */ .q3 && pieceString.isPiece() && pieceString.color === (0,_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_1__/* .getOppositePlacedColor */ .R4)(this.decorator.sideToMove)) {
      return _PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_2__/* .pieceControlConfigSettings */ .Gf[pieceString.piece].points.singlesPoints * this.oppositeMultiplierValue;
    } else return this.callHandler("getPointsForPiece", arguments);
  }
}
_defineProperty(OppositeMultiplier, "MAXIMUM_MULTIPLIER", 6);
_VariantRule__WEBPACK_IMPORTED_MODULE_3__/* .VariantRule.initVariantRule */ .$.initVariantRule(OppositeMultiplier);

/***/ }),

/***/ 59495:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OppositeSideCastling": () => (/* binding */ OppositeSideCastling)
/* harmony export */ });
/* harmony import */ var _MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37017);
/* harmony import */ var _FENData_FENData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(26814);
/* harmony import */ var _VariantRule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(75942);
/* harmony import */ var _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(9680);
/* harmony import */ var _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(76758);





var tag = "oppositeSideCastling";
class OppositeSideCastling extends _VariantRule__WEBPACK_IMPORTED_MODULE_2__/* .VariantRule */ .$ {
  getDecoratorType() {
    return _FENData_FENData__WEBPACK_IMPORTED_MODULE_1__/* .FENData */ .c;
  }
  getPublicProperties() {
    return {
      parameterValue: true,
      information: {
        name: "Opposite-side Castling",
        description: "Once your opponent has castled, you can only castle to the opposite side",
        tag,
        color: _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_3__/* .variantRuleColors.minor */ .p.minor,
        displayIcon: "ὸ"
      }
    };
  }
  matchesPGNDeclaration(match) {
    return /^OppositeSideCastling$/i.test(match);
  }
  serializeToParsingForm() {
    return "OppositeSideCastling";
  }
  isDisabled() {
    return false;
  }
  processStandardMove(moveData) {
    var result = this.callHandler("processStandardMove", arguments);
    if ("specialType" in moveData) {
      var castlingDataReference;
      if (moveData.specialType === _MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_0__/* .SpecialMove.CastlingKingside */ .uj.CastlingKingside) {
        castlingDataReference = this.decorator.fenOptions.tag("castleKingside");
      } else if (moveData.specialType === _MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_0__/* .SpecialMove.CastlingQueenside */ .uj.CastlingQueenside) {
        castlingDataReference = this.decorator.fenOptions.tag("castleQueenside");
      }
      if (castlingDataReference) {
        castlingDataReference[(0,_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_4__/* .getOppositePlacedColor */ .R4)(this.decorator.sideToMove)] = false;
      }
    }
    return result;
  }
}
_VariantRule__WEBPACK_IMPORTED_MODULE_2__/* .VariantRule.initVariantRule */ .$.initVariantRule(OppositeSideCastling);

/***/ }),

/***/ 60705:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PiecesGoToBanks": () => (/* binding */ PiecesGoToBanks)
/* harmony export */ });
/* harmony import */ var _FENData_FENData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(26814);
/* harmony import */ var _GameInformation_GameUnits_PieceString__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20915);
/* harmony import */ var _VariantRule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(75942);
/* harmony import */ var _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(9680);
/* harmony import */ var _MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(37017);
/* harmony import */ var _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(4127);
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }






var tag = "piecesGoToBanks";
class PiecesGoToBanks extends _VariantRule__WEBPACK_IMPORTED_MODULE_2__/* .VariantRule */ .$ {
  getDecoratorType() {
    return _FENData_FENData__WEBPACK_IMPORTED_MODULE_0__/* .FENData */ .c;
  }
  getPublicProperties() {
    return {
      parameterValue: true,
      information: {
        name: "Bank Captures",
        description: "Captured pieces go to banks",
        tag,
        color: _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_3__/* .variantRuleColors.extending */ .p.extending,
        displayIcon: _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_5__/* .chessGlyphIndex.copyToClipboard */ .w.copyToClipboard
      }
    };
  }
  matchesPGNDeclaration(match) {
    return /^Crazy(?:house|wan)$/i.test(match);
  }
  serializeToParsingForm() {
    return "";
  }
  isDisabled() {
    return false;
  }
  processStandardMove(moveData) {
    var promotedFrom = this.decorator.fenOptions.tag("promotedFrom");
    if (moveData.promotion) {
      var pieceLetter = this.decorator.board.board[moveData.startCoordinates[0]][moveData.startCoordinates[1]].piece;
      promotedFrom.set(moveData.endCoordinates, pieceLetter);
    } else {
      var _iterator = _createForOfIteratorHelper(promotedFrom),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var _step$value = _slicedToArray(_step.value, 2),
            key = _step$value[0],
            value = _step$value[1];
          if (key[0] === moveData.startCoordinates[0] && key[1] === moveData.endCoordinates[1]) {
            promotedFrom.delete(key);
            promotedFrom.set(moveData.endCoordinates, value);
            break;
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    return this.callHandler("processStandardMove", arguments);
  }
  affectOptions(move) {
    var fenOptions = this.decorator.fenOptions;
    var areBanksEnabled = fenOptions.tag("areBanksEnabled"),
      bank = fenOptions.tag("bank"),
      promotedFrom = fenOptions.tag("promotedFrom");
    if (areBanksEnabled[this.decorator.sideToMove]) {
      if (!(0,_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_4__/* .verifyInternalMove */ .LR)(move)) {
        if ((0,_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_4__/* .verifyStandardMove */ .$j)(move)) {
          var captures = this.decorator.getCapturedPieces(move);
          var sideToMove = this.decorator.sideToMove;
          var addPieceToBank = piece => {
            var _iterator2 = _createForOfIteratorHelper(bank[sideToMove]),
              _step2;
            try {
              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
                var _step2$value = _slicedToArray(_step2.value, 2),
                  key = _step2$value[0],
                  value = _step2$value[1];
                if (key.piece === piece && key.color === sideToMove) {
                  bank[sideToMove].set(key, value + 1);
                  return;
                }
              }
            } catch (err) {
              _iterator2.e(err);
            } finally {
              _iterator2.f();
            }
            bank[sideToMove].set((0,_GameInformation_GameUnits_PieceString__WEBPACK_IMPORTED_MODULE_1__/* .createPieceFromData */ .HC)(sideToMove, piece), 1);
          };
          captures.forEach(c => {
            var _iterator3 = _createForOfIteratorHelper(promotedFrom),
              _step3;
            try {
              for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
                var _step3$value = _slicedToArray(_step3.value, 2),
                  key = _step3$value[0],
                  value = _step3$value[1];
                if (key[0] === c[0] && key[1] === c[1]) {
                  promotedFrom.delete(key);
                  addPieceToBank(value);
                  return;
                }
              }
            } catch (err) {
              _iterator3.e(err);
            } finally {
              _iterator3.f();
            }
            addPieceToBank(this.decorator.board.board[c[0]][c[1]].piece);
          });
        }
      }
    }
    return this.callHandler("affectOptions", arguments);
  }
}

/***/ }),

/***/ 61252:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PlayForMate": () => (/* binding */ PlayForMate)
/* harmony export */ });
/* harmony import */ var _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4127);
/* harmony import */ var _FENData_FENData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(26814);
/* harmony import */ var _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(76758);
/* harmony import */ var _VariantRule__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(75942);
/* harmony import */ var _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(9680);
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }





var tag = "playForMate";
class PlayForMate extends _VariantRule__WEBPACK_IMPORTED_MODULE_3__/* .VariantRule */ .$ {
  constructor() {
    super(...arguments);
    _defineProperty(this, "initiallyAliveColors", _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .totalPlayers */ .q3);
  }
  getDecoratorType() {
    return _FENData_FENData__WEBPACK_IMPORTED_MODULE_1__/* .FENData */ .c;
  }
  getPublicProperties() {
    return {
      parameterValue: true,
      information: {
        name: "Play for mate",
        description: "No points for pieces, only checkmates matter",
        tag,
        color: _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_4__/* .variantRuleColors.pointsAlternation */ .p.pointsAlternation,
        displayIcon: _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_0__/* .chessGlyphIndex.hashtag */ .w.hashtag
      }
    };
  }
  matchesPGNDeclaration(match) {
    return /^Play4Mate$/i.test(match);
  }
  serializeToParsingForm() {
    return "Play4Mate";
  }
  isDisabled(_ref) {
    var gameType = _ref.gameType;
    return gameType === _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .VariantType.Teams */ .Jy.Teams;
  }
  initDecoratorSettings() {
    this.initiallyAliveColors = this.decorator.fenOptions.tag("dead").map((d, i) => d || this.decorator.fenOptions.tag("resigned")[i]).filter(Boolean).length;
    var _iterator = _createForOfIteratorHelper(this.wrappingDecorators),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var _decorator$initDecora;
        var decorator = _step.value;
        (_decorator$initDecora = decorator.initDecoratorSettings) === null || _decorator$initDecora === void 0 ? void 0 : _decorator$initDecora.call(decorator);
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
  }
  obtainPointsForMate() {
    var aliveColors = this.decorator.fenOptions.tag("dead").filter(Boolean).length;
    switch (aliveColors) {
      case 1:
        if (this.initiallyAliveColors === _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .totalPlayers */ .q3) {
          return PlayForMate.checkmatePoints[1];
        }
      // * Fallthrough
      case 2:
        if (this.initiallyAliveColors >= _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .totalPlayers */ .q3 - 1) {
          return PlayForMate.checkmatePoints[2];
        }
      // * Fallthrough
      case 3:
        return PlayForMate.checkmatePoints[3];
      default:
        console.error("Unexpected players length ".concat(aliveColors));
        return 0;
    }
  }
  getPointsForPiece() {
    return 0;
  }
}
_VariantRule__WEBPACK_IMPORTED_MODULE_3__/* .VariantRule.initVariantRule */ .$.initVariantRule(PlayForMate);
_defineProperty(PlayForMate, "checkmatePoints", {
  [1]: 24,
  [2]: 32,
  [3]: 48
});

/***/ }),

/***/ 34208:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PointsForMate": () => (/* binding */ PointsForMate)
/* harmony export */ });
/* harmony import */ var _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76758);
/* harmony import */ var _FENData_FENData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(26814);
/* harmony import */ var _VariantRule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(75942);
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }



var tag = "pointsForMate";
class PointsForMate extends _VariantRule__WEBPACK_IMPORTED_MODULE_2__/* .VariantRule */ .$ {
  constructor(pointsForMate) {
    super();
    _defineProperty(this, "pointsForMate", void 0);
    if (typeof pointsForMate === "number") {
      this.pointsForMate = pointsForMate;
    } else {
      this.pointsForMate = 20;
    }
  }
  getDecoratorType() {
    return _FENData_FENData__WEBPACK_IMPORTED_MODULE_1__/* .FENData */ .c;
  }
  getPublicProperties() {
    return {
      parameterValue: this.pointsForMate,
      information: {
        name: "Points for Mate",
        textualForm: "+".concat(this.pointsForMate),
        description: "Checkmates & king captures are worth ".concat(this.pointsForMate, " points"),
        tag
      }
    };
  }
  matchesPGNDeclaration(match) {
    var matchArray = match.match(/^PointsForMate=(3|5|10|40)$/i);
    if (matchArray) {
      this.pointsForMate = Number(matchArray[1]);
      return true;
    } else {
      return false;
    }
  }
  serializeToParsingForm() {
    return "PointsForMate=".concat(this.pointsForMate);
  }
  isDisabled(_ref) {
    var variantDataRules = _ref.variantDataRules,
      gameType = _ref.gameType;
    return variantDataRules.giveaway || variantDataRules.playForMate || gameType === _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_0__/* .VariantType.Teams */ .Jy.Teams;
  }
  getParametrizedOptions() {
    var options = new Map();
    for (var _i = 0, _arr = [20, 3, 5, 10, 40]; _i < _arr.length; _i++) {
      var value = _arr[_i];
      options.set("+".concat(value), value);
    }
    return options;
  }
  obtainPointsForMate() {
    return this.pointsForMate;
  }
}
_VariantRule__WEBPACK_IMPORTED_MODULE_2__/* .VariantRule.initVariantRule */ .$.initVariantRule(PointsForMate);

/***/ }),

/***/ 47822:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StalemateOptions": () => (/* binding */ StalemateOptions),
/* harmony export */   "stalemateOptionsValues": () => (/* binding */ stalemateOptionsValues),
/* harmony export */   "verifyCustomStalemateValue": () => (/* binding */ verifyCustomStalemateValue)
/* harmony export */ });
/* harmony import */ var _client_ts_baseTypes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(18027);
/* harmony import */ var _FENData_FENData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(26814);
/* harmony import */ var _MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(37017);
/* harmony import */ var _VariantRule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(75942);
/* harmony import */ var _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(9680);
/* harmony import */ var _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(4127);
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }






var tag = "stalemateOptions";
var stalemateOptionsValues = {
  stalemateLoses: "loss",
  stalemateWins: "win",
  stalemateDraws: "draw"
};
var verifyCustomStalemateValue = v => Object.values(stalemateOptionsValues).includes(v);
class StalemateOptions extends _VariantRule__WEBPACK_IMPORTED_MODULE_2__/* .VariantRule */ .$ {
  constructor(type) {
    super();
    _defineProperty(this, "type", void 0);
    _defineProperty(this, "isFFA", false);
    if (typeof type === "string" && verifyCustomStalemateValue(type)) {
      this.type = type;
    } else {
      this.type = undefined;
    }
  }
  getDecoratorType() {
    return _FENData_FENData__WEBPACK_IMPORTED_MODULE_0__/* .FENData */ .c;
  }
  getPublicProperties() {
    var description = this.type === "draw" ? "Stalemate is a draw" : this.isFFA ? "The remaining players share the points" : "The stalemated player ".concat(this.type === "loss" ? "loses" : "wins");
    return {
      parameterValue: this.type,
      information: {
        name: "Stalemate",
        description,
        tag,
        color: _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_3__/* .variantRuleColors.minor */ .p.minor,
        displayIcon: _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_4__/* .chessGlyphIndex.dollarSign */ .w.dollarSign
      }
    };
  }
  matchesPGNDeclaration(match) {
    var matchArray = match.toLowerCase().match(/^Stalemate=(.+)$/i);
    if (matchArray) {
      var presumedOption = matchArray[1];
      if (verifyCustomStalemateValue(presumedOption)) {
        this.type = presumedOption;
      }
      return true;
    } else {
      return false;
    }
  }
  serializeToParsingForm() {
    var _this$type;
    return "Stalemate=".concat((_this$type = this.type) !== null && _this$type !== void 0 ? _this$type : "draw");
  }
  isDisabled() {
    return false;
  }
  getParametrizedOptions() {
    return new Map([["Draw", stalemateOptionsValues.stalemateDraws], ["The stalemated player loses", stalemateOptionsValues.stalemateLoses], ["The stalemated player wins", stalemateOptionsValues.stalemateWins]]);
  }
  initDecoratorSettings() {
    if (this.type === undefined) {
      if (this.decorator.board.gameType.isFFA() && this.decorator.fenOptions.tag("dead").filter(Boolean).length > 2) {
        this.type = "win";
        this.isFFA = true;
      } else {
        this.type = "draw";
        this.isFFA = false;
      }
    }
    var _iterator = _createForOfIteratorHelper(this.wrappingDecorators),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var _decorator$initDecora;
        var decorator = _step.value;
        (_decorator$initDecora = decorator.initDecoratorSettings) === null || _decorator$initDecora === void 0 ? void 0 : _decorator$initDecora.call(decorator);
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
  }
  processInternalMove(internalMove) {
    var currentTurn = this.decorator.sideToMove;
    var returnValues = this.callHandler("processInternalMove", arguments);
    if (internalMove.type === _MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_1__/* .InternalMoveSignature.Stalemate */ .Fi.Stalemate) {
      var pointsForMate = this.decorator.obtainPointsForMate();
      switch (this.type) {
        case "loss":
          if (!this.isFFA) {
            this.decorator.points[currentTurn] += pointsForMate;
            break;
          }
        // * Fallthrough
        case "draw":
          this.injectIntoBaseClass(function () {
            this.spreadPointsBetweenPlayersEvenly();
          })();
          break;
        case "win":
          this.decorator.points[this.decorator.sideToMove] += pointsForMate;
          break;
        case undefined:
          break;
        default:
          (0,_client_ts_baseTypes__WEBPACK_IMPORTED_MODULE_5__/* .throwOnNever */ .h0)(this.type);
      }
      if (this.decorator.getRealPlayers() === 1) {
        this.decorator.assignGeneralTermination("Stalemate", currentTurn);
      }
    }
    return returnValues;
  }
}
_VariantRule__WEBPACK_IMPORTED_MODULE_2__/* .VariantRule.initVariantRule */ .$.initVariantRule(StalemateOptions);

/***/ }),

/***/ 96572:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Takeover": () => (/* binding */ Takeover)
/* harmony export */ });
/* harmony import */ var _Board_BoardInterface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(29939);
/* harmony import */ var _FENData_FENData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(26814);
/* harmony import */ var _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(76758);
/* harmony import */ var _GameInformation_GameUnits_PieceString__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(20915);
/* harmony import */ var _PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(16703);
/* harmony import */ var _VariantRule__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(75942);
/* harmony import */ var _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(9680);
/* harmony import */ var _DeadKingWalking__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(83782);
/* harmony import */ var _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(4127);
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }









var tag = "takeover";
class Takeover extends _VariantRule__WEBPACK_IMPORTED_MODULE_5__/* .VariantRule */ .$ {
  constructor() {
    super(...arguments);
    _defineProperty(this, "dependencies", new Map([[_DeadKingWalking__WEBPACK_IMPORTED_MODULE_7__.DeadKingWalking, []]]));
  }
  getDecoratorType() {
    return _FENData_FENData__WEBPACK_IMPORTED_MODULE_1__/* .FENData */ .c;
  }
  getPublicProperties() {
    return {
      parameterValue: true,
      information: {
        name: "Takeover",
        description: "Checkmate players to take control of their pieces",
        tag,
        color: _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_6__/* .variantRuleColors.phased */ .p.phased,
        displayIcon: _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_8__/* .chessGlyphIndex.exchange */ .w.exchange
      }
    };
  }
  matchesPGNDeclaration(match) {
    return /^Takeover$/i.test(match);
  }
  serializeToParsingForm() {
    return "Takeover";
  }
  isDisabled(_ref) {
    var gameType = _ref.gameType;
    return gameType === _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .VariantType.Teams */ .Jy.Teams;
  }
  affectOptions() {
    var sideToMove = this.decorator.sideToMove,
      detectedPieces = this.decorator.board.getPlayerPieces();
    var results = this.callHandler("affectOptions", arguments);
    var _iterator = _createForOfIteratorHelper(_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .colors */ .O9),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var color = _step.value;
        if (!results.checkmates[color]) continue;
        var _iterator2 = _createForOfIteratorHelper(detectedPieces[sideToMove]),
          _step2;
        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
            var piece = _step2.value;
            var pieceString = this.decorator.board.board[piece[0]][piece[1]];
            if (!pieceString.isDead() || _PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_4__/* .pieceControlConfigSettings */ .Gf[pieceString.piece].moveGenerationSettings.isPawn) continue;
            this.decorator.board.board[piece[0]][piece[1]] = (0,_GameInformation_GameUnits_PieceString__WEBPACK_IMPORTED_MODULE_3__/* .createPieceFromData */ .HC)(sideToMove, pieceString.piece);
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    return results;
  }
  countTotalPointsOnBoard() {
    var zombieImmune = this.decorator.fenOptions.tag("zombieImmune"),
      royals = this.decorator.fenOptions.tag("royal");
    var resultingPoints = [0, 0, 0, 0];
    this.decorator.board.getPlayerPieces().forEach((army, color) => {
      if (zombieImmune[color]) return;
      var royal = royals[color];
      var _iterator3 = _createForOfIteratorHelper(army),
        _step3;
      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
          var coordinate = _step3.value;
          if (royal && (0,_Board_BoardInterface__WEBPACK_IMPORTED_MODULE_0__/* .compareCoordinates */ .ef)(coordinate, royal)) {
            resultingPoints[color] += this.decorator.obtainPointsForMate();
          } else {
            var piece = this.decorator.board.board[coordinate[0]][coordinate[1]].piece;
            resultingPoints[color] += _PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_4__/* .pieceControlConfigSettings */ .Gf[piece].points.singlesPoints;
          }
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
    });
    return resultingPoints;
  }
}
_VariantRule__WEBPACK_IMPORTED_MODULE_5__/* .VariantRule.initVariantRule */ .$.initVariantRule(Takeover);

/***/ }),

/***/ 38260:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ThreefoldRepetition": () => (/* binding */ ThreefoldRepetition)
/* harmony export */ });
/* harmony import */ var _FENData_FENData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(26814);
/* harmony import */ var _VariantRule__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(75942);
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }


var tag = "threefoldRepetition";
class ThreefoldRepetition extends _VariantRule__WEBPACK_IMPORTED_MODULE_1__/* .VariantRule */ .$ {
  constructor(totalRepetitions) {
    super();
    _defineProperty(this, "totalRepetitionsRequired", void 0);
    if (typeof totalRepetitions === "number" && totalRepetitions > 0) {
      this.totalRepetitionsRequired = totalRepetitions;
    } else {
      this.totalRepetitionsRequired = 3;
    }
  }
  getDecoratorType() {
    return _FENData_FENData__WEBPACK_IMPORTED_MODULE_0__/* .FENData */ .c;
  }
  getPublicProperties() {
    var isDisabled = this.totalRepetitionsRequired === Infinity;
    return {
      parameterValue: this.totalRepetitionsRequired,
      information: {
        name: "N-fold Repetition",
        textualForm: "",
        description: isDisabled ? "3-fold repetition disabled" : "After position repeats ".concat(this.totalRepetitionsRequired, " times game is over"),
        tag
      }
    };
  }
  matchesPGNDeclaration(match) {
    var matchArray = match.match(/^ThreefoldRepetition=((?:\d+)|(?:Infinity))$/i);
    if (matchArray) {
      this.totalRepetitionsRequired = Number(matchArray[1]);
      return true;
    } else {
      return false;
    }
  }
  serializeToParsingForm() {
    return "ThreefoldRepetition=".concat(this.totalRepetitionsRequired);
  }
  isDisabled() {
    return false;
  }
  getParametrizedOptions() {
    var options = new Map();
    for (var _i = 0, _arr = [3, 2, 5]; _i < _arr.length; _i++) {
      var value = _arr[_i];
      options.set("".concat(value, "-fold"), value);
    }
    options.set("Unlimited", Infinity);
    return options;
  }
  affectOptions() {
    var results = this.callHandler("affectOptions", arguments);
    var repetitions = this.decorator.board.moves.getHash(this.decorator.board.moves.constructPreliminaryHashString(this.decorator.board));
    if (repetitions + 1 >= this.totalRepetitionsRequired) {
      this.decorator.assignGeneralTermination("Threefold Repetition");
      this.injectIntoBaseClass(function () {
        this.spreadPointsBetweenPlayersEvenly();
      })();
    }
    return results;
  }
}
_VariantRule__WEBPACK_IMPORTED_MODULE_1__/* .VariantRule.initVariantRule */ .$.initVariantRule(ThreefoldRepetition);

/***/ }),

/***/ 93323:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AnyCapture": () => (/* binding */ AnyCapture)
/* harmony export */ });
/* harmony import */ var _baseTypes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(18027);
/* harmony import */ var _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76758);
/* harmony import */ var _PieceControl_PieceControl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(56602);
/* harmony import */ var _VariantRule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(75942);
/* harmony import */ var _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(9680);
/* harmony import */ var _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(4127);
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }






var tag = "anyCapture";
class AnyCapture extends _VariantRule__WEBPACK_IMPORTED_MODULE_2__/* .VariantRule */ .$ {
  getDecoratorType() {
    return _PieceControl_PieceControl__WEBPACK_IMPORTED_MODULE_1__/* .PieceControl */ .V;
  }
  getPublicProperties() {
    return {
      parameterValue: true,
      information: {
        name: "Any Capture",
        description: "You can capture your own pieces",
        tag,
        color: _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_3__/* .variantRuleColors.autogenous */ .p.autogenous,
        displayIcon: _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_4__/* .chessGlyphIndex.captureAnything */ .w.captureAnything
      }
    };
  }
  matchesPGNDeclaration(match) {
    return /^AnyCapture$/i.test(match);
  }
  serializeToParsingForm() {
    return "AnyCapture";
  }
  isDisabled() {
    return false;
  }
  configure(configuration) {
    var modifiedConfiguration = _objectSpread(_objectSpread({}, configuration), {}, {
      immunePieces: (0,_baseTypes__WEBPACK_IMPORTED_MODULE_5__/* .createTuple */ .VS)(false, _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_0__/* .totalPlayers */ .q3)
    });
    var _iterator = _createForOfIteratorHelper(this.wrappingDecorators),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var decorator = _step.value;
        if (decorator.configure) return decorator.configure(modifiedConfiguration);
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    return _PieceControl_PieceControl__WEBPACK_IMPORTED_MODULE_1__/* .PieceControl.prototype.configure.call */ .V.prototype.configure.call(this.decorator, modifiedConfiguration);
  }
}
_VariantRule__WEBPACK_IMPORTED_MODULE_2__/* .VariantRule.initVariantRule */ .$.initVariantRule(AnyCapture);

/***/ }),

/***/ 96823:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PromoteTo": () => (/* binding */ PromoteTo)
/* harmony export */ });
/* harmony import */ var _moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16703);
/* harmony import */ var _client_ts_utils_StringFormatUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(14093);
/* harmony import */ var _PieceControl_PieceControl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(56602);
/* harmony import */ var _VariantRule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(75942);
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }




var tag = "promotionPieces";
class PromoteTo extends _VariantRule__WEBPACK_IMPORTED_MODULE_2__/* .VariantRule */ .$ {
  static filterPromotionPieceString(pieces) {
    var inputPromotion = pieces.split("").filter(p => (0,_moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_0__/* .verifyPieceLetter */ .IM)(p));
    return inputPromotion.length ? inputPromotion : [_moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_0__/* .defaultPieces.queen */ .bB.queen, _moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_0__/* .defaultPieces.rook */ .bB.rook, _moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_0__/* .defaultPieces.bishop */ .bB.bishop, _moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_0__/* .defaultPieces.knight */ .bB.knight];
  }
  constructor(promotionPieces) {
    super();
    _defineProperty(this, "promotionPieces", void 0);
    this.promotionPieces = Array.isArray(promotionPieces) && promotionPieces.every(p => typeof p === "string" && (0,_moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_0__/* .verifyPieceLetter */ .IM)(p)) ? promotionPieces : [_moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_0__/* .defaultPieces.queen */ .bB.queen, _moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_0__/* .defaultPieces.rook */ .bB.rook, _moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_0__/* .defaultPieces.bishop */ .bB.bishop, _moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_0__/* .defaultPieces.knight */ .bB.knight];
  }
  getDecoratorType() {
    return _PieceControl_PieceControl__WEBPACK_IMPORTED_MODULE_1__/* .PieceControl */ .V;
  }
  getPublicProperties() {
    var pieceNames = this.promotionPieces.reduce((p, c) => {
      var pieceName = _moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_0__/* .pieceControlConfigSettings */ .Gf[c].naming.name;
      return [...p, pieceName];
    }, []);
    return {
      parameterValue: this.promotionPieces,
      information: {
        name: "Pawns promote to",
        textualForm: "",
        description: "Pawns promote to ".concat((0,_client_ts_utils_StringFormatUtils__WEBPACK_IMPORTED_MODULE_3__/* .prefixWithIndefiniteArticle */ .zL)((0,_client_ts_utils_StringFormatUtils__WEBPACK_IMPORTED_MODULE_3__/* .compileEnumeration */ .uC)(pieceNames))),
        tag
      }
    };
  }
  matchesPGNDeclaration(match) {
    var matchArray = match.match(/^PromoteTo=([A-ZxΘ]+)$/i);
    if (matchArray) {
      this.promotionPieces = PromoteTo.filterPromotionPieceString(matchArray[1]);
      return true;
    } else {
      return false;
    }
  }
  serializeToParsingForm() {
    return "PromoteTo=".concat(this.promotionPieces.join(""));
  }
  isDisabled() {
    return false;
  }
  initDecoratorSettings() {
    if (this.decorator.hooks.usePawnLogic) {
      this.decorator.hooks.usePawnLogic.promotionPieces = this.promotionPieces;
    }
    var _iterator = _createForOfIteratorHelper(this.wrappingDecorators),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var _decorator$initDecora;
        var decorator = _step.value;
        (_decorator$initDecora = decorator.initDecoratorSettings) === null || _decorator$initDecora === void 0 ? void 0 : _decorator$initDecora.call(decorator);
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
  }
}
_VariantRule__WEBPACK_IMPORTED_MODULE_2__/* .VariantRule.initVariantRule */ .$.initVariantRule(PromoteTo);

/***/ }),

/***/ 46393:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PromotionRank": () => (/* binding */ PromotionRank),
/* harmony export */   "disabledRank": () => (/* binding */ disabledRank)
/* harmony export */ });
/* harmony import */ var _client_ts_utils_StringFormatUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(14093);
/* harmony import */ var _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76758);
/* harmony import */ var _PieceControl_PieceControl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(56602);
/* harmony import */ var _VariantRule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(75942);
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }




var tag = "promotionRank";
var disabledRank = 99;
class PromotionRank extends _VariantRule__WEBPACK_IMPORTED_MODULE_2__/* .VariantRule */ .$ {
  constructor(promotionRank) {
    super();
    _defineProperty(this, "promotionRank", void 0);
    this.promotionRank = typeof promotionRank === "number" ? promotionRank : 8;
  }
  getDecoratorType() {
    return _PieceControl_PieceControl__WEBPACK_IMPORTED_MODULE_1__/* .PieceControl */ .V;
  }
  getPublicProperties() {
    return {
      parameterValue: this.promotionRank,
      information: {
        name: "Promotion Rank",
        textualForm: "",
        description: "on the ".concat(this.promotionRank).concat((0,_client_ts_utils_StringFormatUtils__WEBPACK_IMPORTED_MODULE_3__/* .formatOrdinalNumber */ .od)(this.promotionRank), " rank"),
        tag
      }
    };
  }
  matchesPGNDeclaration(match) {
    var matchArray = match.match(/^Prom=(\d\d?)$/i);
    if (matchArray) {
      this.promotionRank = Number(matchArray[1]);
      return true;
    } else {
      return false;
    }
  }
  serializeToParsingForm() {
    return "Prom=".concat(this.promotionRank);
  }
  isDisabled() {
    return false;
  }
  getParametrizedOptions() {
    var resultingMap = new Map();
    for (var i = 1; i <= _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_0__/* .boardDimension */ .iJ; i++) {
      resultingMap.set(String(i) + (0,_client_ts_utils_StringFormatUtils__WEBPACK_IMPORTED_MODULE_3__/* .formatOrdinalNumber */ .od)(i), i);
    }
    resultingMap.set("No promotion", disabledRank);
    return resultingMap;
  }
  initDecoratorSettings() {
    if (this.decorator.hooks.usePawnLogic) {
      this.decorator.hooks.usePawnLogic.promotionRanks = [_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_0__/* .boardDimension */ .iJ - this.promotionRank, this.promotionRank - 1, this.promotionRank - 1, _GameInformation_GameData__WEBPACK_IMPORTED_MODULE_0__/* .boardDimension */ .iJ - this.promotionRank];
    }
    var _iterator = _createForOfIteratorHelper(this.wrappingDecorators),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var _decorator$initDecora;
        var decorator = _step.value;
        (_decorator$initDecora = decorator.initDecoratorSettings) === null || _decorator$initDecora === void 0 ? void 0 : _decorator$initDecora.call(decorator);
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
  }
}
_VariantRule__WEBPACK_IMPORTED_MODULE_2__/* .VariantRule.initVariantRule */ .$.initVariantRule(PromotionRank);

/***/ }),

/***/ 87247:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RoyalsCannotCapture": () => (/* binding */ RoyalsCannotCapture)
/* harmony export */ });
/* harmony import */ var _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4127);
/* harmony import */ var _PieceControl_PieceControl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(56602);
/* harmony import */ var _PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(16703);
/* harmony import */ var _VariantRule__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(75942);
/* harmony import */ var _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(9680);
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }





var tag = "royalsCannotCapture";
class RoyalsCannotCapture extends _VariantRule__WEBPACK_IMPORTED_MODULE_3__/* .VariantRule */ .$ {
  getDecoratorType() {
    return _PieceControl_PieceControl__WEBPACK_IMPORTED_MODULE_1__/* .PieceControl */ .V;
  }
  getPublicProperties() {
    return {
      parameterValue: true,
      information: {
        name: "Royals Cannot Capture",
        description: "Royal pieces cannot capture pieces.",
        tag,
        color: _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_4__/* .variantRuleColors.autogenous */ .p.autogenous,
        displayIcon: _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_0__/* .chessGlyphIndex.handshake */ .w.handshake
      }
    };
  }
  matchesPGNDeclaration() {
    return false;
  }
  serializeToParsingForm() {
    return "";
  }
  isDisabled() {
    return false;
  }
  getMovePossibility(configuration) {
    var royal = this.decorator.fenData.fenOptions.tag("royal")[this.decorator.color];
    if (royal && royal[0] === this.decorator.i && royal[1] === this.decorator.j) {
      configuration.special = _PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_2__/* .AttackType.MoveOnly */ .hK.MoveOnly;
    }
    var _iterator = _createForOfIteratorHelper(this.wrappingDecorators),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var decorator = _step.value;
        if (decorator.getMovePossibility) return decorator.getMovePossibility(configuration);
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    return _PieceControl_PieceControl__WEBPACK_IMPORTED_MODULE_1__/* .PieceControl.prototype.getMovePossibility.call */ .V.prototype.getMovePossibility.call(this.decorator, configuration);
  }
}

/***/ }),

/***/ 49556:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Sideways": () => (/* binding */ Sideways)
/* harmony export */ });
/* harmony import */ var _moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16703);
/* harmony import */ var _PieceControl_PieceControl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(56602);
/* harmony import */ var _VariantRule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(75942);
/* harmony import */ var _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(9680);
/* harmony import */ var _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(4127);
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }





var tag = "sideways";
class Sideways extends _VariantRule__WEBPACK_IMPORTED_MODULE_2__/* .VariantRule */ .$ {
  getDecoratorType() {
    return _PieceControl_PieceControl__WEBPACK_IMPORTED_MODULE_1__/* .PieceControl */ .V;
  }
  getPublicProperties() {
    return {
      parameterValue: true,
      information: {
        name: "Sideways",
        description: "Pawns can also move one square sideways",
        tag,
        color: _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_3__/* .variantRuleColors.autogenous */ .p.autogenous,
        displayIcon: _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_4__/* .chessGlyphIndex.pawnSideways */ .w.pawnSideways
      }
    };
  }
  matchesPGNDeclaration(match) {
    return /^Sideways$/i.test(match);
  }
  serializeToParsingForm() {
    return "Sideways";
  }
  isDisabled() {
    return false;
  }
  getPossibleCells() {
    if (this.decorator.hooks.usePawnLogic) {
      this.injectIntoBaseClass(function () {
        this.generateJumpAttack({
          displacement: [0, -1],
          special: _moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_0__/* .AttackType.MoveOnly */ .hK.MoveOnly
        });
        this.generateJumpAttack({
          displacement: [0, 1],
          special: _moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_0__/* .AttackType.MoveOnly */ .hK.MoveOnly
        });
      })();
    }
    var _iterator = _createForOfIteratorHelper(this.wrappingDecorators),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var decorator = _step.value;
        if (decorator.getPossibleCells) return decorator.getPossibleCells();
      }
      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    var prototype = Object.getPrototypeOf(this.decorator);
    prototype.getPossibleCells.call(this.decorator);
  }
}
_VariantRule__WEBPACK_IMPORTED_MODULE_2__/* .VariantRule.initVariantRule */ .$.initVariantRule(Sideways);

/***/ }),

/***/ 71016:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Stonewall": () => (/* binding */ Stonewall)
/* harmony export */ });
/* harmony import */ var _PieceControl_PieceControl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(56602);
/* harmony import */ var _PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(16703);
/* harmony import */ var _VariantRule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(75942);
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }



var tag = "stonewall";
class Stonewall extends _VariantRule__WEBPACK_IMPORTED_MODULE_2__/* .VariantRule */ .$ {
  getDecoratorType() {
    return _PieceControl_PieceControl__WEBPACK_IMPORTED_MODULE_0__/* .PieceControl */ .V;
  }
  getPublicProperties() {
    return {
      parameterValue: true,
      information: {
        name: "Stonewall",
        textualForm: "",
        description: "Dead pieces cannot be captured",
        tag
      }
    };
  }
  matchesPGNDeclaration(match) {
    return /^Deadwall$/i.test(match);
  }
  serializeToParsingForm() {
    return "Deadwall";
  }
  isDisabled() {
    return false;
  }
  getMovePossibility(configuration) {
    var _configuration$displa = _slicedToArray(configuration.displacement, 2),
      i = _configuration$displa[0],
      j = _configuration$displa[1],
      special = configuration.special;
    var modifiedConfiguration = configuration;
    if ((special === _PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .AttackType.AttackOnly */ .hK.AttackOnly || special === _PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .AttackType.Normal */ .hK.Normal || special === _PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .AttackType.RayGen */ .hK.RayGen) && this.decorator.board[i] && this.decorator.board[i][j] && this.decorator.board[i][j].isDead()) {
      modifiedConfiguration = _objectSpread(_objectSpread({}, configuration), {}, {
        special: _PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_1__/* .AttackType.MoveOnly */ .hK.MoveOnly
      });
    }
    var _iterator = _createForOfIteratorHelper(this.wrappingDecorators),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var decorator = _step.value;
        if (decorator.getMovePossibility) return decorator.getMovePossibility(configuration);
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    return _PieceControl_PieceControl__WEBPACK_IMPORTED_MODULE_0__/* .PieceControl.prototype.getMovePossibility.call */ .V.prototype.getMovePossibility.call(this.decorator, modifiedConfiguration);
  }
}
_VariantRule__WEBPACK_IMPORTED_MODULE_2__/* .VariantRule.initVariantRule */ .$.initVariantRule(Stonewall);

/***/ }),

/***/ 90433:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Torpedo": () => (/* binding */ Torpedo)
/* harmony export */ });
/* harmony import */ var _PieceControl_PieceControl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(56602);
/* harmony import */ var _VariantRule__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(75942);
/* harmony import */ var _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(9680);
/* harmony import */ var _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(4127);
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }




var tag = "torpedo";
class Torpedo extends _VariantRule__WEBPACK_IMPORTED_MODULE_1__/* .VariantRule */ .$ {
  getDecoratorType() {
    return _PieceControl_PieceControl__WEBPACK_IMPORTED_MODULE_0__/* .PieceControl */ .V;
  }
  getPublicProperties() {
    return {
      parameterValue: true,
      information: {
        name: "Torpedo",
        description: "Pawns can always jump two squares",
        tag,
        color: _VariantRuleInterface__WEBPACK_IMPORTED_MODULE_2__/* .variantRuleColors.autogenous */ .p.autogenous,
        displayIcon: _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_3__/* .chessGlyphIndex.torpedo */ .w.torpedo
      }
    };
  }
  matchesPGNDeclaration(match) {
    return /^Torpedo$/i.test(match);
  }
  serializeToParsingForm() {
    return "Torpedo";
  }
  isDisabled() {
    return false;
  }
  configure(configuration) {
    var modifiedConfiguration = _objectSpread(_objectSpread({}, configuration), {}, {
      baseRank: true
    });
    var _iterator = _createForOfIteratorHelper(this.wrappingDecorators),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var decorator = _step.value;
        if (decorator.configure) return decorator.configure(modifiedConfiguration);
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    _PieceControl_PieceControl__WEBPACK_IMPORTED_MODULE_0__/* .PieceControl.prototype.configure.call */ .V.prototype.configure.call(this.decorator, modifiedConfiguration);
  }
}
_VariantRule__WEBPACK_IMPORTED_MODULE_1__/* .VariantRule.initVariantRule */ .$.initVariantRule(Torpedo);

/***/ }),

/***/ 9680:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "p": () => (/* binding */ variantRuleColors)
/* harmony export */ });
/* harmony import */ var _client_ts_interfaces_Colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7970);

var variantRuleColors = {
  minor: (0,_client_ts_interfaces_Colors__WEBPACK_IMPORTED_MODULE_0__/* .createHexColor */ .TG)("#e01492"),
  visual: (0,_client_ts_interfaces_Colors__WEBPACK_IMPORTED_MODULE_0__/* .createHexColor */ .TG)("#ad5709"),
  autogenous: (0,_client_ts_interfaces_Colors__WEBPACK_IMPORTED_MODULE_0__/* .createHexColor */ .TG)("#f2791e"),
  metadata: (0,_client_ts_interfaces_Colors__WEBPACK_IMPORTED_MODULE_0__/* .createHexColor */ .TG)("#89a5d3"),
  startingPosition: (0,_client_ts_interfaces_Colors__WEBPACK_IMPORTED_MODULE_0__/* .createHexColor */ .TG)("#7030a0"),
  extending: (0,_client_ts_interfaces_Colors__WEBPACK_IMPORTED_MODULE_0__/* .createHexColor */ .TG)("#fbaa07"),
  widespread: (0,_client_ts_interfaces_Colors__WEBPACK_IMPORTED_MODULE_0__/* .createHexColor */ .TG)("#d40c0c"),
  pointsAlternation: (0,_client_ts_interfaces_Colors__WEBPACK_IMPORTED_MODULE_0__/* .createHexColor */ .TG)("#00b0f0"),
  phased: (0,_client_ts_interfaces_Colors__WEBPACK_IMPORTED_MODULE_0__/* .createHexColor */ .TG)("#00b050")
};

/***/ }),

/***/ 32957:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "KH": () => (/* binding */ copyVariantRules),
/* harmony export */   "XY": () => (/* binding */ createBaseParsingTypes),
/* harmony export */   "x7": () => (/* binding */ compileVariantRuleData),
/* harmony export */   "xU": () => (/* binding */ validateVariantRules),
/* harmony export */   "yS": () => (/* binding */ parseVariantRules)
/* harmony export */ });
/* harmony import */ var _Board_Board__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(80273);
/* harmony import */ var _FENData_FENData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(26814);
/* harmony import */ var _PieceControl_PieceControl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(56602);
/* harmony import */ var _VariantRuleDefinitions_BoardDecorators_ForcedCapture__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(66798);
/* harmony import */ var _VariantRuleDefinitions_BoardDecorators_SeirawanSetup__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(33340);
/* harmony import */ var _VariantRuleDefinitions_BoardDecorators_SetupChess__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(301);
/* harmony import */ var _VariantRuleDefinitions_BoardDecorators_Taboo__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(25896);
/* harmony import */ var _VariantRuleDefinitions_FENDataDecorators_FiftyMoveRule__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(83433);
/* harmony import */ var _VariantRuleDefinitions_FENDataDecorators_Giveaway__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(35561);
/* harmony import */ var _VariantRuleDefinitions_FENDataDecorators_StalemateOptions__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(47822);
/* harmony import */ var _VariantRuleDefinitions_FENDataDecorators_ThreefoldRepetition__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(38260);
/* harmony import */ var _VariantRuleDefinitions_PieceControlDecorators_PromoteTo__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(96823);
/* harmony import */ var _VariantRuleDefinitions_PieceControlDecorators_PromotionRank__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(46393);
/* harmony import */ var _VariantRule__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(75942);
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, "_invoke", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == typeof value && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, "_invoke", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, "throw" === methodName && delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method) || "return" !== methodName && (context.method = "throw", context.arg = new TypeError("The iterator does not provide a '" + methodName + "' method")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }














var createBaseParsingTypes = () => ({
  boardDecorators: [],
  pieceControlDecorators: [],
  fenDataDecorators: [],
  [Symbol.iterator]() {
    var _this = this;
    return /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
      var _i, _arr, rv, variantRule;
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            _i = 0, _arr = [..._this.boardDecorators, ..._this.pieceControlDecorators, ..._this.fenDataDecorators];
          case 1:
            if (!(_i < _arr.length)) {
              _context.next = 9;
              break;
            }
            rv = _arr[_i];
            variantRule = rv;
            _context.next = 6;
            return variantRule;
          case 6:
            _i++;
            _context.next = 1;
            break;
          case 9:
          case "end":
            return _context.stop();
        }
      }, _callee);
    })();
  }
});
var variantRulePriorities = [_VariantRuleDefinitions_BoardDecorators_SetupChess__WEBPACK_IMPORTED_MODULE_5__.SetupChess, _VariantRuleDefinitions_BoardDecorators_ForcedCapture__WEBPACK_IMPORTED_MODULE_3__.ForcedCapture, _VariantRuleDefinitions_BoardDecorators_Taboo__WEBPACK_IMPORTED_MODULE_6__.Taboo, _VariantRuleDefinitions_BoardDecorators_SeirawanSetup__WEBPACK_IMPORTED_MODULE_4__.SeirawanSetup, _VariantRuleDefinitions_PieceControlDecorators_PromoteTo__WEBPACK_IMPORTED_MODULE_11__.PromoteTo, _VariantRuleDefinitions_PieceControlDecorators_PromotionRank__WEBPACK_IMPORTED_MODULE_12__.PromotionRank, _VariantRuleDefinitions_FENDataDecorators_Giveaway__WEBPACK_IMPORTED_MODULE_8__.Giveaway].reverse();
function differentiateDecoratorMethods(variant, methods) {
  var verifyDecorator = (rv, type) => rv.getDecoratorType() === type;
  if (verifyDecorator(variant, _Board_Board__WEBPACK_IMPORTED_MODULE_0__/* .Board */ .$)) {
    methods.boardDecorators(variant);
  } else if (verifyDecorator(variant, _PieceControl_PieceControl__WEBPACK_IMPORTED_MODULE_2__/* .PieceControl */ .V)) {
    methods.pieceControlDecorators(variant);
  } else if (verifyDecorator(variant, _FENData_FENData__WEBPACK_IMPORTED_MODULE_1__/* .FENData */ .c)) {
    methods.fenDataDecorators(variant);
  }
}
function parseVariantRules(rules) {
  var variantClasses = new Set();
  var variantRuleList = new Set();
  var forcedRules = [_VariantRuleDefinitions_PieceControlDecorators_PromotionRank__WEBPACK_IMPORTED_MODULE_12__.PromotionRank, _VariantRuleDefinitions_PieceControlDecorators_PromoteTo__WEBPACK_IMPORTED_MODULE_11__.PromoteTo, _VariantRuleDefinitions_FENDataDecorators_StalemateOptions__WEBPACK_IMPORTED_MODULE_9__.StalemateOptions, _VariantRuleDefinitions_FENDataDecorators_FiftyMoveRule__WEBPACK_IMPORTED_MODULE_7__.FiftyMoveRule, _VariantRuleDefinitions_FENDataDecorators_ThreefoldRepetition__WEBPACK_IMPORTED_MODULE_10__.ThreefoldRepetition];
  var _iterator = _createForOfIteratorHelper(_VariantRule__WEBPACK_IMPORTED_MODULE_13__/* .VariantRule.variantRuleList */ .$.variantRuleList),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var variantRule = _step.value;
      var rv = new variantRule();
      variantRuleList.add(rv);
      variantClasses.add(variantRule);
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  var finalList = createBaseParsingTypes();
  var rulesStrings = rules.split(/\s+/);
  var insertVariantRule = variant => {
    differentiateDecoratorMethods(variant, {
      boardDecorators: variant => {
        finalList.boardDecorators.push(variant);
      },
      pieceControlDecorators: variant => {
        finalList.pieceControlDecorators.push(variant);
      },
      fenDataDecorators: variant => {
        finalList.fenDataDecorators.push(variant);
      }
    });
    var _iterator2 = _createForOfIteratorHelper(variant.dependencies),
      _step2;
    try {
      var _loop = function _loop() {
        var _step2$value = _slicedToArray(_step2.value, 2),
          dependency = _step2$value[0],
          dependencyArgs = _step2$value[1];
        if (!Object.values(finalList).some(decorators => decorators.some(rv => rv instanceof dependency))) {
          insertVariantRule(new dependency(...dependencyArgs));
        }
      };
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        _loop();
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
  };
  var _iterator3 = _createForOfIteratorHelper(variantRuleList),
    _step3;
  try {
    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
      var variant = _step3.value;
      var _iterator5 = _createForOfIteratorHelper(rulesStrings),
        _step5;
      try {
        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
          var ruleString = _step5.value;
          if (variant.matchesPGNDeclaration(ruleString)) {
            insertVariantRule(variant);
            variantRuleList.delete(variant);
          }
        }
      } catch (err) {
        _iterator5.e(err);
      } finally {
        _iterator5.f();
      }
    }
  } catch (err) {
    _iterator3.e(err);
  } finally {
    _iterator3.f();
  }
  var _loop2 = function _loop2() {
    var forcedRule = _forcedRules[_i2];
    var variant = new forcedRule();
    differentiateDecoratorMethods(variant, {
      boardDecorators: variant => {
        if (!finalList.boardDecorators.some(rule => rule instanceof forcedRule)) {
          finalList.boardDecorators.push(variant);
        }
      },
      pieceControlDecorators: variant => {
        if (!finalList.pieceControlDecorators.some(rule => rule instanceof forcedRule)) {
          finalList.pieceControlDecorators.push(variant);
        }
      },
      fenDataDecorators: variant => {
        if (!finalList.fenDataDecorators.some(rule => rule instanceof forcedRule)) {
          finalList.fenDataDecorators.push(variant);
        }
      }
    });
  };
  for (var _i2 = 0, _forcedRules = forcedRules; _i2 < _forcedRules.length; _i2++) {
    _loop2();
  }
  var _iterator4 = _createForOfIteratorHelper(variantRulePriorities),
    _step4;
  try {
    var _loop3 = function _loop3() {
      var rule = _step4.value;
      var resultingRule = new rule();
      differentiateDecoratorMethods(resultingRule, {
        boardDecorators: () => {
          var index = finalList.boardDecorators.findIndex(c => c instanceof rule);
          if (index !== -1) {
            finalList.boardDecorators.unshift(finalList.boardDecorators.splice(index, 1)[0]);
          }
        },
        pieceControlDecorators: () => {
          var index = finalList.pieceControlDecorators.findIndex(c => c instanceof rule);
          if (index !== -1) {
            finalList.pieceControlDecorators.unshift(finalList.pieceControlDecorators.splice(index, 1)[0]);
          }
        },
        fenDataDecorators: () => {
          var index = finalList.fenDataDecorators.findIndex(c => c instanceof rule);
          if (index !== -1) {
            finalList.fenDataDecorators.unshift(finalList.fenDataDecorators.splice(index, 1)[0]);
          }
        }
      });
    };
    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
      _loop3();
    }
  } catch (err) {
    _iterator4.e(err);
  } finally {
    _iterator4.f();
  }
  return finalList;
}
function compileVariantRuleData(rules) {
  var finalObject = {};
  var variantRuleList = _VariantRule__WEBPACK_IMPORTED_MODULE_13__/* .VariantRule.variantRuleList.map */ .$.variantRuleList.map(rv => new rv());
  var _iterator6 = _createForOfIteratorHelper(variantRuleList),
    _step6;
  try {
    for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {
      var rule = _step6.value;
      finalObject[rule.getPublicProperties().information.tag] = false;
    }
  } catch (err) {
    _iterator6.e(err);
  } finally {
    _iterator6.f();
  }
  var setFinalObjectProperty = properties => {
    finalObject[properties.information.tag] = properties.parameterValue;
  };
  var _iterator7 = _createForOfIteratorHelper(rules),
    _step7;
  try {
    for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {
      var _rule = _step7.value;
      setFinalObjectProperty(_rule.getPublicProperties());
    }
  } catch (err) {
    _iterator7.e(err);
  } finally {
    _iterator7.f();
  }
  return finalObject;
}
function copyVariantRules(rvs) {
  return rvs.map(rv => {
    var parameterValue = rv.getPublicProperties().parameterValue;
    var parameterArray = parameterValue !== false ? [parameterValue] : [];
    return new rv.constructor(parameterArray);
  });
}
function validateVariantRules(board) {
  var configuration = {
    variantDataRules: board.variantData,
    gameType: board.gameType.type,
    fenTags: board.data.fenOptions.tags
  };
  return _objectSpread(_objectSpread({}, board.variantRules), {}, {
    boardDecorators: board.variantRules.boardDecorators.filter(rv => !rv.isDisabled(configuration)),
    pieceControlDecorators: board.variantRules.pieceControlDecorators.filter(rv => !rv.isDisabled(configuration)),
    fenDataDecorators: board.variantRules.fenDataDecorators.filter(rv => !rv.isDisabled(configuration))
  });
}

/***/ }),

/***/ 19041:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "W": () => (/* binding */ parsePGN4),
  "V": () => (/* binding */ serializeBoard)
});

// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/GameInformation/GameUnits/GameUnits.ts
var GameUnits = __webpack_require__(9960);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/VariantRules/VariantRuleSetup.ts
var VariantRuleSetup = __webpack_require__(32957);
// EXTERNAL MODULE: ./src/main/client/ts/logic/utils/Tags/Moves/ParsePGNMoves.ts
var ParsePGNMoves = __webpack_require__(55771);
;// CONCATENATED MODULE: ./src/main/client/ts/logic/utils/Tags/Moves/SerializePGNMoves.ts
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function serializePGNMoves(moveTree) {
  var resultingString = "";
  var traverse = moves => {
    var _iterator = _createForOfIteratorHelper(moves),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var moveWrapper = _step.value;
        if (moveWrapper.metadata.currentFullMove) {
          resultingString = resultingString.replace(/\s\.\.\s$/, "");
          resultingString += " ".concat(moveWrapper.metadata.currentFullMove, ". ");
        }
        resultingString += moveWrapper.cachedNames.fullMoveNotation;
        if (moveWrapper.comment) resultingString += " {".concat(moveWrapper.comment, "}");
        resultingString += " .. ";
        var _iterator2 = _createForOfIteratorHelper(moveWrapper.alternativeLines),
          _step2;
        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
            var alternativeLine = _step2.value;
            resultingString += "(.. ";
            traverse(alternativeLine);
            resultingString += " )";
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    resultingString = resultingString.replace(/\s\.\.\s$/, "");
  };
  traverse(moveTree.moves);
  return resultingString;
}
// EXTERNAL MODULE: ./src/main/client/ts/logic/utils/Tags/TagLogic/FENDataTag.ts
var FENDataTag = __webpack_require__(80913);
// EXTERNAL MODULE: ./src/main/client/ts/baseTypes.ts
var baseTypes = __webpack_require__(18027);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/GameInformation/GameData.ts
var GameData = __webpack_require__(76758);
// EXTERNAL MODULE: ./src/main/client/ts/utils/NumberUtils.ts
var NumberUtils = __webpack_require__(35948);
// EXTERNAL MODULE: ./src/main/client/ts/logic/utils/Tags/Utils.ts
var Utils = __webpack_require__(37842);
;// CONCATENATED MODULE: ./src/main/client/ts/logic/utils/Tags/TagLogic/GameMetadataTags.ts
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function GameMetadataTags_createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = GameMetadataTags_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || GameMetadataTags_unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function GameMetadataTags_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return GameMetadataTags_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return GameMetadataTags_arrayLikeToArray(o, minLen); }
function GameMetadataTags_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }




var variantTypeTag = "Variant";
var createVariantTypeTag = () => ({
  tag: "variantType",
  currentValue: GameData/* VariantType.FFA */.Jy.FFA,
  verifyTagInParsing(inputTag) {
    return (0,Utils/* tagNamesEqual */.tk)(inputTag, variantTypeTag);
  },
  parseTag(inputTag) {
    var tagContents = (0,Utils/* unwrapTag */.k5)(inputTag, variantTypeTag);
    for (var _i = 0, _Object$values = Object.values(GameData/* VariantType */.Jy); _i < _Object$values.length; _i++) {
      var type = _Object$values[_i];
      if (tagContents === type) return type;
    }
    return GameData/* VariantType.FFA */.Jy.FFA;
  },
  serialize(board) {
    return (0,Utils/* wrapTag */.JY)(variantTypeTag, board.gameType.type);
  }
});
var variantDateTag = "Date";
var createDateTag = () => ({
  tag: "date",
  currentValue: new Date(),
  verifyTagInParsing(inputTag) {
    return (0,Utils/* tagNamesEqual */.tk)(inputTag, variantDateTag);
  },
  parseTag(tagContents) {
    return new Date((0,Utils/* unwrapTag */.k5)(tagContents, variantDateTag));
  },
  serialize(board) {
    if (!board.gameData.date) return;
    if (typeof board.gameData.date === "object") {
      return (0,Utils/* wrapTag */.JY)(variantDateTag, board.gameData.date.toUTCString());
    } else {
      return (0,Utils/* wrapTag */.JY)(variantDateTag, board.gameData.date);
    }
  }
});
var variantSiteTag = "Site";
var createSiteTag = () => ({
  tag: "site",
  currentValue: "",
  verifyTagInParsing(inputTag) {
    return (0,Utils/* tagNamesEqual */.tk)(inputTag, variantSiteTag);
  },
  parseTag(tagContents) {
    return (0,Utils/* unwrapTag */.k5)(tagContents, variantSiteTag);
  },
  serialize(board) {
    if (!board.gameData.site) return;
    return (0,Utils/* wrapTag */.JY)(variantSiteTag, board.gameData.site);
  }
});
var variantTimeControlTag = "TimeControl",
  getDefaultTimeControl = () => ({
    baseTime: 180,
    increment: 2,
    isDelay: false
  });
var createTimeControlTag = () => ({
  tag: "timeControl",
  currentValue: getDefaultTimeControl(),
  verifyTagInParsing(inputTag) {
    return (0,Utils/* tagNamesEqual */.tk)(inputTag, variantTimeControlTag);
  },
  parseTag(inputTag) {
    var _unwrapTag$match;
    var defaultTC = getDefaultTimeControl();
    var matchArray = (_unwrapTag$match = (0,Utils/* unwrapTag */.k5)(inputTag, variantTimeControlTag).match(/^((?:0\.\d\d?)?|(?:\d\d?s?))(?:(?:(?:\+|\|)(\d\d?)(D?))|(\smin))$/)) === null || _unwrapTag$match === void 0 ? void 0 : _unwrapTag$match.slice(1);
    if (matchArray) {
      var _matchArray = _slicedToArray(matchArray, 3),
        minutesMatch = _matchArray[0],
        secondsMatch = _matchArray[1],
        delay = _matchArray[2];
      if (!secondsMatch) return defaultTC;
      defaultTC.isDelay = delay ? true : false;
      if (/\smin/.test(secondsMatch)) {
        defaultTC.increment = 0;
      } else {
        defaultTC.increment = Number(secondsMatch);
      }
      if (minutesMatch.endsWith("s")) {
        defaultTC.baseTime = Math.round(Number(minutesMatch.slice(0, -1)));
      } else {
        defaultTC.baseTime = Number(minutesMatch) * 60;
      }
    }
    return defaultTC;
  },
  serialize(board) {
    var timeControl = board.gameData.timeControl;
    var noIncrement = timeControl.increment === 0;
    var timeControlString = "";
    if (timeControl.baseTime < 60) {
      timeControlString += noIncrement ? "".concat(timeControl.baseTime * 60, " sec") : "".concat(timeControl.baseTime * 60, "s");
    } else if (timeControl.baseTime > 60 && noIncrement) {
      timeControlString += "".concat((0,NumberUtils/* truncateNumber */.O)(timeControl.baseTime / 60, 1), " min");
    } else {
      timeControlString += (0,NumberUtils/* truncateNumber */.O)(timeControl.baseTime / 60, 1);
    }
    if (!noIncrement) {
      timeControlString += "|";
      timeControlString += timeControl.increment;
    }
    if (timeControl.isDelay) {
      timeControlString += "D";
    }
    return (0,Utils/* wrapTag */.JY)(variantTimeControlTag, timeControlString);
  }
});
var variantTerminationTag = "Termination";
var createTerminationTag = () => ({
  tag: "termination",
  currentValue: undefined,
  verifyTagInParsing(inputTag) {
    return (0,Utils/* tagNamesEqual */.tk)(inputTag, variantTerminationTag);
  },
  parseTag(inputTag) {
    var tagContents = (0,Utils/* unwrapTag */.k5)(inputTag, variantTerminationTag);
    return (0,GameData/* validateTerminationString */.wH)(tagContents) ? tagContents : undefined;
  },
  serialize(board) {
    if (!board.gameData.termination) return;
    return (0,Utils/* wrapTag */.JY)(variantTerminationTag, board.gameData.termination);
  }
});
var variantGameId = "GameNr";
var createGameNumberTag = () => ({
  tag: "gameNumber",
  currentValue: undefined,
  verifyTagInParsing(inputTag) {
    return (0,Utils/* tagNamesEqual */.tk)(inputTag, variantGameId);
  },
  parseTag(inputTag) {
    var id = Number((0,Utils/* unwrapTag */.k5)(inputTag, variantGameId));
    return isNaN(id) ? undefined : id;
  },
  serialize(board) {
    if (!board.gameData.gameNumber) return;
    return (0,Utils/* wrapTag */.JY)(variantGameId, board.gameData.gameNumber.toString());
  }
});
var createPlayerDataTag = () => ({
  tag: "playerData",
  currentValue: (0,baseTypes/* createTupleFromCallback */.fi)(() => ({}), GameData/* totalPlayers */.q3),
  verifyTagInParsing(inputTag) {
    var _iterator = GameMetadataTags_createForOfIteratorHelper(GameData/* colors */.O9),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var color = _step.value;
        var playerName = (0,GameData/* getPlayerNameFromColor */.oh)(color);
        if ((0,Utils/* tagNamesEqual */.tk)(inputTag, playerName) || (0,Utils/* tagNamesEqual */.tk)(inputTag, "".concat(playerName, "Elo"))) return true;
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    return false;
  },
  parseTag(inputTag) {
    var _iterator2 = GameMetadataTags_createForOfIteratorHelper(GameData/* colors */.O9),
      _step2;
    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        var color = _step2.value;
        var playerName = (0,GameData/* getPlayerNameFromColor */.oh)(color);
        var newCurrentValue = [...this.currentValue];
        if ((0,Utils/* tagNamesEqual */.tk)(inputTag, playerName)) {
          var name = (0,Utils/* unwrapTag */.k5)(inputTag, playerName);
          if (name) newCurrentValue[color] = _objectSpread(_objectSpread({}, newCurrentValue[color]), {}, {
            name
          });
          return newCurrentValue;
        } else if ((0,Utils/* tagNamesEqual */.tk)(inputTag, "".concat(playerName, "Elo"))) {
          var elo = Number((0,Utils/* unwrapTag */.k5)(inputTag, playerName));
          if (!isNaN(elo)) newCurrentValue[color] = _objectSpread(_objectSpread({}, newCurrentValue[color]), {}, {
            elo
          });
          return newCurrentValue;
        }
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
    throw new Error("Tag does not match any player data signature");
  },
  serialize(board) {
    var uniqueResultingTags = [];
    var _iterator3 = GameMetadataTags_createForOfIteratorHelper(GameData/* colors */.O9),
      _step3;
    try {
      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
        var color = _step3.value;
        var playerData = board.gameData.players[color];
        if (playerData.elo) {
          uniqueResultingTags.push((0,Utils/* wrapTag */.JY)("".concat(GameData/* playerNames */.Q3[color], "Elo"), String(playerData.elo)));
        }
        if (playerData.name) {
          uniqueResultingTags.push((0,Utils/* wrapTag */.JY)("".concat(GameData/* playerNames */.Q3[color]), String(playerData.name)));
        }
      }
    } catch (err) {
      _iterator3.e(err);
    } finally {
      _iterator3.f();
    }
    return uniqueResultingTags.join("\n");
  }
});
var resultsTag = "Results";
var createResultsTag = () => ({
  tag: "results",
  currentValue: "",
  verifyTagInParsing(inputTag) {
    return (0,Utils/* tagNamesEqual */.tk)(inputTag, resultsTag);
  },
  parseTag(tagContents) {
    return (0,Utils/* unwrapTag */.k5)(tagContents, resultsTag);
  },
  serialize(board) {
    if (!board.gameData.result) return;
    return (0,Utils/* wrapTag */.JY)(resultsTag, board.gameData.result);
  }
});
;// CONCATENATED MODULE: ./src/main/client/ts/logic/utils/Tags/TagLogic/VariantRulesTag.ts
function VariantRulesTag_createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = VariantRulesTag_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function VariantRulesTag_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return VariantRulesTag_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return VariantRulesTag_arrayLikeToArray(o, minLen); }
function VariantRulesTag_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }


var variantRulesTag = "RuleVariants";
var createVariantRulesTag = () => ({
  tag: "variantRules",
  currentValue: (0,VariantRuleSetup/* createBaseParsingTypes */.XY)(),
  verifyTagInParsing(inputTag) {
    return (0,Utils/* tagNamesEqual */.tk)(inputTag, variantRulesTag);
  },
  parseTag(tagContents) {
    return (0,VariantRuleSetup/* parseVariantRules */.yS)((0,Utils/* unwrapTag */.k5)(tagContents, variantRulesTag));
  },
  serialize(board) {
    var resultingRuleList = [];
    var _iterator = VariantRulesTag_createForOfIteratorHelper(board.variantRules),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var rule = _step.value;
        var serializedForm = rule.serializeToParsingForm();
        if (serializedForm) {
          resultingRuleList.push(serializedForm);
        }
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    return (0,Utils/* wrapTag */.JY)(variantRulesTag, resultingRuleList.join(" "));
  }
});
;// CONCATENATED MODULE: ./src/main/client/ts/logic/utils/Tags/TagInterface.ts



var createDefaultVariantTags = () => ({
  variantType: createVariantTypeTag(),
  startingPosition: (0,FENDataTag/* createFENDataTag */.w)(),
  variantRules: createVariantRulesTag(),
  date: createDateTag(),
  site: createSiteTag(),
  timeControl: createTimeControlTag(),
  termination: createTerminationTag(),
  gameNumber: createGameNumberTag(),
  playerData: createPlayerDataTag(),
  results: createResultsTag()
});
;// CONCATENATED MODULE: ./src/main/client/ts/logic/utils/Tags/InputOutputProcessing.ts
function InputOutputProcessing_createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = InputOutputProcessing_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function InputOutputProcessing_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return InputOutputProcessing_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return InputOutputProcessing_arrayLikeToArray(o, minLen); }
function InputOutputProcessing_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }





function parsePGN4(pgn4) {
  var pgn4Tags,
    pgn4Moves = "";
  var match = pgn4.match(/(?=1\.\s*?[xA-ZΑ-ωa-n0-9-])/);
  if (match !== null && match !== void 0 && match.index) {
    pgn4Moves = pgn4.substring(match.index);
    pgn4Tags = pgn4.substring(0, match.index).split("]").map(t => t.trim());
  } else {
    pgn4Tags = pgn4.split("]").map(t => t.trim());
  }
  var moves = pgn4Moves.length ? (0,ParsePGNMoves/* parsePGN4Moves */.Q)(pgn4Moves) : [];
  var variantTags = createDefaultVariantTags();
  var wasFEN4set = false;
  var _iterator = InputOutputProcessing_createForOfIteratorHelper(pgn4Tags),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var input = _step.value;
      var variantTag = void 0;
      for (variantTag in variantTags) {
        var tag = variantTags[variantTag];
        if (Object.prototype.hasOwnProperty.call(variantTags, variantTag) && tag.verifyTagInParsing(input)) {
          if (variantTag === "startingPosition") wasFEN4set = true;
          tag.currentValue = tag.parseTag(input);
          break;
        }
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  if (!wasFEN4set) variantTags.startingPosition.currentValue.fenData.fenOptions.setTag("noCorners", true);
  var gameData = {
    site: variantTags.site.currentValue,
    gameNumber: variantTags.gameNumber.currentValue,
    date: variantTags.date.currentValue,
    timeControl: variantTags.timeControl.currentValue,
    players: variantTags.playerData.currentValue,
    termination: variantTags.termination.currentValue,
    result: undefined
  };
  var variantRuleData = (0,VariantRuleSetup/* compileVariantRuleData */.x7)(variantTags.variantRules.currentValue);
  var promotionPieces = Array.isArray(variantRuleData.promotionPieces) ? variantRuleData.promotionPieces : [];
  var nonPlayablePieceValues = Object.values(GameUnits/* nonPlayablePieces */.KR);
  return {
    gameData,
    gameType: variantTags.variantType.currentValue,
    variantRules: variantTags.variantRules.currentValue,
    variantRuleData,
    board: variantTags.startingPosition.currentValue.board,
    fenData: variantTags.startingPosition.currentValue.fenData,
    pieceSet: new Set([...variantTags.startingPosition.currentValue.pieceSet, ...promotionPieces].filter(e => !nonPlayablePieceValues.includes(e))),
    moves
  };
}
var defaultTags = createDefaultVariantTags();
function serializeBoard(board) {
  return {
    board: Object.values(defaultTags).map(t => t.serialize(board)).filter(v => v !== undefined).join("\n"),
    moves: serializePGNMoves(board.moves)
  };
}

/***/ }),

/***/ 55771:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Q": () => (/* binding */ parsePGN4Moves),
/* harmony export */   "T": () => (/* binding */ PGN4_SYNTAX)
/* harmony export */ });
/* harmony import */ var _client_ts_baseTypes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(18027);
/* harmony import */ var _moveGeneration_GameInformation_GameUnits_GameUnits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9960);
/* harmony import */ var _moveGeneration_GameInformation_GameUnits_PieceString__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20915);
/* harmony import */ var _moveGeneration_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(37017);
/* harmony import */ var _moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(16703);
/* harmony import */ var _Utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(37842);
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }






var PGN4_SYNTAX = {
  SPLIT: ".",
  PIECE_REGEX: /[xA-ZΑ-ωa-nrbyg0-9-=+#@]/,
  PIECE_REGEX_SIMPLIFIED: /[A-ZΑ-ωa-n0-9-]/,
  MOVE_CAPTURING_REGEX: /^[A-ZΑ-ω]?([a-n]\d{1,2})(?:-|x[A-ZΑ-ω]?)[A-ZΑ-ω]?([a-n]\d{1,2})/,
  DUCK_MOVE_CAPTURING_REGEX: /Θ([a-n]\d{1,2})?-([a-n]\d{1,2})/,
  DROPPING_MOVE_CAPTURING_REGEX: /Θ?@([a-z])([A-ZΑ-ω])-([a-n]\d{1,2})/,
  BRACKETS: {
    COMMENT_START: "{",
    COMMENT_END: "}",
    VARIATION_START: "(",
    VARIATION_END: ")"
  },
  COORDINATE_REGEX: /[a-n](?:(?:1[0-4])|(?:[1-9]))/,
  COMMENT_SYNTAXES: {
    CLOCK: /\[%timestamp (-?\d+?)]/,
    ARROWS: /\[%cal ((?:R|B|Y|G).+?)]/,
    SQUARES: /\[%csl ((?:R|B|Y|G).+?)]/,
    ANNOTATION: /\[%ann (.+?)]/
  }
};
function obtainDuckMove(move) {
  var match = move.match(PGN4_SYNTAX.DUCK_MOVE_CAPTURING_REGEX);
  if (match) {
    if (match[1]) {
      var startCoordinates = (0,_Utils__WEBPACK_IMPORTED_MODULE_4__/* .parseSingleCoordinate */ ._q)(match[1]);
      var endCoordinates = (0,_Utils__WEBPACK_IMPORTED_MODULE_4__/* .parseSingleCoordinate */ ._q)(match[2]);
      if (!startCoordinates || !endCoordinates) return;
      return {
        startCoordinates,
        endCoordinates
      };
    } else {
      var _endCoordinates = (0,_Utils__WEBPACK_IMPORTED_MODULE_4__/* .parseSingleCoordinate */ ._q)(match[2]);
      if (!_endCoordinates) return;
      return {
        piece: _moveGeneration_GameInformation_GameUnits_PieceString__WEBPACK_IMPORTED_MODULE_1__/* .duckPieceString */ .St,
        endCoordinates: _endCoordinates
      };
    }
  } else return;
}
function obtainInternalType(type) {
  var internalMove;
  for (internalMove in _moveGeneration_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_2__/* .InternalMoveSignature */ .Fi) {
    if (Object.prototype.hasOwnProperty.call(_moveGeneration_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_2__/* .InternalMoveSignature */ .Fi, internalMove)) {
      if (_moveGeneration_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_2__/* .InternalMoveSignature */ .Fi[internalMove] === type) return {
        type: _moveGeneration_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_2__/* .InternalMoveSignature */ .Fi[internalMove]
      };
    }
  }
}
function obtainDroppingMove(move) {
  var match = move.match(PGN4_SYNTAX.DROPPING_MOVE_CAPTURING_REGEX);
  if (match) {
    var _match = _slicedToArray(match, 4),
      color = _match[1],
      piece = _match[2],
      coordinate = _match[3];
    if (!(0,_moveGeneration_GameInformation_GameUnits_GameUnits__WEBPACK_IMPORTED_MODULE_0__/* .verifyColorEnumValue */ .OT)(color) || !(0,_moveGeneration_PieceControl_PieceControlInterface__WEBPACK_IMPORTED_MODULE_3__/* .verifyPieceLetter */ .IM)(piece)) return;
    var endCoordinates = (0,_Utils__WEBPACK_IMPORTED_MODULE_4__/* .parseSingleCoordinate */ ._q)(coordinate);
    if (!endCoordinates) return;
    return {
      piece: (0,_moveGeneration_GameInformation_GameUnits_PieceString__WEBPACK_IMPORTED_MODULE_1__/* .createPieceFromData */ .HC)(_moveGeneration_GameInformation_GameUnits_GameUnits__WEBPACK_IMPORTED_MODULE_0__/* .colorEnum */ .JF[color], piece),
      endCoordinates
    };
  } else return;
}
function obtainStandardMove(move) {
  var moveData = {
    startCoordinates: [-1, -1],
    endCoordinates: [-1, -1]
  };
  var promotionMatch = move.match(/.*?=([A-Zx])/);
  if (promotionMatch !== null && promotionMatch !== void 0 && promotionMatch[1]) {
    moveData.promotion = [(0,_moveGeneration_GameInformation_GameUnits_PieceString__WEBPACK_IMPORTED_MODULE_1__/* .createPieceFromData */ .HC)(_moveGeneration_GameInformation_GameUnits_PieceString__WEBPACK_IMPORTED_MODULE_1__/* .deadColorIndex */ .Ir, promotionMatch[1].charAt(0))];
  }
  var moveCoordinates = move.match(PGN4_SYNTAX.MOVE_CAPTURING_REGEX);
  if (moveCoordinates) {
    var startCoordinate = (0,_Utils__WEBPACK_IMPORTED_MODULE_4__/* .parseSingleCoordinate */ ._q)(moveCoordinates[1]);
    var endCoordinate = (0,_Utils__WEBPACK_IMPORTED_MODULE_4__/* .parseSingleCoordinate */ ._q)(moveCoordinates[2]);
    (0,_client_ts_baseTypes__WEBPACK_IMPORTED_MODULE_5__/* .assertNonUndefined */ .lM)(startCoordinate);
    (0,_client_ts_baseTypes__WEBPACK_IMPORTED_MODULE_5__/* .assertNonUndefined */ .lM)(endCoordinate);
    moveData.startCoordinates = startCoordinate;
    moveData.endCoordinates = endCoordinate;
    return moveData;
  } else {
    if (/O-O-O.*/.test(move)) {
      return _objectSpread(_objectSpread({}, moveData), {}, {
        specialType: _moveGeneration_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_2__/* .SpecialMove.CastlingQueenside */ .uj.CastlingQueenside
      });
    } else if (/O-O.*/.test(move)) {
      return _objectSpread(_objectSpread({}, moveData), {}, {
        specialType: _moveGeneration_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_2__/* .SpecialMove.CastlingKingside */ .uj.CastlingKingside
      });
    }
  }
}
function cloneMoveData(move) {
  if (!(0,_moveGeneration_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_2__/* .verifyInternalMove */ .LR)(move)) {
    if ("startCoordinates" in move) {
      var newMove = {
        startCoordinates: [...move.startCoordinates],
        endCoordinates: [...move.endCoordinates]
      };
      if ("specialType" in move) {
        newMove.specialType = move.specialType;
      }
      if ("promotion" in move) {
        newMove.promotion = move.promotion;
      }
      return newMove;
    } else {
      return {
        endCoordinates: move.endCoordinates,
        piece: move.piece
      };
    }
  } else {
    return {
      type: move.type
    };
  }
}
var parsePGN4Moves = moves => {
  var parseMoves = (selectedMove, path) => {
    var moveList = [];
    var currentPath = path;
    function getMoveIndexes(mI) {
      while (selectedMove[mI] && PGN4_SYNTAX.PIECE_REGEX.test(selectedMove[mI])) mI++;
      return mI;
    }
    function parseComment(mI) {
      while (selectedMove[mI] && selectedMove[mI] !== PGN4_SYNTAX.BRACKETS.COMMENT_END) mI++;
      return mI;
    }
    function getEnumeratorIndex(mI) {
      while (selectedMove[mI] && /\d|\./.test(selectedMove[mI])) mI++;
      return --mI;
    }
    function findBracketIndex(i) {
      var depth = 0;
      for (; i < selectedMove.length; i++) {
        switch (selectedMove[i]) {
          case PGN4_SYNTAX.BRACKETS.COMMENT_START:
            i = parseComment(i);
            break;
          case PGN4_SYNTAX.BRACKETS.VARIATION_START:
            depth++;
            break;
          case PGN4_SYNTAX.BRACKETS.VARIATION_END:
            if (--depth === 0) {
              return i;
            }
            break;
        }
      }
      throw new TypeError("No matching parentheses for input " + selectedMove);
    }
    function processMoveDataInsertion() {
      if (currentMoveData) {
        var _currentMove$comment, _currentMove$comment3, _currentMove$comment5, _currentMove$comment7;
        currentPath.push(++increment);
        currentMove.path = currentPath.slice();
        currentPath.pop();
        currentMove.moveData = currentMoveData.map(m => cloneMoveData(m));
        currentMove.metadata = (0,_moveGeneration_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_2__/* .createDummyMoveMetadata */ .SK)();
        var clockSyntax = (_currentMove$comment = currentMove.comment) === null || _currentMove$comment === void 0 ? void 0 : _currentMove$comment.match(PGN4_SYNTAX.COMMENT_SYNTAXES.CLOCK);
        if (clockSyntax && !isNaN(Number(clockSyntax[1]))) {
          var _currentMove$comment2;
          currentMove.comment = (_currentMove$comment2 = currentMove.comment) === null || _currentMove$comment2 === void 0 ? void 0 : _currentMove$comment2.replace(PGN4_SYNTAX.COMMENT_SYNTAXES.CLOCK, "");
          currentMove.metadata.playerClock = Number(clockSyntax[1]);
        }
        var arrowSyntax = (_currentMove$comment3 = currentMove.comment) === null || _currentMove$comment3 === void 0 ? void 0 : _currentMove$comment3.match(PGN4_SYNTAX.COMMENT_SYNTAXES.ARROWS);
        if (arrowSyntax) {
          var _currentMove$comment4;
          var arrows = arrowSyntax[1].split(",");
          var _iterator = _createForOfIteratorHelper(arrows),
            _step;
          try {
            for (_iterator.s(); !(_step = _iterator.n()).done;) {
              var arrow = _step.value;
              var _ref = [arrow[0], arrow.slice(1)],
                color = _ref[0],
                coordinate = _ref[1];
              var numericColor = color.toLowerCase(),
                arrowCoordinates = (0,_Utils__WEBPACK_IMPORTED_MODULE_4__/* .parseEnPassantCoordinates */ .Lx)(coordinate);
              if (!(0,_moveGeneration_GameInformation_GameUnits_GameUnits__WEBPACK_IMPORTED_MODULE_0__/* .verifyColorEnumValue */ .OT)(numericColor) || !arrowCoordinates) continue;
              currentMove.metadata.highlightedArrows.push([_moveGeneration_GameInformation_GameUnits_GameUnits__WEBPACK_IMPORTED_MODULE_0__/* .colorEnum */ .JF[numericColor], ...arrowCoordinates]);
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }
          currentMove.comment = (_currentMove$comment4 = currentMove.comment) === null || _currentMove$comment4 === void 0 ? void 0 : _currentMove$comment4.replace(PGN4_SYNTAX.COMMENT_SYNTAXES.ARROWS, "");
        }
        var squareSyntax = (_currentMove$comment5 = currentMove.comment) === null || _currentMove$comment5 === void 0 ? void 0 : _currentMove$comment5.match(PGN4_SYNTAX.COMMENT_SYNTAXES.SQUARES);
        if (squareSyntax) {
          var _currentMove$comment6;
          var squares = squareSyntax[1].split(",");
          var _iterator2 = _createForOfIteratorHelper(squares),
            _step2;
          try {
            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
              var square = _step2.value;
              var _ref2 = [square[0], square.slice(1)],
                _color = _ref2[0],
                inputCoordinate = _ref2[1];
              var _numericColor = _color.toLowerCase(),
                _coordinate = (0,_Utils__WEBPACK_IMPORTED_MODULE_4__/* .parseSingleCoordinate */ ._q)(inputCoordinate);
              if (!(0,_moveGeneration_GameInformation_GameUnits_GameUnits__WEBPACK_IMPORTED_MODULE_0__/* .verifyColorEnumValue */ .OT)(_numericColor) || !_coordinate) continue;
              currentMove.metadata.highlightedSquares.push([_moveGeneration_GameInformation_GameUnits_GameUnits__WEBPACK_IMPORTED_MODULE_0__/* .colorEnum */ .JF[_numericColor], _coordinate]);
            }
          } catch (err) {
            _iterator2.e(err);
          } finally {
            _iterator2.f();
          }
          currentMove.comment = (_currentMove$comment6 = currentMove.comment) === null || _currentMove$comment6 === void 0 ? void 0 : _currentMove$comment6.replace(PGN4_SYNTAX.COMMENT_SYNTAXES.SQUARES, "");
        }
        var annotationMatch = (_currentMove$comment7 = currentMove.comment) === null || _currentMove$comment7 === void 0 ? void 0 : _currentMove$comment7.match(PGN4_SYNTAX.COMMENT_SYNTAXES.ANNOTATION);
        if (annotationMatch) {
          var _currentMove$comment8;
          currentMove.metadata.annotation = annotationMatch[1];
          currentMove.comment = (_currentMove$comment8 = currentMove.comment) === null || _currentMove$comment8 === void 0 ? void 0 : _currentMove$comment8.replace(PGN4_SYNTAX.COMMENT_SYNTAXES.ANNOTATION, "");
        }
        if ((0,_moveGeneration_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_2__/* .verifyMoveWrapperProperties */ .Qc)(currentMove)) {
          moveList.push(Object.assign({}, currentMove));
        } else {
          console.error("Not all properties of move wrapper are filled out: ".concat(JSON.stringify(currentMove)));
        }
        currentMove = {
          alternativeLines: [],
          comment: ""
        };
        currentMoveData = undefined;
      }
    }
    function obtainMoveFromInfo(info) {
      var currentMove = [];
      var internalType = obtainInternalType(info[0]);
      if (info.length === 1 && internalType !== undefined) {
        return [internalType];
      }
      var standardMove = obtainStandardMove(info);
      if (standardMove) currentMove.push(standardMove);
      var droppingMove = obtainDroppingMove(info);
      if (droppingMove) currentMove.push(droppingMove);
      var duckMove = obtainDuckMove(info);
      if (duckMove) currentMove.push(duckMove);
      if ((0,_moveGeneration_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_2__/* .verifyRequiredMove */ .nc)(currentMove)) {
        return currentMove;
      } else throw new Error("Move length is 0 for string ".concat(info));
    }
    var currentMoveData;
    var currentMove = {
      alternativeLines: [],
      comment: ""
    };
    var increment = -1,
      variationIncrement = -1;
    try {
      for (var i = 0; i < selectedMove.length; i++) {
        var isNumNaN = isNaN(Number(selectedMove[i]));
        if (isNumNaN && !/\s/.test(selectedMove[i]) && selectedMove[i] !== PGN4_SYNTAX.SPLIT) {
          if (PGN4_SYNTAX.PIECE_REGEX_SIMPLIFIED.test(selectedMove[i])) {
            var index = getMoveIndexes(i);
            currentMoveData = obtainMoveFromInfo(selectedMove.substring(i, index));
            i = index;
          } else if (moves[i] === PGN4_SYNTAX.BRACKETS.COMMENT_START) {
            var _index = parseComment(i);
            currentMove.comment = moves.substring(i + 1, _index);
            i = _index;
          } else if (moves[i] === PGN4_SYNTAX.BRACKETS.VARIATION_START) {
            var _currentMove$alternat;
            var _index2 = findBracketIndex(i);
            currentPath.push(increment + 1, ++variationIncrement);
            (_currentMove$alternat = currentMove.alternativeLines) === null || _currentMove$alternat === void 0 ? void 0 : _currentMove$alternat.push([...parseMoves(moves.substring(i + 1, _index2), currentPath.slice())]);
            i = _index2;
          }
        } else if (selectedMove[i] === PGN4_SYNTAX.SPLIT && moves[i + 1] && moves[i + 1] === PGN4_SYNTAX.SPLIT || moves[i].trim() && !isNumNaN && moves[i + 1] && (moves[i + 1] === PGN4_SYNTAX.SPLIT || !isNaN(Number(moves[i + 1])))) {
          if (!isNumNaN) i = getEnumeratorIndex(i);
          if (currentMoveData) {
            processMoveDataInsertion();
          }
        }
      }
    } finally {
      processMoveDataInsertion();
      currentPath.push(increment + 1);
      currentMove.path = currentPath.slice();
      if ((0,_moveGeneration_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_2__/* .verifyMoveWrapperProperties */ .Qc)(currentMove)) {
        moveList.push(Object.assign({}, currentMove));
      }
    }
    return moveList;
  };
  return parseMoves(moves, []);
};

/***/ }),

/***/ 80913:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "u": () => (/* binding */ checkDimensionIntersection),
/* harmony export */   "w": () => (/* binding */ createFENDataTag)
/* harmony export */ });
/* harmony import */ var _client_ts_baseTypes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(18027);
/* harmony import */ var _client_ts_logic_BaseInterfaces__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(34355);
/* harmony import */ var _moveGeneration_FENData_FENData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(26814);
/* harmony import */ var _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(76758);
/* harmony import */ var _moveGeneration_GameInformation_GameUnits_GameUnits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(9960);
/* harmony import */ var _moveGeneration_GameInformation_GameUnits_PieceString__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(20915);
/* harmony import */ var _Utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(37842);
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }







function checkDimensionIntersection(dimension, _ref) {
  var _ref2 = _slicedToArray(_ref, 2),
    i = _ref2[0],
    j = _ref2[1];
  var dimensionI = (_moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .boardDimension */ .iJ - dimension[0]) / 2,
    dimensionJ = (_moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .boardDimension */ .iJ - dimension[1]) / 2;
  return i < dimensionI || i >= dimensionI + dimension[0] || j < dimensionJ || j >= dimensionJ + dimension[1];
}
function serializeFENOptions(fenOptions) {
  var resultingStrings = [];
  var key;
  for (key in fenOptions.tags) {
    if (!Object.prototype.hasOwnProperty.call(fenOptions.tags, key)) continue;
    var serializedForm = fenOptions.tags[key].serialize();
    if (serializedForm) resultingStrings.push(serializedForm);
  }
  return "{".concat(resultingStrings.join(","), "}");
}
function modifyFourBooleanParameter(part, fenDataArrayRef) {
  var booleans = part.split(",").map(e => Boolean(Number(e)));
  if ((0,_client_ts_baseTypes__WEBPACK_IMPORTED_MODULE_5__/* .verifyTupleType */ .CG)(booleans, _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .totalPlayers */ .q3)) {
    fenDataArrayRef.forEach((_, i, arr) => arr[i] = booleans[i]);
  } else {
    console.error("Incorrect amount of arguments for the boolean parameter length in FENData: " + part);
    console.trace("Expected ".concat(_moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .totalPlayers */ .q3, " arguments, but got ").concat(booleans.length));
  }
}
var predefinedFENpositions = {
  "4PC": "R-0,0,0,0-1,1,1,1-1,1,1,1-0,0,0,0-0-x,x,x,yR,yN,yB,yK,yQ,yB,yN,yR,x,x,x/x,x,x,yP,yP,yP,yP,yP,yP,yP,yP,x,x,x/x,x,x,8,x,x,x/bR,bP,10,gP,gR/bN,bP,10,gP,gN/bB,bP,10,gP,gB/bQ,bP,10,gP,gK/bK,bP,10,gP,gQ/bB,bP,10,gP,gB/bN,bP,10,gP,gN/bR,bP,10,gP,gR/x,x,x,8,x,x,x/x,x,x,rP,rP,rP,rP,rP,rP,rP,rP,x,x,x/x,x,x,rR,rN,rB,rQ,rK,rB,rN,rR,x,x,x",
  "4PCo": "R-0,0,0,0-1,1,1,1-1,1,1,1-0,0,0,0-0-x,x,x,yR,yN,yB,yK,yQ,yB,yN,yR,x,x,x/x,x,x,yP,yP,yP,yP,yP,yP,yP,yP,x,x,x/x,x,x,8,x,x,x/bR,bP,10,gP,gR/bN,bP,10,gP,gN/bB,bP,10,gP,gB/bK,bP,10,gP,gQ/bQ,bP,10,gP,gK/bB,bP,10,gP,gB/bN,bP,10,gP,gN/bR,bP,10,gP,gR/x,x,x,8,x,x,x/x,x,x,rP,rP,rP,rP,rP,rP,rP,rP,x,x,x/x,x,x,rR,rN,rB,rQ,rK,rB,rN,rR,x,x,x",
  "4PCb": "R-0,0,0,0-1,1,1,1-1,1,1,1-0,0,0,0-0-x,x,x,yR,yN,yB,yQ,yK,yB,yN,yR,x,x,x/x,x,x,yP,yP,yP,yP,yP,yP,yP,yP,x,x,x/x,x,x,8,x,x,x/bR,bP,10,gP,gR/bN,bP,10,gP,gN/bB,bP,10,gP,gB/bQ,bP,10,gP,gQ/bK,bP,10,gP,gK/bB,bP,10,gP,gB/bN,bP,10,gP,gN/bR,bP,10,gP,gR/x,x,x,8,x,x,x/x,x,x,rP,rP,rP,rP,rP,rP,rP,rP,x,x,x/x,x,x,rR,rN,rB,rQ,rK,rB,rN,rR,x,x,x",
  "4PCn": "R-0,0,0,0-1,1,1,1-1,1,1,1-0,0,0,0-0-x,x,x,yR,yN,yB,yQ,yK,yB,yN,yR,x,x,x/x,x,x,yP,yP,yP,yP,yP,yP,yP,yP,x,x,x/x,x,x,8,x,x,x/bR,bP,10,gP,gR/bN,bP,10,gP,gN/bB,bP,10,gP,gB/bQ,bP,10,gP,gK/bK,bP,10,gP,gQ/bB,bP,10,gP,gB/bN,bP,10,gP,gN/bR,bP,10,gP,gR/x,x,x,8,x,x,x/x,x,x,rP,rP,rP,rP,rP,rP,rP,rP,x,x,x/x,x,x,rR,rN,rB,rQ,rK,rB,rN,rR,x,x,x",
  "2PC": "R-0,1,0,1-1,1,1,1-1,1,1,1-0,0,0,0-0-{'pawnBaseRank':5,'wb':true,'dim':'8x8'}-x,x,x,x,x,x,x,x,x,x,x,x,x,x/x,x,x,x,x,x,x,x,x,x,x,x,x,x/x,x,x,x,x,x,x,x,x,x,x,x,x,x/x,x,x,yR,yN,yB,yQ,yK,yB,yN,yR,x,x,x/x,x,x,yP,yP,yP,yP,yP,yP,yP,yP,x,x,x/x,x,x,8,x,x,x/x,x,x,8,x,x,x/x,x,x,8,x,x,x/x,x,x,8,x,x,x/x,x,x,rP,rP,rP,rP,rP,rP,rP,rP,x,x,x/x,x,x,rR,rN,rB,rQ,rK,rB,rN,rR,x,x,x/x,x,x,x,x,x,x,x,x,x,x,x,x,x/x,x,x,x,x,x,x,x,x,x,x,x,x,x/x,x,x,x,x,x,x,x,x,x,x,x,x,x"
};
var verifyPredefinedFENPosition = fenShorthand => fenShorthand in predefinedFENpositions;
var fenDataTag = "StartFen4";
var createFENDataTag = () => ({
  tag: "startingPosition",
  currentValue: {
    board: (0,_client_ts_logic_BaseInterfaces__WEBPACK_IMPORTED_MODULE_0__/* .initializeBoardSquares */ .BD)(() => _moveGeneration_GameInformation_GameUnits_PieceString__WEBPACK_IMPORTED_MODULE_4__/* .emptyPieceString */ .v2),
    fenData: new _moveGeneration_FENData_FENData__WEBPACK_IMPORTED_MODULE_1__/* .FENData */ .c(),
    pieceSet: new Set()
  },
  verifyTagInParsing(inputTag) {
    return (0,_Utils__WEBPACK_IMPORTED_MODULE_6__/* .tagNamesEqual */ .tk)(inputTag, fenDataTag);
  },
  parseTag(inputTag) {
    var tagContents = (0,_Utils__WEBPACK_IMPORTED_MODULE_6__/* .unwrapTag */ .k5)(inputTag, fenDataTag);
    var fenDataString = verifyPredefinedFENPosition(tagContents) ? predefinedFENpositions[tagContents] : tagContents;
    var fenData = new _moveGeneration_FENData_FENData__WEBPACK_IMPORTED_MODULE_1__/* .FENData */ .c();
    var board = (0,_client_ts_logic_BaseInterfaces__WEBPACK_IMPORTED_MODULE_0__/* .initializeBoardSquares */ .BD)(() => _moveGeneration_GameInformation_GameUnits_PieceString__WEBPACK_IMPORTED_MODULE_4__/* .emptyPieceString */ .v2);
    var pieceSet = new Set();
    var transparentWall = (0,_moveGeneration_GameInformation_GameUnits_PieceString__WEBPACK_IMPORTED_MODULE_4__/* .createPieceFromString */ .m9)("x");
    var parts = fenDataString.split("-");
    if (parts.length < 7 || parts[parts.length - 1].split("/").length !== _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .boardDimension */ .iJ) {
      console.warn("FEN has less than 7 parts: " + fenDataString);
    } else {
      var sideToMove = parts[0].charAt(0).toLowerCase();
      if ((0,_moveGeneration_GameInformation_GameUnits_GameUnits__WEBPACK_IMPORTED_MODULE_3__/* .verifyColorEnumValue */ .OT)(sideToMove)) {
        fenData.sideToMove = _moveGeneration_GameInformation_GameUnits_GameUnits__WEBPACK_IMPORTED_MODULE_3__/* .colorEnum */ .JF[sideToMove];
      } else {
        console.warn("FEN option 1: side to move is not an alphabetic color: " + sideToMove);
      }
      modifyFourBooleanParameter(parts[1], fenData.fenOptions.tag("dead"));
      modifyFourBooleanParameter(parts[2], fenData.fenOptions.tag("castleKingside"));
      modifyFourBooleanParameter(parts[3], fenData.fenOptions.tag("castleQueenside"));
      var points = parts[4].split(",").map(e => Number(e));
      if ((0,_client_ts_baseTypes__WEBPACK_IMPORTED_MODULE_5__/* .verifyTupleType */ .CG)(points, _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .totalPlayers */ .q3)) {
        fenData.points = points;
      } else {
        console.warn("FEN option 5: points is of incorrect length: ".concat(points.join(",")));
      }
      fenData.plyCount = Number(parts[5]);
      var royals = (0,_client_ts_baseTypes__WEBPACK_IMPORTED_MODULE_5__/* .createTuple */ .VS)(null, _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .totalPlayers */ .q3);
      var verifyKeyInTags = key => key in fenData.fenOptions.tags;
      if (parts[6].startsWith("{")) {
        var initialParsing = JSON.parse(parts[6].replaceAll("(", "[").replaceAll(")", "]").replaceAll("'", '"'));
        if (typeof initialParsing !== "object" || initialParsing === null) throw new Error("Unexpected object definition syntax for " + String(initialParsing));
        for (var _i2 = 0, _Object$entries = Object.entries(initialParsing); _i2 < _Object$entries.length; _i2++) {
          var _Object$entries$_i = _slicedToArray(_Object$entries[_i2], 2),
            key = _Object$entries$_i[0],
            value = _Object$entries$_i[1];
          if (!verifyKeyInTags(key)) continue;
          var tag = fenData.fenOptions.tags[key];
          tag.value = tag.parse(value);
        }
      }
      var position = parts[parts.length - 1].split("/"),
        dimension = fenData.fenOptions.tag("dim");
      position.forEach((line, i) => {
        var j = 0;
        var _iterator = _createForOfIteratorHelper(line.split(",")),
          _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var pieceStr = _step.value;
            if (pieceStr.endsWith('"')) pieceStr = pieceStr.slice(0, -1);
            if (isNaN(Number(pieceStr))) {
              try {
                if (!checkDimensionIntersection(dimension, [i, j])) {
                  var pieceString = (0,_moveGeneration_GameInformation_GameUnits_PieceString__WEBPACK_IMPORTED_MODULE_4__/* .createPieceFromString */ .m9)(pieceStr);
                  board[i][j] = pieceString;
                  if (pieceString.isPiece()) {
                    if (pieceString.piece === "K" && !royals[pieceString.color]) {
                      royals[pieceString.color] = [i, j];
                    }
                    pieceSet.add(pieceString.piece);
                  }
                }
              } finally {
                j++;
              }
            } else j += Number(pieceStr);
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      });
      var _iterator2 = _createForOfIteratorHelper(_moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .colors */ .O9),
        _step2;
      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var color = _step2.value;
          var _iterator3 = _createForOfIteratorHelper(fenData.fenOptions.tag("bank")[color]),
            _step3;
          try {
            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
              var _step3$value = _slicedToArray(_step3.value, 1),
                piece = _step3$value[0];
              if (piece.piece in _moveGeneration_GameInformation_GameUnits_GameUnits__WEBPACK_IMPORTED_MODULE_3__/* .nonPlayablePieces */ .KR) continue;
              pieceSet.add(piece.piece);
            }
          } catch (err) {
            _iterator3.e(err);
          } finally {
            _iterator3.f();
          }
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
      fenData.fenOptions.setTag("royal", royals);
      for (var i = 0; i < _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .boardDimension */ .iJ; i++) {
        for (var j = 0; j < _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .boardDimension */ .iJ; j++) {
          if (checkDimensionIntersection(dimension, [i, j])) board[i][j] = transparentWall;
        }
      }
    }
    if (!fenData.fenOptions.tag("noCorners")) {
      var cornerAreaSize = 3,
        arrayDimension = _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_2__/* .boardDimension */ .iJ - 1;
      baseLoop: for (var _i3 = 0; _i3 < cornerAreaSize; _i3++) {
        for (var _j = 0; _j < cornerAreaSize; _j++) {
          var squares = [[_i3, _j], [arrayDimension - _i3, _j], [_i3, arrayDimension - _j], [arrayDimension - _i3, arrayDimension - _j]];
          for (var _i4 = 0, _squares = squares; _i4 < _squares.length; _i4++) {
            var square = _squares[_i4];
            var pieceString = board[square[0]][square[1]];
            if (!pieceString.isWall() || pieceString.piece !== transparentWall.piece) {
              fenData.fenOptions.setTag("noCorners", true);
              break baseLoop;
            }
          }
        }
      }
    }
    return {
      fenData,
      board,
      pieceSet
    };
  },
  serialize(baseBoard) {
    var board = baseBoard.board,
      data = baseBoard.data;
    var resultingString = "";
    resultingString += "".concat(_moveGeneration_GameInformation_GameUnits_GameUnits__WEBPACK_IMPORTED_MODULE_3__/* .stringColorEnum */ .Od[data.sideToMove].toUpperCase(), "-");
    resultingString += "".concat(data.fenOptions.tag("dead").map(d => Number(d)).join(","), "-");
    resultingString += "".concat(data.fenOptions.tag("castleKingside").map(d => Number(d)).join(","), "-");
    resultingString += "".concat(data.fenOptions.tag("castleQueenside").map(d => Number(d)).join(","), "-");
    resultingString += "".concat(data.points.join(","), "-");
    resultingString += "".concat(data.plyCount, "-");
    resultingString += "".concat(serializeFENOptions(data.fenOptions), "-");
    var currentEmptySquares = 0;
    var _iterator4 = _createForOfIteratorHelper(board),
      _step4;
    try {
      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
        var row = _step4.value;
        var _iterator5 = _createForOfIteratorHelper(row),
          _step5;
        try {
          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
            var pieceString = _step5.value;
            if (pieceString.isEmpty()) {
              currentEmptySquares++;
              continue;
            }
            if (currentEmptySquares !== 0) {
              resultingString += "".concat(currentEmptySquares, ",");
              currentEmptySquares = 0;
            }
            resultingString += "".concat(pieceString.value, ",");
          }
        } catch (err) {
          _iterator5.e(err);
        } finally {
          _iterator5.f();
        }
        if (currentEmptySquares !== 0) {
          resultingString += "".concat(currentEmptySquares, "/");
          currentEmptySquares = 0;
        } else {
          resultingString = resultingString.slice(0, -1);
          resultingString += "/";
        }
      }
    } catch (err) {
      _iterator4.e(err);
    } finally {
      _iterator4.f();
    }
    resultingString = resultingString.slice(0, -1);
    return (0,_Utils__WEBPACK_IMPORTED_MODULE_6__/* .wrapTag */ .JY)(fenDataTag, resultingString);
  }
});

/***/ }),

/***/ 37842:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "JY": () => (/* binding */ wrapTag),
/* harmony export */   "Lx": () => (/* binding */ parseEnPassantCoordinates),
/* harmony export */   "_q": () => (/* binding */ parseSingleCoordinate),
/* harmony export */   "k5": () => (/* binding */ unwrapTag),
/* harmony export */   "tk": () => (/* binding */ tagNamesEqual)
/* harmony export */ });
function parseSingleCoordinate(coordinate) {
  if (coordinate.length === 0) return;
  var parsedCoordinate = [14 - Number(coordinate.slice(1)), coordinate.charCodeAt(0) - 97];
  if (Number.isNaN(parsedCoordinate[0]) || Number.isNaN(parsedCoordinate[1])) return;
  if (parsedCoordinate[0] < 0 || parsedCoordinate[0] > 13 || parsedCoordinate[1] < 0 || parsedCoordinate[1] > 13) return;
  return parsedCoordinate;
}
function parseEnPassantCoordinates(coordinates) {
  if (coordinates.length === 0) return;
  var coordinatesArray = coordinates.split(":");
  return [[14 - Number(coordinatesArray[0].slice(1)), coordinatesArray[0].charCodeAt(0) - 97], [14 - Number(coordinatesArray[1].slice(1)), coordinatesArray[1].charCodeAt(0) - 97]];
}
var wrapTag = (baseTag, content) => "[".concat(baseTag, " \"").concat(content, "\"]");
var tagNamesEqual = (baseTag, definedTag) => baseTag.toLowerCase().startsWith("[".concat(definedTag.toLowerCase(), " \""));
var unwrapTag = (baseTag, definedTag) => baseTag.replace("[".concat(definedTag, " \""), "").slice(0, -1);

/***/ }),

/***/ 23742:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DL": () => (/* binding */ selectVariantData),
/* harmony export */   "Ex": () => (/* binding */ selectMoveTree),
/* harmony export */   "SZ": () => (/* binding */ selectBoardSquares),
/* harmony export */   "X9": () => (/* binding */ selectSerializedStrings),
/* harmony export */   "dp": () => (/* binding */ selectFENSettings),
/* harmony export */   "st": () => (/* binding */ selectCurrentMove)
/* harmony export */ });
/* unused harmony export selectVariantType */
/* harmony import */ var _logic_index_GameBoardSlice__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(28150);
/* harmony import */ var _SidebarEditor_SidebarEditorSlice__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(72241);


var selectVariantType = parameters => parameters.stateController === "gameBoards" ? selectGameBoardType(parameters.state, parameters.id) : selectEditorVariantType(parameters.state, parameters.id);
var selectVariantData = parameters => parameters.stateController === "gameBoards" ? (0,_logic_index_GameBoardSlice__WEBPACK_IMPORTED_MODULE_0__/* .selectGameBoardVariantData */ .C0)(parameters.state, parameters.id) : (0,_SidebarEditor_SidebarEditorSlice__WEBPACK_IMPORTED_MODULE_1__/* .selectEditorVariantDataRules */ .UD)(parameters.state, parameters.id);
var selectFENSettings = parameters => parameters.stateController === "gameBoards" ? (0,_logic_index_GameBoardSlice__WEBPACK_IMPORTED_MODULE_0__/* .selectGameBoardFENSettings */ .Zi)(parameters.state, parameters.id) : (0,_SidebarEditor_SidebarEditorSlice__WEBPACK_IMPORTED_MODULE_1__/* .selectEditorFENSettings */ .SG)(parameters.state, parameters.id);
var selectCurrentMove = parameters => parameters.stateController === "gameBoards" ? (0,_logic_index_GameBoardSlice__WEBPACK_IMPORTED_MODULE_0__/* .selectGameBoardCurrentMove */ .xt)(parameters.state, parameters.id) : (0,_SidebarEditor_SidebarEditorSlice__WEBPACK_IMPORTED_MODULE_1__/* .selectEditorSidebar */ .bR)(parameters.state, parameters.id).currentMove;
var selectMoveTree = parameters => parameters.stateController === "gameBoards" ? (0,_logic_index_GameBoardSlice__WEBPACK_IMPORTED_MODULE_0__/* .selectGameBoardMoveTree */ .Wl)(parameters.state, parameters.id) : (0,_SidebarEditor_SidebarEditorSlice__WEBPACK_IMPORTED_MODULE_1__/* .selectEditorSidebar */ .bR)(parameters.state, parameters.id).moveTree;
var selectBoardSquares = parameters => parameters.stateController === "gameBoards" ? (0,_logic_index_GameBoardSlice__WEBPACK_IMPORTED_MODULE_0__/* .selectGameBoardSquares */ .zD)(parameters.state, parameters.id) : (0,_SidebarEditor_SidebarEditorSlice__WEBPACK_IMPORTED_MODULE_1__/* .selectEditorBoardSquares */ .Ch)(parameters.state, parameters.id);
var selectSerializedStrings = parameters => parameters.stateController === "gameBoards" ? (0,_logic_index_GameBoardSlice__WEBPACK_IMPORTED_MODULE_0__/* .selectGameBoardPGN */ .dP)(parameters.state, parameters.id) : (0,_SidebarEditor_SidebarEditorSlice__WEBPACK_IMPORTED_MODULE_1__/* .selectEditorSidebar */ .bR)(parameters.state, parameters.id).serializedFEN;

/***/ }),

/***/ 72241:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Ch": () => (/* binding */ selectEditorBoardSquares),
/* harmony export */   "LY": () => (/* binding */ changeNumericColorValue),
/* harmony export */   "Rh": () => (/* binding */ toggleBooleanVariantRule),
/* harmony export */   "SG": () => (/* binding */ selectEditorFENSettings),
/* harmony export */   "Tm": () => (/* binding */ changeDimensionValue),
/* harmony export */   "UD": () => (/* binding */ selectEditorVariantDataRules),
/* harmony export */   "Ug": () => (/* binding */ changeParametrizedVariantRule),
/* harmony export */   "bR": () => (/* binding */ selectEditorSidebar),
/* harmony export */   "dp": () => (/* binding */ dropPiece),
/* harmony export */   "fU": () => (/* binding */ toggleBooleanValue),
/* harmony export */   "kS": () => (/* binding */ deleteDroppedPiece),
/* harmony export */   "yN": () => (/* binding */ setCurrentDroppedPiece),
/* harmony export */   "yb": () => (/* binding */ selectEditorVariantType)
/* harmony export */ });
/* unused harmony exports sidebarEditorsAdapter, sidebarEditorsSlice */
/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(96057);
/* harmony import */ var _client_ts_logic_index_GameBoardSlice__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(28150);
/* harmony import */ var _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(76758);
/* harmony import */ var _moveGeneration_GameInformation_GameUnits_PieceString__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20915);
/* harmony import */ var _client_ts_logic_BaseInterfaces__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(34355);
/* harmony import */ var _client_ts_baseTypes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(18027);
/* harmony import */ var _moveGeneration_FENData_FENDataInterface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(52463);
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }







var baseFalsyColors = (0,_client_ts_baseTypes__WEBPACK_IMPORTED_MODULE_5__/* .createTuple */ .VS)(false, _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_1__/* .totalPlayers */ .q3);
var sidebarEditorsAdapter = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_6__/* .createEntityAdapter */ .HF)();
var sidebarEditorsSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_6__/* .createSlice */ .oM)({
  name: "sidebarEditors",
  initialState: sidebarEditorsAdapter.getInitialState(),
  reducers: {
    changeDimensionValue: (state, action) => {
      var editor = sidebarEditorsAdapter.getSelectors().selectById(state, action.payload.id);
      if (!(editor !== null && editor !== void 0 && editor.publicFENSettings)) return;
      var newValues = action.payload.selectedId === 0 ? [action.payload.newValue, editor.publicFENSettings.fenOptions.dim[1]] : [editor.publicFENSettings.fenOptions.dim[0], action.payload.newValue];
      sidebarEditorsAdapter.updateOne(state, {
        type: "sidebarEditors/changeDimension",
        payload: {
          id: action.payload.id,
          changes: {
            publicFENSettings: _objectSpread(_objectSpread({}, editor.publicFENSettings), {}, {
              fenOptions: _objectSpread(_objectSpread({}, editor.publicFENSettings.fenOptions), {}, {
                dim: newValues
              })
            })
          }
        }
      });
    },
    changeNumericColorValue: (state, action) => {
      var _action$payload = action.payload,
        id = _action$payload.id,
        option = _action$payload.option;
      var editor = sidebarEditorsAdapter.getSelectors().selectById(state, id);
      if (!(editor !== null && editor !== void 0 && editor.publicFENSettings)) return;
      sidebarEditorsAdapter.updateOne(state, {
        type: "sidebarEditors/changeNumericColorValue",
        payload: {
          id,
          changes: {
            publicFENSettings: _objectSpread(_objectSpread({}, editor.publicFENSettings), {}, {
              fenOptions: _objectSpread(_objectSpread({}, editor.publicFENSettings.fenOptions), {}, {
                [option]: (0,_moveGeneration_FENData_FENDataInterface__WEBPACK_IMPORTED_MODULE_4__/* .getNeighboringSideToMove */ .cq)(editor.publicFENSettings.fenOptions[option], baseFalsyColors)
              })
            })
          }
        }
      });
    },
    toggleBooleanValue: (state, action) => {
      var _action$payload2 = action.payload,
        id = _action$payload2.id,
        option = _action$payload2.option;
      var editor = sidebarEditorsAdapter.getSelectors().selectById(state, id);
      if (!(editor !== null && editor !== void 0 && editor.publicFENSettings)) return;
      sidebarEditorsAdapter.updateOne(state, {
        type: "sidebarEditors/toggleBooleanValue",
        payload: {
          id,
          changes: {
            publicFENSettings: _objectSpread(_objectSpread({}, editor.publicFENSettings), {}, {
              fenOptions: _objectSpread(_objectSpread({}, editor.publicFENSettings.fenOptions), {}, {
                [option]: !editor.publicFENSettings.fenOptions[option]
              })
            })
          }
        }
      });
    },
    toggleBooleanTupleValue: (state, action) => {
      var _action$payload3 = action.payload,
        id = _action$payload3.id,
        option = _action$payload3.option,
        index = _action$payload3.index;
      var editor = sidebarEditorsAdapter.getSelectors().selectById(state, id);
      if (!(editor !== null && editor !== void 0 && editor.publicFENSettings)) return;
      var newValue = [...editor.publicFENSettings.fenOptions[option]];
      newValue[index] = !newValue[index];
      sidebarEditorsAdapter.updateOne(state, {
        type: "sidebarEditors/toggleBooleanTupleValue",
        payload: {
          id,
          changes: {
            publicFENSettings: _objectSpread(_objectSpread({}, editor.publicFENSettings), {}, {
              fenOptions: _objectSpread(_objectSpread({}, editor.publicFENSettings.fenOptions), {}, {
                [option]: newValue
              })
            })
          }
        }
      });
    },
    toggleBooleanVariantRule: (state, action) => {
      var _action$payload4 = action.payload,
        id = _action$payload4.id,
        option = _action$payload4.option;
      var editor = sidebarEditorsAdapter.getSelectors().selectById(state, id);
      if (!(editor !== null && editor !== void 0 && editor.variantDataRules)) return;
      sidebarEditorsAdapter.updateOne(state, {
        type: "sidebarEditors/toggleVariantRule",
        payload: {
          id,
          changes: {
            variantDataRules: _objectSpread(_objectSpread({}, editor.variantDataRules), {}, {
              [option]: !editor.variantDataRules[option]
            })
          }
        }
      });
    },
    changeParametrizedVariantRule: (state, action) => {
      var _action$payload5 = action.payload,
        id = _action$payload5.id,
        option = _action$payload5.option,
        newValue = _action$payload5.newValue;
      var editor = sidebarEditorsAdapter.getSelectors().selectById(state, id);
      if (!(editor !== null && editor !== void 0 && editor.variantDataRules)) return;
      sidebarEditorsAdapter.updateOne(state, {
        type: "sidebarEditors/changeParametrizedRule",
        payload: {
          id,
          changes: {
            variantDataRules: _objectSpread(_objectSpread({}, editor.variantDataRules), {}, {
              [option]: newValue
            })
          }
        }
      });
    },
    dropPiece: (state, action) => {
      var _action$payload6 = action.payload,
        id = _action$payload6.id,
        endCoordinate = _action$payload6.endCoordinate;
      var editor = sidebarEditorsAdapter.getSelectors().selectById(state, id);
      if (!(editor !== null && editor !== void 0 && editor.currentDroppedPiece)) return;
      if (Array.isArray(editor.currentDroppedPiece)) {
        var startCoordinate = editor.currentDroppedPiece;
        sidebarEditorsAdapter.updateOne(state, {
          type: "sidebarEditors/movePieceOnBoard",
          payload: {
            id,
            changes: {
              currentDroppedPiece: undefined,
              boardSquares: editor.boardSquares.map((r, i) => i === startCoordinate[0] || i === endCoordinate[0] ? r.map((s, j) => {
                if (i === startCoordinate[0] && j === startCoordinate[1]) {
                  return _moveGeneration_GameInformation_GameUnits_PieceString__WEBPACK_IMPORTED_MODULE_2__/* .emptyPieceString.toObject */ .v2.toObject();
                } else if (i === endCoordinate[0] && j === endCoordinate[1]) {
                  return editor.boardSquares[startCoordinate[0]][startCoordinate[1]];
                } else return s;
              }) : r)
            }
          }
        });
      } else {
        var piece = editor.currentDroppedPiece;
        sidebarEditorsAdapter.updateOne(state, {
          type: "sidebarEditors/dropPieceOnBoard",
          payload: {
            id,
            changes: {
              currentDroppedPiece: undefined,
              boardSquares: editor.boardSquares.map((r, i) => i === endCoordinate[0] ? r.map((s, j) => j === endCoordinate[1] ? piece : s) : r)
            }
          }
        });
      }
    },
    setCurrentDroppedPiece: (state, action) => {
      var _action$payload7 = action.payload,
        id = _action$payload7.id,
        piece = _action$payload7.piece;
      var editor = sidebarEditorsAdapter.getSelectors().selectById(state, id);
      if (!editor) return;
      sidebarEditorsAdapter.updateOne(state, {
        type: "sidebarEditors/setCurrentDroppedPiece",
        payload: {
          id,
          changes: {
            currentDroppedPiece: piece
          }
        }
      });
    },
    deleteDroppedPiece: (state, action) => {
      var id = action.payload.id;
      var editor = sidebarEditorsAdapter.getSelectors().selectById(state, id);
      if (!(editor !== null && editor !== void 0 && editor.currentDroppedPiece) || !Array.isArray(editor.currentDroppedPiece)) return;
      var startCoordinate = editor.currentDroppedPiece;
      sidebarEditorsAdapter.updateOne(state, {
        type: "sidebarEditors/deleteDroppedPiece",
        payload: {
          id,
          changes: {
            currentDroppedPiece: undefined,
            boardSquares: editor.boardSquares.map((r, i) => i === startCoordinate[0] ? r.map((s, j) => j === startCoordinate[1] ? _moveGeneration_GameInformation_GameUnits_PieceString__WEBPACK_IMPORTED_MODULE_2__/* .emptyPieceString.toObject */ .v2.toObject() : s) : r)
          }
        }
      });
    }
  },
  extraReducers: builder => {
    builder.addCase(_client_ts_logic_index_GameBoardSlice__WEBPACK_IMPORTED_MODULE_0__/* .createNewGameBoard */ .bA, (state, action) => {
      var emptyPieceStringObject = _moveGeneration_GameInformation_GameUnits_PieceString__WEBPACK_IMPORTED_MODULE_2__/* .emptyPieceString.toObject */ .v2.toObject();
      sidebarEditorsAdapter.addOne(state, {
        type: "sidebarEditors/createNew",
        payload: {
          id: action.payload.id,
          variantType: _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_1__/* .VariantType.FFA */ .Jy.FFA,
          boardSquares: (0,_client_ts_logic_BaseInterfaces__WEBPACK_IMPORTED_MODULE_3__/* .initializeBoardSquares */ .BD)(() => emptyPieceStringObject),
          variantDataRules: undefined,
          publicFENSettings: undefined,
          currentMove: [-1],
          moveTree: [],
          serializedFEN: {
            board: "",
            moves: ""
          }
        }
      });
    });
    builder.addCase(_client_ts_logic_index_GameBoardSlice__WEBPACK_IMPORTED_MODULE_0__/* .updateInteractionSettings */ .C3, (state, action) => {
      var resultingObject = {};
      var payload = action.payload.settings,
        id = action.payload.id;
      var editor = sidebarEditorsAdapter.getSelectors().selectById(state, id);
      if (!editor) return;
      if (payload.variantType) resultingObject.variantType = payload.variantType;
      if (payload.boardSquares) resultingObject.boardSquares = payload.boardSquares;
      if (payload.variantDataRules) resultingObject.variantDataRules = payload.variantDataRules;
      if (payload.publicFENSettings) resultingObject.publicFENSettings = payload.publicFENSettings;
      sidebarEditorsAdapter.updateOne(state, {
        type: "sidebarEditors/syncSettings",
        payload: {
          id,
          changes: resultingObject
        }
      });
    });
  }
});
var _sidebarEditorsSlice$ = sidebarEditorsSlice.actions,
  changeDimensionValue = _sidebarEditorsSlice$.changeDimensionValue,
  changeNumericColorValue = _sidebarEditorsSlice$.changeNumericColorValue,
  toggleBooleanValue = _sidebarEditorsSlice$.toggleBooleanValue,
  toggleBooleanVariantRule = _sidebarEditorsSlice$.toggleBooleanVariantRule,
  changeParametrizedVariantRule = _sidebarEditorsSlice$.changeParametrizedVariantRule,
  dropPiece = _sidebarEditorsSlice$.dropPiece,
  setCurrentDroppedPiece = _sidebarEditorsSlice$.setCurrentDroppedPiece,
  deleteDroppedPiece = _sidebarEditorsSlice$.deleteDroppedPiece;

/* harmony default export */ __webpack_exports__["ZP"] = (sidebarEditorsSlice.reducer);

/* eslint-disable @typescript-eslint/no-non-null-assertion */
var selectEditorSidebar = (state, id) => {
  var sidebarEditor = sidebarEditorsAdapter.getSelectors().selectById(state.sidebarEditors, id);
  if (false) {}
  return sidebarEditor;
};
var selectEditorVariantType = (state, id) => selectEditorSidebar(state, id).variantType;
var selectEditorBoardSquares = (state, id) => selectEditorSidebar(state, id).boardSquares;
var selectEditorVariantDataRules = (state, id) => {
  var variantData = selectEditorSidebar(state, id).variantDataRules;
  if (false) {}
  return variantData;
};
var selectEditorFENSettings = (state, id) => {
  var fenSettings = selectEditorSidebar(state, id).publicFENSettings;
  if (false) {}
  return fenSettings;
};
/* eslint-enable @typescript-eslint/no-non-null-assertion */

/***/ }),

/***/ 50272:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "R$": () => (/* binding */ getVariantName),
/* harmony export */   "of": () => (/* binding */ addInsufficientMaterialState)
/* harmony export */ });
/* unused harmony exports variantNamesAdapter, variantNamesSlice */
/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(96057);

var variantNamesAdapter = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__/* .createEntityAdapter */ .HF)();
var variantNamesSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__/* .createSlice */ .oM)({
  name: "variantNames",
  initialState: variantNamesAdapter.getInitialState(),
  reducers: {
    addInsufficientMaterialState(state, action) {
      variantNamesAdapter.upsertOne(state, {
        id: action.payload.id,
        insufficientMaterialData: action.payload.variantData
      });
    }
  }
});
var getVariantName = (state, id) => variantNamesAdapter.getSelectors().selectById(state.variantNames, id);
var addInsufficientMaterialState = variantNamesSlice.actions.addInsufficientMaterialState;

/* harmony default export */ __webpack_exports__["ZP"] = (variantNamesSlice.reducer);

/***/ }),

/***/ 34972:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "C0": () => (/* binding */ createLegalMovesAction),
/* harmony export */   "ED": () => (/* binding */ createDroppingMovesAction),
/* harmony export */   "K5": () => (/* binding */ createConstructBoardAction),
/* harmony export */   "RF": () => (/* binding */ createLoadSnapshotAction),
/* harmony export */   "Tj": () => (/* binding */ trackDeleteMoveRequests),
/* harmony export */   "UO": () => (/* binding */ watchCurrentMoveChanges),
/* harmony export */   "Ui": () => (/* binding */ trackLegalMovesChanges),
/* harmony export */   "Wm": () => (/* binding */ createdPreferredBotMoveAction),
/* harmony export */   "Yz": () => (/* binding */ trackFogOfWarPerspective),
/* harmony export */   "d9": () => (/* binding */ watchWorkerChanges),
/* harmony export */   "sF": () => (/* binding */ createMoveAction),
/* harmony export */   "w1": () => (/* binding */ createFogPerspectiveAction),
/* harmony export */   "wD": () => (/* binding */ watchWorkerConstruct),
/* harmony export */   "xI": () => (/* binding */ createDeleteMoveAction)
/* harmony export */ });
/* harmony import */ var _redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(10742);
/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(96057);
/* harmony import */ var _utils_ArrayUtils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(34092);
/* harmony import */ var _logic_index_GameBoardSlice__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(28150);
/* harmony import */ var _logic_index_GameBoardWorker__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(72822);
/* harmony import */ var _logic_index_reducers_MoveTreeReducers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(95116);
/* harmony import */ var _VariantNameSlice__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(50272);
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, "_invoke", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == typeof value && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, "_invoke", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, "throw" === methodName && delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method) || "return" !== methodName && (context.method = "throw", context.arg = new TypeError("The iterator does not provide a '" + methodName + "' method")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }
var _marked = /*#__PURE__*/_regeneratorRuntime().mark(syncWithWorker),
  _marked2 = /*#__PURE__*/_regeneratorRuntime().mark(watchWorkerConstruct),
  _marked3 = /*#__PURE__*/_regeneratorRuntime().mark(watchWorkerChanges),
  _marked4 = /*#__PURE__*/_regeneratorRuntime().mark(trackLegalMovesChanges),
  _marked5 = /*#__PURE__*/_regeneratorRuntime().mark(attemptWorkerSync),
  _marked6 = /*#__PURE__*/_regeneratorRuntime().mark(watchCurrentMoveChanges),
  _marked7 = /*#__PURE__*/_regeneratorRuntime().mark(trackDeleteMoveRequests),
  _marked8 = /*#__PURE__*/_regeneratorRuntime().mark(trackFogOfWarPerspective);
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }
function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
/* eslint-disable @typescript-eslint/no-unsafe-assignment */








var verifyWorkerRequest = (testKey, returnType) => returnType[0] === testKey;
var createLocalAction = request => (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_5__/* .createAction */ .PH)("gameBoardWorker/".concat(request));
var constructBoard = createLocalAction("construct");
var createConstructBoardAction = request => constructBoard(_objectSpread(_objectSpread({}, request), {}, {
  request: "construct"
}));
var makeMove = createLocalAction("makeMove");
var createMoveAction = request => makeMove(_objectSpread(_objectSpread({}, request), {}, {
  request: "makeMove"
}));
var loadSnapshotByPath = createLocalAction("loadSnapshotByPath");
var createLoadSnapshotAction = request => loadSnapshotByPath(_objectSpread(_objectSpread({}, request), {}, {
  request: "loadSnapshotByPath"
}));
var deleteMove = createLocalAction("deleteMove");
var createDeleteMoveAction = request => deleteMove(_objectSpread(_objectSpread({}, request), {}, {
  request: "deleteMove"
}));
var getLegalMoves = createLocalAction("getLegalMoves");
var createLegalMovesAction = request => getLegalMoves(_objectSpread(_objectSpread({}, request), {}, {
  request: "getLegalMoves"
}));
var getDroppingMoves = createLocalAction("getDroppingMoves");
var createDroppingMovesAction = request => getDroppingMoves(_objectSpread(_objectSpread({}, request), {}, {
  request: "getDroppingMoves"
}));
var playPreferredBotMove = createLocalAction("playPreferredBotMove");
var createdPreferredBotMoveAction = request => playPreferredBotMove(_objectSpread(_objectSpread({}, request), {}, {
  request: "playPreferredBotMove",
  args: []
}));
var changeFogPerspective = createLocalAction("changeFogPerspective");
var createFogPerspectiveAction = request => changeFogPerspective(_objectSpread(_objectSpread({}, request), {}, {
  request: "changeFogPerspective",
  args: []
}));
var interceptMessage = (request, worker) => new Promise((resolve, reject) => {
  worker.onmessage = event => {
    var response = event.data;
    if (verifyWorkerRequest(request, response)) {
      resolve(response);
    } else reject();
  };
});
function sendMessage(_x) {
  return _sendMessage.apply(this, arguments);
}
function _sendMessage() {
  _sendMessage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(parameters) {
    var blocking,
      worker,
      args,
      request,
      requestBody,
      v,
      _args11 = arguments;
    return _regeneratorRuntime().wrap(function _callee2$(_context11) {
      while (1) switch (_context11.prev = _context11.next) {
        case 0:
          blocking = _args11.length > 1 && _args11[1] !== undefined ? _args11[1] : false;
          worker = parameters.worker, args = parameters.args, request = parameters.request;
          requestBody = {
            requestName: request,
            parameters: args
          };
          worker.postMessage(requestBody);
          _context11.next = 6;
          return interceptMessage(request, worker);
        case 6:
          v = _context11.sent;
          if (!blocking) worker.onmessage = null;
          return _context11.abrupt("return", v);
        case 9:
        case "end":
          return _context11.stop();
      }
    }, _callee2);
  }));
  return _sendMessage.apply(this, arguments);
}
function syncWithWorker(request, isInitial) {
  var results, _iterator, _step, dispatch, payload, _yield$call, _yield$call2, requestName, returnType, syncProperty;
  return _regeneratorRuntime().wrap(function syncWithWorker$(_context) {
    while (1) switch (_context.prev = _context.next) {
      case 0:
        _context.prev = 0;
        results = {};
        _iterator = _createForOfIteratorHelper(isInitial ? _logic_index_GameBoardWorker__WEBPACK_IMPORTED_MODULE_2__/* .initialDispatches */ .cq : _logic_index_GameBoardWorker__WEBPACK_IMPORTED_MODULE_2__/* .requiredDispatches */ .$s);
        _context.prev = 3;
        _iterator.s();
      case 5:
        if ((_step = _iterator.n()).done) {
          _context.next = 18;
          break;
        }
        dispatch = _step.value;
        payload = _objectSpread(_objectSpread({}, request), {}, {
          request: dispatch,
          args: []
        });
        _context.next = 10;
        return (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_0__/* .call */ .RE)(sendMessage, payload, true);
      case 10:
        _yield$call = _context.sent;
        _yield$call2 = _slicedToArray(_yield$call, 2);
        requestName = _yield$call2[0];
        returnType = _yield$call2[1];
        syncProperty = _logic_index_GameBoardWorker__WEBPACK_IMPORTED_MODULE_2__/* .dispatchSyncRecord */ .bj[requestName];
        if (syncProperty) results[syncProperty] = returnType;
      case 16:
        _context.next = 5;
        break;
      case 18:
        _context.next = 23;
        break;
      case 20:
        _context.prev = 20;
        _context.t0 = _context["catch"](3);
        _iterator.e(_context.t0);
      case 23:
        _context.prev = 23;
        _iterator.f();
        return _context.finish(23);
      case 26:
        _context.next = 28;
        return (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_0__/* .put */ .gz)((0,_logic_index_GameBoardSlice__WEBPACK_IMPORTED_MODULE_1__/* .updateInteractionSettings */ .C3)({
          id: request.id,
          settings: results
        }));
      case 28:
        _context.next = 34;
        break;
      case 30:
        _context.prev = 30;
        _context.t1 = _context["catch"](0);
        _context.next = 34;
        return (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_0__/* .put */ .gz)((0,_logic_index_GameBoardSlice__WEBPACK_IMPORTED_MODULE_1__/* .resetInteractionSettings */ .X3)({
          id: request.id
        }));
      case 34:
        _context.prev = 34;
        request.worker.onmessage = null;
        return _context.finish(34);
      case 37:
      case "end":
        return _context.stop();
    }
  }, _marked, null, [[0, 30, 34, 37], [3, 20, 23, 26]]);
}
function watchWorkerConstruct() {
  var currentVariantNames, _loop;
  return _regeneratorRuntime().wrap(function watchWorkerConstruct$(_context4) {
    while (1) switch (_context4.prev = _context4.next) {
      case 0:
        currentVariantNames = new Set();
        _loop = /*#__PURE__*/_regeneratorRuntime().mark(function _loop() {
          var _yield$take, payload;
          return _regeneratorRuntime().wrap(function _loop$(_context3) {
            while (1) switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_0__/* .take */ .qn)(constructBoard);
              case 2:
                _yield$take = _context3.sent;
                payload = _yield$take.payload;
                _context3.next = 6;
                return (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_0__/* .spawn */ .Cs)( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
                  var _payload$args, variantName, generatedName, result;
                  return _regeneratorRuntime().wrap(function _callee$(_context2) {
                    while (1) switch (_context2.prev = _context2.next) {
                      case 0:
                        if (!payload.worker.onmessage) {
                          _context2.next = 2;
                          break;
                        }
                        return _context2.abrupt("return");
                      case 2:
                        _payload$args = _slicedToArray(payload.args, 2), variantName = _payload$args[1];
                        if (!currentVariantNames.has(variantName)) {
                          _context2.next = 9;
                          break;
                        }
                      case 4:
                        if (!currentVariantNames.has(variantName)) {
                          _context2.next = 9;
                          break;
                        }
                        _context2.next = 7;
                        return (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_0__/* .delay */ .gw)(200);
                      case 7:
                        _context2.next = 4;
                        break;
                      case 9:
                        _context2.next = 11;
                        return (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_0__/* .select */ .Ys)(_VariantNameSlice__WEBPACK_IMPORTED_MODULE_4__/* .getVariantName */ .R$, variantName);
                      case 11:
                        generatedName = _context2.sent;
                        _context2.next = 14;
                        return (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_0__/* .put */ .gz)((0,_logic_index_GameBoardSlice__WEBPACK_IMPORTED_MODULE_1__/* .createNewGameBoard */ .bA)({
                          id: payload.id
                        }));
                      case 14:
                        if (!(typeof generatedName !== "undefined")) {
                          _context2.next = 21;
                          break;
                        }
                        _context2.next = 17;
                        return (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_0__/* .call */ .RE)(sendMessage, {
                          request: "constructWithGeneratedData",
                          args: [payload.args[1], generatedName.insufficientMaterialData],
                          worker: payload.worker,
                          id: payload.id
                        });
                      case 17:
                        _context2.next = 19;
                        return (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_0__/* .fork */ .rM)(syncWithWorker, payload, true);
                      case 19:
                        _context2.next = 30;
                        break;
                      case 21:
                        currentVariantNames.add(variantName);
                        _context2.next = 24;
                        return (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_0__/* .call */ .RE)(sendMessage, payload, true);
                      case 24:
                        result = _context2.sent;
                        _context2.next = 27;
                        return (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_0__/* .fork */ .rM)(syncWithWorker, payload, true);
                      case 27:
                        _context2.next = 29;
                        return (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_0__/* .put */ .gz)((0,_VariantNameSlice__WEBPACK_IMPORTED_MODULE_4__/* .addInsufficientMaterialState */ .of)({
                          id: variantName,
                          variantData: result[1]
                        }));
                      case 29:
                        currentVariantNames.delete(variantName);
                      case 30:
                      case "end":
                        return _context2.stop();
                    }
                  }, _callee);
                }));
              case 6:
              case "end":
                return _context3.stop();
            }
          }, _loop);
        });
      case 2:
        return _context4.delegateYield(_loop(), "t0", 3);
      case 3:
        _context4.next = 2;
        break;
      case 5:
      case "end":
        return _context4.stop();
    }
  }, _marked2);
}
function watchWorkerChanges() {
  var _yield$take2, payload, result, move;
  return _regeneratorRuntime().wrap(function watchWorkerChanges$(_context5) {
    while (1) switch (_context5.prev = _context5.next) {
      case 0:
        _context5.next = 2;
        return (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_0__/* .take */ .qn)([makeMove, playPreferredBotMove]);
      case 2:
        _yield$take2 = _context5.sent;
        payload = _yield$take2.payload;
        if (payload.worker.onmessage) {
          _context5.next = 15;
          break;
        }
        _context5.next = 7;
        return (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_0__/* .call */ .RE)(sendMessage, payload, true);
      case 7:
        result = _context5.sent;
        if (!verifyWorkerRequest("playPreferredBotMove", result)) {
          _context5.next = 13;
          break;
        }
        move = result[1];
        if (!move) {
          _context5.next = 13;
          break;
        }
        _context5.next = 13;
        return (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_0__/* .call */ .RE)(sendMessage, _objectSpread(_objectSpread({}, payload), {}, {
          request: "makeMove",
          args: [move]
        }), true);
      case 13:
        _context5.next = 15;
        return (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_0__/* .fork */ .rM)(syncWithWorker, payload, false);
      case 15:
        _context5.next = 0;
        break;
      case 17:
      case "end":
        return _context5.stop();
    }
  }, _marked3);
}
function trackLegalMovesChanges() {
  var _yield$take3, payload, results;
  return _regeneratorRuntime().wrap(function trackLegalMovesChanges$(_context6) {
    while (1) switch (_context6.prev = _context6.next) {
      case 0:
        _context6.next = 2;
        return (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_0__/* .take */ .qn)([getLegalMoves, getDroppingMoves]);
      case 2:
        _yield$take3 = _context6.sent;
        payload = _yield$take3.payload;
        if (payload.worker.onmessage) {
          _context6.next = 12;
          break;
        }
        _context6.next = 7;
        return (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_0__/* .call */ .RE)(sendMessage, payload);
      case 7:
        results = _context6.sent;
        payload.worker.onmessage = null;
        if (!(verifyWorkerRequest("getLegalMoves", results) || verifyWorkerRequest("getDroppingMoves", results))) {
          _context6.next = 12;
          break;
        }
        _context6.next = 12;
        return (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_0__/* .put */ .gz)((0,_logic_index_GameBoardSlice__WEBPACK_IMPORTED_MODULE_1__/* .setLegalMoves */ .sU)({
          id: payload.id,
          legalMoves: results[1]
        }));
      case 12:
        _context6.next = 0;
        break;
      case 14:
      case "end":
        return _context6.stop();
    }
  }, _marked4);
}
function attemptWorkerSync(payload) {
  return _regeneratorRuntime().wrap(function attemptWorkerSync$(_context7) {
    while (1) switch (_context7.prev = _context7.next) {
      case 0:
        if (!payload.worker.onmessage) {
          _context7.next = 5;
          break;
        }
        _context7.next = 3;
        return (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_0__/* .delay */ .gw)(60);
      case 3:
        _context7.next = 0;
        break;
      case 5:
        _context7.next = 7;
        return (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_0__/* .call */ .RE)(sendMessage, payload, true);
      case 7:
        _context7.next = 9;
        return (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_0__/* .fork */ .rM)(syncWithWorker, payload, false);
      case 9:
      case "end":
        return _context7.stop();
    }
  }, _marked5);
}
function watchCurrentMoveChanges() {
  var _yield$take4, payload, currentMove, gameBoardObject;
  return _regeneratorRuntime().wrap(function watchCurrentMoveChanges$(_context8) {
    while (1) switch (_context8.prev = _context8.next) {
      case 0:
        _context8.next = 2;
        return (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_0__/* .take */ .qn)([pattern => Object.values(_logic_index_reducers_MoveTreeReducers__WEBPACK_IMPORTED_MODULE_3__/* .moveTreeActionTypes */ .M).some(t => t === (pattern === null || pattern === void 0 ? void 0 : pattern.type)), _logic_index_GameBoardSlice__WEBPACK_IMPORTED_MODULE_1__/* .changeCurrentMove */ .Xz]);
      case 2:
        _context8.next = 4;
        return (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_0__/* .take */ .qn)(loadSnapshotByPath);
      case 4:
        _yield$take4 = _context8.sent;
        payload = _yield$take4.payload;
        _context8.next = 8;
        return (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_0__/* .call */ .RE)(sendMessage, {
          id: payload.id,
          request: "getCurrentMove",
          args: [],
          worker: payload.worker
        });
      case 8:
        currentMove = _context8.sent;
        _context8.next = 11;
        return (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_0__/* .select */ .Ys)(_logic_index_GameBoardSlice__WEBPACK_IMPORTED_MODULE_1__/* .getCurrentMove */ .QC, payload.id);
      case 11:
        gameBoardObject = _context8.sent;
        if (!(!gameBoardObject || (0,_utils_ArrayUtils__WEBPACK_IMPORTED_MODULE_6__/* .compareArrays */ .Rt)(currentMove, gameBoardObject.currentMove))) {
          _context8.next = 14;
          break;
        }
        return _context8.abrupt("continue", 15);
      case 14:
        return _context8.delegateYield(attemptWorkerSync(_objectSpread(_objectSpread({}, payload), {}, {
          args: [gameBoardObject.currentMove]
        })), "t0", 15);
      case 15:
        _context8.next = 0;
        break;
      case 17:
      case "end":
        return _context8.stop();
    }
  }, _marked6);
}
function trackDeleteMoveRequests() {
  var _yield$take5, payload, _yield$call3, _yield$call4, currentMove, gameBoardObject, _yield$call5, _yield$call6, moveTree;
  return _regeneratorRuntime().wrap(function trackDeleteMoveRequests$(_context9) {
    while (1) switch (_context9.prev = _context9.next) {
      case 0:
        _context9.next = 2;
        return (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_0__/* .take */ .qn)(deleteMove);
      case 2:
        _yield$take5 = _context9.sent;
        payload = _yield$take5.payload;
        _context9.next = 6;
        return (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_0__/* .call */ .RE)(sendMessage, payload);
      case 6:
        _context9.next = 8;
        return (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_0__/* .call */ .RE)(sendMessage, _objectSpread(_objectSpread({}, payload), {}, {
          request: "getCurrentMove",
          args: []
        }));
      case 8:
        _yield$call3 = _context9.sent;
        _yield$call4 = _slicedToArray(_yield$call3, 2);
        currentMove = _yield$call4[1];
        _context9.next = 13;
        return (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_0__/* .select */ .Ys)(_logic_index_GameBoardSlice__WEBPACK_IMPORTED_MODULE_1__/* .getCurrentMove */ .QC, payload.id);
      case 13:
        gameBoardObject = _context9.sent;
        if (gameBoardObject) {
          _context9.next = 16;
          break;
        }
        return _context9.abrupt("continue", 27);
      case 16:
        if (!(0,_utils_ArrayUtils__WEBPACK_IMPORTED_MODULE_6__/* .compareArrays */ .Rt)(gameBoardObject.currentMove, currentMove)) {
          _context9.next = 26;
          break;
        }
        _context9.next = 19;
        return (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_0__/* .call */ .RE)(sendMessage, _objectSpread(_objectSpread({}, payload), {}, {
          request: "getMoveTree",
          args: []
        }));
      case 19:
        _yield$call5 = _context9.sent;
        _yield$call6 = _slicedToArray(_yield$call5, 2);
        moveTree = _yield$call6[1];
        _context9.next = 24;
        return (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_0__/* .put */ .gz)((0,_logic_index_GameBoardSlice__WEBPACK_IMPORTED_MODULE_1__/* .updateInteractionSettings */ .C3)({
          id: payload.id,
          settings: {
            moveTree
          }
        }));
      case 24:
        _context9.next = 27;
        break;
      case 26:
        return _context9.delegateYield(attemptWorkerSync(_objectSpread(_objectSpread({}, payload), {}, {
          request: "loadSnapshotByPath",
          args: [currentMove]
        })), "t0", 27);
      case 27:
        _context9.next = 0;
        break;
      case 29:
      case "end":
        return _context9.stop();
    }
  }, _marked7);
}
function trackFogOfWarPerspective() {
  var _yield$take6, payload, _yield$call7, _yield$call8, perspective, _yield$call9, _yield$call10, visibility;
  return _regeneratorRuntime().wrap(function trackFogOfWarPerspective$(_context10) {
    while (1) switch (_context10.prev = _context10.next) {
      case 0:
        _context10.next = 2;
        return (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_0__/* .take */ .qn)(changeFogPerspective);
      case 2:
        _yield$take6 = _context10.sent;
        payload = _yield$take6.payload;
        _context10.next = 6;
        return (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_0__/* .call */ .RE)(sendMessage, payload);
      case 6:
        _yield$call7 = _context10.sent;
        _yield$call8 = _slicedToArray(_yield$call7, 2);
        perspective = _yield$call8[1];
        _context10.next = 11;
        return (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_0__/* .call */ .RE)(sendMessage, _objectSpread(_objectSpread({}, payload), {}, {
          request: "getSquareVisibility",
          args: []
        }));
      case 11:
        _yield$call9 = _context10.sent;
        _yield$call10 = _slicedToArray(_yield$call9, 2);
        visibility = _yield$call10[1];
        _context10.next = 16;
        return (0,_redux_saga_core_effects__WEBPACK_IMPORTED_MODULE_0__/* .put */ .gz)((0,_logic_index_GameBoardSlice__WEBPACK_IMPORTED_MODULE_1__/* .changeCurrentFogPerspective */ .ck)({
          id: payload.id,
          perspective,
          visibility
        }));
      case 16:
        _context10.next = 0;
        break;
      case 18:
      case "end":
        return _context10.stop();
    }
  }, _marked8);
}

/***/ }),

/***/ 68409:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "St": () => (/* binding */ UserContext),
/* harmony export */   "Vh": () => (/* binding */ initBaseUserContext),
/* harmony export */   "mJ": () => (/* binding */ validateUserContext)
/* harmony export */ });
/* harmony import */ var _client_img_imageIndex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(73490);
/* harmony import */ var _client_ts_interfaces_Colors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(7970);
/* harmony import */ var _moveGeneration_VariantRules_VariantRuleDefinitions_BoardVariantModules_EngineMoveGeneration_BotInterface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(69283);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(89526);




function initBaseUserContext() {
  return {
    colors: {
      pieceColors: [(0,_client_ts_interfaces_Colors__WEBPACK_IMPORTED_MODULE_3__/* .createHexColor */ .TG)("#bf3b43"), (0,_client_ts_interfaces_Colors__WEBPACK_IMPORTED_MODULE_3__/* .createHexColor */ .TG)("#4185bf"), (0,_client_ts_interfaces_Colors__WEBPACK_IMPORTED_MODULE_3__/* .createHexColor */ .TG)("#c09526"), (0,_client_ts_interfaces_Colors__WEBPACK_IMPORTED_MODULE_3__/* .createHexColor */ .TG)("#4e9161"), (0,_client_ts_interfaces_Colors__WEBPACK_IMPORTED_MODULE_3__/* .createHexColor */ .TG)("#8c8a88")],
      whiteBlackColors: [(0,_client_ts_interfaces_Colors__WEBPACK_IMPORTED_MODULE_3__/* .createHexColor */ .TG)("#B8B8B8"), (0,_client_ts_interfaces_Colors__WEBPACK_IMPORTED_MODULE_3__/* .createHexColor */ .TG)("#333")],
      drawColor: [(0,_client_ts_interfaces_Colors__WEBPACK_IMPORTED_MODULE_3__/* .createHexColor */ .TG)("#8c8a88")],
      abortsColor: [(0,_client_ts_interfaces_Colors__WEBPACK_IMPORTED_MODULE_3__/* .createHexColor */ .TG)("#e0650d")],
      zombieColors: {
        rando: (0,_client_ts_interfaces_Colors__WEBPACK_IMPORTED_MODULE_3__/* .createHexColor */ .TG)("#fff"),
        ranter: (0,_client_ts_interfaces_Colors__WEBPACK_IMPORTED_MODULE_3__/* .createHexColor */ .TG)("#916e66"),
        comfuter: (0,_client_ts_interfaces_Colors__WEBPACK_IMPORTED_MODULE_3__/* .createHexColor */ .TG)("#874739"),
        pusher: (0,_client_ts_interfaces_Colors__WEBPACK_IMPORTED_MODULE_3__/* .createHexColor */ .TG)("#575880"),
        checker: (0,_client_ts_interfaces_Colors__WEBPACK_IMPORTED_MODULE_3__/* .createHexColor */ .TG)("#916841"),
        muncher: (0,_client_ts_interfaces_Colors__WEBPACK_IMPORTED_MODULE_3__/* .createHexColor */ .TG)("#d4c677"),
        patzer: (0,_client_ts_interfaces_Colors__WEBPACK_IMPORTED_MODULE_3__/* .createHexColor */ .TG)("#396b53"),
        pusher_comfuter: (0,_client_ts_interfaces_Colors__WEBPACK_IMPORTED_MODULE_3__/* .createHexColor */ .TG)("#444860"),
        checker_comfuter: (0,_client_ts_interfaces_Colors__WEBPACK_IMPORTED_MODULE_3__/* .createHexColor */ .TG)("#615838"),
        muncher_comfuter: (0,_client_ts_interfaces_Colors__WEBPACK_IMPORTED_MODULE_3__/* .createHexColor */ .TG)("#b4c657")
      }
    },
    pieceTheme: _client_img_imageIndex__WEBPACK_IMPORTED_MODULE_0__/* .SVGPieceDisplayGroup.Neo */ .l1.Neo,
    timeControlColors: {
      hyperbullet: (0,_client_ts_interfaces_Colors__WEBPACK_IMPORTED_MODULE_3__/* .createHexColor */ .TG)("#c3c7a3"),
      bullet: (0,_client_ts_interfaces_Colors__WEBPACK_IMPORTED_MODULE_3__/* .createHexColor */ .TG)("#a68b46"),
      blitz: (0,_client_ts_interfaces_Colors__WEBPACK_IMPORTED_MODULE_3__/* .createHexColor */ .TG)("#ffc800"),
      rapid: (0,_client_ts_interfaces_Colors__WEBPACK_IMPORTED_MODULE_3__/* .createHexColor */ .TG)("#769656")
    }
  };
}
function validateUserContext(context) {
  var verifyValidProperty = (object, property) => property in object;
  var verifyRecordProperty = (object, property) => typeof object === "object" && object !== null && property in object;
  var verifyZombieTypeProperty = key => typeof key === "string" && key in _moveGeneration_VariantRules_VariantRuleDefinitions_BoardVariantModules_EngineMoveGeneration_BotInterface__WEBPACK_IMPORTED_MODULE_1__.ZombieType;
  var baseUserContext = initBaseUserContext();
  try {
    if (typeof context !== "string") throw new Error("Supplied context is not a string");
    var presumedContext = JSON.parse(context);
    if (typeof presumedContext !== "object" || presumedContext === null) throw new Error("Supplied context is not a valid JSON");
    if ("colors" in presumedContext && typeof presumedContext.colors === "object" && presumedContext.colors !== null) {
      for (var key in presumedContext.colors) {
        if (!Object.prototype.hasOwnProperty.call(presumedContext.colors, key) || !verifyValidProperty(baseUserContext.colors, key) || !verifyRecordProperty(presumedContext.colors, key)) continue;
        var presumedColors = presumedContext.colors[key];
        if (typeof presumedColors !== "object" || !presumedColors) continue;
        var colors = baseUserContext.colors[key];
        if (Array.isArray(colors) && Array.isArray(presumedColors)) {
          for (var i = 0; i < colors.length; i++) {
            var presumedColor = presumedColors[i];
            if (presumedColor && (0,_client_ts_interfaces_Colors__WEBPACK_IMPORTED_MODULE_3__/* .validateIndexedColor */ .$9)(presumedColor)) {
              colors[i] = presumedColor;
            }
          }
        } else if (!Array.isArray(colors) && typeof presumedColors === "object") {
          for (var property in colors) {
            if (!Object.prototype.hasOwnProperty.call(colors, property) || !verifyRecordProperty(presumedColors, property) || !verifyZombieTypeProperty(property)) continue;
            var _presumedColor = presumedColors[property];
            if (_presumedColor && (0,_client_ts_interfaces_Colors__WEBPACK_IMPORTED_MODULE_3__/* .validateIndexedColor */ .$9)(_presumedColor)) {
              colors[property] = _presumedColor;
            }
          }
        }
      }
    }
    if ("pieceTheme" in presumedContext && typeof presumedContext.pieceTheme === "string" && ((0,_client_img_imageIndex__WEBPACK_IMPORTED_MODULE_0__/* .verifySVGPieceDisplayGroup */ .hz)(presumedContext.pieceTheme) || (0,_client_img_imageIndex__WEBPACK_IMPORTED_MODULE_0__/* .verifyRasterPieceDisplayGroup */ ._n)(presumedContext.pieceTheme))) {
      baseUserContext.pieceTheme = presumedContext.pieceTheme;
    }
    if ("timeControlColors" in presumedContext && presumedContext.timeControlColors && typeof presumedContext.timeControlColors === "object") {
      for (var _key in presumedContext.timeControlColors) {
        if (!Object.prototype.hasOwnProperty.call(presumedContext.timeControlColors, _key) || !verifyValidProperty(baseUserContext.timeControlColors, _key) || !verifyRecordProperty(presumedContext.timeControlColors, _key)) continue;
        var _presumedColor2 = presumedContext.timeControlColors[_key];
        if (_presumedColor2 && (0,_client_ts_interfaces_Colors__WEBPACK_IMPORTED_MODULE_3__/* .validateIndexedColor */ .$9)(_presumedColor2)) {
          baseUserContext.timeControlColors[_key] = _presumedColor2;
        }
      }
    }
  } catch (e) {
    console.trace(e);
  }
  return baseUserContext;
}
var UserContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2__.createContext(initBaseUserContext());

/***/ }),

/***/ 50813:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "default": () => (/* binding */ Accordion_Accordion)
});

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(89526);
// EXTERNAL MODULE: ./src/main/client/ts/templates/TemplateInterface.tsx
var TemplateInterface = __webpack_require__(59793);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js
var injectStylesIntoStyleTag = __webpack_require__(75701);
var injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(injectStylesIntoStyleTag);
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./src/main/client/ts/templates/Accordion/Accordion.module.scss
var Accordion_module = __webpack_require__(53132);
;// CONCATENATED MODULE: ./src/main/client/ts/templates/Accordion/Accordion.module.scss

            

var options = {};

options.insert = "head";
options.singleton = false;

var update = injectStylesIntoStyleTag_default()(Accordion_module/* default */.Z, options);



/* harmony default export */ var Accordion_Accordion_module = (Accordion_module/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/main/client/ts/templates/Accordion/Accordion.tsx
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }



var Accordion = props => {
  var _useState = (0,react.useState)(false),
    _useState2 = _slicedToArray(_useState, 2),
    isActive = _useState2[0],
    setIsActive = _useState2[1];
  var _useState3 = (0,react.useState)(0),
    _useState4 = _slicedToArray(_useState3, 2),
    elementHeight = _useState4[0],
    setElementHeight = _useState4[1];
  var contentElement = (0,react.useRef)(null);
  var toggleActive = (0,react.useCallback)(e => {
    var _contentElement$curre, _contentElement$curre2;
    e.preventDefault();
    setIsActive(!isActive);
    setElementHeight(isActive ? 0 : (_contentElement$curre = (_contentElement$curre2 = contentElement.current) === null || _contentElement$curre2 === void 0 ? void 0 : _contentElement$curre2.scrollHeight) !== null && _contentElement$curre !== void 0 ? _contentElement$curre : 0);
  }, [isActive]);
  return /*#__PURE__*/react.createElement("details", {
    className: "".concat(Accordion_Accordion_module.accordion, " ").concat(isActive ? Accordion_Accordion_module["accordion--active"] : ""),
    open: true,
    onClick: e => toggleActive(e)
  }, /*#__PURE__*/react.createElement("summary", {
    className: Accordion_Accordion_module.accordion__header
  }, props.name), /*#__PURE__*/react.createElement("div", {
    className: Accordion_Accordion_module.accordion__contents,
    ref: contentElement,
    style: {
      maxHeight: "".concat(elementHeight, "px")
    }
  }, props.children));
};
/* harmony default export */ var Accordion_Accordion = ((0,TemplateInterface.addTemplate)("accordion", Accordion));

/***/ }),

/***/ 64570:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "default": () => (/* binding */ BoardDisplay_BoardDisplay)
});

// EXTERNAL MODULE: ./src/main/client/ts/components/BoardComponents/BoardContext.ts
var BoardContext = __webpack_require__(87792);
// EXTERNAL MODULE: ./src/main/client/ts/components/BoardComponents/GameDisplay/GameDisplay.tsx + 6 modules
var GameDisplay = __webpack_require__(72293);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/GameInformation/GameUnits/GameUnits.ts
var GameUnits = __webpack_require__(9960);
// EXTERNAL MODULE: ./src/main/client/ts/utils/StringFormatUtils.ts
var StringFormatUtils = __webpack_require__(14093);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(89526);
// EXTERNAL MODULE: ./src/main/client/ts/templates/TemplateInterface.tsx
var TemplateInterface = __webpack_require__(59793);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js
var injectStylesIntoStyleTag = __webpack_require__(75701);
var injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(injectStylesIntoStyleTag);
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./src/main/client/ts/templates/BoardDisplay/BoardDisplay.module.scss
var BoardDisplay_module = __webpack_require__(13467);
;// CONCATENATED MODULE: ./src/main/client/ts/templates/BoardDisplay/BoardDisplay.module.scss

            

var options = {};

options.insert = "head";
options.singleton = false;

var update = injectStylesIntoStyleTag_default()(BoardDisplay_module/* default */.Z, options);



/* harmony default export */ var BoardDisplay_BoardDisplay_module = (BoardDisplay_module/* default.locals */.Z.locals || {});
// EXTERNAL MODULE: ./node_modules/react-redux/es/index.js + 13 modules
var es = __webpack_require__(12384);
// EXTERNAL MODULE: ./src/main/client/ts/redux/WorkerSync/WorkerSaga.ts
var WorkerSaga = __webpack_require__(34972);
// EXTERNAL MODULE: ./src/main/client/ts/logic/index/GameBoardSlice.ts + 1 modules
var GameBoardSlice = __webpack_require__(28150);
// EXTERNAL MODULE: ./src/main/client/ts/components/BoardComponents/BoardPlaceholder/BoardPlaceholder.module.scss
var BoardPlaceholder_module = __webpack_require__(33432);
// EXTERNAL MODULE: ./src/main/client/ts/components/BoardComponents/BoardPlaceholder/PlaceholderInterface.tsx + 8 modules
var PlaceholderInterface = __webpack_require__(97118);
;// CONCATENATED MODULE: ./src/main/client/ts/components/BoardComponents/BoardPlaceholder/BoardPlaceholder.tsx



var BoardPlaceholder = _ref => {
  var enabled = _ref.enabled;
  return /*#__PURE__*/react.createElement(PlaceholderInterface/* PlaceholderWrapper */.l, {
    enabled: enabled
  }, /*#__PURE__*/react.createElement("div", {
    className: BoardPlaceholder_module/* default.placeholder__image-loading */.Z["placeholder__image-loading"]
  }));
};
;// CONCATENATED MODULE: ./src/main/client/ts/templates/BoardDisplay/BoardDisplay.tsx
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }











var BoardDisplay = props => {
  var _useState = (0,react.useState)(() => new Worker(new URL(/* worker import */ __webpack_require__.p + __webpack_require__.u(268), __webpack_require__.b))),
    _useState2 = _slicedToArray(_useState, 1),
    worker = _useState2[0];
  var id = (0,StringFormatUtils/* hashString */.Wu)((0,react.useId)());
  var initializationComplete = (0,es/* useSelector */.v9)(state => {
    var _gameBoardsAdapter$ge, _gameBoardsAdapter$ge2;
    return (_gameBoardsAdapter$ge = (_gameBoardsAdapter$ge2 = GameBoardSlice/* gameBoardsAdapter.getSelectors */.sP.getSelectors().selectById(state.gameBoards, id)) === null || _gameBoardsAdapter$ge2 === void 0 ? void 0 : _gameBoardsAdapter$ge2.initializationComplete) !== null && _gameBoardsAdapter$ge !== void 0 ? _gameBoardsAdapter$ge : false;
  });
  var dispatch = (0,es/* useDispatch */.I0)();
  (0,react.useEffect)(() => {
    var _props$variantname;
    dispatch((0,WorkerSaga/* createConstructBoardAction */.K5)({
      args: [(_props$variantname = props.variantname) !== null && _props$variantname !== void 0 ? _props$variantname : String(id), props.pgn4],
      id,
      worker
    }));
  }, [dispatch, id, props, worker]);
  var perspective = props.perspective !== undefined && (0,GameUnits/* verifyNumericColor */.O3)(props.perspective) ? props.perspective : 0;
  return /*#__PURE__*/react.createElement("article", {
    className: BoardDisplay_BoardDisplay_module["board-display"],
    style: {
      width: "".concat(GameDisplay/* dimensionRegressionConstant */.w0, "px"),
      height: "".concat(GameDisplay/* dimensionRegressionConstant */.w0, "px")
    }
  }, /*#__PURE__*/react.createElement(BoardPlaceholder, {
    enabled: !initializationComplete
  }), initializationComplete && /*#__PURE__*/react.createElement(BoardContext/* GameDisplayContext.Provider */.$.Provider, {
    value: {
      id,
      worker,
      stateController: "gameBoards"
    }
  }, /*#__PURE__*/react.createElement(GameDisplay/* GameDisplay */.Th, {
    currentPerspective: perspective,
    locked: true
  })));
};
/* harmony default export */ var BoardDisplay_BoardDisplay = ((0,TemplateInterface.addTemplate)("board-display", BoardDisplay));

/***/ }),

/***/ 58952:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "default": () => (/* binding */ CompositesDisplay_CompositesDisplay)
});

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(89526);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js
var injectStylesIntoStyleTag = __webpack_require__(75701);
var injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(injectStylesIntoStyleTag);
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./src/main/client/ts/templates/CompositesDisplay/CompositesDisplay.module.scss
var CompositesDisplay_module = __webpack_require__(73673);
;// CONCATENATED MODULE: ./src/main/client/ts/templates/CompositesDisplay/CompositesDisplay.module.scss

            

var options = {};

options.insert = "head";
options.singleton = false;

var update = injectStylesIntoStyleTag_default()(CompositesDisplay_module/* default */.Z, options);



/* harmony default export */ var CompositesDisplay_CompositesDisplay_module = (CompositesDisplay_module/* default.locals */.Z.locals || {});
// EXTERNAL MODULE: ./src/main/client/ts/templates/TemplateInterface.tsx
var TemplateInterface = __webpack_require__(59793);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/VariantRules/VariantRule.ts
var VariantRule = __webpack_require__(75942);
// EXTERNAL MODULE: ./src/main/client/ts/utils/ObjectUtils.ts
var ObjectUtils = __webpack_require__(35637);
// EXTERNAL MODULE: ./src/main/client/ts/baseTypes.ts
var baseTypes = __webpack_require__(18027);
// EXTERNAL MODULE: ./src/main/client/ts/components/VariantRules/GameVariantRule.tsx
var GameVariantRule = __webpack_require__(13540);
// EXTERNAL MODULE: ./src/main/client/ts/interfaces/Colors.ts
var Colors = __webpack_require__(7970);
;// CONCATENATED MODULE: ./src/main/client/ts/templates/CompositesDisplay/CompositesDisplay.tsx
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }








var variantRuleTags = new Set(VariantRule/* VariantRule.variantRuleList.map */.$.variantRuleList.map(rv => new rv().getPublicProperties().information.tag));
var variantRuleData = VariantRule/* VariantRule.variantRuleList.map */.$.variantRuleList.map(rv => new rv().getPublicProperties()).reduce((p, n) => {
  return _objectSpread(_objectSpread({}, p), {}, {
    [n.information.tag]: n.information
  });
}, {});
var verifyVariantDataRulesKey = k => variantRuleTags.has(k);
function verifyCompositesDisplayValues(options) {
  if (!(0,ObjectUtils/* verifyObjectType */.T9)(options)) return false;
  for (var key in options) {
    if (!Object.prototype.hasOwnProperty.call(options, key)) continue;
    if (!verifyVariantDataRulesKey(key) || typeof options[key] !== "number") return false;
  }
  return true;
}
var blackColor = (0,Colors/* createHexColor */.TG)("#222");
var CompositesDisplay = props => {
  var tagDisplays = JSON.parse(props.composites);
  if (!verifyCompositesDisplayValues(tagDisplays)) return null;
  var resultingOptions = [];
  var key;
  for (key in tagDisplays) {
    if (!Object.prototype.hasOwnProperty.call(tagDisplays, key)) continue;
    var ruleInformation = variantRuleData[key];
    (0,baseTypes/* assertNonUndefined */.lM)(ruleInformation);
    var newInformation = _objectSpread({}, ruleInformation);
    if (newInformation.color) newInformation.color = blackColor;
    resultingOptions.push( /*#__PURE__*/react.createElement("div", {
      className: CompositesDisplay_CompositesDisplay_module["display-item"],
      key: newInformation.tag
    }, /*#__PURE__*/react.createElement("span", {
      className: CompositesDisplay_CompositesDisplay_module["display-item__variant-rule"]
    }, /*#__PURE__*/react.createElement(GameVariantRule/* GameVariantRule */.K9, {
      information: newInformation
    })), /*#__PURE__*/react.createElement("span", {
      className: CompositesDisplay_CompositesDisplay_module["display-item__text"]
    }, "".concat(tagDisplays[key], "%"))));
  }
  return /*#__PURE__*/react.createElement("div", {
    className: CompositesDisplay_CompositesDisplay_module.display
  }, resultingOptions);
};
/* harmony default export */ var CompositesDisplay_CompositesDisplay = ((0,TemplateInterface.addTemplate)("composites-display", CompositesDisplay));

/***/ }),

/***/ 81532:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "default": () => (/* binding */ GameController_GameController)
});

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(89526);
// EXTERNAL MODULE: ./src/main/client/ts/templates/GameController/GameController.module.scss
var GameController_module = __webpack_require__(320);
// EXTERNAL MODULE: ./src/main/client/ts/utils/StringFormatUtils.ts
var StringFormatUtils = __webpack_require__(14093);
// EXTERNAL MODULE: ./node_modules/react-redux/es/index.js + 13 modules
var es = __webpack_require__(12384);
// EXTERNAL MODULE: ./src/main/client/ts/logic/index/GameBoardSlice.ts + 1 modules
var GameBoardSlice = __webpack_require__(28150);
// EXTERNAL MODULE: ./src/main/client/ts/redux/WorkerSync/WorkerSaga.ts
var WorkerSaga = __webpack_require__(34972);
// EXTERNAL MODULE: ./src/main/client/ts/templates/GameController/GameFENDisplay.tsx + 1 modules
var GameFENDisplay = __webpack_require__(21892);
// EXTERNAL MODULE: ./src/main/client/ts/templates/GameController/GameControllerInternalActions.tsx
var GameControllerInternalActions = __webpack_require__(12833);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/FENData/FENDataInterface.ts
var FENDataInterface = __webpack_require__(52463);
// EXTERNAL MODULE: ./src/main/client/ts/components/BoardComponents/BoardContext.ts
var BoardContext = __webpack_require__(87792);
// EXTERNAL MODULE: ./src/main/client/ts/components/BoardComponents/GameDisplay/GameDisplay.tsx + 6 modules
var GameDisplay = __webpack_require__(72293);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js
var injectStylesIntoStyleTag = __webpack_require__(75701);
var injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(injectStylesIntoStyleTag);
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./src/main/client/ts/components/BoardComponents/MoveTree/GameMoveTree.module.scss
var GameMoveTree_module = __webpack_require__(4018);
;// CONCATENATED MODULE: ./src/main/client/ts/components/BoardComponents/MoveTree/GameMoveTree.module.scss

            

var options = {};

options.insert = "head";
options.singleton = false;

var update = injectStylesIntoStyleTag_default()(GameMoveTree_module/* default */.Z, options);



/* harmony default export */ var MoveTree_GameMoveTree_module = (GameMoveTree_module/* default.locals */.Z.locals || {});
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/GameInformation/GameUnits/GameUnits.ts
var GameUnits = __webpack_require__(9960);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/MoveTree/MoveTreeInterface.ts
var MoveTreeInterface = __webpack_require__(37017);
// EXTERNAL MODULE: ./src/main/client/ts/utils/ArrayUtils.ts
var ArrayUtils = __webpack_require__(34092);
// EXTERNAL MODULE: ./src/main/client/ts/utils/BrowserUtils.ts
var BrowserUtils = __webpack_require__(84360);
// EXTERNAL MODULE: ./src/main/client/ts/hooks/useTimer.ts
var useTimer = __webpack_require__(46396);
// EXTERNAL MODULE: ./src/main/client/fonts/chessGlyphIndex.ts
var chessGlyphIndex = __webpack_require__(4127);
;// CONCATENATED MODULE: ./src/main/client/ts/components/BoardComponents/MoveTree/GameMoveTreeButtons.tsx










var isPreviousDisabled = options => (0,ArrayUtils/* compareArrays */.Rt)(options.currentMove, [-1]) || !(0,ArrayUtils/* compareArrays */.Rt)(options.currentMove, [0]) && options.currentMove[options.currentMove.length - 1] === 0;
var isNextDisabled = options => {
  var move = (0,MoveTreeInterface/* getMoveFromPathAndTree */.Yr)(options.moveTree, options.currentMove.slice(0, -1));
  if (!move || !Array.isArray(move)) return false;
  return move.length === 0 || options.currentMove[options.currentMove.length - 1] === move.length - 1;
};
var MoveTreeButton = props => {
  var dispatch = (0,es/* useDispatch */.I0)();
  var _useContext = (0,react.useContext)(BoardContext/* GameDisplayContext */.$),
    id = _useContext.id,
    worker = _useContext.worker;
  var currentMove = (0,es/* useSelector */.v9)(state => (0,GameBoardSlice/* selectGameBoardCurrentMove */.xt)(state, id));
  var moveTree = (0,es/* useSelector */.v9)(state => (0,GameBoardSlice/* selectGameBoardMoveTree */.Wl)(state, id));
  var isDisabled = props.isDisabled({
    moveTree,
    currentMove
  });
  var dispatchFunction = (0,react.useCallback)(() => {
    if (!isDisabled) dispatch((0,WorkerSaga/* createLoadSnapshotAction */.RF)({
      args: [currentMove],
      worker,
      id
    }));
  }, [currentMove, dispatch, id, isDisabled, worker]);
  var className = isDisabled ? "".concat(MoveTree_GameMoveTree_module["move-controls-row__navigation-button"], " ").concat(MoveTree_GameMoveTree_module["move-controls-row__navigation-button--disabled"]) : "".concat(MoveTree_GameMoveTree_module["move-controls-row__navigation-button"]);
  return /*#__PURE__*/react.createElement("div", {
    className: className,
    onClick: () => props.onClick({
      dispatch: dispatchFunction,
      moveTree,
      currentMove,
      id
    })
  }, props.children);
};
var GotoBeginningButton = () => {
  var dispatch = (0,es/* useDispatch */.I0)();
  var onClick = (0,react.useCallback)(options => {
    dispatch((0,GameBoardSlice/* goToBeginning */.LU)({
      id: options.id
    }));
    options.dispatch();
  }, [dispatch]);
  return /*#__PURE__*/react.createElement(MoveTreeButton, {
    isDisabled: isPreviousDisabled,
    onClick: onClick
  }, /*#__PURE__*/react.createElement("span", null, chessGlyphIndex/* chessGlyphIndex.endBackwardArrow */.w.endBackwardArrow));
};
var GotoPreviousMoveButton = () => {
  var dispatch = (0,es/* useDispatch */.I0)();
  var onClick = (0,react.useCallback)(options => {
    dispatch((0,GameBoardSlice/* goToPreviousMove */.eN)({
      id: options.id
    }));
    options.dispatch();
  }, [dispatch]);
  return /*#__PURE__*/react.createElement(MoveTreeButton, {
    isDisabled: isPreviousDisabled,
    onClick: onClick
  }, /*#__PURE__*/react.createElement("span", null, chessGlyphIndex/* chessGlyphIndex.doubleBackwardArrow */.w.doubleBackwardArrow));
};
var GotoPreviousPlyButton = () => {
  var dispatch = (0,es/* useDispatch */.I0)();
  var onClick = (0,react.useCallback)(options => {
    dispatch((0,GameBoardSlice/* goToPreviousPly */.IC)({
      id: options.id
    }));
    options.dispatch();
  }, [dispatch]);
  return /*#__PURE__*/react.createElement(MoveTreeButton, {
    isDisabled: isPreviousDisabled,
    onClick: onClick
  }, /*#__PURE__*/react.createElement("span", null, chessGlyphIndex/* chessGlyphIndex.backwardArrow */.w.backwardArrow));
};
var GotoNextPlyButton = () => {
  var dispatch = (0,es/* useDispatch */.I0)();
  var onClick = (0,react.useCallback)(options => {
    dispatch((0,GameBoardSlice/* goToNextPly */.Gq)({
      id: options.id
    }));
    options.dispatch();
  }, [dispatch]);
  return /*#__PURE__*/react.createElement(MoveTreeButton, {
    isDisabled: isNextDisabled,
    onClick: onClick
  }, /*#__PURE__*/react.createElement("span", null, chessGlyphIndex/* chessGlyphIndex.arrowForwardBoldCompact */.w.arrowForwardBoldCompact));
};
var GotoNextMoveButton = () => {
  var dispatch = (0,es/* useDispatch */.I0)();
  var onClick = (0,react.useCallback)(options => {
    dispatch((0,GameBoardSlice/* goToNextMove */.su)({
      id: options.id
    }));
    options.dispatch();
  }, [dispatch]);
  return /*#__PURE__*/react.createElement(MoveTreeButton, {
    isDisabled: isNextDisabled,
    onClick: onClick
  }, /*#__PURE__*/react.createElement("span", null, chessGlyphIndex/* chessGlyphIndex.forwardDoubleArrow */.w.forwardDoubleArrow));
};
var GotoEndButton = () => {
  var dispatch = (0,es/* useDispatch */.I0)();
  var onClick = (0,react.useCallback)(options => {
    dispatch((0,GameBoardSlice/* goToEnd */.tV)({
      id: options.id
    }));
    options.dispatch();
  }, [dispatch]);
  return /*#__PURE__*/react.createElement(MoveTreeButton, {
    isDisabled: isNextDisabled,
    onClick: onClick
  }, /*#__PURE__*/react.createElement("span", null, chessGlyphIndex/* chessGlyphIndex.endForwardArrow */.w.endForwardArrow));
};
var TIME_BETWEEN_MOVES = 1500;
var PlayPauseButton = () => {
  var _useContext2 = (0,react.useContext)(BoardContext/* GameDisplayContext */.$),
    id = _useContext2.id,
    worker = _useContext2.worker;
  var dispatch = (0,es/* useDispatch */.I0)();
  var _useTimer = (0,useTimer/* useTimer */.J)({
      interval: TIME_BETWEEN_MOVES,
      onUpdate: () => playOutNextMove()
    }),
    toggle = _useTimer.toggle,
    stop = _useTimer.stop,
    isRunning = _useTimer.isRunning;
  var currentMove = (0,es/* useSelector */.v9)(state => (0,GameBoardSlice/* selectGameBoardCurrentMove */.xt)(state, id));
  var moveTree = (0,es/* useSelector */.v9)(state => (0,GameBoardSlice/* selectGameBoardMoveTree */.Wl)(state, id));
  var playOutNextMove = (0,react.useCallback)(() => {
    if (isNextDisabled({
      moveTree,
      currentMove
    })) {
      stop();
    } else {
      dispatch((0,GameBoardSlice/* goToNextPly */.Gq)({
        id
      }));
      dispatch((0,WorkerSaga/* createLoadSnapshotAction */.RF)({
        id,
        worker,
        args: [currentMove]
      }));
    }
  }, [currentMove, dispatch, id, moveTree, stop, worker]);
  var onClick = (0,react.useCallback)(() => toggle(), [toggle]);
  return /*#__PURE__*/react.createElement(MoveTreeButton, {
    isDisabled: () => false,
    onClick: onClick
  }, /*#__PURE__*/react.createElement("span", null, isRunning ? chessGlyphIndex/* chessGlyphIndex.pause */.w.pause : chessGlyphIndex/* chessGlyphIndex.play */.w.play));
};
var GameMoveTreeControlButtons = () => {
  return /*#__PURE__*/react.createElement("div", {
    className: MoveTree_GameMoveTree_module["move-controls-row__navigation"]
  }, /*#__PURE__*/react.createElement(GotoBeginningButton, null), /*#__PURE__*/react.createElement(GotoPreviousMoveButton, null), /*#__PURE__*/react.createElement(GotoPreviousPlyButton, null), /*#__PURE__*/react.createElement(PlayPauseButton, null), /*#__PURE__*/react.createElement(GotoNextPlyButton, null), /*#__PURE__*/react.createElement(GotoNextMoveButton, null), /*#__PURE__*/react.createElement(GotoEndButton, null));
};
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/MoveTree/MoveTree.ts + 1 modules
var MoveTree = __webpack_require__(99234);
;// CONCATENATED MODULE: ./src/main/client/ts/components/BoardComponents/MoveTree/GameMoveTreeControls.tsx












function getLastCurrentFullMove(moves, currentMove) {
  for (var i = currentMove; i >= 0; i--) {
    var lastCurrent = moves[i].metadata.currentFullMove;
    if (lastCurrent) return lastCurrent;
  }
}
var GameMoveTreeControls = () => {
  var dispatch = (0,es/* useDispatch */.I0)();
  var _useContext = (0,react.useContext)(BoardContext/* GameDisplayContext */.$),
    id = _useContext.id,
    worker = _useContext.worker;
  var currentMove = (0,es/* useSelector */.v9)(state => (0,GameBoardSlice/* selectGameBoardCurrentMove */.xt)(state, id));
  var moveTree = (0,es/* useSelector */.v9)(state => (0,GameBoardSlice/* selectGameBoardMoveTree */.Wl)(state, id));
  var pgn = (0,es/* useSelector */.v9)(state => (0,GameBoardSlice/* selectGameBoardPGN */.dP)(state, id).moves);
  var selectedMove = (0,MoveTreeInterface/* getMoveFromPathAndTree */.Yr)(moveTree, currentMove);
  var moveInformation = (0,MoveTree/* verifyValidMove */.xn)(selectedMove) ? selectedMove.cachedNames.shortenedMoveNotation : "";
  var moveList = (0,MoveTreeInterface/* getMoveFromPathAndTree */.Yr)(moveTree, currentMove.slice(0, -1));
  if (!Array.isArray(moveList)) throw new Error("Move list is not an array");
  var lastCurrentMove = getLastCurrentFullMove(moveList, currentMove[currentMove.length - 1]);
  var deleteAllMoves = (0,react.useCallback)(() => {
    dispatch((0,WorkerSaga/* createDeleteMoveAction */.xI)({
      args: [[0]],
      id,
      worker
    }));
  }, [dispatch, id, worker]);
  var deletePreviousMove = (0,react.useCallback)(() => {
    dispatch((0,WorkerSaga/* createDeleteMoveAction */.xI)({
      args: [currentMove],
      id,
      worker
    }));
  }, [dispatch, id, worker, currentMove]);
  return /*#__PURE__*/react.createElement("div", {
    className: MoveTree_GameMoveTree_module["move-controls"]
  }, /*#__PURE__*/react.createElement("div", {
    className: MoveTree_GameMoveTree_module["move-controls-row"]
  }, /*#__PURE__*/react.createElement("div", {
    className: MoveTree_GameMoveTree_module["move-controls-row__move-information-wrap"]
  }, (0,MoveTree/* verifyValidMove */.xn)(selectedMove) && lastCurrentMove && /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("span", {
    className: MoveTree_GameMoveTree_module["move-controls-row__move-information"]
  }, "".concat(lastCurrentMove, ".").concat(GameUnits/* stringColorEnum */.Od[selectedMove.metadata.currentSideToMove])), /*#__PURE__*/react.createElement("span", {
    className: MoveTree_GameMoveTree_module["move-controls-row__move-information"]
  }, moveInformation))), /*#__PURE__*/react.createElement("div", {
    className: MoveTree_GameMoveTree_module["move-controls-row__pgn-information"]
  }, !(0,ArrayUtils/* compareArrays */.Rt)(currentMove, [-1]) && /*#__PURE__*/react.createElement("span", {
    className: MoveTree_GameMoveTree_module["move-controls-row__move-information"]
  }, "".concat(currentMove[currentMove.length - 1] + 1, "/").concat(moveList.length)), /*#__PURE__*/react.createElement("span", {
    className: "".concat(MoveTree_GameMoveTree_module["move-controls-row__icon"], " ").concat(MoveTree_GameMoveTree_module["move-controls-row__download-pgn-icon"]),
    onClick: () => (0,BrowserUtils/* downloadFile */.S)("pgnMoves.pgn", pgn)
  }), /*#__PURE__*/react.createElement("span", {
    className: "".concat(MoveTree_GameMoveTree_module["move-controls-row__icon"], " ").concat(MoveTree_GameMoveTree_module["move-controls-row__delete-pgn-icon"]),
    onClick: () => deleteAllMoves()
  }))), /*#__PURE__*/react.createElement("div", {
    className: MoveTree_GameMoveTree_module["move-controls-row"]
  }, /*#__PURE__*/react.createElement("div", {
    className: MoveTree_GameMoveTree_module["move-controls-row__takebacks-wrap"]
  }, /*#__PURE__*/react.createElement("div", {
    className: MoveTree_GameMoveTree_module["move-controls-row__takebacks"]
  }, /*#__PURE__*/react.createElement("span", {
    className: "".concat(MoveTree_GameMoveTree_module["move-controls-row__icon"], " ").concat(MoveTree_GameMoveTree_module["move-controls-row__takebacks-icon"]),
    onClick: () => deletePreviousMove()
  }), /*#__PURE__*/react.createElement("span", {
    className: MoveTree_GameMoveTree_module["move-controls-row__takebacks-text"]
  }))), /*#__PURE__*/react.createElement(GameMoveTreeControlButtons, null)));
};
// EXTERNAL MODULE: ./src/main/client/ts/interfaces/Colors.ts
var Colors = __webpack_require__(7970);
// EXTERNAL MODULE: ./src/main/client/ts/services/PersistedStorage/PieceThemeContext.ts
var PieceThemeContext = __webpack_require__(68409);
;// CONCATENATED MODULE: ./src/main/client/ts/components/BoardComponents/MoveTree/GameMoveTreeMove.tsx









var GameMoveDisplay = props => {
  var dispatch = (0,es/* useDispatch */.I0)();
  var _useContext = (0,react.useContext)(BoardContext/* GameDisplayContext */.$),
    id = _useContext.id,
    worker = _useContext.worker;
  var currentMove = (0,es/* useSelector */.v9)(state => (0,GameBoardSlice/* selectGameBoardCurrentMove */.xt)(state, id));
  var wb = (0,es/* useSelector */.v9)(state => (0,GameBoardSlice/* selectGameBoardFENSettings */.Zi)(state, id).fenOptions.wb);
  var userContext = (0,react.useContext)(PieceThemeContext/* UserContext */.St);
  var onClickCallback = (0,react.useCallback)(() => {
    dispatch((0,GameBoardSlice/* changeCurrentMove */.Xz)({
      id,
      path: props.moveWrapper.path
    }));
    dispatch((0,WorkerSaga/* createLoadSnapshotAction */.RF)({
      args: [currentMove],
      worker,
      id
    }));
  }, [currentMove, dispatch, id, props.moveWrapper.path, worker]);
  var isSelected = (0,ArrayUtils/* compareArrays */.Rt)(currentMove, props.moveWrapper.path);
  var stringifiedRepresentation = props.moveWrapper.cachedNames.shortenedMoveNotation;
  var sideToMove = props.moveWrapper.metadata.currentSideToMove;
  var indexedColor = wb ? userContext.colors.whiteBlackColors[0] : userContext.colors.pieceColors[sideToMove];
  var hasAlternativeLines = props.moveWrapper.alternativeLines.length !== 0;
  return /*#__PURE__*/react.createElement("div", {
    className: MoveTree_GameMoveTree_module["move-tree-move"]
  }, /*#__PURE__*/react.createElement("div", {
    className: "".concat(MoveTree_GameMoveTree_module["move-tree-move__move-wrap"], " ").concat(isSelected ? MoveTree_GameMoveTree_module["move-tree-move__move-wrap--selected"] : "")
  }, /*#__PURE__*/react.createElement("span", {
    className: MoveTree_GameMoveTree_module["move-tree-move__move-text"],
    onClick: () => onClickCallback(),
    style: {
      color: (0,Colors/* wrapIndexedColor */.Hi)(indexedColor)
    }
  }, props.moveWrapper.metadata.currentFullMove && "".concat(props.moveWrapper.metadata.currentFullMove, ". "), stringifiedRepresentation), props.moveWrapper.comment && /*#__PURE__*/react.createElement("span", {
    className: "".concat(MoveTree_GameMoveTree_module["move-tree-move__move-text"], " ").concat(MoveTree_GameMoveTree_module["move-tree-move__move-comment"])
  }, props.moveWrapper.comment)), hasAlternativeLines && /*#__PURE__*/react.createElement("span", {
    className: MoveTree_GameMoveTree_module["move-tree-move__move-text"]
  }, "("), props.moveWrapper.alternativeLines.map((line, i) => {
    return /*#__PURE__*/react.createElement(react.Fragment, {
      key: "".concat(line.length, "-").concat(i)
    }, /*#__PURE__*/react.createElement(GameMoveList, {
      moves: line
    }));
  }), hasAlternativeLines && /*#__PURE__*/react.createElement("span", {
    className: MoveTree_GameMoveTree_module["move-tree-move__move-text"]
  }, ")"));
};
var GameMoveList = props => {
  return /*#__PURE__*/react.createElement("div", null, props.moves.map(moveWrapper => {
    return /*#__PURE__*/react.createElement(react.Fragment, {
      key: moveWrapper.path.join(",")
    }, /*#__PURE__*/react.createElement(GameMoveDisplay, {
      moveWrapper: moveWrapper
    }));
  }));
};
;// CONCATENATED MODULE: ./src/main/client/ts/components/BoardComponents/MoveTree/GameMoveTree.tsx







var GameMoveTreeDisplay = () => {
  var id = (0,react.useContext)(BoardContext/* GameDisplayContext */.$).id;
  var moveTree = (0,es/* useSelector */.v9)(state => (0,GameBoardSlice/* selectGameBoardMoveTree */.Wl)(state, id));
  return /*#__PURE__*/react.createElement("div", {
    className: MoveTree_GameMoveTree_module["move-tree-wrap"]
  }, /*#__PURE__*/react.createElement("div", {
    className: MoveTree_GameMoveTree_module["move-tree"]
  }, /*#__PURE__*/react.createElement(GameMoveList, {
    moves: moveTree
  })), /*#__PURE__*/react.createElement(GameMoveTreeControls, null));
};
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/GameInformation/GameData.ts
var GameData = __webpack_require__(76758);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/VariantRules/VariantRuleInterface.ts
var VariantRuleInterface = __webpack_require__(9680);
;// CONCATENATED MODULE: ./node_modules/react-tooltip/dist/react-tooltip.esm.min.js
function s(e){return e.split("-")[1]}function u(e){return"y"===e?"height":"width"}function f(e){return e.split("-")[0]}function d(e){return["top","bottom"].includes(f(e))?"x":"y"}function p(e,t,n){let{reference:r,floating:o}=e;const i=r.x+r.width/2-o.width/2,l=r.y+r.height/2-o.height/2,a=d(t),c=u(a),p=r[c]/2-o[c]/2,m="x"===a;let y;switch(f(t)){case"top":y={x:i,y:r.y-o.height};break;case"bottom":y={x:i,y:r.y+r.height};break;case"right":y={x:r.x+r.width,y:l};break;case"left":y={x:r.x-o.width,y:l};break;default:y={x:r.x,y:r.y}}switch(s(t)){case"start":y[a]-=p*(n&&m?-1:1);break;case"end":y[a]+=p*(n&&m?-1:1)}return y}function m(e){return"number"!=typeof e?function(e){return{top:0,right:0,bottom:0,left:0,...e}}(e):{top:e,right:e,bottom:e,left:e}}function y(e){return{...e,top:e.y,left:e.x,right:e.x+e.width,bottom:e.y+e.height}}async function h(e,t){var n;void 0===t&&(t={});const{x:r,y:o,platform:i,rects:l,elements:a,strategy:c}=e,{boundary:s="clippingAncestors",rootBoundary:u="viewport",elementContext:f="floating",altBoundary:d=!1,padding:p=0}=t,h=m(p),g=a[d?"floating"===f?"reference":"floating":f],v=y(await i.getClippingRect({element:null==(n=await(null==i.isElement?void 0:i.isElement(g)))||n?g:g.contextElement||await(null==i.getDocumentElement?void 0:i.getDocumentElement(a.floating)),boundary:s,rootBoundary:u,strategy:c})),w="floating"===f?{...l.floating,x:r,y:o}:l.reference,b=await(null==i.getOffsetParent?void 0:i.getOffsetParent(a.floating)),x=await(null==i.isElement?void 0:i.isElement(b))&&await(null==i.getScale?void 0:i.getScale(b))||{x:1,y:1},R=y(i.convertOffsetParentRelativeRectToViewportRelativeRect?await i.convertOffsetParentRelativeRectToViewportRelativeRect({rect:w,offsetParent:b,strategy:c}):w);return{top:(v.top-R.top+h.top)/x.y,bottom:(R.bottom-v.bottom+h.bottom)/x.y,left:(v.left-R.left+h.left)/x.x,right:(R.right-v.right+h.right)/x.x}}const g=Math.min,v=Math.max;function w(e,t,n){return v(e,g(t,n))}const b=["top","right","bottom","left"].reduce(((e,t)=>e.concat(t,t+"-start",t+"-end")),[]),x={left:"right",right:"left",bottom:"top",top:"bottom"};function R(e){return e.replace(/left|right|bottom|top/g,(e=>x[e]))}function _(e,t,n){void 0===n&&(n=!1);const r=s(e),o=d(e),i=u(o);let l="x"===o?r===(n?"end":"start")?"right":"left":"start"===r?"bottom":"top";return t.reference[i]>t.floating[i]&&(l=R(l)),{main:l,cross:R(l)}}const T={start:"end",end:"start"};function S(e){return e.replace(/start|end/g,(e=>T[e]))}const O=function(e){return void 0===e&&(e={}),{name:"autoPlacement",options:e,async fn(t){var n,r,o;const{rects:i,middlewareData:l,placement:a,platform:c,elements:u}=t,{alignment:d,allowedPlacements:p=b,autoAlignment:m=!0,...y}=e,g=void 0!==d||p===b?function(e,t,n){return(e?[...n.filter((t=>s(t)===e)),...n.filter((t=>s(t)!==e))]:n.filter((e=>f(e)===e))).filter((n=>!e||s(n)===e||!!t&&S(n)!==n))}(d||null,m,p):p,v=await h(t,y),w=(null==(n=l.autoPlacement)?void 0:n.index)||0,x=g[w];if(null==x)return{};const{main:R,cross:T}=_(x,i,await(null==c.isRTL?void 0:c.isRTL(u.floating)));if(a!==x)return{reset:{placement:g[0]}};const O=[v[f(x)],v[R],v[T]],A=[...(null==(r=l.autoPlacement)?void 0:r.overflows)||[],{placement:x,overflows:O}],k=g[w+1];if(k)return{data:{index:w+1,overflows:A},reset:{placement:k}};const E=A.slice().sort(((e,t)=>e.overflows[0]-t.overflows[0])),j=null==(o=E.find((e=>{let{overflows:t}=e;return t.every((e=>e<=0))})))?void 0:o.placement,L=j||E[0].placement;return L!==a?{data:{index:w+1,overflows:A},reset:{placement:L}}:{}}}};const A=function(e){return void 0===e&&(e={}),{name:"flip",options:e,async fn(t){var n;const{placement:r,middlewareData:o,rects:i,initialPlacement:l,platform:a,elements:c}=t,{mainAxis:u=!0,crossAxis:d=!0,fallbackPlacements:p,fallbackStrategy:m="bestFit",fallbackAxisSideDirection:y="none",flipAlignment:g=!0,...v}=e,w=f(r),b=f(l)===l,x=await(null==a.isRTL?void 0:a.isRTL(c.floating)),T=p||(b||!g?[R(l)]:function(e){const t=R(e);return[S(e),t,S(t)]}(l));p||"none"===y||T.push(...function(e,t,n,r){const o=s(e);let i=function(e,t,n){const r=["left","right"],o=["right","left"],i=["top","bottom"],l=["bottom","top"];switch(e){case"top":case"bottom":return n?t?o:r:t?r:o;case"left":case"right":return t?i:l;default:return[]}}(f(e),"start"===n,r);return o&&(i=i.map((e=>e+"-"+o)),t&&(i=i.concat(i.map(S)))),i}(l,g,y,x));const O=[l,...T],A=await h(t,v),k=[];let E=(null==(n=o.flip)?void 0:n.overflows)||[];if(u&&k.push(A[w]),d){const{main:e,cross:t}=_(r,i,x);k.push(A[e],A[t])}if(E=[...E,{placement:r,overflows:k}],!k.every((e=>e<=0))){var j,L;const e=((null==(j=o.flip)?void 0:j.index)||0)+1,t=O[e];if(t)return{data:{index:e,overflows:E},reset:{placement:t}};let n=null==(L=E.find((e=>e.overflows[0]<=0)))?void 0:L.placement;if(!n)switch(m){case"bestFit":{var P;const e=null==(P=E.map((e=>[e.placement,e.overflows.filter((e=>e>0)).reduce(((e,t)=>e+t),0)])).sort(((e,t)=>e[1]-t[1]))[0])?void 0:P[0];e&&(n=e);break}case"initialPlacement":n=l}if(r!==n)return{reset:{placement:n}}}return{}}}},k=function(e){return void 0===e&&(e={}),{name:"inline",options:e,async fn(t){const{placement:n,elements:r,rects:o,platform:i,strategy:l}=t,{padding:a=2,x:c,y:s}=e,u=y(i.convertOffsetParentRelativeRectToViewportRelativeRect?await i.convertOffsetParentRelativeRectToViewportRelativeRect({rect:o.reference,offsetParent:await(null==i.getOffsetParent?void 0:i.getOffsetParent(r.floating)),strategy:l}):o.reference),p=await(null==i.getClientRects?void 0:i.getClientRects(r.reference))||[],h=m(a);const w=await i.getElementRects({reference:{getBoundingClientRect:function(){if(2===p.length&&p[0].left>p[1].right&&null!=c&&null!=s)return p.find((e=>c>e.left-h.left&&c<e.right+h.right&&s>e.top-h.top&&s<e.bottom+h.bottom))||u;if(p.length>=2){if("x"===d(n)){const e=p[0],t=p[p.length-1],r="top"===f(n),o=e.top,i=t.bottom,l=r?e.left:t.left,a=r?e.right:t.right;return{top:o,bottom:i,left:l,right:a,width:a-l,height:i-o,x:l,y:o}}const e="left"===f(n),t=v(...p.map((e=>e.right))),r=g(...p.map((e=>e.left))),o=p.filter((n=>e?n.left===r:n.right===t)),i=o[0].top,l=o[o.length-1].bottom;return{top:i,bottom:l,left:r,right:t,width:t-r,height:l-i,x:r,y:i}}return u}},floating:r.floating,strategy:l});return o.reference.x!==w.reference.x||o.reference.y!==w.reference.y||o.reference.width!==w.reference.width||o.reference.height!==w.reference.height?{reset:{rects:w}}:{}}}};const E=function(e){return void 0===e&&(e=0),{name:"offset",options:e,async fn(t){const{x:n,y:r}=t,o=await async function(e,t){const{placement:n,platform:r,elements:o}=e,i=await(null==r.isRTL?void 0:r.isRTL(o.floating)),l=f(n),a=s(n),c="x"===d(n),u=["left","top"].includes(l)?-1:1,p=i&&c?-1:1,m="function"==typeof t?t(e):t;let{mainAxis:y,crossAxis:h,alignmentAxis:g}="number"==typeof m?{mainAxis:m,crossAxis:0,alignmentAxis:null}:{mainAxis:0,crossAxis:0,alignmentAxis:null,...m};return a&&"number"==typeof g&&(h="end"===a?-1*g:g),c?{x:h*p,y:y*u}:{x:y*u,y:h*p}}(t,e);return{x:n+o.x,y:r+o.y,data:o}}}};const j=function(e){return void 0===e&&(e={}),{name:"shift",options:e,async fn(t){const{x:n,y:r,placement:o}=t,{mainAxis:i=!0,crossAxis:l=!1,limiter:a={fn:e=>{let{x:t,y:n}=e;return{x:t,y:n}}},...c}=e,s={x:n,y:r},u=await h(t,c),p=d(f(o)),m="x"===p?"y":"x";let y=s[p],g=s[m];if(i){const e="y"===p?"bottom":"right";y=w(y+u["y"===p?"top":"left"],y,y-u[e])}if(l){const e="y"===m?"bottom":"right";g=w(g+u["y"===m?"top":"left"],g,g-u[e])}const v=a.fn({...t,[p]:y,[m]:g});return{...v,data:{x:v.x-n,y:v.y-r}}}}},L=function(e){return void 0===e&&(e={}),{name:"size",options:e,async fn(t){const{placement:n,rects:r,platform:o,elements:i}=t,{apply:l=(()=>{}),...a}=e,c=await h(t,a),u=f(n),d=s(n);let p,m;"top"===u||"bottom"===u?(p=u,m=d===(await(null==o.isRTL?void 0:o.isRTL(i.floating))?"start":"end")?"left":"right"):(m=u,p="end"===d?"top":"bottom");const y=v(c.left,0),g=v(c.right,0),w=v(c.top,0),b=v(c.bottom,0),x={availableHeight:r.floating.height-(["left","right"].includes(n)?2*(0!==w||0!==b?w+b:v(c.top,c.bottom)):c[p]),availableWidth:r.floating.width-(["top","bottom"].includes(n)?2*(0!==y||0!==g?y+g:v(c.left,c.right)):c[m])};await l({...t,...x});const R=await o.getDimensions(i.floating);return r.floating.width!==R.width||r.floating.height!==R.height?{reset:{rects:!0}}:{}}}};function P(e){var t;return(null==(t=e.ownerDocument)?void 0:t.defaultView)||window}function D(e){return P(e).getComputedStyle(e)}const N=Math.min,F=Math.max,$=Math.round;function C(e){const t=D(e);let n=parseFloat(t.width),r=parseFloat(t.height);const o=e.offsetWidth,i=e.offsetHeight,l=$(n)!==o||$(r)!==i;return l&&(n=o,r=i),{width:n,height:r,fallback:l}}function I(e){return V(e)?(e.nodeName||"").toLowerCase():""}let W;function H(){if(W)return W;const e=navigator.userAgentData;return e&&Array.isArray(e.brands)?(W=e.brands.map((e=>e.brand+"/"+e.version)).join(" "),W):navigator.userAgent}function U(e){return e instanceof P(e).HTMLElement}function B(e){return e instanceof P(e).Element}function V(e){return e instanceof P(e).Node}function M(e){if("undefined"==typeof ShadowRoot)return!1;return e instanceof P(e).ShadowRoot||e instanceof ShadowRoot}function q(e){const{overflow:t,overflowX:n,overflowY:r,display:o}=D(e);return/auto|scroll|overlay|hidden|clip/.test(t+r+n)&&!["inline","contents"].includes(o)}function z(e){return["table","td","th"].includes(I(e))}function Y(e){const t=/firefox/i.test(H()),n=D(e),r=n.backdropFilter||n.WebkitBackdropFilter;return"none"!==n.transform||"none"!==n.perspective||!!r&&"none"!==r||t&&"filter"===n.willChange||t&&!!n.filter&&"none"!==n.filter||["transform","perspective"].some((e=>n.willChange.includes(e)))||["paint","layout","strict","content"].some((e=>{const t=n.contain;return null!=t&&t.includes(e)}))}function X(){return!/^((?!chrome|android).)*safari/i.test(H())}function K(e){return["html","body","#document"].includes(I(e))}function J(e){return B(e)?e:e.contextElement}const Z={x:1,y:1};function G(e){const t=J(e);if(!U(t))return Z;const n=t.getBoundingClientRect(),{width:r,height:o,fallback:i}=C(t);let l=(i?$(n.width):n.width)/r,a=(i?$(n.height):n.height)/o;return l&&Number.isFinite(l)||(l=1),a&&Number.isFinite(a)||(a=1),{x:l,y:a}}function Q(e,t,n,r){var o,i;void 0===t&&(t=!1),void 0===n&&(n=!1);const l=e.getBoundingClientRect(),a=J(e);let c=Z;t&&(r?B(r)&&(c=G(r)):c=G(e));const s=a?P(a):window,u=!X()&&n;let f=(l.left+(u&&(null==(o=s.visualViewport)?void 0:o.offsetLeft)||0))/c.x,d=(l.top+(u&&(null==(i=s.visualViewport)?void 0:i.offsetTop)||0))/c.y,p=l.width/c.x,m=l.height/c.y;if(a){const e=P(a),t=r&&B(r)?P(r):r;let n=e.frameElement;for(;n&&r&&t!==e;){const e=G(n),t=n.getBoundingClientRect(),r=getComputedStyle(n);t.x+=(n.clientLeft+parseFloat(r.paddingLeft))*e.x,t.y+=(n.clientTop+parseFloat(r.paddingTop))*e.y,f*=e.x,d*=e.y,p*=e.x,m*=e.y,f+=t.x,d+=t.y,n=P(n).frameElement}}return{width:p,height:m,top:d,right:f+p,bottom:d+m,left:f,x:f,y:d}}function ee(e){return((V(e)?e.ownerDocument:e.document)||window.document).documentElement}function te(e){return B(e)?{scrollLeft:e.scrollLeft,scrollTop:e.scrollTop}:{scrollLeft:e.pageXOffset,scrollTop:e.pageYOffset}}function ne(e){return Q(ee(e)).left+te(e).scrollLeft}function re(e){if("html"===I(e))return e;const t=e.assignedSlot||e.parentNode||M(e)&&e.host||ee(e);return M(t)?t.host:t}function oe(e){const t=re(e);return K(t)?t.ownerDocument.body:U(t)&&q(t)?t:oe(t)}function ie(e,t){var n;void 0===t&&(t=[]);const r=oe(e),o=r===(null==(n=e.ownerDocument)?void 0:n.body),i=P(r);return o?t.concat(i,i.visualViewport||[],q(r)?r:[]):t.concat(r,ie(r))}function le(e,t,n){return"viewport"===t?y(function(e,t){const n=P(e),r=ee(e),o=n.visualViewport;let i=r.clientWidth,l=r.clientHeight,a=0,c=0;if(o){i=o.width,l=o.height;const e=X();(e||!e&&"fixed"===t)&&(a=o.offsetLeft,c=o.offsetTop)}return{width:i,height:l,x:a,y:c}}(e,n)):B(t)?y(function(e,t){const n=Q(e,!0,"fixed"===t),r=n.top+e.clientTop,o=n.left+e.clientLeft,i=U(e)?G(e):{x:1,y:1};return{width:e.clientWidth*i.x,height:e.clientHeight*i.y,x:o*i.x,y:r*i.y}}(t,n)):y(function(e){const t=ee(e),n=te(e),r=e.ownerDocument.body,o=F(t.scrollWidth,t.clientWidth,r.scrollWidth,r.clientWidth),i=F(t.scrollHeight,t.clientHeight,r.scrollHeight,r.clientHeight);let l=-n.scrollLeft+ne(e);const a=-n.scrollTop;return"rtl"===D(r).direction&&(l+=F(t.clientWidth,r.clientWidth)-o),{width:o,height:i,x:l,y:a}}(ee(e)))}function ae(e){return U(e)&&"fixed"!==D(e).position?e.offsetParent:null}function ce(e){const t=P(e);let n=ae(e);for(;n&&z(n)&&"static"===D(n).position;)n=ae(n);return n&&("html"===I(n)||"body"===I(n)&&"static"===D(n).position&&!Y(n))?t:n||function(e){let t=re(e);for(;U(t)&&!K(t);){if(Y(t))return t;t=re(t)}return null}(e)||t}function se(e,t,n){const r=U(t),o=ee(t),i=Q(e,!0,"fixed"===n,t);let l={scrollLeft:0,scrollTop:0};const a={x:0,y:0};if(r||!r&&"fixed"!==n)if(("body"!==I(t)||q(o))&&(l=te(t)),U(t)){const e=Q(t,!0);a.x=e.x+t.clientLeft,a.y=e.y+t.clientTop}else o&&(a.x=ne(o));return{x:i.left+l.scrollLeft-a.x,y:i.top+l.scrollTop-a.y,width:i.width,height:i.height}}const ue={getClippingRect:function(e){let{element:t,boundary:n,rootBoundary:r,strategy:o}=e;const i="clippingAncestors"===n?function(e,t){const n=t.get(e);if(n)return n;let r=ie(e).filter((e=>B(e)&&"body"!==I(e))),o=null;const i="fixed"===D(e).position;let l=i?re(e):e;for(;B(l)&&!K(l);){const e=D(l),t=Y(l);(i?t||o:t||"static"!==e.position||!o||!["absolute","fixed"].includes(o.position))?o=e:r=r.filter((e=>e!==l)),l=re(l)}return t.set(e,r),r}(t,this._c):[].concat(n),l=[...i,r],a=l[0],c=l.reduce(((e,n)=>{const r=le(t,n,o);return e.top=F(r.top,e.top),e.right=N(r.right,e.right),e.bottom=N(r.bottom,e.bottom),e.left=F(r.left,e.left),e}),le(t,a,o));return{width:c.right-c.left,height:c.bottom-c.top,x:c.left,y:c.top}},convertOffsetParentRelativeRectToViewportRelativeRect:function(e){let{rect:t,offsetParent:n,strategy:r}=e;const o=U(n),i=ee(n);if(n===i)return t;let l={scrollLeft:0,scrollTop:0},a={x:1,y:1};const c={x:0,y:0};if((o||!o&&"fixed"!==r)&&(("body"!==I(n)||q(i))&&(l=te(n)),U(n))){const e=Q(n);a=G(n),c.x=e.x+n.clientLeft,c.y=e.y+n.clientTop}return{width:t.width*a.x,height:t.height*a.y,x:t.x*a.x-l.scrollLeft*a.x+c.x,y:t.y*a.y-l.scrollTop*a.y+c.y}},isElement:B,getDimensions:function(e){return U(e)?C(e):e.getBoundingClientRect()},getOffsetParent:ce,getDocumentElement:ee,getScale:G,async getElementRects(e){let{reference:t,floating:n,strategy:r}=e;const o=this.getOffsetParent||ce,i=this.getDimensions;return{reference:se(t,await o(n),r),floating:{x:0,y:0,...await i(n)}}},getClientRects:e=>Array.from(e.getClientRects()),isRTL:e=>"rtl"===D(e).direction},fe=(e,t,n)=>{const r=new Map,o={platform:ue,...n},i={...o.platform,_c:r};return(async(e,t,n)=>{const{placement:r="bottom",strategy:o="absolute",middleware:i=[],platform:l}=n,a=i.filter(Boolean),c=await(null==l.isRTL?void 0:l.isRTL(t));if(null==l&&console.error(["Floating UI: `platform` property was not passed to config. If you","want to use Floating UI on the web, install @floating-ui/dom","instead of the /core package. Otherwise, you can create your own","`platform`: https://floating-ui.com/docs/platform"].join(" ")),a.filter((e=>{let{name:t}=e;return"autoPlacement"===t||"flip"===t})).length>1)throw new Error(["Floating UI: duplicate `flip` and/or `autoPlacement` middleware","detected. This will lead to an infinite loop. Ensure only one of","either has been passed to the `middleware` array."].join(" "));e&&t||console.error(["Floating UI: The reference and/or floating element was not defined","when `computePosition()` was called. Ensure that both elements have","been created and can be measured."].join(" "));let s=await l.getElementRects({reference:e,floating:t,strategy:o}),{x:u,y:f}=p(s,r,c),d=r,m={},y=0;for(let n=0;n<a.length;n++){const{name:i,fn:h}=a[n],{x:g,y:v,data:w,reset:b}=await h({x:u,y:f,initialPlacement:r,placement:d,strategy:o,middlewareData:m,rects:s,platform:l,elements:{reference:e,floating:t}});u=null!=g?g:u,f=null!=v?v:f,m={...m,[i]:{...m[i],...w}},y>50&&console.warn(["Floating UI: The middleware lifecycle appears to be running in an","infinite loop. This is usually caused by a `reset` continually","being returned without a break condition."].join(" ")),b&&y<=50&&(y++,"object"==typeof b&&(b.placement&&(d=b.placement),b.rects&&(s=!0===b.rects?await l.getElementRects({reference:e,floating:t,strategy:o}):b.rects),({x:u,y:f}=p(s,d,c))),n=-1)}return{x:u,y:f,placement:d,strategy:o,middlewareData:m}})(e,t,{...o,platform:i})};var de,pe={exports:{}},me={};
/** @license React v16.14.0
 * react-jsx-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
de=me,function(){var t=react,n=60103,r=60106;de.Fragment=60107;var o=60108,i=60114,l=60109,a=60110,c=60112,s=60113,u=60120,f=60115,d=60116,p=60121,m=60122,y=60117,h=60129,g=60131;if("function"==typeof Symbol&&Symbol.for){var v=Symbol.for;n=v("react.element"),r=v("react.portal"),de.Fragment=v("react.fragment"),o=v("react.strict_mode"),i=v("react.profiler"),l=v("react.provider"),a=v("react.context"),c=v("react.forward_ref"),s=v("react.suspense"),u=v("react.suspense_list"),f=v("react.memo"),d=v("react.lazy"),p=v("react.block"),m=v("react.server.block"),y=v("react.fundamental"),v("react.scope"),v("react.opaque.id"),h=v("react.debug_trace_mode"),v("react.offscreen"),g=v("react.legacy_hidden")}var w="function"==typeof Symbol&&Symbol.iterator,b=t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function x(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];R("error",e,n)}function R(e,t,n){var r=b.ReactDebugCurrentFrame,o="";if(O){var i=T(O.type),l=O._owner;o+=function(e,t,n){var r="";if(t){var o=t.fileName,i=o.replace(_,"");if(/^index\./.test(i)){var l=o.match(_);if(l){var a=l[1];a&&(i=a.replace(_,"")+"/"+i)}}r=" (at "+i+":"+t.lineNumber+")"}else n&&(r=" (created by "+n+")");return"\n    in "+(e||"Unknown")+r}(i,O._source,l&&T(l.type))}""!==(o+=r.getStackAddendum())&&(t+="%s",n=n.concat([o]));var a=n.map((function(e){return""+e}));a.unshift("Warning: "+t),Function.prototype.apply.call(console[e],console,a)}var _=/^(.*)[\\\/]/;function T(e){if(null==e)return null;if("number"==typeof e.tag&&x("Received an unexpected object in getComponentName(). This is likely a bug in React. Please file an issue."),"function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case de.Fragment:return"Fragment";case r:return"Portal";case i:return"Profiler";case o:return"StrictMode";case s:return"Suspense";case u:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case a:return"Context.Consumer";case l:return"Context.Provider";case c:return m=e,y=e.render,h="ForwardRef",g=y.displayName||y.name||"",m.displayName||(""!==g?h+"("+g+")":h);case f:return T(e.type);case p:return T(e.render);case d:var t=1===(n=e)._status?n._result:null;if(t)return T(t)}var n,m,y,h,g;return null}var S={};b.ReactDebugCurrentFrame;var O=null;function A(e){O=e}var k,E,j,L=b.ReactCurrentOwner,P=Object.prototype.hasOwnProperty,D={key:!0,ref:!0,__self:!0,__source:!0};function N(e,t,r,o,i){var l,a={},c=null,s=null;for(l in void 0!==r&&(c=""+r),function(e){if(P.call(e,"key")){var t=Object.getOwnPropertyDescriptor(e,"key").get;if(t&&t.isReactWarning)return!1}return void 0!==e.key}(t)&&(c=""+t.key),function(e){if(P.call(e,"ref")){var t=Object.getOwnPropertyDescriptor(e,"ref").get;if(t&&t.isReactWarning)return!1}return void 0!==e.ref}(t)&&(s=t.ref,function(e,t){if("string"==typeof e.ref&&L.current&&t&&L.current.stateNode!==t){var n=T(L.current.type);j[n]||(x('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref',T(L.current.type),e.ref),j[n]=!0)}}(t,i)),t)P.call(t,l)&&!D.hasOwnProperty(l)&&(a[l]=t[l]);if(e&&e.defaultProps){var u=e.defaultProps;for(l in u)void 0===a[l]&&(a[l]=u[l])}if(c||s){var f="function"==typeof e?e.displayName||e.name||"Unknown":e;c&&function(e,t){var n=function(){k||(k=!0,x("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)",t))};n.isReactWarning=!0,Object.defineProperty(e,"key",{get:n,configurable:!0})}(a,f),s&&function(e,t){var n=function(){E||(E=!0,x("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)",t))};n.isReactWarning=!0,Object.defineProperty(e,"ref",{get:n,configurable:!0})}(a,f)}return function(e,t,r,o,i,l,a){var c={$$typeof:n,type:e,key:t,ref:r,props:a,_owner:l,_store:{}};return Object.defineProperty(c._store,"validated",{configurable:!1,enumerable:!1,writable:!0,value:!1}),Object.defineProperty(c,"_self",{configurable:!1,enumerable:!1,writable:!1,value:o}),Object.defineProperty(c,"_source",{configurable:!1,enumerable:!1,writable:!1,value:i}),Object.freeze&&(Object.freeze(c.props),Object.freeze(c)),c}(e,c,s,i,o,L.current,a)}j={};var F,$=b.ReactCurrentOwner;function C(e){O=e}function I(e){return"object"==typeof e&&null!==e&&e.$$typeof===n}function W(){if($.current){var e=T($.current.type);if(e)return"\n\nCheck the render method of `"+e+"`."}return""}b.ReactDebugCurrentFrame,F=!1;var H={};function U(e,t){if(e._store&&!e._store.validated&&null==e.key){e._store.validated=!0;var n=function(e){var t=W();if(!t){var n="string"==typeof e?e:e.displayName||e.name;n&&(t="\n\nCheck the top-level render call using <"+n+">.")}return t}(t);if(!H[n]){H[n]=!0;var r="";e&&e._owner&&e._owner!==$.current&&(r=" It was passed a child from "+T(e._owner.type)+"."),C(e),x('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.',n,r),C(null)}}}function B(e,t){if("object"==typeof e)if(Array.isArray(e))for(var n=0;n<e.length;n++){var r=e[n];I(r)&&U(r,t)}else if(I(e))e._store&&(e._store.validated=!0);else if(e){var o=function(e){if(null===e||"object"!=typeof e)return null;var t=w&&e[w]||e["@@iterator"];return"function"==typeof t?t:null}(e);if("function"==typeof o&&o!==e.entries)for(var i,l=o.call(e);!(i=l.next()).done;)I(i.value)&&U(i.value,t)}}function V(e){var t,n=e.type;if(null!=n&&"string"!=typeof n){if("function"==typeof n)t=n.propTypes;else{if("object"!=typeof n||n.$$typeof!==c&&n.$$typeof!==f)return;t=n.propTypes}if(t){var r=T(n);!function(e,t,n,r,o){var i=Function.call.bind(Object.prototype.hasOwnProperty);for(var l in e)if(i(e,l)){var a=void 0;try{if("function"!=typeof e[l]){var c=Error((r||"React class")+": "+n+" type `"+l+"` is invalid; it must be a function, usually from the `prop-types` package, but received `"+typeof e[l]+"`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");throw c.name="Invariant Violation",c}a=e[l](t,l,r,n,null,"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED")}catch(e){a=e}!a||a instanceof Error||(A(o),x("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).",r||"React class",n,l,typeof a),A(null)),a instanceof Error&&!(a.message in S)&&(S[a.message]=!0,A(o),x("Failed %s type: %s",n,a.message),A(null))}}(t,e.props,"prop",r,e)}else void 0===n.PropTypes||F||(F=!0,x("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?",T(n)||"Unknown"));"function"!=typeof n.getDefaultProps||n.getDefaultProps.isReactClassApproved||x("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.")}}function M(e,t,r,v,w,b){var R=function(e){return"string"==typeof e||"function"==typeof e||e===de.Fragment||e===i||e===h||e===o||e===s||e===u||e===g||"object"==typeof e&&null!==e&&(e.$$typeof===d||e.$$typeof===f||e.$$typeof===l||e.$$typeof===a||e.$$typeof===c||e.$$typeof===y||e.$$typeof===p||e[0]===m)}(e);if(!R){var _="";(void 0===e||"object"==typeof e&&null!==e&&0===Object.keys(e).length)&&(_+=" You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");var S,O=function(e){return void 0!==e?"\n\nCheck your code at "+e.fileName.replace(/^.*[\\\/]/,"")+":"+e.lineNumber+".":""}(w);_+=O||W(),null===e?S="null":Array.isArray(e)?S="array":void 0!==e&&e.$$typeof===n?(S="<"+(T(e.type)||"Unknown")+" />",_=" Did you accidentally export a JSX literal instead of a component?"):S=typeof e,x("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s",S,_)}var A=N(e,t,r,w,b);if(null==A)return A;if(R){var k=t.children;if(void 0!==k)if(v)if(Array.isArray(k)){for(var E=0;E<k.length;E++)B(k[E],e);Object.freeze&&Object.freeze(k)}else x("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");else B(k,e)}return e===de.Fragment?function(e){for(var t=Object.keys(e.props),n=0;n<t.length;n++){var r=t[n];if("children"!==r&&"key"!==r){C(e),x("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.",r),C(null);break}}null!==e.ref&&(C(e),x("Invalid attribute `ref` supplied to `React.Fragment`."),C(null))}(A):V(A),A}var q=function(e,t,n){return M(e,t,n,!1)},z=function(e,t,n){return M(e,t,n,!0)};de.jsx=q,de.jsxs=z}(),pe.exports=me;var ye,he={exports:{}};
/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/ye=he,function(){var e={}.hasOwnProperty;function t(){for(var n=[],r=0;r<arguments.length;r++){var o=arguments[r];if(o){var i=typeof o;if("string"===i||"number"===i)n.push(o);else if(Array.isArray(o)){if(o.length){var l=t.apply(null,o);l&&n.push(l)}}else if("object"===i){if(o.toString!==Object.prototype.toString&&!o.toString.toString().includes("[native code]")){n.push(o.toString());continue}for(var a in o)e.call(o,a)&&o[a]&&n.push(a)}}}return n.join(" ")}ye.exports?(t.default=t,ye.exports=t):window.classNames=t}();var ge=he.exports;const ve=(e,t,n)=>{let r=null;return function(...o){r&&clearTimeout(r),r=setTimeout((()=>{r=null,n||e.apply(this,o)}),t)}},we=({content:e})=>pe.exports.jsx("span",{dangerouslySetInnerHTML:{__html:e}}),be={anchorRefs:new Set,activeAnchor:{current:null},attach:()=>{},detach:()=>{},setActiveAnchor:()=>{}},xe=(0,react.createContext)({getTooltipData:()=>be}),Re=({children:e})=>{const[t,i]=n({DEFAULT_TOOLTIP_ID:new Set}),[l,a]=n({DEFAULT_TOOLTIP_ID:{current:null}}),c=(e,...t)=>{i((n=>{var r;const o=null!==(r=n[e])&&void 0!==r?r:new Set;return t.forEach((e=>o.add(e))),{...n,[e]:new Set(o)}}))},s=(e,...t)=>{i((n=>{const r=n[e];return r?(t.forEach((e=>r.delete(e))),{...n}):n}))},u=r(((e="DEFAULT_TOOLTIP_ID")=>{var n,r;return{anchorRefs:null!==(n=t[e])&&void 0!==n?n:new Set,activeAnchor:null!==(r=l[e])&&void 0!==r?r:{current:null},attach:(...t)=>c(e,...t),detach:(...t)=>s(e,...t),setActiveAnchor:t=>((e,t)=>{a((n=>{var r;return(null===(r=n[e])||void 0===r?void 0:r.current)===t.current?n:{...n,[e]:t}}))})(e,t)}}),[t,l,c,s]),f=o((()=>({getTooltipData:u})),[u]);return pe.exports.jsx(xe.Provider,{value:f,children:e})};function _e(e="DEFAULT_TOOLTIP_ID"){return (0,react.useContext)(xe).getTooltipData(e)}const Te=({tooltipId:e,children:t,className:n,place:r,content:o,html:i,variant:c,offset:s,wrapper:u,events:f,positionStrategy:d,delayShow:p,delayHide:m})=>{const{attach:y,detach:h}=_e(e),g=l(null);return a((()=>(y(g),()=>{h(g)})),[]),pe.exports.jsx("span",{ref:g,className:ge("react-tooltip-wrapper",n),"data-tooltip-place":r,"data-tooltip-content":o,"data-tooltip-html":i,"data-tooltip-variant":c,"data-tooltip-offset":s,"data-tooltip-wrapper":u,"data-tooltip-events":f,"data-tooltip-position-strategy":d,"data-tooltip-delay-show":p,"data-tooltip-delay-hide":m,children:t})},Se=async({elementReference:e=null,tooltipReference:t=null,tooltipArrowReference:n=null,place:r="top",offset:o=10,strategy:i="absolute",middlewares:l=[E(Number(o)),A(),j({padding:5})]})=>{if(!e)return{tooltipStyles:{},tooltipArrowStyles:{}};if(null===t)return{tooltipStyles:{},tooltipArrowStyles:{}};const a=l;return n?(a.push({name:"arrow",options:c={element:n,padding:5},async fn(e){const{element:t,padding:n=0}=c||{},{x:r,y:o,placement:i,rects:l,platform:a}=e;if(null==t)return console.warn("Floating UI: No `element` was passed to the `arrow` middleware."),{};const f=m(n),p={x:r,y:o},y=d(i),h=u(y),g=await a.getDimensions(t),v="y"===y?"top":"left",b="y"===y?"bottom":"right",x=l.reference[h]+l.reference[y]-p[y]-l.floating[h],R=p[y]-l.reference[y],_=await(null==a.getOffsetParent?void 0:a.getOffsetParent(t));let T=_?"y"===y?_.clientHeight||0:_.clientWidth||0:0;0===T&&(T=l.floating[h]);const S=x/2-R/2,O=f[v],A=T-g[h]-f[b],k=T/2-g[h]/2+S,E=w(O,k,A),j=null!=s(i)&&k!=E&&l.reference[h]/2-(k<O?f[v]:f[b])-g[h]/2<0;return{[y]:p[y]-(j?k<O?O-k:A-k:0),data:{[y]:E,centerOffset:k-E}}}}),fe(e,t,{placement:r,strategy:i,middleware:a}).then((({x:e,y:t,placement:n,middlewareData:r})=>{var o,i;const l={left:`${e}px`,top:`${t}px`},{x:a,y:c}=null!==(o=r.arrow)&&void 0!==o?o:{x:0,y:0};return{tooltipStyles:l,tooltipArrowStyles:{left:null!=a?`${a}px`:"",top:null!=c?`${c}px`:"",right:"",bottom:"",[null!==(i={top:"bottom",right:"left",bottom:"top",left:"right"}[n.split("-")[0]])&&void 0!==i?i:"bottom"]:"-4px"}}}))):fe(e,t,{placement:"bottom",strategy:i,middleware:a}).then((({x:e,y:t})=>({tooltipStyles:{left:`${e}px`,top:`${t}px`},tooltipArrowStyles:{}})));var c};var Oe={tooltip:"styles-module_tooltip__mnnfp",fixed:"styles-module_fixed__7ciUi",arrow:"styles-module_arrow__K0L3T","no-arrow":"styles-module_no-arrow__KcFZN",clickable:"styles-module_clickable__Bv9o7",show:"styles-module_show__2NboJ",dark:"styles-module_dark__xNqje",light:"styles-module_light__Z6W-X",success:"styles-module_success__A2AKt",warning:"styles-module_warning__SCK0X",error:"styles-module_error__JvumD",info:"styles-module_info__BWdHW"};const Ae=({id:e,className:t,classNameArrow:r,variant:o="dark",anchorId:i,anchorSelect:s,place:u="top",offset:f=10,events:d=["hover"],positionStrategy:p="absolute",middlewares:m,wrapper:y,children:h=null,delayShow:g=0,delayHide:v=0,float:w=!1,noArrow:b=!1,clickable:x=!1,closeOnEsc:R=!1,style:_,position:T,afterShow:S,afterHide:O,content:A,html:k,isOpen:E,setIsOpen:j,activeAnchor:L,setActiveAnchor:P})=>{const D=(0,react.useRef)(null),N=(0,react.useRef)(null),F=(0,react.useRef)(null),$=(0,react.useRef)(null),[C,I]=(0,react.useState)({}),[W,H]=(0,react.useState)({}),[U,B]=(0,react.useState)(!1),[V,M]=(0,react.useState)(!1),q=(0,react.useRef)(!1),z=(0,react.useRef)(null),{anchorRefs:Y,setActiveAnchor:X}=_e(e),K=(0,react.useRef)(!1),[J,Z]=(0,react.useState)([]),G=(0,react.useRef)(!1);(0,react.useEffect)((()=>{let t=s;if(!t&&e&&(t=`[data-tooltip-id='${e}']`),t)try{const e=Array.from(document.querySelectorAll(t));Z(e)}catch(e){Z([])}}),[s,L]),(0,react.useLayoutEffect)((()=>(G.current=!0,()=>{G.current=!1})),[]),(0,react.useEffect)((()=>{if(!U){const e=setTimeout((()=>{M(!1)}),150);return()=>{clearTimeout(e)}}return()=>null}),[U]);const Q=e=>{G.current&&(e&&M(!0),setTimeout((()=>{G.current&&(null==j||j(e),void 0===E&&B(e))}),10))};(0,react.useEffect)((()=>{if(void 0===E)return()=>null;E&&M(!0);const e=setTimeout((()=>{B(E)}),10);return()=>{clearTimeout(e)}}),[E]),(0,react.useEffect)((()=>{U!==q.current&&(q.current=U,U?null==S||S():null==O||O())}),[U]);const ee=(e=v)=>{$.current&&clearTimeout($.current),$.current=setTimeout((()=>{K.current||Q(!1)}),e)},te=e=>{var t;if(!e)return;g?(F.current&&clearTimeout(F.current),F.current=setTimeout((()=>{Q(!0)}),g)):Q(!0);const n=null!==(t=e.currentTarget)&&void 0!==t?t:e.target;P(n),X({current:n}),$.current&&clearTimeout($.current)},ne=()=>{x?ee(v||100):v?ee():Q(!1),F.current&&clearTimeout(F.current)},re=({x:e,y:t})=>{Se({place:u,offset:f,elementReference:{getBoundingClientRect:()=>({x:e,y:t,width:0,height:0,top:t,left:e,right:e,bottom:t})},tooltipReference:D.current,tooltipArrowReference:N.current,strategy:p,middlewares:m}).then((e=>{Object.keys(e.tooltipStyles).length&&I(e.tooltipStyles),Object.keys(e.tooltipArrowStyles).length&&H(e.tooltipArrowStyles)}))},oe=e=>{if(!e)return;const t=e,n={x:t.clientX,y:t.clientY};re(n),z.current=n},ie=e=>{te(e),v&&ee()},le=e=>{const t=document.querySelector(`[id='${i}']`);(null==t?void 0:t.contains(e.target))||J.some((t=>t.contains(e.target)))||Q(!1)},ae=e=>{"Escape"===e.key&&Q(!1)},ce=ve(te,50),se=ve(ne,50);(0,react.useEffect)((()=>{var e,t;const n=new Set(Y);J.forEach((e=>{n.add({current:e})}));const r=document.querySelector(`[id='${i}']`);if(r&&n.add({current:r}),!n.size)return()=>null;R&&window.addEventListener("keydown",ae);const o=[];d.find((e=>"click"===e))&&(window.addEventListener("click",le),o.push({event:"click",listener:ie})),d.find((e=>"hover"===e))&&(o.push({event:"mouseenter",listener:ce},{event:"mouseleave",listener:se},{event:"focus",listener:ce},{event:"blur",listener:se}),w&&o.push({event:"mousemove",listener:oe}));const l=()=>{K.current=!0},a=()=>{K.current=!1,ne()};x&&(null===(e=D.current)||void 0===e||e.addEventListener("mouseenter",l),null===(t=D.current)||void 0===t||t.addEventListener("mouseleave",a)),o.forEach((({event:e,listener:t})=>{n.forEach((n=>{var r;null===(r=n.current)||void 0===r||r.addEventListener(e,t)}))}));const c=new MutationObserver((e=>{L&&e.some((e=>"childList"===e.type&&[...e.removedNodes].some((e=>!!e.contains(L)&&(Q(!1),P(null),!0)))))}));return c.observe(document.body,{attributes:!1,childList:!0,subtree:!0}),()=>{var e,t;d.find((e=>"click"===e))&&window.removeEventListener("click",le),R&&window.removeEventListener("keydown",ae),x&&(null===(e=D.current)||void 0===e||e.removeEventListener("mouseenter",l),null===(t=D.current)||void 0===t||t.removeEventListener("mouseleave",a)),o.forEach((({event:e,listener:t})=>{n.forEach((n=>{var r;null===(r=n.current)||void 0===r||r.removeEventListener(e,t)}))})),c.disconnect()}}),[V,Y,L,R,d,v,g]),(0,react.useEffect)((()=>{T?re(T):w?z.current&&re(z.current):Se({place:u,offset:f,elementReference:L,tooltipReference:D.current,tooltipArrowReference:N.current,strategy:p,middlewares:m}).then((e=>{G.current&&(Object.keys(e.tooltipStyles).length&&I(e.tooltipStyles),Object.keys(e.tooltipArrowStyles).length&&H(e.tooltipArrowStyles))}))}),[U,L,A,k,u,f,p,T]),(0,react.useEffect)((()=>{var e;const t=document.querySelector(`[id='${i}']`),n=[...J,t];L&&n.includes(L)||P(null!==(e=J[0])&&void 0!==e?e:t)}),[i,J,L]),(0,react.useEffect)((()=>()=>{F.current&&clearTimeout(F.current),$.current&&clearTimeout($.current)}),[]);const ue=Boolean(k||A||h)&&U&&Object.keys(C).length>0;return V?pe.exports.jsxs(y,{id:e,role:"tooltip",className:ge("react-tooltip",Oe.tooltip,Oe[o],t,{[Oe.show]:ue,[Oe.fixed]:"fixed"===p,[Oe.clickable]:x}),style:{..._,...C},ref:D,children:[k&&pe.exports.jsx(we,{content:k})||A||h,pe.exports.jsx(y,{className:ge("react-tooltip-arrow",Oe.arrow,r,{[Oe["no-arrow"]]:b}),style:W,ref:N})]}):null},ke=({id:e,anchorId:t,anchorSelect:r,content:o,html:i,className:l,classNameArrow:c,variant:s="dark",place:u="top",offset:f=10,wrapper:d="div",children:p=null,events:m=["hover"],positionStrategy:y="absolute",middlewares:h,delayShow:g=0,delayHide:v=0,float:w=!1,noArrow:b=!1,clickable:x=!1,closeOnEsc:R=!1,style:_,position:T,isOpen:S,setIsOpen:O,afterShow:A,afterHide:k})=>{const[E,j]=(0,react.useState)(o),[L,P]=(0,react.useState)(i),[D,N]=(0,react.useState)(u),[F,$]=(0,react.useState)(s),[C,I]=(0,react.useState)(f),[W,H]=(0,react.useState)(g),[U,B]=(0,react.useState)(v),[V,M]=(0,react.useState)(w),[q,z]=(0,react.useState)(d),[Y,X]=(0,react.useState)(m),[K,J]=(0,react.useState)(y),[Z,G]=(0,react.useState)(null),{anchorRefs:Q,activeAnchor:ee}=_e(e),te=e=>null==e?void 0:e.getAttributeNames().reduce(((t,n)=>{var r;if(n.startsWith("data-tooltip-")){t[n.replace(/^data-tooltip-/,"")]=null!==(r=null==e?void 0:e.getAttribute(n))&&void 0!==r?r:null}return t}),{}),ne=e=>{const t={place:e=>{var t;N(null!==(t=e)&&void 0!==t?t:u)},content:e=>{j(null!=e?e:o)},html:e=>{P(null!=e?e:i)},variant:e=>{var t;$(null!==(t=e)&&void 0!==t?t:s)},offset:e=>{I(null===e?f:Number(e))},wrapper:e=>{var t;z(null!==(t=e)&&void 0!==t?t:d)},events:e=>{const t=null==e?void 0:e.split(" ");X(null!=t?t:m)},"position-strategy":e=>{var t;J(null!==(t=e)&&void 0!==t?t:y)},"delay-show":e=>{H(null===e?g:Number(e))},"delay-hide":e=>{B(null===e?v:Number(e))},float:e=>{M(null===e?w:Boolean(e))}};Object.values(t).forEach((e=>e(null))),Object.entries(e).forEach((([e,n])=>{var r;null===(r=t[e])||void 0===r||r.call(t,n)}))};(0,react.useEffect)((()=>{j(o)}),[o]),(0,react.useEffect)((()=>{P(i)}),[i]),(0,react.useEffect)((()=>{N(u)}),[u]),(0,react.useEffect)((()=>{var n;const o=new Set(Q);let i=r;if(!i&&e&&(i=`[data-tooltip-id='${e}']`),i)try{document.querySelectorAll(i).forEach((e=>{o.add({current:e})}))}catch(e){console.warn(`[react-tooltip] "${r}" is not a valid CSS selector`)}const l=document.querySelector(`[id='${t}']`);if(l&&o.add({current:l}),!o.size)return()=>null;const a=null!==(n=null!=Z?Z:l)&&void 0!==n?n:ee.current,c=new MutationObserver((e=>{e.forEach((e=>{var t;if(!a||"attributes"!==e.type||!(null===(t=e.attributeName)||void 0===t?void 0:t.startsWith("data-tooltip-")))return;const n=te(a);ne(n)}))})),s={attributes:!0,childList:!1,subtree:!1};if(a){const e=te(a);ne(e),c.observe(a,s)}return()=>{c.disconnect()}}),[Q,ee,Z,t,r]);const re={id:e,anchorId:t,anchorSelect:r,className:l,classNameArrow:c,content:E,html:L,place:D,variant:F,offset:C,wrapper:q,events:Y,positionStrategy:K,middlewares:h,delayShow:W,delayHide:U,float:V,noArrow:b,clickable:x,closeOnEsc:R,style:_,position:T,isOpen:S,setIsOpen:O,afterShow:A,afterHide:k,activeAnchor:Z,setActiveAnchor:e=>G(e)};return p?pe.exports.jsx(Ae,{...re,children:p}):pe.exports.jsx(Ae,{...re})};

// EXTERNAL MODULE: ./src/main/client/ts/components/VariantRules/GameVariantRule.tsx
var GameVariantRule = __webpack_require__(13540);
// EXTERNAL MODULE: ./src/main/client/ts/components/VariantRules/GameVariantRules.module.scss
var GameVariantRules_module = __webpack_require__(49330);
;// CONCATENATED MODULE: ./src/main/client/ts/components/VariantRules/GameVariantRulesList.tsx










var verifyParameterValue = (parameterValue, properties, tag) => properties.tag === tag;
var GameMetadataRules = () => {
  var id = (0,react.useContext)(BoardContext/* GameDisplayContext */.$).id;
  var variantData = (0,es/* useSelector */.v9)(state => (0,GameBoardSlice/* selectGameBoardVariantData */.C0)(state, id));
  var variantRules = (0,es/* useSelector */.v9)(state => (0,GameBoardSlice/* selectGameBoardRules */.G3)(state, id));
  var initiallyAlivePlayers = (0,es/* useSelector */.v9)(state => (0,GameBoardSlice/* selectGameBoard */.I3)(state, id).initiallyAliveColors.filter(Boolean).length);
  var variantType = (0,es/* useSelector */.v9)(state => (0,GameBoardSlice/* selectGameBoardType */.SN)(state, id));
  var promotionInfo = {};
  var isPromotionSet = false;
  var resultingList = variantRules.map(variantRulePublicProperties => {
    var parameterValue = variantRulePublicProperties.parameterValue,
      information = variantRulePublicProperties.information;
    var isSimpleRule = true;
    if (information.tag === "enPassant") {
      return null;
    } else if (verifyParameterValue(parameterValue, information, "stalemateOptions")) {
      if (parameterValue === "draw" && (variantType === GameData/* VariantType.Teams */.Jy.Teams || initiallyAlivePlayers === 2) || parameterValue === "win" && initiallyAlivePlayers > 2) {
        return null;
      }
    } else if (verifyParameterValue(parameterValue, information, "promotionRank")) {
      promotionInfo.promotionRank = {
        rank: parameterValue,
        description: information.description
      };
      isSimpleRule = false;
    } else if (verifyParameterValue(parameterValue, information, "promotionPieces")) {
      promotionInfo.promotionPieces = {
        pieces: parameterValue,
        description: information.description
      };
      isSimpleRule = false;
    } else if (information.tag === "stonewall") {
      return /*#__PURE__*/react.createElement(react.Fragment, {
        key: information.tag
      }, /*#__PURE__*/react.createElement(GameVariantRule/* GameStonewallRule */.aM, {
        description: information.description
      }));
    }
    if (!isPromotionSet && promotionInfo.promotionPieces && promotionInfo.promotionRank) {
      isPromotionSet = true;
      return /*#__PURE__*/react.createElement(react.Fragment, {
        key: "promotion"
      }, /*#__PURE__*/react.createElement(GameVariantRule/* GamePromotionRule */.xc, {
        promotionPieces: promotionInfo.promotionPieces,
        promotionRank: promotionInfo.promotionRank
      }));
    } else if (isSimpleRule) {
      return /*#__PURE__*/react.createElement(react.Fragment, {
        key: information.tag
      }, /*#__PURE__*/react.createElement(GameVariantRule/* GameVariantRule */.K9, {
        information: information
      }));
    }
  });
  if (!variantData.enPassant) {
    resultingList.push( /*#__PURE__*/react.createElement(react.Fragment, {
      key: "noEnPassant"
    }, /*#__PURE__*/react.createElement(GameVariantRule/* GameVariantRule */.K9, {
      information: {
        name: "No En Passant",
        description: "Pawns cannot capture en passant",
        tag: "enPassant",
        color: VariantRuleInterface/* variantRuleColors.minor */.p.minor,
        displayIcon: chessGlyphIndex/* chessGlyphIndex.pawnConnection */.w.pawnConnection
      },
      specialTag: GameVariantRule/* SpecialTag.NoEnPassant */.I5.NoEnPassant
    })));
  }
  return /*#__PURE__*/react.createElement("div", {
    className: GameVariantRules_module/* default.variant-rules */.Z["variant-rules"]
  }, resultingList, /*#__PURE__*/react.createElement(ke, {
    id: GameVariantRule/* tooltipID */.dY,
    place: "top",
    className: GameVariantRules_module/* default.variant-rule-tooltip */.Z["variant-rule-tooltip"]
  }));
};
// EXTERNAL MODULE: ./src/main/client/ts/templates/GameController/GameVariantTypeDisplay.tsx
var GameVariantTypeDisplay = __webpack_require__(5631);
// EXTERNAL MODULE: ./src/main/client/ts/templates/TemplateInterface.tsx
var TemplateInterface = __webpack_require__(59793);
// EXTERNAL MODULE: ./src/main/client/ts/components/BoardComponents/BoardPlaceholder/BoardPlaceholder.module.scss
var BoardPlaceholder_module = __webpack_require__(33432);
// EXTERNAL MODULE: ./src/main/client/ts/components/BoardComponents/BoardPlaceholder/PlaceholderInterface.tsx + 8 modules
var PlaceholderInterface = __webpack_require__(97118);
// EXTERNAL MODULE: ./src/main/client/ts/baseTypes.ts
var baseTypes = __webpack_require__(18027);
;// CONCATENATED MODULE: ./src/main/client/ts/components/BoardComponents/BoardPlaceholder/GameControllerPlaceholder.tsx





var GameControllerPlaceholder = _ref => {
  var enabled = _ref.enabled;
  return /*#__PURE__*/react.createElement(PlaceholderInterface/* PlaceholderWrapper */.l, {
    enabled: enabled
  }, /*#__PURE__*/react.createElement("div", null, /*#__PURE__*/react.createElement("div", {
    className: "".concat(BoardPlaceholder_module/* default.placeholder__image-loading */.Z["placeholder__image-loading"], " ").concat(BoardPlaceholder_module/* default.placeholder__image-loading--large-sized */.Z["placeholder__image-loading--large-sized"])
  }), /*#__PURE__*/react.createElement("div", {
    className: BoardPlaceholder_module/* default.placeholder__background */.Z.placeholder__background
  }, (0,baseTypes/* createTupleFromCallback */.fi)((_, i) => /*#__PURE__*/react.createElement("div", {
    key: i,
    className: BoardPlaceholder_module/* default.placeholder__background-text */.Z["placeholder__background-text"]
  }), GameData/* boardDimension */.iJ))));
};
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./src/main/client/ts/components/BoardEditorSidebar/EditorSidebar.module.scss
var EditorSidebar_module = __webpack_require__(54002);
;// CONCATENATED MODULE: ./src/main/client/ts/components/BoardEditorSidebar/EditorSidebar.module.scss

            

var EditorSidebar_module_options = {};

EditorSidebar_module_options.insert = "head";
EditorSidebar_module_options.singleton = false;

var EditorSidebar_module_update = injectStylesIntoStyleTag_default()(EditorSidebar_module/* default */.Z, EditorSidebar_module_options);



/* harmony default export */ var BoardEditorSidebar_EditorSidebar_module = (EditorSidebar_module/* default.locals */.Z.locals || {});
// EXTERNAL MODULE: ./src/main/client/ts/redux/SidebarEditor/SidebarEditorSlice.ts
var SidebarEditorSlice = __webpack_require__(72241);
// EXTERNAL MODULE: ./src/main/client/ts/logic/utils/Tags/TagLogic/FENDataTag.ts
var FENDataTag = __webpack_require__(80913);
// EXTERNAL MODULE: ./src/main/client/ts/components/BoardComponents/GameDisplay/GameSquareWrap.tsx + 1 modules
var GameSquareWrap = __webpack_require__(52423);
// EXTERNAL MODULE: ./src/main/client/ts/components/BoardComponents/GameDisplay/GameDisplaySquare.tsx + 1 modules
var GameDisplaySquare = __webpack_require__(59065);
// EXTERNAL MODULE: ./src/main/client/ts/components/BoardComponents/GameDisplay/GameDisplayPlayerBox.tsx + 1 modules
var GameDisplayPlayerBox = __webpack_require__(58924);
;// CONCATENATED MODULE: ./src/main/client/ts/components/BoardEditorSidebar/EditorBoard.tsx
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }










var EditorBoard = props => {
  var _useContext = (0,react.useContext)(BoardContext/* GameDisplayContext */.$),
    id = _useContext.id;
  var dispatch = (0,es/* useDispatch */.I0)();
  var boardSquares = (0,es/* useSelector */.v9)(state => (0,SidebarEditorSlice/* selectEditorBoardSquares */.Ch)(state, id));
  var fenSettings = (0,es/* useSelector */.v9)(state => (0,SidebarEditorSlice/* selectEditorFENSettings */.SG)(state, id));
  var _onDrag = (0,react.useCallback)((e, coordinate) => {
    e.preventDefault();
    dispatch((0,SidebarEditorSlice/* setCurrentDroppedPiece */.yN)({
      id,
      piece: coordinate
    }));
  }, [dispatch, id]);
  var cssProperties = (0,GameDisplay/* getCSSPropertiesFromDimension */.uh)(fenSettings.fenOptions.dim),
    dimensionMax = Math.max(...fenSettings.fenOptions.dim);
  return /*#__PURE__*/react.createElement("div", {
    className: BoardEditorSidebar_EditorSidebar_module.board,
    style: cssProperties
  }, boardSquares.map((r, initialI) => {
    return /*#__PURE__*/react.createElement("div", {
      className: BoardEditorSidebar_EditorSidebar_module["board-row"],
      key: initialI
    }, r.map((_, initialJ) => {
      if ((0,FENDataTag/* checkDimensionIntersection */.u)([dimensionMax, dimensionMax], [initialI, initialJ])) return null;
      var _alterCoordinate = (0,GameDisplay/* alterCoordinate */.Hn)([initialI, initialJ], props.currentPerspective),
        _alterCoordinate2 = _slicedToArray(_alterCoordinate, 2),
        i = _alterCoordinate2[0],
        j = _alterCoordinate2[1];
      return /*#__PURE__*/react.createElement("div", {
        draggable: true,
        onDrag: e => _onDrag(e, [initialI, initialJ]),
        onDragOver: e => e.preventDefault(),
        onDrop: () => dispatch((0,SidebarEditorSlice/* dropPiece */.dp)({
          id,
          endCoordinate: [initialI, initialJ]
        })),
        key: "".concat(i, "-").concat(j)
      }, /*#__PURE__*/react.createElement(GameSquareWrap/* GameDisplaySquareWrap */.y, null, /*#__PURE__*/react.createElement(GameDisplaySquare/* GameDisplaySquare */.X, {
        pieceString: boardSquares[i][j],
        displaySettings: []
      })));
    }));
  }), /*#__PURE__*/react.createElement(GameDisplayPlayerBox/* PlayerBoxContainer */.F, null));
};
;// CONCATENATED MODULE: ./src/main/client/ts/components/BoardEditorSidebar/DimensionSelect.tsx






var dimensionValues = [...Array(GameData/* boardDimension */.iJ).keys()].map(k => k + 1).filter(k => k % 2 === 0);
var DimensionSelect = () => {
  var _useContext = (0,react.useContext)(BoardContext/* GameDisplayContext */.$),
    id = _useContext.id;
  var dispatch = (0,es/* useDispatch */.I0)();
  var dimension = (0,es/* useSelector */.v9)(state => (0,SidebarEditorSlice/* selectEditorFENSettings */.SG)(state, id).fenOptions.dim);
  var onValueChanged = (0,react.useCallback)((selectedId, newValue) => {
    dispatch((0,SidebarEditorSlice/* changeDimensionValue */.Tm)({
      id,
      selectedId,
      newValue: Number(newValue)
    }));
  }, [dispatch, id]);
  return /*#__PURE__*/react.createElement("div", {
    className: BoardEditorSidebar_EditorSidebar_module["board-settings__dimension"]
  }, /*#__PURE__*/react.createElement("select", {
    className: BoardEditorSidebar_EditorSidebar_module["board-settings__dimension-select"],
    value: dimension[0],
    onChange: e => onValueChanged(0, e.target.value)
  }, dimensionValues.map(v => /*#__PURE__*/react.createElement("option", {
    value: v,
    key: v,
    className: BoardEditorSidebar_EditorSidebar_module["board-settings__dimension-select-option"]
  }, v))), /*#__PURE__*/react.createElement("span", null, "x"), /*#__PURE__*/react.createElement("select", {
    className: BoardEditorSidebar_EditorSidebar_module["board-settings__dimension-select"],
    value: dimension[1],
    onChange: e => onValueChanged(1, e.target.value)
  }, dimensionValues.map(v => /*#__PURE__*/react.createElement("option", {
    value: v,
    key: v,
    className: BoardEditorSidebar_EditorSidebar_module["board-settings__dimension-select-option"]
  }, v))));
};
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/GameInformation/GameUnits/PieceString.ts
var PieceString = __webpack_require__(20915);
;// CONCATENATED MODULE: ./src/main/client/ts/components/BoardEditorSidebar/BoardSettingsButtons.tsx








var BoardSettingsButtons = () => {
  var _useContext = (0,react.useContext)(BoardContext/* GameDisplayContext */.$),
    id = _useContext.id,
    themeContext = (0,react.useContext)(PieceThemeContext/* UserContext */.St);
  var dispatch = (0,es/* useDispatch */.I0)();
  var _useSelector = (0,es/* useSelector */.v9)(state => (0,SidebarEditorSlice/* selectEditorFENSettings */.SG)(state, id)),
    _useSelector$fenOptio = _useSelector.fenOptions,
    wb = _useSelector$fenOptio.wb,
    noCorners = _useSelector$fenOptio.noCorners,
    boxOffset = _useSelector$fenOptio.boxOffset;
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("button", {
    className: BoardEditorSidebar_EditorSidebar_module["board-settings-button"],
    onClick: () => dispatch((0,SidebarEditorSlice/* toggleBooleanValue */.fU)({
      id,
      option: "noCorners"
    }))
  }, /*#__PURE__*/react.createElement("span", {
    className: "".concat(BoardEditorSidebar_EditorSidebar_module["board-settings-button__icon"], " ").concat(noCorners ? BoardEditorSidebar_EditorSidebar_module["board-settings-button__icon--no-corners-on"] : BoardEditorSidebar_EditorSidebar_module["board-settings-button__icon--no-corners-off"])
  })), /*#__PURE__*/react.createElement("button", {
    className: BoardEditorSidebar_EditorSidebar_module["board-settings-button"],
    onClick: () => dispatch((0,SidebarEditorSlice/* toggleBooleanValue */.fU)({
      id,
      option: "wb"
    }))
  }, wb ? /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("span", {
    style: {
      color: (0,Colors/* wrapIndexedColor */.Hi)(themeContext.colors.pieceColors[0])
    }
  }, "4"), /*#__PURE__*/react.createElement("span", {
    style: {
      color: (0,Colors/* wrapIndexedColor */.Hi)(themeContext.colors.pieceColors[1])
    }
  }, "P"), /*#__PURE__*/react.createElement("span", {
    style: {
      color: (0,Colors/* wrapIndexedColor */.Hi)(themeContext.colors.pieceColors[2])
    }
  }, "C")) : /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("span", {
    style: {
      color: (0,Colors/* wrapIndexedColor */.Hi)(themeContext.colors.whiteBlackColors[0])
    }
  }, "B"), /*#__PURE__*/react.createElement("span", {
    style: {
      color: (0,Colors/* wrapIndexedColor */.Hi)(themeContext.colors.pieceColors[PieceString/* deadColorIndex */.Ir])
    }
  }, "&"), /*#__PURE__*/react.createElement("span", {
    style: {
      color: (0,Colors/* wrapIndexedColor */.Hi)(themeContext.colors.whiteBlackColors[0])
    }
  }, "W"))), /*#__PURE__*/react.createElement("button", {
    className: BoardEditorSidebar_EditorSidebar_module["board-settings-button"],
    onClick: () => dispatch((0,SidebarEditorSlice/* changeNumericColorValue */.LY)({
      id,
      option: "boxOffset"
    }))
  }, /*#__PURE__*/react.createElement("span", {
    className: "".concat(BoardEditorSidebar_EditorSidebar_module["board-settings-button__icon"], " ").concat(BoardEditorSidebar_EditorSidebar_module["board-settings-button__icon--box-offset"]),
    style: {
      color: (0,Colors/* wrapIndexedColor */.Hi)(themeContext.colors.pieceColors[boxOffset]),
      transform: "rotate(".concat(boxOffset * 90, "deg)")
    }
  })));
};
// EXTERNAL MODULE: ./node_modules/react-modal/lib/index.js
var lib = __webpack_require__(34823);
var lib_default = /*#__PURE__*/__webpack_require__.n(lib);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/VariantRules/VariantRule.ts
var VariantRule = __webpack_require__(75942);
// EXTERNAL MODULE: ./node_modules/reselect/es/index.js + 1 modules
var reselect_es = __webpack_require__(13806);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/FENData/FENData.ts + 1 modules
var FENData = __webpack_require__(26814);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/PieceControlDecorators/PromoteTo.ts
var PromoteTo = __webpack_require__(96823);
;// CONCATENATED MODULE: ./src/main/client/ts/components/BoardEditorSidebar/EditVariantRules.tsx
function EditVariantRules_slicedToArray(arr, i) { return EditVariantRules_arrayWithHoles(arr) || EditVariantRules_iterableToArrayLimit(arr, i) || EditVariantRules_unsupportedIterableToArray(arr, i) || EditVariantRules_nonIterableRest(); }
function EditVariantRules_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function EditVariantRules_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return EditVariantRules_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return EditVariantRules_arrayLikeToArray(o, minLen); }
function EditVariantRules_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function EditVariantRules_iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function EditVariantRules_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }













var selectVariantRules = () => (0,reselect_es/* createSelector */.P1)([SidebarEditorSlice/* selectEditorVariantDataRules */.UD], variantData => {
  return VariantRule/* VariantRule.variantRuleList.map */.$.variantRuleList.map(rv => {
    var variantRule = new rv();
    return new rv(variantData[variantRule.getPublicProperties().information.tag]);
  });
});
var selectFENOptionTags = () => (0,reselect_es/* createSelector */.P1)([SidebarEditorSlice/* selectEditorFENSettings */.SG], fenSettings => {
  return FENData/* FENOptions.loadSerializedState */.m.loadSerializedState(fenSettings.fenOptions);
});
var selectPromotionPieces = () => (0,reselect_es/* createSelector */.P1)([SidebarEditorSlice/* selectEditorVariantDataRules */.UD], variantData => {
  var promotionPieces = variantData.promotionPieces || undefined;
  (0,baseTypes/* assertNonUndefined */.lM)(promotionPieces);
  return promotionPieces.join("");
});
var tooltipID = "variantRuleGridTooltip";
var VariantRuleGridItems = props => {
  var dispatch = (0,es/* useDispatch */.I0)();
  var _useContext = (0,react.useContext)(BoardContext/* GameDisplayContext */.$),
    id = _useContext.id;
  var variantData = (0,es/* useSelector */.v9)(state => (0,SidebarEditorSlice/* selectEditorVariantDataRules */.UD)(state, id));
  var gameType = (0,es/* useSelector */.v9)(state => (0,SidebarEditorSlice/* selectEditorVariantType */.yb)(state, id));
  var ruleProperties = props.ruleProperties,
    rules = props.rules,
    fenTags = props.fenTags;
  var toggleVariantRule = (0,react.useCallback)(option => {
    dispatch((0,SidebarEditorSlice/* toggleBooleanVariantRule */.Rh)({
      id,
      option
    }));
  }, [dispatch, id]);
  return /*#__PURE__*/react.createElement("div", {
    className: BoardEditorSidebar_EditorSidebar_module["variant-boolean-rules"]
  }, ruleProperties.map(_ref => {
    var information = _ref.information;
    var isEnabled = variantData[information.tag];
    var rule = rules.find(v => v.getPublicProperties().information.tag === information.tag);
    (0,baseTypes/* assertNonUndefined */.lM)(rule);
    var isNotAllowed = rule.isDisabled({
      variantDataRules: variantData,
      gameType,
      fenTags
    });
    return /*#__PURE__*/react.createElement("div", {
      "data-tooltip-id": tooltipID,
      "data-tooltip-content": information.description,
      "data-tooltip-position-strategy": "fixed",
      key: "".concat(information.tag).concat(Number(isEnabled)).concat(Number(isNotAllowed)),
      className: "".concat(BoardEditorSidebar_EditorSidebar_module["variant-boolean-rule"], " ").concat(isEnabled && !isNotAllowed ? BoardEditorSidebar_EditorSidebar_module["variant-boolean-rule--enabled"] : "", " ").concat(isNotAllowed ? BoardEditorSidebar_EditorSidebar_module["variant-boolean-rule--not-allowed"] : ""),
      onClick: () => !isNotAllowed && toggleVariantRule(information.tag)
    }, /*#__PURE__*/react.createElement("span", {
      className: BoardEditorSidebar_EditorSidebar_module["variant-boolean-rule__name"]
    }, information.name), /*#__PURE__*/react.createElement("span", {
      className: BoardEditorSidebar_EditorSidebar_module["variant-boolean-rule__icon"]
    }, information.displayIcon));
  }), /*#__PURE__*/react.createElement(ke, {
    id: tooltipID,
    place: "top",
    className: BoardEditorSidebar_EditorSidebar_module["variant-boolean-rules__tooltip"]
  }));
};
var verifyParametrizedPublicProperties = (properties, rv) => properties.parameterValue !== true && rv.getParametrizedOptions !== undefined;
var VariantRuleParametrizedItems = props => {
  var dispatch = (0,es/* useDispatch */.I0)();
  var _useContext2 = (0,react.useContext)(BoardContext/* GameDisplayContext */.$),
    id = _useContext2.id;
  var variantData = (0,es/* useSelector */.v9)(state => (0,SidebarEditorSlice/* selectEditorVariantDataRules */.UD)(state, id));
  var gameType = (0,es/* useSelector */.v9)(state => (0,SidebarEditorSlice/* selectEditorVariantType */.yb)(state, id));
  var promotionPiecesSelector = (0,react.useMemo)(() => selectPromotionPieces(), []);
  var promotionPieces = (0,es/* useSelector */.v9)(state => promotionPiecesSelector(state, id));
  var uniqueId = (0,react.useId)();
  var updatePromotionPieces = (0,react.useCallback)(newValue => {
    var filteredPieces = PromoteTo.PromoteTo.filterPromotionPieceString(newValue);
    if (filteredPieces.join("") !== promotionPieces) {
      dispatch((0,SidebarEditorSlice/* changeParametrizedVariantRule */.Ug)({
        id,
        option: "promotionPieces",
        newValue: filteredPieces
      }));
    }
  }, [dispatch, id, promotionPieces]);
  return /*#__PURE__*/react.createElement("div", {
    className: BoardEditorSidebar_EditorSidebar_module["parametrized-variant-rules"]
  }, /*#__PURE__*/react.createElement("div", {
    className: BoardEditorSidebar_EditorSidebar_module["parametrized-variant-rule"]
  }, /*#__PURE__*/react.createElement("label", {
    htmlFor: "".concat(id, "promotionPieces"),
    className: BoardEditorSidebar_EditorSidebar_module["parametrized-variant-rule__name"]
  }, "Pawns promote to"), /*#__PURE__*/react.createElement("input", {
    id: "".concat(id, "promotionPieces"),
    className: BoardEditorSidebar_EditorSidebar_module["parametrized-variant-rule__input"],
    value: promotionPieces,
    onChange: e => updatePromotionPieces(e.target.value)
  })), props.rules.map(rv => {
    var publicProperties = rv.getPublicProperties();
    if (!verifyParametrizedPublicProperties(publicProperties, rv) || !rv.getParametrizedOptions || rv.isDisabled({
      variantDataRules: variantData,
      fenTags: props.fenTags,
      gameType
    })) {
      return null;
    }
    var labelId = "".concat(uniqueId, "-").concat(publicProperties.information.tag);
    var selectOptions = [],
      entries = [...rv.getParametrizedOptions().entries()];
    var selectedIndex = 0;
    for (var i = 0; i < entries.length; i++) {
      selectOptions.push( /*#__PURE__*/react.createElement("option", {
        key: entries[i][0],
        value: i
      }, entries[i][0]));
      if (entries[i][1] === publicProperties.parameterValue) selectedIndex = i;
    }
    return /*#__PURE__*/react.createElement("div", {
      key: labelId,
      className: BoardEditorSidebar_EditorSidebar_module["parametrized-variant-rule"]
    }, /*#__PURE__*/react.createElement("label", {
      htmlFor: labelId,
      className: BoardEditorSidebar_EditorSidebar_module["parametrized-variant-rule__name"]
    }, publicProperties.information.name), /*#__PURE__*/react.createElement("select", {
      id: labelId,
      className: BoardEditorSidebar_EditorSidebar_module["parametrized-variant-rule__select"],
      value: selectedIndex,
      onChange: e => dispatch((0,SidebarEditorSlice/* changeParametrizedVariantRule */.Ug)({
        id,
        option: publicProperties.information.tag,
        newValue: entries[Number(e.target.value)][1]
      }))
    }, selectOptions));
  }));
};
var EditVariantRules = () => {
  var _useContext3 = (0,react.useContext)(BoardContext/* GameDisplayContext */.$),
    id = _useContext3.id;
  var _useState = (0,react.useState)(false),
    _useState2 = EditVariantRules_slicedToArray(_useState, 2),
    isOpen = _useState2[0],
    toggleOpen = _useState2[1];
  var variantRuleSelector = (0,react.useMemo)(() => selectVariantRules(), []);
  var variantRuleList = (0,es/* useSelector */.v9)(state => variantRuleSelector(state, id));
  var fenTagsSelector = (0,react.useMemo)(() => selectFENOptionTags(), []);
  var fenTags = (0,es/* useSelector */.v9)(state => fenTagsSelector(state, id));
  var booleanRuleList = variantRuleList.map(rv => rv.getPublicProperties()).filter(properties => typeof properties.parameterValue === "boolean");
  return /*#__PURE__*/react.createElement("div", null, /*#__PURE__*/react.createElement((lib_default()), {
    isOpen: isOpen,
    className: BoardEditorSidebar_EditorSidebar_module["variant-rules-modal"],
    overlayClassName: BoardEditorSidebar_EditorSidebar_module["variant-rules-overlay"]
  }, /*#__PURE__*/react.createElement("div", {
    className: BoardEditorSidebar_EditorSidebar_module["variant-rules-modal-rounded-header"]
  }, /*#__PURE__*/react.createElement("h2", {
    className: BoardEditorSidebar_EditorSidebar_module["variant-rules-modal-rounded-header__text"]
  }, "Custom Variant Rules")), /*#__PURE__*/react.createElement("button", {
    className: BoardEditorSidebar_EditorSidebar_module["variant-rules-modal__button"],
    onClick: () => toggleOpen(!isOpen)
  }, /*#__PURE__*/react.createElement("span", {
    className: BoardEditorSidebar_EditorSidebar_module["variant-rules-modal__button-icon"]
  }), /*#__PURE__*/react.createElement("span", {
    className: BoardEditorSidebar_EditorSidebar_module["board-settings__variant-rules-button-text"]
  }, "Close Variant Rules")), /*#__PURE__*/react.createElement(VariantRuleParametrizedItems, {
    rules: variantRuleList,
    fenTags: fenTags
  }), /*#__PURE__*/react.createElement(VariantRuleGridItems, {
    rules: variantRuleList,
    fenTags: fenTags,
    ruleProperties: booleanRuleList.filter(properties => {
      var type = properties.information.color;
      return type === VariantRuleInterface/* variantRuleColors.widespread */.p.widespread || type === VariantRuleInterface/* variantRuleColors.minor */.p.minor || type === VariantRuleInterface/* variantRuleColors.phased */.p.phased;
    })
  }), /*#__PURE__*/react.createElement(VariantRuleGridItems, {
    rules: variantRuleList,
    fenTags: fenTags,
    ruleProperties: booleanRuleList.filter(properties => {
      var type = properties.information.color;
      return type === VariantRuleInterface/* variantRuleColors.autogenous */.p.autogenous || type === VariantRuleInterface/* variantRuleColors.extending */.p.extending || type === VariantRuleInterface/* variantRuleColors.pointsAlternation */.p.pointsAlternation;
    })
  }), /*#__PURE__*/react.createElement(VariantRuleGridItems, {
    rules: variantRuleList,
    fenTags: fenTags,
    ruleProperties: booleanRuleList.filter(properties => {
      var type = properties.information.color;
      return type === VariantRuleInterface/* variantRuleColors.metadata */.p.metadata || type === VariantRuleInterface/* variantRuleColors.visual */.p.visual || type === VariantRuleInterface/* variantRuleColors.startingPosition */.p.startingPosition;
    })
  })), /*#__PURE__*/react.createElement("button", {
    className: "".concat(BoardEditorSidebar_EditorSidebar_module["board-settings__variant-rules-button"], " ").concat(isOpen ? BoardEditorSidebar_EditorSidebar_module["board-settings__variant-rules-button--open"] : ""),
    onClick: () => toggleOpen(!isOpen)
  }, /*#__PURE__*/react.createElement("span", {
    className: BoardEditorSidebar_EditorSidebar_module["board-settings__variant-rules-button-icon"]
  }), /*#__PURE__*/react.createElement("span", {
    className: BoardEditorSidebar_EditorSidebar_module["board-settings__variant-rules-button-text"]
  }, isOpen ? "Close Variant Rules" : "Edit Variant Rules")));
};
// EXTERNAL MODULE: ./src/main/client/ts/components/BoardComponents/GameDisplay/GameDisplayPiece.tsx + 5 modules
var GameDisplayPiece = __webpack_require__(15246);
// EXTERNAL MODULE: ./src/main/client/img/imageIndex.ts
var imageIndex = __webpack_require__(73490);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/PieceControl/PieceControlInterface.ts
var PieceControlInterface = __webpack_require__(16703);
;// CONCATENATED MODULE: ./src/main/client/ts/components/BoardEditorSidebar/SparePieces.tsx
function SparePieces_slicedToArray(arr, i) { return SparePieces_arrayWithHoles(arr) || SparePieces_iterableToArrayLimit(arr, i) || SparePieces_unsupportedIterableToArray(arr, i) || SparePieces_nonIterableRest(); }
function SparePieces_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function SparePieces_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return SparePieces_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return SparePieces_arrayLikeToArray(o, minLen); }
function SparePieces_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function SparePieces_iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function SparePieces_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }















var standardPieces = [PieceControlInterface/* defaultPieces.king */.bB.king, PieceControlInterface/* defaultPieces.queen */.bB.queen, PieceControlInterface/* dameLetter */.t$, PieceControlInterface/* defaultPieces.rook */.bB.rook, PieceControlInterface/* defaultPieces.bishop */.bB.bishop, PieceControlInterface/* defaultPieces.knight */.bB.knight, PieceControlInterface/* pawnPieceLetter */.lH];
function sparePieceReducer(state, action) {
  switch (action.type) {
    case "changeIndex":
      return _objectSpread(_objectSpread({}, state), {}, {
        groupIndex: action.payload
      });
    case "expand":
      return _objectSpread(_objectSpread({}, state), {}, {
        isExpanded: !state.isExpanded
      });
    case "toggleFairies":
      return _objectSpread(_objectSpread({}, state), {}, {
        isFairyPiece: !state.isFairyPiece
      });
    default:
      return (0,baseTypes/* throwOnNever */.h0)(action);
  }
}
var nonPlayableLetterValues = PieceControlInterface/* nonPlayableValues.filter */.AB.filter(p => (0,PieceControlInterface/* verifyPieceLetter */.IM)(p));
function createPieceTypes(state) {
  var basePieceTypes = [];
  if (state.groupIndex !== PieceString/* deadColorIndex */.Ir && !(0,GameUnits/* verifyNumericColor */.O3)(state.groupIndex) && !state.isExpanded) {
    basePieceTypes.push(...nonPlayableLetterValues);
  } else if (state.isFairyPiece) {
    for (var _i = 0, _Object$keys = Object.keys(PieceControlInterface/* pieceControlConfigSettings */.Gf); _i < _Object$keys.length; _i++) {
      var piece = _Object$keys[_i];
      if (!(0,PieceControlInterface/* verifyPieceLetter */.IM)(piece) || PieceControlInterface/* nonPlayableValues.includes */.AB.includes(piece) || standardPieces.includes(piece)) continue;
      basePieceTypes.push(piece);
    }
  } else {
    basePieceTypes.push(...standardPieces);
  }
  var alteredColor = state.groupIndex !== PieceString/* deadColorIndex */.Ir && !(0,GameUnits/* verifyNumericColor */.O3)(state.groupIndex) ? PieceString/* deadColorIndex */.Ir : state.groupIndex;
  if (state.isExpanded) {
    return [...[...GameData/* colors */.O9, PieceString/* deadColorIndex */.Ir].flatMap(n => basePieceTypes.map(p => (0,PieceString/* createPieceFromData */.HC)(n, p))), ...nonPlayableLetterValues.map(p => (0,PieceString/* createPieceFromData */.HC)(PieceString/* deadColorIndex */.Ir, p))];
  } else {
    return basePieceTypes.map(p => (0,PieceString/* createPieceFromData */.HC)(alteredColor, p));
  }
}
var SparePieces = () => {
  var _useContext = (0,react.useContext)(BoardContext/* GameDisplayContext */.$),
    id = _useContext.id,
    themeContext = (0,react.useContext)(PieceThemeContext/* UserContext */.St);
  var dispatch = (0,es/* useDispatch */.I0)();
  var _useReducer = (0,react.useReducer)(sparePieceReducer, {
      isExpanded: false,
      isFairyPiece: false,
      groupIndex: 0
    }),
    _useReducer2 = SparePieces_slicedToArray(_useReducer, 2),
    state = _useReducer2[0],
    localDispatch = _useReducer2[1];
  var _onDrag = (0,react.useCallback)((e, pieceString) => {
    e.preventDefault();
    dispatch((0,SidebarEditorSlice/* setCurrentDroppedPiece */.yN)({
      id,
      piece: pieceString.toObject()
    }));
  }, [dispatch, id]);
  return /*#__PURE__*/react.createElement("div", {
    className: BoardEditorSidebar_EditorSidebar_module["spare-pieces-wrap"]
  }, /*#__PURE__*/react.createElement("i", {
    className: BoardEditorSidebar_EditorSidebar_module["spare-pieces-selectors__hint-text"]
  }, "Click or drag to drop pieces on the board"), /*#__PURE__*/react.createElement("div", {
    className: "".concat(BoardEditorSidebar_EditorSidebar_module["spare-pieces"], " ").concat(state.isFairyPiece ? BoardEditorSidebar_EditorSidebar_module["spare-pieces--expanded"] : ""),
    onDragOver: e => e.preventDefault(),
    onDrop: () => dispatch((0,SidebarEditorSlice/* deleteDroppedPiece */.kS)({
      id
    }))
  }, createPieceTypes(state).map(p => /*#__PURE__*/react.createElement("div", {
    draggable: true,
    onDrag: e => _onDrag(e, p),
    onDragEnd: () => dispatch((0,SidebarEditorSlice/* setCurrentDroppedPiece */.yN)({
      id
    })),
    key: "".concat(p.color).concat(p.piece)
  }, /*#__PURE__*/react.createElement(GameDisplaySquare/* GameDisplaySquare */.X, {
    pieceString: p.toObject(),
    displaySettings: []
  })))), /*#__PURE__*/react.createElement("div", {
    className: BoardEditorSidebar_EditorSidebar_module["spare-pieces-selectors"]
  }, /*#__PURE__*/react.createElement("div", {
    onClick: () => localDispatch({
      type: "expand"
    })
  }, /*#__PURE__*/react.createElement("span", {
    className: BoardEditorSidebar_EditorSidebar_module["spare-pieces-selectors__expand-icon"]
  })), !state.isExpanded && /*#__PURE__*/react.createElement("div", {
    className: BoardEditorSidebar_EditorSidebar_module["spare-pieces-selectors__colors"]
  }, GameData/* playerNames.map */.Q3.map((name, i) => {
    if (i === PieceString/* deadColorIndex */.Ir) {
      return /*#__PURE__*/react.createElement("button", {
        key: "Dead",
        onClick: () => localDispatch({
          type: "changeIndex",
          payload: i
        }),
        className: BoardEditorSidebar_EditorSidebar_module["spare-pieces-selectors__color"],
        style: {
          color: (0,Colors/* wrapIndexedColor */.Hi)(themeContext.colors.pieceColors[i])
        }
      }, "Dead");
    } else if ((0,GameUnits/* verifyNumericColor */.O3)(i)) {
      return /*#__PURE__*/react.createElement("button", {
        key: name,
        onClick: () => localDispatch({
          type: "changeIndex",
          payload: i
        }),
        className: BoardEditorSidebar_EditorSidebar_module["spare-pieces-selectors__color"],
        style: {
          color: (0,Colors/* wrapIndexedColor */.Hi)(themeContext.colors.pieceColors[i])
        }
      }, name);
    } else {
      return /*#__PURE__*/react.createElement("button", {
        key: "Wall",
        onClick: () => localDispatch({
          type: "changeIndex",
          payload: i
        }),
        className: BoardEditorSidebar_EditorSidebar_module["spare-pieces-selectors__color"]
      }, "Wall");
    }
  })), /*#__PURE__*/react.createElement("button", {
    className: BoardEditorSidebar_EditorSidebar_module["spare-pieces-selectors__fairy-pieces-button"],
    onClick: () => localDispatch({
      type: "toggleFairies"
    })
  }, /*#__PURE__*/react.createElement(GameDisplayPiece/* PieceImage */.x6, {
    pieceString: (0,PieceString/* createPieceFromString */.m9)("dM"),
    configuration: {
      size: "35px",
      className: BoardEditorSidebar_EditorSidebar_module["spare-pieces-selectors__fairy-pieces-image"],
      customColor: themeContext.colors.pieceColors[PieceString/* deadColorIndex */.Ir],
      pieceTheme: imageIndex/* SVGPieceDisplayGroup.Standard */.l1.Standard
    }
  }))));
};
;// CONCATENATED MODULE: ./src/main/client/ts/components/BoardEditorSidebar/EditorSidebar.tsx







var EditorSidebar = () => {
  var themeContext = (0,react.useContext)(PieceThemeContext/* UserContext */.St);
  return /*#__PURE__*/react.createElement("section", {
    className: BoardEditorSidebar_EditorSidebar_module.wrap
  }, /*#__PURE__*/react.createElement("div", {
    className: BoardEditorSidebar_EditorSidebar_module["board-settings"]
  }, /*#__PURE__*/react.createElement(DimensionSelect, null), /*#__PURE__*/react.createElement(BoardSettingsButtons, null)), /*#__PURE__*/react.createElement(EditVariantRules, null), /*#__PURE__*/react.createElement(SparePieces, null));
};
;// CONCATENATED MODULE: ./src/main/client/ts/templates/GameController/GameController.tsx
function GameController_slicedToArray(arr, i) { return GameController_arrayWithHoles(arr) || GameController_iterableToArrayLimit(arr, i) || GameController_unsupportedIterableToArray(arr, i) || GameController_nonIterableRest(); }
function GameController_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function GameController_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return GameController_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return GameController_arrayLikeToArray(o, minLen); }
function GameController_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function GameController_iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function GameController_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }


















var GameController = props => {
  var _props$variantname2;
  var _useState = (0,react.useState)(false),
    _useState2 = GameController_slicedToArray(_useState, 2),
    isSidebarOpened = _useState2[0],
    setOpenSidebar = _useState2[1];
  var _useState3 = (0,react.useState)(0),
    _useState4 = GameController_slicedToArray(_useState3, 2),
    currentPerspective = _useState4[0],
    setCurrentPerspective = _useState4[1];
  var boardId = (0,StringFormatUtils/* hashString */.Wu)((0,react.useId)());
  var dispatch = (0,es/* useDispatch */.I0)();
  var _useState5 = (0,react.useState)(() => new Worker(new URL(/* worker import */ __webpack_require__.p + __webpack_require__.u(647), __webpack_require__.b))),
    _useState6 = GameController_slicedToArray(_useState5, 1),
    worker = _useState6[0];
  (0,react.useEffect)(() => {
    var _props$variantname;
    dispatch((0,WorkerSaga/* createConstructBoardAction */.K5)({
      args: [(_props$variantname = props.variantname) !== null && _props$variantname !== void 0 ? _props$variantname : String(boardId), props.pgn4],
      id: boardId,
      worker
    }));
  }, [boardId, dispatch, props, worker]);
  var initializationComplete = (0,es/* useSelector */.v9)(state => {
    var _gameBoardsAdapter$ge, _gameBoardsAdapter$ge2;
    return (_gameBoardsAdapter$ge = (_gameBoardsAdapter$ge2 = GameBoardSlice/* gameBoardsAdapter.getSelectors */.sP.getSelectors().selectById(state.gameBoards, boardId)) === null || _gameBoardsAdapter$ge2 === void 0 ? void 0 : _gameBoardsAdapter$ge2.initializationComplete) !== null && _gameBoardsAdapter$ge !== void 0 ? _gameBoardsAdapter$ge : false;
  });
  var fenSettings = (0,es/* useSelector */.v9)(state => {
    var _gameBoardsAdapter$ge3;
    return (_gameBoardsAdapter$ge3 = GameBoardSlice/* gameBoardsAdapter.getSelectors */.sP.getSelectors().selectById(state.gameBoards, boardId)) === null || _gameBoardsAdapter$ge3 === void 0 ? void 0 : _gameBoardsAdapter$ge3.publicFENSettings;
  });
  var changePerspective = (0,react.useCallback)(() => {
    if (fenSettings) setCurrentPerspective((0,FENDataInterface/* getNeighboringSideToMove */.cq)(currentPerspective, fenSettings.fenOptions.resigned));
  }, [currentPerspective, fenSettings]);
  return /*#__PURE__*/react.createElement(BoardContext/* GameDisplayContext.Provider */.$.Provider, {
    value: {
      id: boardId,
      worker,
      stateController: isSidebarOpened ? "sidebarEditors" : "gameBoards"
    }
  }, /*#__PURE__*/react.createElement("article", {
    className: GameController_module/* default.game-control-root */.Z["game-control-root"]
  }, /*#__PURE__*/react.createElement(GameControllerPlaceholder, {
    enabled: !initializationComplete
  }), initializationComplete && /*#__PURE__*/react.createElement("div", {
    className: GameController_module/* default.game-control-wrap */.Z["game-control-wrap"]
  }, /*#__PURE__*/react.createElement("section", {
    className: GameController_module/* default.game-board-wrap */.Z["game-board-wrap"]
  }, isSidebarOpened ? /*#__PURE__*/react.createElement(EditorBoard, {
    currentPerspective: currentPerspective
  }) : /*#__PURE__*/react.createElement(GameDisplay/* GameDisplay */.Th, {
    key: boardId,
    currentPerspective: currentPerspective
  })), isSidebarOpened ? /*#__PURE__*/react.createElement(EditorSidebar, null) : /*#__PURE__*/react.createElement("section", {
    className: GameController_module/* default.game-board-sidebar */.Z["game-board-sidebar"]
  }, /*#__PURE__*/react.createElement("div", {
    className: GameController_module/* default.metadata-display */.Z["metadata-display"]
  }, /*#__PURE__*/react.createElement(GameVariantTypeDisplay.GameMetadataDisplay, null), /*#__PURE__*/react.createElement(GameMetadataRules, null)), /*#__PURE__*/react.createElement(GameMoveTreeDisplay, null), /*#__PURE__*/react.createElement(GameFENDisplay.GameFENDisplay, {
    variantName: (_props$variantname2 = props.variantname) !== null && _props$variantname2 !== void 0 ? _props$variantname2 : String(boardId)
  }), /*#__PURE__*/react.createElement(GameControllerInternalActions.GameControllerInternalActions, {
    currentPerspective: currentPerspective,
    changeCurrentPerspective: () => changePerspective(),
    openSidebar: () => setOpenSidebar(true)
  })))));
};
/* harmony default export */ var GameController_GameController = ((0,TemplateInterface.addTemplate)("game-controller", GameController));

/***/ }),

/***/ 12833:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GameControllerInternalActions": () => (/* binding */ GameControllerInternalActions)
/* harmony export */ });
/* harmony import */ var _client_ts_redux_WorkerSync_WorkerSaga__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(34972);
/* harmony import */ var _client_ts_logic_index_GameBoardSlice__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(28150);
/* harmony import */ var _moveGeneration_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(37017);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(89526);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(12384);
/* harmony import */ var _GameController_module_scss__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(320);
/* harmony import */ var _client_ts_services_PersistedStorage_PieceThemeContext__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(68409);
/* harmony import */ var _client_ts_interfaces_Colors__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(7970);
/* harmony import */ var _components_BoardComponents_BoardContext__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(87792);
/* harmony import */ var _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(4127);










var GameControllerInternalActions = props => {
  var dispatch = (0,react_redux__WEBPACK_IMPORTED_MODULE_4__/* .useDispatch */ .I0)();
  var themeContext = (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(_client_ts_services_PersistedStorage_PieceThemeContext__WEBPACK_IMPORTED_MODULE_6__/* .UserContext */ .St);
  var _useContext = (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(_components_BoardComponents_BoardContext__WEBPACK_IMPORTED_MODULE_7__/* .GameDisplayContext */ .$),
    worker = _useContext.worker,
    id = _useContext.id;
  var internalMoves = (0,react_redux__WEBPACK_IMPORTED_MODULE_4__/* .useSelector */ .v9)(state => (0,_client_ts_logic_index_GameBoardSlice__WEBPACK_IMPORTED_MODULE_1__/* .selectInternalMoves */ .FE)(state, id));
  var variantDataRules = (0,react_redux__WEBPACK_IMPORTED_MODULE_4__/* .useSelector */ .v9)(state => (0,_client_ts_logic_index_GameBoardSlice__WEBPACK_IMPORTED_MODULE_1__/* .selectGameBoardVariantData */ .C0)(state, id));
  var fogPerspective = (0,react_redux__WEBPACK_IMPORTED_MODULE_4__/* .useSelector */ .v9)(state => (0,_client_ts_logic_index_GameBoardSlice__WEBPACK_IMPORTED_MODULE_1__/* .selectFogPerspective */ .WW)(state, id));
  var resign = (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)(() => {
    dispatch((0,_client_ts_redux_WorkerSync_WorkerSaga__WEBPACK_IMPORTED_MODULE_0__/* .createMoveAction */ .sF)({
      args: [[{
        type: _moveGeneration_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_2__/* .InternalMoveSignature.Resign */ .Fi.Resign
      }]],
      worker,
      id
    }));
  }, [dispatch, id, worker]);
  var pass = (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)(() => {
    dispatch((0,_client_ts_redux_WorkerSync_WorkerSaga__WEBPACK_IMPORTED_MODULE_0__/* .createMoveAction */ .sF)({
      args: [[{
        type: _moveGeneration_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_2__/* .InternalMoveSignature.Pass */ .Fi.Pass
      }]],
      worker,
      id
    }));
  }, [dispatch, id, worker]);
  var iconButtonStyle = "".concat(_GameController_module_scss__WEBPACK_IMPORTED_MODULE_5__/* ["default"]["fen-data__pgn-button--icon-button"] */ .Z["fen-data__pgn-button--icon-button"], " ").concat(_GameController_module_scss__WEBPACK_IMPORTED_MODULE_5__/* ["default"]["fen-data__pgn-button"] */ .Z["fen-data__pgn-button"]);
  var perspectiveIconStyle = "".concat(_GameController_module_scss__WEBPACK_IMPORTED_MODULE_5__/* ["default"]["fen-data__pgn-button__icon"] */ .Z["fen-data__pgn-button__icon"], " ").concat(_GameController_module_scss__WEBPACK_IMPORTED_MODULE_5__/* ["default"]["fen-data__pgn-button__change-perspective-icon"] */ .Z["fen-data__pgn-button__change-perspective-icon"]);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3__.createElement("ul", {
    className: _GameController_module_scss__WEBPACK_IMPORTED_MODULE_5__/* ["default"]["fen-data__pgn-button-list"] */ .Z["fen-data__pgn-button-list"]
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3__.createElement("li", {
    className: _GameController_module_scss__WEBPACK_IMPORTED_MODULE_5__/* ["default"]["fen-data__pgn-button-wrap"] */ .Z["fen-data__pgn-button-wrap"]
  }, internalMoves.find(move => move.type === _moveGeneration_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_2__/* .InternalMoveSignature.ClaimWin */ .Fi.ClaimWin) ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3__.createElement("button", {
    className: "".concat(iconButtonStyle, " ").concat(_GameController_module_scss__WEBPACK_IMPORTED_MODULE_5__/* ["default"]["fen-data__pgn-button--claim-win"] */ .Z["fen-data__pgn-button--claim-win"]),
    onClick: () => resign()
  }, "\u2021", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3__.createElement("span", {
    className: _GameController_module_scss__WEBPACK_IMPORTED_MODULE_5__/* ["default"]["fen-data__pgn-button--claim-win__text"] */ .Z["fen-data__pgn-button--claim-win__text"]
  }, "Claim win")) : internalMoves.length !== 0 && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3__.createElement("button", {
    className: iconButtonStyle,
    onClick: () => resign()
  }, _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_8__/* .chessGlyphIndex.wavingFlag */ .w.wavingFlag)), internalMoves.find(move => move.type === _moveGeneration_MoveTree_MoveTreeInterface__WEBPACK_IMPORTED_MODULE_2__/* .InternalMoveSignature.Pass */ .Fi.Pass) && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3__.createElement("li", {
    className: _GameController_module_scss__WEBPACK_IMPORTED_MODULE_5__/* ["default"]["fen-data__pgn-button-wrap"] */ .Z["fen-data__pgn-button-wrap"]
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3__.createElement("button", {
    className: iconButtonStyle,
    onClick: () => pass()
  }, _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_8__/* .chessGlyphIndex.pause */ .w.pause)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3__.createElement("li", {
    className: _GameController_module_scss__WEBPACK_IMPORTED_MODULE_5__/* ["default"]["fen-data__pgn-button-wrap"] */ .Z["fen-data__pgn-button-wrap"],
    onClick: () => props.changeCurrentPerspective()
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3__.createElement("button", {
    className: iconButtonStyle
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3__.createElement("span", {
    className: perspectiveIconStyle,
    style: {
      color: (0,_client_ts_interfaces_Colors__WEBPACK_IMPORTED_MODULE_9__/* .wrapIndexedColor */ .Hi)(themeContext.colors.pieceColors[props.currentPerspective])
    }
  }, _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_8__/* .chessGlyphIndex.circularArrows */ .w.circularArrows))), variantDataRules.fogOfWar && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3__.createElement("li", {
    className: _GameController_module_scss__WEBPACK_IMPORTED_MODULE_5__/* ["default"]["fen-data__pgn-button-wrap"] */ .Z["fen-data__pgn-button-wrap"]
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3__.createElement("button", {
    className: "".concat(_GameController_module_scss__WEBPACK_IMPORTED_MODULE_5__/* ["default"]["fen-data__pgn-button"] */ .Z["fen-data__pgn-button"], " ").concat(_GameController_module_scss__WEBPACK_IMPORTED_MODULE_5__/* ["default"]["fen-data__pgn-button--fog-of-war"] */ .Z["fen-data__pgn-button--fog-of-war"]),
    onClick: () => dispatch((0,_client_ts_redux_WorkerSync_WorkerSaga__WEBPACK_IMPORTED_MODULE_0__/* .createFogPerspectiveAction */ .w1)({
      id,
      worker
    }))
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3__.createElement("span", {
    className: _GameController_module_scss__WEBPACK_IMPORTED_MODULE_5__/* ["default"]["fen-data__pgn-button__icon"] */ .Z["fen-data__pgn-button__icon"]
  }, _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_8__/* .chessGlyphIndex.fogOfWar */ .w.fogOfWar), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3__.createElement("span", {
    className: _GameController_module_scss__WEBPACK_IMPORTED_MODULE_5__/* ["default"]["fen-data__pgn-button__description"] */ .Z["fen-data__pgn-button__description"]
  }, "Fog"), fogPerspective === false ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3__.createElement("span", {
    className: perspectiveIconStyle
  }, _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_8__/* .chessGlyphIndex.reload */ .w.reload) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3__.createElement("span", {
    className: perspectiveIconStyle,
    style: {
      color: (0,_client_ts_interfaces_Colors__WEBPACK_IMPORTED_MODULE_9__/* .wrapIndexedColor */ .Hi)(themeContext.colors.pieceColors[fogPerspective])
    }
  }, _client_fonts_chessGlyphIndex__WEBPACK_IMPORTED_MODULE_8__/* .chessGlyphIndex.circularArrows */ .w.circularArrows))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3__.createElement("li", {
    className: _GameController_module_scss__WEBPACK_IMPORTED_MODULE_5__/* ["default"]["fen-data__pgn-button-wrap"] */ .Z["fen-data__pgn-button-wrap"],
    onClick: () => props.openSidebar()
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3__.createElement("button", {
    className: iconButtonStyle
  }, "s")));
};

/***/ }),

/***/ 21892:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "GameFENDisplay": () => (/* binding */ GameFENDisplay)
});

// EXTERNAL MODULE: ./src/main/client/ts/interfaces/Colors.ts
var Colors = __webpack_require__(7970);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/GameInformation/GameData.ts
var GameData = __webpack_require__(76758);
// EXTERNAL MODULE: ./node_modules/react-toastify/dist/react-toastify.esm.mjs + 1 modules
var react_toastify_esm = __webpack_require__(58510);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(89526);
// EXTERNAL MODULE: ./src/main/client/ts/templates/GameController/GameController.module.scss
var GameController_module = __webpack_require__(320);
;// CONCATENATED MODULE: ./src/main/client/ts/services/Toast.ts
var defaultToastSettings = {
  position: "top-right",
  autoClose: 3000,
  hideProgressBar: true,
  closeOnClick: true,
  pauseOnHover: true,
  draggable: true,
  progress: undefined,
  theme: "dark"
};
// EXTERNAL MODULE: ./src/main/client/ts/services/PersistedStorage/PieceThemeContext.ts
var PieceThemeContext = __webpack_require__(68409);
// EXTERNAL MODULE: ./node_modules/react-redux/es/index.js + 13 modules
var es = __webpack_require__(12384);
// EXTERNAL MODULE: ./src/main/client/ts/redux/WorkerSync/WorkerSaga.ts
var WorkerSaga = __webpack_require__(34972);
// EXTERNAL MODULE: ./src/main/client/ts/utils/BrowserUtils.ts
var BrowserUtils = __webpack_require__(84360);
// EXTERNAL MODULE: ./src/main/client/ts/components/BoardComponents/BoardContext.ts
var BoardContext = __webpack_require__(87792);
// EXTERNAL MODULE: ./src/main/client/fonts/chessGlyphIndex.ts
var chessGlyphIndex = __webpack_require__(4127);
// EXTERNAL MODULE: ./src/main/client/ts/redux/GeneralBoardSelectors.ts
var GeneralBoardSelectors = __webpack_require__(23742);
;// CONCATENATED MODULE: ./src/main/client/ts/templates/GameController/GameFENDisplay.tsx
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }













var GameFENDisplay = props => {
  var dispatch = (0,es/* useDispatch */.I0)();
  var _useContext = (0,react.useContext)(BoardContext/* GameDisplayContext */.$),
    id = _useContext.id,
    worker = _useContext.worker,
    stateController = _useContext.stateController;
  var userContext = (0,react.useContext)(PieceThemeContext/* UserContext */.St);
  var pgn4strings = (0,es/* useSelector */.v9)(state => (0,GeneralBoardSelectors/* selectSerializedStrings */.X9)({
    stateController,
    id,
    state
  }));
  var fenSettings = (0,es/* useSelector */.v9)(state => (0,GeneralBoardSelectors/* selectFENSettings */.dp)({
    stateController,
    id,
    state
  }));
  var deadKingWalking = (0,es/* useSelector */.v9)(state => (0,GeneralBoardSelectors/* selectVariantData */.DL)({
    stateController,
    id,
    state
  }).deadKingWalking);
  var deadPlayers = fenSettings.fenOptions.resigned.reduce((p, n, i) => p + Number(n || fenSettings.fenOptions.dead[i]), 0);
  var pgn4 = "".concat(pgn4strings.board, "\n\n").concat(pgn4strings.moves);
  var _useState = (0,react.useState)(pgn4),
    _useState2 = _slicedToArray(_useState, 2),
    localPGN4 = _useState2[0],
    setLocalPGN4 = _useState2[1];
  (0,react.useEffect)(() => {
    setLocalPGN4(pgn4);
  }, [pgn4]);
  var copyPGNtoClipboard = (0,react.useCallback)(() => {
    navigator.clipboard.writeText(pgn4).then(() => {
      (0,react_toastify_esm/* toast */.Am)("Copied PGN4 to clipboard", _objectSpread(_objectSpread({}, defaultToastSettings), {}, {
        type: "success"
      }));
    }, () => {
      (0,react_toastify_esm/* toast */.Am)("Failed to copy PGN4 to clipboard", _objectSpread(_objectSpread({}, defaultToastSettings), {}, {
        type: "error"
      }));
    });
  }, [pgn4]);
  var loadGameBoard = (0,react.useCallback)(pgn4 => {
    dispatch((0,WorkerSaga/* createConstructBoardAction */.K5)({
      args: [pgn4, props.variantName],
      worker,
      id
    }));
  }, [dispatch, id, props.variantName, worker]);
  var loadFile = (0,react.useCallback)(() => {
    var fileInput = document.createElement("input");
    fileInput.setAttribute("type", "file");
    fileInput.style.display = "none";
    fileInput.onchange = () => {
      var _fileInput$files;
      var file = (_fileInput$files = fileInput.files) === null || _fileInput$files === void 0 ? void 0 : _fileInput$files[0];
      if (!file) return;
      var reader = new FileReader();
      reader.onload = result => {
        var _result$target;
        if (typeof ((_result$target = result.target) === null || _result$target === void 0 ? void 0 : _result$target.result) === "string") loadGameBoard(pgn4);
      };
      reader.readAsText(file);
    };
    document.body.appendChild(fileInput);
    fileInput.click();
    document.body.removeChild(fileInput);
  }, [loadGameBoard, pgn4]);
  var playPreferredComputerMove = (0,react.useCallback)(() => {
    dispatch((0,WorkerSaga/* createdPreferredBotMoveAction */.Wm)({
      id,
      worker
    }));
  }, [dispatch, id, worker]);
  var sideToMove = fenSettings.sideToMove;
  return /*#__PURE__*/react.createElement("div", {
    className: GameController_module/* default.fen-data */.Z["fen-data"]
  }, /*#__PURE__*/react.createElement("div", {
    className: GameController_module/* default.fen-data__side-to-move-wrap */.Z["fen-data__side-to-move-wrap"]
  }, /*#__PURE__*/react.createElement("span", {
    className: GameController_module/* default.fen-data__side-to-move */.Z["fen-data__side-to-move"],
    style: {
      color: (0,Colors/* wrapIndexedColor */.Hi)(userContext.colors.pieceColors[sideToMove])
    }
  }, GameData/* playerNames */.Q3[sideToMove], "'s move"), deadPlayers < GameData/* totalPlayers */.q3 - 1 && /*#__PURE__*/react.createElement("span", {
    className: "".concat(GameController_module/* default.fen-data__futer-to-move */.Z["fen-data__futer-to-move"], " ").concat(deadKingWalking && fenSettings.fenOptions.resigned[sideToMove] ? GameController_module/* default.fen-data__futer-to-move--active */.Z["fen-data__futer-to-move--active"] : ""),
    onClick: () => playPreferredComputerMove()
  })), /*#__PURE__*/react.createElement("ul", {
    className: GameController_module/* default.fen-data__pgn-button-list */.Z["fen-data__pgn-button-list"]
  }, /*#__PURE__*/react.createElement("li", {
    className: GameController_module/* default.fen-data__pgn-button-wrap */.Z["fen-data__pgn-button-wrap"]
  }, /*#__PURE__*/react.createElement("button", {
    className: GameController_module/* default.fen-data__pgn-button */.Z["fen-data__pgn-button"],
    onClick: () => {
      loadFile();
    }
  }, "Open...")), /*#__PURE__*/react.createElement("li", {
    className: GameController_module/* default.fen-data__pgn-button-wrap */.Z["fen-data__pgn-button-wrap"]
  }, /*#__PURE__*/react.createElement("button", {
    className: GameController_module/* default.fen-data__pgn-button */.Z["fen-data__pgn-button"],
    onClick: () => {
      loadGameBoard(pgn4);
    }
  }, "Load")), /*#__PURE__*/react.createElement("li", {
    className: GameController_module/* default.fen-data__pgn-button-wrap */.Z["fen-data__pgn-button-wrap"]
  }, /*#__PURE__*/react.createElement("button", {
    className: "".concat(GameController_module/* default.fen-data__pgn-button */.Z["fen-data__pgn-button"], " ").concat(GameController_module/* default.fen-data__pgn-button--icon-button */.Z["fen-data__pgn-button--icon-button"]),
    onClick: () => {
      setLocalPGN4("");
    }
  }, chessGlyphIndex/* chessGlyphIndex.trashBin */.w.trashBin)), /*#__PURE__*/react.createElement("li", {
    className: GameController_module/* default.fen-data__pgn-button-wrap */.Z["fen-data__pgn-button-wrap"]
  }, /*#__PURE__*/react.createElement("button", {
    className: "".concat(GameController_module/* default.fen-data__pgn-button */.Z["fen-data__pgn-button"], " ").concat(GameController_module/* default.fen-data__pgn-button--icon-button */.Z["fen-data__pgn-button--icon-button"]),
    onClick: () => {
      copyPGNtoClipboard();
    }
  }, chessGlyphIndex/* chessGlyphIndex.copyToClipboardFromText */.w.copyToClipboardFromText)), /*#__PURE__*/react.createElement("li", {
    className: GameController_module/* default.fen-data__pgn-button-wrap */.Z["fen-data__pgn-button-wrap"]
  }, /*#__PURE__*/react.createElement("button", {
    className: "".concat(GameController_module/* default.fen-data__pgn-button */.Z["fen-data__pgn-button"], " ").concat(GameController_module/* default.fen-data__pgn-button--icon-button */.Z["fen-data__pgn-button--icon-button"]),
    onClick: () => (0,BrowserUtils/* downloadFile */.S)("pgn4.txt", pgn4)
  }, chessGlyphIndex/* chessGlyphIndex.downloadIcon */.w.downloadIcon))), /*#__PURE__*/react.createElement("textarea", {
    className: GameController_module/* default.fen-data__pgn-box */.Z["fen-data__pgn-box"],
    spellCheck: "false",
    placeholder: "PGN4",
    value: localPGN4,
    onChange: e => setLocalPGN4(e.target.value)
  }));
};

/***/ }),

/***/ 5631:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GameMetadataDisplay": () => (/* binding */ GameMetadataDisplay)
/* harmony export */ });
/* harmony import */ var _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76758);
/* harmony import */ var _client_ts_interfaces_Colors__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(7970);
/* harmony import */ var _client_ts_baseTypes__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(18027);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(89526);
/* harmony import */ var _GameController_module_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(320);
/* harmony import */ var _client_ts_services_PersistedStorage_PieceThemeContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(68409);
/* harmony import */ var _client_ts_logic_index_GameBoardSlice__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(28150);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(12384);
/* harmony import */ var _components_BoardComponents_BoardContext__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(87792);









var TimeControlIcon = props => {
  var userContext = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(_client_ts_services_PersistedStorage_PieceThemeContext__WEBPACK_IMPORTED_MODULE_3__/* .UserContext */ .St);
  var timeControlType = (0,_moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_0__/* .obtainTimeControlType */ .YG)(props.timeControl);
  var configuration = {
    className: "".concat(_GameController_module_scss__WEBPACK_IMPORTED_MODULE_2__/* ["default"]["time-control-display__icon"] */ .Z["time-control-display__icon"], " "),
    color: (0,_client_ts_interfaces_Colors__WEBPACK_IMPORTED_MODULE_7__/* .createHexColor */ .TG)("#fff")
  };
  switch (timeControlType) {
    case _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_0__/* .TimeControlType.Hyperbullet */ ._U.Hyperbullet:
      configuration.className += _GameController_module_scss__WEBPACK_IMPORTED_MODULE_2__/* ["default"]["time-control-display__icon--hyperbullet"] */ .Z["time-control-display__icon--hyperbullet"];
      configuration.color = userContext.timeControlColors.rapid;
      break;
    case _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_0__/* .TimeControlType.Bullet */ ._U.Bullet:
      configuration.className += _GameController_module_scss__WEBPACK_IMPORTED_MODULE_2__/* ["default"]["time-control-display__icon--bullet"] */ .Z["time-control-display__icon--bullet"];
      configuration.color = userContext.timeControlColors.blitz;
      break;
    case _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_0__/* .TimeControlType.Blitz */ ._U.Blitz:
      configuration.className += _GameController_module_scss__WEBPACK_IMPORTED_MODULE_2__/* ["default"]["time-control-display__icon--blitz"] */ .Z["time-control-display__icon--blitz"];
      configuration.color = userContext.timeControlColors.bullet;
      break;
    case _moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_0__/* .TimeControlType.Rapid */ ._U.Rapid:
      configuration.className += _GameController_module_scss__WEBPACK_IMPORTED_MODULE_2__/* ["default"]["time-control-display__icon--rapid"] */ .Z["time-control-display__icon--rapid"];
      configuration.color = userContext.timeControlColors.hyperbullet;
      break;
    default:
      return (0,_client_ts_baseTypes__WEBPACK_IMPORTED_MODULE_8__/* .throwOnNever */ .h0)(timeControlType);
  }
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement("span", {
    className: configuration.className,
    style: {
      color: (0,_client_ts_interfaces_Colors__WEBPACK_IMPORTED_MODULE_7__/* .wrapIndexedColor */ .Hi)(configuration.color)
    }
  });
};
var GameMetadataDisplay = () => {
  var id = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(_components_BoardComponents_BoardContext__WEBPACK_IMPORTED_MODULE_6__/* .GameDisplayContext */ .$).id;
  var variantType = (0,react_redux__WEBPACK_IMPORTED_MODULE_5__/* .useSelector */ .v9)(state => (0,_client_ts_logic_index_GameBoardSlice__WEBPACK_IMPORTED_MODULE_4__/* .selectGameBoardType */ .SN)(state, id));
  var gameData = (0,react_redux__WEBPACK_IMPORTED_MODULE_5__/* .useSelector */ .v9)(state => (0,_client_ts_logic_index_GameBoardSlice__WEBPACK_IMPORTED_MODULE_4__/* .selectGameData */ .gg)(state, id));
  if (!gameData) return null;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement("div", {
    className: _GameController_module_scss__WEBPACK_IMPORTED_MODULE_2__/* ["default"]["time-control-display"] */ .Z["time-control-display"]
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(TimeControlIcon, {
    timeControl: gameData.timeControl
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement("span", {
    className: _GameController_module_scss__WEBPACK_IMPORTED_MODULE_2__/* ["default"]["metadata-display__game-details"] */ .Z["metadata-display__game-details"]
  }, "".concat((0,_moveGeneration_GameInformation_GameData__WEBPACK_IMPORTED_MODULE_0__/* .stringifyTimeControl */ .Iu)(gameData.timeControl), " ").concat(variantType)));
};

/***/ }),

/***/ 13494:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "default": () => (/* binding */ PercentageDisplay_PercentageDisplay)
});

// EXTERNAL MODULE: ./src/main/client/ts/services/PersistedStorage/PieceThemeContext.ts
var PieceThemeContext = __webpack_require__(68409);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(89526);
// EXTERNAL MODULE: ./src/main/client/ts/interfaces/Colors.ts
var Colors = __webpack_require__(7970);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js
var injectStylesIntoStyleTag = __webpack_require__(75701);
var injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(injectStylesIntoStyleTag);
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./src/main/client/ts/templates/PercentageDisplay/PercentageDisplay.module.scss
var PercentageDisplay_module = __webpack_require__(36773);
;// CONCATENATED MODULE: ./src/main/client/ts/templates/PercentageDisplay/PercentageDisplay.module.scss

            

var options = {};

options.insert = "head";
options.singleton = false;

var update = injectStylesIntoStyleTag_default()(PercentageDisplay_module/* default */.Z, options);



/* harmony default export */ var PercentageDisplay_PercentageDisplay_module = (PercentageDisplay_module/* default.locals */.Z.locals || {});
// EXTERNAL MODULE: ./src/main/client/ts/utils/ObjectUtils.ts
var ObjectUtils = __webpack_require__(35637);
// EXTERNAL MODULE: ./src/main/client/ts/logic/movegen/GameInformation/GameData.ts
var GameData = __webpack_require__(76758);
// EXTERNAL MODULE: ./src/main/client/ts/templates/TemplateInterface.tsx
var TemplateInterface = __webpack_require__(59793);
;// CONCATENATED MODULE: ./src/main/client/ts/templates/PercentageDisplay/PercentageDisplay.tsx
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }







var defaultPlayerNames = GameData/* colors.map */.O9.map(c => (0,GameData/* getPlayerNameFromColor */.oh)(c));
var defaultDrawNames = ["RB Ties", "RY Ties", "RG Ties", "BY Ties", "BG Ties", "YG Ties", "RBY Ties", "RBG Ties", "RYG Ties", "BYG Ties", "Four-Way Ties"];
var drawColors = ["#d3d3d3", "#6a6a6a", "#bebebe", "#545454", "#a9a9a9", "#7f7f7f", "#949494", "#c0c0c0", "#a7a7a7", "#dadada", "#3f3f3f"].map(c => (0,Colors/* createHexColor */.TG)(c));
function verifyPercentageDisplayOption(value) {
  if (!(0,ObjectUtils/* verifyObjectType */.T9)(value) || !(0,ObjectUtils/* verifyPropertiesInObject */.DL)(value, ["name", "color", "value"])) return false;
  if (typeof value.color !== "string" || !(0,Colors/* validateIndexedColor */.$9)(value.color) || typeof value.value !== "number" && value.value !== null) return false;
  return true;
}
function getDefaultColorsAndNames(values, context) {
  var contextPieceColors = [...context.colors.pieceColors.slice(0, -1), ...context.colors.drawColor, ...context.colors.abortsColor];
  var timeControlColors = [context.timeControlColors.hyperbullet, context.timeControlColors.bullet, context.timeControlColors.blitz, context.timeControlColors.rapid];
  switch (values.length) {
    case contextPieceColors.length:
      return [...defaultPlayerNames, "Draws", "Aborts"].map((name, i) => ({
        name,
        color: contextPieceColors[i],
        value: values[i]
      }));
    case timeControlColors.length:
      return Object.values(GameData/* TimeControlType */._U).map((name, i) => ({
        name,
        color: timeControlColors[i],
        value: values[i]
      }));
    default:
      return defaultDrawNames.map((name, i) => ({
        name,
        color: drawColors[i],
        value: values.length <= i ? null : values[i]
      }));
  }
}
function obtainDisplayOptions(options, context) {
  var resultingOptions = [],
    inputOptions = options.split(","),
    values = [];
  var _iterator = _createForOfIteratorHelper(inputOptions),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var option = _step.value;
      try {
        var displayOption = JSON.parse(option);
        if (!verifyPercentageDisplayOption(displayOption)) {
          if ((0,ObjectUtils/* verifyObjectType */.T9)(displayOption) && (0,ObjectUtils/* verifyPropertiesInObject */.DL)(displayOption, ["value"])) {
            var value = displayOption.value;
            if (typeof value === "number" || value === null) values.push(value);
          }
        } else {
          values.push(displayOption.value);
          resultingOptions.push(displayOption);
        }
      } catch (_unused) {
        resultingOptions.length = 0;
        break;
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  if (resultingOptions.length === 0) {
    return getDefaultColorsAndNames(values, context);
  } else return resultingOptions;
}
var PercentageDisplay = props => {
  var context = (0,react.useContext)(PieceThemeContext/* UserContext */.St);
  var values = obtainDisplayOptions(props.options, context);
  var sum = values.reduce((p, n) => {
    var _n$value;
    return p + ((_n$value = n.value) !== null && _n$value !== void 0 ? _n$value : 0);
  }, 0);
  var percentages = values.map(v => {
    var _v$value;
    return Number.parseFloat((((_v$value = v.value) !== null && _v$value !== void 0 ? _v$value : 0) / sum * 100).toFixed(1));
  });
  var checked = values.map(v => v.value !== null);
  var _useState = (0,react.useState)({
      checked: checked.slice(),
      transitions: Array.from({
        length: values.length
      }).fill("visible"),
      percentages
    }),
    _useState2 = _slicedToArray(_useState, 2),
    selected = _useState2[0],
    setSelected = _useState2[1];
  var handleOnCheck = (0,react.useCallback)(i => {
    var newValues = _objectSpread({}, selected);
    newValues.checked[i] = !newValues.checked[i];
    if (!newValues.checked[i]) newValues.transitions[i] = "hidden";
    var filtered = newValues.checked.map((c, i) => {
      var _values$i$value;
      return c ? (_values$i$value = values[i].value) !== null && _values$i$value !== void 0 ? _values$i$value : 0 : 0;
    });
    var sum = filtered.reduce((p, n) => p + n, 0);
    var percentages = filtered.map(v => Number.parseFloat((v / sum * 100).toFixed(1)));
    newValues.percentages = percentages;
    setSelected(newValues);
  }, [selected, values]);
  return /*#__PURE__*/react.createElement("div", null, /*#__PURE__*/react.createElement("div", {
    className: PercentageDisplay_PercentageDisplay_module.sections
  }, values.map((v, i) => {
    var _values$i$value2;
    return /*#__PURE__*/react.createElement("div", {
      className: "".concat(PercentageDisplay_PercentageDisplay_module.section, " ").concat(selected.checked[i] ? "" : PercentageDisplay_PercentageDisplay_module["section--unchecked"]),
      key: v.name + String(v.value),
      style: {
        flexBasis: "".concat(selected.percentages[i], "%"),
        backgroundColor: (0,Colors/* wrapIndexedColor */.Hi)(values[i].color)
      }
    }, /*#__PURE__*/react.createElement("span", {
      className: PercentageDisplay_PercentageDisplay_module.section__tooltip
    }, "".concat(values[i].name, ": ").concat((_values$i$value2 = values[i].value) !== null && _values$i$value2 !== void 0 ? _values$i$value2 : 0)), /*#__PURE__*/react.createElement("span", {
      className: PercentageDisplay_PercentageDisplay_module.section__text
    }, "".concat(selected.percentages[i], "%")));
  })), /*#__PURE__*/react.createElement("ul", {
    className: PercentageDisplay_PercentageDisplay_module["checkbox-list"]
  }, values.map((v, i) => /*#__PURE__*/react.createElement("li", {
    className: PercentageDisplay_PercentageDisplay_module["checkbox-wrap"],
    key: v.name + String(v.value)
  }, /*#__PURE__*/react.createElement("span", {
    onClick: () => handleOnCheck(i),
    style: {
      borderColor: (0,Colors/* wrapIndexedColor */.Hi)(values[i].color)
    },
    className: "".concat(PercentageDisplay_PercentageDisplay_module["fake-checkbox-label"], " ").concat(values[i].value === null ? PercentageDisplay_PercentageDisplay_module["fake-checkbox-label--disabled"] : "")
  }, /*#__PURE__*/react.createElement("span", {
    className: "".concat(PercentageDisplay_PercentageDisplay_module.checkbox, " ").concat(selected.checked[i] ? PercentageDisplay_PercentageDisplay_module["checkbox--checked"] : "")
  }))))));
};
/* harmony default export */ var PercentageDisplay_PercentageDisplay = ((0,TemplateInterface.addTemplate)("percentage-display", PercentageDisplay));

/***/ }),

/***/ 53218:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "default": () => (/* binding */ Sidebar_Sidebar)
});

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(89526);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js
var injectStylesIntoStyleTag = __webpack_require__(75701);
var injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(injectStylesIntoStyleTag);
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./src/main/client/ts/templates/Sidebar/Sidebar.module.scss
var Sidebar_module = __webpack_require__(3707);
;// CONCATENATED MODULE: ./src/main/client/ts/templates/Sidebar/Sidebar.module.scss

            

var options = {};

options.insert = "head";
options.singleton = false;

var update = injectStylesIntoStyleTag_default()(Sidebar_module/* default */.Z, options);



/* harmony default export */ var Sidebar_Sidebar_module = (Sidebar_module/* default.locals */.Z.locals || {});
// EXTERNAL MODULE: ./src/main/client/ts/templates/TemplateInterface.tsx
var TemplateInterface = __webpack_require__(59793);
;// CONCATENATED MODULE: ./src/main/client/ts/templates/Sidebar/Sidebar.tsx



var Sidebar = props => {
  return /*#__PURE__*/react.createElement("aside", {
    className: Sidebar_Sidebar_module.sidebar
  }, props.children);
};
/* harmony default export */ var Sidebar_Sidebar = ((0,TemplateInterface.addTemplate)("sidebar", Sidebar));

/***/ }),

/***/ 59793:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ComponentModifier": () => (/* binding */ ComponentModifier),
/* harmony export */   "addTemplate": () => (/* binding */ addTemplate),
/* harmony export */   "templates": () => (/* binding */ templates)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(89526);
/* harmony import */ var _baseTypes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(18027);


class TemplateErrorBoundary extends react__WEBPACK_IMPORTED_MODULE_0__.Component {
  constructor(props) {
    super(props);
    this.state = {
      crashed: false
    };
  }
  static getDerivedStateFromError() {
    return {
      crashed: true
    };
  }
  componentDidCatch(error, errorInfo) {
    console.debug(error);
    console.trace(errorInfo);
  }
  render() {
    if (this.state.crashed) return null;
    try {
      return this.props.children;
    } catch (e) {
      console.trace(e);
      return null;
    }
  }
}
var ComponentModifier = /*#__PURE__*/function (ComponentModifier) {
  ComponentModifier[ComponentModifier["ADVANCED"] = 0] = "ADVANCED";
  ComponentModifier[ComponentModifier["RESTRICTED_ACCESS"] = 1] = "RESTRICTED_ACCESS";
  return ComponentModifier;
}({});
// eslint-disable-next-line @typescript-eslint/no-explicit-any
var templates = {};
var addTemplate = (name, component) => {
  var newComponent = props => {
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(TemplateErrorBoundary, null, /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(component, props, props.children));
  };
  if (!(name in templates)) {
    templates[name] = newComponent;
  }
  return newComponent;
};
(0,_baseTypes__WEBPACK_IMPORTED_MODULE_1__/* .importAll */ .s8)(__webpack_require__(74456));

/***/ }),

/***/ 34092:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Bx": () => (/* binding */ countMinimumOf2DArrayExcludingZero),
/* harmony export */   "Rt": () => (/* binding */ compareArrays),
/* harmony export */   "Sy": () => (/* binding */ shuffleArray),
/* harmony export */   "qr": () => (/* binding */ findLastIndex)
/* harmony export */ });
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function shuffleArray(array) {
  var i = array.length;
  var r = 0;
  while (i !== 0) {
    r = Math.floor(Math.random() * i--);
    var _ref = [array[r], array[i]];
    array[i] = _ref[0];
    array[r] = _ref[1];
  }
  return array;
}
function compareArrays(arr1, arr2) {
  if (arr1 === arr2) return true;
  if (arr1.length !== arr2.length) return false;
  for (var i = 0; i < arr1.length; i++) {
    var first = arr1[i],
      second = arr2[i];
    if (Array.isArray(first) && Array.isArray(second)) {
      if (!compareArrays(first, second)) return false;
    } else if (first !== second) {
      return false;
    }
  }
  return true;
}
function countMinimumOf2DArrayExcludingZero(array) {
  var minimum = Infinity;
  var _iterator = _createForOfIteratorHelper(array),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var row = _step.value;
      var _iterator2 = _createForOfIteratorHelper(row),
        _step2;
      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var number = _step2.value;
          if (number !== 0 && number < minimum) {
            minimum = number;
          }
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return minimum;
}
function findLastIndex(array, callback) {
  var i = array.length;
  while (i--) {
    if (callback(array[i], i, array)) return i;
  }
  return -1;
}

/***/ }),

/***/ 84360:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "S": () => (/* binding */ downloadFile)
/* harmony export */ });
function downloadFile(filename, content) {
  var element = document.createElement("a");
  element.setAttribute("href", "data:text/plain;charset=utf-8,".concat(encodeURIComponent(content)));
  element.setAttribute("download", "".concat(filename));
  element.style.display = "none";
  document.body.appendChild(element);
  element.click();
  document.body.removeChild(element);
}

/***/ }),

/***/ 35948:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "O": () => (/* binding */ truncateNumber),
/* harmony export */   "y": () => (/* binding */ bitCount)
/* harmony export */ });
function truncateNumber(number, digits) {
  var multiplier = Math.pow(10, digits);
  var adjusted = number * multiplier;
  if (adjusted < 0) {
    return Math.ceil(adjusted / multiplier);
  } else {
    return Math.floor(adjusted / multiplier);
  }
}
function bitCount(number) {
  number = number - (number >> 1 & 0x55555555);
  number = (number & 0x33333333) + (number >> 2 & 0x33333333);
  return (number + (number >> 4) & 0xf0f0f0f) * 0x1010101 >> 24;
}

/***/ }),

/***/ 35637:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DL": () => (/* binding */ verifyPropertiesInObject),
/* harmony export */   "T9": () => (/* binding */ verifyObjectType),
/* harmony export */   "lJ": () => (/* binding */ copyClass)
/* harmony export */ });
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function copyClass(instance, baseClass) {
  var customProperties = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
  var prototype = Object.getPrototypeOf(instance);
  if (typeof prototype !== "object") throw new Error("Expected prototype to be an object");
  var properties = Object.create(prototype);
  if (typeof properties !== "object" || properties === null) throw new Error("Expected prototype to be an object");
  var copy = Object.assign(properties, customProperties ? {} : instance);
  if (!(copy instanceof baseClass)) throw new Error("Expected prototype to not be overridden");
  return copy;
}
var verifyObjectType = v => typeof v === "object" && v !== null;
function verifyPropertiesInObject(obj, keys) {
  var _iterator = _createForOfIteratorHelper(keys),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var key = _step.value;
      if (!Object.prototype.hasOwnProperty.call(obj, key)) return false;
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return true;
}

/***/ }),

/***/ 14093:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Wu": () => (/* binding */ hashString),
/* harmony export */   "_e": () => (/* binding */ convertCamelCaseToKebabCase),
/* harmony export */   "lj": () => (/* binding */ convertSecondsToFlexibleHoursMinutesSeconds),
/* harmony export */   "od": () => (/* binding */ formatOrdinalNumber),
/* harmony export */   "uC": () => (/* binding */ compileEnumeration),
/* harmony export */   "zL": () => (/* binding */ prefixWithIndefiniteArticle)
/* harmony export */ });
function formatOrdinalNumber(num) {
  var lastTwoDigits = Number(String(num).slice(-2));
  if (lastTwoDigits > 3 && lastTwoDigits < 21) return "th";
  switch (lastTwoDigits % 10) {
    case 1:
      return "st";
    case 2:
      return "nd";
    case 3:
      return "rd";
    default:
      return "th";
  }
}
function compileEnumeration(list) {
  if (list.length === 0) return "";
  if (list.length === 1) return list[0];
  var result = "";
  for (var i = 0; i < list.length; i++) {
    if (i === list.length - 2) {
      result += " ".concat(list[i], " or ");
    } else if (i === list.length - 1) {
      result += list[i];
    } else {
      result += list[i] + ", ";
    }
  }
  return result;
}
function prefixWithIndefiniteArticle(str) {
  var vowels = /[AEUIO]/i;
  return vowels.test(str.charAt(0)) ? "an " + str : "a " + str;
}
function convertSecondsToFlexibleHoursMinutesSeconds(seconds) {
  if (seconds >= 3600) {
    return new Date(seconds * 1000).toISOString().substring(11, 16);
  } else {
    return new Date(seconds * 1000).toISOString().substring(14, 19);
  }
}
function convertCamelCaseToKebabCase(baseString) {
  return baseString.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase();
}
function hashString(string) {
  var hash = 0;
  for (var i = 0; i < string.length; i++) {
    var char = string.charCodeAt(i);
    hash = (hash << 5) - hash + char;
    hash |= 0;
  }
  return hash;
}

/***/ }),

/***/ 35982:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony import */ var _css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60445);
/* harmony import */ var _css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(60352);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --toastify-color-light: #fff;\n  --toastify-color-dark: #121212;\n  --toastify-color-info: #3498db;\n  --toastify-color-success: #07bc0c;\n  --toastify-color-warning: #f1c40f;\n  --toastify-color-error: #e74c3c;\n  --toastify-color-transparent: rgba(255, 255, 255, 0.7);\n  --toastify-icon-color-info: var(--toastify-color-info);\n  --toastify-icon-color-success: var(--toastify-color-success);\n  --toastify-icon-color-warning: var(--toastify-color-warning);\n  --toastify-icon-color-error: var(--toastify-color-error);\n  --toastify-toast-width: 320px;\n  --toastify-toast-background: #fff;\n  --toastify-toast-min-height: 64px;\n  --toastify-toast-max-height: 800px;\n  --toastify-font-family: sans-serif;\n  --toastify-z-index: 9999;\n  --toastify-text-color-light: #757575;\n  --toastify-text-color-dark: #fff;\n  --toastify-text-color-info: #fff;\n  --toastify-text-color-success: #fff;\n  --toastify-text-color-warning: #fff;\n  --toastify-text-color-error: #fff;\n  --toastify-spinner-color: #616161;\n  --toastify-spinner-color-empty-area: #e0e0e0;\n  --toastify-color-progress-light: linear-gradient(\n    to right,\n    #4cd964,\n    #5ac8fa,\n    #007aff,\n    #34aadc,\n    #5856d6,\n    #ff2d55\n  );\n  --toastify-color-progress-dark: #bb86fc;\n  --toastify-color-progress-info: var(--toastify-color-info);\n  --toastify-color-progress-success: var(--toastify-color-success);\n  --toastify-color-progress-warning: var(--toastify-color-warning);\n  --toastify-color-progress-error: var(--toastify-color-error);\n}\n\n.Toastify__toast-container {\n  z-index: var(--toastify-z-index);\n  -webkit-transform: translate3d(0, 0, var(--toastify-z-index) px);\n  position: fixed;\n  padding: 4px;\n  width: var(--toastify-toast-width);\n  box-sizing: border-box;\n  color: #fff;\n}\n.Toastify__toast-container--top-left {\n  top: 1em;\n  left: 1em;\n}\n.Toastify__toast-container--top-center {\n  top: 1em;\n  left: 50%;\n  transform: translateX(-50%);\n}\n.Toastify__toast-container--top-right {\n  top: 1em;\n  right: 1em;\n}\n.Toastify__toast-container--bottom-left {\n  bottom: 1em;\n  left: 1em;\n}\n.Toastify__toast-container--bottom-center {\n  bottom: 1em;\n  left: 50%;\n  transform: translateX(-50%);\n}\n.Toastify__toast-container--bottom-right {\n  bottom: 1em;\n  right: 1em;\n}\n\n@media only screen and (max-width : 480px) {\n  .Toastify__toast-container {\n    width: 100vw;\n    padding: 0;\n    left: 0;\n    margin: 0;\n  }\n  .Toastify__toast-container--top-left, .Toastify__toast-container--top-center, .Toastify__toast-container--top-right {\n    top: 0;\n    transform: translateX(0);\n  }\n  .Toastify__toast-container--bottom-left, .Toastify__toast-container--bottom-center, .Toastify__toast-container--bottom-right {\n    bottom: 0;\n    transform: translateX(0);\n  }\n  .Toastify__toast-container--rtl {\n    right: 0;\n    left: initial;\n  }\n}\n.Toastify__toast {\n  position: relative;\n  min-height: var(--toastify-toast-min-height);\n  box-sizing: border-box;\n  margin-bottom: 1rem;\n  padding: 8px;\n  border-radius: 4px;\n  box-shadow: 0 1px 10px 0 rgba(0, 0, 0, 0.1), 0 2px 15px 0 rgba(0, 0, 0, 0.05);\n  display: -ms-flexbox;\n  display: flex;\n  -ms-flex-pack: justify;\n      justify-content: space-between;\n  max-height: var(--toastify-toast-max-height);\n  overflow: hidden;\n  font-family: var(--toastify-font-family);\n  cursor: default;\n  direction: ltr;\n  /* webkit only issue #791 */\n  z-index: 0;\n}\n.Toastify__toast--rtl {\n  direction: rtl;\n}\n.Toastify__toast--close-on-click {\n  cursor: pointer;\n}\n.Toastify__toast-body {\n  margin: auto 0;\n  -ms-flex: 1 1 auto;\n      flex: 1 1 auto;\n  padding: 6px;\n  display: -ms-flexbox;\n  display: flex;\n  -ms-flex-align: center;\n      align-items: center;\n}\n.Toastify__toast-body > div:last-child {\n  word-break: break-word;\n  -ms-flex: 1;\n      flex: 1;\n}\n.Toastify__toast-icon {\n  -webkit-margin-end: 10px;\n          margin-inline-end: 10px;\n  width: 20px;\n  -ms-flex-negative: 0;\n      flex-shrink: 0;\n  display: -ms-flexbox;\n  display: flex;\n}\n\n.Toastify--animate {\n  animation-fill-mode: both;\n  animation-duration: 0.7s;\n}\n\n.Toastify--animate-icon {\n  animation-fill-mode: both;\n  animation-duration: 0.3s;\n}\n\n@media only screen and (max-width : 480px) {\n  .Toastify__toast {\n    margin-bottom: 0;\n    border-radius: 0;\n  }\n}\n.Toastify__toast-theme--dark {\n  background: var(--toastify-color-dark);\n  color: var(--toastify-text-color-dark);\n}\n.Toastify__toast-theme--light {\n  background: var(--toastify-color-light);\n  color: var(--toastify-text-color-light);\n}\n.Toastify__toast-theme--colored.Toastify__toast--default {\n  background: var(--toastify-color-light);\n  color: var(--toastify-text-color-light);\n}\n.Toastify__toast-theme--colored.Toastify__toast--info {\n  color: var(--toastify-text-color-info);\n  background: var(--toastify-color-info);\n}\n.Toastify__toast-theme--colored.Toastify__toast--success {\n  color: var(--toastify-text-color-success);\n  background: var(--toastify-color-success);\n}\n.Toastify__toast-theme--colored.Toastify__toast--warning {\n  color: var(--toastify-text-color-warning);\n  background: var(--toastify-color-warning);\n}\n.Toastify__toast-theme--colored.Toastify__toast--error {\n  color: var(--toastify-text-color-error);\n  background: var(--toastify-color-error);\n}\n\n.Toastify__progress-bar-theme--light {\n  background: var(--toastify-color-progress-light);\n}\n.Toastify__progress-bar-theme--dark {\n  background: var(--toastify-color-progress-dark);\n}\n.Toastify__progress-bar--info {\n  background: var(--toastify-color-progress-info);\n}\n.Toastify__progress-bar--success {\n  background: var(--toastify-color-progress-success);\n}\n.Toastify__progress-bar--warning {\n  background: var(--toastify-color-progress-warning);\n}\n.Toastify__progress-bar--error {\n  background: var(--toastify-color-progress-error);\n}\n.Toastify__progress-bar-theme--colored.Toastify__progress-bar--info, .Toastify__progress-bar-theme--colored.Toastify__progress-bar--success, .Toastify__progress-bar-theme--colored.Toastify__progress-bar--warning, .Toastify__progress-bar-theme--colored.Toastify__progress-bar--error {\n  background: var(--toastify-color-transparent);\n}\n\n.Toastify__close-button {\n  color: #fff;\n  background: transparent;\n  outline: none;\n  border: none;\n  padding: 0;\n  cursor: pointer;\n  opacity: 0.7;\n  transition: 0.3s ease;\n  -ms-flex-item-align: start;\n      align-self: flex-start;\n}\n.Toastify__close-button--light {\n  color: #000;\n  opacity: 0.3;\n}\n.Toastify__close-button > svg {\n  fill: currentColor;\n  height: 16px;\n  width: 14px;\n}\n.Toastify__close-button:hover, .Toastify__close-button:focus {\n  opacity: 1;\n}\n\n@keyframes Toastify__trackProgress {\n  0% {\n    transform: scaleX(1);\n  }\n  100% {\n    transform: scaleX(0);\n  }\n}\n.Toastify__progress-bar {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 5px;\n  z-index: var(--toastify-z-index);\n  opacity: 0.7;\n  transform-origin: left;\n}\n.Toastify__progress-bar--animated {\n  animation: Toastify__trackProgress linear 1 forwards;\n}\n.Toastify__progress-bar--controlled {\n  transition: transform 0.2s;\n}\n.Toastify__progress-bar--rtl {\n  right: 0;\n  left: initial;\n  transform-origin: right;\n}\n\n.Toastify__spinner {\n  width: 20px;\n  height: 20px;\n  box-sizing: border-box;\n  border: 2px solid;\n  border-radius: 100%;\n  border-color: var(--toastify-spinner-color-empty-area);\n  border-right-color: var(--toastify-spinner-color);\n  animation: Toastify__spin 0.65s linear infinite;\n}\n\n@keyframes Toastify__bounceInRight {\n  from, 60%, 75%, 90%, to {\n    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\n  }\n  from {\n    opacity: 0;\n    transform: translate3d(3000px, 0, 0);\n  }\n  60% {\n    opacity: 1;\n    transform: translate3d(-25px, 0, 0);\n  }\n  75% {\n    transform: translate3d(10px, 0, 0);\n  }\n  90% {\n    transform: translate3d(-5px, 0, 0);\n  }\n  to {\n    transform: none;\n  }\n}\n@keyframes Toastify__bounceOutRight {\n  20% {\n    opacity: 1;\n    transform: translate3d(-20px, 0, 0);\n  }\n  to {\n    opacity: 0;\n    transform: translate3d(2000px, 0, 0);\n  }\n}\n@keyframes Toastify__bounceInLeft {\n  from, 60%, 75%, 90%, to {\n    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\n  }\n  0% {\n    opacity: 0;\n    transform: translate3d(-3000px, 0, 0);\n  }\n  60% {\n    opacity: 1;\n    transform: translate3d(25px, 0, 0);\n  }\n  75% {\n    transform: translate3d(-10px, 0, 0);\n  }\n  90% {\n    transform: translate3d(5px, 0, 0);\n  }\n  to {\n    transform: none;\n  }\n}\n@keyframes Toastify__bounceOutLeft {\n  20% {\n    opacity: 1;\n    transform: translate3d(20px, 0, 0);\n  }\n  to {\n    opacity: 0;\n    transform: translate3d(-2000px, 0, 0);\n  }\n}\n@keyframes Toastify__bounceInUp {\n  from, 60%, 75%, 90%, to {\n    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\n  }\n  from {\n    opacity: 0;\n    transform: translate3d(0, 3000px, 0);\n  }\n  60% {\n    opacity: 1;\n    transform: translate3d(0, -20px, 0);\n  }\n  75% {\n    transform: translate3d(0, 10px, 0);\n  }\n  90% {\n    transform: translate3d(0, -5px, 0);\n  }\n  to {\n    transform: translate3d(0, 0, 0);\n  }\n}\n@keyframes Toastify__bounceOutUp {\n  20% {\n    transform: translate3d(0, -10px, 0);\n  }\n  40%, 45% {\n    opacity: 1;\n    transform: translate3d(0, 20px, 0);\n  }\n  to {\n    opacity: 0;\n    transform: translate3d(0, -2000px, 0);\n  }\n}\n@keyframes Toastify__bounceInDown {\n  from, 60%, 75%, 90%, to {\n    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\n  }\n  0% {\n    opacity: 0;\n    transform: translate3d(0, -3000px, 0);\n  }\n  60% {\n    opacity: 1;\n    transform: translate3d(0, 25px, 0);\n  }\n  75% {\n    transform: translate3d(0, -10px, 0);\n  }\n  90% {\n    transform: translate3d(0, 5px, 0);\n  }\n  to {\n    transform: none;\n  }\n}\n@keyframes Toastify__bounceOutDown {\n  20% {\n    transform: translate3d(0, 10px, 0);\n  }\n  40%, 45% {\n    opacity: 1;\n    transform: translate3d(0, -20px, 0);\n  }\n  to {\n    opacity: 0;\n    transform: translate3d(0, 2000px, 0);\n  }\n}\n.Toastify__bounce-enter--top-left, .Toastify__bounce-enter--bottom-left {\n  animation-name: Toastify__bounceInLeft;\n}\n.Toastify__bounce-enter--top-right, .Toastify__bounce-enter--bottom-right {\n  animation-name: Toastify__bounceInRight;\n}\n.Toastify__bounce-enter--top-center {\n  animation-name: Toastify__bounceInDown;\n}\n.Toastify__bounce-enter--bottom-center {\n  animation-name: Toastify__bounceInUp;\n}\n\n.Toastify__bounce-exit--top-left, .Toastify__bounce-exit--bottom-left {\n  animation-name: Toastify__bounceOutLeft;\n}\n.Toastify__bounce-exit--top-right, .Toastify__bounce-exit--bottom-right {\n  animation-name: Toastify__bounceOutRight;\n}\n.Toastify__bounce-exit--top-center {\n  animation-name: Toastify__bounceOutUp;\n}\n.Toastify__bounce-exit--bottom-center {\n  animation-name: Toastify__bounceOutDown;\n}\n\n@keyframes Toastify__zoomIn {\n  from {\n    opacity: 0;\n    transform: scale3d(0.3, 0.3, 0.3);\n  }\n  50% {\n    opacity: 1;\n  }\n}\n@keyframes Toastify__zoomOut {\n  from {\n    opacity: 1;\n  }\n  50% {\n    opacity: 0;\n    transform: scale3d(0.3, 0.3, 0.3);\n  }\n  to {\n    opacity: 0;\n  }\n}\n.Toastify__zoom-enter {\n  animation-name: Toastify__zoomIn;\n}\n\n.Toastify__zoom-exit {\n  animation-name: Toastify__zoomOut;\n}\n\n@keyframes Toastify__flipIn {\n  from {\n    transform: perspective(400px) rotate3d(1, 0, 0, 90deg);\n    animation-timing-function: ease-in;\n    opacity: 0;\n  }\n  40% {\n    transform: perspective(400px) rotate3d(1, 0, 0, -20deg);\n    animation-timing-function: ease-in;\n  }\n  60% {\n    transform: perspective(400px) rotate3d(1, 0, 0, 10deg);\n    opacity: 1;\n  }\n  80% {\n    transform: perspective(400px) rotate3d(1, 0, 0, -5deg);\n  }\n  to {\n    transform: perspective(400px);\n  }\n}\n@keyframes Toastify__flipOut {\n  from {\n    transform: perspective(400px);\n  }\n  30% {\n    transform: perspective(400px) rotate3d(1, 0, 0, -20deg);\n    opacity: 1;\n  }\n  to {\n    transform: perspective(400px) rotate3d(1, 0, 0, 90deg);\n    opacity: 0;\n  }\n}\n.Toastify__flip-enter {\n  animation-name: Toastify__flipIn;\n}\n\n.Toastify__flip-exit {\n  animation-name: Toastify__flipOut;\n}\n\n@keyframes Toastify__slideInRight {\n  from {\n    transform: translate3d(110%, 0, 0);\n    visibility: visible;\n  }\n  to {\n    transform: translate3d(0, 0, 0);\n  }\n}\n@keyframes Toastify__slideInLeft {\n  from {\n    transform: translate3d(-110%, 0, 0);\n    visibility: visible;\n  }\n  to {\n    transform: translate3d(0, 0, 0);\n  }\n}\n@keyframes Toastify__slideInUp {\n  from {\n    transform: translate3d(0, 110%, 0);\n    visibility: visible;\n  }\n  to {\n    transform: translate3d(0, 0, 0);\n  }\n}\n@keyframes Toastify__slideInDown {\n  from {\n    transform: translate3d(0, -110%, 0);\n    visibility: visible;\n  }\n  to {\n    transform: translate3d(0, 0, 0);\n  }\n}\n@keyframes Toastify__slideOutRight {\n  from {\n    transform: translate3d(0, 0, 0);\n  }\n  to {\n    visibility: hidden;\n    transform: translate3d(110%, 0, 0);\n  }\n}\n@keyframes Toastify__slideOutLeft {\n  from {\n    transform: translate3d(0, 0, 0);\n  }\n  to {\n    visibility: hidden;\n    transform: translate3d(-110%, 0, 0);\n  }\n}\n@keyframes Toastify__slideOutDown {\n  from {\n    transform: translate3d(0, 0, 0);\n  }\n  to {\n    visibility: hidden;\n    transform: translate3d(0, 500px, 0);\n  }\n}\n@keyframes Toastify__slideOutUp {\n  from {\n    transform: translate3d(0, 0, 0);\n  }\n  to {\n    visibility: hidden;\n    transform: translate3d(0, -500px, 0);\n  }\n}\n.Toastify__slide-enter--top-left, .Toastify__slide-enter--bottom-left {\n  animation-name: Toastify__slideInLeft;\n}\n.Toastify__slide-enter--top-right, .Toastify__slide-enter--bottom-right {\n  animation-name: Toastify__slideInRight;\n}\n.Toastify__slide-enter--top-center {\n  animation-name: Toastify__slideInDown;\n}\n.Toastify__slide-enter--bottom-center {\n  animation-name: Toastify__slideInUp;\n}\n\n.Toastify__slide-exit--top-left, .Toastify__slide-exit--bottom-left {\n  animation-name: Toastify__slideOutLeft;\n}\n.Toastify__slide-exit--top-right, .Toastify__slide-exit--bottom-right {\n  animation-name: Toastify__slideOutRight;\n}\n.Toastify__slide-exit--top-center {\n  animation-name: Toastify__slideOutUp;\n}\n.Toastify__slide-exit--bottom-center {\n  animation-name: Toastify__slideOutDown;\n}\n\n@keyframes Toastify__spin {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n/*# sourceMappingURL=ReactToastify.css.map */", "",{"version":3,"sources":["webpack://./node_modules/react-toastify/scss/_variables.scss","webpack://./node_modules/react-toastify/dist/ReactToastify.css","webpack://./node_modules/react-toastify/scss/_toastContainer.scss","webpack://./node_modules/react-toastify/scss/_toast.scss","webpack://./node_modules/react-toastify/scss/_theme.scss","webpack://./node_modules/react-toastify/scss/_closeButton.scss","webpack://./node_modules/react-toastify/scss/_progressBar.scss","webpack://./node_modules/react-toastify/scss/_icons.scss","webpack://./node_modules/react-toastify/scss/animations/_bounce.scss","webpack://./node_modules/react-toastify/scss/animations/_zoom.scss","webpack://./node_modules/react-toastify/scss/animations/_flip.scss","webpack://./node_modules/react-toastify/scss/animations/_slide.scss","webpack://./node_modules/react-toastify/scss/animations/_spin.scss"],"names":[],"mappings":"AAGA;EACE,4BAAA;EACA,8BAAA;EACA,8BAAA;EACA,iCAAA;EACA,iCAAA;EACA,+BAAA;EACA,sDAAA;EAEA,sDAAA;EACA,4DAAA;EACA,4DAAA;EACA,wDAAA;EAEA,6BAAA;EACA,iCAAA;EACA,iCAAA;EACA,kCAAA;EACA,kCAAA;EACA,wBAAA;EAEA,oCAAA;EACA,gCAAA;EAGA,gCAAA;EACA,mCAAA;EACA,mCAAA;EACA,iCAAA;EAEA,iCAAA;EACA,4CAAA;EAGA;;;;;;;;GAAA;EAUA,uCAAA;EACA,0DAAA;EACA,gEAAA;EACA,gEAAA;EACA,4DAAA;ACXF;;ACxCA;EACE,gCAAA;EACA,gEAAA;EACA,eAAA;EACA,YAAA;EACA,kCAAA;EACA,sBAAA;EACA,WAAA;AD2CF;AC1CE;EACE,QAAA;EACA,SAAA;AD4CJ;AC1CE;EACE,QAAA;EACA,SAAA;EACA,2BAAA;AD4CJ;AC1CE;EACE,QAAA;EACA,UAAA;AD4CJ;AC1CE;EACE,WAAA;EACA,SAAA;AD4CJ;AC1CE;EACE,WAAA;EACA,SAAA;EACA,2BAAA;AD4CJ;AC1CE;EACE,WAAA;EACA,UAAA;AD4CJ;;ACxCA;EACE;IACE,YAAA;IACA,UAAA;IACA,OAAA;IACA,SAAA;ED2CF;EC1CE;IAGE,MAAA;IACA,wBAAA;ED0CJ;ECxCE;IAGE,SAAA;IACA,wBAAA;EDwCJ;ECtCE;IACE,QAAA;IACA,aAAA;EDwCJ;AACF;AEjGA;EACE,kBAAA;EACA,4CAAA;EACA,sBAAA;EACA,mBAAA;EACA,YAAA;EACA,kBAAA;EACA,6EAAA;EACA,oBAAA;EAAA,aAAA;EACA,sBAAA;MAAA,8BAAA;EACA,4CAAA;EACA,gBAAA;EACA,wCAAA;EACA,eAAA;EACA,cAAA;EACA,2BAAA;EACA,UAAA;AFmGF;AElGE;EACE,cAAA;AFoGJ;AElGE;EACE,eAAA;AFoGJ;AElGE;EACE,cAAA;EACA,kBAAA;MAAA,cAAA;EACA,YAAA;EACA,oBAAA;EAAA,aAAA;EACA,sBAAA;MAAA,mBAAA;AFoGJ;AEnGI;EACE,sBAAA;EACA,WAAA;MAAA,OAAA;AFqGN;AElGE;EACE,wBAAA;UAAA,uBAAA;EACA,WAAA;EACA,oBAAA;MAAA,cAAA;EACA,oBAAA;EAAA,aAAA;AFoGJ;;AEhGA;EACE,yBAAA;EACA,wBAAA;AFmGF;;AEhGA;EACE,yBAAA;EACA,wBAAA;AFmGF;;AEhGA;EACE;IACE,gBAAA;IACA,gBAAA;EFmGF;AACF;AG1JE;EACE,sCAAA;EACA,sCAAA;AH4JJ;AG1JE;EACE,uCAAA;EACA,uCAAA;AH4JJ;AG1JE;EACE,uCAAA;EACA,uCAAA;AH4JJ;AG1JE;EACE,sCAAA;EACA,sCAAA;AH4JJ;AG1JE;EACE,yCAAA;EACA,yCAAA;AH4JJ;AG1JE;EACE,yCAAA;EACA,yCAAA;AH4JJ;AG1JE;EACE,uCAAA;EACA,uCAAA;AH4JJ;;AGvJE;EACE,gDAAA;AH0JJ;AGxJE;EACE,+CAAA;AH0JJ;AGxJE;EACE,+CAAA;AH0JJ;AGxJE;EACE,kDAAA;AH0JJ;AGxJE;EACE,kDAAA;AH0JJ;AGxJE;EACE,gDAAA;AH0JJ;AGxJE;EAIE,6CAAA;AHuJJ;;AI7MA;EACE,WAAA;EACA,uBAAA;EACA,aAAA;EACA,YAAA;EACA,UAAA;EACA,eAAA;EACA,YAAA;EACA,qBAAA;EACA,0BAAA;MAAA,sBAAA;AJgNF;AI9ME;EACE,WAAA;EACA,YAAA;AJgNJ;AI7ME;EACE,kBAAA;EACA,YAAA;EACA,WAAA;AJ+MJ;AI5ME;EAEE,UAAA;AJ6MJ;;AKrOA;EACE;IACE,oBAAA;ELwOF;EKtOA;IACE,oBAAA;ELwOF;AACF;AKrOA;EACE,kBAAA;EACA,SAAA;EACA,OAAA;EACA,WAAA;EACA,WAAA;EACA,gCAAA;EACA,YAAA;EACA,sBAAA;ALuOF;AKrOE;EACE,oDAAA;ALuOJ;AKpOE;EACE,0BAAA;ALsOJ;AKnOE;EACE,QAAA;EACA,aAAA;EACA,uBAAA;ALqOJ;;AMnQA;EACE,WAAA;EACA,YAAA;EACA,sBAAA;EACA,iBAAA;EACA,mBAAA;EACA,sDAAA;EACA,iDAAA;EACA,+CAAA;ANsQF;;AO1QA;EACE;IAJA,8DAAA;EPkRA;EOvQA;IACE,UAAA;IACA,oCAAA;EPyQF;EOvQA;IACE,UAAA;IACA,mCAAA;EPyQF;EOvQA;IACE,kCAAA;EPyQF;EOvQA;IACE,kCAAA;EPyQF;EOvQA;IACE,eAAA;EPyQF;AACF;AOtQA;EACE;IACE,UAAA;IACA,mCAAA;EPwQF;EOtQA;IACE,UAAA;IACA,oCAAA;EPwQF;AACF;AOrQA;EACE;IA1CA,8DAAA;EPkTA;EOjQA;IACE,UAAA;IACA,qCAAA;EPmQF;EOjQA;IACE,UAAA;IACA,kCAAA;EPmQF;EOjQA;IACE,mCAAA;EPmQF;EOjQA;IACE,iCAAA;EPmQF;EOjQA;IACE,eAAA;EPmQF;AACF;AOhQA;EACE;IACE,UAAA;IACA,kCAAA;EPkQF;EOhQA;IACE,UAAA;IACA,qCAAA;EPkQF;AACF;AO/PA;EACE;IAhFA,8DAAA;EPkVA;EO3PA;IACE,UAAA;IACA,oCAAA;EP6PF;EO3PA;IACE,UAAA;IACA,mCAAA;EP6PF;EO3PA;IACE,kCAAA;EP6PF;EO3PA;IACE,kCAAA;EP6PF;EO3PA;IACE,+BAAA;EP6PF;AACF;AO1PA;EACE;IACE,mCAAA;EP4PF;EO1PA;IAEE,UAAA;IACA,kCAAA;EP2PF;EOzPA;IACE,UAAA;IACA,qCAAA;EP2PF;AACF;AOxPA;EACE;IA1HA,8DAAA;EPqXA;EOpPA;IACE,UAAA;IACA,qCAAA;EPsPF;EOpPA;IACE,UAAA;IACA,kCAAA;EPsPF;EOpPA;IACE,mCAAA;EPsPF;EOpPA;IACE,iCAAA;EPsPF;EOpPA;IACE,eAAA;EPsPF;AACF;AOnPA;EACE;IACE,kCAAA;EPqPF;EOnPA;IAEE,UAAA;IACA,mCAAA;EPoPF;EOlPA;IACE,UAAA;IACA,oCAAA;EPoPF;AACF;AOhPE;EAEE,sCAAA;APiPJ;AO/OE;EAEE,uCAAA;APgPJ;AO9OE;EACE,sCAAA;APgPJ;AO9OE;EACE,oCAAA;APgPJ;;AO3OE;EAEE,uCAAA;AP6OJ;AO3OE;EAEE,wCAAA;AP4OJ;AO1OE;EACE,qCAAA;AP4OJ;AO1OE;EACE,uCAAA;AP4OJ;;AQ9aA;EACE;IACE,UAAA;IACA,iCAAA;ERibF;EQ/aA;IACE,UAAA;ERibF;AACF;AQ9aA;EACE;IACE,UAAA;ERgbF;EQ9aA;IACE,UAAA;IACA,iCAAA;ERgbF;EQ9aA;IACE,UAAA;ERgbF;AACF;AQ7aA;EACE,gCAAA;AR+aF;;AQ5aA;EACE,iCAAA;AR+aF;;AS3cA;EACE;IACE,sDAAA;IACA,kCAAA;IACA,UAAA;ET8cF;ES5cA;IACE,uDAAA;IACA,kCAAA;ET8cF;ES5cA;IACE,sDAAA;IACA,UAAA;ET8cF;ES5cA;IACE,sDAAA;ET8cF;ES5cA;IACE,6BAAA;ET8cF;AACF;AS3cA;EACE;IACE,6BAAA;ET6cF;ES3cA;IACE,uDAAA;IACA,UAAA;ET6cF;ES3cA;IACE,sDAAA;IACA,UAAA;ET6cF;AACF;AS1cA;EACE,gCAAA;AT4cF;;ASzcA;EACE,iCAAA;AT4cF;;AUjfA;EACE;IACE,kCAAA;IACA,mBAAA;EVofF;EUlfA;IARA,+BAAA;EV6fA;AACF;AUjfA;EACE;IACE,mCAAA;IACA,mBAAA;EVmfF;EUjfA;IAlBA,+BAAA;EVsgBA;AACF;AUhfA;EACE;IACE,kCAAA;IACA,mBAAA;EVkfF;EUhfA;IA5BA,+BAAA;EV+gBA;AACF;AU/eA;EACE;IACE,mCAAA;IACA,mBAAA;EVifF;EU/eA;IAtCA,+BAAA;EVwhBA;AACF;AU9eA;EACE;IA5CA,+BAAA;EV6hBA;EU9eA;IACE,kBAAA;IACA,kCAAA;EVgfF;AACF;AU7eA;EACE;IAtDA,+BAAA;EVsiBA;EU7eA;IACE,kBAAA;IACA,mCAAA;EV+eF;AACF;AU5eA;EACE;IAhEA,+BAAA;EV+iBA;EU5eA;IACE,kBAAA;IACA,mCAAA;EV8eF;AACF;AU3eA;EACE;IA1EA,+BAAA;EVwjBA;EU3eA;IACE,kBAAA;IACA,oCAAA;EV6eF;AACF;AUzeE;EAEE,qCAAA;AV0eJ;AUxeE;EAEE,sCAAA;AVyeJ;AUveE;EACE,qCAAA;AVyeJ;AUveE;EACE,mCAAA;AVyeJ;;AUpeE;EAEE,sCAAA;AVseJ;AUpeE;EAEE,uCAAA;AVqeJ;AUneE;EACE,oCAAA;AVqeJ;AUneE;EACE,sCAAA;AVqeJ;;AWvlBA;EACE;IACE,uBAAA;EX0lBF;EWxlBA;IACE,yBAAA;EX0lBF;AACF;;AAYA,4CAA4C","sourceRoot":""}]);
// Exports
/* harmony default export */ __webpack_exports__["Z"] = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 95626:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony import */ var _css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60445);
/* harmony import */ var _css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(60352);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --rt-color-white: #fff;\n  --rt-color-dark: #222;\n  --rt-color-success: #8dc572;\n  --rt-color-error: #be6464;\n  --rt-color-warning: #f0ad4e;\n  --rt-color-info: #337ab7;\n  --rt-opacity: 0.9;\n}\n\n.styles-module_tooltip__mnnfp {\n  visibility: hidden;\n  width: max-content;\n  position: absolute;\n  top: 0;\n  left: 0;\n  padding: 8px 16px;\n  border-radius: 3px;\n  font-size: 90%;\n  pointer-events: none;\n  opacity: 0;\n  transition: opacity 0.3s ease-out;\n  will-change: opacity, visibility;\n}\n\n.styles-module_fixed__7ciUi {\n  position: fixed;\n}\n\n.styles-module_arrow__K0L3T {\n  position: absolute;\n  background: inherit;\n  width: 8px;\n  height: 8px;\n  transform: rotate(45deg);\n}\n\n.styles-module_no-arrow__KcFZN {\n  display: none;\n}\n\n.styles-module_clickable__Bv9o7 {\n  pointer-events: auto;\n}\n\n.styles-module_show__2NboJ {\n  visibility: visible;\n  opacity: var(--rt-opacity);\n}\n\n/** Types variant **/\n.styles-module_dark__xNqje {\n  background: var(--rt-color-dark);\n  color: var(--rt-color-white);\n}\n\n.styles-module_light__Z6W-X {\n  background-color: var(--rt-color-white);\n  color: var(--rt-color-dark);\n}\n\n.styles-module_success__A2AKt {\n  background-color: var(--rt-color-success);\n  color: var(--rt-color-white);\n}\n\n.styles-module_warning__SCK0X {\n  background-color: var(--rt-color-warning);\n  color: var(--rt-color-white);\n}\n\n.styles-module_error__JvumD {\n  background-color: var(--rt-color-error);\n  color: var(--rt-color-white);\n}\n\n.styles-module_info__BWdHW {\n  background-color: var(--rt-color-info);\n  color: var(--rt-color-white);\n}\n", "",{"version":3,"sources":["webpack://./node_modules/react-tooltip/dist/react-tooltip.css"],"names":[],"mappings":"AAAA;EACE,sBAAsB;EACtB,qBAAqB;EACrB,2BAA2B;EAC3B,yBAAyB;EACzB,2BAA2B;EAC3B,wBAAwB;EACxB,iBAAiB;AACnB;;AAEA;EACE,kBAAkB;EAClB,kBAAkB;EAClB,kBAAkB;EAClB,MAAM;EACN,OAAO;EACP,iBAAiB;EACjB,kBAAkB;EAClB,cAAc;EACd,oBAAoB;EACpB,UAAU;EACV,iCAAiC;EACjC,gCAAgC;AAClC;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,kBAAkB;EAClB,mBAAmB;EACnB,UAAU;EACV,WAAW;EACX,wBAAwB;AAC1B;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,oBAAoB;AACtB;;AAEA;EACE,mBAAmB;EACnB,0BAA0B;AAC5B;;AAEA,oBAAoB;AACpB;EACE,gCAAgC;EAChC,4BAA4B;AAC9B;;AAEA;EACE,uCAAuC;EACvC,2BAA2B;AAC7B;;AAEA;EACE,yCAAyC;EACzC,4BAA4B;AAC9B;;AAEA;EACE,yCAAyC;EACzC,4BAA4B;AAC9B;;AAEA;EACE,uCAAuC;EACvC,4BAA4B;AAC9B;;AAEA;EACE,sCAAsC;EACtC,4BAA4B;AAC9B","sourcesContent":[":root {\n  --rt-color-white: #fff;\n  --rt-color-dark: #222;\n  --rt-color-success: #8dc572;\n  --rt-color-error: #be6464;\n  --rt-color-warning: #f0ad4e;\n  --rt-color-info: #337ab7;\n  --rt-opacity: 0.9;\n}\n\n.styles-module_tooltip__mnnfp {\n  visibility: hidden;\n  width: max-content;\n  position: absolute;\n  top: 0;\n  left: 0;\n  padding: 8px 16px;\n  border-radius: 3px;\n  font-size: 90%;\n  pointer-events: none;\n  opacity: 0;\n  transition: opacity 0.3s ease-out;\n  will-change: opacity, visibility;\n}\n\n.styles-module_fixed__7ciUi {\n  position: fixed;\n}\n\n.styles-module_arrow__K0L3T {\n  position: absolute;\n  background: inherit;\n  width: 8px;\n  height: 8px;\n  transform: rotate(45deg);\n}\n\n.styles-module_no-arrow__KcFZN {\n  display: none;\n}\n\n.styles-module_clickable__Bv9o7 {\n  pointer-events: auto;\n}\n\n.styles-module_show__2NboJ {\n  visibility: visible;\n  opacity: var(--rt-opacity);\n}\n\n/** Types variant **/\n.styles-module_dark__xNqje {\n  background: var(--rt-color-dark);\n  color: var(--rt-color-white);\n}\n\n.styles-module_light__Z6W-X {\n  background-color: var(--rt-color-white);\n  color: var(--rt-color-dark);\n}\n\n.styles-module_success__A2AKt {\n  background-color: var(--rt-color-success);\n  color: var(--rt-color-white);\n}\n\n.styles-module_warning__SCK0X {\n  background-color: var(--rt-color-warning);\n  color: var(--rt-color-white);\n}\n\n.styles-module_error__JvumD {\n  background-color: var(--rt-color-error);\n  color: var(--rt-color-white);\n}\n\n.styles-module_info__BWdHW {\n  background-color: var(--rt-color-info);\n  color: var(--rt-color-white);\n}\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ __webpack_exports__["Z"] = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 48002:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60445);
/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(60352);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(18393);
/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _fonts_chessglyph_new_99e0b265_woff2__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(19312);
// Imports




var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));
var ___CSS_LOADER_URL_REPLACEMENT_0___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_fonts_chessglyph_new_99e0b265_woff2__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z);
// Module
___CSS_LOADER_EXPORT___.push([module.id, "@font-face{font-family:\"ChessGlyph New\";src:url(" + ___CSS_LOADER_URL_REPLACEMENT_0___ + ") format(\"woff2\"),url(\"https://www.chess.com/bundles/web/fonts/chessglyph-new.99e0b265.woff2\") format(\"woff2\")}#main{background:#eff;margin:0 auto;width:90vw}", "",{"version":3,"sources":["webpack://./src/main/client/scss/Global.scss"],"names":[],"mappings":"AAAA,WACC,4BAAA,CACA,wJAAA,CAID,MACC,eAAA,CACA,aAAA,CACA,UAAA","sourcesContent":["@font-face {\n\tfont-family: \"ChessGlyph New\";\n\tsrc: url(\"../fonts/chessglyph-new.99e0b265.woff2\") format(\"woff2\"),\n\t\turl(\"https://www.chess.com/bundles/web/fonts/chessglyph-new.99e0b265.woff2\") format(\"woff2\");\n}\n\n#main {\n\tbackground: #eff;\n\tmargin: 0 auto;\n\twidth: 90vw;\n}\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ __webpack_exports__["Z"] = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 49472:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60445);
/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(60352);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, "/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:rgba(0,0,0,0)}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}button,[type=button],[type=reset],[type=submit]{-webkit-appearance:button}button::-moz-focus-inner,[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}", "",{"version":3,"sources":["webpack://./src/main/client/scss/Normalize.scss"],"names":[],"mappings":"AAAA,2EAAA,CAUA,KACC,gBAAA,CAEA,6BAAA,CAWD,KACC,QAAA,CAOD,KACC,aAAA,CAQD,GACC,aAAA,CACA,cAAA,CAWD,GACC,sBAAA,CAEA,QAAA,CAEA,gBAAA,CASD,IACC,+BAAA,CAEA,aAAA,CAWD,EACC,8BAAA,CAQD,YACC,kBAAA,CAEA,yBAAA,CAEA,gCAAA,CAQD,SAEC,kBAAA,CAQD,cAGC,+BAAA,CAEA,aAAA,CAQD,MACC,aAAA,CAQD,QAEC,aAAA,CACA,aAAA,CACA,iBAAA,CACA,uBAAA,CAGD,IACC,cAAA,CAGD,IACC,UAAA,CAUD,IACC,iBAAA,CAWD,sCAKC,mBAAA,CAEA,cAAA,CAEA,gBAAA,CAEA,QAAA,CASD,aAGC,gBAAA,CAQD,cAGC,mBAAA,CAOD,gDAIC,yBAAA,CAOD,wHAIC,iBAAA,CACA,SAAA,CAOD,4GAIC,6BAAA,CAOD,SACC,0BAAA,CAUD,OACC,qBAAA,CAEA,aAAA,CAEA,aAAA,CAEA,cAAA,CAEA,SAAA,CAEA,kBAAA,CAQD,SACC,uBAAA,CAOD,SACC,aAAA,CAQD,6BAEC,qBAAA,CAEA,SAAA,CAQD,kFAEC,WAAA,CAQD,cACC,4BAAA,CAEA,mBAAA,CAQD,yCACC,uBAAA,CAQD,6BACC,yBAAA,CAEA,YAAA,CAWD,QACC,aAAA,CAOD,QACC,iBAAA,CAUD,SACC,YAAA,CAOD,SACC,YAAA","sourcesContent":["/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\nhtml {\n\tline-height: 1.15;\n\t/* 1 */\n\t-webkit-text-size-adjust: 100%;\n\t/* 2 */\n}\n\n/* Sections\n     ========================================================================== */\n\n/**\n   * Remove the margin in all browsers.\n   */\n\nbody {\n\tmargin: 0;\n}\n\n/**\n   * Render the `main` element consistently in IE.\n   */\n\nmain {\n\tdisplay: block;\n}\n\n/**\n   * Correct the font size and margin on `h1` elements within `section` and\n   * `article` contexts in Chrome, Firefox, and Safari.\n   */\n\nh1 {\n\tfont-size: 2em;\n\tmargin: 0.67em 0;\n}\n\n/* Grouping content\n     ========================================================================== */\n\n/**\n   * 1. Add the correct box sizing in Firefox.\n   * 2. Show the overflow in Edge and IE.\n   */\n\nhr {\n\tbox-sizing: content-box;\n\t/* 1 */\n\theight: 0;\n\t/* 1 */\n\toverflow: visible;\n\t/* 2 */\n}\n\n/**\n   * 1. Correct the inheritance and scaling of font size in all browsers.\n   * 2. Correct the odd `em` font sizing in all browsers.\n   */\n\npre {\n\tfont-family: monospace, monospace;\n\t/* 1 */\n\tfont-size: 1em;\n\t/* 2 */\n}\n\n/* Text-level semantics\n     ========================================================================== */\n\n/**\n   * Remove the gray background on active links in IE 10.\n   */\n\na {\n\tbackground-color: transparent;\n}\n\n/**\n   * 1. Remove the bottom border in Chrome 57-\n   * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n   */\n\nabbr[title] {\n\tborder-bottom: none;\n\t/* 1 */\n\ttext-decoration: underline;\n\t/* 2 */\n\ttext-decoration: underline dotted;\n\t/* 2 */\n}\n\n/**\n   * Add the correct font weight in Chrome, Edge, and Safari.\n   */\n\nb,\nstrong {\n\tfont-weight: bolder;\n}\n\n/**\n   * 1. Correct the inheritance and scaling of font size in all browsers.\n   * 2. Correct the odd `em` font sizing in all browsers.\n   */\n\ncode,\nkbd,\nsamp {\n\tfont-family: monospace, monospace;\n\t/* 1 */\n\tfont-size: 1em;\n\t/* 2 */\n}\n\n/**\n   * Add the correct font size in all browsers.\n   */\n\nsmall {\n\tfont-size: 80%;\n}\n\n/**\n   * Prevent `sub` and `sup` elements from affecting the line height in\n   * all browsers.\n   */\n\nsub,\nsup {\n\tfont-size: 75%;\n\tline-height: 0;\n\tposition: relative;\n\tvertical-align: baseline;\n}\n\nsub {\n\tbottom: -0.25em;\n}\n\nsup {\n\ttop: -0.5em;\n}\n\n/* Embedded content\n     ========================================================================== */\n\n/**\n   * Remove the border on images inside links in IE 10.\n   */\n\nimg {\n\tborder-style: none;\n}\n\n/* Forms\n     ========================================================================== */\n\n/**\n   * 1. Change the font styles in all browsers.\n   * 2. Remove the margin in Firefox and Safari.\n   */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n\tfont-family: inherit;\n\t/* 1 */\n\tfont-size: 100%;\n\t/* 1 */\n\tline-height: 1.15;\n\t/* 1 */\n\tmargin: 0;\n\t/* 2 */\n}\n\n/**\n   * Show the overflow in IE.\n   * 1. Show the overflow in Edge.\n   */\n\nbutton,\ninput {\n\t/* 1 */\n\toverflow: visible;\n}\n\n/**\n   * Remove the inheritance of text transform in Edge, Firefox, and IE.\n   * 1. Remove the inheritance of text transform in Firefox.\n   */\n\nbutton,\nselect {\n\t/* 1 */\n\ttext-transform: none;\n}\n\n/**\n   * Correct the inability to style clickable types in iOS and Safari.\n   */\n\nbutton,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"] {\n\t-webkit-appearance: button;\n}\n\n/**\n   * Remove the inner border and padding in Firefox.\n   */\n\nbutton::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner {\n\tborder-style: none;\n\tpadding: 0;\n}\n\n/**\n   * Restore the focus styles unset by the previous rule.\n   */\n\nbutton:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring {\n\toutline: 1px dotted ButtonText;\n}\n\n/**\n   * Correct the padding in Firefox.\n   */\n\nfieldset {\n\tpadding: 0.35em 0.75em 0.625em;\n}\n\n/**\n   * 1. Correct the text wrapping in Edge and IE.\n   * 2. Correct the color inheritance from `fieldset` elements in IE.\n   * 3. Remove the padding so developers are not caught out when they zero out\n   *    `fieldset` elements in all browsers.\n   */\n\nlegend {\n\tbox-sizing: border-box;\n\t/* 1 */\n\tcolor: inherit;\n\t/* 2 */\n\tdisplay: table;\n\t/* 1 */\n\tmax-width: 100%;\n\t/* 1 */\n\tpadding: 0;\n\t/* 3 */\n\twhite-space: normal;\n\t/* 1 */\n}\n\n/**\n   * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n   */\n\nprogress {\n\tvertical-align: baseline;\n}\n\n/**\n   * Remove the default vertical scrollbar in IE 10+.\n   */\n\ntextarea {\n\toverflow: auto;\n}\n\n/**\n   * 1. Add the correct box sizing in IE 10.\n   * 2. Remove the padding in IE 10.\n   */\n\n[type=\"checkbox\"],\n[type=\"radio\"] {\n\tbox-sizing: border-box;\n\t/* 1 */\n\tpadding: 0;\n\t/* 2 */\n}\n\n/**\n   * Correct the cursor style of increment and decrement buttons in Chrome.\n   */\n\n[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button {\n\theight: auto;\n}\n\n/**\n   * 1. Correct the odd appearance in Chrome and Safari.\n   * 2. Correct the outline style in Safari.\n   */\n\n[type=\"search\"] {\n\t-webkit-appearance: textfield;\n\t/* 1 */\n\toutline-offset: -2px;\n\t/* 2 */\n}\n\n/**\n   * Remove the inner padding in Chrome and Safari on macOS.\n   */\n\n[type=\"search\"]::-webkit-search-decoration {\n\t-webkit-appearance: none;\n}\n\n/**\n   * 1. Correct the inability to style clickable types in iOS and Safari.\n   * 2. Change font properties to `inherit` in Safari.\n   */\n\n::-webkit-file-upload-button {\n\t-webkit-appearance: button;\n\t/* 1 */\n\tfont: inherit;\n\t/* 2 */\n}\n\n/* Interactive\n     ========================================================================== */\n\n/*\n   * Add the correct display in Edge, IE 10+, and Firefox.\n   */\n\ndetails {\n\tdisplay: block;\n}\n\n/*\n   * Add the correct display in all browsers.\n   */\n\nsummary {\n\tdisplay: list-item;\n}\n\n/* Misc\n     ========================================================================== */\n\n/**\n   * Add the correct display in IE 10+.\n   */\n\ntemplate {\n\tdisplay: none;\n}\n\n/**\n   * Add the correct display in IE 10.\n   */\n\n[hidden] {\n\tdisplay: none;\n}\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ __webpack_exports__["Z"] = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 83284:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60445);
/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(60352);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, "", "",{"version":3,"sources":[],"names":[],"mappings":"","sourceRoot":""}]);
// Exports
/* harmony default export */ __webpack_exports__["Z"] = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 81689:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60445);
/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(60352);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".Arrows-module-prolonged-concave-arrow-wrap{position:relative;width:inherit;height:inherit}.Arrows-module-prolonged-concave-arrow{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);width:90%;height:15%;background-color:#fff}.Arrows-module-prolonged-concave-arrow::after,.Arrows-module-prolonged-concave-arrow::before{position:absolute;right:-16%;width:60%;height:120%;content:\"\";background-color:#fff}.Arrows-module-prolonged-concave-arrow::after{bottom:120%;transform:rotate(45deg)}.Arrows-module-prolonged-concave-arrow::before{top:110%;transform:rotate(-45deg)}", "",{"version":3,"sources":["webpack://./src/main/client/scss/Arrows.module.scss"],"names":[],"mappings":"AAAA,4CACC,iBAAA,CACA,aAAA,CACA,cAAA,CAGD,uCACC,iBAAA,CACA,OAAA,CACA,QAAA,CACA,+BAAA,CAEA,SAAA,CACA,UAAA,CACA,qBAAA,CAGD,6FAEC,iBAAA,CACA,UAAA,CACA,SAAA,CACA,WAAA,CACA,UAAA,CACA,qBAAA,CAGD,8CACC,WAAA,CACA,uBAAA,CAGD,+CACC,QAAA,CACA,wBAAA","sourcesContent":[".prolonged-concave-arrow-wrap {\n\tposition: relative;\n\twidth: inherit;\n\theight: inherit;\n}\n\n.prolonged-concave-arrow {\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\n\twidth: 90%;\n\theight: 15%;\n\tbackground-color: #fff;\n}\n\n.prolonged-concave-arrow::after,\n.prolonged-concave-arrow::before {\n\tposition: absolute;\n\tright: -16%;\n\twidth: 60%;\n\theight: 120%;\n\tcontent: \"\";\n\tbackground-color: #fff;\n}\n\n.prolonged-concave-arrow::after {\n\tbottom: 120%;\n\ttransform: rotate(45deg);\n}\n\n.prolonged-concave-arrow::before {\n\ttop: 110%;\n\ttransform: rotate(-45deg);\n}\n"],"sourceRoot":""}]);
// Exports
___CSS_LOADER_EXPORT___.locals = {
	"prolonged-concave-arrow-wrap": "Arrows-module-prolonged-concave-arrow-wrap",
	"prolonged-concave-arrow": "Arrows-module-prolonged-concave-arrow"
};
/* harmony default export */ __webpack_exports__["Z"] = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 73801:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60445);
/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(60352);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".BoardPlaceholder-module-placeholder-wrap{position:absolute;width:100%;height:100%;pointer-events:none;z-index:2}.BoardPlaceholder-module-placeholder-wrap>*{position:absolute;top:0;left:0;right:0;bottom:0}.BoardPlaceholder-module-placeholder--enter-active{opacity:1;transition:opacity 300ms ease-in-out 300ms}.BoardPlaceholder-module-placeholder--enter-done{opacity:1}.BoardPlaceholder-module-placeholder--exit-active{opacity:0;transition:opacity 300ms ease-in-out}.BoardPlaceholder-module-placeholder--exit-done{opacity:0}.BoardPlaceholder-module-placeholder__image-loading{background-image:linear-gradient(90deg, #e4e4e4 0%, #f1f1f1 40%, #ededed 60%, #e4e4e4 100%);background-position:0px 0px;background-repeat:repeat;animation:BoardPlaceholder-module-placeholderBackground 5s linear infinite}.BoardPlaceholder-module-placeholder__image-loading--large-sized{display:inline-block;width:60%;height:100%;animation-name:BoardPlaceholder-module-largeSizePlaceholderBackground}.BoardPlaceholder-module-placeholder__background{display:inline-block;width:40%;height:100%;background-color:#e2e2e2}.BoardPlaceholder-module-placeholder__background-text{height:3.5rem;background-image:linear-gradient(90deg, #e4e4e4 0%, #f1f1f1 40%, #ededed 60%, #e4e4e4 100%);background-position:0px 0px;background-repeat:repeat;animation:BoardPlaceholder-module-placeholderTextBackground 5s linear infinite;margin:.5rem}@keyframes BoardPlaceholder-module-placeholderBackground{from{background-position:0 0}to{background-position:4480px 0}}@keyframes BoardPlaceholder-module-largeSizePlaceholderBackground{from{background-position:0 0}to{background-position:4800px 0}}@keyframes BoardPlaceholder-module-placeholderTextBackground{from{background-position:0 0}to{background-position:3200px 0}}", "",{"version":3,"sources":["webpack://./src/main/client/ts/components/BoardComponents/BoardPlaceholder/BoardPlaceholder.module.scss","webpack://./src/main/client/scss/Mixins.scss","webpack://./src/main/client/scss/Colors.scss"],"names":[],"mappings":"AAGC,0CACC,iBAAA,CACA,UAAA,CACA,WAAA,CACA,mBAAA,CACA,SAAA,CAEA,4CCuCD,iBAAA,CACA,KAAA,CACA,MAAA,CACA,OAAA,CACA,QAAA,CDtCA,mDACC,SAAA,CACA,0CAAA,CAGD,iDACC,SAAA,CAGD,kDACC,SAAA,CACA,oCAAA,CAGD,gDACC,SAAA,CAGD,oDACC,2FAAA,CACA,2BAAA,CACA,wBAAA,CACA,0EAAA,CAEA,iEACC,oBAAA,CACA,SAAA,CACA,WAAA,CACA,qEAAA,CAIF,iDACC,oBAAA,CACA,SAAA,CACA,WAAA,CACA,wBElDyB,CFoDzB,sDACC,aAAA,CACA,2FAAA,CACA,2BAAA,CACA,wBAAA,CACA,8EAAA,CACA,YAAA,CAKH,yDACC,KACC,uBAAA,CAGD,GACC,4BAAA,CAAA,CAIF,kEACC,KACC,uBAAA,CAGD,GACC,4BAAA,CAAA,CAIF,6DACC,KACC,uBAAA,CAGD,GACC,4BAAA,CAAA","sourcesContent":["@use \"../../../index\";\n\n.placeholder {\n\t&-wrap {\n\t\tposition: absolute;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tpointer-events: none;\n\t\tz-index: 2;\n\n\t\t& > * {\n\t\t\t@include index.occupyAbsoluteSize;\n\t\t}\n\t}\n\n\t&--enter-active {\n\t\topacity: 1;\n\t\ttransition: opacity 300ms ease-in-out 300ms;\n\t}\n\n\t&--enter-done {\n\t\topacity: 1;\n\t}\n\n\t&--exit-active {\n\t\topacity: 0;\n\t\ttransition: opacity 300ms ease-in-out;\n\t}\n\n\t&--exit-done {\n\t\topacity: 0;\n\t}\n\n\t&__image-loading {\n\t\tbackground-image: linear-gradient(90deg, #e4e4e4 0%, #f1f1f1 40%, #ededed 60%, #e4e4e4 100%);\n\t\tbackground-position: 0px 0px;\n\t\tbackground-repeat: repeat;\n\t\tanimation: placeholderBackground 5s linear infinite;\n\n\t\t&--large-sized {\n\t\t\tdisplay: inline-block;\n\t\t\twidth: 60%;\n\t\t\theight: 100%;\n\t\t\tanimation-name: largeSizePlaceholderBackground;\n\t\t}\n\t}\n\n\t&__background {\n\t\tdisplay: inline-block;\n\t\twidth: 40%;\n\t\theight: 100%;\n\t\tbackground-color: index.$boardComponentWhiteColor;\n\n\t\t&-text {\n\t\t\theight: 3.5rem;\n\t\t\tbackground-image: linear-gradient(90deg, #e4e4e4 0%, #f1f1f1 40%, #ededed 60%, #e4e4e4 100%);\n\t\t\tbackground-position: 0px 0px;\n\t\t\tbackground-repeat: repeat;\n\t\t\tanimation: placeholderTextBackground 5s linear infinite;\n\t\t\tmargin: 0.5rem;\n\t\t}\n\t}\n}\n\n@keyframes placeholderBackground {\n\tfrom {\n\t\tbackground-position: 0 0;\n\t}\n\n\tto {\n\t\tbackground-position: 4480px 0;\n\t}\n}\n\n@keyframes largeSizePlaceholderBackground {\n\tfrom {\n\t\tbackground-position: 0 0;\n\t}\n\n\tto {\n\t\tbackground-position: 4800px 0;\n\t}\n}\n\n@keyframes placeholderTextBackground {\n\tfrom {\n\t\tbackground-position: 0 0;\n\t}\n\n\tto {\n\t\tbackground-position: 3200px 0;\n\t}\n}\n","@mixin scrollbar($width, $thumbColor: #555, $trackColor: #f5f5f5) {\n\tscrollbar-width: $width;\n\tscrollbar-color: $thumbColor $trackColor;\n\n\t&::-webkit-scrollbar-track,\n\t&::-webkit-scrollbar-thumb {\n\t\tbox-shadow: inset 0 0 ($width + 2px) rgba($color: #000000, $alpha: 0.3);\n\t\t-webkit-box-shadow: inset 0 0 ($width + 2px) rgba($color: #000000, $alpha: 0.3);\n\t\tborder-radius: 7px;\n\t}\n\n\t&::-webkit-scrollbar {\n\t\twidth: $width;\n\t}\n\n\t&::-webkit-scrollbar-thumb {\n\t\tbackground-color: $thumbColor;\n\t}\n\n\t&::-webkit-scrollbar-track {\n\t\tbackground-color: $trackColor;\n\t}\n}\n\n@mixin alternatingBoardColors($firstColor, $secondColor, $deeperElement: null, $property: \"background-color\") {\n\t@if ($deeperElement) {\n\t\t&:nth-child(odd)>*:nth-child(odd) #{$deeperElement},\n\t\t&:nth-child(even)>*:nth-child(even) #{$deeperElement} {\n\t\t\t#{$property}: $firstColor;\n\t\t}\n\n\t\t&:nth-child(odd)>*:nth-child(even) #{$deeperElement},\n\t\t&:nth-child(even)>*:nth-child(odd) #{$deeperElement} {\n\t\t\t#{$property}: $secondColor;\n\t\t}\n\t} @else {\n\t\t&:nth-child(odd)>*:nth-child(odd),\n\t\t&:nth-child(even)>*:nth-child(even) {\n\t\t\t#{$property}: $firstColor;\n\t\t}\n\n\t\t&:nth-child(odd)>*:nth-child(even),\n\t\t&:nth-child(even)>*:nth-child(odd) {\n\t\t\t#{$property}: $secondColor;\n\t\t}\n\t}\n}\n\n@mixin occupyAbsoluteSize {\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\tright: 0;\n\tbottom: 0;\n}\n\n@mixin button {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tpadding: 0.5rem 1.2rem;\n\tbackground: hsla(0, 0%, 100%, 0.08);\n\tcolor: #e2e2e2;\n\tborder-radius: 6%;\n\tborder: none;\n}\n\n@mixin iconSize($size: null, $adaptive: false) {\n\t@if ($size) {\n\t\tfont-size: $size;\n\n\t\t@if (not $adaptive) {\n\t\t\twidth: $size;\n\t\t\theight: $size;\n\t\t\tline-height: 1;\n\t\t}\n\t} @else {\n\t\tfont-size: 2rem;\n\t\twidth: 2rem;\n\t\theight: 2rem;\n\t}\n\n\tfont-family: \"ChessGlyph New\";\n}\n\n@mixin tooltip {\n\tdisplay: block;\n\tmax-width: 25rem;\n\tpadding: 0.5rem;\n\tfont-weight: 500;\n\tfont-size: 1.1rem;\n\tword-break: break-word;\n\toverflow-wrap: break-word;\n}\n","$lightContentColor: hsla(0, 0%, 100%, 0.65);\n$boardComponentWhiteColor: #e2e2e2;\n$boardComponentDarkColor: #322e2b;\n$activeColor: #7fa650;\n\n$boardComponentFont: \"Segoe UI\";\n"],"sourceRoot":""}]);
// Exports
___CSS_LOADER_EXPORT___.locals = {
	"placeholder-wrap": "BoardPlaceholder-module-placeholder-wrap",
	"placeholder--enter-active": "BoardPlaceholder-module-placeholder--enter-active",
	"placeholder--enter-done": "BoardPlaceholder-module-placeholder--enter-done",
	"placeholder--exit-active": "BoardPlaceholder-module-placeholder--exit-active",
	"placeholder--exit-done": "BoardPlaceholder-module-placeholder--exit-done",
	"placeholder__image-loading": "BoardPlaceholder-module-placeholder__image-loading",
	"placeholderBackground": "BoardPlaceholder-module-placeholderBackground",
	"placeholder__image-loading--large-sized": "BoardPlaceholder-module-placeholder__image-loading--large-sized",
	"largeSizePlaceholderBackground": "BoardPlaceholder-module-largeSizePlaceholderBackground",
	"placeholder__background": "BoardPlaceholder-module-placeholder__background",
	"placeholder__background-text": "BoardPlaceholder-module-placeholder__background-text",
	"placeholderTextBackground": "BoardPlaceholder-module-placeholderTextBackground"
};
/* harmony default export */ __webpack_exports__["Z"] = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 36017:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60445);
/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(60352);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(18393);
/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _img_pieces_wallStandard_svg__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(27337);
// Imports




var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));
var ___CSS_LOADER_URL_REPLACEMENT_0___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_img_pieces_wallStandard_svg__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".GameDisplay-module-square-wrap-surroundings__atomic-explosion:before{content:\"ἅ\"}.GameDisplay-module-square-wrap-surroundings__atomic-immunity:before{content:\"ŋ\"}.GameDisplay-module-chained-move-notice__takeback-icon:before{content:\"L\"}.GameDisplay-module-player-box__clock-icon:before{content:\"'\"}:root{--main-square-primary-color: rgb(106, 114, 131);--main-square-secondary-color: rgb(41, 48, 61);--main-square-highlight-primary-color: rgb(247, 245, 125);--main-square-highlight-secondary-color: rgb(186, 202, 73);--board-bank-piece-size: 32px;--ghostboard-square-color: #333;--sidebar-background-color: rgba(39, 38, 35, 0.5)}.GameDisplay-module-wrap{position:relative;width:min-content}.GameDisplay-module-piece-bank{z-index:unset;display:grid;grid-auto-flow:column;grid-template-rows:repeat(5, 1fr);background-color:var(--sidebar-background-color);font-weight:600;user-select:none}.GameDisplay-module-piece-bank-container{width:0;height:0}.GameDisplay-module-piece-bank-wrap{z-index:1;position:absolute;overflow:hidden;border-radius:3px;cursor:pointer}.GameDisplay-module-piece-bank-wrap:hover{border-color:rgba(255,255,255,.65)}.GameDisplay-module-piece-bank-wrap--right{left:95%}.GameDisplay-module-piece-bank-wrap--left{right:92%}.GameDisplay-module-piece-bank-wrap--bottom{bottom:0}.GameDisplay-module-piece-bank-wrap--top{top:0}.GameDisplay-module-piece-bank__piece-wrap{position:relative;width:var(--board-bank-piece-size);height:var(--board-bank-piece-size);border-radius:5px}.GameDisplay-module-piece-bank__piece{position:relative;top:0;left:0;z-index:unset;width:var(--board-bank-piece-size);height:var(--board-bank-piece-size);transform:scale(78%);transition:transform 1s}.GameDisplay-module-piece-bank__piece-count{position:absolute;right:2%;bottom:2%;display:flex;justify-content:center;align-items:center;width:45%;height:45%;background-color:var(--sidebar-background-color);border-radius:100px;color:#e2e2e2}.GameDisplay-module-piece-bank__piece-wrap:hover>.GameDisplay-module-piece-bank__piece{transform:scale(100%)}.GameDisplay-module-dialog-window{position:absolute;top:0;left:0;right:0;bottom:0;z-index:1;display:flex;justify-content:center;align-items:center;pointer-events:none}.GameDisplay-module-dialog-window>*{pointer-events:all}.GameDisplay-module-promotion-dialog{display:flex;flex-wrap:wrap;background-color:rgba(0,0,0,.8);border-radius:9px;cursor:pointer}.GameDisplay-module-promotion-dialog__piece-display{width:var(--board-piece-size);height:var(--board-piece-size)}@keyframes GameDisplay-module-backgroundBlink{50%{background-color:rgba(0,0,0,0)}}@keyframes GameDisplay-module-duckBlink{50%{background-color:rgba(0,0,0,0);color:#e2e2e2}}.GameDisplay-module-chained-move-notice{position:absolute;bottom:3px;display:flex;align-items:center;padding:2px 8px;border-radius:3px;font-size:17px;font-weight:600;cursor:pointer}.GameDisplay-module-chained-move-notice__takeback-icon{margin-left:.25rem;font-family:\"ChessGlyph New\";font-size:2.4rem;font-weight:500;color:#e2e2e2}.GameDisplay-module-chained-move-notice--seirawan-drop{background-color:rgba(44,44,44,.66)}.GameDisplay-module-chained-move-notice--seirawan-drop.GameDisplay-module-chained-move-notice--blink{animation:1s GameDisplay-module-backgroundBlink;animation-timing-function:steps(1)}.GameDisplay-module-chained-move-notice--duck-move{background-color:#816508;color:#ffc60a}.GameDisplay-module-chained-move-notice--duck-move.GameDisplay-module-chained-move-notice--blink{animation:.75s GameDisplay-module-duckBlink;animation-timing-function:steps(1)}.GameDisplay-module-chained-move-notice__description,.GameDisplay-module-chained-move-notice__countdown{font-weight:500;color:#e2e2e2}.GameDisplay-module-chained-move-notice__countdown{margin-left:8px}.GameDisplay-module-chained-move-notice__arrow{width:20px;height:15px;margin-left:8px}.GameDisplay-module-row{display:flex;max-width:fit-content;padding-left:0;list-style-type:none}.GameDisplay-module-row:nth-child(odd)>*:nth-child(odd),.GameDisplay-module-row:nth-child(even)>*:nth-child(even){background-color:var(--main-square-primary-color)}.GameDisplay-module-row:nth-child(odd)>*:nth-child(even),.GameDisplay-module-row:nth-child(even)>*:nth-child(odd){background-color:var(--main-square-secondary-color)}.GameDisplay-module-row:nth-child(odd)>*:nth-child(odd) .GameDisplay-module-square.GameDisplay-module-square--active,.GameDisplay-module-row:nth-child(even)>*:nth-child(even) .GameDisplay-module-square.GameDisplay-module-square--active{background-color:var(--main-square-highlight-primary-color)}.GameDisplay-module-row:nth-child(odd)>*:nth-child(even) .GameDisplay-module-square.GameDisplay-module-square--active,.GameDisplay-module-row:nth-child(even)>*:nth-child(odd) .GameDisplay-module-square.GameDisplay-module-square--active{background-color:var(--main-square-highlight-secondary-color)}.GameDisplay-module-row:nth-child(odd)>*:nth-child(odd) .GameDisplay-module-square-wrap--king-of-the-hill,.GameDisplay-module-row:nth-child(even)>*:nth-child(even) .GameDisplay-module-square-wrap--king-of-the-hill{border-color:var(--main-square-primary-color)}.GameDisplay-module-row:nth-child(odd)>*:nth-child(even) .GameDisplay-module-square-wrap--king-of-the-hill,.GameDisplay-module-row:nth-child(even)>*:nth-child(odd) .GameDisplay-module-square-wrap--king-of-the-hill{border-color:var(--main-square-secondary-color)}.GameDisplay-module-square-wrap{position:relative;display:flex;width:var(--board-piece-size);height:var(--board-piece-size);justify-content:center;align-items:center}.GameDisplay-module-square-wrap-surroundings{position:absolute;top:0;left:0;right:0;bottom:0;pointer-events:none}.GameDisplay-module-square-wrap-surroundings__fleur-de-lis{position:absolute;width:45%;height:45%;right:-1%;bottom:1%}.GameDisplay-module-square-wrap-surroundings__lives-indicator{position:absolute;top:55%;left:50%;transform:translate(-50%, -50%);display:block;font-family:\"ChessGlyph New\";font-size:2rem;color:#e2e2e2;user-select:none}.GameDisplay-module-square-wrap-surroundings__atomic-explosion,.GameDisplay-module-square-wrap-surroundings__atomic-immunity{display:block;width:100%;height:100%}.GameDisplay-module-square-wrap-surroundings__atomic-explosion:before,.GameDisplay-module-square-wrap-surroundings__atomic-immunity:before{position:absolute;width:30%;height:30%;top:5%;right:3%;font-family:\"ChessGlyph New\";font-size:1.1rem}.GameDisplay-module-square-wrap-surroundings__atomic-explosion::before{color:#ba110c}.GameDisplay-module-square-wrap-surroundings__atomic-immunity::before{color:#e2e2e2}.GameDisplay-module-square-wrap--king-of-the-hill{border-width:2px}.GameDisplay-module-square{display:flex;width:inherit;height:inherit;justify-content:center;align-items:center}.GameDisplay-module-square__piece{height:inherit}.GameDisplay-module-square__piece--stonewall{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_0___ + ")}.GameDisplay-module-square__piece>div{display:flex;justify-content:center;align-items:flex-end;height:inherit}.GameDisplay-module-row>.GameDisplay-module-square-wrap .GameDisplay-module-square.GameDisplay-module-square--ghosted,.GameDisplay-module-square.GameDisplay-module-square--ghosted{background-color:var(--ghostboard-square-color)}.GameDisplay-module-row>.GameDisplay-module-square-wrap .GameDisplay-module-square.GameDisplay-module-square--fogged{background-color:inherit;filter:brightness(50%)}.GameDisplay-module-player-box-container{position:absolute;top:0;left:0;right:0;bottom:0;pointer-events:none}.GameDisplay-module-player-box-container>*{pointer-events:all}.GameDisplay-module-player-box-container--edge-extruded{top:50%;left:50%;width:133%;height:133%;transform:translate(-50%, -50%)}.GameDisplay-module-player-box-wrap{position:absolute;display:flex;height:calc(var(--board-piece-size)*3)}.GameDisplay-module-player-box-wrap--top.GameDisplay-module-player-box-wrap--no-corners{top:-9%}.GameDisplay-module-player-box-wrap--bottom.GameDisplay-module-player-box-wrap--no-corners{bottom:-9%}.GameDisplay-module-player-box{position:relative;display:flex;flex-direction:column;gap:.3rem;width:calc(var(--board-piece-size)*3);height:100%}.GameDisplay-module-player-box--no-corners{flex-direction:row}.GameDisplay-module-player-box-wrap--right .GameDisplay-module-player-box{right:calc(var(--board-piece-size)*3)}.GameDisplay-module-player-box-wrap--right .GameDisplay-module-player-box.GameDisplay-module-player-box--no-corners{right:100%}.GameDisplay-module-player-box-wrap--left .GameDisplay-module-player-box{left:calc(var(--board-piece-size)*3)}.GameDisplay-module-player-box-wrap--left .GameDisplay-module-player-box.GameDisplay-module-player-box--no-corners{left:100%}.GameDisplay-module-player-box-wrap--bottom .GameDisplay-module-player-box{top:0}.GameDisplay-module-player-box-wrap--top .GameDisplay-module-player-box{bottom:0;flex-direction:column-reverse}.GameDisplay-module-player-box-wrap--top .GameDisplay-module-player-box.GameDisplay-module-player-box--no-corners{flex-direction:row-reverse;bottom:0}.GameDisplay-module-player-box-wrap.GameDisplay-module-player-box-wrap--left .GameDisplay-module-player-box.GameDisplay-module-player-box--no-corners{flex-direction:row}.GameDisplay-module-player-box-wrap.GameDisplay-module-player-box-wrap--right .GameDisplay-module-player-box.GameDisplay-module-player-box--no-corners{flex-direction:row-reverse}.GameDisplay-module-player-box-wrap--right{left:100%}.GameDisplay-module-player-box-wrap--left{right:100%}.GameDisplay-module-player-box-wrap--bottom{bottom:0}.GameDisplay-module-player-box-wrap--top{top:0}.GameDisplay-module-player-box-wrap--no-corners{height:initial}.GameDisplay-module-player-box__clock{display:flex;justify-content:space-around;align-items:center;padding:0 6px;color:#e2e2e2;border-radius:5%;filter:brightness(70%)}.GameDisplay-module-player-box__clock-icon{font-size:2.5rem;width:2.5rem;height:2.5rem;line-height:1;font-family:\"ChessGlyph New\";padding:0 .2rem;font-size:2.5rem;font-family:\"ChessGlyph New\"}.GameDisplay-module-player-box__clock-seconds{font-family:\"ChessGlyph New\";font-size:2rem}.GameDisplay-module-player-box__player-data{position:relative;display:flex;flex-direction:row;align-items:center;gap:.4rem;justify-content:flex-start}.GameDisplay-module-player-box__player-icon{width:2.75rem;height:2.75rem;border-style:solid;border-radius:5%;filter:brightness(70%)}.GameDisplay-module-player-box__player-icon>img{width:100%;height:100%;object-fit:cover}.GameDisplay-module-player-box-wrap--active .GameDisplay-module-player-box__player-icon,.GameDisplay-module-player-box-wrap--active .GameDisplay-module-player-box__clock{filter:brightness(100%)}.GameDisplay-module-player-box__player-info{display:flex;flex-direction:column;flex-wrap:wrap;align-items:flex-start;gap:.2rem;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;color:#e2e2e2;font-size:1.4rem;font-weight:600;line-height:1}.GameDisplay-module-player-box__player-text{padding:0;margin:0;font-weight:600;font-size:1.2rem;font-family:\"Segoe UI\"}.GameDisplay-module-player-box__player-points-wrap{height:3.5rem;padding:0 .4rem;text-shadow:0 0 .5rem #e2e2e2}.GameDisplay-module-player-box__player-points{display:flex;flex-direction:row;font-size:3.5rem;font-weight:500;line-height:3.5rem;color:#e2e2e2;text-shadow:0 0 .5rem #e2e2e2}.GameDisplay-module-player-box-wrap--left .GameDisplay-module-player-box__player-data,.GameDisplay-module-player-box-wrap--left .GameDisplay-module-player-box__player-points{flex-direction:row-reverse}.GameDisplay-module-arrows-wrap,.GameDisplay-module-arrows-wrap__canvas{position:absolute;top:0;left:0;right:0;bottom:0;pointer-events:none}.GameDisplay-module-arrows-wrap{opacity:.75}", "",{"version":3,"sources":["webpack://./src/main/client/ts/components/BoardComponents/GameDisplay/GameDisplay.module.scss","webpack://./src/main/client/scss/vendor/ChessGlyph.scss","webpack://./src/main/client/scss/Colors.scss","webpack://./src/main/client/scss/Mixins.scss"],"names":[],"mappings":"AAAA,sECkRA,WACC,CAAA,qEA+ND,WACC,CAAA,8DA+MD,WACC,CAAA,kDAmGD,WACC,CAAA,MDryBD,+CACC,CAAA,8CACA,CAAA,yDACA,CAAA,0DACA,CAAA,6BACA,CAAA,+BACA,CAAA,iDACA,CAAA,yBAGD,iBACC,CAAA,iBACA,CAAA,+BAGD,aAsEC,CAAA,YACA,CAAA,qBACA,CAAA,iCACA,CAAA,gDACA,CAAA,eACA,CAAA,gBACA,CAAA,yCA3EA,OACC,CAAA,QACA,CAAA,oCAGD,SACC,CAAA,iBACA,CAAA,eACA,CAAA,iBACA,CAAA,cACA,CAAA,0CAEA,kCE9BkB,CAAA,2CFkClB,QACC,CAAA,0CAGD,SACC,CAAA,4CAGD,QACC,CAAA,yCAGD,KACC,CAAA,2CAIF,iBACC,CAAA,kCACA,CAAA,mCACA,CAAA,iBACA,CAAA,sCAGD,iBACC,CAAA,KACA,CAAA,MACA,CAAA,aACA,CAAA,kCACA,CAAA,mCACA,CAAA,oBACA,CAAA,uBACA,CAAA,4CAEA,iBACC,CAAA,QACA,CAAA,SACA,CAAA,YACA,CAAA,sBACA,CAAA,kBACA,CAAA,SACA,CAAA,UACA,CAAA,gDACA,CAAA,mBACA,CAAA,aE7EwB,CAAA,uFFkF1B,qBACC,CAAA,kCAYF,iBG/CC,CAAA,KACA,CAAA,MACA,CAAA,OACA,CAAA,QACA,CAAA,SH6CA,CAAA,YACA,CAAA,sBACA,CAAA,kBACA,CAAA,mBACA,CAAA,oCAGD,kBACC,CAAA,qCAGD,YACC,CAAA,cACA,CAAA,+BACA,CAAA,iBACA,CAAA,cACA,CAAA,oDAEA,6BACC,CAAA,8BACA,CAAA,8CAIF,IACC,8BACC,CAAA,CAAA,wCAIF,IACC,8BACC,CAAA,aEjIyB,CAAA,CAAA,wCFsI3B,iBACC,CAAA,UACA,CAAA,YACA,CAAA,kBACA,CAAA,eACA,CAAA,iBACA,CAAA,cACA,CAAA,eACA,CAAA,cACA,CAAA,uDAEA,kBAEC,CAAA,4BACA,CAAA,gBACA,CAAA,eACA,CAAA,aEtJyB,CAAA,uDF0J1B,mCACC,CAAA,qGAGD,+CACC,CAAA,kCACA,CAAA,mDAGD,wBACC,CAAA,aACA,CAAA,iGAGD,2CACC,CAAA,kCACA,CAAA,wGAGD,eAEC,CAAA,aE/KyB,CAAA,mDFmL1B,eACC,CAAA,+CAGD,UACC,CAAA,WACA,CAAA,eACA,CAAA,wBAIF,YAaC,CAAA,qBACA,CAAA,cACA,CAAA,oBACA,CAAA,kHG3KC,iDH4JqC,CAAA,kHGvJrC,mDHuJuE,CAAA,4OGtKvE,2DHwKA,CAAA,4OGnKA,6DHoKA,CAAA,sNGzKA,6CH6KA,CAAA,sNGxKA,+CHyKA,CAAA,gCAUF,iBACC,CAAA,YACA,CAAA,6BACA,CAAA,8BACA,CAAA,sBACA,CAAA,kBACA,CAAA,6CAEA,iBGzKA,CAAA,KACA,CAAA,MACA,CAAA,OACA,CAAA,QACA,CAAA,mBHuKC,CAAA,2DAEA,iBACC,CAAA,SACA,CAAA,UACA,CAAA,SACA,CAAA,SACA,CAAA,8DAGD,iBACC,CAAA,OACA,CAAA,QACA,CAAA,+BACA,CAAA,aACA,CAAA,4BACA,CAAA,cACA,CAAA,aE5OwB,CAAA,gBF8OxB,CAAA,6HAGD,aAEC,CAAA,UACA,CAAA,WACA,CAAA,2IAEA,iBACC,CAAA,SACA,CAAA,UACA,CAAA,MACA,CAAA,QACA,CAAA,4BACA,CAAA,gBACA,CAAA,uEAQF,aACC,CAAA,sEAOD,aE9QyB,CAAA,kDFmR1B,gBACC,CAAA,2BAIF,YACC,CAAA,aACA,CAAA,cACA,CAAA,sBACA,CAAA,kBACA,CAAA,kCAEA,cACC,CAAA,6CAEA,wDACC,CAAA,sCAIF,YACC,CAAA,sBACA,CAAA,oBACA,CAAA,cACA,CAAA,oLAIF,+CAEC,CAAA,qHAGD,wBACC,CAAA,sBACA,CAAA,yCAGD,iBGzQC,CAAA,KACA,CAAA,MACA,CAAA,OACA,CAAA,QACA,CAAA,mBHuQA,CAAA,2CAEA,kBACC,CAAA,wDAGD,OACC,CAAA,QACA,CAAA,UACA,CAAA,WACA,CAAA,+BACA,CAAA,oCAIF,iBACC,CAAA,YACA,CAAA,sCACA,CAAA,wFAGD,OACC,CAAA,2FAGD,UACC,CAAA,+BAGD,iBACC,CAAA,YACA,CAAA,qBACA,CAAA,SACA,CAAA,qCACA,CAAA,WACA,CAAA,2CAGD,kBACC,CAAA,0EAGD,qCACC,CAAA,oHAGD,UACC,CAAA,yEAGD,oCACC,CAAA,mHAGD,SACC,CAAA,2EAGD,KACC,CAAA,wEAGD,QACC,CAAA,6BACA,CAAA,kHAGD,0BACC,CAAA,QACA,CAAA,sJAGD,kBACC,CAAA,uJAGD,0BACC,CAAA,2CAGD,SACC,CAAA,0CAGD,UACC,CAAA,4CAGD,QACC,CAAA,yCAGD,KACC,CAAA,gDAGD,cACC,CAAA,sCAGD,YACC,CAAA,4BACA,CAAA,kBACA,CAAA,aACA,CAAA,aEna0B,CAAA,gBFqa1B,CAAA,sBACA,CAAA,2CAEA,gBACgC,CAAA,YAAA,CAAA,aAAA,CAAA,aGhW9B,CAAA,4BAQF,CAAA,eH0VC,CAAA,gBACA,CAAA,4BACA,CAAA,8CAGD,4BACC,CAAA,cACA,CAAA,4CAIF,iBACC,CAAA,YACA,CAAA,kBACA,CAAA,kBACA,CAAA,SACA,CAAA,0BACA,CAAA,4CAGD,aACC,CAAA,cACA,CAAA,kBACA,CAAA,gBACA,CAAA,sBACA,CAAA,gDAEA,UACC,CAAA,WACA,CAAA,gBACA,CAAA,0KAIF,uBAEC,CAAA,4CAGD,YACC,CAAA,qBACA,CAAA,cACA,CAAA,sBACA,CAAA,SACA,CAAA,sBACA,CAAA,kBACA,CAAA,eACA,CAAA,aE1d0B,CAAA,gBF4d1B,CAAA,eACA,CAAA,aACA,CAAA,4CAGD,SACC,CAAA,QACA,CAAA,eACA,CAAA,gBACA,CAAA,sBEjeoB,CAAA,mDFqerB,aACC,CAAA,eACA,CAAA,6BACA,CAAA,8CAGD,YACC,CAAA,kBACA,CAAA,gBACA,CAAA,eACA,CAAA,kBACA,CAAA,aEpf0B,CAAA,6BFsf1B,CAAA,8KAGD,0BAEC,CAAA,wEAGD,iBG9cC,CAAA,KACA,CAAA,MACA,CAAA,OACA,CAAA,QACA,CAAA,mBH6cA,CAAA,gCAGD,WACC","sourcesContent":["@use \"../../../index\";\n\n:root {\n\t--main-square-primary-color: rgb(106, 114, 131);\n\t--main-square-secondary-color: rgb(41, 48, 61);\n\t--main-square-highlight-primary-color: rgb(247, 245, 125);\n\t--main-square-highlight-secondary-color: rgb(186, 202, 73);\n\t--board-bank-piece-size: 32px;\n\t--ghostboard-square-color: #333;\n\t--sidebar-background-color: rgba(39, 38, 35, 0.5);\n}\n\n.wrap {\n\tposition: relative;\n\twidth: min-content;\n}\n\n.piece-bank {\n\t&-container {\n\t\twidth: 0;\n\t\theight: 0;\n\t}\n\n\t&-wrap {\n\t\tz-index: 1;\n\t\tposition: absolute;\n\t\toverflow: hidden;\n\t\tborder-radius: 3px;\n\t\tcursor: pointer;\n\n\t\t&:hover {\n\t\t\tborder-color: index.$lightContentColor;\n\t\t}\n\n\t\t&--right {\n\t\t\tleft: 95%;\n\t\t}\n\n\t\t&--left {\n\t\t\tright: 92%;\n\t\t}\n\n\t\t&--bottom {\n\t\t\tbottom: 0;\n\t\t}\n\n\t\t&--top {\n\t\t\ttop: 0;\n\t\t}\n\t}\n\n\t&__piece-wrap {\n\t\tposition: relative;\n\t\twidth: var(--board-bank-piece-size);\n\t\theight: var(--board-bank-piece-size);\n\t\tborder-radius: 5px;\n\t}\n\n\t&__piece {\n\t\tposition: relative;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tz-index: unset;\n\t\twidth: var(--board-bank-piece-size);\n\t\theight: var(--board-bank-piece-size);\n\t\ttransform: scale(78%);\n\t\ttransition: transform 1s;\n\n\t\t&-count {\n\t\t\tposition: absolute;\n\t\t\tright: 2%;\n\t\t\tbottom: 2%;\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: center;\n\t\t\talign-items: center;\n\t\t\twidth: 45%;\n\t\t\theight: 45%;\n\t\t\tbackground-color: var(--sidebar-background-color);\n\t\t\tborder-radius: 100px;\n\t\t\tcolor: index.$boardComponentWhiteColor;\n\t\t}\n\t}\n\n\t&__piece-wrap:hover > &__piece {\n\t\ttransform: scale(100%);\n\t}\n\n\tz-index: unset;\n\tdisplay: grid;\n\tgrid-auto-flow: column;\n\tgrid-template-rows: repeat(5, 1fr);\n\tbackground-color: var(--sidebar-background-color);\n\tfont-weight: 600;\n\tuser-select: none;\n}\n\n.dialog-window {\n\t@include index.occupyAbsoluteSize;\n\tz-index: 1;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tpointer-events: none;\n}\n\n.dialog-window > * {\n\tpointer-events: all;\n}\n\n.promotion-dialog {\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tbackground-color: rgba(0, 0, 0, 0.8);\n\tborder-radius: 9px;\n\tcursor: pointer;\n\n\t&__piece-display {\n\t\twidth: var(--board-piece-size);\n\t\theight: var(--board-piece-size);\n\t}\n}\n\n@keyframes backgroundBlink {\n\t50% {\n\t\tbackground-color: transparent;\n\t}\n}\n\n@keyframes duckBlink {\n\t50% {\n\t\tbackground-color: transparent;\n\t\tcolor: index.$boardComponentWhiteColor;\n\t}\n}\n\n.chained-move-notice {\n\tposition: absolute;\n\tbottom: 3px;\n\tdisplay: flex;\n\talign-items: center;\n\tpadding: 2px 8px;\n\tborder-radius: 3px;\n\tfont-size: 17px;\n\tfont-weight: 600;\n\tcursor: pointer;\n\n\t&__takeback-icon {\n\t\t@extend %icon-font-chess-undo;\n\t\tmargin-left: 0.25rem;\n\t\tfont-family: \"ChessGlyph New\";\n\t\tfont-size: 2.4rem;\n\t\tfont-weight: 500;\n\t\tcolor: index.$boardComponentWhiteColor;\n\t}\n\n\t&--seirawan-drop {\n\t\tbackground-color: rgba(44, 44, 44, 0.66);\n\t}\n\n\t&--seirawan-drop#{&}--blink {\n\t\tanimation: 1s backgroundBlink;\n\t\tanimation-timing-function: steps(1);\n\t}\n\n\t&--duck-move {\n\t\tbackground-color: #816508;\n\t\tcolor: #ffc60a;\n\t}\n\n\t&--duck-move#{&}--blink {\n\t\tanimation: 0.75s duckBlink;\n\t\tanimation-timing-function: steps(1);\n\t}\n\n\t&__description,\n\t&__countdown {\n\t\tfont-weight: 500;\n\t\tcolor: index.$boardComponentWhiteColor;\n\t}\n\n\t&__countdown {\n\t\tmargin-left: 8px;\n\t}\n\n\t&__arrow {\n\t\twidth: 20px;\n\t\theight: 15px;\n\t\tmargin-left: 8px;\n\t}\n}\n\n.row {\n\t@include index.alternatingBoardColors(var(--main-square-primary-color), var(--main-square-secondary-color));\n\t@include index.alternatingBoardColors(\n\t\tvar(--main-square-highlight-primary-color),\n\t\tvar(--main-square-highlight-secondary-color),\n\t\t\".square.square--active\"\n\t);\n\t@include index.alternatingBoardColors(\n\t\tvar(--main-square-primary-color),\n\t\tvar(--main-square-secondary-color),\n\t\t\".square-wrap--king-of-the-hill\",\n\t\t\"border-color\"\n\t);\n\tdisplay: flex;\n\tmax-width: fit-content;\n\tpadding-left: 0;\n\tlist-style-type: none;\n}\n\n.square-wrap {\n\tposition: relative;\n\tdisplay: flex;\n\twidth: var(--board-piece-size);\n\theight: var(--board-piece-size);\n\tjustify-content: center;\n\talign-items: center;\n\n\t&-surroundings {\n\t\t@include index.occupyAbsoluteSize;\n\t\tpointer-events: none;\n\n\t\t&__fleur-de-lis {\n\t\t\tposition: absolute;\n\t\t\twidth: 45%;\n\t\t\theight: 45%;\n\t\t\tright: -1%;\n\t\t\tbottom: 1%;\n\t\t}\n\n\t\t&__lives-indicator {\n\t\t\tposition: absolute;\n\t\t\ttop: 55%;\n\t\t\tleft: 50%;\n\t\t\ttransform: translate(-50%, -50%);\n\t\t\tdisplay: block;\n\t\t\tfont-family: \"ChessGlyph New\";\n\t\t\tfont-size: 2rem;\n\t\t\tcolor: index.$boardComponentWhiteColor;\n\t\t\tuser-select: none;\n\t\t}\n\n\t\t&__atomic-explosion,\n\t\t&__atomic-immunity {\n\t\t\tdisplay: block;\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\n\t\t\t&:before {\n\t\t\t\tposition: absolute;\n\t\t\t\twidth: 30%;\n\t\t\t\theight: 30%;\n\t\t\t\ttop: 5%;\n\t\t\t\tright: 3%;\n\t\t\t\tfont-family: \"ChessGlyph New\";\n\t\t\t\tfont-size: 1.1rem;\n\t\t\t}\n\t\t}\n\n\t\t&__atomic-explosion {\n\t\t\t@extend %icon-font-chess-fire;\n\t\t}\n\n\t\t&__atomic-explosion::before {\n\t\t\tcolor: #ba110c;\n\t\t}\n\n\t\t&__atomic-immunity {\n\t\t\t@extend %icon-font-chess-shield;\n\t\t}\n\n\t\t&__atomic-immunity::before {\n\t\t\tcolor: index.$boardComponentWhiteColor;\n\t\t}\n\t}\n\n\t&--king-of-the-hill {\n\t\tborder-width: 2px;\n\t}\n}\n\n.square {\n\tdisplay: flex;\n\twidth: inherit;\n\theight: inherit;\n\tjustify-content: center;\n\talign-items: center;\n\n\t&__piece {\n\t\theight: inherit;\n\n\t\t&--stonewall {\n\t\t\tbackground-image: url(\"../../../../img/pieces/wallStandard.svg\");\n\t\t}\n\t}\n\n\t&__piece > div {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: flex-end;\n\t\theight: inherit;\n\t}\n}\n\n.row > .square-wrap .square.square--ghosted,\n.square.square--ghosted {\n\tbackground-color: var(--ghostboard-square-color);\n}\n\n.row > .square-wrap .square.square--fogged {\n\tbackground-color: inherit;\n\tfilter: brightness(50%);\n}\n\n.player-box-container {\n\t@include index.occupyAbsoluteSize;\n\tpointer-events: none;\n\n\t& > * {\n\t\tpointer-events: all;\n\t}\n\n\t&--edge-extruded {\n\t\ttop: 50%;\n\t\tleft: 50%;\n\t\twidth: 133%;\n\t\theight: 133%;\n\t\ttransform: translate(-50%, -50%);\n\t}\n}\n\n.player-box-wrap {\n\tposition: absolute;\n\tdisplay: flex;\n\theight: calc(var(--board-piece-size) * 3);\n}\n\n.player-box-wrap--top.player-box-wrap--no-corners {\n\ttop: -9%;\n}\n\n.player-box-wrap--bottom.player-box-wrap--no-corners {\n\tbottom: -9%;\n}\n\n.player-box {\n\tposition: relative;\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 0.3rem;\n\twidth: calc(var(--board-piece-size) * 3);\n\theight: 100%;\n}\n\n.player-box--no-corners {\n\tflex-direction: row;\n}\n\n.player-box-wrap--right .player-box {\n\tright: calc(var(--board-piece-size) * 3);\n}\n\n.player-box-wrap--right .player-box.player-box--no-corners {\n\tright: 100%;\n}\n\n.player-box-wrap--left .player-box {\n\tleft: calc(var(--board-piece-size) * 3);\n}\n\n.player-box-wrap--left .player-box.player-box--no-corners {\n\tleft: 100%;\n}\n\n.player-box-wrap--bottom .player-box {\n\ttop: 0;\n}\n\n.player-box-wrap--top .player-box {\n\tbottom: 0;\n\tflex-direction: column-reverse;\n}\n\n.player-box-wrap--top .player-box.player-box--no-corners {\n\tflex-direction: row-reverse;\n\tbottom: 0;\n}\n\n.player-box-wrap.player-box-wrap--left .player-box.player-box--no-corners {\n\tflex-direction: row;\n}\n\n.player-box-wrap.player-box-wrap--right .player-box.player-box--no-corners {\n\tflex-direction: row-reverse;\n}\n\n.player-box-wrap--right {\n\tleft: 100%;\n}\n\n.player-box-wrap--left {\n\tright: 100%;\n}\n\n.player-box-wrap--bottom {\n\tbottom: 0;\n}\n\n.player-box-wrap--top {\n\ttop: 0;\n}\n\n.player-box-wrap--no-corners {\n\theight: initial;\n}\n\n.player-box__clock {\n\tdisplay: flex;\n\tjustify-content: space-around;\n\talign-items: center;\n\tpadding: 0 6px;\n\tcolor: index.$boardComponentWhiteColor;\n\tborder-radius: 5%;\n\tfilter: brightness(70%);\n\n\t&-icon {\n\t\t@include index.iconSize($size: 2.5rem);\n\t\t@extend %icon-font-chess-circle-clock;\n\t\tpadding: 0 0.2rem;\n\t\tfont-size: 2.5rem;\n\t\tfont-family: \"ChessGlyph New\";\n\t}\n\n\t&-seconds {\n\t\tfont-family: \"ChessGlyph New\";\n\t\tfont-size: 2rem;\n\t}\n}\n\n.player-box__player-data {\n\tposition: relative;\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-items: center;\n\tgap: 0.4rem;\n\tjustify-content: flex-start;\n}\n\n.player-box__player-icon {\n\twidth: 2.75rem;\n\theight: 2.75rem;\n\tborder-style: solid;\n\tborder-radius: 5%;\n\tfilter: brightness(70%);\n\n\t& > img {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tobject-fit: cover;\n\t}\n}\n\n.player-box-wrap--active .player-box__player-icon,\n.player-box-wrap--active .player-box__clock {\n\tfilter: brightness(100%);\n}\n\n.player-box__player-info {\n\tdisplay: flex;\n\tflex-direction: column;\n\tflex-wrap: wrap;\n\talign-items: flex-start;\n\tgap: 0.2rem;\n\ttext-overflow: ellipsis;\n\twhite-space: nowrap;\n\toverflow: hidden;\n\tcolor: index.$boardComponentWhiteColor;\n\tfont-size: 1.4rem;\n\tfont-weight: 600;\n\tline-height: 1;\n}\n\n.player-box__player-text {\n\tpadding: 0;\n\tmargin: 0;\n\tfont-weight: 600;\n\tfont-size: 1.2rem;\n\tfont-family: index.$boardComponentFont;\n}\n\n.player-box__player-points-wrap {\n\theight: 3.5rem;\n\tpadding: 0 0.4rem;\n\ttext-shadow: 0 0 0.5rem index.$boardComponentWhiteColor;\n}\n\n.player-box__player-points {\n\tdisplay: flex;\n\tflex-direction: row;\n\tfont-size: 3.5rem;\n\tfont-weight: 500;\n\tline-height: 3.5rem;\n\tcolor: index.$boardComponentWhiteColor;\n\ttext-shadow: 0 0 0.5rem index.$boardComponentWhiteColor;\n}\n\n.player-box-wrap--left .player-box__player-data,\n.player-box-wrap--left .player-box__player-points {\n\tflex-direction: row-reverse;\n}\n\n.arrows-wrap,\n.arrows-wrap__canvas {\n\t@include index.occupyAbsoluteSize;\n\tpointer-events: none;\n}\n\n.arrows-wrap {\n\topacity: 0.75;\n}\n","%icon-font-chess-chess:before {\n\tcontent: \"\\0069\";\n}\n\n%icon-font-chess-chess960:before {\n\tcontent: \"\\1F28\";\n}\n\n%icon-font-chess-threecheck:before {\n\tcontent: \"\\00CB\";\n}\n\n%icon-font-chess-kingofthehill:before {\n\tcontent: \"\\012A\";\n}\n\n%icon-font-chess-losers:before {\n\tcontent: \"\\012B\";\n}\n\n%icon-font-chess-crazyhouse:before {\n\tcontent: \"\\010E\";\n}\n\n%icon-font-chess-bughouse:before {\n\tcontent: \"\\011A\";\n}\n\n%icon-font-chess-solo-chess:before {\n\tcontent: \"\\1F06\";\n}\n\n%icon-font-chess-liveChess960:before {\n\tcontent: \"\\00D1\";\n}\n\n%icon-font-chess-live-tournament:before,\n%icon-font-chess-tournament:before {\n\tcontent: \"\\004F\";\n}\n\n%icon-font-chess-live-teammatch:before,\n%icon-font-chess-teammatch:before {\n\tcontent: \"\\03C4\";\n}\n\n%icon-font-chess-automate:before {\n\tcontent: \"\\1F7A\";\n}\n\n%icon-font-chess-vs-bot:before {\n\tcontent: \"\\1F70\";\n}\n\n%icon-font-chess-four-ffa:before {\n\tcontent: \"\\1F69\";\n}\n\n%icon-font-chess-variants:before {\n\tcontent: \"\\1F6A\";\n}\n\n%icon-font-chess-horde:before {\n\tcontent: \"\\1F7C\";\n}\n\n%icon-font-chess-chaturanga:before {\n\tcontent: \"\\1F7D\";\n}\n\n%icon-font-chess-classical:before {\n\tcontent: \"\\1F8A\";\n}\n\n%icon-font-chess-classroom:before {\n\tcontent: \"\\1F91\";\n}\n\n%icon-font-chess-endgames:before {\n\tcontent: \"\\1F96\";\n}\n\n%icon-font-chess-doubles-unpartner:before {\n\tcontent: \"\\1FA6\";\n}\n\n%icon-font-chess-nav-horizontal:before {\n\tcontent: \"\\0052\";\n}\n\n%icon-font-chess-nav-vertical:before {\n\tcontent: \"\\00E7\";\n}\n\n%icon-font-chess-nav-expanded:before {\n\tcontent: \"\\03E1\";\n}\n\n%icon-font-chess-nav-collapsed:before {\n\tcontent: \"\\03E0\";\n}\n\n%icon-font-chess-collapse-down:before {\n\tcontent: \"\\1F29\";\n}\n\n%icon-font-chess-nav-pawn:before {\n\tcontent: \"\\1F2A\";\n}\n\n%icon-font-chess-bug:before {\n\tcontent: \"\\00F5\";\n}\n\n%icon-font-chess-hourglass:before {\n\tcontent: \"\\03FA\";\n}\n\n%icon-font-chess-camera:before {\n\tcontent: \"\\0048\";\n}\n\n%icon-font-chess-camera-plus:before {\n\tcontent: \"\\03DF\";\n}\n\n%icon-font-chess-globe:before {\n\tcontent: \"\\004D\";\n}\n\n%icon-font-chess-order:before {\n\tcontent: \"\\004F\";\n}\n\n%icon-font-chess-flag:before {\n\tcontent: \"\\0059\";\n}\n\n%icon-font-chess-calendar:before {\n\tcontent: \"\\0061\";\n}\n\n%icon-font-chess-three-day:before {\n\tcontent: \"\\1F90\";\n}\n\n%icon-font-chess-daily-game:before {\n\tcontent: \"\\1F1A\";\n}\n\n%icon-font-chess-chat:before {\n\tcontent: \"\\0063\";\n}\n\n%icon-font-chess-chat-alt:before {\n\tcontent: \"\\007A\";\n}\n\n%icon-font-chess-chat-x:before {\n\tcontent: \"\\2044\";\n}\n\n%icon-font-chess-quickchat:before {\n\tcontent: \"\\1F93\";\n}\n\n%icon-font-chess-chess-book:before {\n\tcontent: \"\\006F\";\n}\n\n%icon-font-chess-filter:before {\n\tcontent: \"\\203A\";\n}\n\n%icon-font-chess-sort:before {\n\tcontent: \"\\1F5D\";\n}\n\n%icon-font-chess-lock:before {\n\tcontent: \"\\0064\";\n}\n\n%icon-font-chess-inbox:before {\n\tcontent: \"\\0065\";\n}\n\n%icon-font-chess-lightbulb:before {\n\tcontent: \"\\0067\";\n}\n\n%icon-font-chess-nametag:before {\n\tcontent: \"\\0068\";\n}\n\n%icon-font-chess-mail:before {\n\tcontent: \"\\0075\";\n}\n\n%icon-font-chess-mail-alt:before {\n\tcontent: \"\\0079\";\n}\n\n%icon-font-chess-mail-plus:before {\n\tcontent: \"\\006B\";\n}\n\n%icon-font-chess-mail-exclaimation:before {\n\tcontent: \"\\03BB\";\n}\n\n%icon-font-chess-book:before {\n\tcontent: \"\\006F\";\n}\n\n%icon-font-chess-book-alt:before {\n\tcontent: \"\\00A4\";\n}\n\n%icon-font-chess-book-open:before {\n\tcontent: \"\\00B4\";\n}\n\n%icon-font-chess-files:before {\n\tcontent: \"\\03C3\";\n}\n\n%icon-font-chess-popup:before {\n\tcontent: \"\\0070\";\n}\n\n%icon-font-chess-depth:before {\n\tcontent: \"\\1F35\";\n}\n\n%icon-font-chess-bell:before {\n\tcontent: \"\\0071\";\n}\n\n%icon-font-chess-bell-off:before {\n\tcontent: \"\\1FB2\";\n}\n\n%icon-font-chess-menu:before {\n\tcontent: \"\\0074\";\n}\n\n%icon-font-chess-home:before {\n\tcontent: \"\\0077\";\n}\n\n%icon-font-chess-home-alt:before {\n\tcontent: \"\\03DB\";\n}\n\n%icon-font-chess-custom-home:before {\n\tcontent: \"\\1F3A\";\n}\n\n%icon-font-chess-bullet:before {\n\tcontent: \"\\1F1D\";\n}\n\n%icon-font-chess-chess-board-puzzle:before {\n\tcontent: \"\\1F15\";\n}\n\n%icon-font-chess-chess-board-vision:before {\n\tcontent: \"\\0111\";\n}\n\n%icon-font-chess-fire-puzzle:before {\n\tcontent: \"\\1EBA\";\n}\n\n%icon-font-chess-fire:before {\n\tcontent: \"\\1F05\";\n}\n\n%icon-font-chess-fire-alt:before {\n\tcontent: \"\\1F25\";\n}\n\n%icon-font-chess-survival:before {\n\tcontent: \"\\1F10\";\n}\n\n%icon-font-chess-smartphone:before {\n\tcontent: \"\\E902\";\n}\n\n%icon-font-chess-computer:before {\n\tcontent: \"\\1F21\";\n}\n\n%icon-font-chess-computer-search:before {\n\tcontent: \"\\03BE\";\n}\n\n%icon-font-chess-comp-analysis:before {\n\tcontent: \"\\1F3B\";\n}\n\n%icon-font-chess-comp-analysis-done:before {\n\tcontent: \"\\1F3C\";\n}\n\n%icon-font-chess-max-analysis:before {\n\tcontent: \"\\1F64\";\n}\n\n%icon-font-chess-comp-drills:before {\n\tcontent: \"\\1F3E\";\n}\n\n%icon-font-chess-vscomp:before {\n\tcontent: \"\\1F4A\";\n}\n\n%icon-font-chess-tag:before {\n\tcontent: \"\\00BD\";\n}\n\n%icon-font-chess-toolbox:before {\n\tcontent: \"\\00BC\";\n}\n\n%icon-font-chess-cake:before {\n\tcontent: \"\\00BE\";\n}\n\n%icon-font-chess-asterisk:before {\n\tcontent: \"\\002A\";\n}\n\n%icon-font-chess-trash:before {\n\tcontent: \"\\2022\";\n}\n\n%icon-font-chess-download:before {\n\tcontent: \"\\0022\";\n}\n\n%icon-font-chess-display-slider:before {\n\tcontent: \"\\2039\";\n}\n\n%icon-font-chess-pushpin:before {\n\tcontent: \"\\00BB\";\n}\n\n%icon-font-chess-key:before {\n\tcontent: \"\\00A2\";\n}\n\n%icon-font-chess-page:before {\n\tcontent: \"\\00A3\";\n}\n\n%icon-font-chess-page-alt:before {\n\tcontent: \"\\20AC\";\n}\n\n%icon-font-chess-page-pencil:before {\n\tcontent: \"\\0078\";\n}\n\n%icon-font-chess-news:before {\n\tcontent: \"\\0045\";\n}\n\n%icon-font-chess-news-alt:before {\n\tcontent: \"\\1F13\";\n}\n\n%icon-font-chess-equal:before {\n\tcontent: \"\\003D\";\n}\n\n%icon-font-chess-stats:before {\n\tcontent: \"\\003B\";\n}\n\n%icon-font-chess-stats-arrow-up:before {\n\tcontent: \"\\010D\";\n}\n\n%icon-font-chess-stats-x:before {\n\tcontent: \"\\00F0\";\n}\n\n%icon-font-chess-graphs:before {\n\tcontent: \"\\03C5\";\n}\n\n%icon-font-chess-binoculars:before {\n\tcontent: \"\\2014\";\n}\n\n%icon-font-chess-magnifying-glass:before {\n\tcontent: \"\\2013\";\n}\n\n%icon-font-chess-magnifying-glass-done:before {\n\tcontent: \"\\1F49\";\n}\n\n%icon-font-chess-present:before {\n\tcontent: \"\\00BE\";\n}\n\n%icon-font-chess-enter:before {\n\tcontent: \"\\1F12\";\n}\n\n%icon-font-chess-exit:before {\n\tcontent: \"\\00D7\";\n}\n\n%icon-font-chess-draw:before {\n\tcontent: \"\\002B\";\n}\n\n%icon-font-chess-cup:before {\n\tcontent: \"\\2021\";\n}\n\n%icon-font-chess-leaguecup:before {\n\tcontent: \"\\1FA5\";\n}\n\n%icon-font-chess-scales:before {\n\tcontent: \"\\0371\";\n}\n\n%icon-font-chess-paper-pencil:before {\n\tcontent: \"\\03A3\";\n}\n\n%icon-font-chess-todo-list:before {\n\tcontent: \"\\010F\";\n}\n\n%icon-font-chess-trophy-plus:before {\n\tcontent: \"\\03A5\";\n}\n\n%icon-font-chess-trophy-minus:before {\n\tcontent: \"\\03BA\";\n}\n\n%icon-font-chess-trophy-podium:before {\n\tcontent: \"\\03B5\";\n}\n\n%icon-font-chess-events:before {\n\tcontent: \"\\1F36\";\n}\n\n%icon-font-chess-privacy:before {\n\tcontent: \"\\03B2\";\n}\n\n%icon-font-chess-survey:before {\n\tcontent: \"\\03C1\";\n}\n\n%icon-font-chess-arena:before {\n\tcontent: \"\\1F39\";\n}\n\n%icon-font-chess-clubs:before {\n\tcontent: \"\\1F9B\";\n}\n\n%icon-font-chess-club-arena:before {\n\tcontent: \"\\1F8C\";\n}\n\n%icon-font-chess-battle:before {\n\tcontent: \"\\1F5F\";\n}\n\n%icon-font-chess-tracked-content:before {\n\tcontent: \"\\00D5\";\n}\n\n%icon-font-chess-pawn-tracked:before {\n\tcontent: \"\\1F23\";\n}\n\n%icon-font-chess-queen-wreath:before {\n\tcontent: \"\\00F1\";\n}\n\n%icon-font-chess-crosshair:before {\n\tcontent: \"\\0111\";\n}\n\n%icon-font-chess-shield:before {\n\tcontent: \"\\014B\";\n}\n\n%icon-font-chess-chip:before {\n\tcontent: \"\\00F6\";\n}\n\n%icon-font-chess-chip-crossed:before {\n\tcontent: \"\\1F07\";\n}\n\n%icon-font-chess-comp-challenge:before {\n\tcontent: \"\\1F37\";\n}\n\n%icon-font-chess-smiley:before {\n\tcontent: \"\\03C2\";\n}\n\n%icon-font-chess-smileyadd:before {\n\tcontent: \"\\1F44\";\n}\n\n%icon-font-chess-troll:before {\n\tcontent: \"\\1F74\";\n}\n\n%icon-font-chess-eye:before {\n\tcontent: \"\\0057\";\n}\n\n%icon-font-chess-eye-off:before {\n\tcontent: \"\\1F40\";\n}\n\n%icon-font-chess-select:before {\n\tcontent: \"\\03AD\";\n}\n\n%icon-font-chess-store:before {\n\tcontent: \"\\1F43\";\n}\n\n%icon-font-chess-question-mark:before {\n\tcontent: \"\\1F0E\";\n}\n\n%icon-font-chess-inaccuracy:before {\n\tcontent: \"\\1F6F\";\n}\n\n%icon-font-chess-cycle:before {\n\tcontent: \"\\1F34\";\n}\n\n%icon-font-chess-gift:before {\n\tcontent: \"\\1F4D\";\n}\n\n%icon-font-chess-perfect:before {\n\tcontent: \"\\1F4C\";\n}\n\n%icon-font-chess-four-teams:before {\n\tcontent: \"\\1F59\";\n}\n\n%icon-font-chess-four-custom:before {\n\tcontent: \"\\1F5B\";\n}\n\n%icon-font-chess-percentile:before {\n\tcontent: \"\\1F2E\";\n}\n\n%icon-font-chess-carousel:before {\n\tcontent: \"\\1F11\";\n}\n\n%icon-font-chess-edit-time:before {\n\tcontent: \"\\03D9\";\n}\n\n%icon-font-chess-add-time:before {\n\tcontent: \"\\1F6C\";\n}\n\n%icon-font-chess-switches:before {\n\tcontent: \"\\1F75\";\n}\n\n%icon-font-chess-torpedo:before {\n\tcontent: \"\\1F71\";\n}\n\n%icon-font-chess-blindfold:before {\n\tcontent: \"\\1F73\";\n}\n\n%icon-font-chess-camera-on:before {\n\tcontent: \"\\1F6D\";\n}\n\n%icon-font-chess-camera-off:before {\n\tcontent: \"\\1F6E\";\n}\n\n%icon-font-chess-cloud:before {\n\tcontent: \"\\1F6B\";\n}\n\n%icon-font-chess-disconnected:before {\n\tcontent: \"\\1F8D\";\n}\n\n%icon-font-chess-library:before {\n\tcontent: \"\\1F45\";\n}\n\n%icon-font-chess-library-add:before {\n\tcontent: \"\\1F57\";\n}\n\n%icon-font-chess-atomic:before {\n\tcontent: \"\\1F7B\";\n}\n\n%icon-font-chess-bookmark:before {\n\tcontent: \"\\1F66\";\n}\n\n%icon-font-chess-bookmark-add:before {\n\tcontent: \"\\1FA0\";\n}\n\n%icon-font-chess-excellent:before {\n\tcontent: \"\\1F67\";\n}\n\n%icon-font-chess-fork:before {\n\tcontent: \"\\1F8E\";\n}\n\n%icon-font-chess-handshake:before {\n\tcontent: \"\\1F88\";\n}\n\n%icon-font-chess-target:before {\n\tcontent: \"\\1F8F\";\n}\n\n%icon-font-chess-target-off:before {\n\tcontent: \"\\1F87\";\n}\n\n%icon-font-chess-official:before {\n\tcontent: \"\\1F89\";\n}\n\n%icon-font-chess-verified:before {\n\tcontent: \"\\1F9D\";\n}\n\n%icon-font-chess-location:before {\n\tcontent: \"\\1F86\";\n}\n\n%icon-font-chess-practice:before {\n\tcontent: \"\\1F95\";\n}\n\n%icon-font-chess-quality:before {\n\tcontent: \"\\1F9A\";\n}\n\n%icon-font-chess-castling:before {\n\tcontent: \"\\1F99\";\n}\n\n%icon-font-chess-pieces-all:before {\n\tcontent: \"\\1F98\";\n}\n\n%icon-font-chess-phases:before {\n\tcontent: \"\\1F97\";\n}\n\n%icon-font-chess-savedisk:before {\n\tcontent: \"\\1F9E\";\n}\n\n%icon-font-chess-qrcode:before {\n\tcontent: \"\\1FA1\";\n}\n\n%icon-font-chess-magout:before {\n\tcontent: \"\\1FA2\";\n}\n\n%icon-font-chess-randomcolor:before {\n\tcontent: \"\\1FA3\";\n}\n\n%icon-font-chess-duck:before {\n\tcontent: \"\\1F9F\";\n}\n\n%icon-font-chess-undo:before {\n\tcontent: \"\\004C\";\n}\n\n%icon-font-chess-link:before {\n\tcontent: \"\\0041\";\n}\n\n%icon-font-chess-challenge-link:before {\n\tcontent: \"\\1F61\";\n}\n\n%icon-font-chess-x:before {\n\tcontent: \"\\0042\";\n}\n\n%icon-font-chess-reply:before {\n\tcontent: \"\\0043\";\n}\n\n%icon-font-chess-checkmark:before {\n\tcontent: \"\\0047\";\n}\n\n%icon-font-chess-correct:before {\n\tcontent: \"\\1F30\";\n}\n\n%icon-font-chess-incorrect:before {\n\tcontent: \"\\1F3F\";\n}\n\n%icon-font-chess-redo:before {\n\tcontent: \"\\1F22\";\n}\n\n%icon-font-chess-plus:before {\n\tcontent: \"\\0056\";\n}\n\n%icon-font-chess-eval:before {\n\tcontent: \"\\1F33\";\n}\n\n%icon-font-chess-copy:before {\n\tcontent: \"\\1F24\";\n}\n\n%icon-font-chess-list:before {\n\tcontent: \"\\0072\";\n}\n\n%icon-font-chess-embed:before {\n\tcontent: \"\\221E\";\n}\n\n%icon-font-chess-darklight:before {\n\tcontent: \"\\1F3D\";\n}\n\n%icon-font-chess-image-plus:before {\n\tcontent: \"\\03B6\";\n}\n\n%icon-font-chess-follow:before {\n\tcontent: \"\\011E\";\n}\n\n%icon-font-chess-unfollow:before {\n\tcontent: \"\\0120\";\n}\n\n%icon-font-chess-quote:before {\n\tcontent: \"\\00D6\";\n}\n\n%icon-font-chess-web-view:before {\n\tcontent: \"\\0126\";\n}\n\n%icon-font-chess-circle:before {\n\tcontent: \"\\0054\";\n}\n\n%icon-font-chess-circle-dashboard:before {\n\tcontent: \"\\004E\";\n}\n\n%icon-font-chess-circle-x:before {\n\tcontent: \"\\0051\";\n}\n\n%icon-font-chess-circle-3-dots:before {\n\tcontent: \"\\038F\";\n}\n\n%icon-font-chess-circle-gearwheel:before {\n\tcontent: \"\\00B7\";\n}\n\n%icon-font-chess-circle-clock:before {\n\tcontent: \"\\0027\";\n}\n\n%icon-font-chess-circle-clock-alt:before {\n\tcontent: \"\\00B0\";\n}\n\n%icon-font-chess-circle-question:before {\n\tcontent: \"\\0028\";\n}\n\n%icon-font-chess-circle-info:before {\n\tcontent: \"\\0029\";\n}\n\n%icon-font-chess-circle-arrow:before {\n\tcontent: \"\\00F7\";\n}\n\n%icon-font-chess-circle-block:before {\n\tcontent: \"\\222B\";\n}\n\n%icon-font-chess-circle-stop:before {\n\tcontent: \"\\0026\";\n}\n\n%icon-font-chess-circle-danger:before {\n\tcontent: \"\\2020\";\n}\n\n%icon-font-chess-circle-checkmark:before {\n\tcontent: \"\\03C7\";\n}\n\n%icon-font-chess-circle-compass:before {\n\tcontent: \"\\0121\";\n}\n\n%icon-font-chess-donate:before {\n\tcontent: \"\\1F4B\";\n}\n\n%icon-font-chess-more:before {\n\tcontent: \"\\1F2B\";\n}\n\n%icon-font-chess-best:before {\n\tcontent: \"\\1F94\";\n}\n\n%icon-font-chess-time-warning:before {\n\tcontent: \"\\1F8B\";\n}\n\n%icon-font-chess-piechart:before {\n\tcontent: \"\\1FB1\";\n}\n\n%icon-font-chess-square:before {\n\tcontent: \"\\1F04\";\n}\n\n%icon-font-chess-square-reply:before {\n\tcontent: \"\\0058\";\n}\n\n%icon-font-chess-square-pencil:before {\n\tcontent: \"\\005A\";\n}\n\n%icon-font-chess-square-brush:before {\n\tcontent: \"\\006C\";\n}\n\n%icon-font-chess-square-in:before {\n\tcontent: \"\\00A1\";\n}\n\n%icon-font-chess-square-out:before {\n\tcontent: \"\\00BF\";\n}\n\n%icon-font-chess-square-bottom-in:before {\n\tcontent: \"\\039E\";\n}\n\n%icon-font-chess-square-x:before {\n\tcontent: \"\\00FC\";\n}\n\n%icon-font-chess-square-plus:before {\n\tcontent: \"\\1F01\";\n}\n\n%icon-font-chess-square-equal:before {\n\tcontent: \"\\1F03\";\n}\n\n%icon-font-chess-square-checkmark:before {\n\tcontent: \"\\03BF\";\n}\n\n%icon-font-chess-square-four:before {\n\tcontent: \"\\03F8\";\n}\n\n%icon-font-chess-arc-sharp:before {\n\tcontent: \"\\1F50\";\n}\n\n%icon-font-chess-arc-rough:before {\n\tcontent: \"\\1F51\";\n}\n\n%icon-font-chess-arc-throwaway:before {\n\tcontent: \"\\1F52\";\n}\n\n%icon-font-chess-arc-balanced:before {\n\tcontent: \"\\1F53\";\n}\n\n%icon-font-chess-arc-wild:before {\n\tcontent: \"\\1F54\";\n}\n\n%icon-font-chess-arc-sudden:before {\n\tcontent: \"\\1F55\";\n}\n\n%icon-font-chess-arc-smooth:before {\n\tcontent: \"\\1F56\";\n}\n\n%icon-font-chess-wld:before {\n\tcontent: \"\\1F63\";\n}\n\n%icon-font-chess-square-minus:before {\n\tcontent: \"\\1F02\";\n}\n\n%icon-font-chess-thumb-lrg:before {\n\tcontent: \"\\1F80\";\n}\n\n%icon-font-chess-thumb-med:before {\n\tcontent: \"\\1F81\";\n}\n\n%icon-font-chess-thumb-sml:before {\n\tcontent: \"\\1F82\";\n}\n\n%icon-font-chess-thumb-alt:before {\n\tcontent: \"\\1F83\";\n}\n\n%icon-font-chess-thumb-row:before {\n\tcontent: \"\\1F84\";\n}\n\n%icon-font-chess-thumb-left:before {\n\tcontent: \"\\1F85\";\n}\n\n%icon-font-chess-caret-up:before {\n\tcontent: \"\\007C\";\n}\n\n%icon-font-chess-caret-down:before {\n\tcontent: \"\\003F\";\n}\n\n%icon-font-chess-caret-left:before {\n\tcontent: \"\\002F\";\n}\n\n%icon-font-chess-caret-right:before {\n\tcontent: \"\\005C\";\n}\n\n%icon-font-chess-chevron-up:before {\n\tcontent: \"\\003E\";\n}\n\n%icon-font-chess-chevron-bottom:before {\n\tcontent: \"\\003C\";\n}\n\n%icon-font-chess-chevron-left:before {\n\tcontent: \"\\002C\";\n}\n\n%icon-font-chess-chevron-right:before {\n\tcontent: \"\\2026\";\n}\n\n%icon-font-chess-double-chevron-left:before {\n\tcontent: \"\\0021\";\n}\n\n%icon-font-chess-double-chevron-right:before {\n\tcontent: \"\\03B1\";\n}\n\n%icon-font-chess-chevron-previous:before {\n\tcontent: \"\\0023\";\n}\n\n%icon-font-chess-chevron-next:before {\n\tcontent: \"\\0040\";\n}\n\n%icon-font-chess-chevron-down:before {\n\tcontent: \"\\1F18\";\n}\n\n%icon-font-chess-arrow-return:before {\n\tcontent: \"\\005F\";\n}\n\n%icon-font-chess-arrow-up:before {\n\tcontent: \"\\007D\";\n}\n\n%icon-font-chess-arrow-down:before {\n\tcontent: \"\\007B\";\n}\n\n%icon-font-chess-arrow-left:before {\n\tcontent: \"\\005B\";\n}\n\n%icon-font-chess-arrow-right:before {\n\tcontent: \"\\005D\";\n}\n\n%icon-font-chess-round-arrow-return:before {\n\tcontent: \"\\03BC\";\n}\n\n%icon-font-chess-bold-arrow-right:before {\n\tcontent: \"\\0386\";\n}\n\n%icon-font-chess-arrow-cross:before {\n\tcontent: \"\\0110\";\n}\n\n%icon-font-chess-pulse:before {\n\tcontent: \"\\1F60\";\n}\n\n%icon-font-chess-user:before {\n\tcontent: \"\\0062\";\n}\n\n%icon-font-chess-users:before {\n\tcontent: \"\\006D\";\n}\n\n%icon-font-chess-users-alt:before {\n\tcontent: \"\\006E\";\n}\n\n%icon-font-chess-user-info:before {\n\tcontent: \"\\0076\";\n}\n\n%icon-font-chess-user-question:before {\n\tcontent: \"\\002D\";\n}\n\n%icon-font-chess-user-search:before {\n\tcontent: \"\\0024\";\n}\n\n%icon-font-chess-user-search-alt:before {\n\tcontent: \"\\014a\";\n}\n\n%icon-font-chess-user-feed:before {\n\tcontent: \"\\0025\";\n}\n\n%icon-font-chess-user-block:before {\n\tcontent: \"\\00A6\";\n}\n\n%icon-font-chess-user-plus:before {\n\tcontent: \"\\00B6\";\n}\n\n%icon-font-chess-users-plus:before {\n\tcontent: \"\\00FF\";\n}\n\n%icon-font-chess-user-x:before {\n\tcontent: \"\\00A7\";\n}\n\n%icon-font-chess-user-chain:before {\n\tcontent: \"\\0159\";\n}\n\n%icon-font-chess-user-broken-chain:before {\n\tcontent: \"\\0158\";\n}\n\n%icon-font-chess-user-shield:before {\n\tcontent: \"\\03DA\";\n}\n\n%icon-font-chess-user-shield-plus:before {\n\tcontent: \"\\0373\";\n}\n\n%icon-font-chess-profile-alt:before {\n\tcontent: \"\\1F9C\";\n}\n\n%icon-font-chess-chess-board:before {\n\tcontent: \"\\0069\";\n}\n\n.dark-mode %icon-font-chess-chess-board:not(.light-mode):before,\n%icon-font-chess-chess-board.dark-mode:before {\n\tcontent: \"\\2019\";\n}\n\n%icon-font-chess-chess-board-search:before {\n\tcontent: \"\\0394\";\n}\n\n%icon-font-chess-chess-board-search-alt:before {\n\tcontent: \"\\03A9\";\n}\n\n%icon-font-chess-question:before {\n\tcontent: \"\\00A9\";\n}\n\n%icon-font-chess-chess-board-plus:before {\n\tcontent: \"\\02C6\";\n}\n\n%icon-font-chess-lessons:before {\n\tcontent: \"\\1F20\";\n}\n\n%icon-font-chess-chess-board-circle:before {\n\tcontent: \"\\00AB\";\n}\n\n%icon-font-chess-chess-board-gear:before {\n\tcontent: \"\\03F7\";\n}\n\n%icon-font-chess-chess-crown:before {\n\tcontent: \"\\03FB\";\n}\n\n%icon-font-chess-chess-crown-alt:before {\n\tcontent: \"\\1F26\";\n}\n\n%icon-font-chess-crown-learning:before {\n\tcontent: \"\\1F32\";\n}\n\n%icon-font-chess-chess-pawn:before {\n\tcontent: \"\\1F19\";\n}\n\n%icon-font-chess-chess-pawn-left-half-rook:before {\n\tcontent: \"\\0112\";\n}\n\n%icon-font-chess-chess-pawn-right-half-rook:before {\n\tcontent: \"\\0113\";\n}\n\n%icon-font-chess-chess-pawn-rook:before {\n\tcontent: \"\\0073\";\n}\n\n%icon-font-chess-chess-pawn-square:before {\n\tcontent: \"\\03B7\";\n}\n\n%icon-font-chess-chess-move:before {\n\tcontent: \"\\1F18\";\n}\n\n%icon-font-chess-chess-move-alt:before {\n\tcontent: \"\\006A\";\n}\n\n%icon-font-chess-chess-board-folder:before {\n\tcontent: \"\\0398\";\n}\n\n%icon-font-chess-chess-board-arrow-down:before,\n%icon-font-chess-chess-board-arrow-left:before,\n%icon-font-chess-chess-board-arrow-right:before {\n\tcontent: \"\\03CC\";\n}\n\n%icon-font-chess-chess-salad:before {\n\tcontent: \"\\1F0A\";\n}\n\n%icon-font-chess-play-new:before {\n\tcontent: \"\\1F2C\";\n}\n\n%icon-font-chess-play-alt:before {\n\tcontent: \"\\1F2D\";\n}\n\n%icon-font-chess-lesson:before {\n\tcontent: \"\\1F14\";\n}\n\n%icon-font-chess-no-castling:before {\n\tcontent: \"\\1F78\";\n}\n\n%icon-font-chess-fog-of-war:before {\n\tcontent: \"\\1F79\";\n}\n\n%icon-font-chess-sideways-pawns:before {\n\tcontent: \"\\1F77\";\n}\n\n%icon-font-chess-capture-anything:before {\n\tcontent: \"\\1F76\";\n}\n\n%icon-font-chess-board-arrow:before {\n\tcontent: \"\\1F62\";\n}\n\n%icon-font-chess-checkbox:before {\n\tcontent: \"\\03A8\";\n}\n\n%icon-font-chess-checkbox-plus:before {\n\tcontent: \"\\03A6\";\n}\n\n%icon-font-chess-printer:before {\n\tcontent: \"\\00E5\";\n}\n\n%icon-font-chess-play:before {\n\tcontent: \"\\004A\";\n}\n\n%icon-font-chess-pause:before {\n\tcontent: \"\\004B\";\n}\n\n%icon-font-chess-sound-off:before {\n\tcontent: \"\\0050\";\n}\n\n%icon-font-chess-sound-on:before {\n\tcontent: \"\\0055\";\n}\n\n%icon-font-chess-repeat:before {\n\tcontent: \"\\0066\";\n}\n\n%icon-font-chess-shuffle:before {\n\tcontent: \"\\0049\";\n}\n\n%icon-font-chess-resize:before {\n\tcontent: \"\\03C0\";\n}\n\n%icon-font-chess-rss:before {\n\tcontent: \"\\1F31\";\n}\n\n%icon-font-chess-favorites:before {\n\tcontent: \"\\03AE\";\n}\n\n%icon-font-chess-facebook:before {\n\tcontent: \"\\0053\";\n}\n\n%icon-font-chess-twitter:before {\n\tcontent: \"\\0046\";\n}\n\n%icon-font-chess-linkedin:before {\n\tcontent: \"\\00C5\";\n}\n\n%icon-font-chess-tumblr:before {\n\tcontent: \"\\00EB\";\n}\n\n%icon-font-chess-mix:before {\n\tcontent: \"\\00DF\";\n}\n\n%icon-font-chess-reddit:before {\n\tcontent: \"\\00B1\";\n}\n\n%icon-font-chess-google:before {\n\tcontent: \"\\1F08\";\n}\n\n%icon-font-chess-instagram:before {\n\tcontent: \"\\1F00\";\n}\n\n%icon-font-chess-wikipedia:before {\n\tcontent: \"\\1F38\";\n}\n\n%icon-font-chess-youtube:before {\n\tcontent: \"\\0060\";\n}\n\n%icon-font-chess-share:before {\n\tcontent: \"\\00A5\";\n}\n\n%icon-font-chess-twitch:before {\n\tcontent: \"\\0393\";\n}\n\n%icon-font-chess-discord:before {\n\tcontent: \"\\1F48\";\n}\n\n%icon-font-chess-fide:before {\n\tcontent: \"\\1F41\";\n}\n\n%icon-font-chess-android:before {\n\tcontent: \"\\00FE\";\n}\n\n%icon-font-chess-apple:before {\n\tcontent: \"\\25CA\";\n}\n\n%icon-font-chess-win-phone:before {\n\tcontent: \"\\03A0\";\n}\n\n%icon-font-chess-thumbs-down:before {\n\tcontent: \"\\2265\";\n}\n\n%icon-font-chess-thumbs-up:before {\n\tcontent: \"\\2264\";\n}\n\n%icon-font-chess-card:before {\n\tcontent: \"\\03DC\";\n}\n\n%icon-font-chess-paypal:before {\n\tcontent: \"\\0377\";\n}\n\n%icon-font-chess-heart:before {\n\tcontent: \"\\1F2F\";\n}\n\n%icon-font-chess-vk:before {\n\tcontent: \"\\1F72\";\n}\n\n%icon-font-chess-tiktok:before {\n\tcontent: \"\\1FB0\";\n}\n\n%icon-font-chess-membership-diamond:before {\n\tcontent: \"\\0370\";\n}\n\n%icon-font-chess-membership-platinum:before {\n\tcontent: \"\\0376\";\n}\n\n%icon-font-chess-membership-mod:before,\n%icon-font-chess-membership-staff:before {\n\tcontent: \"\\0372\";\n}\n\n%icon-font-chess-membership-gold:before {\n\tcontent: \"\\03AE\";\n}\n\n%icon-font-chess-circle-hollow:before {\n\tcontent: \"\\03BD\";\n}\n\n%icon-font-chess-binoculars-crossed:before {\n\tcontent: \"\\00DE\";\n}\n\n%icon-font-chess-border-resize:before {\n\tcontent: \"\\03AC\";\n}\n\n%icon-font-chess-maximize:before {\n\tcontent: \"\\03DD\";\n}\n\n%icon-font-chess-minimize:before {\n\tcontent: \"\\03D8\";\n}\n\n%icon-font-chess-live:before {\n\tcontent: \"\\1F1B\";\n}\n\n%icon-font-chess-live960:before {\n\tcontent: \"\\00D1\";\n}\n\n%icon-font-chess-livematch:before {\n\tcontent: \"\\1F65\";\n}\n\n%icon-font-chess-live-bullet:before {\n\tcontent: \"\\1F1D\";\n}\n\n%icon-font-chess-live-standard:before {\n\tcontent: \"\\1F1C\";\n}\n\n%icon-font-chess-signal:before {\n\tcontent: \"\\03AF\";\n}\n\n%icon-font-chess-proleague:before {\n\tcontent: \"\\014B\";\n}\n\n%icon-font-chess-streamer:before {\n\tcontent: \"\\1F23\";\n}\n\n%icon-font-chess-bishop-white:before {\n\tcontent: \"\\00C4\";\n}\n\n%icon-font-chess-bishop-black:before {\n\tcontent: \"\\0102\";\n}\n\n%icon-font-chess-knight-white:before {\n\tcontent: \"\\0116\";\n}\n\n%icon-font-chess-knight-black:before {\n\tcontent: \"\\00C7\";\n}\n\n%icon-font-chess-rook-white:before {\n\tcontent: \"\\013B\";\n}\n\n%icon-font-chess-rook-black:before {\n\tcontent: \"\\013D\";\n}\n\n%icon-font-chess-king-white:before {\n\tcontent: \"\\0104\";\n}\n\n%icon-font-chess-king-black:before {\n\tcontent: \"\\0100\";\n}\n\n%icon-font-chess-queen-white:before {\n\tcontent: \"\\0136\";\n}\n\n%icon-font-chess-queen-black:before {\n\tcontent: \"\\012E\";\n}\n\n%icon-font-chess-pawn-white:before {\n\tcontent: \"\\0122\";\n}\n\n%icon-font-chess-pawn-black:before {\n\tcontent: \"\\0118\";\n}\n\n%icon-font-chess-shared-analysis:before {\n\tcontent: \"\\1F68\";\n}\n\n%icon-font-chess-boardexpand:before {\n\tcontent: \"\\1FA4\";\n}\n\n.dark-mode %icon-font-chess-bishop-white:before {\n\tcontent: \"\\0102\";\n}\n\n.dark-mode %icon-font-chess-bishop-black:before {\n\tcontent: \"\\00C4\";\n}\n\n.dark-mode %icon-font-chess-knight-white:before {\n\tcontent: \"\\00C7\";\n}\n\n.dark-mode %icon-font-chess-knight-black:before {\n\tcontent: \"\\0116\";\n}\n\n.dark-mode %icon-font-chess-rook-white:before {\n\tcontent: \"\\013D\";\n}\n\n.dark-mode %icon-font-chess-rook-black:before {\n\tcontent: \"\\013B\";\n}\n\n.dark-mode %icon-font-chess-king-white:before {\n\tcontent: \"\\0100\";\n}\n\n.dark-mode %icon-font-chess-king-black:before {\n\tcontent: \"\\0104\";\n}\n\n.dark-mode %icon-font-chess-queen-white:before {\n\tcontent: \"\\012E\";\n}\n\n.dark-mode %icon-font-chess-queen-black:before {\n\tcontent: \"\\0136\";\n}\n\n.dark-mode %icon-font-chess-pawn-white:before {\n\tcontent: \"\\0118\";\n}\n\n.dark-mode %icon-font-chess-pawn-black:before {\n\tcontent: \"\\0122\";\n}\n\n%icon-font-chess-bishop-stroke:before {\n\tcontent: \"\\00C4\";\n}\n\n%icon-font-chess-bishop-fill:before {\n\tcontent: \"\\0102\";\n}\n\n%icon-font-chess-knight-stroke:before {\n\tcontent: \"\\0116\";\n}\n\n%icon-font-chess-knight-fill:before {\n\tcontent: \"\\00C7\";\n}\n\n%icon-font-chess-rook-stroke:before {\n\tcontent: \"\\013B\";\n}\n\n%icon-font-chess-rook-fill:before {\n\tcontent: \"\\013D\";\n}\n\n%icon-font-chess-king-stroke:before {\n\tcontent: \"\\0104\";\n}\n\n%icon-font-chess-king-fill:before {\n\tcontent: \"\\0100\";\n}\n\n%icon-font-chess-queen-stroke:before {\n\tcontent: \"\\0136\";\n}\n\n%icon-font-chess-queen-fill:before {\n\tcontent: \"\\012E\";\n}\n\n%icon-font-chess-pawn-stroke:before {\n\tcontent: \"\\0122\";\n}\n\n%icon-font-chess-pawn-fill:before {\n\tcontent: \"\\0118\";\n}\n\n%icon-font-chess-zero:before {\n\tcontent: \"\\0030\";\n}\n\n%icon-font-chess-one:before {\n\tcontent: \"\\0031\";\n}\n\n%icon-font-chess-two:before {\n\tcontent: \"\\0032\";\n}\n\n%icon-font-chess-three:before {\n\tcontent: \"\\0033\";\n}\n\n%icon-font-chess-four:before {\n\tcontent: \"\\0034\";\n}\n\n%icon-font-chess-five:before {\n\tcontent: \"\\0035\";\n}\n\n%icon-font-chess-six:before {\n\tcontent: \"\\0036\";\n}\n\n%icon-font-chess-seven:before {\n\tcontent: \"\\0037\";\n}\n\n%icon-font-chess-eight:before {\n\tcontent: \"\\0038\";\n}\n\n%icon-font-chess-nine:before {\n\tcontent: \"\\0039\";\n}\n\n%icon-font-chess-colon:before {\n\tcontent: \"\\003A\";\n}\n\n%icon-font-chess-period:before {\n\tcontent: \"\\002E\";\n}\n\n%icon-font-chess-matetag:before {\n\tcontent: \"\\1F92\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-display-slider:before {\n\tcontent: \"\\203A\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-filter:before {\n\tcontent: \"\\2039\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-nav-expanded:before {\n\tcontent: \"\\03E0\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-nav-collapsed:before {\n\tcontent: \"\\03E1\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-arrow-up:before {\n\tcontent: \"\\007B\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-arrow-down:before {\n\tcontent: \"\\007D\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-chevron-up:before {\n\tcontent: \"\\003C\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-chevron-bottom:before {\n\tcontent: \"\\003E\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-thumbs-down:before {\n\tcontent: \"\\2264\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-thumbs-up:before {\n\tcontent: \"\\2265\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-chevron-left:before {\n\tcontent: \"\\2026\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-chevron-right:before {\n\tcontent: \"\\002C\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-circle-question:before {\n\tcontent: \"\\0029\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-circle-info:before {\n\tcontent: \"\\0028\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-caret-left:before {\n\tcontent: \"\\005C\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-caret-right:before {\n\tcontent: \"\\002F\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-double-chevron-left:before {\n\tcontent: \"\\03B1\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-double-chevron-right:before {\n\tcontent: \"\\0021\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-chess-board-circle:before {\n\tcontent: \"\\00BB\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-pushpin:before {\n\tcontent: \"\\00AB\";\n}\n\n%icon-font-chess-daily:before {\n\tcontent: \"\\1F1A\";\n}\n\n%icon-font-chess-circle-timer:before,\n%icon-font-chess-rapid:before {\n\tcontent: \"\\1F1B\";\n}\n\n%icon-font-chess-chess-board-puzzle-reversed:before {\n\tcontent: \"\\03DE\";\n}\n\n%icon-font-chess-standard:before {\n\tcontent: \"\\0069\";\n}\n\n%icon-font-chess-blitz:before,\n%icon-font-chess-lightning:before {\n\tcontent: \"\\1F1C\";\n}\n\n%icon-font-chess-crossed-swords:before {\n\tcontent: \"\\03C4\";\n}\n","$lightContentColor: hsla(0, 0%, 100%, 0.65);\n$boardComponentWhiteColor: #e2e2e2;\n$boardComponentDarkColor: #322e2b;\n$activeColor: #7fa650;\n\n$boardComponentFont: \"Segoe UI\";\n","@mixin scrollbar($width, $thumbColor: #555, $trackColor: #f5f5f5) {\n\tscrollbar-width: $width;\n\tscrollbar-color: $thumbColor $trackColor;\n\n\t&::-webkit-scrollbar-track,\n\t&::-webkit-scrollbar-thumb {\n\t\tbox-shadow: inset 0 0 ($width + 2px) rgba($color: #000000, $alpha: 0.3);\n\t\t-webkit-box-shadow: inset 0 0 ($width + 2px) rgba($color: #000000, $alpha: 0.3);\n\t\tborder-radius: 7px;\n\t}\n\n\t&::-webkit-scrollbar {\n\t\twidth: $width;\n\t}\n\n\t&::-webkit-scrollbar-thumb {\n\t\tbackground-color: $thumbColor;\n\t}\n\n\t&::-webkit-scrollbar-track {\n\t\tbackground-color: $trackColor;\n\t}\n}\n\n@mixin alternatingBoardColors($firstColor, $secondColor, $deeperElement: null, $property: \"background-color\") {\n\t@if ($deeperElement) {\n\t\t&:nth-child(odd)>*:nth-child(odd) #{$deeperElement},\n\t\t&:nth-child(even)>*:nth-child(even) #{$deeperElement} {\n\t\t\t#{$property}: $firstColor;\n\t\t}\n\n\t\t&:nth-child(odd)>*:nth-child(even) #{$deeperElement},\n\t\t&:nth-child(even)>*:nth-child(odd) #{$deeperElement} {\n\t\t\t#{$property}: $secondColor;\n\t\t}\n\t} @else {\n\t\t&:nth-child(odd)>*:nth-child(odd),\n\t\t&:nth-child(even)>*:nth-child(even) {\n\t\t\t#{$property}: $firstColor;\n\t\t}\n\n\t\t&:nth-child(odd)>*:nth-child(even),\n\t\t&:nth-child(even)>*:nth-child(odd) {\n\t\t\t#{$property}: $secondColor;\n\t\t}\n\t}\n}\n\n@mixin occupyAbsoluteSize {\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\tright: 0;\n\tbottom: 0;\n}\n\n@mixin button {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tpadding: 0.5rem 1.2rem;\n\tbackground: hsla(0, 0%, 100%, 0.08);\n\tcolor: #e2e2e2;\n\tborder-radius: 6%;\n\tborder: none;\n}\n\n@mixin iconSize($size: null, $adaptive: false) {\n\t@if ($size) {\n\t\tfont-size: $size;\n\n\t\t@if (not $adaptive) {\n\t\t\twidth: $size;\n\t\t\theight: $size;\n\t\t\tline-height: 1;\n\t\t}\n\t} @else {\n\t\tfont-size: 2rem;\n\t\twidth: 2rem;\n\t\theight: 2rem;\n\t}\n\n\tfont-family: \"ChessGlyph New\";\n}\n\n@mixin tooltip {\n\tdisplay: block;\n\tmax-width: 25rem;\n\tpadding: 0.5rem;\n\tfont-weight: 500;\n\tfont-size: 1.1rem;\n\tword-break: break-word;\n\toverflow-wrap: break-word;\n}\n"],"sourceRoot":""}]);
// Exports
___CSS_LOADER_EXPORT___.locals = {
	"square-wrap-surroundings__atomic-explosion": "GameDisplay-module-square-wrap-surroundings__atomic-explosion",
	"square-wrap-surroundings__atomic-immunity": "GameDisplay-module-square-wrap-surroundings__atomic-immunity",
	"chained-move-notice__takeback-icon": "GameDisplay-module-chained-move-notice__takeback-icon",
	"player-box__clock-icon": "GameDisplay-module-player-box__clock-icon",
	"wrap": "GameDisplay-module-wrap",
	"piece-bank": "GameDisplay-module-piece-bank",
	"piece-bank-container": "GameDisplay-module-piece-bank-container",
	"piece-bank-wrap": "GameDisplay-module-piece-bank-wrap",
	"piece-bank-wrap--right": "GameDisplay-module-piece-bank-wrap--right",
	"piece-bank-wrap--left": "GameDisplay-module-piece-bank-wrap--left",
	"piece-bank-wrap--bottom": "GameDisplay-module-piece-bank-wrap--bottom",
	"piece-bank-wrap--top": "GameDisplay-module-piece-bank-wrap--top",
	"piece-bank__piece-wrap": "GameDisplay-module-piece-bank__piece-wrap",
	"piece-bank__piece": "GameDisplay-module-piece-bank__piece",
	"piece-bank__piece-count": "GameDisplay-module-piece-bank__piece-count",
	"dialog-window": "GameDisplay-module-dialog-window",
	"promotion-dialog": "GameDisplay-module-promotion-dialog",
	"promotion-dialog__piece-display": "GameDisplay-module-promotion-dialog__piece-display",
	"chained-move-notice": "GameDisplay-module-chained-move-notice",
	"chained-move-notice--seirawan-drop": "GameDisplay-module-chained-move-notice--seirawan-drop",
	"chained-move-notice--blink": "GameDisplay-module-chained-move-notice--blink",
	"backgroundBlink": "GameDisplay-module-backgroundBlink",
	"chained-move-notice--duck-move": "GameDisplay-module-chained-move-notice--duck-move",
	"duckBlink": "GameDisplay-module-duckBlink",
	"chained-move-notice__description": "GameDisplay-module-chained-move-notice__description",
	"chained-move-notice__countdown": "GameDisplay-module-chained-move-notice__countdown",
	"chained-move-notice__arrow": "GameDisplay-module-chained-move-notice__arrow",
	"row": "GameDisplay-module-row",
	"square": "GameDisplay-module-square",
	"square--active": "GameDisplay-module-square--active",
	"square-wrap--king-of-the-hill": "GameDisplay-module-square-wrap--king-of-the-hill",
	"square-wrap": "GameDisplay-module-square-wrap",
	"square-wrap-surroundings": "GameDisplay-module-square-wrap-surroundings",
	"square-wrap-surroundings__fleur-de-lis": "GameDisplay-module-square-wrap-surroundings__fleur-de-lis",
	"square-wrap-surroundings__lives-indicator": "GameDisplay-module-square-wrap-surroundings__lives-indicator",
	"square__piece": "GameDisplay-module-square__piece",
	"square__piece--stonewall": "GameDisplay-module-square__piece--stonewall",
	"square--ghosted": "GameDisplay-module-square--ghosted",
	"square--fogged": "GameDisplay-module-square--fogged",
	"player-box-container": "GameDisplay-module-player-box-container",
	"player-box-container--edge-extruded": "GameDisplay-module-player-box-container--edge-extruded",
	"player-box-wrap": "GameDisplay-module-player-box-wrap",
	"player-box-wrap--top": "GameDisplay-module-player-box-wrap--top",
	"player-box-wrap--no-corners": "GameDisplay-module-player-box-wrap--no-corners",
	"player-box-wrap--bottom": "GameDisplay-module-player-box-wrap--bottom",
	"player-box": "GameDisplay-module-player-box",
	"player-box--no-corners": "GameDisplay-module-player-box--no-corners",
	"player-box-wrap--right": "GameDisplay-module-player-box-wrap--right",
	"player-box-wrap--left": "GameDisplay-module-player-box-wrap--left",
	"player-box__clock": "GameDisplay-module-player-box__clock",
	"player-box__clock-seconds": "GameDisplay-module-player-box__clock-seconds",
	"player-box__player-data": "GameDisplay-module-player-box__player-data",
	"player-box__player-icon": "GameDisplay-module-player-box__player-icon",
	"player-box-wrap--active": "GameDisplay-module-player-box-wrap--active",
	"player-box__player-info": "GameDisplay-module-player-box__player-info",
	"player-box__player-text": "GameDisplay-module-player-box__player-text",
	"player-box__player-points-wrap": "GameDisplay-module-player-box__player-points-wrap",
	"player-box__player-points": "GameDisplay-module-player-box__player-points",
	"arrows-wrap": "GameDisplay-module-arrows-wrap",
	"arrows-wrap__canvas": "GameDisplay-module-arrows-wrap__canvas"
};
/* harmony default export */ __webpack_exports__["Z"] = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 4018:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60445);
/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(60352);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".GameMoveTree-module-move-controls-row__delete-pgn-icon:before{content:\"•\"}.GameMoveTree-module-move-controls-row__download-pgn-icon:before{content:'\"'}.GameMoveTree-module-move-controls-row__takebacks-icon:before{content:\"L\"}.GameMoveTree-module-move-tree-wrap{display:flex;flex-direction:column;width:100%;height:20rem;color:rgba(255,255,255,.65)}.GameMoveTree-module-move-tree{scrollbar-width:8px;scrollbar-color:#555 #f5f5f5;padding:2px 8px;width:100%;height:100%;overflow-x:hidden}.GameMoveTree-module-move-tree::-webkit-scrollbar-track,.GameMoveTree-module-move-tree::-webkit-scrollbar-thumb{box-shadow:inset 0 0 10px rgba(0,0,0,.3);-webkit-box-shadow:inset 0 0 10px rgba(0,0,0,.3);border-radius:7px}.GameMoveTree-module-move-tree::-webkit-scrollbar{width:8px}.GameMoveTree-module-move-tree::-webkit-scrollbar-thumb{background-color:#555}.GameMoveTree-module-move-tree::-webkit-scrollbar-track{background-color:#f5f5f5}.GameMoveTree-module-move-controls{padding:4px 8px;font-weight:600;color:rgba(255,255,255,.65);background-color:rgba(0,0,0,.12)}.GameMoveTree-module-move-controls-row{display:flex;flex-direction:row;align-items:stretch;width:100%}.GameMoveTree-module-move-controls-row:first-child{margin-bottom:2px}.GameMoveTree-module-move-controls-row:last-child{margin-top:-4px}.GameMoveTree-module-move-controls-row__takebacks-wrap{display:flex;width:18%}.GameMoveTree-module-move-controls-row__takebacks{margin-top:1px;opacity:.7;font-weight:400}.GameMoveTree-module-move-controls-row__icon{font-size:2.4rem;font-family:\"ChessGlyph New\";cursor:pointer}.GameMoveTree-module-move-controls-row__takebacks-text{padding-top:2px}.GameMoveTree-module-move-controls-row__move-information-wrap{display:flex;width:33%;gap:.7rem}.GameMoveTree-module-move-controls-row__move-information{margin-top:3px;font-weight:200;font-size:1.25rem;opacity:.65;color:#e2e2e2}.GameMoveTree-module-move-controls-row__pgn-information{display:flex;align-items:flex-end;gap:.7rem;margin-left:auto;font-weight:200;font-size:1.2rem;opacity:.65}.GameMoveTree-module-move-controls-row__download-pgn-icon::before,.GameMoveTree-module-move-controls-row__delete-pgn-icon::before{font-weight:300}.GameMoveTree-module-move-controls-row__navigation{display:flex;align-items:center;gap:.5rem;font-weight:500}.GameMoveTree-module-move-controls-row__navigation-button{font-family:\"ChessGlyph New\";font-size:2.4rem;color:rgba(255,255,255,.65);opacity:.7;cursor:pointer}.GameMoveTree-module-move-controls-row__navigation-button--disabled{opacity:.4;cursor:not-allowed}.GameMoveTree-module-move-tree-move{display:inline-block;padding:0 .4rem;text-align:left;vertical-align:top;font-weight:600}.GameMoveTree-module-move-tree-move>div{display:inline-block}.GameMoveTree-module-move-tree-move__move-wrap{display:inline-block;cursor:pointer}.GameMoveTree-module-move-tree-move__move-wrap--selected{background-color:rgba(255,255,255,.65)}.GameMoveTree-module-move-tree-move__move-text{font-size:1.3rem;font-family:\"Segoe UI\";opacity:1}.GameMoveTree-module-move-tree-move__move-comment{font-style:italic;margin-left:5px}.GameMoveTree-module-move-tree-move__variations{display:inline-block;background-color:rgba(255,255,255,.65);border-radius:3%;font-size:1rem;opacity:.9}", "",{"version":3,"sources":["webpack://./src/main/client/ts/components/BoardComponents/MoveTree/GameMoveTree.module.scss","webpack://./src/main/client/scss/vendor/ChessGlyph.scss","webpack://./src/main/client/scss/Colors.scss","webpack://./src/main/client/scss/Mixins.scss"],"names":[],"mappings":"AAAA,+DC8UA,WACC,CAAA,iEAGD,WACC,CAAA,8DA+WD,WACC,CAAA,oCDjsBD,YACC,CAAA,qBACA,CAAA,UACA,CAAA,YACA,CAAA,2BENmB,CAAA,+BFUpB,mBAC0B,CAAA,4BGTzB,CAAA,eHUA,CAAA,UACA,CAAA,WACA,CAAA,iBACA,CAAA,gHGXA,wCAEC,CAAA,gDACA,CAAA,iBACA,CAAA,kDAGD,SHAyB,CAAA,wDGIzB,qBAfqC,CAAA,wDAmBrC,wBAnBwD,CAAA,mCHkBzD,eACC,CAAA,eACA,CAAA,2BEpBmB,CAAA,gCFsBnB,CAAA,uCAEA,YACC,CAAA,kBACA,CAAA,mBACA,CAAA,UACA,CAAA,mDAEA,iBACC,CAAA,kDAGD,eACC,CAAA,uDAGD,YACC,CAAA,SACA,CAAA,kDAGD,cACC,CAAA,UACA,CAAA,eACA,CAAA,6CAGD,gBACgC,CAAA,4BGgCjC,CAAA,cH/BE,CAAA,uDAOD,eACC,CAAA,8DAGD,YACC,CAAA,SACA,CAAA,SACA,CAAA,yDAGD,cACC,CAAA,eACA,CAAA,iBACA,CAAA,WACA,CAAA,aEvEwB,CAAA,wDF2EzB,YACC,CAAA,oBACA,CAAA,SACA,CAAA,gBACA,CAAA,eACA,CAAA,gBACA,CAAA,WACA,CAAA,kIAWD,eAEC,CAAA,mDAGD,YACC,CAAA,kBACA,CAAA,SACA,CAAA,eACA,CAAA,0DAEA,4BACC,CAAA,gBACA,CAAA,2BE3GgB,CAAA,UF6GhB,CAAA,cACA,CAAA,oEAEA,UACC,CAAA,kBACA,CAAA,oCAOL,oBACC,CAAA,eACA,CAAA,eACA,CAAA,kBACA,CAAA,eACA,CAAA,wCAEA,oBACC,CAAA,+CAGD,oBACC,CAAA,cACA,CAAA,yDAEA,sCExIkB,CAAA,+CF6InB,gBACC,CAAA,sBEzImB,CAAA,SF2InB,CAAA,kDAGD,iBACC,CAAA,eACA,CAAA,gDAGD,oBACC,CAAA,sCEzJkB,CAAA,gBF2JlB,CAAA,cACA,CAAA,UACA","sourcesContent":["@use \"../../../index\";\n\n.move-tree-wrap {\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 100%;\n\theight: 20rem;\n\tcolor: index.$lightContentColor;\n}\n\n.move-tree {\n\t@include index.scrollbar(8px);\n\tpadding: 2px 8px;\n\twidth: 100%;\n\theight: 100%;\n\toverflow-x: hidden;\n}\n\n.move-controls {\n\tpadding: 4px 8px;\n\tfont-weight: 600;\n\tcolor: index.$lightContentColor;\n\tbackground-color: rgba(0, 0, 0, 0.12);\n\n\t&-row {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\talign-items: stretch;\n\t\twidth: 100%;\n\n\t\t&:first-child {\n\t\t\tmargin-bottom: 2px;\n\t\t}\n\n\t\t&:last-child {\n\t\t\tmargin-top: -4px;\n\t\t}\n\n\t\t&__takebacks-wrap {\n\t\t\tdisplay: flex;\n\t\t\twidth: 18%;\n\t\t}\n\n\t\t&__takebacks {\n\t\t\tmargin-top: 1px;\n\t\t\topacity: 0.7;\n\t\t\tfont-weight: 400;\n\t\t}\n\n\t\t&__icon {\n\t\t\t@include index.iconSize($size: 2.4rem, $adaptive: true);\n\t\t\tcursor: pointer;\n\t\t}\n\n\t\t&__takebacks-icon {\n\t\t\t@extend %icon-font-chess-undo;\n\t\t}\n\n\t\t&__takebacks-text {\n\t\t\tpadding-top: 2px;\n\t\t}\n\n\t\t&__move-information-wrap {\n\t\t\tdisplay: flex;\n\t\t\twidth: 33%;\n\t\t\tgap: 0.7rem;\n\t\t}\n\n\t\t&__move-information {\n\t\t\tmargin-top: 3px;\n\t\t\tfont-weight: 200;\n\t\t\tfont-size: 1.25rem;\n\t\t\topacity: 0.65;\n\t\t\tcolor: index.$boardComponentWhiteColor;\n\t\t}\n\n\t\t&__pgn-information {\n\t\t\tdisplay: flex;\n\t\t\talign-items: flex-end;\n\t\t\tgap: 0.7rem;\n\t\t\tmargin-left: auto;\n\t\t\tfont-weight: 200;\n\t\t\tfont-size: 1.2rem;\n\t\t\topacity: 0.65;\n\t\t}\n\n\t\t&__download-pgn-icon {\n\t\t\t@extend %icon-font-chess-download;\n\t\t}\n\n\t\t&__delete-pgn-icon {\n\t\t\t@extend %icon-font-chess-trash;\n\t\t}\n\n\t\t&__download-pgn-icon::before,\n\t\t&__delete-pgn-icon::before {\n\t\t\tfont-weight: 300;\n\t\t}\n\n\t\t&__navigation {\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\tgap: 0.5rem;\n\t\t\tfont-weight: 500;\n\n\t\t\t&-button {\n\t\t\t\tfont-family: \"ChessGlyph New\";\n\t\t\t\tfont-size: 2.4rem;\n\t\t\t\tcolor: index.$lightContentColor;\n\t\t\t\topacity: 0.7;\n\t\t\t\tcursor: pointer;\n\n\t\t\t\t&--disabled {\n\t\t\t\t\topacity: 0.4;\n\t\t\t\t\tcursor: not-allowed;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n.move-tree-move {\n\tdisplay: inline-block;\n\tpadding: 0 0.4rem;\n\ttext-align: left;\n\tvertical-align: top;\n\tfont-weight: 600;\n\n\t& > div {\n\t\tdisplay: inline-block;\n\t}\n\n\t&__move-wrap {\n\t\tdisplay: inline-block;\n\t\tcursor: pointer;\n\n\t\t&--selected {\n\t\t\tbackground-color: index.$lightContentColor;\n\t\t}\n\t}\n\n\t&__move-text {\n\t\tfont-size: 1.3rem;\n\t\tfont-family: index.$boardComponentFont;\n\t\topacity: 1;\n\t}\n\n\t&__move-comment {\n\t\tfont-style: italic;\n\t\tmargin-left: 5px;\n\t}\n\n\t&__variations {\n\t\tdisplay: inline-block;\n\t\tbackground-color: index.$lightContentColor;\n\t\tborder-radius: 3%;\n\t\tfont-size: 1rem;\n\t\topacity: 0.9;\n\t}\n}\n","%icon-font-chess-chess:before {\n\tcontent: \"\\0069\";\n}\n\n%icon-font-chess-chess960:before {\n\tcontent: \"\\1F28\";\n}\n\n%icon-font-chess-threecheck:before {\n\tcontent: \"\\00CB\";\n}\n\n%icon-font-chess-kingofthehill:before {\n\tcontent: \"\\012A\";\n}\n\n%icon-font-chess-losers:before {\n\tcontent: \"\\012B\";\n}\n\n%icon-font-chess-crazyhouse:before {\n\tcontent: \"\\010E\";\n}\n\n%icon-font-chess-bughouse:before {\n\tcontent: \"\\011A\";\n}\n\n%icon-font-chess-solo-chess:before {\n\tcontent: \"\\1F06\";\n}\n\n%icon-font-chess-liveChess960:before {\n\tcontent: \"\\00D1\";\n}\n\n%icon-font-chess-live-tournament:before,\n%icon-font-chess-tournament:before {\n\tcontent: \"\\004F\";\n}\n\n%icon-font-chess-live-teammatch:before,\n%icon-font-chess-teammatch:before {\n\tcontent: \"\\03C4\";\n}\n\n%icon-font-chess-automate:before {\n\tcontent: \"\\1F7A\";\n}\n\n%icon-font-chess-vs-bot:before {\n\tcontent: \"\\1F70\";\n}\n\n%icon-font-chess-four-ffa:before {\n\tcontent: \"\\1F69\";\n}\n\n%icon-font-chess-variants:before {\n\tcontent: \"\\1F6A\";\n}\n\n%icon-font-chess-horde:before {\n\tcontent: \"\\1F7C\";\n}\n\n%icon-font-chess-chaturanga:before {\n\tcontent: \"\\1F7D\";\n}\n\n%icon-font-chess-classical:before {\n\tcontent: \"\\1F8A\";\n}\n\n%icon-font-chess-classroom:before {\n\tcontent: \"\\1F91\";\n}\n\n%icon-font-chess-endgames:before {\n\tcontent: \"\\1F96\";\n}\n\n%icon-font-chess-doubles-unpartner:before {\n\tcontent: \"\\1FA6\";\n}\n\n%icon-font-chess-nav-horizontal:before {\n\tcontent: \"\\0052\";\n}\n\n%icon-font-chess-nav-vertical:before {\n\tcontent: \"\\00E7\";\n}\n\n%icon-font-chess-nav-expanded:before {\n\tcontent: \"\\03E1\";\n}\n\n%icon-font-chess-nav-collapsed:before {\n\tcontent: \"\\03E0\";\n}\n\n%icon-font-chess-collapse-down:before {\n\tcontent: \"\\1F29\";\n}\n\n%icon-font-chess-nav-pawn:before {\n\tcontent: \"\\1F2A\";\n}\n\n%icon-font-chess-bug:before {\n\tcontent: \"\\00F5\";\n}\n\n%icon-font-chess-hourglass:before {\n\tcontent: \"\\03FA\";\n}\n\n%icon-font-chess-camera:before {\n\tcontent: \"\\0048\";\n}\n\n%icon-font-chess-camera-plus:before {\n\tcontent: \"\\03DF\";\n}\n\n%icon-font-chess-globe:before {\n\tcontent: \"\\004D\";\n}\n\n%icon-font-chess-order:before {\n\tcontent: \"\\004F\";\n}\n\n%icon-font-chess-flag:before {\n\tcontent: \"\\0059\";\n}\n\n%icon-font-chess-calendar:before {\n\tcontent: \"\\0061\";\n}\n\n%icon-font-chess-three-day:before {\n\tcontent: \"\\1F90\";\n}\n\n%icon-font-chess-daily-game:before {\n\tcontent: \"\\1F1A\";\n}\n\n%icon-font-chess-chat:before {\n\tcontent: \"\\0063\";\n}\n\n%icon-font-chess-chat-alt:before {\n\tcontent: \"\\007A\";\n}\n\n%icon-font-chess-chat-x:before {\n\tcontent: \"\\2044\";\n}\n\n%icon-font-chess-quickchat:before {\n\tcontent: \"\\1F93\";\n}\n\n%icon-font-chess-chess-book:before {\n\tcontent: \"\\006F\";\n}\n\n%icon-font-chess-filter:before {\n\tcontent: \"\\203A\";\n}\n\n%icon-font-chess-sort:before {\n\tcontent: \"\\1F5D\";\n}\n\n%icon-font-chess-lock:before {\n\tcontent: \"\\0064\";\n}\n\n%icon-font-chess-inbox:before {\n\tcontent: \"\\0065\";\n}\n\n%icon-font-chess-lightbulb:before {\n\tcontent: \"\\0067\";\n}\n\n%icon-font-chess-nametag:before {\n\tcontent: \"\\0068\";\n}\n\n%icon-font-chess-mail:before {\n\tcontent: \"\\0075\";\n}\n\n%icon-font-chess-mail-alt:before {\n\tcontent: \"\\0079\";\n}\n\n%icon-font-chess-mail-plus:before {\n\tcontent: \"\\006B\";\n}\n\n%icon-font-chess-mail-exclaimation:before {\n\tcontent: \"\\03BB\";\n}\n\n%icon-font-chess-book:before {\n\tcontent: \"\\006F\";\n}\n\n%icon-font-chess-book-alt:before {\n\tcontent: \"\\00A4\";\n}\n\n%icon-font-chess-book-open:before {\n\tcontent: \"\\00B4\";\n}\n\n%icon-font-chess-files:before {\n\tcontent: \"\\03C3\";\n}\n\n%icon-font-chess-popup:before {\n\tcontent: \"\\0070\";\n}\n\n%icon-font-chess-depth:before {\n\tcontent: \"\\1F35\";\n}\n\n%icon-font-chess-bell:before {\n\tcontent: \"\\0071\";\n}\n\n%icon-font-chess-bell-off:before {\n\tcontent: \"\\1FB2\";\n}\n\n%icon-font-chess-menu:before {\n\tcontent: \"\\0074\";\n}\n\n%icon-font-chess-home:before {\n\tcontent: \"\\0077\";\n}\n\n%icon-font-chess-home-alt:before {\n\tcontent: \"\\03DB\";\n}\n\n%icon-font-chess-custom-home:before {\n\tcontent: \"\\1F3A\";\n}\n\n%icon-font-chess-bullet:before {\n\tcontent: \"\\1F1D\";\n}\n\n%icon-font-chess-chess-board-puzzle:before {\n\tcontent: \"\\1F15\";\n}\n\n%icon-font-chess-chess-board-vision:before {\n\tcontent: \"\\0111\";\n}\n\n%icon-font-chess-fire-puzzle:before {\n\tcontent: \"\\1EBA\";\n}\n\n%icon-font-chess-fire:before {\n\tcontent: \"\\1F05\";\n}\n\n%icon-font-chess-fire-alt:before {\n\tcontent: \"\\1F25\";\n}\n\n%icon-font-chess-survival:before {\n\tcontent: \"\\1F10\";\n}\n\n%icon-font-chess-smartphone:before {\n\tcontent: \"\\E902\";\n}\n\n%icon-font-chess-computer:before {\n\tcontent: \"\\1F21\";\n}\n\n%icon-font-chess-computer-search:before {\n\tcontent: \"\\03BE\";\n}\n\n%icon-font-chess-comp-analysis:before {\n\tcontent: \"\\1F3B\";\n}\n\n%icon-font-chess-comp-analysis-done:before {\n\tcontent: \"\\1F3C\";\n}\n\n%icon-font-chess-max-analysis:before {\n\tcontent: \"\\1F64\";\n}\n\n%icon-font-chess-comp-drills:before {\n\tcontent: \"\\1F3E\";\n}\n\n%icon-font-chess-vscomp:before {\n\tcontent: \"\\1F4A\";\n}\n\n%icon-font-chess-tag:before {\n\tcontent: \"\\00BD\";\n}\n\n%icon-font-chess-toolbox:before {\n\tcontent: \"\\00BC\";\n}\n\n%icon-font-chess-cake:before {\n\tcontent: \"\\00BE\";\n}\n\n%icon-font-chess-asterisk:before {\n\tcontent: \"\\002A\";\n}\n\n%icon-font-chess-trash:before {\n\tcontent: \"\\2022\";\n}\n\n%icon-font-chess-download:before {\n\tcontent: \"\\0022\";\n}\n\n%icon-font-chess-display-slider:before {\n\tcontent: \"\\2039\";\n}\n\n%icon-font-chess-pushpin:before {\n\tcontent: \"\\00BB\";\n}\n\n%icon-font-chess-key:before {\n\tcontent: \"\\00A2\";\n}\n\n%icon-font-chess-page:before {\n\tcontent: \"\\00A3\";\n}\n\n%icon-font-chess-page-alt:before {\n\tcontent: \"\\20AC\";\n}\n\n%icon-font-chess-page-pencil:before {\n\tcontent: \"\\0078\";\n}\n\n%icon-font-chess-news:before {\n\tcontent: \"\\0045\";\n}\n\n%icon-font-chess-news-alt:before {\n\tcontent: \"\\1F13\";\n}\n\n%icon-font-chess-equal:before {\n\tcontent: \"\\003D\";\n}\n\n%icon-font-chess-stats:before {\n\tcontent: \"\\003B\";\n}\n\n%icon-font-chess-stats-arrow-up:before {\n\tcontent: \"\\010D\";\n}\n\n%icon-font-chess-stats-x:before {\n\tcontent: \"\\00F0\";\n}\n\n%icon-font-chess-graphs:before {\n\tcontent: \"\\03C5\";\n}\n\n%icon-font-chess-binoculars:before {\n\tcontent: \"\\2014\";\n}\n\n%icon-font-chess-magnifying-glass:before {\n\tcontent: \"\\2013\";\n}\n\n%icon-font-chess-magnifying-glass-done:before {\n\tcontent: \"\\1F49\";\n}\n\n%icon-font-chess-present:before {\n\tcontent: \"\\00BE\";\n}\n\n%icon-font-chess-enter:before {\n\tcontent: \"\\1F12\";\n}\n\n%icon-font-chess-exit:before {\n\tcontent: \"\\00D7\";\n}\n\n%icon-font-chess-draw:before {\n\tcontent: \"\\002B\";\n}\n\n%icon-font-chess-cup:before {\n\tcontent: \"\\2021\";\n}\n\n%icon-font-chess-leaguecup:before {\n\tcontent: \"\\1FA5\";\n}\n\n%icon-font-chess-scales:before {\n\tcontent: \"\\0371\";\n}\n\n%icon-font-chess-paper-pencil:before {\n\tcontent: \"\\03A3\";\n}\n\n%icon-font-chess-todo-list:before {\n\tcontent: \"\\010F\";\n}\n\n%icon-font-chess-trophy-plus:before {\n\tcontent: \"\\03A5\";\n}\n\n%icon-font-chess-trophy-minus:before {\n\tcontent: \"\\03BA\";\n}\n\n%icon-font-chess-trophy-podium:before {\n\tcontent: \"\\03B5\";\n}\n\n%icon-font-chess-events:before {\n\tcontent: \"\\1F36\";\n}\n\n%icon-font-chess-privacy:before {\n\tcontent: \"\\03B2\";\n}\n\n%icon-font-chess-survey:before {\n\tcontent: \"\\03C1\";\n}\n\n%icon-font-chess-arena:before {\n\tcontent: \"\\1F39\";\n}\n\n%icon-font-chess-clubs:before {\n\tcontent: \"\\1F9B\";\n}\n\n%icon-font-chess-club-arena:before {\n\tcontent: \"\\1F8C\";\n}\n\n%icon-font-chess-battle:before {\n\tcontent: \"\\1F5F\";\n}\n\n%icon-font-chess-tracked-content:before {\n\tcontent: \"\\00D5\";\n}\n\n%icon-font-chess-pawn-tracked:before {\n\tcontent: \"\\1F23\";\n}\n\n%icon-font-chess-queen-wreath:before {\n\tcontent: \"\\00F1\";\n}\n\n%icon-font-chess-crosshair:before {\n\tcontent: \"\\0111\";\n}\n\n%icon-font-chess-shield:before {\n\tcontent: \"\\014B\";\n}\n\n%icon-font-chess-chip:before {\n\tcontent: \"\\00F6\";\n}\n\n%icon-font-chess-chip-crossed:before {\n\tcontent: \"\\1F07\";\n}\n\n%icon-font-chess-comp-challenge:before {\n\tcontent: \"\\1F37\";\n}\n\n%icon-font-chess-smiley:before {\n\tcontent: \"\\03C2\";\n}\n\n%icon-font-chess-smileyadd:before {\n\tcontent: \"\\1F44\";\n}\n\n%icon-font-chess-troll:before {\n\tcontent: \"\\1F74\";\n}\n\n%icon-font-chess-eye:before {\n\tcontent: \"\\0057\";\n}\n\n%icon-font-chess-eye-off:before {\n\tcontent: \"\\1F40\";\n}\n\n%icon-font-chess-select:before {\n\tcontent: \"\\03AD\";\n}\n\n%icon-font-chess-store:before {\n\tcontent: \"\\1F43\";\n}\n\n%icon-font-chess-question-mark:before {\n\tcontent: \"\\1F0E\";\n}\n\n%icon-font-chess-inaccuracy:before {\n\tcontent: \"\\1F6F\";\n}\n\n%icon-font-chess-cycle:before {\n\tcontent: \"\\1F34\";\n}\n\n%icon-font-chess-gift:before {\n\tcontent: \"\\1F4D\";\n}\n\n%icon-font-chess-perfect:before {\n\tcontent: \"\\1F4C\";\n}\n\n%icon-font-chess-four-teams:before {\n\tcontent: \"\\1F59\";\n}\n\n%icon-font-chess-four-custom:before {\n\tcontent: \"\\1F5B\";\n}\n\n%icon-font-chess-percentile:before {\n\tcontent: \"\\1F2E\";\n}\n\n%icon-font-chess-carousel:before {\n\tcontent: \"\\1F11\";\n}\n\n%icon-font-chess-edit-time:before {\n\tcontent: \"\\03D9\";\n}\n\n%icon-font-chess-add-time:before {\n\tcontent: \"\\1F6C\";\n}\n\n%icon-font-chess-switches:before {\n\tcontent: \"\\1F75\";\n}\n\n%icon-font-chess-torpedo:before {\n\tcontent: \"\\1F71\";\n}\n\n%icon-font-chess-blindfold:before {\n\tcontent: \"\\1F73\";\n}\n\n%icon-font-chess-camera-on:before {\n\tcontent: \"\\1F6D\";\n}\n\n%icon-font-chess-camera-off:before {\n\tcontent: \"\\1F6E\";\n}\n\n%icon-font-chess-cloud:before {\n\tcontent: \"\\1F6B\";\n}\n\n%icon-font-chess-disconnected:before {\n\tcontent: \"\\1F8D\";\n}\n\n%icon-font-chess-library:before {\n\tcontent: \"\\1F45\";\n}\n\n%icon-font-chess-library-add:before {\n\tcontent: \"\\1F57\";\n}\n\n%icon-font-chess-atomic:before {\n\tcontent: \"\\1F7B\";\n}\n\n%icon-font-chess-bookmark:before {\n\tcontent: \"\\1F66\";\n}\n\n%icon-font-chess-bookmark-add:before {\n\tcontent: \"\\1FA0\";\n}\n\n%icon-font-chess-excellent:before {\n\tcontent: \"\\1F67\";\n}\n\n%icon-font-chess-fork:before {\n\tcontent: \"\\1F8E\";\n}\n\n%icon-font-chess-handshake:before {\n\tcontent: \"\\1F88\";\n}\n\n%icon-font-chess-target:before {\n\tcontent: \"\\1F8F\";\n}\n\n%icon-font-chess-target-off:before {\n\tcontent: \"\\1F87\";\n}\n\n%icon-font-chess-official:before {\n\tcontent: \"\\1F89\";\n}\n\n%icon-font-chess-verified:before {\n\tcontent: \"\\1F9D\";\n}\n\n%icon-font-chess-location:before {\n\tcontent: \"\\1F86\";\n}\n\n%icon-font-chess-practice:before {\n\tcontent: \"\\1F95\";\n}\n\n%icon-font-chess-quality:before {\n\tcontent: \"\\1F9A\";\n}\n\n%icon-font-chess-castling:before {\n\tcontent: \"\\1F99\";\n}\n\n%icon-font-chess-pieces-all:before {\n\tcontent: \"\\1F98\";\n}\n\n%icon-font-chess-phases:before {\n\tcontent: \"\\1F97\";\n}\n\n%icon-font-chess-savedisk:before {\n\tcontent: \"\\1F9E\";\n}\n\n%icon-font-chess-qrcode:before {\n\tcontent: \"\\1FA1\";\n}\n\n%icon-font-chess-magout:before {\n\tcontent: \"\\1FA2\";\n}\n\n%icon-font-chess-randomcolor:before {\n\tcontent: \"\\1FA3\";\n}\n\n%icon-font-chess-duck:before {\n\tcontent: \"\\1F9F\";\n}\n\n%icon-font-chess-undo:before {\n\tcontent: \"\\004C\";\n}\n\n%icon-font-chess-link:before {\n\tcontent: \"\\0041\";\n}\n\n%icon-font-chess-challenge-link:before {\n\tcontent: \"\\1F61\";\n}\n\n%icon-font-chess-x:before {\n\tcontent: \"\\0042\";\n}\n\n%icon-font-chess-reply:before {\n\tcontent: \"\\0043\";\n}\n\n%icon-font-chess-checkmark:before {\n\tcontent: \"\\0047\";\n}\n\n%icon-font-chess-correct:before {\n\tcontent: \"\\1F30\";\n}\n\n%icon-font-chess-incorrect:before {\n\tcontent: \"\\1F3F\";\n}\n\n%icon-font-chess-redo:before {\n\tcontent: \"\\1F22\";\n}\n\n%icon-font-chess-plus:before {\n\tcontent: \"\\0056\";\n}\n\n%icon-font-chess-eval:before {\n\tcontent: \"\\1F33\";\n}\n\n%icon-font-chess-copy:before {\n\tcontent: \"\\1F24\";\n}\n\n%icon-font-chess-list:before {\n\tcontent: \"\\0072\";\n}\n\n%icon-font-chess-embed:before {\n\tcontent: \"\\221E\";\n}\n\n%icon-font-chess-darklight:before {\n\tcontent: \"\\1F3D\";\n}\n\n%icon-font-chess-image-plus:before {\n\tcontent: \"\\03B6\";\n}\n\n%icon-font-chess-follow:before {\n\tcontent: \"\\011E\";\n}\n\n%icon-font-chess-unfollow:before {\n\tcontent: \"\\0120\";\n}\n\n%icon-font-chess-quote:before {\n\tcontent: \"\\00D6\";\n}\n\n%icon-font-chess-web-view:before {\n\tcontent: \"\\0126\";\n}\n\n%icon-font-chess-circle:before {\n\tcontent: \"\\0054\";\n}\n\n%icon-font-chess-circle-dashboard:before {\n\tcontent: \"\\004E\";\n}\n\n%icon-font-chess-circle-x:before {\n\tcontent: \"\\0051\";\n}\n\n%icon-font-chess-circle-3-dots:before {\n\tcontent: \"\\038F\";\n}\n\n%icon-font-chess-circle-gearwheel:before {\n\tcontent: \"\\00B7\";\n}\n\n%icon-font-chess-circle-clock:before {\n\tcontent: \"\\0027\";\n}\n\n%icon-font-chess-circle-clock-alt:before {\n\tcontent: \"\\00B0\";\n}\n\n%icon-font-chess-circle-question:before {\n\tcontent: \"\\0028\";\n}\n\n%icon-font-chess-circle-info:before {\n\tcontent: \"\\0029\";\n}\n\n%icon-font-chess-circle-arrow:before {\n\tcontent: \"\\00F7\";\n}\n\n%icon-font-chess-circle-block:before {\n\tcontent: \"\\222B\";\n}\n\n%icon-font-chess-circle-stop:before {\n\tcontent: \"\\0026\";\n}\n\n%icon-font-chess-circle-danger:before {\n\tcontent: \"\\2020\";\n}\n\n%icon-font-chess-circle-checkmark:before {\n\tcontent: \"\\03C7\";\n}\n\n%icon-font-chess-circle-compass:before {\n\tcontent: \"\\0121\";\n}\n\n%icon-font-chess-donate:before {\n\tcontent: \"\\1F4B\";\n}\n\n%icon-font-chess-more:before {\n\tcontent: \"\\1F2B\";\n}\n\n%icon-font-chess-best:before {\n\tcontent: \"\\1F94\";\n}\n\n%icon-font-chess-time-warning:before {\n\tcontent: \"\\1F8B\";\n}\n\n%icon-font-chess-piechart:before {\n\tcontent: \"\\1FB1\";\n}\n\n%icon-font-chess-square:before {\n\tcontent: \"\\1F04\";\n}\n\n%icon-font-chess-square-reply:before {\n\tcontent: \"\\0058\";\n}\n\n%icon-font-chess-square-pencil:before {\n\tcontent: \"\\005A\";\n}\n\n%icon-font-chess-square-brush:before {\n\tcontent: \"\\006C\";\n}\n\n%icon-font-chess-square-in:before {\n\tcontent: \"\\00A1\";\n}\n\n%icon-font-chess-square-out:before {\n\tcontent: \"\\00BF\";\n}\n\n%icon-font-chess-square-bottom-in:before {\n\tcontent: \"\\039E\";\n}\n\n%icon-font-chess-square-x:before {\n\tcontent: \"\\00FC\";\n}\n\n%icon-font-chess-square-plus:before {\n\tcontent: \"\\1F01\";\n}\n\n%icon-font-chess-square-equal:before {\n\tcontent: \"\\1F03\";\n}\n\n%icon-font-chess-square-checkmark:before {\n\tcontent: \"\\03BF\";\n}\n\n%icon-font-chess-square-four:before {\n\tcontent: \"\\03F8\";\n}\n\n%icon-font-chess-arc-sharp:before {\n\tcontent: \"\\1F50\";\n}\n\n%icon-font-chess-arc-rough:before {\n\tcontent: \"\\1F51\";\n}\n\n%icon-font-chess-arc-throwaway:before {\n\tcontent: \"\\1F52\";\n}\n\n%icon-font-chess-arc-balanced:before {\n\tcontent: \"\\1F53\";\n}\n\n%icon-font-chess-arc-wild:before {\n\tcontent: \"\\1F54\";\n}\n\n%icon-font-chess-arc-sudden:before {\n\tcontent: \"\\1F55\";\n}\n\n%icon-font-chess-arc-smooth:before {\n\tcontent: \"\\1F56\";\n}\n\n%icon-font-chess-wld:before {\n\tcontent: \"\\1F63\";\n}\n\n%icon-font-chess-square-minus:before {\n\tcontent: \"\\1F02\";\n}\n\n%icon-font-chess-thumb-lrg:before {\n\tcontent: \"\\1F80\";\n}\n\n%icon-font-chess-thumb-med:before {\n\tcontent: \"\\1F81\";\n}\n\n%icon-font-chess-thumb-sml:before {\n\tcontent: \"\\1F82\";\n}\n\n%icon-font-chess-thumb-alt:before {\n\tcontent: \"\\1F83\";\n}\n\n%icon-font-chess-thumb-row:before {\n\tcontent: \"\\1F84\";\n}\n\n%icon-font-chess-thumb-left:before {\n\tcontent: \"\\1F85\";\n}\n\n%icon-font-chess-caret-up:before {\n\tcontent: \"\\007C\";\n}\n\n%icon-font-chess-caret-down:before {\n\tcontent: \"\\003F\";\n}\n\n%icon-font-chess-caret-left:before {\n\tcontent: \"\\002F\";\n}\n\n%icon-font-chess-caret-right:before {\n\tcontent: \"\\005C\";\n}\n\n%icon-font-chess-chevron-up:before {\n\tcontent: \"\\003E\";\n}\n\n%icon-font-chess-chevron-bottom:before {\n\tcontent: \"\\003C\";\n}\n\n%icon-font-chess-chevron-left:before {\n\tcontent: \"\\002C\";\n}\n\n%icon-font-chess-chevron-right:before {\n\tcontent: \"\\2026\";\n}\n\n%icon-font-chess-double-chevron-left:before {\n\tcontent: \"\\0021\";\n}\n\n%icon-font-chess-double-chevron-right:before {\n\tcontent: \"\\03B1\";\n}\n\n%icon-font-chess-chevron-previous:before {\n\tcontent: \"\\0023\";\n}\n\n%icon-font-chess-chevron-next:before {\n\tcontent: \"\\0040\";\n}\n\n%icon-font-chess-chevron-down:before {\n\tcontent: \"\\1F18\";\n}\n\n%icon-font-chess-arrow-return:before {\n\tcontent: \"\\005F\";\n}\n\n%icon-font-chess-arrow-up:before {\n\tcontent: \"\\007D\";\n}\n\n%icon-font-chess-arrow-down:before {\n\tcontent: \"\\007B\";\n}\n\n%icon-font-chess-arrow-left:before {\n\tcontent: \"\\005B\";\n}\n\n%icon-font-chess-arrow-right:before {\n\tcontent: \"\\005D\";\n}\n\n%icon-font-chess-round-arrow-return:before {\n\tcontent: \"\\03BC\";\n}\n\n%icon-font-chess-bold-arrow-right:before {\n\tcontent: \"\\0386\";\n}\n\n%icon-font-chess-arrow-cross:before {\n\tcontent: \"\\0110\";\n}\n\n%icon-font-chess-pulse:before {\n\tcontent: \"\\1F60\";\n}\n\n%icon-font-chess-user:before {\n\tcontent: \"\\0062\";\n}\n\n%icon-font-chess-users:before {\n\tcontent: \"\\006D\";\n}\n\n%icon-font-chess-users-alt:before {\n\tcontent: \"\\006E\";\n}\n\n%icon-font-chess-user-info:before {\n\tcontent: \"\\0076\";\n}\n\n%icon-font-chess-user-question:before {\n\tcontent: \"\\002D\";\n}\n\n%icon-font-chess-user-search:before {\n\tcontent: \"\\0024\";\n}\n\n%icon-font-chess-user-search-alt:before {\n\tcontent: \"\\014a\";\n}\n\n%icon-font-chess-user-feed:before {\n\tcontent: \"\\0025\";\n}\n\n%icon-font-chess-user-block:before {\n\tcontent: \"\\00A6\";\n}\n\n%icon-font-chess-user-plus:before {\n\tcontent: \"\\00B6\";\n}\n\n%icon-font-chess-users-plus:before {\n\tcontent: \"\\00FF\";\n}\n\n%icon-font-chess-user-x:before {\n\tcontent: \"\\00A7\";\n}\n\n%icon-font-chess-user-chain:before {\n\tcontent: \"\\0159\";\n}\n\n%icon-font-chess-user-broken-chain:before {\n\tcontent: \"\\0158\";\n}\n\n%icon-font-chess-user-shield:before {\n\tcontent: \"\\03DA\";\n}\n\n%icon-font-chess-user-shield-plus:before {\n\tcontent: \"\\0373\";\n}\n\n%icon-font-chess-profile-alt:before {\n\tcontent: \"\\1F9C\";\n}\n\n%icon-font-chess-chess-board:before {\n\tcontent: \"\\0069\";\n}\n\n.dark-mode %icon-font-chess-chess-board:not(.light-mode):before,\n%icon-font-chess-chess-board.dark-mode:before {\n\tcontent: \"\\2019\";\n}\n\n%icon-font-chess-chess-board-search:before {\n\tcontent: \"\\0394\";\n}\n\n%icon-font-chess-chess-board-search-alt:before {\n\tcontent: \"\\03A9\";\n}\n\n%icon-font-chess-question:before {\n\tcontent: \"\\00A9\";\n}\n\n%icon-font-chess-chess-board-plus:before {\n\tcontent: \"\\02C6\";\n}\n\n%icon-font-chess-lessons:before {\n\tcontent: \"\\1F20\";\n}\n\n%icon-font-chess-chess-board-circle:before {\n\tcontent: \"\\00AB\";\n}\n\n%icon-font-chess-chess-board-gear:before {\n\tcontent: \"\\03F7\";\n}\n\n%icon-font-chess-chess-crown:before {\n\tcontent: \"\\03FB\";\n}\n\n%icon-font-chess-chess-crown-alt:before {\n\tcontent: \"\\1F26\";\n}\n\n%icon-font-chess-crown-learning:before {\n\tcontent: \"\\1F32\";\n}\n\n%icon-font-chess-chess-pawn:before {\n\tcontent: \"\\1F19\";\n}\n\n%icon-font-chess-chess-pawn-left-half-rook:before {\n\tcontent: \"\\0112\";\n}\n\n%icon-font-chess-chess-pawn-right-half-rook:before {\n\tcontent: \"\\0113\";\n}\n\n%icon-font-chess-chess-pawn-rook:before {\n\tcontent: \"\\0073\";\n}\n\n%icon-font-chess-chess-pawn-square:before {\n\tcontent: \"\\03B7\";\n}\n\n%icon-font-chess-chess-move:before {\n\tcontent: \"\\1F18\";\n}\n\n%icon-font-chess-chess-move-alt:before {\n\tcontent: \"\\006A\";\n}\n\n%icon-font-chess-chess-board-folder:before {\n\tcontent: \"\\0398\";\n}\n\n%icon-font-chess-chess-board-arrow-down:before,\n%icon-font-chess-chess-board-arrow-left:before,\n%icon-font-chess-chess-board-arrow-right:before {\n\tcontent: \"\\03CC\";\n}\n\n%icon-font-chess-chess-salad:before {\n\tcontent: \"\\1F0A\";\n}\n\n%icon-font-chess-play-new:before {\n\tcontent: \"\\1F2C\";\n}\n\n%icon-font-chess-play-alt:before {\n\tcontent: \"\\1F2D\";\n}\n\n%icon-font-chess-lesson:before {\n\tcontent: \"\\1F14\";\n}\n\n%icon-font-chess-no-castling:before {\n\tcontent: \"\\1F78\";\n}\n\n%icon-font-chess-fog-of-war:before {\n\tcontent: \"\\1F79\";\n}\n\n%icon-font-chess-sideways-pawns:before {\n\tcontent: \"\\1F77\";\n}\n\n%icon-font-chess-capture-anything:before {\n\tcontent: \"\\1F76\";\n}\n\n%icon-font-chess-board-arrow:before {\n\tcontent: \"\\1F62\";\n}\n\n%icon-font-chess-checkbox:before {\n\tcontent: \"\\03A8\";\n}\n\n%icon-font-chess-checkbox-plus:before {\n\tcontent: \"\\03A6\";\n}\n\n%icon-font-chess-printer:before {\n\tcontent: \"\\00E5\";\n}\n\n%icon-font-chess-play:before {\n\tcontent: \"\\004A\";\n}\n\n%icon-font-chess-pause:before {\n\tcontent: \"\\004B\";\n}\n\n%icon-font-chess-sound-off:before {\n\tcontent: \"\\0050\";\n}\n\n%icon-font-chess-sound-on:before {\n\tcontent: \"\\0055\";\n}\n\n%icon-font-chess-repeat:before {\n\tcontent: \"\\0066\";\n}\n\n%icon-font-chess-shuffle:before {\n\tcontent: \"\\0049\";\n}\n\n%icon-font-chess-resize:before {\n\tcontent: \"\\03C0\";\n}\n\n%icon-font-chess-rss:before {\n\tcontent: \"\\1F31\";\n}\n\n%icon-font-chess-favorites:before {\n\tcontent: \"\\03AE\";\n}\n\n%icon-font-chess-facebook:before {\n\tcontent: \"\\0053\";\n}\n\n%icon-font-chess-twitter:before {\n\tcontent: \"\\0046\";\n}\n\n%icon-font-chess-linkedin:before {\n\tcontent: \"\\00C5\";\n}\n\n%icon-font-chess-tumblr:before {\n\tcontent: \"\\00EB\";\n}\n\n%icon-font-chess-mix:before {\n\tcontent: \"\\00DF\";\n}\n\n%icon-font-chess-reddit:before {\n\tcontent: \"\\00B1\";\n}\n\n%icon-font-chess-google:before {\n\tcontent: \"\\1F08\";\n}\n\n%icon-font-chess-instagram:before {\n\tcontent: \"\\1F00\";\n}\n\n%icon-font-chess-wikipedia:before {\n\tcontent: \"\\1F38\";\n}\n\n%icon-font-chess-youtube:before {\n\tcontent: \"\\0060\";\n}\n\n%icon-font-chess-share:before {\n\tcontent: \"\\00A5\";\n}\n\n%icon-font-chess-twitch:before {\n\tcontent: \"\\0393\";\n}\n\n%icon-font-chess-discord:before {\n\tcontent: \"\\1F48\";\n}\n\n%icon-font-chess-fide:before {\n\tcontent: \"\\1F41\";\n}\n\n%icon-font-chess-android:before {\n\tcontent: \"\\00FE\";\n}\n\n%icon-font-chess-apple:before {\n\tcontent: \"\\25CA\";\n}\n\n%icon-font-chess-win-phone:before {\n\tcontent: \"\\03A0\";\n}\n\n%icon-font-chess-thumbs-down:before {\n\tcontent: \"\\2265\";\n}\n\n%icon-font-chess-thumbs-up:before {\n\tcontent: \"\\2264\";\n}\n\n%icon-font-chess-card:before {\n\tcontent: \"\\03DC\";\n}\n\n%icon-font-chess-paypal:before {\n\tcontent: \"\\0377\";\n}\n\n%icon-font-chess-heart:before {\n\tcontent: \"\\1F2F\";\n}\n\n%icon-font-chess-vk:before {\n\tcontent: \"\\1F72\";\n}\n\n%icon-font-chess-tiktok:before {\n\tcontent: \"\\1FB0\";\n}\n\n%icon-font-chess-membership-diamond:before {\n\tcontent: \"\\0370\";\n}\n\n%icon-font-chess-membership-platinum:before {\n\tcontent: \"\\0376\";\n}\n\n%icon-font-chess-membership-mod:before,\n%icon-font-chess-membership-staff:before {\n\tcontent: \"\\0372\";\n}\n\n%icon-font-chess-membership-gold:before {\n\tcontent: \"\\03AE\";\n}\n\n%icon-font-chess-circle-hollow:before {\n\tcontent: \"\\03BD\";\n}\n\n%icon-font-chess-binoculars-crossed:before {\n\tcontent: \"\\00DE\";\n}\n\n%icon-font-chess-border-resize:before {\n\tcontent: \"\\03AC\";\n}\n\n%icon-font-chess-maximize:before {\n\tcontent: \"\\03DD\";\n}\n\n%icon-font-chess-minimize:before {\n\tcontent: \"\\03D8\";\n}\n\n%icon-font-chess-live:before {\n\tcontent: \"\\1F1B\";\n}\n\n%icon-font-chess-live960:before {\n\tcontent: \"\\00D1\";\n}\n\n%icon-font-chess-livematch:before {\n\tcontent: \"\\1F65\";\n}\n\n%icon-font-chess-live-bullet:before {\n\tcontent: \"\\1F1D\";\n}\n\n%icon-font-chess-live-standard:before {\n\tcontent: \"\\1F1C\";\n}\n\n%icon-font-chess-signal:before {\n\tcontent: \"\\03AF\";\n}\n\n%icon-font-chess-proleague:before {\n\tcontent: \"\\014B\";\n}\n\n%icon-font-chess-streamer:before {\n\tcontent: \"\\1F23\";\n}\n\n%icon-font-chess-bishop-white:before {\n\tcontent: \"\\00C4\";\n}\n\n%icon-font-chess-bishop-black:before {\n\tcontent: \"\\0102\";\n}\n\n%icon-font-chess-knight-white:before {\n\tcontent: \"\\0116\";\n}\n\n%icon-font-chess-knight-black:before {\n\tcontent: \"\\00C7\";\n}\n\n%icon-font-chess-rook-white:before {\n\tcontent: \"\\013B\";\n}\n\n%icon-font-chess-rook-black:before {\n\tcontent: \"\\013D\";\n}\n\n%icon-font-chess-king-white:before {\n\tcontent: \"\\0104\";\n}\n\n%icon-font-chess-king-black:before {\n\tcontent: \"\\0100\";\n}\n\n%icon-font-chess-queen-white:before {\n\tcontent: \"\\0136\";\n}\n\n%icon-font-chess-queen-black:before {\n\tcontent: \"\\012E\";\n}\n\n%icon-font-chess-pawn-white:before {\n\tcontent: \"\\0122\";\n}\n\n%icon-font-chess-pawn-black:before {\n\tcontent: \"\\0118\";\n}\n\n%icon-font-chess-shared-analysis:before {\n\tcontent: \"\\1F68\";\n}\n\n%icon-font-chess-boardexpand:before {\n\tcontent: \"\\1FA4\";\n}\n\n.dark-mode %icon-font-chess-bishop-white:before {\n\tcontent: \"\\0102\";\n}\n\n.dark-mode %icon-font-chess-bishop-black:before {\n\tcontent: \"\\00C4\";\n}\n\n.dark-mode %icon-font-chess-knight-white:before {\n\tcontent: \"\\00C7\";\n}\n\n.dark-mode %icon-font-chess-knight-black:before {\n\tcontent: \"\\0116\";\n}\n\n.dark-mode %icon-font-chess-rook-white:before {\n\tcontent: \"\\013D\";\n}\n\n.dark-mode %icon-font-chess-rook-black:before {\n\tcontent: \"\\013B\";\n}\n\n.dark-mode %icon-font-chess-king-white:before {\n\tcontent: \"\\0100\";\n}\n\n.dark-mode %icon-font-chess-king-black:before {\n\tcontent: \"\\0104\";\n}\n\n.dark-mode %icon-font-chess-queen-white:before {\n\tcontent: \"\\012E\";\n}\n\n.dark-mode %icon-font-chess-queen-black:before {\n\tcontent: \"\\0136\";\n}\n\n.dark-mode %icon-font-chess-pawn-white:before {\n\tcontent: \"\\0118\";\n}\n\n.dark-mode %icon-font-chess-pawn-black:before {\n\tcontent: \"\\0122\";\n}\n\n%icon-font-chess-bishop-stroke:before {\n\tcontent: \"\\00C4\";\n}\n\n%icon-font-chess-bishop-fill:before {\n\tcontent: \"\\0102\";\n}\n\n%icon-font-chess-knight-stroke:before {\n\tcontent: \"\\0116\";\n}\n\n%icon-font-chess-knight-fill:before {\n\tcontent: \"\\00C7\";\n}\n\n%icon-font-chess-rook-stroke:before {\n\tcontent: \"\\013B\";\n}\n\n%icon-font-chess-rook-fill:before {\n\tcontent: \"\\013D\";\n}\n\n%icon-font-chess-king-stroke:before {\n\tcontent: \"\\0104\";\n}\n\n%icon-font-chess-king-fill:before {\n\tcontent: \"\\0100\";\n}\n\n%icon-font-chess-queen-stroke:before {\n\tcontent: \"\\0136\";\n}\n\n%icon-font-chess-queen-fill:before {\n\tcontent: \"\\012E\";\n}\n\n%icon-font-chess-pawn-stroke:before {\n\tcontent: \"\\0122\";\n}\n\n%icon-font-chess-pawn-fill:before {\n\tcontent: \"\\0118\";\n}\n\n%icon-font-chess-zero:before {\n\tcontent: \"\\0030\";\n}\n\n%icon-font-chess-one:before {\n\tcontent: \"\\0031\";\n}\n\n%icon-font-chess-two:before {\n\tcontent: \"\\0032\";\n}\n\n%icon-font-chess-three:before {\n\tcontent: \"\\0033\";\n}\n\n%icon-font-chess-four:before {\n\tcontent: \"\\0034\";\n}\n\n%icon-font-chess-five:before {\n\tcontent: \"\\0035\";\n}\n\n%icon-font-chess-six:before {\n\tcontent: \"\\0036\";\n}\n\n%icon-font-chess-seven:before {\n\tcontent: \"\\0037\";\n}\n\n%icon-font-chess-eight:before {\n\tcontent: \"\\0038\";\n}\n\n%icon-font-chess-nine:before {\n\tcontent: \"\\0039\";\n}\n\n%icon-font-chess-colon:before {\n\tcontent: \"\\003A\";\n}\n\n%icon-font-chess-period:before {\n\tcontent: \"\\002E\";\n}\n\n%icon-font-chess-matetag:before {\n\tcontent: \"\\1F92\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-display-slider:before {\n\tcontent: \"\\203A\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-filter:before {\n\tcontent: \"\\2039\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-nav-expanded:before {\n\tcontent: \"\\03E0\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-nav-collapsed:before {\n\tcontent: \"\\03E1\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-arrow-up:before {\n\tcontent: \"\\007B\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-arrow-down:before {\n\tcontent: \"\\007D\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-chevron-up:before {\n\tcontent: \"\\003C\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-chevron-bottom:before {\n\tcontent: \"\\003E\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-thumbs-down:before {\n\tcontent: \"\\2264\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-thumbs-up:before {\n\tcontent: \"\\2265\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-chevron-left:before {\n\tcontent: \"\\2026\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-chevron-right:before {\n\tcontent: \"\\002C\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-circle-question:before {\n\tcontent: \"\\0029\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-circle-info:before {\n\tcontent: \"\\0028\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-caret-left:before {\n\tcontent: \"\\005C\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-caret-right:before {\n\tcontent: \"\\002F\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-double-chevron-left:before {\n\tcontent: \"\\03B1\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-double-chevron-right:before {\n\tcontent: \"\\0021\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-chess-board-circle:before {\n\tcontent: \"\\00BB\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-pushpin:before {\n\tcontent: \"\\00AB\";\n}\n\n%icon-font-chess-daily:before {\n\tcontent: \"\\1F1A\";\n}\n\n%icon-font-chess-circle-timer:before,\n%icon-font-chess-rapid:before {\n\tcontent: \"\\1F1B\";\n}\n\n%icon-font-chess-chess-board-puzzle-reversed:before {\n\tcontent: \"\\03DE\";\n}\n\n%icon-font-chess-standard:before {\n\tcontent: \"\\0069\";\n}\n\n%icon-font-chess-blitz:before,\n%icon-font-chess-lightning:before {\n\tcontent: \"\\1F1C\";\n}\n\n%icon-font-chess-crossed-swords:before {\n\tcontent: \"\\03C4\";\n}\n","$lightContentColor: hsla(0, 0%, 100%, 0.65);\n$boardComponentWhiteColor: #e2e2e2;\n$boardComponentDarkColor: #322e2b;\n$activeColor: #7fa650;\n\n$boardComponentFont: \"Segoe UI\";\n","@mixin scrollbar($width, $thumbColor: #555, $trackColor: #f5f5f5) {\n\tscrollbar-width: $width;\n\tscrollbar-color: $thumbColor $trackColor;\n\n\t&::-webkit-scrollbar-track,\n\t&::-webkit-scrollbar-thumb {\n\t\tbox-shadow: inset 0 0 ($width + 2px) rgba($color: #000000, $alpha: 0.3);\n\t\t-webkit-box-shadow: inset 0 0 ($width + 2px) rgba($color: #000000, $alpha: 0.3);\n\t\tborder-radius: 7px;\n\t}\n\n\t&::-webkit-scrollbar {\n\t\twidth: $width;\n\t}\n\n\t&::-webkit-scrollbar-thumb {\n\t\tbackground-color: $thumbColor;\n\t}\n\n\t&::-webkit-scrollbar-track {\n\t\tbackground-color: $trackColor;\n\t}\n}\n\n@mixin alternatingBoardColors($firstColor, $secondColor, $deeperElement: null, $property: \"background-color\") {\n\t@if ($deeperElement) {\n\t\t&:nth-child(odd)>*:nth-child(odd) #{$deeperElement},\n\t\t&:nth-child(even)>*:nth-child(even) #{$deeperElement} {\n\t\t\t#{$property}: $firstColor;\n\t\t}\n\n\t\t&:nth-child(odd)>*:nth-child(even) #{$deeperElement},\n\t\t&:nth-child(even)>*:nth-child(odd) #{$deeperElement} {\n\t\t\t#{$property}: $secondColor;\n\t\t}\n\t} @else {\n\t\t&:nth-child(odd)>*:nth-child(odd),\n\t\t&:nth-child(even)>*:nth-child(even) {\n\t\t\t#{$property}: $firstColor;\n\t\t}\n\n\t\t&:nth-child(odd)>*:nth-child(even),\n\t\t&:nth-child(even)>*:nth-child(odd) {\n\t\t\t#{$property}: $secondColor;\n\t\t}\n\t}\n}\n\n@mixin occupyAbsoluteSize {\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\tright: 0;\n\tbottom: 0;\n}\n\n@mixin button {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tpadding: 0.5rem 1.2rem;\n\tbackground: hsla(0, 0%, 100%, 0.08);\n\tcolor: #e2e2e2;\n\tborder-radius: 6%;\n\tborder: none;\n}\n\n@mixin iconSize($size: null, $adaptive: false) {\n\t@if ($size) {\n\t\tfont-size: $size;\n\n\t\t@if (not $adaptive) {\n\t\t\twidth: $size;\n\t\t\theight: $size;\n\t\t\tline-height: 1;\n\t\t}\n\t} @else {\n\t\tfont-size: 2rem;\n\t\twidth: 2rem;\n\t\theight: 2rem;\n\t}\n\n\tfont-family: \"ChessGlyph New\";\n}\n\n@mixin tooltip {\n\tdisplay: block;\n\tmax-width: 25rem;\n\tpadding: 0.5rem;\n\tfont-weight: 500;\n\tfont-size: 1.1rem;\n\tword-break: break-word;\n\toverflow-wrap: break-word;\n}\n"],"sourceRoot":""}]);
// Exports
___CSS_LOADER_EXPORT___.locals = {
	"move-controls-row__delete-pgn-icon": "GameMoveTree-module-move-controls-row__delete-pgn-icon",
	"move-controls-row__download-pgn-icon": "GameMoveTree-module-move-controls-row__download-pgn-icon",
	"move-controls-row__takebacks-icon": "GameMoveTree-module-move-controls-row__takebacks-icon",
	"move-tree-wrap": "GameMoveTree-module-move-tree-wrap",
	"move-tree": "GameMoveTree-module-move-tree",
	"move-controls": "GameMoveTree-module-move-controls",
	"move-controls-row": "GameMoveTree-module-move-controls-row",
	"move-controls-row__takebacks-wrap": "GameMoveTree-module-move-controls-row__takebacks-wrap",
	"move-controls-row__takebacks": "GameMoveTree-module-move-controls-row__takebacks",
	"move-controls-row__icon": "GameMoveTree-module-move-controls-row__icon",
	"move-controls-row__takebacks-text": "GameMoveTree-module-move-controls-row__takebacks-text",
	"move-controls-row__move-information-wrap": "GameMoveTree-module-move-controls-row__move-information-wrap",
	"move-controls-row__move-information": "GameMoveTree-module-move-controls-row__move-information",
	"move-controls-row__pgn-information": "GameMoveTree-module-move-controls-row__pgn-information",
	"move-controls-row__navigation": "GameMoveTree-module-move-controls-row__navigation",
	"move-controls-row__navigation-button": "GameMoveTree-module-move-controls-row__navigation-button",
	"move-controls-row__navigation-button--disabled": "GameMoveTree-module-move-controls-row__navigation-button--disabled",
	"move-tree-move": "GameMoveTree-module-move-tree-move",
	"move-tree-move__move-wrap": "GameMoveTree-module-move-tree-move__move-wrap",
	"move-tree-move__move-wrap--selected": "GameMoveTree-module-move-tree-move__move-wrap--selected",
	"move-tree-move__move-text": "GameMoveTree-module-move-tree-move__move-text",
	"move-tree-move__move-comment": "GameMoveTree-module-move-tree-move__move-comment",
	"move-tree-move__variations": "GameMoveTree-module-move-tree-move__variations"
};
/* harmony default export */ __webpack_exports__["Z"] = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 54002:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60445);
/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(60352);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".EditorSidebar-module-board-settings__variant-rules-button-icon:before{content:\"ή\"}.EditorSidebar-module-board-settings__variant-rules-button--open .EditorSidebar-module-board-settings__variant-rules-button-icon:before,.EditorSidebar-module-variant-rules-modal__button-icon:before{content:\"G\"}.EditorSidebar-module-board-settings-button__icon--box-offset:before{content:\"°\"}.EditorSidebar-module-board-settings-button__icon--no-corners-on:before,.EditorSidebar-module-spare-pieces-selectors__expand-icon:before{content:\"ϝ\"}.EditorSidebar-module-board-settings-button__icon--no-corners-off:before,.EditorSidebar-module-spare-pieces--expanded .EditorSidebar-module-spare-pieces-selectors__expand-icon:before{content:\"Ϙ\"}.EditorSidebar-module-board{position:relative;width:min-content}.EditorSidebar-module-board-row{display:flex;max-width:fit-content;padding-left:0;list-style-type:none}.EditorSidebar-module-board-row:nth-child(odd)>*:nth-child(odd),.EditorSidebar-module-board-row:nth-child(even)>*:nth-child(even){background-color:var(--main-square-primary-color)}.EditorSidebar-module-board-row:nth-child(odd)>*:nth-child(even),.EditorSidebar-module-board-row:nth-child(even)>*:nth-child(odd){background-color:var(--main-square-secondary-color)}.EditorSidebar-module-wrap{scrollbar-width:10px;scrollbar-color:#555 #f5f5f5;position:relative;display:flex;flex-direction:column;width:40rem;height:60vh;margin-left:3rem;padding-right:1rem;overflow-y:scroll}.EditorSidebar-module-wrap::-webkit-scrollbar-track,.EditorSidebar-module-wrap::-webkit-scrollbar-thumb{box-shadow:inset 0 0 12px rgba(0,0,0,.3);-webkit-box-shadow:inset 0 0 12px rgba(0,0,0,.3);border-radius:7px}.EditorSidebar-module-wrap::-webkit-scrollbar{width:10px}.EditorSidebar-module-wrap::-webkit-scrollbar-thumb{background-color:#555}.EditorSidebar-module-wrap::-webkit-scrollbar-track{background-color:#f5f5f5}.EditorSidebar-module-board-settings{display:flex;justify-content:space-between;align-items:center}.EditorSidebar-module-board-settings-button{display:flex;align-items:center;justify-content:center;padding:.5rem 1.2rem;background:rgba(255,255,255,.08);color:#e2e2e2;border-radius:6%;border:none;font-family:\"Source Code Pro\",monospace}.EditorSidebar-module-board-settings-button__icon{font-size:2rem;width:2rem;height:2rem;font-family:\"ChessGlyph New\"}.EditorSidebar-module-board-settings__dimension{display:flex;align-items:center;gap:.35rem;color:#e2e2e2}.EditorSidebar-module-board-settings__dimension-select{position:relative;width:45px;height:3rem;padding:5px;border:none;outline:none;background-color:#322e2b;color:#e2e2e2;font-size:1.4rem;line-height:1.2;appearance:none;background-image:linear-gradient(45deg, transparent 78.8%, #e2e2e2 0),linear-gradient(135deg, #e2e2e2 21.9%, transparent 0);background-size:6.5px;background-repeat:no-repeat;background-position:calc(90% - 6px - .2rem) 1rem,calc(91% - 5px + .3rem) 1rem}.EditorSidebar-module-board-settings__dimension-select-option{color:#e2e2e2}.EditorSidebar-module-board-settings__dimension-select:hover{appearance:none}.EditorSidebar-module-board-settings__variant-rules-button{display:flex;align-items:center;justify-content:center;padding:.5rem 1.2rem;background:rgba(255,255,255,.08);color:#e2e2e2;border-radius:6%;border:none;width:100%;gap:.7rem;margin-top:1.3rem}.EditorSidebar-module-board-settings__variant-rules-button--open{background-color:#7fa650}.EditorSidebar-module-board-settings__variant-rules-button-icon{font-size:3rem;width:3rem;height:3rem;line-height:1;font-family:\"ChessGlyph New\";display:inline-block;align-self:flex-start}.EditorSidebar-module-board-settings__variant-rules-button-text{font-family:\"Segoe UI\";font-size:1.6rem}.EditorSidebar-module-board-settings__variant-rules-button--open .EditorSidebar-module-board-settings__variant-rules-button-text{background-color:#7fa650}.EditorSidebar-module-variant-rules-modal{scrollbar-width:8px;scrollbar-color:#555 #f5f5f5;position:absolute;width:50rem;height:calc(100vh - 4rem);top:2rem;bottom:2rem;left:25%;right:25%;margin:auto;background-color:#e2e2e2;overflow:auto;border-radius:10px;box-shadow:0 0 15rem #262421}.EditorSidebar-module-variant-rules-modal::-webkit-scrollbar-track,.EditorSidebar-module-variant-rules-modal::-webkit-scrollbar-thumb{box-shadow:inset 0 0 10px rgba(0,0,0,.3);-webkit-box-shadow:inset 0 0 10px rgba(0,0,0,.3);border-radius:7px}.EditorSidebar-module-variant-rules-modal::-webkit-scrollbar{width:8px}.EditorSidebar-module-variant-rules-modal::-webkit-scrollbar-thumb{background-color:#555}.EditorSidebar-module-variant-rules-modal::-webkit-scrollbar-track{background-color:#f5f5f5}.EditorSidebar-module-variant-rules-modal-rounded-header{position:relative;z-index:0;display:flex;flex-direction:column;justify-content:center;align-items:center;height:8rem;overflow:hidden;padding:1.8rem 3.7rem;margin-bottom:1rem}.EditorSidebar-module-variant-rules-modal-rounded-header::before{position:absolute;z-index:-1;top:0;content:\"\";width:500px;height:8rem;border-radius:1.5rem 1.5rem 130% 130%;background-color:#7fa650}.EditorSidebar-module-variant-rules-modal-rounded-header__text{margin-top:.1rem;font-weight:800;font-size:2.7rem;text-align:center;text-shadow:0 .1rem 0 rgba(0,0,0,.45);color:#fff}.EditorSidebar-module-variant-rules-modal__button{display:flex;align-items:center;justify-content:center;padding:.5rem;background:#7fa650;color:#e2e2e2;border-radius:2.5px;border:none;width:98%;font-weight:600;gap:.7rem;margin:1rem .5rem}.EditorSidebar-module-variant-rules-modal__button-icon{font-size:3rem;width:3rem;height:3rem;line-height:1;font-family:\"ChessGlyph New\";display:inline-block;align-self:flex-start}.EditorSidebar-module-variant-rules-overlay{position:fixed;inset:0px;background-color:rgba(0,0,0,.2)}.EditorSidebar-module-variant-boolean-rules{position:relative;display:grid;gap:1rem;grid-template-columns:repeat(3, 1fr);border-top:1px solid #ccc;padding:1rem}.EditorSidebar-module-variant-boolean-rules__tooltip{display:block;max-width:25rem;padding:.5rem;font-weight:500;font-size:1.1rem;word-break:break-word;overflow-wrap:break-word}.EditorSidebar-module-variant-boolean-rule{position:relative;display:flex;align-items:center;justify-content:space-between;min-height:3rem;padding:.5rem .5rem .5rem 1rem;border-radius:.3rem;background-color:#f1f1f1;color:#666564;cursor:pointer;user-select:none}.EditorSidebar-module-variant-boolean-rule--active::before{position:absolute;top:-0.3rem;left:-0.3rem;width:calc(100% + .6rem);height:calc(100% + .6rem);border:.3rem solid #7fa650;border-radius:.6rem;content:\"\"}.EditorSidebar-module-variant-boolean-rule--not-allowed{opacity:.33;cursor:not-allowed}.EditorSidebar-module-variant-boolean-rule__name{font-family:\"Segoe UI\"}.EditorSidebar-module-variant-boolean-rule__icon{font-size:2.2rem;width:2.2rem;height:2.2rem;line-height:1;font-family:\"ChessGlyph New\";color:inherit}.EditorSidebar-module-parametrized-variant-rules{display:grid;gap:1.1rem;grid-template-columns:repeat(2, 1fr);padding:2rem}.EditorSidebar-module-parametrized-variant-rule{display:flex;align-items:center;color:#666564;justify-content:space-between}.EditorSidebar-module-parametrized-variant-rule__name{font-family:\"Segoe UI\";font-weight:600}.EditorSidebar-module-parametrized-variant-rule__select{width:8rem;background-image:linear-gradient(45deg, transparent 78.8%, #666564 0),linear-gradient(135deg, #666564 21.9%, transparent 0);background-size:6.5px;background-repeat:no-repeat;background-position:calc(90% - 6px - .2rem) .85rem,calc(91% - 5px + .3rem) .85rem;padding:.4rem;border:none;appearance:none}.EditorSidebar-module-parametrized-variant-rule__input{width:8rem;border:none;padding:.4rem}.EditorSidebar-module-parametrized-variant-rule__input::-webkit-input-placeholder,.EditorSidebar-module-parametrized-variant-rule__input::-moz-placeholder,.EditorSidebar-module-parametrized-variant-rule__input:-moz-placeholder,.EditorSidebar-module-parametrized-variant-rule__input:-ms-input-placeholder{color:rgba(0,0,0,0)}.EditorSidebar-module-spare-pieces{display:grid;gap:.5rem;grid-template-columns:repeat(7, 1fr)}.EditorSidebar-module-spare-pieces>div{width:30px;height:30px}.EditorSidebar-module-spare-pieces--expanded{gap:.15rem;grid-template-columns:repeat(8, 1fr)}.EditorSidebar-module-spare-pieces-wrap{position:relative;display:flex;align-items:center;justify-content:center;flex-direction:column;width:100%;min-height:fit-content;padding:10px;margin:10px -10px;border:2px solid rgba(0,0,0,.2);border-radius:9px;background-color:rgba(39,38,35,.5)}.EditorSidebar-module-spare-pieces-selectors{display:flex;align-items:center;justify-content:space-between;width:100%;padding:0 .7rem}.EditorSidebar-module-spare-pieces-selectors__hint-text{font-family:\"Segoe UI\";color:#fff;font-size:13px;margin-bottom:6px}.EditorSidebar-module-spare-pieces-selectors__expand-icon{font-size:3.2rem;width:3.2rem;height:3.2rem;line-height:1;font-family:\"ChessGlyph New\";color:#8c8a88;cursor:pointer}.EditorSidebar-module-spare-pieces-selectors__colors{display:grid;gap:2px;grid-template-columns:repeat(2, 1fr);grid-template-rows:repeat(3, 1fr);margin-top:5px}.EditorSidebar-module-spare-pieces-selectors__color{display:flex;align-items:center;justify-content:center;padding:.5rem 1.2rem;background:rgba(255,255,255,.08);color:#e2e2e2;border-radius:6%;border:none;font-family:\"Segoe UI\"}.EditorSidebar-module-spare-pieces-selectors__fairy-pieces-button{display:flex;align-items:center;justify-content:center;padding:.5rem 1.2rem;background:rgba(255,255,255,.08);color:#e2e2e2;border-radius:6%;border:none}.EditorSidebar-module-spare-pieces-selectors__fairy-pieces-button{padding:.3rem .7rem}.EditorSidebar-module-spare-pieces-selectors__fairy-pieces-image{opacity:.5}", "",{"version":3,"sources":["webpack://./src/main/client/ts/components/BoardEditorSidebar/EditorSidebar.module.scss","webpack://./src/main/client/scss/vendor/ChessGlyph.scss","webpack://./src/main/client/scss/Mixins.scss","webpack://./src/main/client/scss/Colors.scss"],"names":[],"mappings":"AAAA,uEC0kBA,WACC,CAAA,sMA2ID,WACC,CAAA,qEAmFD,WACC,CAAA,yIAumBD,WACC,CAAA,uLAGD,WACC,CAAA,4BDr5CD,iBACC,CAAA,iBACA,CAAA,gCAGD,YAEC,CAAA,qBACA,CAAA,cACA,CAAA,oBACA,CAAA,kIEwBC,iDF5BqC,CAAA,kIEiCrC,mDFjCuE,CAAA,2BAOzE,oBAC0B,CAAA,4BEdzB,CAAA,iBFeA,CAAA,YACA,CAAA,qBACA,CAAA,WACA,CAAA,WACA,CAAA,gBACA,CAAA,kBACA,CAAA,iBACA,CAAA,wGEpBA,wCAEC,CAAA,gDACA,CAAA,iBACA,CAAA,8CAGD,UFKyB,CAAA,oDEDzB,qBAfqC,CAAA,oDAmBrC,wBAnBwD,CAAA,qCF2BzD,YACC,CAAA,6BACA,CAAA,kBACA,CAAA,4CAEA,YEyBA,CAAA,kBACA,CAAA,sBACA,CAAA,oBACA,CAAA,gCACA,CAAA,aACA,CAAA,gBACA,CAAA,WACA,CAAA,uCF9BC,CAAA,kDAEA,cEyCA,CAAA,UACA,CAAA,WACA,CAAA,4BAGD,CAAA,gDF5BA,YACC,CAAA,kBACA,CAAA,UACA,CAAA,aGxDyB,CAAA,uDH2DzB,iBACC,CAAA,UACA,CAAA,WACA,CAAA,WACA,CAAA,WACA,CAAA,YACA,CAAA,wBGhEuB,CAAA,aADC,CAAA,gBHoExB,CAAA,eACA,CAAA,eACA,CAAA,2HACA,CAAA,qBAEA,CAAA,2BACA,CAAA,6EACA,CAAA,8DAEA,aG7EwB,CAAA,6DHiFxB,eACC,CAAA,2DAKH,YE/BA,CAAA,kBACA,CAAA,sBACA,CAAA,oBACA,CAAA,gCACA,CAAA,aACA,CAAA,gBACA,CAAA,WACA,CAAA,UF0BC,CAAA,SACA,CAAA,iBACA,CAAA,iEAEA,wBG3FY,CAAA,gEH+FZ,cACgC,CAAA,UAAA,CAAA,WAAA,CAAA,aEzB/B,CAAA,4BAQF,CAAA,oBFmBE,CAAA,qBACA,CAAA,gEAOD,sBGxGmB,CAAA,gBH0GlB,CAAA,iIAGD,wBG/GY,CAAA,0CHqHd,mBAC0B,CAAA,4BEvHzB,CAAA,iBFwHA,CAAA,WACA,CAAA,yBACA,CAAA,QACA,CAAA,WACA,CAAA,QACA,CAAA,SACA,CAAA,WACA,CAAA,wBGhI0B,CAAA,aHkI1B,CAAA,kBACA,CAAA,4BACA,CAAA,sIEjIA,wCAEC,CAAA,gDACA,CAAA,iBACA,CAAA,6DAGD,SF8GyB,CAAA,mEE1GzB,qBAfqC,CAAA,mEAmBrC,wBAnBwD,CAAA,yDFuIxD,iBACC,CAAA,SACA,CAAA,YACA,CAAA,qBACA,CAAA,sBACA,CAAA,kBACA,CAAA,WACA,CAAA,eACA,CAAA,qBACA,CAAA,kBACA,CAAA,iEAEA,iBACC,CAAA,UACA,CAAA,KACA,CAAA,UACA,CAAA,WACA,CAAA,WACA,CAAA,qCACA,CAAA,wBGvJW,CAAA,+DH2JZ,gBACC,CAAA,eACA,CAAA,gBACA,CAAA,iBACA,CAAA,qCACA,CAAA,UACA,CAAA,kDAIF,YACC,CAAA,kBACA,CAAA,sBACA,CAAA,aACA,CAAA,kBGzKY,CAAA,aH2KZ,CAAA,mBACA,CAAA,WACA,CAAA,SACA,CAAA,eACA,CAAA,SACA,CAAA,iBACA,CAAA,uDAEA,cACgC,CAAA,UAAA,CAAA,WAAA,CAAA,aE7G/B,CAAA,4BAQF,CAAA,oBFuGE,CAAA,qBACA,CAAA,4CAKH,cACC,CAAA,SACA,CAAA,+BACA,CAAA,4CAGD,iBACC,CAAA,YACA,CAAA,QACA,CAAA,oCACA,CAAA,yBACA,CAAA,YACA,CAAA,qDAEA,aEvHA,CAAA,eACA,CAAA,aACA,CAAA,eACA,CAAA,gBACA,CAAA,qBACA,CAAA,wBACA,CAAA,2CFqID,iBAdC,CAAA,YAgBA,CAAA,kBACA,CAAA,6BACA,CAAA,eACA,CAAA,8BACA,CAAA,mBACA,CAAA,wBACA,CAAA,aACA,CAAA,cACA,CAAA,gBACA,CAAA,2DAvBA,iBACC,CAAA,WACA,CAAA,YACA,CAAA,wBACA,CAAA,yBACA,CAAA,0BACA,CAAA,mBACA,CAAA,UACA,CAAA,wDAiBD,WACC,CAAA,kBACA,CAAA,iDAGD,sBACC,CAAA,iDAGD,gBACgC,CAAA,YAAA,CAAA,aAAA,CAAA,aE9K9B,CAAA,4BAQF,CAAA,aFuKC,CAAA,iDAIF,YACC,CAAA,UACA,CAAA,oCACA,CAAA,YACA,CAAA,gDAGD,YACC,CAAA,kBACA,CAAA,aACA,CAAA,6BACA,CAAA,sDAEA,sBACC,CAAA,eACA,CAAA,wDAGD,UACC,CAAA,2HACA,CAAA,qBAEA,CAAA,2BACA,CAAA,iFACA,CAAA,aACA,CAAA,WACA,CAAA,eACA,CAAA,uDAGD,UACC,CAAA,WACA,CAAA,aACA,CAAA,gTAEA,mBAIC,CAAA,mCAKH,YACC,CAAA,SACA,CAAA,oCACA,CAAA,uCAEA,UACC,CAAA,WACA,CAAA,6CAGD,UACC,CAAA,oCACA,CAAA,wCAGD,iBACC,CAAA,YACA,CAAA,kBACA,CAAA,sBACA,CAAA,qBACA,CAAA,UACA,CAAA,sBACA,CAAA,YACA,CAAA,iBACA,CAAA,+BACA,CAAA,iBACA,CAAA,kCACA,CAAA,6CAGD,YACC,CAAA,kBACA,CAAA,6BACA,CAAA,UACA,CAAA,eACA,CAAA,wDAEA,sBACC,CAAA,UACA,CAAA,cACA,CAAA,iBACA,CAAA,0DAGD,gBACgC,CAAA,YAAA,CAAA,aAAA,CAAA,aE5Q/B,CAAA,4BAQF,CAAA,aFsQE,CAAA,cACA,CAAA,qDAGD,YACC,CAAA,OACA,CAAA,oCACA,CAAA,iCACA,CAAA,cACA,CAAA,oDAGD,YE3SD,CAAA,kBACA,CAAA,sBACA,CAAA,oBACA,CAAA,gCACA,CAAA,aACA,CAAA,gBACA,CAAA,WACA,CAAA,sBFsSE,CAAA,kEAGD,YEhTD,CAAA,kBACA,CAAA,sBACA,CAAA,oBACA,CAAA,gCACA,CAAA,aACA,CAAA,gBACA,CAAA,WACA,CAAA,kEF6SC,mBACC,CAAA,iEAGD,UACC","sourcesContent":["@use \"../../index\";\n\n.board {\n\tposition: relative;\n\twidth: min-content;\n}\n\n.board-row {\n\t@include index.alternatingBoardColors(var(--main-square-primary-color), var(--main-square-secondary-color));\n\tdisplay: flex;\n\tmax-width: fit-content;\n\tpadding-left: 0;\n\tlist-style-type: none;\n}\n\n.wrap {\n\t@include index.scrollbar(10px);\n\tposition: relative;\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 40rem;\n\theight: 60vh;\n\tmargin-left: 3rem;\n\tpadding-right: 1rem;\n\toverflow-y: scroll;\n}\n\n.board-settings {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\n\t&-button {\n\t\t@include index.button;\n\t\tfont-family: 'Source Code Pro', monospace;\n\n\t\t&__icon {\n\t\t\t@include index.iconSize;\n\t\t}\n\n\t\t&__icon--box-offset {\n\t\t\t@extend %icon-font-chess-circle-clock-alt;\n\t\t}\n\n\t\t&__icon--no-corners-on {\n\t\t\t@extend %icon-font-chess-maximize;\n\t\t}\n\n\t\t&__icon--no-corners-off {\n\t\t\t@extend %icon-font-chess-minimize;\n\t\t}\n\t}\n\n\n\t&__dimension {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tgap: 0.35rem;\n\t\tcolor: index.$boardComponentWhiteColor;\n\n\t\t&-select {\n\t\t\tposition: relative;\n\t\t\twidth: 45px;\n\t\t\theight: 3rem;\n\t\t\tpadding: 5px;\n\t\t\tborder: none;\n\t\t\toutline: none;\n\t\t\tbackground-color: index.$boardComponentDarkColor;\n\t\t\tcolor: index.$boardComponentWhiteColor;\n\t\t\tfont-size: 1.4rem;\n\t\t\tline-height: 1.2;\n\t\t\tappearance: none;\n\t\t\tbackground-image: linear-gradient(45deg, transparent 78.8%, index.$boardComponentWhiteColor 0),\n\t\t\t\tlinear-gradient(135deg, index.$boardComponentWhiteColor 21.9%, transparent 0);\n\t\t\tbackground-size: 6.5px;\n\t\t\tbackground-repeat: no-repeat;\n\t\t\tbackground-position: calc(90% - 6px - 0.2rem) 1rem, calc(91% - 5px + 0.3rem) 1rem;\n\n\t\t\t&-option {\n\t\t\t\tcolor: index.$boardComponentWhiteColor;\n\t\t\t}\n\n\t\t\t&:hover {\n\t\t\t\tappearance: none;\n\t\t\t}\n\t\t}\n\t}\n\n\t&__variant-rules-button {\n\t\t@include index.button;\n\t\twidth: 100%;\n\t\tgap: 0.7rem;\n\t\tmargin-top: 1.3rem;\n\n\t\t&--open {\n\t\t\tbackground-color: index.$activeColor;\n\t\t}\n\n\t\t&-icon {\n\t\t\t@include index.iconSize($size: 3rem);\n\t\t\t@extend %icon-font-chess-switches;\n\t\t\tdisplay: inline-block;\n\t\t\talign-self: flex-start;\n\t\t}\n\n\t\t&--open #{&}-icon {\n\t\t\t@extend %icon-font-chess-checkmark;\n\t\t}\n\n\t\t&-text {\n\t\t\tfont-family: index.$boardComponentFont;\n\t\t\tfont-size: 1.6rem;\n\t\t}\n\n\t\t&--open #{&}-text {\n\t\t\tbackground-color: index.$activeColor;\n\t\t}\n\t}\n}\n\n.variant-rules-modal {\n\t@include index.scrollbar(8px);\n\tposition: absolute;\n\twidth: 50rem;\n\theight: calc(100vh - 4rem);\n\ttop: 2rem;\n\tbottom: 2rem;\n\tleft: 25%;\n\tright: 25%;\n\tmargin: auto;\n\tbackground-color: index.$boardComponentWhiteColor;\n\toverflow: auto;\n\tborder-radius: 10px;\n\tbox-shadow: 0 0 15rem #262421;\n\n\t&-rounded-header {\n\t\tposition: relative;\n\t\tz-index: 0;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\theight: 8rem;\n\t\toverflow: hidden;\n\t\tpadding: 1.8rem 3.7rem;\n\t\tmargin-bottom: 1rem;\n\n\t\t&::before {\n\t\t\tposition: absolute;\n\t\t\tz-index: -1;\n\t\t\ttop: 0;\n\t\t\tcontent: \"\";\n\t\t\twidth: 500px;\n\t\t\theight: 8rem;\n\t\t\tborder-radius: 1.5rem 1.5rem 130% 130%;\n\t\t\tbackground-color: index.$activeColor;\n\t\t}\n\n\t\t&__text {\n\t\t\tmargin-top: 0.1rem;\n\t\t\tfont-weight: 800;\n\t\t\tfont-size: 2.7rem;\n\t\t\ttext-align: center;\n\t\t\ttext-shadow: 0 0.1rem 0 rgba(0, 0, 0, 0.45);\n\t\t\tcolor: #fff;\n\t\t}\n\t}\n\n\t&__button {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tpadding: 0.5rem;\n\t\tbackground:index.$activeColor;\n\t\tcolor: #e2e2e2;\n\t\tborder-radius: 2.5px;\n\t\tborder: none;\n\t\twidth: 98%;\n\t\tfont-weight: 600;\n\t\tgap: 0.7rem;\n\t\tmargin: 1rem 0.5rem;\n\n\t\t&-icon {\n\t\t\t@include index.iconSize($size: 3rem);\n\t\t\t@extend %icon-font-chess-checkmark;\n\t\t\tdisplay: inline-block;\n\t\t\talign-self: flex-start;\n\t\t}\n\t}\n}\n\n.variant-rules-overlay {\n\tposition: fixed;\n\tinset: 0px;\n\tbackground-color: rgba(0, 0, 0, 0.2);\n}\n\n.variant-boolean-rules {\n\tposition: relative;\n\tdisplay: grid;\n\tgap: 1rem;\n\tgrid-template-columns: repeat(3, 1fr);\n\tborder-top: 1px solid #ccc;\n\tpadding: 1rem;\n\n\t&__tooltip {\n\t\t@include index.tooltip;\n\t}\n}\n\n@mixin highlightedButton {\n\tposition: relative;\n\n\t&--active::before {\n\t\tposition: absolute;\n\t\ttop: -0.3rem;\n\t\tleft: -0.3rem;\n\t\twidth: calc(100% + 0.6rem);\n\t\theight: calc(100% + 0.6rem);\n\t\tborder: 0.3rem solid index.$activeColor;\n\t\tborder-radius: 0.6rem;\n\t\tcontent: \"\";\n\t}\n}\n\n.variant-boolean-rule {\n\t@include highlightedButton;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n\tmin-height: 3rem;\n\tpadding: 0.5rem 0.5rem 0.5rem 1rem;\n\tborder-radius: 0.3rem;\n\tbackground-color: #f1f1f1;\n\tcolor: #666564;\n\tcursor: pointer;\n\tuser-select: none;\n\n\t&--not-allowed {\n\t\topacity: 0.33;\n\t\tcursor: not-allowed;\n\t}\n\n\t&__name {\n\t\tfont-family: \"Segoe UI\";\n\t}\n\n\t&__icon {\n\t\t@include index.iconSize($size: 2.2rem);\n\t\tcolor: inherit;\n\t}\n}\n\n.parametrized-variant-rules {\n\tdisplay: grid;\n\tgap: 1.1rem;\n\tgrid-template-columns: repeat(2, 1fr);\n\tpadding: 2rem;\n}\n\n.parametrized-variant-rule {\n\tdisplay: flex;\n\talign-items: center;\n\tcolor: #666564;\n\tjustify-content: space-between;\n\n\t&__name {\n\t\tfont-family: \"Segoe UI\";\n\t\tfont-weight: 600;\n\t}\n\n\t&__select {\n\t\twidth: 8rem;\n\t\tbackground-image: linear-gradient(45deg, transparent 78.8%, #666564 0),\n\t\t\tlinear-gradient(135deg, #666564 21.9%, transparent 0);\n\t\tbackground-size: 6.5px;\n\t\tbackground-repeat: no-repeat;\n\t\tbackground-position: calc(90% - 6px - 0.2rem) 0.85rem, calc(91% - 5px + 0.3rem) 0.85rem;\n\t\tpadding: 0.4rem;\n\t\tborder: none;\n\t\tappearance: none;\n\t}\n\n\t&__input {\n\t\twidth: 8rem;\n\t\tborder: none;\n\t\tpadding: 0.4rem;\n\n\t\t&::-webkit-input-placeholder,\n\t\t&::-moz-placeholder,\n\t\t&:-moz-placeholder,\n\t\t&:-ms-input-placeholder {\n\t\t\tcolor: transparent;\n\t\t}\n\t}\n}\n\n.spare-pieces {\n\tdisplay: grid;\n\tgap: 0.5rem;\n\tgrid-template-columns: repeat(7, 1fr);\n\n\t& > div {\n\t\twidth: 30px;\n\t\theight: 30px;\n\t}\n\n\t&--expanded {\n\t\tgap: 0.15rem;\n\t\tgrid-template-columns: repeat(8, 1fr);\n\t}\n\n\t&-wrap {\n\t\tposition: relative;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tflex-direction: column;\n\t\twidth: 100%;\n\t\tmin-height: fit-content;\n\t\tpadding: 10px;\n\t\tmargin: 10px -10px;\n\t\tborder: 2px solid rgba(0, 0, 0, 0.2);\n\t\tborder-radius: 9px;\n\t\tbackground-color: rgba(39, 38, 35, 0.5);\n\t}\n\n\t&-selectors {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: space-between;\n\t\twidth: 100%;\n\t\tpadding: 0 0.7rem;\n\n\t\t&__hint-text {\n\t\t\tfont-family: \"Segoe UI\";\n\t\t\tcolor: #fff;\n\t\t\tfont-size: 13px;\n\t\t\tmargin-bottom: 6px;\n\t\t}\n\n\t\t&__expand-icon {\n\t\t\t@include index.iconSize($size: 3.2rem);\n\t\t\t@extend %icon-font-chess-maximize;\n\t\t\tcolor: #8c8a88;\n\t\t\tcursor: pointer;\n\t\t}\n\n\t\t&__colors {\n\t\t\tdisplay: grid;\n\t\t\tgap: 2px;\n\t\t\tgrid-template-columns: repeat(2, 1fr);\n\t\t\tgrid-template-rows: repeat(3, 1fr);\n\t\t\tmargin-top: 5px;\n\t\t}\n\n\t\t&__color {\n\t\t\t@include index.button;\n\t\t\tfont-family: \"Segoe UI\";\n\t\t}\n\n\t\t&__fairy-pieces-button {\n\t\t\t@include index.button;\n\t\t}\n\n\t\t&__fairy-pieces-button {\n\t\t\tpadding: 0.3rem 0.7rem;\n\t\t}\n\n\t\t&__fairy-pieces-image {\n\t\t\topacity: 0.5;\n\t\t}\n\t}\n\n\t&--expanded #{&}-selectors__expand-icon {\n\t\t@extend %icon-font-chess-minimize;\n\t}\n}\n","%icon-font-chess-chess:before {\n\tcontent: \"\\0069\";\n}\n\n%icon-font-chess-chess960:before {\n\tcontent: \"\\1F28\";\n}\n\n%icon-font-chess-threecheck:before {\n\tcontent: \"\\00CB\";\n}\n\n%icon-font-chess-kingofthehill:before {\n\tcontent: \"\\012A\";\n}\n\n%icon-font-chess-losers:before {\n\tcontent: \"\\012B\";\n}\n\n%icon-font-chess-crazyhouse:before {\n\tcontent: \"\\010E\";\n}\n\n%icon-font-chess-bughouse:before {\n\tcontent: \"\\011A\";\n}\n\n%icon-font-chess-solo-chess:before {\n\tcontent: \"\\1F06\";\n}\n\n%icon-font-chess-liveChess960:before {\n\tcontent: \"\\00D1\";\n}\n\n%icon-font-chess-live-tournament:before,\n%icon-font-chess-tournament:before {\n\tcontent: \"\\004F\";\n}\n\n%icon-font-chess-live-teammatch:before,\n%icon-font-chess-teammatch:before {\n\tcontent: \"\\03C4\";\n}\n\n%icon-font-chess-automate:before {\n\tcontent: \"\\1F7A\";\n}\n\n%icon-font-chess-vs-bot:before {\n\tcontent: \"\\1F70\";\n}\n\n%icon-font-chess-four-ffa:before {\n\tcontent: \"\\1F69\";\n}\n\n%icon-font-chess-variants:before {\n\tcontent: \"\\1F6A\";\n}\n\n%icon-font-chess-horde:before {\n\tcontent: \"\\1F7C\";\n}\n\n%icon-font-chess-chaturanga:before {\n\tcontent: \"\\1F7D\";\n}\n\n%icon-font-chess-classical:before {\n\tcontent: \"\\1F8A\";\n}\n\n%icon-font-chess-classroom:before {\n\tcontent: \"\\1F91\";\n}\n\n%icon-font-chess-endgames:before {\n\tcontent: \"\\1F96\";\n}\n\n%icon-font-chess-doubles-unpartner:before {\n\tcontent: \"\\1FA6\";\n}\n\n%icon-font-chess-nav-horizontal:before {\n\tcontent: \"\\0052\";\n}\n\n%icon-font-chess-nav-vertical:before {\n\tcontent: \"\\00E7\";\n}\n\n%icon-font-chess-nav-expanded:before {\n\tcontent: \"\\03E1\";\n}\n\n%icon-font-chess-nav-collapsed:before {\n\tcontent: \"\\03E0\";\n}\n\n%icon-font-chess-collapse-down:before {\n\tcontent: \"\\1F29\";\n}\n\n%icon-font-chess-nav-pawn:before {\n\tcontent: \"\\1F2A\";\n}\n\n%icon-font-chess-bug:before {\n\tcontent: \"\\00F5\";\n}\n\n%icon-font-chess-hourglass:before {\n\tcontent: \"\\03FA\";\n}\n\n%icon-font-chess-camera:before {\n\tcontent: \"\\0048\";\n}\n\n%icon-font-chess-camera-plus:before {\n\tcontent: \"\\03DF\";\n}\n\n%icon-font-chess-globe:before {\n\tcontent: \"\\004D\";\n}\n\n%icon-font-chess-order:before {\n\tcontent: \"\\004F\";\n}\n\n%icon-font-chess-flag:before {\n\tcontent: \"\\0059\";\n}\n\n%icon-font-chess-calendar:before {\n\tcontent: \"\\0061\";\n}\n\n%icon-font-chess-three-day:before {\n\tcontent: \"\\1F90\";\n}\n\n%icon-font-chess-daily-game:before {\n\tcontent: \"\\1F1A\";\n}\n\n%icon-font-chess-chat:before {\n\tcontent: \"\\0063\";\n}\n\n%icon-font-chess-chat-alt:before {\n\tcontent: \"\\007A\";\n}\n\n%icon-font-chess-chat-x:before {\n\tcontent: \"\\2044\";\n}\n\n%icon-font-chess-quickchat:before {\n\tcontent: \"\\1F93\";\n}\n\n%icon-font-chess-chess-book:before {\n\tcontent: \"\\006F\";\n}\n\n%icon-font-chess-filter:before {\n\tcontent: \"\\203A\";\n}\n\n%icon-font-chess-sort:before {\n\tcontent: \"\\1F5D\";\n}\n\n%icon-font-chess-lock:before {\n\tcontent: \"\\0064\";\n}\n\n%icon-font-chess-inbox:before {\n\tcontent: \"\\0065\";\n}\n\n%icon-font-chess-lightbulb:before {\n\tcontent: \"\\0067\";\n}\n\n%icon-font-chess-nametag:before {\n\tcontent: \"\\0068\";\n}\n\n%icon-font-chess-mail:before {\n\tcontent: \"\\0075\";\n}\n\n%icon-font-chess-mail-alt:before {\n\tcontent: \"\\0079\";\n}\n\n%icon-font-chess-mail-plus:before {\n\tcontent: \"\\006B\";\n}\n\n%icon-font-chess-mail-exclaimation:before {\n\tcontent: \"\\03BB\";\n}\n\n%icon-font-chess-book:before {\n\tcontent: \"\\006F\";\n}\n\n%icon-font-chess-book-alt:before {\n\tcontent: \"\\00A4\";\n}\n\n%icon-font-chess-book-open:before {\n\tcontent: \"\\00B4\";\n}\n\n%icon-font-chess-files:before {\n\tcontent: \"\\03C3\";\n}\n\n%icon-font-chess-popup:before {\n\tcontent: \"\\0070\";\n}\n\n%icon-font-chess-depth:before {\n\tcontent: \"\\1F35\";\n}\n\n%icon-font-chess-bell:before {\n\tcontent: \"\\0071\";\n}\n\n%icon-font-chess-bell-off:before {\n\tcontent: \"\\1FB2\";\n}\n\n%icon-font-chess-menu:before {\n\tcontent: \"\\0074\";\n}\n\n%icon-font-chess-home:before {\n\tcontent: \"\\0077\";\n}\n\n%icon-font-chess-home-alt:before {\n\tcontent: \"\\03DB\";\n}\n\n%icon-font-chess-custom-home:before {\n\tcontent: \"\\1F3A\";\n}\n\n%icon-font-chess-bullet:before {\n\tcontent: \"\\1F1D\";\n}\n\n%icon-font-chess-chess-board-puzzle:before {\n\tcontent: \"\\1F15\";\n}\n\n%icon-font-chess-chess-board-vision:before {\n\tcontent: \"\\0111\";\n}\n\n%icon-font-chess-fire-puzzle:before {\n\tcontent: \"\\1EBA\";\n}\n\n%icon-font-chess-fire:before {\n\tcontent: \"\\1F05\";\n}\n\n%icon-font-chess-fire-alt:before {\n\tcontent: \"\\1F25\";\n}\n\n%icon-font-chess-survival:before {\n\tcontent: \"\\1F10\";\n}\n\n%icon-font-chess-smartphone:before {\n\tcontent: \"\\E902\";\n}\n\n%icon-font-chess-computer:before {\n\tcontent: \"\\1F21\";\n}\n\n%icon-font-chess-computer-search:before {\n\tcontent: \"\\03BE\";\n}\n\n%icon-font-chess-comp-analysis:before {\n\tcontent: \"\\1F3B\";\n}\n\n%icon-font-chess-comp-analysis-done:before {\n\tcontent: \"\\1F3C\";\n}\n\n%icon-font-chess-max-analysis:before {\n\tcontent: \"\\1F64\";\n}\n\n%icon-font-chess-comp-drills:before {\n\tcontent: \"\\1F3E\";\n}\n\n%icon-font-chess-vscomp:before {\n\tcontent: \"\\1F4A\";\n}\n\n%icon-font-chess-tag:before {\n\tcontent: \"\\00BD\";\n}\n\n%icon-font-chess-toolbox:before {\n\tcontent: \"\\00BC\";\n}\n\n%icon-font-chess-cake:before {\n\tcontent: \"\\00BE\";\n}\n\n%icon-font-chess-asterisk:before {\n\tcontent: \"\\002A\";\n}\n\n%icon-font-chess-trash:before {\n\tcontent: \"\\2022\";\n}\n\n%icon-font-chess-download:before {\n\tcontent: \"\\0022\";\n}\n\n%icon-font-chess-display-slider:before {\n\tcontent: \"\\2039\";\n}\n\n%icon-font-chess-pushpin:before {\n\tcontent: \"\\00BB\";\n}\n\n%icon-font-chess-key:before {\n\tcontent: \"\\00A2\";\n}\n\n%icon-font-chess-page:before {\n\tcontent: \"\\00A3\";\n}\n\n%icon-font-chess-page-alt:before {\n\tcontent: \"\\20AC\";\n}\n\n%icon-font-chess-page-pencil:before {\n\tcontent: \"\\0078\";\n}\n\n%icon-font-chess-news:before {\n\tcontent: \"\\0045\";\n}\n\n%icon-font-chess-news-alt:before {\n\tcontent: \"\\1F13\";\n}\n\n%icon-font-chess-equal:before {\n\tcontent: \"\\003D\";\n}\n\n%icon-font-chess-stats:before {\n\tcontent: \"\\003B\";\n}\n\n%icon-font-chess-stats-arrow-up:before {\n\tcontent: \"\\010D\";\n}\n\n%icon-font-chess-stats-x:before {\n\tcontent: \"\\00F0\";\n}\n\n%icon-font-chess-graphs:before {\n\tcontent: \"\\03C5\";\n}\n\n%icon-font-chess-binoculars:before {\n\tcontent: \"\\2014\";\n}\n\n%icon-font-chess-magnifying-glass:before {\n\tcontent: \"\\2013\";\n}\n\n%icon-font-chess-magnifying-glass-done:before {\n\tcontent: \"\\1F49\";\n}\n\n%icon-font-chess-present:before {\n\tcontent: \"\\00BE\";\n}\n\n%icon-font-chess-enter:before {\n\tcontent: \"\\1F12\";\n}\n\n%icon-font-chess-exit:before {\n\tcontent: \"\\00D7\";\n}\n\n%icon-font-chess-draw:before {\n\tcontent: \"\\002B\";\n}\n\n%icon-font-chess-cup:before {\n\tcontent: \"\\2021\";\n}\n\n%icon-font-chess-leaguecup:before {\n\tcontent: \"\\1FA5\";\n}\n\n%icon-font-chess-scales:before {\n\tcontent: \"\\0371\";\n}\n\n%icon-font-chess-paper-pencil:before {\n\tcontent: \"\\03A3\";\n}\n\n%icon-font-chess-todo-list:before {\n\tcontent: \"\\010F\";\n}\n\n%icon-font-chess-trophy-plus:before {\n\tcontent: \"\\03A5\";\n}\n\n%icon-font-chess-trophy-minus:before {\n\tcontent: \"\\03BA\";\n}\n\n%icon-font-chess-trophy-podium:before {\n\tcontent: \"\\03B5\";\n}\n\n%icon-font-chess-events:before {\n\tcontent: \"\\1F36\";\n}\n\n%icon-font-chess-privacy:before {\n\tcontent: \"\\03B2\";\n}\n\n%icon-font-chess-survey:before {\n\tcontent: \"\\03C1\";\n}\n\n%icon-font-chess-arena:before {\n\tcontent: \"\\1F39\";\n}\n\n%icon-font-chess-clubs:before {\n\tcontent: \"\\1F9B\";\n}\n\n%icon-font-chess-club-arena:before {\n\tcontent: \"\\1F8C\";\n}\n\n%icon-font-chess-battle:before {\n\tcontent: \"\\1F5F\";\n}\n\n%icon-font-chess-tracked-content:before {\n\tcontent: \"\\00D5\";\n}\n\n%icon-font-chess-pawn-tracked:before {\n\tcontent: \"\\1F23\";\n}\n\n%icon-font-chess-queen-wreath:before {\n\tcontent: \"\\00F1\";\n}\n\n%icon-font-chess-crosshair:before {\n\tcontent: \"\\0111\";\n}\n\n%icon-font-chess-shield:before {\n\tcontent: \"\\014B\";\n}\n\n%icon-font-chess-chip:before {\n\tcontent: \"\\00F6\";\n}\n\n%icon-font-chess-chip-crossed:before {\n\tcontent: \"\\1F07\";\n}\n\n%icon-font-chess-comp-challenge:before {\n\tcontent: \"\\1F37\";\n}\n\n%icon-font-chess-smiley:before {\n\tcontent: \"\\03C2\";\n}\n\n%icon-font-chess-smileyadd:before {\n\tcontent: \"\\1F44\";\n}\n\n%icon-font-chess-troll:before {\n\tcontent: \"\\1F74\";\n}\n\n%icon-font-chess-eye:before {\n\tcontent: \"\\0057\";\n}\n\n%icon-font-chess-eye-off:before {\n\tcontent: \"\\1F40\";\n}\n\n%icon-font-chess-select:before {\n\tcontent: \"\\03AD\";\n}\n\n%icon-font-chess-store:before {\n\tcontent: \"\\1F43\";\n}\n\n%icon-font-chess-question-mark:before {\n\tcontent: \"\\1F0E\";\n}\n\n%icon-font-chess-inaccuracy:before {\n\tcontent: \"\\1F6F\";\n}\n\n%icon-font-chess-cycle:before {\n\tcontent: \"\\1F34\";\n}\n\n%icon-font-chess-gift:before {\n\tcontent: \"\\1F4D\";\n}\n\n%icon-font-chess-perfect:before {\n\tcontent: \"\\1F4C\";\n}\n\n%icon-font-chess-four-teams:before {\n\tcontent: \"\\1F59\";\n}\n\n%icon-font-chess-four-custom:before {\n\tcontent: \"\\1F5B\";\n}\n\n%icon-font-chess-percentile:before {\n\tcontent: \"\\1F2E\";\n}\n\n%icon-font-chess-carousel:before {\n\tcontent: \"\\1F11\";\n}\n\n%icon-font-chess-edit-time:before {\n\tcontent: \"\\03D9\";\n}\n\n%icon-font-chess-add-time:before {\n\tcontent: \"\\1F6C\";\n}\n\n%icon-font-chess-switches:before {\n\tcontent: \"\\1F75\";\n}\n\n%icon-font-chess-torpedo:before {\n\tcontent: \"\\1F71\";\n}\n\n%icon-font-chess-blindfold:before {\n\tcontent: \"\\1F73\";\n}\n\n%icon-font-chess-camera-on:before {\n\tcontent: \"\\1F6D\";\n}\n\n%icon-font-chess-camera-off:before {\n\tcontent: \"\\1F6E\";\n}\n\n%icon-font-chess-cloud:before {\n\tcontent: \"\\1F6B\";\n}\n\n%icon-font-chess-disconnected:before {\n\tcontent: \"\\1F8D\";\n}\n\n%icon-font-chess-library:before {\n\tcontent: \"\\1F45\";\n}\n\n%icon-font-chess-library-add:before {\n\tcontent: \"\\1F57\";\n}\n\n%icon-font-chess-atomic:before {\n\tcontent: \"\\1F7B\";\n}\n\n%icon-font-chess-bookmark:before {\n\tcontent: \"\\1F66\";\n}\n\n%icon-font-chess-bookmark-add:before {\n\tcontent: \"\\1FA0\";\n}\n\n%icon-font-chess-excellent:before {\n\tcontent: \"\\1F67\";\n}\n\n%icon-font-chess-fork:before {\n\tcontent: \"\\1F8E\";\n}\n\n%icon-font-chess-handshake:before {\n\tcontent: \"\\1F88\";\n}\n\n%icon-font-chess-target:before {\n\tcontent: \"\\1F8F\";\n}\n\n%icon-font-chess-target-off:before {\n\tcontent: \"\\1F87\";\n}\n\n%icon-font-chess-official:before {\n\tcontent: \"\\1F89\";\n}\n\n%icon-font-chess-verified:before {\n\tcontent: \"\\1F9D\";\n}\n\n%icon-font-chess-location:before {\n\tcontent: \"\\1F86\";\n}\n\n%icon-font-chess-practice:before {\n\tcontent: \"\\1F95\";\n}\n\n%icon-font-chess-quality:before {\n\tcontent: \"\\1F9A\";\n}\n\n%icon-font-chess-castling:before {\n\tcontent: \"\\1F99\";\n}\n\n%icon-font-chess-pieces-all:before {\n\tcontent: \"\\1F98\";\n}\n\n%icon-font-chess-phases:before {\n\tcontent: \"\\1F97\";\n}\n\n%icon-font-chess-savedisk:before {\n\tcontent: \"\\1F9E\";\n}\n\n%icon-font-chess-qrcode:before {\n\tcontent: \"\\1FA1\";\n}\n\n%icon-font-chess-magout:before {\n\tcontent: \"\\1FA2\";\n}\n\n%icon-font-chess-randomcolor:before {\n\tcontent: \"\\1FA3\";\n}\n\n%icon-font-chess-duck:before {\n\tcontent: \"\\1F9F\";\n}\n\n%icon-font-chess-undo:before {\n\tcontent: \"\\004C\";\n}\n\n%icon-font-chess-link:before {\n\tcontent: \"\\0041\";\n}\n\n%icon-font-chess-challenge-link:before {\n\tcontent: \"\\1F61\";\n}\n\n%icon-font-chess-x:before {\n\tcontent: \"\\0042\";\n}\n\n%icon-font-chess-reply:before {\n\tcontent: \"\\0043\";\n}\n\n%icon-font-chess-checkmark:before {\n\tcontent: \"\\0047\";\n}\n\n%icon-font-chess-correct:before {\n\tcontent: \"\\1F30\";\n}\n\n%icon-font-chess-incorrect:before {\n\tcontent: \"\\1F3F\";\n}\n\n%icon-font-chess-redo:before {\n\tcontent: \"\\1F22\";\n}\n\n%icon-font-chess-plus:before {\n\tcontent: \"\\0056\";\n}\n\n%icon-font-chess-eval:before {\n\tcontent: \"\\1F33\";\n}\n\n%icon-font-chess-copy:before {\n\tcontent: \"\\1F24\";\n}\n\n%icon-font-chess-list:before {\n\tcontent: \"\\0072\";\n}\n\n%icon-font-chess-embed:before {\n\tcontent: \"\\221E\";\n}\n\n%icon-font-chess-darklight:before {\n\tcontent: \"\\1F3D\";\n}\n\n%icon-font-chess-image-plus:before {\n\tcontent: \"\\03B6\";\n}\n\n%icon-font-chess-follow:before {\n\tcontent: \"\\011E\";\n}\n\n%icon-font-chess-unfollow:before {\n\tcontent: \"\\0120\";\n}\n\n%icon-font-chess-quote:before {\n\tcontent: \"\\00D6\";\n}\n\n%icon-font-chess-web-view:before {\n\tcontent: \"\\0126\";\n}\n\n%icon-font-chess-circle:before {\n\tcontent: \"\\0054\";\n}\n\n%icon-font-chess-circle-dashboard:before {\n\tcontent: \"\\004E\";\n}\n\n%icon-font-chess-circle-x:before {\n\tcontent: \"\\0051\";\n}\n\n%icon-font-chess-circle-3-dots:before {\n\tcontent: \"\\038F\";\n}\n\n%icon-font-chess-circle-gearwheel:before {\n\tcontent: \"\\00B7\";\n}\n\n%icon-font-chess-circle-clock:before {\n\tcontent: \"\\0027\";\n}\n\n%icon-font-chess-circle-clock-alt:before {\n\tcontent: \"\\00B0\";\n}\n\n%icon-font-chess-circle-question:before {\n\tcontent: \"\\0028\";\n}\n\n%icon-font-chess-circle-info:before {\n\tcontent: \"\\0029\";\n}\n\n%icon-font-chess-circle-arrow:before {\n\tcontent: \"\\00F7\";\n}\n\n%icon-font-chess-circle-block:before {\n\tcontent: \"\\222B\";\n}\n\n%icon-font-chess-circle-stop:before {\n\tcontent: \"\\0026\";\n}\n\n%icon-font-chess-circle-danger:before {\n\tcontent: \"\\2020\";\n}\n\n%icon-font-chess-circle-checkmark:before {\n\tcontent: \"\\03C7\";\n}\n\n%icon-font-chess-circle-compass:before {\n\tcontent: \"\\0121\";\n}\n\n%icon-font-chess-donate:before {\n\tcontent: \"\\1F4B\";\n}\n\n%icon-font-chess-more:before {\n\tcontent: \"\\1F2B\";\n}\n\n%icon-font-chess-best:before {\n\tcontent: \"\\1F94\";\n}\n\n%icon-font-chess-time-warning:before {\n\tcontent: \"\\1F8B\";\n}\n\n%icon-font-chess-piechart:before {\n\tcontent: \"\\1FB1\";\n}\n\n%icon-font-chess-square:before {\n\tcontent: \"\\1F04\";\n}\n\n%icon-font-chess-square-reply:before {\n\tcontent: \"\\0058\";\n}\n\n%icon-font-chess-square-pencil:before {\n\tcontent: \"\\005A\";\n}\n\n%icon-font-chess-square-brush:before {\n\tcontent: \"\\006C\";\n}\n\n%icon-font-chess-square-in:before {\n\tcontent: \"\\00A1\";\n}\n\n%icon-font-chess-square-out:before {\n\tcontent: \"\\00BF\";\n}\n\n%icon-font-chess-square-bottom-in:before {\n\tcontent: \"\\039E\";\n}\n\n%icon-font-chess-square-x:before {\n\tcontent: \"\\00FC\";\n}\n\n%icon-font-chess-square-plus:before {\n\tcontent: \"\\1F01\";\n}\n\n%icon-font-chess-square-equal:before {\n\tcontent: \"\\1F03\";\n}\n\n%icon-font-chess-square-checkmark:before {\n\tcontent: \"\\03BF\";\n}\n\n%icon-font-chess-square-four:before {\n\tcontent: \"\\03F8\";\n}\n\n%icon-font-chess-arc-sharp:before {\n\tcontent: \"\\1F50\";\n}\n\n%icon-font-chess-arc-rough:before {\n\tcontent: \"\\1F51\";\n}\n\n%icon-font-chess-arc-throwaway:before {\n\tcontent: \"\\1F52\";\n}\n\n%icon-font-chess-arc-balanced:before {\n\tcontent: \"\\1F53\";\n}\n\n%icon-font-chess-arc-wild:before {\n\tcontent: \"\\1F54\";\n}\n\n%icon-font-chess-arc-sudden:before {\n\tcontent: \"\\1F55\";\n}\n\n%icon-font-chess-arc-smooth:before {\n\tcontent: \"\\1F56\";\n}\n\n%icon-font-chess-wld:before {\n\tcontent: \"\\1F63\";\n}\n\n%icon-font-chess-square-minus:before {\n\tcontent: \"\\1F02\";\n}\n\n%icon-font-chess-thumb-lrg:before {\n\tcontent: \"\\1F80\";\n}\n\n%icon-font-chess-thumb-med:before {\n\tcontent: \"\\1F81\";\n}\n\n%icon-font-chess-thumb-sml:before {\n\tcontent: \"\\1F82\";\n}\n\n%icon-font-chess-thumb-alt:before {\n\tcontent: \"\\1F83\";\n}\n\n%icon-font-chess-thumb-row:before {\n\tcontent: \"\\1F84\";\n}\n\n%icon-font-chess-thumb-left:before {\n\tcontent: \"\\1F85\";\n}\n\n%icon-font-chess-caret-up:before {\n\tcontent: \"\\007C\";\n}\n\n%icon-font-chess-caret-down:before {\n\tcontent: \"\\003F\";\n}\n\n%icon-font-chess-caret-left:before {\n\tcontent: \"\\002F\";\n}\n\n%icon-font-chess-caret-right:before {\n\tcontent: \"\\005C\";\n}\n\n%icon-font-chess-chevron-up:before {\n\tcontent: \"\\003E\";\n}\n\n%icon-font-chess-chevron-bottom:before {\n\tcontent: \"\\003C\";\n}\n\n%icon-font-chess-chevron-left:before {\n\tcontent: \"\\002C\";\n}\n\n%icon-font-chess-chevron-right:before {\n\tcontent: \"\\2026\";\n}\n\n%icon-font-chess-double-chevron-left:before {\n\tcontent: \"\\0021\";\n}\n\n%icon-font-chess-double-chevron-right:before {\n\tcontent: \"\\03B1\";\n}\n\n%icon-font-chess-chevron-previous:before {\n\tcontent: \"\\0023\";\n}\n\n%icon-font-chess-chevron-next:before {\n\tcontent: \"\\0040\";\n}\n\n%icon-font-chess-chevron-down:before {\n\tcontent: \"\\1F18\";\n}\n\n%icon-font-chess-arrow-return:before {\n\tcontent: \"\\005F\";\n}\n\n%icon-font-chess-arrow-up:before {\n\tcontent: \"\\007D\";\n}\n\n%icon-font-chess-arrow-down:before {\n\tcontent: \"\\007B\";\n}\n\n%icon-font-chess-arrow-left:before {\n\tcontent: \"\\005B\";\n}\n\n%icon-font-chess-arrow-right:before {\n\tcontent: \"\\005D\";\n}\n\n%icon-font-chess-round-arrow-return:before {\n\tcontent: \"\\03BC\";\n}\n\n%icon-font-chess-bold-arrow-right:before {\n\tcontent: \"\\0386\";\n}\n\n%icon-font-chess-arrow-cross:before {\n\tcontent: \"\\0110\";\n}\n\n%icon-font-chess-pulse:before {\n\tcontent: \"\\1F60\";\n}\n\n%icon-font-chess-user:before {\n\tcontent: \"\\0062\";\n}\n\n%icon-font-chess-users:before {\n\tcontent: \"\\006D\";\n}\n\n%icon-font-chess-users-alt:before {\n\tcontent: \"\\006E\";\n}\n\n%icon-font-chess-user-info:before {\n\tcontent: \"\\0076\";\n}\n\n%icon-font-chess-user-question:before {\n\tcontent: \"\\002D\";\n}\n\n%icon-font-chess-user-search:before {\n\tcontent: \"\\0024\";\n}\n\n%icon-font-chess-user-search-alt:before {\n\tcontent: \"\\014a\";\n}\n\n%icon-font-chess-user-feed:before {\n\tcontent: \"\\0025\";\n}\n\n%icon-font-chess-user-block:before {\n\tcontent: \"\\00A6\";\n}\n\n%icon-font-chess-user-plus:before {\n\tcontent: \"\\00B6\";\n}\n\n%icon-font-chess-users-plus:before {\n\tcontent: \"\\00FF\";\n}\n\n%icon-font-chess-user-x:before {\n\tcontent: \"\\00A7\";\n}\n\n%icon-font-chess-user-chain:before {\n\tcontent: \"\\0159\";\n}\n\n%icon-font-chess-user-broken-chain:before {\n\tcontent: \"\\0158\";\n}\n\n%icon-font-chess-user-shield:before {\n\tcontent: \"\\03DA\";\n}\n\n%icon-font-chess-user-shield-plus:before {\n\tcontent: \"\\0373\";\n}\n\n%icon-font-chess-profile-alt:before {\n\tcontent: \"\\1F9C\";\n}\n\n%icon-font-chess-chess-board:before {\n\tcontent: \"\\0069\";\n}\n\n.dark-mode %icon-font-chess-chess-board:not(.light-mode):before,\n%icon-font-chess-chess-board.dark-mode:before {\n\tcontent: \"\\2019\";\n}\n\n%icon-font-chess-chess-board-search:before {\n\tcontent: \"\\0394\";\n}\n\n%icon-font-chess-chess-board-search-alt:before {\n\tcontent: \"\\03A9\";\n}\n\n%icon-font-chess-question:before {\n\tcontent: \"\\00A9\";\n}\n\n%icon-font-chess-chess-board-plus:before {\n\tcontent: \"\\02C6\";\n}\n\n%icon-font-chess-lessons:before {\n\tcontent: \"\\1F20\";\n}\n\n%icon-font-chess-chess-board-circle:before {\n\tcontent: \"\\00AB\";\n}\n\n%icon-font-chess-chess-board-gear:before {\n\tcontent: \"\\03F7\";\n}\n\n%icon-font-chess-chess-crown:before {\n\tcontent: \"\\03FB\";\n}\n\n%icon-font-chess-chess-crown-alt:before {\n\tcontent: \"\\1F26\";\n}\n\n%icon-font-chess-crown-learning:before {\n\tcontent: \"\\1F32\";\n}\n\n%icon-font-chess-chess-pawn:before {\n\tcontent: \"\\1F19\";\n}\n\n%icon-font-chess-chess-pawn-left-half-rook:before {\n\tcontent: \"\\0112\";\n}\n\n%icon-font-chess-chess-pawn-right-half-rook:before {\n\tcontent: \"\\0113\";\n}\n\n%icon-font-chess-chess-pawn-rook:before {\n\tcontent: \"\\0073\";\n}\n\n%icon-font-chess-chess-pawn-square:before {\n\tcontent: \"\\03B7\";\n}\n\n%icon-font-chess-chess-move:before {\n\tcontent: \"\\1F18\";\n}\n\n%icon-font-chess-chess-move-alt:before {\n\tcontent: \"\\006A\";\n}\n\n%icon-font-chess-chess-board-folder:before {\n\tcontent: \"\\0398\";\n}\n\n%icon-font-chess-chess-board-arrow-down:before,\n%icon-font-chess-chess-board-arrow-left:before,\n%icon-font-chess-chess-board-arrow-right:before {\n\tcontent: \"\\03CC\";\n}\n\n%icon-font-chess-chess-salad:before {\n\tcontent: \"\\1F0A\";\n}\n\n%icon-font-chess-play-new:before {\n\tcontent: \"\\1F2C\";\n}\n\n%icon-font-chess-play-alt:before {\n\tcontent: \"\\1F2D\";\n}\n\n%icon-font-chess-lesson:before {\n\tcontent: \"\\1F14\";\n}\n\n%icon-font-chess-no-castling:before {\n\tcontent: \"\\1F78\";\n}\n\n%icon-font-chess-fog-of-war:before {\n\tcontent: \"\\1F79\";\n}\n\n%icon-font-chess-sideways-pawns:before {\n\tcontent: \"\\1F77\";\n}\n\n%icon-font-chess-capture-anything:before {\n\tcontent: \"\\1F76\";\n}\n\n%icon-font-chess-board-arrow:before {\n\tcontent: \"\\1F62\";\n}\n\n%icon-font-chess-checkbox:before {\n\tcontent: \"\\03A8\";\n}\n\n%icon-font-chess-checkbox-plus:before {\n\tcontent: \"\\03A6\";\n}\n\n%icon-font-chess-printer:before {\n\tcontent: \"\\00E5\";\n}\n\n%icon-font-chess-play:before {\n\tcontent: \"\\004A\";\n}\n\n%icon-font-chess-pause:before {\n\tcontent: \"\\004B\";\n}\n\n%icon-font-chess-sound-off:before {\n\tcontent: \"\\0050\";\n}\n\n%icon-font-chess-sound-on:before {\n\tcontent: \"\\0055\";\n}\n\n%icon-font-chess-repeat:before {\n\tcontent: \"\\0066\";\n}\n\n%icon-font-chess-shuffle:before {\n\tcontent: \"\\0049\";\n}\n\n%icon-font-chess-resize:before {\n\tcontent: \"\\03C0\";\n}\n\n%icon-font-chess-rss:before {\n\tcontent: \"\\1F31\";\n}\n\n%icon-font-chess-favorites:before {\n\tcontent: \"\\03AE\";\n}\n\n%icon-font-chess-facebook:before {\n\tcontent: \"\\0053\";\n}\n\n%icon-font-chess-twitter:before {\n\tcontent: \"\\0046\";\n}\n\n%icon-font-chess-linkedin:before {\n\tcontent: \"\\00C5\";\n}\n\n%icon-font-chess-tumblr:before {\n\tcontent: \"\\00EB\";\n}\n\n%icon-font-chess-mix:before {\n\tcontent: \"\\00DF\";\n}\n\n%icon-font-chess-reddit:before {\n\tcontent: \"\\00B1\";\n}\n\n%icon-font-chess-google:before {\n\tcontent: \"\\1F08\";\n}\n\n%icon-font-chess-instagram:before {\n\tcontent: \"\\1F00\";\n}\n\n%icon-font-chess-wikipedia:before {\n\tcontent: \"\\1F38\";\n}\n\n%icon-font-chess-youtube:before {\n\tcontent: \"\\0060\";\n}\n\n%icon-font-chess-share:before {\n\tcontent: \"\\00A5\";\n}\n\n%icon-font-chess-twitch:before {\n\tcontent: \"\\0393\";\n}\n\n%icon-font-chess-discord:before {\n\tcontent: \"\\1F48\";\n}\n\n%icon-font-chess-fide:before {\n\tcontent: \"\\1F41\";\n}\n\n%icon-font-chess-android:before {\n\tcontent: \"\\00FE\";\n}\n\n%icon-font-chess-apple:before {\n\tcontent: \"\\25CA\";\n}\n\n%icon-font-chess-win-phone:before {\n\tcontent: \"\\03A0\";\n}\n\n%icon-font-chess-thumbs-down:before {\n\tcontent: \"\\2265\";\n}\n\n%icon-font-chess-thumbs-up:before {\n\tcontent: \"\\2264\";\n}\n\n%icon-font-chess-card:before {\n\tcontent: \"\\03DC\";\n}\n\n%icon-font-chess-paypal:before {\n\tcontent: \"\\0377\";\n}\n\n%icon-font-chess-heart:before {\n\tcontent: \"\\1F2F\";\n}\n\n%icon-font-chess-vk:before {\n\tcontent: \"\\1F72\";\n}\n\n%icon-font-chess-tiktok:before {\n\tcontent: \"\\1FB0\";\n}\n\n%icon-font-chess-membership-diamond:before {\n\tcontent: \"\\0370\";\n}\n\n%icon-font-chess-membership-platinum:before {\n\tcontent: \"\\0376\";\n}\n\n%icon-font-chess-membership-mod:before,\n%icon-font-chess-membership-staff:before {\n\tcontent: \"\\0372\";\n}\n\n%icon-font-chess-membership-gold:before {\n\tcontent: \"\\03AE\";\n}\n\n%icon-font-chess-circle-hollow:before {\n\tcontent: \"\\03BD\";\n}\n\n%icon-font-chess-binoculars-crossed:before {\n\tcontent: \"\\00DE\";\n}\n\n%icon-font-chess-border-resize:before {\n\tcontent: \"\\03AC\";\n}\n\n%icon-font-chess-maximize:before {\n\tcontent: \"\\03DD\";\n}\n\n%icon-font-chess-minimize:before {\n\tcontent: \"\\03D8\";\n}\n\n%icon-font-chess-live:before {\n\tcontent: \"\\1F1B\";\n}\n\n%icon-font-chess-live960:before {\n\tcontent: \"\\00D1\";\n}\n\n%icon-font-chess-livematch:before {\n\tcontent: \"\\1F65\";\n}\n\n%icon-font-chess-live-bullet:before {\n\tcontent: \"\\1F1D\";\n}\n\n%icon-font-chess-live-standard:before {\n\tcontent: \"\\1F1C\";\n}\n\n%icon-font-chess-signal:before {\n\tcontent: \"\\03AF\";\n}\n\n%icon-font-chess-proleague:before {\n\tcontent: \"\\014B\";\n}\n\n%icon-font-chess-streamer:before {\n\tcontent: \"\\1F23\";\n}\n\n%icon-font-chess-bishop-white:before {\n\tcontent: \"\\00C4\";\n}\n\n%icon-font-chess-bishop-black:before {\n\tcontent: \"\\0102\";\n}\n\n%icon-font-chess-knight-white:before {\n\tcontent: \"\\0116\";\n}\n\n%icon-font-chess-knight-black:before {\n\tcontent: \"\\00C7\";\n}\n\n%icon-font-chess-rook-white:before {\n\tcontent: \"\\013B\";\n}\n\n%icon-font-chess-rook-black:before {\n\tcontent: \"\\013D\";\n}\n\n%icon-font-chess-king-white:before {\n\tcontent: \"\\0104\";\n}\n\n%icon-font-chess-king-black:before {\n\tcontent: \"\\0100\";\n}\n\n%icon-font-chess-queen-white:before {\n\tcontent: \"\\0136\";\n}\n\n%icon-font-chess-queen-black:before {\n\tcontent: \"\\012E\";\n}\n\n%icon-font-chess-pawn-white:before {\n\tcontent: \"\\0122\";\n}\n\n%icon-font-chess-pawn-black:before {\n\tcontent: \"\\0118\";\n}\n\n%icon-font-chess-shared-analysis:before {\n\tcontent: \"\\1F68\";\n}\n\n%icon-font-chess-boardexpand:before {\n\tcontent: \"\\1FA4\";\n}\n\n.dark-mode %icon-font-chess-bishop-white:before {\n\tcontent: \"\\0102\";\n}\n\n.dark-mode %icon-font-chess-bishop-black:before {\n\tcontent: \"\\00C4\";\n}\n\n.dark-mode %icon-font-chess-knight-white:before {\n\tcontent: \"\\00C7\";\n}\n\n.dark-mode %icon-font-chess-knight-black:before {\n\tcontent: \"\\0116\";\n}\n\n.dark-mode %icon-font-chess-rook-white:before {\n\tcontent: \"\\013D\";\n}\n\n.dark-mode %icon-font-chess-rook-black:before {\n\tcontent: \"\\013B\";\n}\n\n.dark-mode %icon-font-chess-king-white:before {\n\tcontent: \"\\0100\";\n}\n\n.dark-mode %icon-font-chess-king-black:before {\n\tcontent: \"\\0104\";\n}\n\n.dark-mode %icon-font-chess-queen-white:before {\n\tcontent: \"\\012E\";\n}\n\n.dark-mode %icon-font-chess-queen-black:before {\n\tcontent: \"\\0136\";\n}\n\n.dark-mode %icon-font-chess-pawn-white:before {\n\tcontent: \"\\0118\";\n}\n\n.dark-mode %icon-font-chess-pawn-black:before {\n\tcontent: \"\\0122\";\n}\n\n%icon-font-chess-bishop-stroke:before {\n\tcontent: \"\\00C4\";\n}\n\n%icon-font-chess-bishop-fill:before {\n\tcontent: \"\\0102\";\n}\n\n%icon-font-chess-knight-stroke:before {\n\tcontent: \"\\0116\";\n}\n\n%icon-font-chess-knight-fill:before {\n\tcontent: \"\\00C7\";\n}\n\n%icon-font-chess-rook-stroke:before {\n\tcontent: \"\\013B\";\n}\n\n%icon-font-chess-rook-fill:before {\n\tcontent: \"\\013D\";\n}\n\n%icon-font-chess-king-stroke:before {\n\tcontent: \"\\0104\";\n}\n\n%icon-font-chess-king-fill:before {\n\tcontent: \"\\0100\";\n}\n\n%icon-font-chess-queen-stroke:before {\n\tcontent: \"\\0136\";\n}\n\n%icon-font-chess-queen-fill:before {\n\tcontent: \"\\012E\";\n}\n\n%icon-font-chess-pawn-stroke:before {\n\tcontent: \"\\0122\";\n}\n\n%icon-font-chess-pawn-fill:before {\n\tcontent: \"\\0118\";\n}\n\n%icon-font-chess-zero:before {\n\tcontent: \"\\0030\";\n}\n\n%icon-font-chess-one:before {\n\tcontent: \"\\0031\";\n}\n\n%icon-font-chess-two:before {\n\tcontent: \"\\0032\";\n}\n\n%icon-font-chess-three:before {\n\tcontent: \"\\0033\";\n}\n\n%icon-font-chess-four:before {\n\tcontent: \"\\0034\";\n}\n\n%icon-font-chess-five:before {\n\tcontent: \"\\0035\";\n}\n\n%icon-font-chess-six:before {\n\tcontent: \"\\0036\";\n}\n\n%icon-font-chess-seven:before {\n\tcontent: \"\\0037\";\n}\n\n%icon-font-chess-eight:before {\n\tcontent: \"\\0038\";\n}\n\n%icon-font-chess-nine:before {\n\tcontent: \"\\0039\";\n}\n\n%icon-font-chess-colon:before {\n\tcontent: \"\\003A\";\n}\n\n%icon-font-chess-period:before {\n\tcontent: \"\\002E\";\n}\n\n%icon-font-chess-matetag:before {\n\tcontent: \"\\1F92\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-display-slider:before {\n\tcontent: \"\\203A\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-filter:before {\n\tcontent: \"\\2039\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-nav-expanded:before {\n\tcontent: \"\\03E0\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-nav-collapsed:before {\n\tcontent: \"\\03E1\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-arrow-up:before {\n\tcontent: \"\\007B\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-arrow-down:before {\n\tcontent: \"\\007D\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-chevron-up:before {\n\tcontent: \"\\003C\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-chevron-bottom:before {\n\tcontent: \"\\003E\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-thumbs-down:before {\n\tcontent: \"\\2264\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-thumbs-up:before {\n\tcontent: \"\\2265\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-chevron-left:before {\n\tcontent: \"\\2026\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-chevron-right:before {\n\tcontent: \"\\002C\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-circle-question:before {\n\tcontent: \"\\0029\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-circle-info:before {\n\tcontent: \"\\0028\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-caret-left:before {\n\tcontent: \"\\005C\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-caret-right:before {\n\tcontent: \"\\002F\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-double-chevron-left:before {\n\tcontent: \"\\03B1\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-double-chevron-right:before {\n\tcontent: \"\\0021\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-chess-board-circle:before {\n\tcontent: \"\\00BB\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-pushpin:before {\n\tcontent: \"\\00AB\";\n}\n\n%icon-font-chess-daily:before {\n\tcontent: \"\\1F1A\";\n}\n\n%icon-font-chess-circle-timer:before,\n%icon-font-chess-rapid:before {\n\tcontent: \"\\1F1B\";\n}\n\n%icon-font-chess-chess-board-puzzle-reversed:before {\n\tcontent: \"\\03DE\";\n}\n\n%icon-font-chess-standard:before {\n\tcontent: \"\\0069\";\n}\n\n%icon-font-chess-blitz:before,\n%icon-font-chess-lightning:before {\n\tcontent: \"\\1F1C\";\n}\n\n%icon-font-chess-crossed-swords:before {\n\tcontent: \"\\03C4\";\n}\n","@mixin scrollbar($width, $thumbColor: #555, $trackColor: #f5f5f5) {\n\tscrollbar-width: $width;\n\tscrollbar-color: $thumbColor $trackColor;\n\n\t&::-webkit-scrollbar-track,\n\t&::-webkit-scrollbar-thumb {\n\t\tbox-shadow: inset 0 0 ($width + 2px) rgba($color: #000000, $alpha: 0.3);\n\t\t-webkit-box-shadow: inset 0 0 ($width + 2px) rgba($color: #000000, $alpha: 0.3);\n\t\tborder-radius: 7px;\n\t}\n\n\t&::-webkit-scrollbar {\n\t\twidth: $width;\n\t}\n\n\t&::-webkit-scrollbar-thumb {\n\t\tbackground-color: $thumbColor;\n\t}\n\n\t&::-webkit-scrollbar-track {\n\t\tbackground-color: $trackColor;\n\t}\n}\n\n@mixin alternatingBoardColors($firstColor, $secondColor, $deeperElement: null, $property: \"background-color\") {\n\t@if ($deeperElement) {\n\t\t&:nth-child(odd)>*:nth-child(odd) #{$deeperElement},\n\t\t&:nth-child(even)>*:nth-child(even) #{$deeperElement} {\n\t\t\t#{$property}: $firstColor;\n\t\t}\n\n\t\t&:nth-child(odd)>*:nth-child(even) #{$deeperElement},\n\t\t&:nth-child(even)>*:nth-child(odd) #{$deeperElement} {\n\t\t\t#{$property}: $secondColor;\n\t\t}\n\t} @else {\n\t\t&:nth-child(odd)>*:nth-child(odd),\n\t\t&:nth-child(even)>*:nth-child(even) {\n\t\t\t#{$property}: $firstColor;\n\t\t}\n\n\t\t&:nth-child(odd)>*:nth-child(even),\n\t\t&:nth-child(even)>*:nth-child(odd) {\n\t\t\t#{$property}: $secondColor;\n\t\t}\n\t}\n}\n\n@mixin occupyAbsoluteSize {\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\tright: 0;\n\tbottom: 0;\n}\n\n@mixin button {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tpadding: 0.5rem 1.2rem;\n\tbackground: hsla(0, 0%, 100%, 0.08);\n\tcolor: #e2e2e2;\n\tborder-radius: 6%;\n\tborder: none;\n}\n\n@mixin iconSize($size: null, $adaptive: false) {\n\t@if ($size) {\n\t\tfont-size: $size;\n\n\t\t@if (not $adaptive) {\n\t\t\twidth: $size;\n\t\t\theight: $size;\n\t\t\tline-height: 1;\n\t\t}\n\t} @else {\n\t\tfont-size: 2rem;\n\t\twidth: 2rem;\n\t\theight: 2rem;\n\t}\n\n\tfont-family: \"ChessGlyph New\";\n}\n\n@mixin tooltip {\n\tdisplay: block;\n\tmax-width: 25rem;\n\tpadding: 0.5rem;\n\tfont-weight: 500;\n\tfont-size: 1.1rem;\n\tword-break: break-word;\n\toverflow-wrap: break-word;\n}\n","$lightContentColor: hsla(0, 0%, 100%, 0.65);\n$boardComponentWhiteColor: #e2e2e2;\n$boardComponentDarkColor: #322e2b;\n$activeColor: #7fa650;\n\n$boardComponentFont: \"Segoe UI\";\n"],"sourceRoot":""}]);
// Exports
___CSS_LOADER_EXPORT___.locals = {
	"board-settings__variant-rules-button-icon": "EditorSidebar-module-board-settings__variant-rules-button-icon",
	"board-settings__variant-rules-button--open": "EditorSidebar-module-board-settings__variant-rules-button--open",
	"variant-rules-modal__button-icon": "EditorSidebar-module-variant-rules-modal__button-icon",
	"board-settings-button__icon--box-offset": "EditorSidebar-module-board-settings-button__icon--box-offset",
	"board-settings-button__icon--no-corners-on": "EditorSidebar-module-board-settings-button__icon--no-corners-on",
	"spare-pieces-selectors__expand-icon": "EditorSidebar-module-spare-pieces-selectors__expand-icon",
	"board-settings-button__icon--no-corners-off": "EditorSidebar-module-board-settings-button__icon--no-corners-off",
	"spare-pieces--expanded": "EditorSidebar-module-spare-pieces--expanded",
	"board": "EditorSidebar-module-board",
	"board-row": "EditorSidebar-module-board-row",
	"wrap": "EditorSidebar-module-wrap",
	"board-settings": "EditorSidebar-module-board-settings",
	"board-settings-button": "EditorSidebar-module-board-settings-button",
	"board-settings-button__icon": "EditorSidebar-module-board-settings-button__icon",
	"board-settings__dimension": "EditorSidebar-module-board-settings__dimension",
	"board-settings__dimension-select": "EditorSidebar-module-board-settings__dimension-select",
	"board-settings__dimension-select-option": "EditorSidebar-module-board-settings__dimension-select-option",
	"board-settings__variant-rules-button": "EditorSidebar-module-board-settings__variant-rules-button",
	"board-settings__variant-rules-button-text": "EditorSidebar-module-board-settings__variant-rules-button-text",
	"variant-rules-modal": "EditorSidebar-module-variant-rules-modal",
	"variant-rules-modal-rounded-header": "EditorSidebar-module-variant-rules-modal-rounded-header",
	"variant-rules-modal-rounded-header__text": "EditorSidebar-module-variant-rules-modal-rounded-header__text",
	"variant-rules-modal__button": "EditorSidebar-module-variant-rules-modal__button",
	"variant-rules-overlay": "EditorSidebar-module-variant-rules-overlay",
	"variant-boolean-rules": "EditorSidebar-module-variant-boolean-rules",
	"variant-boolean-rules__tooltip": "EditorSidebar-module-variant-boolean-rules__tooltip",
	"variant-boolean-rule": "EditorSidebar-module-variant-boolean-rule",
	"variant-boolean-rule--active": "EditorSidebar-module-variant-boolean-rule--active",
	"variant-boolean-rule--not-allowed": "EditorSidebar-module-variant-boolean-rule--not-allowed",
	"variant-boolean-rule__name": "EditorSidebar-module-variant-boolean-rule__name",
	"variant-boolean-rule__icon": "EditorSidebar-module-variant-boolean-rule__icon",
	"parametrized-variant-rules": "EditorSidebar-module-parametrized-variant-rules",
	"parametrized-variant-rule": "EditorSidebar-module-parametrized-variant-rule",
	"parametrized-variant-rule__name": "EditorSidebar-module-parametrized-variant-rule__name",
	"parametrized-variant-rule__select": "EditorSidebar-module-parametrized-variant-rule__select",
	"parametrized-variant-rule__input": "EditorSidebar-module-parametrized-variant-rule__input",
	"spare-pieces": "EditorSidebar-module-spare-pieces",
	"spare-pieces-wrap": "EditorSidebar-module-spare-pieces-wrap",
	"spare-pieces-selectors": "EditorSidebar-module-spare-pieces-selectors",
	"spare-pieces-selectors__hint-text": "EditorSidebar-module-spare-pieces-selectors__hint-text",
	"spare-pieces-selectors__colors": "EditorSidebar-module-spare-pieces-selectors__colors",
	"spare-pieces-selectors__color": "EditorSidebar-module-spare-pieces-selectors__color",
	"spare-pieces-selectors__fairy-pieces-button": "EditorSidebar-module-spare-pieces-selectors__fairy-pieces-button",
	"spare-pieces-selectors__fairy-pieces-image": "EditorSidebar-module-spare-pieces-selectors__fairy-pieces-image"
};
/* harmony default export */ __webpack_exports__["Z"] = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 75278:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60445);
/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(60352);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".GameVariantRules-module-variant-rules{display:flex;align-items:center;gap:.1rem}.GameVariantRules-module-variant-rules .GameVariantRules-module-variant-rule-tooltip{display:block;max-width:25rem;padding:.5rem;font-weight:500;font-size:1.1rem;word-break:break-word;overflow-wrap:break-word}.GameVariantRules-module-variant-rule{font-size:2rem;width:2rem;height:2rem;font-family:\"ChessGlyph New\";font-family:\"ChessGlyph New\"}.GameVariantRules-module-variant-rule::before{display:flex;flex-direction:row;align-items:center;justify-content:center;width:100%;height:100%;content:attr(data-content)}.GameVariantRules-module-variant-rule--textual-rule{display:flex;flex-direction:row;align-items:center;width:min-content;font-family:\"Trebuchet MS\";font-size:1.4rem;color:#00b0f0}.GameVariantRules-module-variant-rule--capture-the-king{transform:rotate(60deg)}.GameVariantRules-module-variant-rule--promotion-wrap{display:flex;align-items:center;width:min-content}.GameVariantRules-module-variant-rule--promotion{display:flex;margin-left:.15rem;margin-right:.7rem}.GameVariantRules-module-variant-rule--promotion__promotion-piece{margin:0 -0.75rem 0rem -0.75rem}.GameVariantRules-module-variant-rule--promotion__promotion-piece>div{display:flex;margin-bottom:.5rem}.GameVariantRules-module-variant-rule--stonewall{margin-right:.4rem}.GameVariantRules-module-variant-rule--stonewall>div{margin-top:-0.3rem}", "",{"version":3,"sources":["webpack://./src/main/client/ts/components/VariantRules/GameVariantRules.module.scss","webpack://./src/main/client/scss/Mixins.scss"],"names":[],"mappings":"AAEA,uCACC,YAAA,CACA,kBAAA,CACA,SAAA,CAGD,qFC8EC,aAAA,CACA,eAAA,CACA,aAAA,CACA,eAAA,CACA,gBAAA,CACA,qBAAA,CACA,wBAAA,CDhFD,sCCiEE,cAAA,CACA,UAAA,CACA,WAAA,CAGD,4BAAA,CDpEA,4BAAA,CAEA,8CACC,YAAA,CACA,kBAAA,CACA,kBAAA,CACA,sBAAA,CACA,UAAA,CACA,WAAA,CACA,0BAAA,CAIF,oDACC,YAAA,CACA,kBAAA,CACA,kBAAA,CACA,iBAAA,CACA,0BAAA,CACA,gBAAA,CACA,aAAA,CAGD,wDACC,uBAAA,CAGD,sDACC,YAAA,CACA,kBAAA,CACA,iBAAA,CAGD,iDACC,YAAA,CACA,kBAAA,CACA,kBAAA,CAGD,kEACC,+BAAA,CAEA,sEACC,YAAA,CACA,mBAAA,CAIF,iDACC,kBAAA,CAEA,qDACC,kBAAA","sourcesContent":["@use \"../../index\";\n\n.variant-rules {\n\tdisplay: flex;\n\talign-items: center;\n\tgap: 0.1rem;\n}\n\n.variant-rules .variant-rule-tooltip {\n\t@include index.tooltip;\n}\n\n.variant-rule {\n\t@include index.iconSize;\n\tfont-family: \"ChessGlyph New\";\n\n\t&::before {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tcontent: attr(data-content);\n\t}\n}\n\n.variant-rule--textual-rule {\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-items: center;\n\twidth: min-content;\n\tfont-family: \"Trebuchet MS\";\n\tfont-size: 1.4rem;\n\tcolor: #00b0f0;\n}\n\n.variant-rule--capture-the-king {\n\ttransform: rotate(60deg);\n}\n\n.variant-rule--promotion-wrap {\n\tdisplay: flex;\n\talign-items: center;\n\twidth: min-content;\n}\n\n.variant-rule--promotion {\n\tdisplay: flex;\n\tmargin-left: 0.15rem;\n\tmargin-right: 0.7rem;\n}\n\n.variant-rule--promotion__promotion-piece {\n\tmargin: 0 -0.75rem 0rem -0.75rem;\n\n\t& > div {\n\t\tdisplay: flex;\n\t\tmargin-bottom: 0.5rem;\n\t}\n}\n\n.variant-rule--stonewall {\n\tmargin-right: 0.4rem;\n\n\t& > div {\n\t\tmargin-top: -0.3rem;\n\t}\n}\n","@mixin scrollbar($width, $thumbColor: #555, $trackColor: #f5f5f5) {\n\tscrollbar-width: $width;\n\tscrollbar-color: $thumbColor $trackColor;\n\n\t&::-webkit-scrollbar-track,\n\t&::-webkit-scrollbar-thumb {\n\t\tbox-shadow: inset 0 0 ($width + 2px) rgba($color: #000000, $alpha: 0.3);\n\t\t-webkit-box-shadow: inset 0 0 ($width + 2px) rgba($color: #000000, $alpha: 0.3);\n\t\tborder-radius: 7px;\n\t}\n\n\t&::-webkit-scrollbar {\n\t\twidth: $width;\n\t}\n\n\t&::-webkit-scrollbar-thumb {\n\t\tbackground-color: $thumbColor;\n\t}\n\n\t&::-webkit-scrollbar-track {\n\t\tbackground-color: $trackColor;\n\t}\n}\n\n@mixin alternatingBoardColors($firstColor, $secondColor, $deeperElement: null, $property: \"background-color\") {\n\t@if ($deeperElement) {\n\t\t&:nth-child(odd)>*:nth-child(odd) #{$deeperElement},\n\t\t&:nth-child(even)>*:nth-child(even) #{$deeperElement} {\n\t\t\t#{$property}: $firstColor;\n\t\t}\n\n\t\t&:nth-child(odd)>*:nth-child(even) #{$deeperElement},\n\t\t&:nth-child(even)>*:nth-child(odd) #{$deeperElement} {\n\t\t\t#{$property}: $secondColor;\n\t\t}\n\t} @else {\n\t\t&:nth-child(odd)>*:nth-child(odd),\n\t\t&:nth-child(even)>*:nth-child(even) {\n\t\t\t#{$property}: $firstColor;\n\t\t}\n\n\t\t&:nth-child(odd)>*:nth-child(even),\n\t\t&:nth-child(even)>*:nth-child(odd) {\n\t\t\t#{$property}: $secondColor;\n\t\t}\n\t}\n}\n\n@mixin occupyAbsoluteSize {\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\tright: 0;\n\tbottom: 0;\n}\n\n@mixin button {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tpadding: 0.5rem 1.2rem;\n\tbackground: hsla(0, 0%, 100%, 0.08);\n\tcolor: #e2e2e2;\n\tborder-radius: 6%;\n\tborder: none;\n}\n\n@mixin iconSize($size: null, $adaptive: false) {\n\t@if ($size) {\n\t\tfont-size: $size;\n\n\t\t@if (not $adaptive) {\n\t\t\twidth: $size;\n\t\t\theight: $size;\n\t\t\tline-height: 1;\n\t\t}\n\t} @else {\n\t\tfont-size: 2rem;\n\t\twidth: 2rem;\n\t\theight: 2rem;\n\t}\n\n\tfont-family: \"ChessGlyph New\";\n}\n\n@mixin tooltip {\n\tdisplay: block;\n\tmax-width: 25rem;\n\tpadding: 0.5rem;\n\tfont-weight: 500;\n\tfont-size: 1.1rem;\n\tword-break: break-word;\n\toverflow-wrap: break-word;\n}\n"],"sourceRoot":""}]);
// Exports
___CSS_LOADER_EXPORT___.locals = {
	"variant-rules": "GameVariantRules-module-variant-rules",
	"variant-rule-tooltip": "GameVariantRules-module-variant-rule-tooltip",
	"variant-rule": "GameVariantRules-module-variant-rule",
	"variant-rule--textual-rule": "GameVariantRules-module-variant-rule--textual-rule",
	"variant-rule--capture-the-king": "GameVariantRules-module-variant-rule--capture-the-king",
	"variant-rule--promotion-wrap": "GameVariantRules-module-variant-rule--promotion-wrap",
	"variant-rule--promotion": "GameVariantRules-module-variant-rule--promotion",
	"variant-rule--promotion__promotion-piece": "GameVariantRules-module-variant-rule--promotion__promotion-piece",
	"variant-rule--stonewall": "GameVariantRules-module-variant-rule--stonewall"
};
/* harmony default export */ __webpack_exports__["Z"] = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 53132:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60445);
/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(60352);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".Accordion-module-accordion{display:flex;align-items:center;width:100%;padding:.45rem;background-color:#ececec;transition:.5s background-color ease-out;cursor:pointer}.Accordion-module-accordion--active{background-color:#ccc}.Accordion-module-accordion__header{font-weight:600;font-size:1.5rem;text-align:left;list-style-type:none}.Accordion-module-accordion__icon{margin-left:auto;transition:transform .5s ease}.Accordion-module-accordion--active .Accordion-module-accordion__icon{transform:rotate(90deg)}.Accordion-module-accordion__contents .Accordion-module-accordion__contents{background-color:#fefefe;overflow-y:hidden;transition:max-height .5s ease}", "",{"version":3,"sources":["webpack://./src/main/client/ts/templates/Accordion/Accordion.module.scss"],"names":[],"mappings":"AAAA,4BACC,YAAA,CACA,kBAAA,CACA,UAAA,CACA,cAAA,CACA,wBAAA,CACA,wCAAA,CACA,cAAA,CAEA,oCACC,qBAAA,CAGD,oCACC,eAAA,CACA,gBAAA,CACA,eAAA,CACA,oBAAA,CAGD,kCACC,gBAAA,CACA,6BAAA,CAGD,sEACC,uBAAA,CAIA,4EACC,wBAAA,CACA,iBAAA,CACA,8BAAA","sourcesContent":[".accordion {\n\tdisplay: flex;\n\talign-items: center;\n\twidth: 100%;\n\tpadding: 0.45rem;\n\tbackground-color: #ececec;\n\ttransition: 0.5s background-color ease-out;\n\tcursor: pointer;\n\n\t&--active {\n\t\tbackground-color: #ccc;\n\t}\n\n\t&__header {\n\t\tfont-weight: 600;\n\t\tfont-size: 1.5rem;\n\t\ttext-align: left;\n\t\tlist-style-type: none;\n\t}\n\n\t&__icon {\n\t\tmargin-left: auto;\n\t\ttransition: transform 0.5s ease;\n\t}\n\n\t&--active #{&}__icon {\n\t\ttransform: rotate(90deg);\n\t}\n\n\t&__contents {\n\t\t.accordion__contents {\n\t\t\tbackground-color: #fefefe;\n\t\t\toverflow-y: hidden;\n\t\t\ttransition: max-height 0.5s ease;\n\t\t}\n\t}\n}\n"],"sourceRoot":""}]);
// Exports
___CSS_LOADER_EXPORT___.locals = {
	"accordion": "Accordion-module-accordion",
	"accordion--active": "Accordion-module-accordion--active",
	"accordion__header": "Accordion-module-accordion__header",
	"accordion__icon": "Accordion-module-accordion__icon",
	"accordion__contents": "Accordion-module-accordion__contents"
};
/* harmony default export */ __webpack_exports__["Z"] = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 13467:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60445);
/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(60352);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".BoardDisplay-module-board-display{position:relative;width:fit-content;height:fit-content;pointer-events:none}", "",{"version":3,"sources":["webpack://./src/main/client/ts/templates/BoardDisplay/BoardDisplay.module.scss"],"names":[],"mappings":"AAAA,mCACC,iBAAA,CACA,iBAAA,CACA,kBAAA,CACA,mBAAA","sourcesContent":[".board-display {\n\tposition: relative;\n\twidth: fit-content;\n\theight: fit-content;\n\tpointer-events: none;\n}\n"],"sourceRoot":""}]);
// Exports
___CSS_LOADER_EXPORT___.locals = {
	"board-display": "BoardDisplay-module-board-display"
};
/* harmony default export */ __webpack_exports__["Z"] = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 73673:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60445);
/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(60352);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".CompositesDisplay-module-display{display:flex;flex-wrap:wrap;gap:.4rem;width:fit-content;padding:3px;border:#d2d2d2 2px solid}.CompositesDisplay-module-display-item{display:flex;justify-content:space-between;align-items:center;padding:.3rem 3px;width:6rem;border:#d2d2d2 2px solid}.CompositesDisplay-module-display-item__variant-rule,.CompositesDisplay-module-display-item__variant-rule>span{max-width:2.2rem;font-size:2.5rem;line-height:1}.CompositesDisplay-module-display-item__text{font-family:\"Segoe UI\";font-size:1.6rem;color:#333}", "",{"version":3,"sources":["webpack://./src/main/client/ts/templates/CompositesDisplay/CompositesDisplay.module.scss","webpack://./src/main/client/scss/Colors.scss"],"names":[],"mappings":"AAEA,kCACC,YAAA,CACA,cAAA,CACA,SAAA,CACA,iBAAA,CACA,WAAA,CACA,wBAAA,CAGD,uCACC,YAAA,CACA,6BAAA,CACA,kBAAA,CACA,iBAAA,CACA,UAAA,CACA,wBAAA,CAEA,+GAEC,gBAAA,CACA,gBAAA,CACA,aAAA,CAGD,6CACC,sBCtBmB,CDuBnB,gBAAA,CACA,UAAA","sourcesContent":["@use \"../../index\";\n\n.display {\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tgap: 0.4rem;\n\twidth: fit-content;\n\tpadding: 3px;\n\tborder: #d2d2d2 2px solid;\n}\n\n.display-item {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tpadding: 0.3rem 3px;\n\twidth: 6rem;\n\tborder: #d2d2d2 2px solid;\n\n\t&__variant-rule,\n\t&__variant-rule > span {\n\t\tmax-width: 2.2rem;\n\t\tfont-size: 2.5rem;\n\t\tline-height: 1;\n\t}\n\n\t&__text {\n\t\tfont-family: index.$boardComponentFont;\n\t\tfont-size: 1.6rem;\n\t\tcolor: #333;\n\t}\n}\n","$lightContentColor: hsla(0, 0%, 100%, 0.65);\n$boardComponentWhiteColor: #e2e2e2;\n$boardComponentDarkColor: #322e2b;\n$activeColor: #7fa650;\n\n$boardComponentFont: \"Segoe UI\";\n"],"sourceRoot":""}]);
// Exports
___CSS_LOADER_EXPORT___.locals = {
	"display": "CompositesDisplay-module-display",
	"display-item": "CompositesDisplay-module-display-item",
	"display-item__variant-rule": "CompositesDisplay-module-display-item__variant-rule",
	"display-item__text": "CompositesDisplay-module-display-item__text"
};
/* harmony default export */ __webpack_exports__["Z"] = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 29324:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60445);
/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(60352);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".GameController-module-fen-data__futer-to-move:before{content:\"ἡ\"}.GameController-module-time-control-display__icon--hyperbullet:before{content:\"ὠ\"}.GameController-module-time-control-display__icon--rapid:before{content:\"Ἓ\"}.GameController-module-time-control-display__icon--bullet:before{content:\"Ἕ\"}.GameController-module-time-control-display__icon--blitz:before{content:\"Ἔ\"}.GameController-module-game-control-root{position:relative;width:800px;height:560px}.GameController-module-game-control-wrap{display:flex;padding:6% 2%;background-color:var(--ghostboard-square-color)}.GameController-module-game-board-wrap{width:min-content;height:min-content}.GameController-module-game-board-sidebar{position:relative;display:flex;flex-direction:column;min-width:25rem;max-width:40rem;height:60vh;margin:0 1rem 0 3rem;overflow:hidden}.GameController-module-fen-data{display:flex;flex-direction:column;flex-grow:1;height:30rem;overflow-y:auto}.GameController-module-fen-data__side-to-move{padding:0 .2rem}.GameController-module-fen-data__side-to-move-wrap{display:flex;align-items:center;justify-content:center;padding:.2rem;font-weight:400}.GameController-module-fen-data__futer-to-move{padding:0 .2rem;font-size:1.6rem;font-family:\"ChessGlyph New\";opacity:.7;color:rgba(255,255,255,.65);cursor:pointer}.GameController-module-fen-data__futer-to-move--active{text-shadow:2px 0 #555,-2px 0 #555,0 2px #555,0 -2px #555,1px 1px #555,-1px -1px #555,1px -1px #555,-1px 1px #555;filter:brightness(150%) drop-shadow(0 0 1px #e2e2e2)}.GameController-module-fen-data__pgn-button-list{display:flex;align-items:flex-start;gap:.3rem;margin:0 .2rem .5rem .2rem;padding:0}.GameController-module-fen-data__pgn-button{display:flex;align-items:center;justify-content:center;padding:.5rem 1.2rem;background:rgba(255,255,255,.08);color:#e2e2e2;border-radius:6%;border:none;width:100%}.GameController-module-fen-data__pgn-button-wrap{list-style-type:none}.GameController-module-fen-data__pgn-button:hover{background-color:rgba(255,255,255,.16)}.GameController-module-fen-data__pgn-button--fog-of-war{padding:.3rem 1.2rem}.GameController-module-fen-data__pgn-button--claim-win{background-color:#0096c6;color:#e2e2e2}.GameController-module-fen-data__pgn-button--claim-win__text{margin-left:6px;margin-top:-2px;font-size:1.3rem;font-family:\"Segoe UI\";color:#e2e2e2}.GameController-module-fen-data__pgn-button__change-perspective-icon{transform:rotate(45deg)}.GameController-module-fen-data__pgn-button__description{margin:0 .5rem}.GameController-module-fen-data__pgn-button--icon-button{font-size:1.8rem;font-family:\"ChessGlyph New\";padding:.3rem 1.3rem}.GameController-module-fen-data__pgn-button__icon{font-family:\"ChessGlyph New\"}.GameController-module-fen-data__pgn-box{scrollbar-width:8px;scrollbar-color:#555 #f5f5f5;display:flex;height:12.5rem;padding:5px 8px;font-weight:500;background:rgba(0,0,0,0);color:rgba(255,255,255,.65);border:none;resize:none}.GameController-module-fen-data__pgn-box::-webkit-scrollbar-track,.GameController-module-fen-data__pgn-box::-webkit-scrollbar-thumb{box-shadow:inset 0 0 10px rgba(0,0,0,.3);-webkit-box-shadow:inset 0 0 10px rgba(0,0,0,.3);border-radius:7px}.GameController-module-fen-data__pgn-box::-webkit-scrollbar{width:8px}.GameController-module-fen-data__pgn-box::-webkit-scrollbar-thumb{background-color:#555}.GameController-module-fen-data__pgn-box::-webkit-scrollbar-track{background-color:#f5f5f5}.GameController-module-metadata-display>*{margin-top:.3rem;margin-bottom:.3rem}.GameController-module-metadata-display__game-details{font-weight:700;white-space:nowrap;color:#e2e2e2;font-size:1.5rem;font-family:\"Segoe UI\"}.GameController-module-time-control-display{display:flex;align-items:center;justify-content:flex-start;gap:.45rem;margin-bottom:5px}.GameController-module-time-control-display__icon{font-size:2rem;width:2rem;height:2rem;font-family:\"ChessGlyph New\";display:flex;justify-content:center;align-items:center;font-family:\"ChessGlyph New\"}", "",{"version":3,"sources":["webpack://./src/main/client/ts/templates/GameController/GameController.module.scss","webpack://./src/main/client/scss/vendor/ChessGlyph.scss","webpack://./src/main/client/scss/Mixins.scss","webpack://./src/main/client/scss/Colors.scss"],"names":[],"mappings":"AAAA,sDCkSA,WACC,CAAA,sEA+vBD,WACC,CAAA,gEAuXD,WACC,CAAA,iEAWD,WACC,CAAA,gEAGD,WACC,CAAA,yCDz6CD,iBACC,CAAA,WACA,CAAA,YACA,CAAA,yCAGD,YACC,CAAA,aACA,CAAA,+CACA,CAAA,uCAGD,iBACC,CAAA,kBACA,CAAA,0CAGD,iBACC,CAAA,YACA,CAAA,qBACA,CAAA,eACA,CAAA,eACA,CAAA,WACA,CAAA,oBACA,CAAA,eACA,CAAA,gCAGD,YACC,CAAA,qBACA,CAAA,WACA,CAAA,YACA,CAAA,eACA,CAAA,8CAEA,eASC,CAAA,mDARA,YACC,CAAA,kBACA,CAAA,sBACA,CAAA,aACA,CAAA,eACA,CAAA,+CAMF,eAEC,CAAA,gBACA,CAAA,4BACA,CAAA,UACA,CAAA,2BACA,CAAA,cACA,CAAA,uDAEA,iHACC,CAAA,oDACA,CAAA,iDAIF,YACC,CAAA,sBACA,CAAA,SACA,CAAA,0BACA,CAAA,SACA,CAAA,4CAGD,YEfA,CAAA,kBACA,CAAA,sBACA,CAAA,oBACA,CAAA,gCACA,CAAA,aACA,CAAA,gBACA,CAAA,WACA,CAAA,UFcC,CAAA,iDALA,oBACC,CAAA,kDAMD,sCACC,CAAA,wDAGD,oBACC,CAAA,uDAGD,wBACC,CAAA,aGxFwB,CAAA,6DH2FxB,eACC,CAAA,eACA,CAAA,gBACA,CAAA,sBG1FiB,CAAA,aAJM,CAAA,qEHoGzB,uBACC,CAAA,yDAGD,cACC,CAAA,yDAGD,gBACgC,CAAA,4BE5BjC,CAAA,oBF6BE,CAAA,kDAGD,4BACC,CAAA,yCAIF,mBAC0B,CAAA,4BEtH1B,CAAA,YFuHC,CAAA,cACA,CAAA,eACA,CAAA,eACA,CAAA,wBACA,CAAA,2BG7HkB,CAAA,WH+HlB,CAAA,WACA,CAAA,oIE5HD,wCAEC,CAAA,gDACA,CAAA,iBACA,CAAA,4DAGD,SF6G0B,CAAA,kEEzG1B,qBAfqC,CAAA,kEAmBrC,wBAnBwD,CAAA,0CFqIxD,gBACC,CAAA,mBACA,CAAA,sDAGD,eACC,CAAA,kBACA,CAAA,aG3IyB,CAAA,gBH6IzB,CAAA,sBGzImB,CAAA,4CH8IrB,YACC,CAAA,kBACA,CAAA,0BACA,CAAA,UACA,CAAA,iBACA,CAAA,kDAEA,cE7EC,CAAA,UACA,CAAA,WACA,CAAA,4BAGD,CAAA,YF0EC,CAAA,sBACA,CAAA,kBACA,CAAA,4BACA","sourcesContent":["@use \"../../index\";\n\n.game-control-root {\n\tposition: relative;\n\twidth: 800px;\n\theight: 560px;\n}\n\n.game-control-wrap {\n\tdisplay: flex;\n\tpadding: 6% 2%;\n\tbackground-color: var(--ghostboard-square-color);\n}\n\n.game-board-wrap {\n\twidth: min-content;\n\theight: min-content;\n}\n\n.game-board-sidebar {\n\tposition: relative;\n\tdisplay: flex;\n\tflex-direction: column;\n\tmin-width: 25rem;\n\tmax-width: 40rem;\n\theight: 60vh;\n\tmargin: 0 1rem 0 3rem;\n\toverflow: hidden;\n}\n\n.fen-data {\n\tdisplay: flex;\n\tflex-direction: column;\n\tflex-grow: 1;\n\theight: 30rem;\n\toverflow-y: auto;\n\n\t&__side-to-move {\n\t\t&-wrap {\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\tjustify-content: center;\n\t\t\tpadding: 0.2rem;\n\t\t\tfont-weight: 400;\n\t\t}\n\n\t\tpadding: 0 0.2rem;\n\t}\n\n\t&__futer-to-move {\n\t\t@extend %icon-font-chess-computer;\n\t\tpadding: 0 0.2rem;\n\t\tfont-size: 1.6rem;\n\t\tfont-family: \"ChessGlyph New\";\n\t\topacity: 0.7;\n\t\tcolor: rgba(255, 255, 255, 0.65);\n\t\tcursor: pointer;\n\n\t\t&--active {\n\t\t\ttext-shadow: 2px 0 #555, -2px 0 #555, 0 2px #555, 0 -2px #555, 1px 1px #555, -1px -1px #555, 1px -1px #555, -1px 1px #555;\n\t\t\tfilter: brightness(150%) drop-shadow(0 0 1px index.$boardComponentWhiteColor);\n\t\t}\n\t}\n\n\t&__pgn-button-list {\n\t\tdisplay: flex;\n\t\talign-items: flex-start;\n\t\tgap: 0.3rem;\n\t\tmargin: 0 0.2rem 0.5rem 0.2rem;\n\t\tpadding: 0;\n\t}\n\n\t&__pgn-button {\n\t\t&-wrap {\n\t\t\tlist-style-type: none;\n\t\t}\n\n\t\t@include index.button;\n\t\twidth: 100%;\n\n\t\t&:hover {\n\t\t\tbackground-color: hsla(0, 0%, 100%, 0.16);\n\t\t}\n\n\t\t&--fog-of-war {\n\t\t\tpadding: 0.3rem 1.2rem;\n\t\t}\n\n\t\t&--claim-win {\n\t\t\tbackground-color: #0096c6;\n\t\t\tcolor: index.$boardComponentWhiteColor;\n\n\t\t\t&__text {\n\t\t\t\tmargin-left: 6px;\n\t\t\t\tmargin-top: -2px;\n\t\t\t\tfont-size: 1.3rem;\n\t\t\t\tfont-family: index.$boardComponentFont;\n\t\t\t\tcolor: index.$boardComponentWhiteColor;\n\t\t\t}\n\t\t}\n\n\t\t&__change-perspective-icon {\n\t\t\ttransform: rotate(45deg);\n\t\t}\n\n\t\t&__description {\n\t\t\tmargin: 0 0.5rem;\n\t\t}\n\n\t\t&--icon-button {\n\t\t\t@include index.iconSize($size: 1.8rem, $adaptive: true);\n\t\t\tpadding: 0.3rem 1.3rem;\n\t\t}\n\n\t\t&__icon {\n\t\t\tfont-family: \"ChessGlyph New\";\n\t\t}\n\t}\n\n\t&__pgn-box {\n\t\t@include index.scrollbar(8px);\n\t\tdisplay: flex;\n\t\theight: 12.5rem;\n\t\tpadding: 5px 8px;\n\t\tfont-weight: 500;\n\t\tbackground: transparent;\n\t\tcolor: index.$lightContentColor;\n\t\tborder: none;\n\t\tresize: none;\n\t}\n}\n\n.metadata-display {\n\t& > * {\n\t\tmargin-top: 0.3rem;\n\t\tmargin-bottom: 0.3rem;\n\t}\n\n\t&__game-details {\n\t\tfont-weight: 700;\n\t\twhite-space: nowrap;\n\t\tcolor: index.$boardComponentWhiteColor;\n\t\tfont-size: 1.5rem;\n\t\tfont-family: index.$boardComponentFont;\n\t}\n}\n\n.time-control-display {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: flex-start;\n\tgap: 0.45rem;\n\tmargin-bottom: 5px;\n\n\t&__icon {\n\t\t@include index.iconSize;\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tfont-family: \"ChessGlyph New\";\n\n\t\t&--hyperbullet {\n\t\t\t@extend %icon-font-chess-pulse;\n\t\t}\n\n\t\t&--bullet {\n\t\t\t@extend %icon-font-chess-live-bullet;\n\t\t}\n\n\t\t&--blitz {\n\t\t\t@extend %icon-font-chess-live-standard;\n\t\t}\n\n\t\t&--rapid {\n\t\t\t@extend %icon-font-chess-live;\n\t\t}\n\t}\n}\n","%icon-font-chess-chess:before {\n\tcontent: \"\\0069\";\n}\n\n%icon-font-chess-chess960:before {\n\tcontent: \"\\1F28\";\n}\n\n%icon-font-chess-threecheck:before {\n\tcontent: \"\\00CB\";\n}\n\n%icon-font-chess-kingofthehill:before {\n\tcontent: \"\\012A\";\n}\n\n%icon-font-chess-losers:before {\n\tcontent: \"\\012B\";\n}\n\n%icon-font-chess-crazyhouse:before {\n\tcontent: \"\\010E\";\n}\n\n%icon-font-chess-bughouse:before {\n\tcontent: \"\\011A\";\n}\n\n%icon-font-chess-solo-chess:before {\n\tcontent: \"\\1F06\";\n}\n\n%icon-font-chess-liveChess960:before {\n\tcontent: \"\\00D1\";\n}\n\n%icon-font-chess-live-tournament:before,\n%icon-font-chess-tournament:before {\n\tcontent: \"\\004F\";\n}\n\n%icon-font-chess-live-teammatch:before,\n%icon-font-chess-teammatch:before {\n\tcontent: \"\\03C4\";\n}\n\n%icon-font-chess-automate:before {\n\tcontent: \"\\1F7A\";\n}\n\n%icon-font-chess-vs-bot:before {\n\tcontent: \"\\1F70\";\n}\n\n%icon-font-chess-four-ffa:before {\n\tcontent: \"\\1F69\";\n}\n\n%icon-font-chess-variants:before {\n\tcontent: \"\\1F6A\";\n}\n\n%icon-font-chess-horde:before {\n\tcontent: \"\\1F7C\";\n}\n\n%icon-font-chess-chaturanga:before {\n\tcontent: \"\\1F7D\";\n}\n\n%icon-font-chess-classical:before {\n\tcontent: \"\\1F8A\";\n}\n\n%icon-font-chess-classroom:before {\n\tcontent: \"\\1F91\";\n}\n\n%icon-font-chess-endgames:before {\n\tcontent: \"\\1F96\";\n}\n\n%icon-font-chess-doubles-unpartner:before {\n\tcontent: \"\\1FA6\";\n}\n\n%icon-font-chess-nav-horizontal:before {\n\tcontent: \"\\0052\";\n}\n\n%icon-font-chess-nav-vertical:before {\n\tcontent: \"\\00E7\";\n}\n\n%icon-font-chess-nav-expanded:before {\n\tcontent: \"\\03E1\";\n}\n\n%icon-font-chess-nav-collapsed:before {\n\tcontent: \"\\03E0\";\n}\n\n%icon-font-chess-collapse-down:before {\n\tcontent: \"\\1F29\";\n}\n\n%icon-font-chess-nav-pawn:before {\n\tcontent: \"\\1F2A\";\n}\n\n%icon-font-chess-bug:before {\n\tcontent: \"\\00F5\";\n}\n\n%icon-font-chess-hourglass:before {\n\tcontent: \"\\03FA\";\n}\n\n%icon-font-chess-camera:before {\n\tcontent: \"\\0048\";\n}\n\n%icon-font-chess-camera-plus:before {\n\tcontent: \"\\03DF\";\n}\n\n%icon-font-chess-globe:before {\n\tcontent: \"\\004D\";\n}\n\n%icon-font-chess-order:before {\n\tcontent: \"\\004F\";\n}\n\n%icon-font-chess-flag:before {\n\tcontent: \"\\0059\";\n}\n\n%icon-font-chess-calendar:before {\n\tcontent: \"\\0061\";\n}\n\n%icon-font-chess-three-day:before {\n\tcontent: \"\\1F90\";\n}\n\n%icon-font-chess-daily-game:before {\n\tcontent: \"\\1F1A\";\n}\n\n%icon-font-chess-chat:before {\n\tcontent: \"\\0063\";\n}\n\n%icon-font-chess-chat-alt:before {\n\tcontent: \"\\007A\";\n}\n\n%icon-font-chess-chat-x:before {\n\tcontent: \"\\2044\";\n}\n\n%icon-font-chess-quickchat:before {\n\tcontent: \"\\1F93\";\n}\n\n%icon-font-chess-chess-book:before {\n\tcontent: \"\\006F\";\n}\n\n%icon-font-chess-filter:before {\n\tcontent: \"\\203A\";\n}\n\n%icon-font-chess-sort:before {\n\tcontent: \"\\1F5D\";\n}\n\n%icon-font-chess-lock:before {\n\tcontent: \"\\0064\";\n}\n\n%icon-font-chess-inbox:before {\n\tcontent: \"\\0065\";\n}\n\n%icon-font-chess-lightbulb:before {\n\tcontent: \"\\0067\";\n}\n\n%icon-font-chess-nametag:before {\n\tcontent: \"\\0068\";\n}\n\n%icon-font-chess-mail:before {\n\tcontent: \"\\0075\";\n}\n\n%icon-font-chess-mail-alt:before {\n\tcontent: \"\\0079\";\n}\n\n%icon-font-chess-mail-plus:before {\n\tcontent: \"\\006B\";\n}\n\n%icon-font-chess-mail-exclaimation:before {\n\tcontent: \"\\03BB\";\n}\n\n%icon-font-chess-book:before {\n\tcontent: \"\\006F\";\n}\n\n%icon-font-chess-book-alt:before {\n\tcontent: \"\\00A4\";\n}\n\n%icon-font-chess-book-open:before {\n\tcontent: \"\\00B4\";\n}\n\n%icon-font-chess-files:before {\n\tcontent: \"\\03C3\";\n}\n\n%icon-font-chess-popup:before {\n\tcontent: \"\\0070\";\n}\n\n%icon-font-chess-depth:before {\n\tcontent: \"\\1F35\";\n}\n\n%icon-font-chess-bell:before {\n\tcontent: \"\\0071\";\n}\n\n%icon-font-chess-bell-off:before {\n\tcontent: \"\\1FB2\";\n}\n\n%icon-font-chess-menu:before {\n\tcontent: \"\\0074\";\n}\n\n%icon-font-chess-home:before {\n\tcontent: \"\\0077\";\n}\n\n%icon-font-chess-home-alt:before {\n\tcontent: \"\\03DB\";\n}\n\n%icon-font-chess-custom-home:before {\n\tcontent: \"\\1F3A\";\n}\n\n%icon-font-chess-bullet:before {\n\tcontent: \"\\1F1D\";\n}\n\n%icon-font-chess-chess-board-puzzle:before {\n\tcontent: \"\\1F15\";\n}\n\n%icon-font-chess-chess-board-vision:before {\n\tcontent: \"\\0111\";\n}\n\n%icon-font-chess-fire-puzzle:before {\n\tcontent: \"\\1EBA\";\n}\n\n%icon-font-chess-fire:before {\n\tcontent: \"\\1F05\";\n}\n\n%icon-font-chess-fire-alt:before {\n\tcontent: \"\\1F25\";\n}\n\n%icon-font-chess-survival:before {\n\tcontent: \"\\1F10\";\n}\n\n%icon-font-chess-smartphone:before {\n\tcontent: \"\\E902\";\n}\n\n%icon-font-chess-computer:before {\n\tcontent: \"\\1F21\";\n}\n\n%icon-font-chess-computer-search:before {\n\tcontent: \"\\03BE\";\n}\n\n%icon-font-chess-comp-analysis:before {\n\tcontent: \"\\1F3B\";\n}\n\n%icon-font-chess-comp-analysis-done:before {\n\tcontent: \"\\1F3C\";\n}\n\n%icon-font-chess-max-analysis:before {\n\tcontent: \"\\1F64\";\n}\n\n%icon-font-chess-comp-drills:before {\n\tcontent: \"\\1F3E\";\n}\n\n%icon-font-chess-vscomp:before {\n\tcontent: \"\\1F4A\";\n}\n\n%icon-font-chess-tag:before {\n\tcontent: \"\\00BD\";\n}\n\n%icon-font-chess-toolbox:before {\n\tcontent: \"\\00BC\";\n}\n\n%icon-font-chess-cake:before {\n\tcontent: \"\\00BE\";\n}\n\n%icon-font-chess-asterisk:before {\n\tcontent: \"\\002A\";\n}\n\n%icon-font-chess-trash:before {\n\tcontent: \"\\2022\";\n}\n\n%icon-font-chess-download:before {\n\tcontent: \"\\0022\";\n}\n\n%icon-font-chess-display-slider:before {\n\tcontent: \"\\2039\";\n}\n\n%icon-font-chess-pushpin:before {\n\tcontent: \"\\00BB\";\n}\n\n%icon-font-chess-key:before {\n\tcontent: \"\\00A2\";\n}\n\n%icon-font-chess-page:before {\n\tcontent: \"\\00A3\";\n}\n\n%icon-font-chess-page-alt:before {\n\tcontent: \"\\20AC\";\n}\n\n%icon-font-chess-page-pencil:before {\n\tcontent: \"\\0078\";\n}\n\n%icon-font-chess-news:before {\n\tcontent: \"\\0045\";\n}\n\n%icon-font-chess-news-alt:before {\n\tcontent: \"\\1F13\";\n}\n\n%icon-font-chess-equal:before {\n\tcontent: \"\\003D\";\n}\n\n%icon-font-chess-stats:before {\n\tcontent: \"\\003B\";\n}\n\n%icon-font-chess-stats-arrow-up:before {\n\tcontent: \"\\010D\";\n}\n\n%icon-font-chess-stats-x:before {\n\tcontent: \"\\00F0\";\n}\n\n%icon-font-chess-graphs:before {\n\tcontent: \"\\03C5\";\n}\n\n%icon-font-chess-binoculars:before {\n\tcontent: \"\\2014\";\n}\n\n%icon-font-chess-magnifying-glass:before {\n\tcontent: \"\\2013\";\n}\n\n%icon-font-chess-magnifying-glass-done:before {\n\tcontent: \"\\1F49\";\n}\n\n%icon-font-chess-present:before {\n\tcontent: \"\\00BE\";\n}\n\n%icon-font-chess-enter:before {\n\tcontent: \"\\1F12\";\n}\n\n%icon-font-chess-exit:before {\n\tcontent: \"\\00D7\";\n}\n\n%icon-font-chess-draw:before {\n\tcontent: \"\\002B\";\n}\n\n%icon-font-chess-cup:before {\n\tcontent: \"\\2021\";\n}\n\n%icon-font-chess-leaguecup:before {\n\tcontent: \"\\1FA5\";\n}\n\n%icon-font-chess-scales:before {\n\tcontent: \"\\0371\";\n}\n\n%icon-font-chess-paper-pencil:before {\n\tcontent: \"\\03A3\";\n}\n\n%icon-font-chess-todo-list:before {\n\tcontent: \"\\010F\";\n}\n\n%icon-font-chess-trophy-plus:before {\n\tcontent: \"\\03A5\";\n}\n\n%icon-font-chess-trophy-minus:before {\n\tcontent: \"\\03BA\";\n}\n\n%icon-font-chess-trophy-podium:before {\n\tcontent: \"\\03B5\";\n}\n\n%icon-font-chess-events:before {\n\tcontent: \"\\1F36\";\n}\n\n%icon-font-chess-privacy:before {\n\tcontent: \"\\03B2\";\n}\n\n%icon-font-chess-survey:before {\n\tcontent: \"\\03C1\";\n}\n\n%icon-font-chess-arena:before {\n\tcontent: \"\\1F39\";\n}\n\n%icon-font-chess-clubs:before {\n\tcontent: \"\\1F9B\";\n}\n\n%icon-font-chess-club-arena:before {\n\tcontent: \"\\1F8C\";\n}\n\n%icon-font-chess-battle:before {\n\tcontent: \"\\1F5F\";\n}\n\n%icon-font-chess-tracked-content:before {\n\tcontent: \"\\00D5\";\n}\n\n%icon-font-chess-pawn-tracked:before {\n\tcontent: \"\\1F23\";\n}\n\n%icon-font-chess-queen-wreath:before {\n\tcontent: \"\\00F1\";\n}\n\n%icon-font-chess-crosshair:before {\n\tcontent: \"\\0111\";\n}\n\n%icon-font-chess-shield:before {\n\tcontent: \"\\014B\";\n}\n\n%icon-font-chess-chip:before {\n\tcontent: \"\\00F6\";\n}\n\n%icon-font-chess-chip-crossed:before {\n\tcontent: \"\\1F07\";\n}\n\n%icon-font-chess-comp-challenge:before {\n\tcontent: \"\\1F37\";\n}\n\n%icon-font-chess-smiley:before {\n\tcontent: \"\\03C2\";\n}\n\n%icon-font-chess-smileyadd:before {\n\tcontent: \"\\1F44\";\n}\n\n%icon-font-chess-troll:before {\n\tcontent: \"\\1F74\";\n}\n\n%icon-font-chess-eye:before {\n\tcontent: \"\\0057\";\n}\n\n%icon-font-chess-eye-off:before {\n\tcontent: \"\\1F40\";\n}\n\n%icon-font-chess-select:before {\n\tcontent: \"\\03AD\";\n}\n\n%icon-font-chess-store:before {\n\tcontent: \"\\1F43\";\n}\n\n%icon-font-chess-question-mark:before {\n\tcontent: \"\\1F0E\";\n}\n\n%icon-font-chess-inaccuracy:before {\n\tcontent: \"\\1F6F\";\n}\n\n%icon-font-chess-cycle:before {\n\tcontent: \"\\1F34\";\n}\n\n%icon-font-chess-gift:before {\n\tcontent: \"\\1F4D\";\n}\n\n%icon-font-chess-perfect:before {\n\tcontent: \"\\1F4C\";\n}\n\n%icon-font-chess-four-teams:before {\n\tcontent: \"\\1F59\";\n}\n\n%icon-font-chess-four-custom:before {\n\tcontent: \"\\1F5B\";\n}\n\n%icon-font-chess-percentile:before {\n\tcontent: \"\\1F2E\";\n}\n\n%icon-font-chess-carousel:before {\n\tcontent: \"\\1F11\";\n}\n\n%icon-font-chess-edit-time:before {\n\tcontent: \"\\03D9\";\n}\n\n%icon-font-chess-add-time:before {\n\tcontent: \"\\1F6C\";\n}\n\n%icon-font-chess-switches:before {\n\tcontent: \"\\1F75\";\n}\n\n%icon-font-chess-torpedo:before {\n\tcontent: \"\\1F71\";\n}\n\n%icon-font-chess-blindfold:before {\n\tcontent: \"\\1F73\";\n}\n\n%icon-font-chess-camera-on:before {\n\tcontent: \"\\1F6D\";\n}\n\n%icon-font-chess-camera-off:before {\n\tcontent: \"\\1F6E\";\n}\n\n%icon-font-chess-cloud:before {\n\tcontent: \"\\1F6B\";\n}\n\n%icon-font-chess-disconnected:before {\n\tcontent: \"\\1F8D\";\n}\n\n%icon-font-chess-library:before {\n\tcontent: \"\\1F45\";\n}\n\n%icon-font-chess-library-add:before {\n\tcontent: \"\\1F57\";\n}\n\n%icon-font-chess-atomic:before {\n\tcontent: \"\\1F7B\";\n}\n\n%icon-font-chess-bookmark:before {\n\tcontent: \"\\1F66\";\n}\n\n%icon-font-chess-bookmark-add:before {\n\tcontent: \"\\1FA0\";\n}\n\n%icon-font-chess-excellent:before {\n\tcontent: \"\\1F67\";\n}\n\n%icon-font-chess-fork:before {\n\tcontent: \"\\1F8E\";\n}\n\n%icon-font-chess-handshake:before {\n\tcontent: \"\\1F88\";\n}\n\n%icon-font-chess-target:before {\n\tcontent: \"\\1F8F\";\n}\n\n%icon-font-chess-target-off:before {\n\tcontent: \"\\1F87\";\n}\n\n%icon-font-chess-official:before {\n\tcontent: \"\\1F89\";\n}\n\n%icon-font-chess-verified:before {\n\tcontent: \"\\1F9D\";\n}\n\n%icon-font-chess-location:before {\n\tcontent: \"\\1F86\";\n}\n\n%icon-font-chess-practice:before {\n\tcontent: \"\\1F95\";\n}\n\n%icon-font-chess-quality:before {\n\tcontent: \"\\1F9A\";\n}\n\n%icon-font-chess-castling:before {\n\tcontent: \"\\1F99\";\n}\n\n%icon-font-chess-pieces-all:before {\n\tcontent: \"\\1F98\";\n}\n\n%icon-font-chess-phases:before {\n\tcontent: \"\\1F97\";\n}\n\n%icon-font-chess-savedisk:before {\n\tcontent: \"\\1F9E\";\n}\n\n%icon-font-chess-qrcode:before {\n\tcontent: \"\\1FA1\";\n}\n\n%icon-font-chess-magout:before {\n\tcontent: \"\\1FA2\";\n}\n\n%icon-font-chess-randomcolor:before {\n\tcontent: \"\\1FA3\";\n}\n\n%icon-font-chess-duck:before {\n\tcontent: \"\\1F9F\";\n}\n\n%icon-font-chess-undo:before {\n\tcontent: \"\\004C\";\n}\n\n%icon-font-chess-link:before {\n\tcontent: \"\\0041\";\n}\n\n%icon-font-chess-challenge-link:before {\n\tcontent: \"\\1F61\";\n}\n\n%icon-font-chess-x:before {\n\tcontent: \"\\0042\";\n}\n\n%icon-font-chess-reply:before {\n\tcontent: \"\\0043\";\n}\n\n%icon-font-chess-checkmark:before {\n\tcontent: \"\\0047\";\n}\n\n%icon-font-chess-correct:before {\n\tcontent: \"\\1F30\";\n}\n\n%icon-font-chess-incorrect:before {\n\tcontent: \"\\1F3F\";\n}\n\n%icon-font-chess-redo:before {\n\tcontent: \"\\1F22\";\n}\n\n%icon-font-chess-plus:before {\n\tcontent: \"\\0056\";\n}\n\n%icon-font-chess-eval:before {\n\tcontent: \"\\1F33\";\n}\n\n%icon-font-chess-copy:before {\n\tcontent: \"\\1F24\";\n}\n\n%icon-font-chess-list:before {\n\tcontent: \"\\0072\";\n}\n\n%icon-font-chess-embed:before {\n\tcontent: \"\\221E\";\n}\n\n%icon-font-chess-darklight:before {\n\tcontent: \"\\1F3D\";\n}\n\n%icon-font-chess-image-plus:before {\n\tcontent: \"\\03B6\";\n}\n\n%icon-font-chess-follow:before {\n\tcontent: \"\\011E\";\n}\n\n%icon-font-chess-unfollow:before {\n\tcontent: \"\\0120\";\n}\n\n%icon-font-chess-quote:before {\n\tcontent: \"\\00D6\";\n}\n\n%icon-font-chess-web-view:before {\n\tcontent: \"\\0126\";\n}\n\n%icon-font-chess-circle:before {\n\tcontent: \"\\0054\";\n}\n\n%icon-font-chess-circle-dashboard:before {\n\tcontent: \"\\004E\";\n}\n\n%icon-font-chess-circle-x:before {\n\tcontent: \"\\0051\";\n}\n\n%icon-font-chess-circle-3-dots:before {\n\tcontent: \"\\038F\";\n}\n\n%icon-font-chess-circle-gearwheel:before {\n\tcontent: \"\\00B7\";\n}\n\n%icon-font-chess-circle-clock:before {\n\tcontent: \"\\0027\";\n}\n\n%icon-font-chess-circle-clock-alt:before {\n\tcontent: \"\\00B0\";\n}\n\n%icon-font-chess-circle-question:before {\n\tcontent: \"\\0028\";\n}\n\n%icon-font-chess-circle-info:before {\n\tcontent: \"\\0029\";\n}\n\n%icon-font-chess-circle-arrow:before {\n\tcontent: \"\\00F7\";\n}\n\n%icon-font-chess-circle-block:before {\n\tcontent: \"\\222B\";\n}\n\n%icon-font-chess-circle-stop:before {\n\tcontent: \"\\0026\";\n}\n\n%icon-font-chess-circle-danger:before {\n\tcontent: \"\\2020\";\n}\n\n%icon-font-chess-circle-checkmark:before {\n\tcontent: \"\\03C7\";\n}\n\n%icon-font-chess-circle-compass:before {\n\tcontent: \"\\0121\";\n}\n\n%icon-font-chess-donate:before {\n\tcontent: \"\\1F4B\";\n}\n\n%icon-font-chess-more:before {\n\tcontent: \"\\1F2B\";\n}\n\n%icon-font-chess-best:before {\n\tcontent: \"\\1F94\";\n}\n\n%icon-font-chess-time-warning:before {\n\tcontent: \"\\1F8B\";\n}\n\n%icon-font-chess-piechart:before {\n\tcontent: \"\\1FB1\";\n}\n\n%icon-font-chess-square:before {\n\tcontent: \"\\1F04\";\n}\n\n%icon-font-chess-square-reply:before {\n\tcontent: \"\\0058\";\n}\n\n%icon-font-chess-square-pencil:before {\n\tcontent: \"\\005A\";\n}\n\n%icon-font-chess-square-brush:before {\n\tcontent: \"\\006C\";\n}\n\n%icon-font-chess-square-in:before {\n\tcontent: \"\\00A1\";\n}\n\n%icon-font-chess-square-out:before {\n\tcontent: \"\\00BF\";\n}\n\n%icon-font-chess-square-bottom-in:before {\n\tcontent: \"\\039E\";\n}\n\n%icon-font-chess-square-x:before {\n\tcontent: \"\\00FC\";\n}\n\n%icon-font-chess-square-plus:before {\n\tcontent: \"\\1F01\";\n}\n\n%icon-font-chess-square-equal:before {\n\tcontent: \"\\1F03\";\n}\n\n%icon-font-chess-square-checkmark:before {\n\tcontent: \"\\03BF\";\n}\n\n%icon-font-chess-square-four:before {\n\tcontent: \"\\03F8\";\n}\n\n%icon-font-chess-arc-sharp:before {\n\tcontent: \"\\1F50\";\n}\n\n%icon-font-chess-arc-rough:before {\n\tcontent: \"\\1F51\";\n}\n\n%icon-font-chess-arc-throwaway:before {\n\tcontent: \"\\1F52\";\n}\n\n%icon-font-chess-arc-balanced:before {\n\tcontent: \"\\1F53\";\n}\n\n%icon-font-chess-arc-wild:before {\n\tcontent: \"\\1F54\";\n}\n\n%icon-font-chess-arc-sudden:before {\n\tcontent: \"\\1F55\";\n}\n\n%icon-font-chess-arc-smooth:before {\n\tcontent: \"\\1F56\";\n}\n\n%icon-font-chess-wld:before {\n\tcontent: \"\\1F63\";\n}\n\n%icon-font-chess-square-minus:before {\n\tcontent: \"\\1F02\";\n}\n\n%icon-font-chess-thumb-lrg:before {\n\tcontent: \"\\1F80\";\n}\n\n%icon-font-chess-thumb-med:before {\n\tcontent: \"\\1F81\";\n}\n\n%icon-font-chess-thumb-sml:before {\n\tcontent: \"\\1F82\";\n}\n\n%icon-font-chess-thumb-alt:before {\n\tcontent: \"\\1F83\";\n}\n\n%icon-font-chess-thumb-row:before {\n\tcontent: \"\\1F84\";\n}\n\n%icon-font-chess-thumb-left:before {\n\tcontent: \"\\1F85\";\n}\n\n%icon-font-chess-caret-up:before {\n\tcontent: \"\\007C\";\n}\n\n%icon-font-chess-caret-down:before {\n\tcontent: \"\\003F\";\n}\n\n%icon-font-chess-caret-left:before {\n\tcontent: \"\\002F\";\n}\n\n%icon-font-chess-caret-right:before {\n\tcontent: \"\\005C\";\n}\n\n%icon-font-chess-chevron-up:before {\n\tcontent: \"\\003E\";\n}\n\n%icon-font-chess-chevron-bottom:before {\n\tcontent: \"\\003C\";\n}\n\n%icon-font-chess-chevron-left:before {\n\tcontent: \"\\002C\";\n}\n\n%icon-font-chess-chevron-right:before {\n\tcontent: \"\\2026\";\n}\n\n%icon-font-chess-double-chevron-left:before {\n\tcontent: \"\\0021\";\n}\n\n%icon-font-chess-double-chevron-right:before {\n\tcontent: \"\\03B1\";\n}\n\n%icon-font-chess-chevron-previous:before {\n\tcontent: \"\\0023\";\n}\n\n%icon-font-chess-chevron-next:before {\n\tcontent: \"\\0040\";\n}\n\n%icon-font-chess-chevron-down:before {\n\tcontent: \"\\1F18\";\n}\n\n%icon-font-chess-arrow-return:before {\n\tcontent: \"\\005F\";\n}\n\n%icon-font-chess-arrow-up:before {\n\tcontent: \"\\007D\";\n}\n\n%icon-font-chess-arrow-down:before {\n\tcontent: \"\\007B\";\n}\n\n%icon-font-chess-arrow-left:before {\n\tcontent: \"\\005B\";\n}\n\n%icon-font-chess-arrow-right:before {\n\tcontent: \"\\005D\";\n}\n\n%icon-font-chess-round-arrow-return:before {\n\tcontent: \"\\03BC\";\n}\n\n%icon-font-chess-bold-arrow-right:before {\n\tcontent: \"\\0386\";\n}\n\n%icon-font-chess-arrow-cross:before {\n\tcontent: \"\\0110\";\n}\n\n%icon-font-chess-pulse:before {\n\tcontent: \"\\1F60\";\n}\n\n%icon-font-chess-user:before {\n\tcontent: \"\\0062\";\n}\n\n%icon-font-chess-users:before {\n\tcontent: \"\\006D\";\n}\n\n%icon-font-chess-users-alt:before {\n\tcontent: \"\\006E\";\n}\n\n%icon-font-chess-user-info:before {\n\tcontent: \"\\0076\";\n}\n\n%icon-font-chess-user-question:before {\n\tcontent: \"\\002D\";\n}\n\n%icon-font-chess-user-search:before {\n\tcontent: \"\\0024\";\n}\n\n%icon-font-chess-user-search-alt:before {\n\tcontent: \"\\014a\";\n}\n\n%icon-font-chess-user-feed:before {\n\tcontent: \"\\0025\";\n}\n\n%icon-font-chess-user-block:before {\n\tcontent: \"\\00A6\";\n}\n\n%icon-font-chess-user-plus:before {\n\tcontent: \"\\00B6\";\n}\n\n%icon-font-chess-users-plus:before {\n\tcontent: \"\\00FF\";\n}\n\n%icon-font-chess-user-x:before {\n\tcontent: \"\\00A7\";\n}\n\n%icon-font-chess-user-chain:before {\n\tcontent: \"\\0159\";\n}\n\n%icon-font-chess-user-broken-chain:before {\n\tcontent: \"\\0158\";\n}\n\n%icon-font-chess-user-shield:before {\n\tcontent: \"\\03DA\";\n}\n\n%icon-font-chess-user-shield-plus:before {\n\tcontent: \"\\0373\";\n}\n\n%icon-font-chess-profile-alt:before {\n\tcontent: \"\\1F9C\";\n}\n\n%icon-font-chess-chess-board:before {\n\tcontent: \"\\0069\";\n}\n\n.dark-mode %icon-font-chess-chess-board:not(.light-mode):before,\n%icon-font-chess-chess-board.dark-mode:before {\n\tcontent: \"\\2019\";\n}\n\n%icon-font-chess-chess-board-search:before {\n\tcontent: \"\\0394\";\n}\n\n%icon-font-chess-chess-board-search-alt:before {\n\tcontent: \"\\03A9\";\n}\n\n%icon-font-chess-question:before {\n\tcontent: \"\\00A9\";\n}\n\n%icon-font-chess-chess-board-plus:before {\n\tcontent: \"\\02C6\";\n}\n\n%icon-font-chess-lessons:before {\n\tcontent: \"\\1F20\";\n}\n\n%icon-font-chess-chess-board-circle:before {\n\tcontent: \"\\00AB\";\n}\n\n%icon-font-chess-chess-board-gear:before {\n\tcontent: \"\\03F7\";\n}\n\n%icon-font-chess-chess-crown:before {\n\tcontent: \"\\03FB\";\n}\n\n%icon-font-chess-chess-crown-alt:before {\n\tcontent: \"\\1F26\";\n}\n\n%icon-font-chess-crown-learning:before {\n\tcontent: \"\\1F32\";\n}\n\n%icon-font-chess-chess-pawn:before {\n\tcontent: \"\\1F19\";\n}\n\n%icon-font-chess-chess-pawn-left-half-rook:before {\n\tcontent: \"\\0112\";\n}\n\n%icon-font-chess-chess-pawn-right-half-rook:before {\n\tcontent: \"\\0113\";\n}\n\n%icon-font-chess-chess-pawn-rook:before {\n\tcontent: \"\\0073\";\n}\n\n%icon-font-chess-chess-pawn-square:before {\n\tcontent: \"\\03B7\";\n}\n\n%icon-font-chess-chess-move:before {\n\tcontent: \"\\1F18\";\n}\n\n%icon-font-chess-chess-move-alt:before {\n\tcontent: \"\\006A\";\n}\n\n%icon-font-chess-chess-board-folder:before {\n\tcontent: \"\\0398\";\n}\n\n%icon-font-chess-chess-board-arrow-down:before,\n%icon-font-chess-chess-board-arrow-left:before,\n%icon-font-chess-chess-board-arrow-right:before {\n\tcontent: \"\\03CC\";\n}\n\n%icon-font-chess-chess-salad:before {\n\tcontent: \"\\1F0A\";\n}\n\n%icon-font-chess-play-new:before {\n\tcontent: \"\\1F2C\";\n}\n\n%icon-font-chess-play-alt:before {\n\tcontent: \"\\1F2D\";\n}\n\n%icon-font-chess-lesson:before {\n\tcontent: \"\\1F14\";\n}\n\n%icon-font-chess-no-castling:before {\n\tcontent: \"\\1F78\";\n}\n\n%icon-font-chess-fog-of-war:before {\n\tcontent: \"\\1F79\";\n}\n\n%icon-font-chess-sideways-pawns:before {\n\tcontent: \"\\1F77\";\n}\n\n%icon-font-chess-capture-anything:before {\n\tcontent: \"\\1F76\";\n}\n\n%icon-font-chess-board-arrow:before {\n\tcontent: \"\\1F62\";\n}\n\n%icon-font-chess-checkbox:before {\n\tcontent: \"\\03A8\";\n}\n\n%icon-font-chess-checkbox-plus:before {\n\tcontent: \"\\03A6\";\n}\n\n%icon-font-chess-printer:before {\n\tcontent: \"\\00E5\";\n}\n\n%icon-font-chess-play:before {\n\tcontent: \"\\004A\";\n}\n\n%icon-font-chess-pause:before {\n\tcontent: \"\\004B\";\n}\n\n%icon-font-chess-sound-off:before {\n\tcontent: \"\\0050\";\n}\n\n%icon-font-chess-sound-on:before {\n\tcontent: \"\\0055\";\n}\n\n%icon-font-chess-repeat:before {\n\tcontent: \"\\0066\";\n}\n\n%icon-font-chess-shuffle:before {\n\tcontent: \"\\0049\";\n}\n\n%icon-font-chess-resize:before {\n\tcontent: \"\\03C0\";\n}\n\n%icon-font-chess-rss:before {\n\tcontent: \"\\1F31\";\n}\n\n%icon-font-chess-favorites:before {\n\tcontent: \"\\03AE\";\n}\n\n%icon-font-chess-facebook:before {\n\tcontent: \"\\0053\";\n}\n\n%icon-font-chess-twitter:before {\n\tcontent: \"\\0046\";\n}\n\n%icon-font-chess-linkedin:before {\n\tcontent: \"\\00C5\";\n}\n\n%icon-font-chess-tumblr:before {\n\tcontent: \"\\00EB\";\n}\n\n%icon-font-chess-mix:before {\n\tcontent: \"\\00DF\";\n}\n\n%icon-font-chess-reddit:before {\n\tcontent: \"\\00B1\";\n}\n\n%icon-font-chess-google:before {\n\tcontent: \"\\1F08\";\n}\n\n%icon-font-chess-instagram:before {\n\tcontent: \"\\1F00\";\n}\n\n%icon-font-chess-wikipedia:before {\n\tcontent: \"\\1F38\";\n}\n\n%icon-font-chess-youtube:before {\n\tcontent: \"\\0060\";\n}\n\n%icon-font-chess-share:before {\n\tcontent: \"\\00A5\";\n}\n\n%icon-font-chess-twitch:before {\n\tcontent: \"\\0393\";\n}\n\n%icon-font-chess-discord:before {\n\tcontent: \"\\1F48\";\n}\n\n%icon-font-chess-fide:before {\n\tcontent: \"\\1F41\";\n}\n\n%icon-font-chess-android:before {\n\tcontent: \"\\00FE\";\n}\n\n%icon-font-chess-apple:before {\n\tcontent: \"\\25CA\";\n}\n\n%icon-font-chess-win-phone:before {\n\tcontent: \"\\03A0\";\n}\n\n%icon-font-chess-thumbs-down:before {\n\tcontent: \"\\2265\";\n}\n\n%icon-font-chess-thumbs-up:before {\n\tcontent: \"\\2264\";\n}\n\n%icon-font-chess-card:before {\n\tcontent: \"\\03DC\";\n}\n\n%icon-font-chess-paypal:before {\n\tcontent: \"\\0377\";\n}\n\n%icon-font-chess-heart:before {\n\tcontent: \"\\1F2F\";\n}\n\n%icon-font-chess-vk:before {\n\tcontent: \"\\1F72\";\n}\n\n%icon-font-chess-tiktok:before {\n\tcontent: \"\\1FB0\";\n}\n\n%icon-font-chess-membership-diamond:before {\n\tcontent: \"\\0370\";\n}\n\n%icon-font-chess-membership-platinum:before {\n\tcontent: \"\\0376\";\n}\n\n%icon-font-chess-membership-mod:before,\n%icon-font-chess-membership-staff:before {\n\tcontent: \"\\0372\";\n}\n\n%icon-font-chess-membership-gold:before {\n\tcontent: \"\\03AE\";\n}\n\n%icon-font-chess-circle-hollow:before {\n\tcontent: \"\\03BD\";\n}\n\n%icon-font-chess-binoculars-crossed:before {\n\tcontent: \"\\00DE\";\n}\n\n%icon-font-chess-border-resize:before {\n\tcontent: \"\\03AC\";\n}\n\n%icon-font-chess-maximize:before {\n\tcontent: \"\\03DD\";\n}\n\n%icon-font-chess-minimize:before {\n\tcontent: \"\\03D8\";\n}\n\n%icon-font-chess-live:before {\n\tcontent: \"\\1F1B\";\n}\n\n%icon-font-chess-live960:before {\n\tcontent: \"\\00D1\";\n}\n\n%icon-font-chess-livematch:before {\n\tcontent: \"\\1F65\";\n}\n\n%icon-font-chess-live-bullet:before {\n\tcontent: \"\\1F1D\";\n}\n\n%icon-font-chess-live-standard:before {\n\tcontent: \"\\1F1C\";\n}\n\n%icon-font-chess-signal:before {\n\tcontent: \"\\03AF\";\n}\n\n%icon-font-chess-proleague:before {\n\tcontent: \"\\014B\";\n}\n\n%icon-font-chess-streamer:before {\n\tcontent: \"\\1F23\";\n}\n\n%icon-font-chess-bishop-white:before {\n\tcontent: \"\\00C4\";\n}\n\n%icon-font-chess-bishop-black:before {\n\tcontent: \"\\0102\";\n}\n\n%icon-font-chess-knight-white:before {\n\tcontent: \"\\0116\";\n}\n\n%icon-font-chess-knight-black:before {\n\tcontent: \"\\00C7\";\n}\n\n%icon-font-chess-rook-white:before {\n\tcontent: \"\\013B\";\n}\n\n%icon-font-chess-rook-black:before {\n\tcontent: \"\\013D\";\n}\n\n%icon-font-chess-king-white:before {\n\tcontent: \"\\0104\";\n}\n\n%icon-font-chess-king-black:before {\n\tcontent: \"\\0100\";\n}\n\n%icon-font-chess-queen-white:before {\n\tcontent: \"\\0136\";\n}\n\n%icon-font-chess-queen-black:before {\n\tcontent: \"\\012E\";\n}\n\n%icon-font-chess-pawn-white:before {\n\tcontent: \"\\0122\";\n}\n\n%icon-font-chess-pawn-black:before {\n\tcontent: \"\\0118\";\n}\n\n%icon-font-chess-shared-analysis:before {\n\tcontent: \"\\1F68\";\n}\n\n%icon-font-chess-boardexpand:before {\n\tcontent: \"\\1FA4\";\n}\n\n.dark-mode %icon-font-chess-bishop-white:before {\n\tcontent: \"\\0102\";\n}\n\n.dark-mode %icon-font-chess-bishop-black:before {\n\tcontent: \"\\00C4\";\n}\n\n.dark-mode %icon-font-chess-knight-white:before {\n\tcontent: \"\\00C7\";\n}\n\n.dark-mode %icon-font-chess-knight-black:before {\n\tcontent: \"\\0116\";\n}\n\n.dark-mode %icon-font-chess-rook-white:before {\n\tcontent: \"\\013D\";\n}\n\n.dark-mode %icon-font-chess-rook-black:before {\n\tcontent: \"\\013B\";\n}\n\n.dark-mode %icon-font-chess-king-white:before {\n\tcontent: \"\\0100\";\n}\n\n.dark-mode %icon-font-chess-king-black:before {\n\tcontent: \"\\0104\";\n}\n\n.dark-mode %icon-font-chess-queen-white:before {\n\tcontent: \"\\012E\";\n}\n\n.dark-mode %icon-font-chess-queen-black:before {\n\tcontent: \"\\0136\";\n}\n\n.dark-mode %icon-font-chess-pawn-white:before {\n\tcontent: \"\\0118\";\n}\n\n.dark-mode %icon-font-chess-pawn-black:before {\n\tcontent: \"\\0122\";\n}\n\n%icon-font-chess-bishop-stroke:before {\n\tcontent: \"\\00C4\";\n}\n\n%icon-font-chess-bishop-fill:before {\n\tcontent: \"\\0102\";\n}\n\n%icon-font-chess-knight-stroke:before {\n\tcontent: \"\\0116\";\n}\n\n%icon-font-chess-knight-fill:before {\n\tcontent: \"\\00C7\";\n}\n\n%icon-font-chess-rook-stroke:before {\n\tcontent: \"\\013B\";\n}\n\n%icon-font-chess-rook-fill:before {\n\tcontent: \"\\013D\";\n}\n\n%icon-font-chess-king-stroke:before {\n\tcontent: \"\\0104\";\n}\n\n%icon-font-chess-king-fill:before {\n\tcontent: \"\\0100\";\n}\n\n%icon-font-chess-queen-stroke:before {\n\tcontent: \"\\0136\";\n}\n\n%icon-font-chess-queen-fill:before {\n\tcontent: \"\\012E\";\n}\n\n%icon-font-chess-pawn-stroke:before {\n\tcontent: \"\\0122\";\n}\n\n%icon-font-chess-pawn-fill:before {\n\tcontent: \"\\0118\";\n}\n\n%icon-font-chess-zero:before {\n\tcontent: \"\\0030\";\n}\n\n%icon-font-chess-one:before {\n\tcontent: \"\\0031\";\n}\n\n%icon-font-chess-two:before {\n\tcontent: \"\\0032\";\n}\n\n%icon-font-chess-three:before {\n\tcontent: \"\\0033\";\n}\n\n%icon-font-chess-four:before {\n\tcontent: \"\\0034\";\n}\n\n%icon-font-chess-five:before {\n\tcontent: \"\\0035\";\n}\n\n%icon-font-chess-six:before {\n\tcontent: \"\\0036\";\n}\n\n%icon-font-chess-seven:before {\n\tcontent: \"\\0037\";\n}\n\n%icon-font-chess-eight:before {\n\tcontent: \"\\0038\";\n}\n\n%icon-font-chess-nine:before {\n\tcontent: \"\\0039\";\n}\n\n%icon-font-chess-colon:before {\n\tcontent: \"\\003A\";\n}\n\n%icon-font-chess-period:before {\n\tcontent: \"\\002E\";\n}\n\n%icon-font-chess-matetag:before {\n\tcontent: \"\\1F92\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-display-slider:before {\n\tcontent: \"\\203A\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-filter:before {\n\tcontent: \"\\2039\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-nav-expanded:before {\n\tcontent: \"\\03E0\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-nav-collapsed:before {\n\tcontent: \"\\03E1\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-arrow-up:before {\n\tcontent: \"\\007B\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-arrow-down:before {\n\tcontent: \"\\007D\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-chevron-up:before {\n\tcontent: \"\\003C\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-chevron-bottom:before {\n\tcontent: \"\\003E\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-thumbs-down:before {\n\tcontent: \"\\2264\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-thumbs-up:before {\n\tcontent: \"\\2265\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-chevron-left:before {\n\tcontent: \"\\2026\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-chevron-right:before {\n\tcontent: \"\\002C\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-circle-question:before {\n\tcontent: \"\\0029\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-circle-info:before {\n\tcontent: \"\\0028\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-caret-left:before {\n\tcontent: \"\\005C\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-caret-right:before {\n\tcontent: \"\\002F\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-double-chevron-left:before {\n\tcontent: \"\\03B1\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-double-chevron-right:before {\n\tcontent: \"\\0021\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-chess-board-circle:before {\n\tcontent: \"\\00BB\";\n}\n\nhtml[dir=\"rtl\"] %icon-font-chess-pushpin:before {\n\tcontent: \"\\00AB\";\n}\n\n%icon-font-chess-daily:before {\n\tcontent: \"\\1F1A\";\n}\n\n%icon-font-chess-circle-timer:before,\n%icon-font-chess-rapid:before {\n\tcontent: \"\\1F1B\";\n}\n\n%icon-font-chess-chess-board-puzzle-reversed:before {\n\tcontent: \"\\03DE\";\n}\n\n%icon-font-chess-standard:before {\n\tcontent: \"\\0069\";\n}\n\n%icon-font-chess-blitz:before,\n%icon-font-chess-lightning:before {\n\tcontent: \"\\1F1C\";\n}\n\n%icon-font-chess-crossed-swords:before {\n\tcontent: \"\\03C4\";\n}\n","@mixin scrollbar($width, $thumbColor: #555, $trackColor: #f5f5f5) {\n\tscrollbar-width: $width;\n\tscrollbar-color: $thumbColor $trackColor;\n\n\t&::-webkit-scrollbar-track,\n\t&::-webkit-scrollbar-thumb {\n\t\tbox-shadow: inset 0 0 ($width + 2px) rgba($color: #000000, $alpha: 0.3);\n\t\t-webkit-box-shadow: inset 0 0 ($width + 2px) rgba($color: #000000, $alpha: 0.3);\n\t\tborder-radius: 7px;\n\t}\n\n\t&::-webkit-scrollbar {\n\t\twidth: $width;\n\t}\n\n\t&::-webkit-scrollbar-thumb {\n\t\tbackground-color: $thumbColor;\n\t}\n\n\t&::-webkit-scrollbar-track {\n\t\tbackground-color: $trackColor;\n\t}\n}\n\n@mixin alternatingBoardColors($firstColor, $secondColor, $deeperElement: null, $property: \"background-color\") {\n\t@if ($deeperElement) {\n\t\t&:nth-child(odd)>*:nth-child(odd) #{$deeperElement},\n\t\t&:nth-child(even)>*:nth-child(even) #{$deeperElement} {\n\t\t\t#{$property}: $firstColor;\n\t\t}\n\n\t\t&:nth-child(odd)>*:nth-child(even) #{$deeperElement},\n\t\t&:nth-child(even)>*:nth-child(odd) #{$deeperElement} {\n\t\t\t#{$property}: $secondColor;\n\t\t}\n\t} @else {\n\t\t&:nth-child(odd)>*:nth-child(odd),\n\t\t&:nth-child(even)>*:nth-child(even) {\n\t\t\t#{$property}: $firstColor;\n\t\t}\n\n\t\t&:nth-child(odd)>*:nth-child(even),\n\t\t&:nth-child(even)>*:nth-child(odd) {\n\t\t\t#{$property}: $secondColor;\n\t\t}\n\t}\n}\n\n@mixin occupyAbsoluteSize {\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\tright: 0;\n\tbottom: 0;\n}\n\n@mixin button {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tpadding: 0.5rem 1.2rem;\n\tbackground: hsla(0, 0%, 100%, 0.08);\n\tcolor: #e2e2e2;\n\tborder-radius: 6%;\n\tborder: none;\n}\n\n@mixin iconSize($size: null, $adaptive: false) {\n\t@if ($size) {\n\t\tfont-size: $size;\n\n\t\t@if (not $adaptive) {\n\t\t\twidth: $size;\n\t\t\theight: $size;\n\t\t\tline-height: 1;\n\t\t}\n\t} @else {\n\t\tfont-size: 2rem;\n\t\twidth: 2rem;\n\t\theight: 2rem;\n\t}\n\n\tfont-family: \"ChessGlyph New\";\n}\n\n@mixin tooltip {\n\tdisplay: block;\n\tmax-width: 25rem;\n\tpadding: 0.5rem;\n\tfont-weight: 500;\n\tfont-size: 1.1rem;\n\tword-break: break-word;\n\toverflow-wrap: break-word;\n}\n","$lightContentColor: hsla(0, 0%, 100%, 0.65);\n$boardComponentWhiteColor: #e2e2e2;\n$boardComponentDarkColor: #322e2b;\n$activeColor: #7fa650;\n\n$boardComponentFont: \"Segoe UI\";\n"],"sourceRoot":""}]);
// Exports
___CSS_LOADER_EXPORT___.locals = {
	"fen-data__futer-to-move": "GameController-module-fen-data__futer-to-move",
	"time-control-display__icon--hyperbullet": "GameController-module-time-control-display__icon--hyperbullet",
	"time-control-display__icon--rapid": "GameController-module-time-control-display__icon--rapid",
	"time-control-display__icon--bullet": "GameController-module-time-control-display__icon--bullet",
	"time-control-display__icon--blitz": "GameController-module-time-control-display__icon--blitz",
	"game-control-root": "GameController-module-game-control-root",
	"game-control-wrap": "GameController-module-game-control-wrap",
	"game-board-wrap": "GameController-module-game-board-wrap",
	"game-board-sidebar": "GameController-module-game-board-sidebar",
	"fen-data": "GameController-module-fen-data",
	"fen-data__side-to-move": "GameController-module-fen-data__side-to-move",
	"fen-data__side-to-move-wrap": "GameController-module-fen-data__side-to-move-wrap",
	"fen-data__futer-to-move--active": "GameController-module-fen-data__futer-to-move--active",
	"fen-data__pgn-button-list": "GameController-module-fen-data__pgn-button-list",
	"fen-data__pgn-button": "GameController-module-fen-data__pgn-button",
	"fen-data__pgn-button-wrap": "GameController-module-fen-data__pgn-button-wrap",
	"fen-data__pgn-button--fog-of-war": "GameController-module-fen-data__pgn-button--fog-of-war",
	"fen-data__pgn-button--claim-win": "GameController-module-fen-data__pgn-button--claim-win",
	"fen-data__pgn-button--claim-win__text": "GameController-module-fen-data__pgn-button--claim-win__text",
	"fen-data__pgn-button__change-perspective-icon": "GameController-module-fen-data__pgn-button__change-perspective-icon",
	"fen-data__pgn-button__description": "GameController-module-fen-data__pgn-button__description",
	"fen-data__pgn-button--icon-button": "GameController-module-fen-data__pgn-button--icon-button",
	"fen-data__pgn-button__icon": "GameController-module-fen-data__pgn-button__icon",
	"fen-data__pgn-box": "GameController-module-fen-data__pgn-box",
	"metadata-display": "GameController-module-metadata-display",
	"metadata-display__game-details": "GameController-module-metadata-display__game-details",
	"time-control-display": "GameController-module-time-control-display",
	"time-control-display__icon": "GameController-module-time-control-display__icon"
};
/* harmony default export */ __webpack_exports__["Z"] = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 36773:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60445);
/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(60352);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".PercentageDisplay-module-checkbox-list{display:flex;margin-top:1.5rem;margin-bottom:1.5rem;list-style-type:none;padding-left:0}.PercentageDisplay-module-sections{display:flex;width:80%}.PercentageDisplay-module-section{position:relative;display:flex;width:auto;align-items:center;justify-content:center;height:2rem;padding:0 .4rem;font-size:1rem;text-align:center;cursor:pointer;box-shadow:0 0 5px rgba(33,33,33,.7);text-overflow:hidden;transition:all .3s ease-in}.PercentageDisplay-module-section--unchecked{width:0;padding:0;visibility:hidden;overflow:hidden}.PercentageDisplay-module-section__tooltip{opacity:1;transform:translate(-50%, 0)}.PercentageDisplay-module-section--unchecked .PercentageDisplay-module-section__tooltip{display:block;max-width:25rem;padding:.5rem;font-weight:500;font-size:1.1rem;word-break:break-word;overflow-wrap:break-word;position:absolute;left:50%;bottom:100%;opacity:0;margin-bottom:.4rem;background-color:#322e2b;color:#e2e2e2;line-height:1.6;text-align:center;white-space:nowrap;transform:translate(-50%, 0.4rem);transition:all .15s ease-in-out}.PercentageDisplay-module-section--unchecked .PercentageDisplay-module-section__tooltip::before{content:\"\";position:absolute;top:100%;left:50%;width:0;height:0;border:.5em solid rgba(0,0,0,0);border-top-color:#000;transform:translate(-50%, 0)}.PercentageDisplay-module-section__text{font-weight:bold;font-size:1.4rem}.PercentageDisplay-module-checkbox-wrap{margin-right:1.2rem}.PercentageDisplay-module-checkbox{display:flex;justify-content:center;align-items:center;margin-right:1em;width:18px;height:18px;box-sizing:border-box;background:rgba(0,0,0,0);border:2px solid #9e9e9e;border-radius:2px;cursor:pointer;transition:all 250ms cubic-bezier(0.4, 0, 0.23, 1)}.PercentageDisplay-module-checkbox--checked{border-width:9px;border-style:solid;border-color:inherit;animation:PercentageDisplay-module-shrink-bounce 200ms cubic-bezier(0.4, 0, 0.23, 1)}.PercentageDisplay-module-fake-checkbox{display:none}.PercentageDisplay-module-fake-checkbox-label{display:block;width:18px}.PercentageDisplay-module-fake-checkbox-label--disabled{display:none}@keyframes PercentageDisplay-module-shrink-bounce{0%{transform:scale(1)}33%{transform:scale(0.85)}100%{transform:scale(1)}}", "",{"version":3,"sources":["webpack://./src/main/client/ts/templates/PercentageDisplay/PercentageDisplay.module.scss","webpack://./src/main/client/scss/Mixins.scss","webpack://./src/main/client/scss/Colors.scss"],"names":[],"mappings":"AAEA,wCACC,YAAA,CACA,iBAAA,CACA,oBAAA,CACA,oBAAA,CACA,cAAA,CAGD,mCACC,YAAA,CACA,SAAA,CAGD,kCACC,iBAAA,CACA,YAAA,CACA,UAAA,CACA,kBAAA,CACA,sBAAA,CACA,WAAA,CACA,eAAA,CACA,cAAA,CACA,iBAAA,CACA,cAAA,CACA,oCAAA,CACA,oBAAA,CACA,0BAAA,CAEA,6CACC,OAAA,CACA,SAAA,CACA,iBAAA,CACA,eAAA,CAGD,2CACC,SAAA,CACA,4BAAA,CAGD,wFC4CA,aAAA,CACA,eAAA,CACA,aAAA,CACA,eAAA,CACA,gBAAA,CACA,qBAAA,CACA,wBAAA,CDhDC,iBAAA,CACA,QAAA,CACA,WAAA,CACA,SAAA,CACA,mBAAA,CACA,wBE/CwB,CFgDxB,aEjDyB,CFkDzB,eAAA,CACA,iBAAA,CACA,kBAAA,CACA,iCAAA,CACA,+BAAA,CAEA,gGACC,UAAA,CACA,iBAAA,CACA,QAAA,CACA,QAAA,CACA,OAAA,CACA,QAAA,CACA,+BAAA,CACA,qBAAA,CACA,4BAAA,CAIF,wCACC,gBAAA,CACA,gBAAA,CAIF,wCACC,mBAAA,CAGD,mCACC,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,gBAAA,CACA,UAAA,CACA,WAAA,CACA,qBAAA,CACA,wBAAA,CACA,wBAAA,CACA,iBAAA,CACA,cAAA,CACA,kDAAA,CAEA,4CACC,gBAAA,CACA,kBAAA,CACA,oBAAA,CACA,oFAAA,CAIF,wCACC,YAAA,CAEA,8CACC,aAAA,CACA,UAAA,CAEA,wDACC,YAAA,CAKH,kDACC,GACC,kBAAA,CAGD,IACC,qBAAA,CAGD,KACC,kBAAA,CAAA","sourcesContent":["@use \"../../index\";\n\n.checkbox-list {\n\tdisplay: flex;\n\tmargin-top: 1.5rem;\n\tmargin-bottom: 1.5rem;\n\tlist-style-type: none;\n\tpadding-left: 0;\n}\n\n.sections {\n\tdisplay: flex;\n\twidth: 80%;\n}\n\n.section {\n\tposition: relative;\n\tdisplay: flex;\n\twidth: auto;\n\talign-items: center;\n\tjustify-content: center;\n\theight: 2rem;\n\tpadding: 0 0.4rem;\n\tfont-size: 1rem;\n\ttext-align: center;\n\tcursor: pointer;\n\tbox-shadow: 0 0 5px rgba(33, 33, 33, 0.7);\n\ttext-overflow: hidden;\n\ttransition: all 0.3s ease-in;\n\n\t&--unchecked {\n\t\twidth: 0;\n\t\tpadding: 0;\n\t\tvisibility: hidden;\n\t\toverflow: hidden;\n\t}\n\n\t&__tooltip {\n\t\topacity: 1;\n\t\ttransform: translate(-50%, 0);\n\t}\n\n\t&--unchecked #{&}__tooltip {\n\t\t@include index.tooltip;\n\t\tposition: absolute;\n\t\tleft: 50%;\n\t\tbottom: 100%;\n\t\topacity: 0;\n\t\tmargin-bottom: 0.4rem;\n\t\tbackground-color: index.$boardComponentDarkColor;\n\t\tcolor: index.$boardComponentWhiteColor;\n\t\tline-height: 1.6;\n\t\ttext-align: center;\n\t\twhite-space: nowrap;\n\t\ttransform: translate(-50%, 0.4rem);\n\t\ttransition: all 0.15s ease-in-out;\n\n\t\t&::before {\n\t\t\tcontent: \"\";\n\t\t\tposition: absolute;\n\t\t\ttop: 100%;\n\t\t\tleft: 50%;\n\t\t\twidth: 0;\n\t\t\theight: 0;\n\t\t\tborder: 0.5em solid transparent;\n\t\t\tborder-top-color: #000;\n\t\t\ttransform: translate(-50%, 0);\n\t\t}\n\t}\n\n\t&__text {\n\t\tfont-weight: bold;\n\t\tfont-size: 1.4rem;\n\t}\n}\n\n.checkbox-wrap {\n\tmargin-right: 1.2rem;\n}\n\n.checkbox {\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tmargin-right: 1em;\n\twidth: 18px;\n\theight: 18px;\n\tbox-sizing: border-box;\n\tbackground: transparent;\n\tborder: 2px solid #9e9e9e;\n\tborder-radius: 2px;\n\tcursor: pointer;\n\ttransition: all 250ms cubic-bezier(0.4, 0, 0.23, 1);\n\n\t&--checked {\n\t\tborder-width: 9px;\n\t\tborder-style: solid;\n\t\tborder-color: inherit;\n\t\tanimation: shrink-bounce 200ms cubic-bezier(0.4, 0, 0.23, 1);\n\t}\n}\n\n.fake-checkbox {\n\tdisplay: none;\n\n\t&-label {\n\t\tdisplay: block;\n\t\twidth: 18px;\n\n\t\t&--disabled {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n}\n\n@keyframes shrink-bounce {\n\t0% {\n\t\ttransform: scale(1);\n\t}\n\n\t33% {\n\t\ttransform: scale(0.85);\n\t}\n\n\t100% {\n\t\ttransform: scale(1);\n\t}\n}\n","@mixin scrollbar($width, $thumbColor: #555, $trackColor: #f5f5f5) {\n\tscrollbar-width: $width;\n\tscrollbar-color: $thumbColor $trackColor;\n\n\t&::-webkit-scrollbar-track,\n\t&::-webkit-scrollbar-thumb {\n\t\tbox-shadow: inset 0 0 ($width + 2px) rgba($color: #000000, $alpha: 0.3);\n\t\t-webkit-box-shadow: inset 0 0 ($width + 2px) rgba($color: #000000, $alpha: 0.3);\n\t\tborder-radius: 7px;\n\t}\n\n\t&::-webkit-scrollbar {\n\t\twidth: $width;\n\t}\n\n\t&::-webkit-scrollbar-thumb {\n\t\tbackground-color: $thumbColor;\n\t}\n\n\t&::-webkit-scrollbar-track {\n\t\tbackground-color: $trackColor;\n\t}\n}\n\n@mixin alternatingBoardColors($firstColor, $secondColor, $deeperElement: null, $property: \"background-color\") {\n\t@if ($deeperElement) {\n\t\t&:nth-child(odd)>*:nth-child(odd) #{$deeperElement},\n\t\t&:nth-child(even)>*:nth-child(even) #{$deeperElement} {\n\t\t\t#{$property}: $firstColor;\n\t\t}\n\n\t\t&:nth-child(odd)>*:nth-child(even) #{$deeperElement},\n\t\t&:nth-child(even)>*:nth-child(odd) #{$deeperElement} {\n\t\t\t#{$property}: $secondColor;\n\t\t}\n\t} @else {\n\t\t&:nth-child(odd)>*:nth-child(odd),\n\t\t&:nth-child(even)>*:nth-child(even) {\n\t\t\t#{$property}: $firstColor;\n\t\t}\n\n\t\t&:nth-child(odd)>*:nth-child(even),\n\t\t&:nth-child(even)>*:nth-child(odd) {\n\t\t\t#{$property}: $secondColor;\n\t\t}\n\t}\n}\n\n@mixin occupyAbsoluteSize {\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\tright: 0;\n\tbottom: 0;\n}\n\n@mixin button {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tpadding: 0.5rem 1.2rem;\n\tbackground: hsla(0, 0%, 100%, 0.08);\n\tcolor: #e2e2e2;\n\tborder-radius: 6%;\n\tborder: none;\n}\n\n@mixin iconSize($size: null, $adaptive: false) {\n\t@if ($size) {\n\t\tfont-size: $size;\n\n\t\t@if (not $adaptive) {\n\t\t\twidth: $size;\n\t\t\theight: $size;\n\t\t\tline-height: 1;\n\t\t}\n\t} @else {\n\t\tfont-size: 2rem;\n\t\twidth: 2rem;\n\t\theight: 2rem;\n\t}\n\n\tfont-family: \"ChessGlyph New\";\n}\n\n@mixin tooltip {\n\tdisplay: block;\n\tmax-width: 25rem;\n\tpadding: 0.5rem;\n\tfont-weight: 500;\n\tfont-size: 1.1rem;\n\tword-break: break-word;\n\toverflow-wrap: break-word;\n}\n","$lightContentColor: hsla(0, 0%, 100%, 0.65);\n$boardComponentWhiteColor: #e2e2e2;\n$boardComponentDarkColor: #322e2b;\n$activeColor: #7fa650;\n\n$boardComponentFont: \"Segoe UI\";\n"],"sourceRoot":""}]);
// Exports
___CSS_LOADER_EXPORT___.locals = {
	"checkbox-list": "PercentageDisplay-module-checkbox-list",
	"sections": "PercentageDisplay-module-sections",
	"section": "PercentageDisplay-module-section",
	"section--unchecked": "PercentageDisplay-module-section--unchecked",
	"section__tooltip": "PercentageDisplay-module-section__tooltip",
	"section__text": "PercentageDisplay-module-section__text",
	"checkbox-wrap": "PercentageDisplay-module-checkbox-wrap",
	"checkbox": "PercentageDisplay-module-checkbox",
	"checkbox--checked": "PercentageDisplay-module-checkbox--checked",
	"shrink-bounce": "PercentageDisplay-module-shrink-bounce",
	"fake-checkbox": "PercentageDisplay-module-fake-checkbox",
	"fake-checkbox-label": "PercentageDisplay-module-fake-checkbox-label",
	"fake-checkbox-label--disabled": "PercentageDisplay-module-fake-checkbox-label--disabled"
};
/* harmony default export */ __webpack_exports__["Z"] = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 3707:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60445);
/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(60352);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".Sidebar-module-sidebar{width:450px;float:right;clear:right;margin-left:1.5rem}", "",{"version":3,"sources":["webpack://./src/main/client/ts/templates/Sidebar/Sidebar.module.scss"],"names":[],"mappings":"AAAA,wBACC,WAAA,CACA,WAAA,CACA,WAAA,CACA,kBAAA","sourcesContent":[".sidebar {\n\twidth: 450px;\n\tfloat: right;\n\tclear: right;\n\tmargin-left: 1.5rem;\n}\n"],"sourceRoot":""}]);
// Exports
___CSS_LOADER_EXPORT___.locals = {
	"sidebar": "Sidebar-module-sidebar"
};
/* harmony default export */ __webpack_exports__["Z"] = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 70026:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/5184bb966abdd8fdc415382209b9c2a3.svg");

/***/ }),

/***/ 3323:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/f0680395d351d4594377ccbac83db87c.svg");

/***/ }),

/***/ 31451:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/f39979ff9dde204d4bb86aeb41069b7b.svg");

/***/ }),

/***/ 93244:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/c2ae82785f94a968a09805983dffdf21.svg");

/***/ }),

/***/ 90698:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/87a518b991dca681d33d39efd7230e21.svg");

/***/ }),

/***/ 74027:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/87529e7c57b51fcc13d0e2b7bd168484.svg");

/***/ }),

/***/ 69756:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/1de3cfd03ff1d23aa6da5d27d314b7a8.svg");

/***/ }),

/***/ 2938:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/b2f353bbe7e595c803743d83bbecd17f.svg");

/***/ }),

/***/ 59364:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/d7411f46129f23dedc807d1356dd2a90.svg");

/***/ }),

/***/ 85679:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/b858d8bf9eb5dd6f7d8481aad097f8fe.svg");

/***/ }),

/***/ 80055:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/4c98a24b54261267c02b5e9837a913b1.svg");

/***/ }),

/***/ 61433:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/1f79543a51b1ab5f3707a95320b1010a.svg");

/***/ }),

/***/ 65780:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/34d9db025ceceeab0fe6b6b592b3cd97.svg");

/***/ }),

/***/ 87950:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/d6f0f3adb911cceed7db057fcaf26af9.svg");

/***/ }),

/***/ 95871:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/e30359650c1545e9b05e71413c1801da.svg");

/***/ }),

/***/ 80506:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/ceb1a77d5b1b7f9d2f1c6d50dd4c95a8.svg");

/***/ }),

/***/ 23317:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/c55abbf4b7a56d0d74caa79463cdb307.svg");

/***/ }),

/***/ 15807:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/1fb009873bef0498d96f45cefd327f74.svg");

/***/ }),

/***/ 78012:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/12c727d2a24319b0f59666bc89194db5.svg");

/***/ }),

/***/ 28784:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/2df02b7c876233ec64e6fb7fa9ae8f11.svg");

/***/ }),

/***/ 37968:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/ae3e323f11585a7a3a6cb35b09d9a384.svg");

/***/ }),

/***/ 13542:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/b32a5be6c236a925e697a07cd56242d9.svg");

/***/ }),

/***/ 86322:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/9e987758cd7aac029cde92edf933ea19.svg");

/***/ }),

/***/ 19541:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/3f588b1b73e830b2daf691b18f9914f5.svg");

/***/ }),

/***/ 48569:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/30f859eeb50be0aaadb48be6fb963406.svg");

/***/ }),

/***/ 9689:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/e9bfd6a5983a7ef5fc952a1543a714ff.svg");

/***/ }),

/***/ 64245:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/afc299b5ae1ed8d3b8689b8b83c5072a.svg");

/***/ }),

/***/ 53870:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/7a44f6057e8d440c8d2c83c9ecf6e92b.svg");

/***/ }),

/***/ 47:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/6b977f1d5842ac8a9098da9ab8538586.svg");

/***/ }),

/***/ 57760:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/df801a23e3284e8ac60c8d98b05d0d8b.svg");

/***/ }),

/***/ 63993:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/996bdc088102a77d3800fb5b8b01a3c3.svg");

/***/ }),

/***/ 14981:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/a111e693884305642440759970347586.svg");

/***/ }),

/***/ 6657:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/d5dcd5638e44dd3cb82232c8fce0ef2e.svg");

/***/ }),

/***/ 29067:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/ccbb720d691430e114d869696cd0a366.svg");

/***/ }),

/***/ 98681:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/1dc4fe10de13a49595f466922eed2de6.svg");

/***/ }),

/***/ 11304:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/46c0079a104a66e8e0f79571eda48283.svg");

/***/ }),

/***/ 42416:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/00961dda7a0350591f69cd56f3e22811.svg");

/***/ }),

/***/ 6292:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/6f1de57855393555fe957e43d67c4374.svg");

/***/ }),

/***/ 15939:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/3d67cb5f44d992659b101a8f67e8400e.svg");

/***/ }),

/***/ 56485:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/81c87de02094495fb80b1aad5483d06d.svg");

/***/ }),

/***/ 68177:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/e45eb1516e4b137b6ced33c87736f016.svg");

/***/ }),

/***/ 95270:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/3cd4d878476da8f0f528a2ee0e9137a1.svg");

/***/ }),

/***/ 45041:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/3b09f6422c121def6fb8cd22d322da9e.svg");

/***/ }),

/***/ 41267:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/9949dbaf64a8c07655e6b50f8d749510.svg");

/***/ }),

/***/ 89187:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/21e84d20fb8bfe7d90a8edc94668d52e.svg");

/***/ }),

/***/ 48380:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/a33aea6ffe188319ab091bce4814d01c.svg");

/***/ }),

/***/ 42151:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/bcdab86963d1eb0abec3a5fe0510e446.svg");

/***/ }),

/***/ 59638:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/526b442eb964924ade3883463e823f45.svg");

/***/ }),

/***/ 76613:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/d34f27ced903d61eece7beec1bd0415e.svg");

/***/ }),

/***/ 5828:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/0b0c2c3b71c8a8591ce63e00e57443a5.svg");

/***/ }),

/***/ 3649:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/d9e84e364a688f7a95cafa78fcd7925b.svg");

/***/ }),

/***/ 79319:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/b00a1831afb75fde7da5a0db0e8d6600.svg");

/***/ }),

/***/ 34578:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/5d1e7f89d6f603dd3ef2406c8064e0aa.svg");

/***/ }),

/***/ 60819:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/3bd676e122254b1fcad64153e67d06e3.svg");

/***/ }),

/***/ 81127:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/176982870506c162d3157f50137fbcd3.svg");

/***/ }),

/***/ 84625:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/d37aace10e5cb4456a752a763d6e7f57.svg");

/***/ }),

/***/ 3591:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/7d582e4f1220f0a3a862c0818d2237d1.svg");

/***/ }),

/***/ 84508:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/53bf094308755b3e9a552f28e5e3d15c.svg");

/***/ }),

/***/ 29053:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/0d7d20422276a10e1f92779486d68b33.svg");

/***/ }),

/***/ 62305:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/324e3ad8f0b739342531e023346e5b9e.svg");

/***/ }),

/***/ 80919:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/9d9d1ddc1918d57cc902020c89904327.svg");

/***/ }),

/***/ 50162:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/6b977f1d5842ac8a9098da9ab8538586.svg");

/***/ }),

/***/ 6017:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/3905da31e342a477ac63c807969f230f.svg");

/***/ }),

/***/ 90977:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/3eea2fc6e1f7a9223068544885459023.svg");

/***/ }),

/***/ 96937:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/bd447b3ea5771ec2f0f69ddf7f050679.svg");

/***/ }),

/***/ 85314:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/99bf26571606b6c003ee6cf867253500.svg");

/***/ }),

/***/ 67783:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/208dd6e1e5380409e62a8d8b29fcaac1.png");

/***/ }),

/***/ 53009:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/6be351d89610e07c81342f4320791927.png");

/***/ }),

/***/ 29850:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/783f5348ccc755a4242b99365ed56322.png");

/***/ }),

/***/ 77149:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/ab29bcedb561f2f09c22159cbf4b0172.png");

/***/ }),

/***/ 5090:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/49fe3b09737b0238a33c3086b4660b00.png");

/***/ }),

/***/ 13601:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/cfe51aaa42c21a3542f12cf3038f26b9.png");

/***/ }),

/***/ 91523:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/05b2c5c7639b3bce64ec1c580dff23a1.png");

/***/ }),

/***/ 96298:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/231b79099307b589e46fd9765cb55023.png");

/***/ }),

/***/ 72277:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/4c15f50c14f6a48637844c6b64e8d2cc.png");

/***/ }),

/***/ 82121:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/95c602e4469254589dadfe10f3ebf8d5.png");

/***/ }),

/***/ 54475:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/8bd668eeb29bb8acacce5e9bff5b5090.png");

/***/ }),

/***/ 99841:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/4d88bda7f11acc0a05cbbc6ef1ffa46a.png");

/***/ }),

/***/ 59403:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/45b9228c0723e536ac6588ed3b730dee.png");

/***/ }),

/***/ 74521:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/7512a52565b4cf90b7c41f7ee8eb850d.png");

/***/ }),

/***/ 26397:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/f5b6de206881c973fff2e78fed24ebde.png");

/***/ }),

/***/ 94476:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/d961672252af7fd20ead25d83e6cfdee.png");

/***/ }),

/***/ 74605:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/ff9fd223e17fd750d983efd2f8059109.png");

/***/ }),

/***/ 32302:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/bd345c8a2801815c9b5c0fb2253e6f41.png");

/***/ }),

/***/ 94907:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/b5a084ac8ff05a968b9665d053859a87.png");

/***/ }),

/***/ 76986:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/8a132c3d06c706edcd9c860704aed630.png");

/***/ }),

/***/ 55541:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/b5b1a7b3707e8bf0edb2ad095b818015.png");

/***/ }),

/***/ 62244:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/4d19791b51725aee754d3e7663613e39.png");

/***/ }),

/***/ 86073:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/8ce39e785e36655acd8d1b614626cf95.png");

/***/ }),

/***/ 61656:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/af47d1b9e16e7e9506c5f7c1e1bb5e4c.png");

/***/ }),

/***/ 62737:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/38a631be348e445d4b92f87d3a6b9a67.png");

/***/ }),

/***/ 22451:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/686a3884e9ebeea7653218acde901c12.png");

/***/ }),

/***/ 95315:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/06b99404ff8cf04a00deb5ce209cbd72.png");

/***/ }),

/***/ 45723:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/5a4bb5a7bca7dd0ce17eea148eb3cf2c.png");

/***/ }),

/***/ 35259:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/c09d7a471ba1f8e0886dd8204415c88f.png");

/***/ }),

/***/ 56362:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/a4a510b448e76f751033004a348cfb8a.png");

/***/ }),

/***/ 39205:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/0a1a6c58c4fc24e3674fa816a7a4a85e.png");

/***/ }),

/***/ 53480:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/5349e966ab670c6acc6d44c72028be95.png");

/***/ }),

/***/ 91140:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/ef8fb01a870e32745a3a9d63172b6b7e.png");

/***/ }),

/***/ 19288:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/0c2d869dd41b4c3c0008900c5c376afc.png");

/***/ }),

/***/ 98759:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/dbc8b4842deff1bed285b6f1c0b4bb20.png");

/***/ }),

/***/ 34033:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/38c2bac99bd2428abfc76ea4c02115c6.png");

/***/ }),

/***/ 4397:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/78a322c34a762d858911dfa1abcfab03.png");

/***/ }),

/***/ 98920:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/ab408d89fa2a7d439dfa37532cd016ce.png");

/***/ }),

/***/ 34222:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/b9c70296c3541307a78cf2b931473265.png");

/***/ }),

/***/ 72204:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/b1edeb734e49f67ac5c41b0dee39a7c7.png");

/***/ }),

/***/ 80779:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/812c3229365a41f956b9826a4cc70c4b.png");

/***/ }),

/***/ 72568:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/1737ef8355bb7a9a4d7b69eab3213e9c.png");

/***/ }),

/***/ 35530:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/bbaeda675d2f7bda873ffe9034db5a37.png");

/***/ }),

/***/ 87804:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/0da169590e60775afe5cbed3de8d8ac9.png");

/***/ }),

/***/ 36048:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/521495c463e3b09076fdea702aad17ed.png");

/***/ }),

/***/ 25257:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/40c6bdec3aafa8722e276f97afdb93ff.png");

/***/ }),

/***/ 46776:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/73a790bef51e62dbcc38554ab052c503.png");

/***/ }),

/***/ 18704:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/a5b1b96d31409f7c54158391fbdc9a11.png");

/***/ }),

/***/ 45992:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/767fdaec9cbbe1210e44ab2d4412d635.png");

/***/ }),

/***/ 60277:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/8a18ae958f9f63a8f45b8c13d15be4bc.png");

/***/ }),

/***/ 43217:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/d1d530ca7ade822c76b274d99cedbeb5.png");

/***/ }),

/***/ 66915:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/2787dffccac34e9e77ec6e432b472c39.png");

/***/ }),

/***/ 43819:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/b73e0811a7fdf2954b5300b10b070517.png");

/***/ }),

/***/ 81363:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/f0397a6f9db7441ee17ee7dcaa9aa934.png");

/***/ }),

/***/ 82787:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/5f7d1ad67b3a4c8721d1480e131dc4c1.png");

/***/ }),

/***/ 68900:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/e299e29323956468f342d48aa8f5a947.png");

/***/ }),

/***/ 6145:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/78914f830f3c32a707ca1f50092b79fa.png");

/***/ }),

/***/ 75274:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/d01ebef099377878c2f215b8ad61c65e.png");

/***/ }),

/***/ 51784:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/941f74a8e36d9b6da6d9ecfd3d9904b7.png");

/***/ }),

/***/ 71445:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/aa157d0de1ccec50b27eccae4712f664.png");

/***/ }),

/***/ 28358:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/11056bc9169f2b40184e0dc9832f6891.png");

/***/ }),

/***/ 52017:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/c2da3183ed9a1932e0f6b99d65e051d3.png");

/***/ }),

/***/ 67289:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/8aa8b278a48509b2d59ce8d66584d06d.png");

/***/ }),

/***/ 60084:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/28c5597a7e373a2bbf614aab05d70b26.png");

/***/ }),

/***/ 74844:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/46b415ce6134d7af86b5930cf2449fce.png");

/***/ }),

/***/ 12789:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/bb69bf64b06a8e6505c0ed87cea8d72b.png");

/***/ }),

/***/ 52662:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/a3611f61befd4cdc3a03a38addd07a9f.png");

/***/ }),

/***/ 90659:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/9ba4da569495e167c08e1ec10e66a70e.png");

/***/ }),

/***/ 33299:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/1964ae31c77a5401b6046b53ccd7ab91.png");

/***/ }),

/***/ 69853:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/e6cd2c2f6c20e88eab63b4be092e9870.png");

/***/ }),

/***/ 29158:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/ed1b7b25bda86f5f05cd09e642c98368.png");

/***/ }),

/***/ 71530:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/751707b3d8d229dc5383e25a4960db06.png");

/***/ }),

/***/ 996:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/451254b5df79641e22d7007d42b8fea0.png");

/***/ }),

/***/ 20518:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/becd28a127e86593eb8d80b295dc31bb.png");

/***/ }),

/***/ 73277:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/9f0325f50a1701258ceede501bcb12b1.png");

/***/ }),

/***/ 51135:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/ca4b77ad73be591a6954ed59a7f64174.png");

/***/ }),

/***/ 19597:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/75f7ee2bcd0d0a4e1219b4ae12bc5863.png");

/***/ }),

/***/ 54254:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/c5882bb8b6ecd1dfc5c5e084dbc7c32c.png");

/***/ }),

/***/ 11226:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/f38d0d80deadced47aa165d9afea559b.png");

/***/ }),

/***/ 75385:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/d12a2a673b27df2a0ba24241c6cec52d.png");

/***/ }),

/***/ 17852:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/9a93f66c68c1b4fe5840ab29eae10a76.png");

/***/ }),

/***/ 49703:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/bcc4afaa52e34df65376f55262d8fce5.png");

/***/ }),

/***/ 94692:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/8b36d537863ced0d862013baffbc1963.png");

/***/ }),

/***/ 97370:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/29ade6b3a10ed82ad046d003fc9a739e.png");

/***/ }),

/***/ 45169:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/5f477d86120e85adb0b7a8aab9961369.png");

/***/ }),

/***/ 52407:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/31ae65bef2e8bda12befdf4fed12cee2.png");

/***/ }),

/***/ 28684:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/c747b90216d77e278c27e7afdd39438d.png");

/***/ }),

/***/ 99810:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/48591b18b1cd57e5c3e535894d7e9e94.png");

/***/ }),

/***/ 24601:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/eaf57f13bc68f7529a39d5f9f0f1b4b7.png");

/***/ }),

/***/ 32678:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/b804b9aa89f9b1c0502b0a9ad89e9fad.png");

/***/ }),

/***/ 22464:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/a11707db20c92693b48dc05f1e476b0a.png");

/***/ }),

/***/ 89676:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/b399e4feefb73413d2972c407a21fdd0.png");

/***/ }),

/***/ 12450:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/2af4d6bdeb3efa2ea0f7d4c899a87042.png");

/***/ }),

/***/ 51986:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/320d5a0926f02e26f77390db0457c774.png");

/***/ }),

/***/ 63830:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/a1eff1c2db2a544b5ae3dde6a41ad502.png");

/***/ }),

/***/ 15436:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/67f21894bfb00156e9952ae2887b6021.png");

/***/ }),

/***/ 51882:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/542c95c779d0c510579c6e553b7cc147.png");

/***/ }),

/***/ 40774:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/2b12dd249b5f07ad667d82fff9e767d5.png");

/***/ }),

/***/ 43386:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/50181c4be702a703b759dc0f5466c89b.png");

/***/ }),

/***/ 64703:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/dde042aceb2098186122dd3d135acfb4.png");

/***/ }),

/***/ 13586:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/cba1a0b883e38a15625dab927360e312.png");

/***/ }),

/***/ 77461:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/b42db1a28af1063c38f7c702d6b31547.png");

/***/ }),

/***/ 28606:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/b0891d551df2181b526e4312a3c6a8e4.png");

/***/ }),

/***/ 19239:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/d9b36271d85498434455b402cbd7ccfa.png");

/***/ }),

/***/ 39923:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/659234eae0b839c6fa6e5795db66905a.png");

/***/ }),

/***/ 61705:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/8ddf61197c25c39e53ff8220a55c49f6.png");

/***/ }),

/***/ 80199:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/6666f7eff1bc1245892fe21d4072e325.png");

/***/ }),

/***/ 3466:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/389b70068296c1c447332ca8fffdd7b1.png");

/***/ }),

/***/ 87052:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/45fa330df72662fef2984cffcd5c69cc.png");

/***/ }),

/***/ 22264:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/c18a060857f92172ef7a3d753830d415.png");

/***/ }),

/***/ 19559:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/2b6e2207b8e5272097a016abcc3e919a.png");

/***/ }),

/***/ 11614:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/e9f2205a0e22985b33ceae5364ed6eb4.png");

/***/ }),

/***/ 28884:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/d3d7aee6c21628321d5a446276dca7ad.png");

/***/ }),

/***/ 53918:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/394b32962bd1e65fc7741ad62c1e2e0f.png");

/***/ }),

/***/ 23294:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/e61019017cd5f992e9926a1dff6d4d1d.png");

/***/ }),

/***/ 45205:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/a90bb2606a6ebf3e3d54fb20e6b68fe1.png");

/***/ }),

/***/ 59817:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/a4c79da6c92ca99dd0505ef735c485da.png");

/***/ }),

/***/ 66652:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/b16483cebd64ee03d2349939092c4a88.png");

/***/ }),

/***/ 73115:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/341c135409eb1228185840cf8775fb53.png");

/***/ }),

/***/ 76648:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/b1bc174aec0775d418bfea4c711f33d3.png");

/***/ }),

/***/ 52743:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/1e28b9687968cc01670da523d5cfa3d0.png");

/***/ }),

/***/ 48161:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/a863ccb9609b3ca9de8517c69d1ea649.png");

/***/ }),

/***/ 86094:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/7cc499991879171c3630aa502fef7bf0.png");

/***/ }),

/***/ 66408:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/4afbd4b170f767e4f8f2a73975a0151e.png");

/***/ }),

/***/ 47437:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/12585ea5229d33159dbd7f7e34c27d27.png");

/***/ }),

/***/ 25751:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/56abc0b94546cc247b90326a0e28b481.png");

/***/ }),

/***/ 5801:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/a46632076383d1c7b4a0d0a321ddf9bd.png");

/***/ }),

/***/ 93824:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/bae8f65118e9b518fa923bc4a8064c40.png");

/***/ }),

/***/ 14545:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/3bcf37df5cc6039b3c891f0ddb305240.png");

/***/ }),

/***/ 33182:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/7d282cf99702d02bd72ed391af998c4b.png");

/***/ }),

/***/ 82117:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/68fdb49ff5189144ec4ebd5509c894d0.png");

/***/ }),

/***/ 84539:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/80cf76a6247e23ca0012e8f8def67750.png");

/***/ }),

/***/ 9955:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/94e9ab5f62c461a5716335d80522f26c.png");

/***/ }),

/***/ 20203:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/df0a8fdeed56025cd97af1db4e8a249d.png");

/***/ }),

/***/ 43321:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/090e101b314bfbbf20d7369960e4e7f6.png");

/***/ }),

/***/ 74117:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/69f45982e5b6522f1dc9a477138627e2.png");

/***/ }),

/***/ 62416:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/af52b9a404eb4f2572e792ee7d4a6ce7.png");

/***/ }),

/***/ 30587:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/e3de0c089dbbeeb86832025900d21e91.png");

/***/ }),

/***/ 64754:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/9ebafdb65423223c120f2fa8b88c7484.png");

/***/ }),

/***/ 65188:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/f0f05b11876bbe9ad4cafbfee184d891.png");

/***/ }),

/***/ 81795:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/cfe8e51f30e45104cbf73bcfdafc2f63.png");

/***/ }),

/***/ 17537:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/ea9530703e6f6fdb895d2ddd489dd844.png");

/***/ }),

/***/ 73045:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/e40eae3e1df04a0bb26e7e97dfb655c8.png");

/***/ }),

/***/ 37685:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/485db295a860659a81fec7a5f6dcfb07.png");

/***/ }),

/***/ 1925:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/1119ae47a80fcd6e8858257701904ad6.png");

/***/ }),

/***/ 95376:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/410c6d042ab4f0932324bf3c66ced946.png");

/***/ }),

/***/ 36886:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/88f8619764bc48fb29d49ed189cf78ae.png");

/***/ }),

/***/ 86702:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/1be5d9e842ea82ca62c5b442c7b2ae88.png");

/***/ }),

/***/ 76193:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/d1ccce31ca7025a5d03d3e15bf57804f.png");

/***/ }),

/***/ 69382:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/ba3d2359c3210c0b7554779f3636274d.png");

/***/ }),

/***/ 65328:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/8d40f84454b1a7f288ca668d0622b2cc.png");

/***/ }),

/***/ 79042:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/3d9242b3b7ac559100e781cba4fc4084.png");

/***/ }),

/***/ 93295:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/581f8eed60d06929cc6e0ab39427c5cd.png");

/***/ }),

/***/ 38643:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/3617b3ab62a53074f1ac74edcfa6e6b7.png");

/***/ }),

/***/ 31292:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/55f7b8edc7fa6beea0358b3836531e21.png");

/***/ }),

/***/ 57065:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/9098c8c561dba2982aeb7830ee885827.png");

/***/ }),

/***/ 30318:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/f1e3becbf51334a5b43f12a23cb51e95.png");

/***/ }),

/***/ 27148:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/3a1172e84e122de30034aa51f5e12870.png");

/***/ }),

/***/ 7093:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/3d383614dc3b3e5e8d7d8cba54a40d0b.png");

/***/ }),

/***/ 95634:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/863d14c2c8fa3193dd5b6dbd176b142e.png");

/***/ }),

/***/ 73076:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/cf863a91bd25103ad5edffc85dbf28f3.png");

/***/ }),

/***/ 48345:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/afef166ebb9adf7fe62ee34c5cfed393.png");

/***/ }),

/***/ 13255:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/3dc570ef57bb25e65f429499af003f1b.png");

/***/ }),

/***/ 94486:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/851f5bb23497f9b10e4bda77c9ffbaed.png");

/***/ }),

/***/ 49216:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/288f21ac8f9931380ca336941fbe5a05.png");

/***/ }),

/***/ 74712:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/ceca7370933a16eaee37e3475cb10920.png");

/***/ }),

/***/ 78550:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/ae01f24d488ad089354dca6b39576a74.png");

/***/ }),

/***/ 18955:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/5b8738aff63d4a719f97d34e36bc64cf.png");

/***/ }),

/***/ 57762:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/dd0c49b2441871787091f1658a7ece7f.png");

/***/ }),

/***/ 82213:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/ad65c1485b575b73f7f5d1ea668f14d5.png");

/***/ }),

/***/ 81387:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/278f4a2f12cbf5500ff61f04b87d4d39.png");

/***/ }),

/***/ 7368:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/6beb4dc77fc73c85c8c04ba6329f4bc2.png");

/***/ }),

/***/ 53569:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/fc0b3f53c0a1a7f9a8e7740de6e29eb3.png");

/***/ }),

/***/ 89034:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/caffb657737152e1894584836d349004.png");

/***/ }),

/***/ 50205:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/7bc6fc6b2e382a8f005fb50961f06196.png");

/***/ }),

/***/ 18795:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/b13d7e6fd2d4828a27c854acae862c49.png");

/***/ }),

/***/ 56658:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/cc217301853a8492aac9159de3085f62.png");

/***/ }),

/***/ 38402:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/36106281ca3499fbfd770ad2ad01fb9f.png");

/***/ }),

/***/ 77615:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/96b4b1952860f8f3741345a740b31d29.png");

/***/ }),

/***/ 24463:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/a3147dbbb5cdcb2f5d63cb630b56d90a.png");

/***/ }),

/***/ 93094:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/37ec2426ba52368d32973599caf87de0.png");

/***/ }),

/***/ 5846:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/de5dd540c1c680320d2153ce7d4b54bf.png");

/***/ }),

/***/ 24457:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/d59c0220a66769ca5fa8ae432840cec1.png");

/***/ }),

/***/ 76369:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/e58f0e40fdfd5759c39e2da02e1e0818.png");

/***/ }),

/***/ 37676:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/4c09a1643169a7959e76c61801203e08.png");

/***/ }),

/***/ 7116:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/be2e00d31ea32ab735ac3e98b273fb0c.png");

/***/ }),

/***/ 556:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/f6e86c772d6731fb53692197fe2acaad.png");

/***/ }),

/***/ 48842:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/81a07994d6747f8b4eefe0dfa5fbf6ad.png");

/***/ }),

/***/ 88656:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/4ecf6185efb96dc8d2b8adc14545c097.png");

/***/ }),

/***/ 28913:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/92bd2b0b9677f4fd6d73363dd2cf351c.png");

/***/ }),

/***/ 99969:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/b61c243416ba24e8db50934925be9d08.png");

/***/ }),

/***/ 81653:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/7b58d5ce0eb89792808499042abeb5fd.png");

/***/ }),

/***/ 29640:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/0fab9b1b17442d6697161953249414be.png");

/***/ }),

/***/ 26609:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/19740104fdac1a7810f804f4d0d47b77.png");

/***/ }),

/***/ 59607:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/6fbae2ccf462a7a1679391c5d038652b.png");

/***/ }),

/***/ 34612:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/8647b94b0cf7c487a348659d6590e82c.png");

/***/ }),

/***/ 63810:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/8a6fda8807bb7e5c31a3c40fee0369ef.png");

/***/ }),

/***/ 76578:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/f45fbb3e3da3cc26eb1134f659370166.png");

/***/ }),

/***/ 73652:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/8d147486f741a51e383843bb6b3721b7.png");

/***/ }),

/***/ 54282:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/eff68e6437ddbc10706910edb0bcf398.png");

/***/ }),

/***/ 92406:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/855a955aea05e8669219765b1c0ee323.png");

/***/ }),

/***/ 67780:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/65c83226aca2070fa9f32cf98ca2afdd.png");

/***/ }),

/***/ 98458:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/9f8459ffe637f52bd5f497d30ad68c74.png");

/***/ }),

/***/ 14850:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/58bb6edcf26cb7bd7004025ad4558086.png");

/***/ }),

/***/ 63306:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/6d8bdf0f3d171615acb11e84ba9b7a53.png");

/***/ }),

/***/ 84270:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/f199f9380ad0ac3bd3a4ed369ac26768.png");

/***/ }),

/***/ 21912:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/918b7de7d9c67b455461825f681d4ad8.png");

/***/ }),

/***/ 50764:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/1ed923ad6fd44e15c4251e1f4a921b1c.png");

/***/ }),

/***/ 2999:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/f19ef2d19b54128aac8aaaf653f486ef.png");

/***/ }),

/***/ 97422:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/184d79b1d0e7344abcd11c428e789b77.png");

/***/ }),

/***/ 14564:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/7324208ec5bc8b1fa02b9b3707c5ce9d.png");

/***/ }),

/***/ 74019:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/b7dd0d3cd45ef53e2bc3262e8d2897c3.png");

/***/ }),

/***/ 20441:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/0cdca432fea06e395cc9eaf2d0c6d460.png");

/***/ }),

/***/ 63832:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/92ee7e62fe70f1705e37ca8af4f592ff.png");

/***/ }),

/***/ 94263:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/70fee99e65ec4a1617772d90ff80d1a1.png");

/***/ }),

/***/ 71216:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/031994156f3e7fa6b618adb36699911e.png");

/***/ }),

/***/ 68312:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/3c45fa7de7870aa60dd4de2108d4e20f.png");

/***/ }),

/***/ 46584:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/b6152482a00badb5dc7d6477e5b36830.png");

/***/ }),

/***/ 19641:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/0cde735e3ad4854909c53c11a217f0b4.png");

/***/ }),

/***/ 79653:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/29a77cef3561f570e6267f3b521e551d.png");

/***/ }),

/***/ 57037:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/1b9094de7000a22ab9468604e6d14f10.png");

/***/ }),

/***/ 6480:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/2c812bd9dce6a0a65c3da3053f824557.png");

/***/ }),

/***/ 13051:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/991881861979471602620bbb8a8d6885.png");

/***/ }),

/***/ 63277:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/a329c30864ca0df588d33e348919fb2c.png");

/***/ }),

/***/ 35620:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/b4676aca2e0876af2691e792b8b10c97.png");

/***/ }),

/***/ 73974:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/382afdf3dc1e7a3d855c81f3ed2ae20e.png");

/***/ }),

/***/ 44293:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/05f86606195466822bda292e58ac0493.png");

/***/ }),

/***/ 72370:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/7f58a046f36f4423fb7add93439a07b5.png");

/***/ }),

/***/ 59738:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/6f8d1e37649dd04be37cc97f81f0d274.png");

/***/ }),

/***/ 9534:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/69963ee233b4e218d5b9d249ec2d92eb.png");

/***/ }),

/***/ 55031:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/38a7dffdbff4a1c4fefc027ce3fe20d8.png");

/***/ }),

/***/ 14116:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/f75141fb82f88c9c2489548c4edc9d19.png");

/***/ }),

/***/ 80264:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/d29f38caaec24a7dbf99254e582cb140.png");

/***/ }),

/***/ 18281:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/3fdb53169a04eef6f021835d2feb148f.png");

/***/ }),

/***/ 62953:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/4b36837b6b03140900f2ea91c4c2f3b2.png");

/***/ }),

/***/ 73436:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/b0f4120659e3af1d30e534ce75ef1dca.png");

/***/ }),

/***/ 73966:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/2eafd08410bfe67d3054883a27a606c3.png");

/***/ }),

/***/ 6384:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/f5c50a7c51a9758110144f980dc06545.png");

/***/ }),

/***/ 78051:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/dad923293d8a6eea1ec7ab29725be104.png");

/***/ }),

/***/ 72399:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/07701ff180b5c3d6e01ba62d3469bbb7.png");

/***/ }),

/***/ 77697:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/5778e175c6de1da755d0edb4efb5ee17.svg");

/***/ }),

/***/ 79565:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/ac7b23e98defaa4a3ad25ffb80f429ff.svg");

/***/ }),

/***/ 39744:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/f7ffd7e46372a786d5f426ea0b279ff3.svg");

/***/ }),

/***/ 44084:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/a995356fc6eae6a8fc95e920113a5647.svg");

/***/ }),

/***/ 10087:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/80f635f353690fb3bd2895d9a4110afa.svg");

/***/ }),

/***/ 71933:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/9dc8b71d9ee198824d305f795b65dee2.svg");

/***/ }),

/***/ 90610:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/a498d9103ac7ef932ddcfda9f6841fb5.svg");

/***/ }),

/***/ 88594:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/91affa2dc90c5965ce4b02dc680e9cf7.svg");

/***/ }),

/***/ 23030:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/7977f76ce778191b317953388e149aac.svg");

/***/ }),

/***/ 35060:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/03797bd8439efb7d43938d8eb11ad364.svg");

/***/ }),

/***/ 96760:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/28a9331d1770d22f719f7dea39847a8e.svg");

/***/ }),

/***/ 5359:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/2d0a2f8b83bcfb5517d8febd9aec2689.svg");

/***/ }),

/***/ 88943:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/d748e6ee354d444ba67070c28d2423f7.svg");

/***/ }),

/***/ 74394:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/b931b0a1e126f76ccd5fc2961ddc384f.svg");

/***/ }),

/***/ 47357:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/c05e7b513d88e755fe5c41922382f212.svg");

/***/ }),

/***/ 41732:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/a3ac92ed99b1232a6e9ddbf5a03028fa.svg");

/***/ }),

/***/ 26458:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/9063b749d9964f9d2b68b3ca3234ec6f.svg");

/***/ }),

/***/ 78504:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/0073d804ddebe7fc255c4d9a9179b5f3.svg");

/***/ }),

/***/ 6677:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/6da9c6ef1a8e492055e7aba16e1360f0.svg");

/***/ }),

/***/ 27038:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/dcb370022586af0913fb8e5ea11a8d71.svg");

/***/ }),

/***/ 68838:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/8404dcc04115e5b64fbb148b72128400.svg");

/***/ }),

/***/ 16037:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/9d166b26e4f8c175e15446af72d6d51f.svg");

/***/ }),

/***/ 1307:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/ca946365ee337e0d9eaeafde669e87a8.svg");

/***/ }),

/***/ 48760:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/f6ccd5372d62193beaa6abfadcb4a9bd.svg");

/***/ }),

/***/ 71796:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/8ad1ce35b9698960a4a9a1d872acbcff.svg");

/***/ }),

/***/ 15897:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/8cb022361e910328ee89616570f6a4c3.svg");

/***/ }),

/***/ 99642:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/a6e91c64664279a3d10820509eef647d.svg");

/***/ }),

/***/ 35699:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/68194d725f81e055427359058f2192c4.svg");

/***/ }),

/***/ 28179:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/5a9bc806208d862370890f4ffa0b1053.svg");

/***/ }),

/***/ 23914:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/c8d731ed3ecf5127ec9a202b7d9d33a6.svg");

/***/ }),

/***/ 61716:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/c9276140091511f7d503596af5005ae4.svg");

/***/ }),

/***/ 43150:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/bbb808f8b74a6aa29a53bbc56fdb6a9f.svg");

/***/ }),

/***/ 7254:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/8bc93ab78eead357e3c43c613fcc0bdd.svg");

/***/ }),

/***/ 27498:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/8080be265ae4b84d2b28c5c636448372.svg");

/***/ }),

/***/ 26596:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/70c145c428c7c979c48e64e34c7700de.svg");

/***/ }),

/***/ 30261:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/97b34f4f2e1bcc9f55f9fea69a8a12a3.svg");

/***/ }),

/***/ 56957:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/e4631ce9ca2aa7b9b8b43b7487e1a24d.svg");

/***/ }),

/***/ 67971:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/71f608484bc6990172ba765614df0e40.svg");

/***/ }),

/***/ 9841:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/7a3a960147226b9777f6267d26f9c2bb.svg");

/***/ }),

/***/ 82629:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/cacf3f805a3419084c794b16aab0c6f6.svg");

/***/ }),

/***/ 61294:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/7cd0825e95bf62feb092ffcdf0b5cac9.svg");

/***/ }),

/***/ 72488:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/80881a6dee6c8089887ac4a86307a115.svg");

/***/ }),

/***/ 37006:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/e04c7b963077730891756ac598b4b6f3.svg");

/***/ }),

/***/ 87287:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/4826dde722d568af0cc317d8cf7f6f4b.svg");

/***/ }),

/***/ 91283:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/88974bbe7092018b561a715b0b3c67b4.svg");

/***/ }),

/***/ 52576:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/0af784c25e30d1686f1a479811c68efa.svg");

/***/ }),

/***/ 4116:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/acbdcb6c0271a9f52fbe8b6b02679308.svg");

/***/ }),

/***/ 78549:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/9252cb6186f0cf486e05bffe41614389.svg");

/***/ }),

/***/ 12122:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/7ab8b2a8a3dbc4b5833b2c3e28c43b67.svg");

/***/ }),

/***/ 24218:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/90624efc7d56b20d295897ae9fca4910.svg");

/***/ }),

/***/ 96750:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/f87219ffae53015b35461defa3c2ab66.svg");

/***/ }),

/***/ 59067:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/a5a2af68668e7c94deb9489ec5e30322.svg");

/***/ }),

/***/ 94024:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/32fd15032833c2dc3206c7aea788b654.svg");

/***/ }),

/***/ 66790:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/109113d73459db8ad12fa362740b8f38.svg");

/***/ }),

/***/ 48100:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/205b5b1980721034d9dd3fe9aa0cf593.svg");

/***/ }),

/***/ 42102:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/63a70553137d6dd9f3360e19668649c6.svg");

/***/ }),

/***/ 26455:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/561bd8f7c4bca699db53f8f9a4e506fc.svg");

/***/ }),

/***/ 38212:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/ae3c68edbd2e96e8f4791628a54a6d16.svg");

/***/ }),

/***/ 20159:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/98a8e13631c09d952add89dbe59ad605.svg");

/***/ }),

/***/ 69954:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/e2ff952c2e3265d02803a04c3f324e87.svg");

/***/ }),

/***/ 66275:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/f0551a70b605068068ee546bb1e003d9.svg");

/***/ }),

/***/ 40869:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/0b6b8911c4a24762f821bf6ade7d5cac.svg");

/***/ }),

/***/ 53561:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/a2ef015e78f9935dea0b7e4c0b68661e.svg");

/***/ }),

/***/ 85630:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/8a62ce652b93de046e3b61e64eb35e64.svg");

/***/ }),

/***/ 51333:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/575571205467cbec3341ba3f6f7ccc00.svg");

/***/ }),

/***/ 65019:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/a872de83b8fd12af0a712c82650008b3.svg");

/***/ }),

/***/ 85464:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/d06c325bef1365d0b0b124de50fc54de.svg");

/***/ }),

/***/ 28157:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/149837bc6d46570ed932f573498c2306.svg");

/***/ }),

/***/ 4938:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/364141a35ac52f9203d00c11a9a395c4.svg");

/***/ }),

/***/ 2673:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "../assets/d57765aa99d51075dc28f0848e59652c.svg");

/***/ }),

/***/ 27337:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony default export */ __webpack_exports__["Z"] = (__webpack_require__.p + "../assets/ca198a5190a6488c683d42a91b393ad7.svg");

/***/ }),

/***/ 19312:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony default export */ __webpack_exports__["Z"] = (__webpack_require__.p + "../fonts/chessglyph-new.99e0b265.woff2");

/***/ }),

/***/ 54986:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var visit = __webpack_require__(99338);

var hasOwnProperty = Object.prototype.hasOwnProperty;
var hastCssPropertyMap = {
  align: 'text-align',
  valign: 'vertical-align',
  height: 'height',
  width: 'width',
};

module.exports = function tableCellStyle(node) {
  visit(node, 'element', visitor);
  return node;
};

function visitor(node) {
  if (node.tagName !== 'tr' && node.tagName !== 'td' && node.tagName !== 'th') {
    return;
  }

  var hastName;
  var cssName;
  for (hastName in hastCssPropertyMap) {
    if (
      !hasOwnProperty.call(hastCssPropertyMap, hastName) ||
      node.properties[hastName] === undefined
    ) {
      continue;
    }
    cssName = hastCssPropertyMap[hastName];
    appendStyle(node, cssName, node.properties[hastName]);
    delete node.properties[hastName];
  }
}

function appendStyle(node, property, value) {
  var prevStyle = (node.properties.style || '').trim();
  if (prevStyle && !/;\s*/.test(prevStyle)) {
    prevStyle += ';';
  }
  if (prevStyle) {
    prevStyle += ' ';
  }
  var nextStyle = prevStyle + property + ': ' + value + ';';
  node.properties.style = nextStyle;
}


/***/ }),

/***/ 75789:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "A": () => (/* binding */ ALL),
  "B": () => (/* binding */ logError),
  "C": () => (/* binding */ CALL),
  "D": () => (/* binding */ wrapSagaDispatch),
  "E": () => (/* binding */ identity),
  "F": () => (/* binding */ FORK),
  "G": () => (/* binding */ GET_CONTEXT),
  "J": () => (/* binding */ JOIN),
  "K": () => (/* binding */ take),
  "L": () => (/* binding */ fork),
  "N": () => (/* binding */ call),
  "O": () => (/* binding */ delay),
  "P": () => (/* binding */ PUT),
  "R": () => (/* binding */ RACE),
  "S": () => (/* binding */ SELECT),
  "T": () => (/* binding */ TAKE),
  "Y": () => (/* binding */ put),
  "_": () => (/* binding */ io_c3792963_all),
  "a": () => (/* binding */ CPS),
  "a1": () => (/* binding */ spawn),
  "a3": () => (/* binding */ io_c3792963_select),
  "b": () => (/* binding */ CANCEL),
  "d": () => (/* binding */ ACTION_CHANNEL),
  "e": () => (/* binding */ expanding),
  "f": () => (/* binding */ CANCELLED),
  "g": () => (/* binding */ FLUSH),
  "h": () => (/* binding */ SET_CONTEXT),
  "i": () => (/* binding */ internalErr),
  "j": () => (/* binding */ getMetaInfo),
  "k": () => (/* binding */ kTrue),
  "l": () => (/* binding */ createAllStyleChildCallbacks),
  "m": () => (/* binding */ createEmptyArray),
  "o": () => (/* binding */ once),
  "p": () => (/* binding */ assignWithSymbols),
  "q": () => (/* binding */ makeIterator),
  "r": () => (/* binding */ remove),
  "s": () => (/* binding */ shouldComplete),
  "t": () => (/* binding */ noop),
  "u": () => (/* binding */ flatMap),
  "v": () => (/* binding */ getLocation),
  "y": () => (/* binding */ shouldCancel),
  "z": () => (/* binding */ shouldTerminate)
});

// UNUSED EXPORTS: $, H, I, M, Q, U, V, W, X, Z, a0, a2, a4, a5, a6, a7, c, n, w, x

// EXTERNAL MODULE: ./node_modules/@redux-saga/symbols/dist/redux-saga-symbols.esm.js
var redux_saga_symbols_esm = __webpack_require__(4548);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(17692);
// EXTERNAL MODULE: ./node_modules/@redux-saga/is/dist/redux-saga-is.esm.js
var redux_saga_is_esm = __webpack_require__(53597);
;// CONCATENATED MODULE: ./node_modules/@redux-saga/delay-p/dist/redux-saga-delay-p.esm.js


var MAX_SIGNED_INT = 2147483647;
function delayP(ms, val) {
  if (val === void 0) {
    val = true;
  }

  // https://developer.mozilla.org/en-US/docs/Web/API/setTimeout#maximum_delay_value
  if (false) {}

  var timeoutId;
  var promise = new Promise(function (resolve) {
    timeoutId = setTimeout(resolve, Math.min(MAX_SIGNED_INT, ms), val);
  });

  promise[redux_saga_symbols_esm/* CANCEL */.n1] = function () {
    clearTimeout(timeoutId);
  };

  return promise;
}

/* harmony default export */ var redux_saga_delay_p_esm = (delayP);

;// CONCATENATED MODULE: ./node_modules/@redux-saga/core/dist/io-c3792963.js





var konst = function konst(v) {
  return function () {
    return v;
  };
};
var kTrue =
/*#__PURE__*/
konst(true);

var noop = function noop() {};

if (false) {}
var identity = function identity(v) {
  return v;
};
var hasSymbol = typeof Symbol === 'function';
var asyncIteratorSymbol = hasSymbol && Symbol.asyncIterator ? Symbol.asyncIterator : '@@asyncIterator';
function check(value, predicate, error) {
  if (!predicate(value)) {
    throw new Error(error);
  }
}
var assignWithSymbols = function assignWithSymbols(target, source) {
  (0,esm_extends/* default */.Z)(target, source);

  if (Object.getOwnPropertySymbols) {
    Object.getOwnPropertySymbols(source).forEach(function (s) {
      target[s] = source[s];
    });
  }
};
var flatMap = function flatMap(mapper, arr) {
  var _ref;

  return (_ref = []).concat.apply(_ref, arr.map(mapper));
};
function remove(array, item) {
  var index = array.indexOf(item);

  if (index >= 0) {
    array.splice(index, 1);
  }
}
function once(fn) {
  var called = false;
  return function () {
    if (called) {
      return;
    }

    called = true;
    fn();
  };
}

var kThrow = function kThrow(err) {
  throw err;
};

var kReturn = function kReturn(value) {
  return {
    value: value,
    done: true
  };
};

function makeIterator(next, thro, name) {
  if (thro === void 0) {
    thro = kThrow;
  }

  if (name === void 0) {
    name = 'iterator';
  }

  var iterator = {
    meta: {
      name: name
    },
    next: next,
    throw: thro,
    return: kReturn,
    isSagaIterator: true
  };

  if (typeof Symbol !== 'undefined') {
    iterator[Symbol.iterator] = function () {
      return iterator;
    };
  }

  return iterator;
}
function logError(error, _ref2) {
  var sagaStack = _ref2.sagaStack;

  /*eslint-disable no-console*/
  console.error(error);
  console.error(sagaStack);
}
var internalErr = function internalErr(err) {
  return new Error("\n  redux-saga: Error checking hooks detected an inconsistent state. This is likely a bug\n  in redux-saga code and not yours. Thanks for reporting this in the project's github repo.\n  Error: " + err + "\n");
};
var createSetContextWarning = function createSetContextWarning(ctx, props) {
  return (ctx ? ctx + '.' : '') + "setContext(props): argument " + props + " is not a plain object";
};
var FROZEN_ACTION_ERROR = "You can't put (a.k.a. dispatch from saga) frozen actions.\nWe have to define a special non-enumerable property on those actions for scheduling purposes.\nOtherwise you wouldn't be able to communicate properly between sagas & other subscribers (action ordering would become far less predictable).\nIf you are using redux and you care about this behaviour (frozen actions),\nthen you might want to switch to freezing actions in a middleware rather than in action creator.\nExample implementation:\n\nconst freezeActions = store => next => action => next(Object.freeze(action))\n"; // creates empty, but not-holey array

var createEmptyArray = function createEmptyArray(n) {
  return Array.apply(null, new Array(n));
};
var wrapSagaDispatch = function wrapSagaDispatch(dispatch) {
  return function (action) {
    if (false) {}

    return dispatch(Object.defineProperty(action, redux_saga_symbols_esm/* SAGA_ACTION */.Nm, {
      value: true
    }));
  };
};
var shouldTerminate = function shouldTerminate(res) {
  return res === redux_saga_symbols_esm/* TERMINATE */.EO;
};
var shouldCancel = function shouldCancel(res) {
  return res === redux_saga_symbols_esm/* TASK_CANCEL */.Wd;
};
var shouldComplete = function shouldComplete(res) {
  return shouldTerminate(res) || shouldCancel(res);
};
function createAllStyleChildCallbacks(shape, parentCallback) {
  var keys = Object.keys(shape);
  var totalCount = keys.length;

  if (false) {}

  var completedCount = 0;
  var completed;
  var results = (0,redux_saga_is_esm/* array */.IX)(shape) ? createEmptyArray(totalCount) : {};
  var childCallbacks = {};

  function checkEnd() {
    if (completedCount === totalCount) {
      completed = true;
      parentCallback(results);
    }
  }

  keys.forEach(function (key) {
    var chCbAtKey = function chCbAtKey(res, isErr) {
      if (completed) {
        return;
      }

      if (isErr || shouldComplete(res)) {
        parentCallback.cancel();
        parentCallback(res, isErr);
      } else {
        results[key] = res;
        completedCount++;
        checkEnd();
      }
    };

    chCbAtKey.cancel = noop;
    childCallbacks[key] = chCbAtKey;
  });

  parentCallback.cancel = function () {
    if (!completed) {
      completed = true;
      keys.forEach(function (key) {
        return childCallbacks[key].cancel();
      });
    }
  };

  return childCallbacks;
}
function getMetaInfo(fn) {
  return {
    name: fn.name || 'anonymous',
    location: getLocation(fn)
  };
}
function getLocation(instrumented) {
  return instrumented[redux_saga_symbols_esm/* SAGA_LOCATION */.b_];
}

var BUFFER_OVERFLOW = "Channel's Buffer overflow!";
var ON_OVERFLOW_THROW = 1;
var ON_OVERFLOW_DROP = 2;
var ON_OVERFLOW_SLIDE = 3;
var ON_OVERFLOW_EXPAND = 4;
var zeroBuffer = {
  isEmpty: kTrue,
  put: noop,
  take: noop
};

function ringBuffer(limit, overflowAction) {
  if (limit === void 0) {
    limit = 10;
  }

  var arr = new Array(limit);
  var length = 0;
  var pushIndex = 0;
  var popIndex = 0;

  var push = function push(it) {
    arr[pushIndex] = it;
    pushIndex = (pushIndex + 1) % limit;
    length++;
  };

  var take = function take() {
    if (length != 0) {
      var it = arr[popIndex];
      arr[popIndex] = null;
      length--;
      popIndex = (popIndex + 1) % limit;
      return it;
    }
  };

  var flush = function flush() {
    var items = [];

    while (length) {
      items.push(take());
    }

    return items;
  };

  return {
    isEmpty: function isEmpty() {
      return length == 0;
    },
    put: function put(it) {
      if (length < limit) {
        push(it);
      } else {
        var doubledLimit;

        switch (overflowAction) {
          case ON_OVERFLOW_THROW:
            throw new Error(BUFFER_OVERFLOW);

          case ON_OVERFLOW_SLIDE:
            arr[pushIndex] = it;
            pushIndex = (pushIndex + 1) % limit;
            popIndex = pushIndex;
            break;

          case ON_OVERFLOW_EXPAND:
            doubledLimit = 2 * limit;
            arr = flush();
            length = arr.length;
            pushIndex = arr.length;
            popIndex = 0;
            arr.length = doubledLimit;
            limit = doubledLimit;
            push(it);
            break;

          default: // DROP

        }
      }
    },
    take: take,
    flush: flush
  };
}

var none = function none() {
  return zeroBuffer;
};
var fixed = function fixed(limit) {
  return ringBuffer(limit, ON_OVERFLOW_THROW);
};
var dropping = function dropping(limit) {
  return ringBuffer(limit, ON_OVERFLOW_DROP);
};
var sliding = function sliding(limit) {
  return ringBuffer(limit, ON_OVERFLOW_SLIDE);
};
var expanding = function expanding(initialSize) {
  return ringBuffer(initialSize, ON_OVERFLOW_EXPAND);
};

var buffers = /*#__PURE__*/Object.freeze({
  __proto__: null,
  none: none,
  fixed: fixed,
  dropping: dropping,
  sliding: sliding,
  expanding: expanding
});

var TAKE = 'TAKE';
var PUT = 'PUT';
var ALL = 'ALL';
var RACE = 'RACE';
var CALL = 'CALL';
var CPS = 'CPS';
var FORK = 'FORK';
var JOIN = 'JOIN';
var CANCEL = 'CANCEL';
var SELECT = 'SELECT';
var ACTION_CHANNEL = 'ACTION_CHANNEL';
var CANCELLED = 'CANCELLED';
var FLUSH = 'FLUSH';
var GET_CONTEXT = 'GET_CONTEXT';
var SET_CONTEXT = 'SET_CONTEXT';

var effectTypes = /*#__PURE__*/Object.freeze({
  __proto__: null,
  TAKE: TAKE,
  PUT: PUT,
  ALL: ALL,
  RACE: RACE,
  CALL: CALL,
  CPS: CPS,
  FORK: FORK,
  JOIN: JOIN,
  CANCEL: CANCEL,
  SELECT: SELECT,
  ACTION_CHANNEL: ACTION_CHANNEL,
  CANCELLED: CANCELLED,
  FLUSH: FLUSH,
  GET_CONTEXT: GET_CONTEXT,
  SET_CONTEXT: SET_CONTEXT
});

var TEST_HINT = '\n(HINT: if you are getting these errors in tests, consider using createMockTask from @redux-saga/testing-utils)';

var makeEffect = function makeEffect(type, payload) {
  var _ref;

  return _ref = {}, _ref[redux_saga_symbols_esm.IO] = true, _ref.combinator = false, _ref.type = type, _ref.payload = payload, _ref;
};

var isForkEffect = function isForkEffect(eff) {
  return effect(eff) && eff.type === FORK;
};

var detach = function detach(eff) {
  if (false) {}

  return makeEffect(FORK, (0,esm_extends/* default */.Z)({}, eff.payload, {
    detached: true
  }));
};
function take(patternOrChannel, multicastPattern) {
  if (patternOrChannel === void 0) {
    patternOrChannel = '*';
  }

  if (false) {}

  if ((0,redux_saga_is_esm/* pattern */.uj)(patternOrChannel)) {
    if ((0,redux_saga_is_esm/* notUndef */.d5)(multicastPattern)) {
      /* eslint-disable no-console */
      console.warn("take(pattern) takes one argument but two were provided. Consider passing an array for listening to several action types");
    }

    return makeEffect(TAKE, {
      pattern: patternOrChannel
    });
  }

  if ((0,redux_saga_is_esm/* multicast */.Om)(patternOrChannel) && (0,redux_saga_is_esm/* notUndef */.d5)(multicastPattern) && (0,redux_saga_is_esm/* pattern */.uj)(multicastPattern)) {
    return makeEffect(TAKE, {
      channel: patternOrChannel,
      pattern: multicastPattern
    });
  }

  if ((0,redux_saga_is_esm/* channel */.CE)(patternOrChannel)) {
    if ((0,redux_saga_is_esm/* notUndef */.d5)(multicastPattern)) {
      /* eslint-disable no-console */
      console.warn("take(channel) takes one argument but two were provided. Second argument is ignored.");
    }

    return makeEffect(TAKE, {
      channel: patternOrChannel
    });
  }

  if (false) {}
}
var takeMaybe = function takeMaybe() {
  var eff = take.apply(void 0, arguments);
  eff.payload.maybe = true;
  return eff;
};
function put(channel$1, action) {
  if (false) {}

  if ((0,redux_saga_is_esm/* undef */.sR)(action)) {
    action = channel$1; // `undefined` instead of `null` to make default parameter work

    channel$1 = undefined;
  }

  return makeEffect(PUT, {
    channel: channel$1,
    action: action
  });
}
var putResolve = function putResolve() {
  var eff = put.apply(void 0, arguments);
  eff.payload.resolve = true;
  return eff;
};
function io_c3792963_all(effects) {
  var eff = makeEffect(ALL, effects);
  eff.combinator = true;
  return eff;
}
function race(effects) {
  var eff = makeEffect(RACE, effects);
  eff.combinator = true;
  return eff;
} // this match getFnCallDescriptor logic

var validateFnDescriptor = function validateFnDescriptor(effectName, fnDescriptor) {
  check(fnDescriptor, notUndef, effectName + ": argument fn is undefined or null");

  if (func(fnDescriptor)) {
    return;
  }

  var context = null;
  var fn;

  if (array(fnDescriptor)) {
    context = fnDescriptor[0];
    fn = fnDescriptor[1];
    check(fn, notUndef, effectName + ": argument of type [context, fn] has undefined or null `fn`");
  } else if (object(fnDescriptor)) {
    context = fnDescriptor.context;
    fn = fnDescriptor.fn;
    check(fn, notUndef, effectName + ": argument of type {context, fn} has undefined or null `fn`");
  } else {
    check(fnDescriptor, func, effectName + ": argument fn is not function");
    return;
  }

  if (context && string(fn)) {
    check(context[fn], func, effectName + ": context arguments has no such method - \"" + fn + "\"");
    return;
  }

  check(fn, func, effectName + ": unpacked fn argument (from [context, fn] or {context, fn}) is not a function");
};

function getFnCallDescriptor(fnDescriptor, args) {
  var context = null;
  var fn;

  if ((0,redux_saga_is_esm/* func */.Yl)(fnDescriptor)) {
    fn = fnDescriptor;
  } else {
    if ((0,redux_saga_is_esm/* array */.IX)(fnDescriptor)) {
      context = fnDescriptor[0];
      fn = fnDescriptor[1];
    } else {
      context = fnDescriptor.context;
      fn = fnDescriptor.fn;
    }

    if (context && (0,redux_saga_is_esm/* string */.Z_)(fn) && (0,redux_saga_is_esm/* func */.Yl)(context[fn])) {
      fn = context[fn];
    }
  }

  return {
    context: context,
    fn: fn,
    args: args
  };
}

var isNotDelayEffect = function isNotDelayEffect(fn) {
  return fn !== delay;
};

function call(fnDescriptor) {
  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }

  if (false) { var arg0; }

  return makeEffect(CALL, getFnCallDescriptor(fnDescriptor, args));
}
function apply(context, fn, args) {
  if (args === void 0) {
    args = [];
  }

  var fnDescriptor = [context, fn];

  if (false) {}

  return makeEffect(CALL, getFnCallDescriptor([context, fn], args));
}
function cps(fnDescriptor) {
  if (false) {}

  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
    args[_key2 - 1] = arguments[_key2];
  }

  return makeEffect(CPS, getFnCallDescriptor(fnDescriptor, args));
}
function fork(fnDescriptor) {
  if (false) {}

  for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
    args[_key3 - 1] = arguments[_key3];
  }

  return makeEffect(FORK, getFnCallDescriptor(fnDescriptor, args));
}
function spawn(fnDescriptor) {
  if (false) {}

  for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {
    args[_key4 - 1] = arguments[_key4];
  }

  return detach(fork.apply(void 0, [fnDescriptor].concat(args)));
}
function join(taskOrTasks) {
  if (false) {}

  return makeEffect(JOIN, taskOrTasks);
}
function cancel(taskOrTasks) {
  if (taskOrTasks === void 0) {
    taskOrTasks = SELF_CANCELLATION;
  }

  if (false) {}

  return makeEffect(CANCEL, taskOrTasks);
}
function io_c3792963_select(selector) {
  if (selector === void 0) {
    selector = identity;
  }

  for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {
    args[_key5 - 1] = arguments[_key5];
  }

  if (false) {}

  return makeEffect(SELECT, {
    selector: selector,
    args: args
  });
}
/**
  channel(pattern, [buffer])    => creates a proxy channel for store actions
**/

function actionChannel(pattern$1, buffer$1) {
  if (false) {}

  return makeEffect(ACTION_CHANNEL, {
    pattern: pattern$1,
    buffer: buffer$1
  });
}
function cancelled() {
  return makeEffect(CANCELLED, {});
}
function flush(channel$1) {
  if (false) {}

  return makeEffect(FLUSH, channel$1);
}
function getContext(prop) {
  if (false) {}

  return makeEffect(GET_CONTEXT, prop);
}
function setContext(props) {
  if (false) {}

  return makeEffect(SET_CONTEXT, props);
}
var delay =
/*#__PURE__*/
call.bind(null, redux_saga_delay_p_esm);




/***/ }),

/***/ 10742:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "$6": () => (/* reexport safe */ _io_c3792963_js__WEBPACK_IMPORTED_MODULE_1__._),
/* harmony export */   "Cs": () => (/* reexport safe */ _io_c3792963_js__WEBPACK_IMPORTED_MODULE_1__.a1),
/* harmony export */   "RE": () => (/* reexport safe */ _io_c3792963_js__WEBPACK_IMPORTED_MODULE_1__.N),
/* harmony export */   "Ys": () => (/* reexport safe */ _io_c3792963_js__WEBPACK_IMPORTED_MODULE_1__.a3),
/* harmony export */   "gw": () => (/* reexport safe */ _io_c3792963_js__WEBPACK_IMPORTED_MODULE_1__.O),
/* harmony export */   "gz": () => (/* reexport safe */ _io_c3792963_js__WEBPACK_IMPORTED_MODULE_1__.Y),
/* harmony export */   "qn": () => (/* reexport safe */ _io_c3792963_js__WEBPACK_IMPORTED_MODULE_1__.K),
/* harmony export */   "rM": () => (/* reexport safe */ _io_c3792963_js__WEBPACK_IMPORTED_MODULE_1__.L)
/* harmony export */ });
/* unused harmony exports debounce, retry, takeEvery, takeLatest, takeLeading, throttle */
/* harmony import */ var _redux_saga_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(53597);
/* harmony import */ var _io_c3792963_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(75789);







var done = function done(value) {
  return {
    done: true,
    value: value
  };
};

var qEnd = {};
function safeName(patternOrChannel) {
  if (channel(patternOrChannel)) {
    return 'channel';
  }

  if (stringableFunc(patternOrChannel)) {
    return String(patternOrChannel);
  }

  if (func(patternOrChannel)) {
    return patternOrChannel.name;
  }

  return String(patternOrChannel);
}
function fsmIterator(fsm, startState, name) {
  var stateUpdater,
      errorState,
      effect,
      nextState = startState;

  function next(arg, error) {
    if (nextState === qEnd) {
      return done(arg);
    }

    if (error && !errorState) {
      nextState = qEnd;
      throw error;
    } else {
      stateUpdater && stateUpdater(arg);
      var currentState = error ? fsm[errorState](error) : fsm[nextState]();
      nextState = currentState.nextState;
      effect = currentState.effect;
      stateUpdater = currentState.stateUpdater;
      errorState = currentState.errorState;
      return nextState === qEnd ? done(arg) : effect;
    }
  }

  return makeIterator(next, function (error) {
    return next(null, error);
  }, name);
}

function takeEvery(patternOrChannel, worker) {
  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    args[_key - 2] = arguments[_key];
  }

  var yTake = {
    done: false,
    value: take(patternOrChannel)
  };

  var yFork = function yFork(ac) {
    return {
      done: false,
      value: fork.apply(void 0, [worker].concat(args, [ac]))
    };
  };

  var action,
      setAction = function setAction(ac) {
    return action = ac;
  };

  return fsmIterator({
    q1: function q1() {
      return {
        nextState: 'q2',
        effect: yTake,
        stateUpdater: setAction
      };
    },
    q2: function q2() {
      return {
        nextState: 'q1',
        effect: yFork(action)
      };
    }
  }, 'q1', "takeEvery(" + safeName(patternOrChannel) + ", " + worker.name + ")");
}

function takeLatest(patternOrChannel, worker) {
  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    args[_key - 2] = arguments[_key];
  }

  var yTake = {
    done: false,
    value: take(patternOrChannel)
  };

  var yFork = function yFork(ac) {
    return {
      done: false,
      value: fork.apply(void 0, [worker].concat(args, [ac]))
    };
  };

  var yCancel = function yCancel(task) {
    return {
      done: false,
      value: cancel(task)
    };
  };

  var task, action;

  var setTask = function setTask(t) {
    return task = t;
  };

  var setAction = function setAction(ac) {
    return action = ac;
  };

  return fsmIterator({
    q1: function q1() {
      return {
        nextState: 'q2',
        effect: yTake,
        stateUpdater: setAction
      };
    },
    q2: function q2() {
      return task ? {
        nextState: 'q3',
        effect: yCancel(task)
      } : {
        nextState: 'q1',
        effect: yFork(action),
        stateUpdater: setTask
      };
    },
    q3: function q3() {
      return {
        nextState: 'q1',
        effect: yFork(action),
        stateUpdater: setTask
      };
    }
  }, 'q1', "takeLatest(" + safeName(patternOrChannel) + ", " + worker.name + ")");
}

function takeLeading(patternOrChannel, worker) {
  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    args[_key - 2] = arguments[_key];
  }

  var yTake = {
    done: false,
    value: take(patternOrChannel)
  };

  var yCall = function yCall(ac) {
    return {
      done: false,
      value: call.apply(void 0, [worker].concat(args, [ac]))
    };
  };

  var action;

  var setAction = function setAction(ac) {
    return action = ac;
  };

  return fsmIterator({
    q1: function q1() {
      return {
        nextState: 'q2',
        effect: yTake,
        stateUpdater: setAction
      };
    },
    q2: function q2() {
      return {
        nextState: 'q1',
        effect: yCall(action)
      };
    }
  }, 'q1', "takeLeading(" + safeName(patternOrChannel) + ", " + worker.name + ")");
}

function throttle(delayLength, patternOrChannel, worker) {
  for (var _len = arguments.length, args = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
    args[_key - 3] = arguments[_key];
  }

  var action, channel$1;

  var yTake = function yTake() {
    return {
      done: false,
      value: take(channel$1)
    };
  };

  var yFork = function yFork(ac) {
    return {
      done: false,
      value: fork.apply(void 0, [worker].concat(args, [ac]))
    };
  };

  var yDelay = {
    done: false,
    value: delay(delayLength)
  };

  var setAction = function setAction(ac) {
    return action = ac;
  };

  var setChannel = function setChannel(ch) {
    return channel$1 = ch;
  };

  var needsChannel = !channel(patternOrChannel);

  if (!needsChannel) {
    setChannel(patternOrChannel);
  }

  return fsmIterator({
    q1: function q1() {
      var yActionChannel = {
        done: false,
        value: actionChannel(patternOrChannel, sliding(1))
      };
      return {
        nextState: 'q2',
        effect: yActionChannel,
        stateUpdater: setChannel
      };
    },
    q2: function q2() {
      return {
        nextState: 'q3',
        effect: yTake(),
        stateUpdater: setAction
      };
    },
    q3: function q3() {
      return {
        nextState: 'q4',
        effect: yFork(action)
      };
    },
    q4: function q4() {
      return {
        nextState: 'q2',
        effect: yDelay
      };
    }
  }, needsChannel ? 'q1' : 'q2', "throttle(" + safeName(patternOrChannel) + ", " + worker.name + ")");
}

function retry(maxTries, delayLength, fn) {
  var counter = maxTries;

  for (var _len = arguments.length, args = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
    args[_key - 3] = arguments[_key];
  }

  var yCall = {
    done: false,
    value: call.apply(void 0, [fn].concat(args))
  };
  var yDelay = {
    done: false,
    value: delay(delayLength)
  };
  return fsmIterator({
    q1: function q1() {
      return {
        nextState: 'q2',
        effect: yCall,
        errorState: 'q10'
      };
    },
    q2: function q2() {
      return {
        nextState: qEnd
      };
    },
    q10: function q10(error) {
      counter -= 1;

      if (counter <= 0) {
        throw error;
      }

      return {
        nextState: 'q1',
        effect: yDelay
      };
    }
  }, 'q1', "retry(" + fn.name + ")");
}

function debounceHelper(delayLength, patternOrChannel, worker) {
  for (var _len = arguments.length, args = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
    args[_key - 3] = arguments[_key];
  }

  var action, raceOutput;
  var yTake = {
    done: false,
    value: take(patternOrChannel)
  };
  var yRace = {
    done: false,
    value: race({
      action: take(patternOrChannel),
      debounce: delay(delayLength)
    })
  };

  var yFork = function yFork(ac) {
    return {
      done: false,
      value: fork.apply(void 0, [worker].concat(args, [ac]))
    };
  };

  var yNoop = function yNoop(value) {
    return {
      done: false,
      value: value
    };
  };

  var setAction = function setAction(ac) {
    return action = ac;
  };

  var setRaceOutput = function setRaceOutput(ro) {
    return raceOutput = ro;
  };

  return fsmIterator({
    q1: function q1() {
      return {
        nextState: 'q2',
        effect: yTake,
        stateUpdater: setAction
      };
    },
    q2: function q2() {
      return {
        nextState: 'q3',
        effect: yRace,
        stateUpdater: setRaceOutput
      };
    },
    q3: function q3() {
      return raceOutput.debounce ? {
        nextState: 'q1',
        effect: yFork(action)
      } : {
        nextState: 'q2',
        effect: yNoop(raceOutput.action),
        stateUpdater: setAction
      };
    }
  }, 'q1', "debounce(" + safeName(patternOrChannel) + ", " + worker.name + ")");
}

var validateTakeEffect = function validateTakeEffect(fn, patternOrChannel, worker) {
  check(patternOrChannel, notUndef, fn.name + " requires a pattern or channel");
  check(worker, notUndef, fn.name + " requires a saga parameter");
};

function takeEvery$1(patternOrChannel, worker) {
  if (false) {}

  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    args[_key - 2] = arguments[_key];
  }

  return fork.apply(void 0, [takeEvery, patternOrChannel, worker].concat(args));
}
function takeLatest$1(patternOrChannel, worker) {
  if (false) {}

  for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
    args[_key2 - 2] = arguments[_key2];
  }

  return fork.apply(void 0, [takeLatest, patternOrChannel, worker].concat(args));
}
function takeLeading$1(patternOrChannel, worker) {
  if (false) {}

  for (var _len3 = arguments.length, args = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {
    args[_key3 - 2] = arguments[_key3];
  }

  return fork.apply(void 0, [takeLeading, patternOrChannel, worker].concat(args));
}
function throttle$1(ms, patternOrChannel, worker) {
  if (false) {}

  for (var _len4 = arguments.length, args = new Array(_len4 > 3 ? _len4 - 3 : 0), _key4 = 3; _key4 < _len4; _key4++) {
    args[_key4 - 3] = arguments[_key4];
  }

  return fork.apply(void 0, [throttle, ms, patternOrChannel, worker].concat(args));
}
function retry$1(maxTries, delayLength, worker) {
  for (var _len5 = arguments.length, args = new Array(_len5 > 3 ? _len5 - 3 : 0), _key5 = 3; _key5 < _len5; _key5++) {
    args[_key5 - 3] = arguments[_key5];
  }

  return call.apply(void 0, [retry, maxTries, delayLength, worker].concat(args));
}
function debounce(delayLength, pattern, worker) {
  for (var _len6 = arguments.length, args = new Array(_len6 > 3 ? _len6 - 3 : 0), _key6 = 3; _key6 < _len6; _key6++) {
    args[_key6 - 3] = arguments[_key6];
  }

  return fork.apply(void 0, [debounceHelper, delayLength, pattern, worker].concat(args));
}




/***/ }),

/***/ 53597:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CE": () => (/* binding */ channel),
/* harmony export */   "IX": () => (/* binding */ array),
/* harmony export */   "MC": () => (/* binding */ promise),
/* harmony export */   "NA": () => (/* binding */ symbol),
/* harmony export */   "Om": () => (/* binding */ multicast),
/* harmony export */   "Yl": () => (/* binding */ func),
/* harmony export */   "Z_": () => (/* binding */ string),
/* harmony export */   "d5": () => (/* binding */ notUndef),
/* harmony export */   "eR": () => (/* binding */ stringableFunc),
/* harmony export */   "hZ": () => (/* binding */ iterator),
/* harmony export */   "sR": () => (/* binding */ undef),
/* harmony export */   "uj": () => (/* binding */ pattern)
/* harmony export */ });
/* unused harmony exports buffer, effect, iterable, number, object, observable, sagaAction, task */
/* harmony import */ var _redux_saga_symbols__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4548);


var undef = function undef(v) {
  return v === null || v === undefined;
};
var notUndef = function notUndef(v) {
  return v !== null && v !== undefined;
};
var func = function func(f) {
  return typeof f === 'function';
};
var number = function number(n) {
  return typeof n === 'number';
};
var string = function string(s) {
  return typeof s === 'string';
};
var array = Array.isArray;
var object = function object(obj) {
  return obj && !array(obj) && typeof obj === 'object';
};
var promise = function promise(p) {
  return p && func(p.then);
};
var iterator = function iterator(it) {
  return it && func(it.next) && func(it.throw);
};
var iterable = function iterable(it) {
  return it && func(Symbol) ? func(it[Symbol.iterator]) : array(it);
};
var task = function task(t) {
  return t && t[TASK];
};
var sagaAction = function sagaAction(a) {
  return Boolean(a && a[SAGA_ACTION]);
};
var observable = function observable(ob) {
  return ob && func(ob.subscribe);
};
var buffer = function buffer(buf) {
  return buf && func(buf.isEmpty) && func(buf.take) && func(buf.put);
};
var pattern = function pattern(pat) {
  return pat && (string(pat) || symbol(pat) || func(pat) || array(pat) && pat.every(pattern));
};
var channel = function channel(ch) {
  return ch && func(ch.take) && func(ch.close);
};
var stringableFunc = function stringableFunc(f) {
  return func(f) && f.hasOwnProperty('toString');
};
var symbol = function symbol(sym) {
  return Boolean(sym) && typeof Symbol === 'function' && sym.constructor === Symbol && sym !== Symbol.prototype;
};
var multicast = function multicast(ch) {
  return channel(ch) && ch[_redux_saga_symbols__WEBPACK_IMPORTED_MODULE_0__/* .MULTICAST */ .AS];
};
var effect = function effect(eff) {
  return eff && eff[IO];
};




/***/ }),

/***/ 4548:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AS": () => (/* binding */ MULTICAST),
/* harmony export */   "Cs": () => (/* binding */ TASK),
/* harmony export */   "EO": () => (/* binding */ TERMINATE),
/* harmony export */   "IO": () => (/* binding */ IO),
/* harmony export */   "Nm": () => (/* binding */ SAGA_ACTION),
/* harmony export */   "Wd": () => (/* binding */ TASK_CANCEL),
/* harmony export */   "b_": () => (/* binding */ SAGA_LOCATION),
/* harmony export */   "n1": () => (/* binding */ CANCEL),
/* harmony export */   "sC": () => (/* binding */ SELF_CANCELLATION),
/* harmony export */   "sZ": () => (/* binding */ CHANNEL_END_TYPE),
/* harmony export */   "uq": () => (/* binding */ MATCH)
/* harmony export */ });
var createSymbol = function createSymbol(name) {
  return "@@redux-saga/" + name;
};

var CANCEL =
/*#__PURE__*/
createSymbol('CANCEL_PROMISE');
var CHANNEL_END_TYPE =
/*#__PURE__*/
createSymbol('CHANNEL_END');
var IO =
/*#__PURE__*/
createSymbol('IO');
var MATCH =
/*#__PURE__*/
createSymbol('MATCH');
var MULTICAST =
/*#__PURE__*/
createSymbol('MULTICAST');
var SAGA_ACTION =
/*#__PURE__*/
createSymbol('SAGA_ACTION');
var SELF_CANCELLATION =
/*#__PURE__*/
createSymbol('SELF_CANCELLATION');
var TASK =
/*#__PURE__*/
createSymbol('TASK');
var TASK_CANCEL =
/*#__PURE__*/
createSymbol('TASK_CANCEL');
var TERMINATE =
/*#__PURE__*/
createSymbol('TERMINATE');
var SAGA_LOCATION =
/*#__PURE__*/
createSymbol('LOCATION');




/***/ }),

/***/ 96057:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "xC": () => (/* binding */ configureStore),
  "PH": () => (/* binding */ createAction),
  "HF": () => (/* binding */ createEntityAdapter),
  "oM": () => (/* binding */ createSlice)
});

// UNUSED EXPORTS: MiddlewareArray, SHOULD_AUTOBATCH, TaskAbortError, __DO_NOT_USE__ActionTypes, addListener, applyMiddleware, autoBatchEnhancer, bindActionCreators, clearAllListeners, combineReducers, compose, createAsyncThunk, createDraftSafeSelector, createImmutableStateInvariantMiddleware, createListenerMiddleware, createNextState, createReducer, createSelector, createSerializableStateInvariantMiddleware, createStore, current, findNonSerializableValue, freeze, getDefaultMiddleware, getType, isAllOf, isAnyOf, isAsyncThunkAction, isDraft, isFulfilled, isImmutableDefault, isPending, isPlain, isPlainObject, isRejected, isRejectedWithValue, legacy_createStore, miniSerializeError, nanoid, original, prepareAutoBatched, removeListener, unwrapResult

;// CONCATENATED MODULE: ./node_modules/immer/dist/immer.esm.mjs
function n(n){for(var r=arguments.length,t=Array(r>1?r-1:0),e=1;e<r;e++)t[e-1]=arguments[e];if(false){ var i, o; }throw Error("[Immer] minified error nr: "+n+(t.length?" "+t.map((function(n){return"'"+n+"'"})).join(","):"")+". Find the full error at: https://bit.ly/3cXEKWf")}function r(n){return!!n&&!!n[Q]}function t(n){var r;return!!n&&(function(n){if(!n||"object"!=typeof n)return!1;var r=Object.getPrototypeOf(n);if(null===r)return!0;var t=Object.hasOwnProperty.call(r,"constructor")&&r.constructor;return t===Object||"function"==typeof t&&Function.toString.call(t)===Z}(n)||Array.isArray(n)||!!n[L]||!!(null===(r=n.constructor)||void 0===r?void 0:r[L])||s(n)||v(n))}function e(t){return r(t)||n(23,t),t[Q].t}function i(n,r,t){void 0===t&&(t=!1),0===o(n)?(t?Object.keys:nn)(n).forEach((function(e){t&&"symbol"==typeof e||r(e,n[e],n)})):n.forEach((function(t,e){return r(e,t,n)}))}function o(n){var r=n[Q];return r?r.i>3?r.i-4:r.i:Array.isArray(n)?1:s(n)?2:v(n)?3:0}function u(n,r){return 2===o(n)?n.has(r):Object.prototype.hasOwnProperty.call(n,r)}function a(n,r){return 2===o(n)?n.get(r):n[r]}function f(n,r,t){var e=o(n);2===e?n.set(r,t):3===e?n.add(t):n[r]=t}function c(n,r){return n===r?0!==n||1/n==1/r:n!=n&&r!=r}function s(n){return X&&n instanceof Map}function v(n){return q&&n instanceof Set}function p(n){return n.o||n.t}function l(n){if(Array.isArray(n))return Array.prototype.slice.call(n);var r=rn(n);delete r[Q];for(var t=nn(r),e=0;e<t.length;e++){var i=t[e],o=r[i];!1===o.writable&&(o.writable=!0,o.configurable=!0),(o.get||o.set)&&(r[i]={configurable:!0,writable:!0,enumerable:o.enumerable,value:n[i]})}return Object.create(Object.getPrototypeOf(n),r)}function d(n,e){return void 0===e&&(e=!1),y(n)||r(n)||!t(n)||(o(n)>1&&(n.set=n.add=n.clear=n.delete=h),Object.freeze(n),e&&i(n,(function(n,r){return d(r,!0)}),!0)),n}function h(){n(2)}function y(n){return null==n||"object"!=typeof n||Object.isFrozen(n)}function b(r){var t=tn[r];return t||n(18,r),t}function m(n,r){tn[n]||(tn[n]=r)}function _(){return true||0,U}function j(n,r){r&&(b("Patches"),n.u=[],n.s=[],n.v=r)}function O(n){g(n),n.p.forEach(S),n.p=null}function g(n){n===U&&(U=n.l)}function w(n){return U={p:[],l:U,h:n,m:!0,_:0}}function S(n){var r=n[Q];0===r.i||1===r.i?r.j():r.O=!0}function P(r,e){e._=e.p.length;var i=e.p[0],o=void 0!==r&&r!==i;return e.h.g||b("ES5").S(e,r,o),o?(i[Q].P&&(O(e),n(4)),t(r)&&(r=M(e,r),e.l||x(e,r)),e.u&&b("Patches").M(i[Q].t,r,e.u,e.s)):r=M(e,i,[]),O(e),e.u&&e.v(e.u,e.s),r!==H?r:void 0}function M(n,r,t){if(y(r))return r;var e=r[Q];if(!e)return i(r,(function(i,o){return A(n,e,r,i,o,t)}),!0),r;if(e.A!==n)return r;if(!e.P)return x(n,e.t,!0),e.t;if(!e.I){e.I=!0,e.A._--;var o=4===e.i||5===e.i?e.o=l(e.k):e.o,u=o,a=!1;3===e.i&&(u=new Set(o),o.clear(),a=!0),i(u,(function(r,i){return A(n,e,o,r,i,t,a)})),x(n,o,!1),t&&n.u&&b("Patches").N(e,t,n.u,n.s)}return e.o}function A(e,i,o,a,c,s,v){if( false&&0,r(c)){var p=M(e,c,s&&i&&3!==i.i&&!u(i.R,a)?s.concat(a):void 0);if(f(o,a,p),!r(p))return;e.m=!1}else v&&o.add(c);if(t(c)&&!y(c)){if(!e.h.D&&e._<1)return;M(e,c),i&&i.A.l||x(e,c)}}function x(n,r,t){void 0===t&&(t=!1),!n.l&&n.h.D&&n.m&&d(r,t)}function z(n,r){var t=n[Q];return(t?p(t):n)[r]}function I(n,r){if(r in n)for(var t=Object.getPrototypeOf(n);t;){var e=Object.getOwnPropertyDescriptor(t,r);if(e)return e;t=Object.getPrototypeOf(t)}}function k(n){n.P||(n.P=!0,n.l&&k(n.l))}function E(n){n.o||(n.o=l(n.t))}function N(n,r,t){var e=s(r)?b("MapSet").F(r,t):v(r)?b("MapSet").T(r,t):n.g?function(n,r){var t=Array.isArray(n),e={i:t?1:0,A:r?r.A:_(),P:!1,I:!1,R:{},l:r,t:n,k:null,o:null,j:null,C:!1},i=e,o=en;t&&(i=[e],o=on);var u=Proxy.revocable(i,o),a=u.revoke,f=u.proxy;return e.k=f,e.j=a,f}(r,t):b("ES5").J(r,t);return(t?t.A:_()).p.push(e),e}function R(e){return r(e)||n(22,e),function n(r){if(!t(r))return r;var e,u=r[Q],c=o(r);if(u){if(!u.P&&(u.i<4||!b("ES5").K(u)))return u.t;u.I=!0,e=D(r,c),u.I=!1}else e=D(r,c);return i(e,(function(r,t){u&&a(u.t,r)===t||f(e,r,n(t))})),3===c?new Set(e):e}(e)}function D(n,r){switch(r){case 2:return new Map(n);case 3:return Array.from(n)}return l(n)}function F(){function t(n,r){var t=s[n];return t?t.enumerable=r:s[n]=t={configurable:!0,enumerable:r,get:function(){var r=this[Q];return false&&0,en.get(r,n)},set:function(r){var t=this[Q]; false&&0,en.set(t,n,r)}},t}function e(n){for(var r=n.length-1;r>=0;r--){var t=n[r][Q];if(!t.P)switch(t.i){case 5:a(t)&&k(t);break;case 4:o(t)&&k(t)}}}function o(n){for(var r=n.t,t=n.k,e=nn(t),i=e.length-1;i>=0;i--){var o=e[i];if(o!==Q){var a=r[o];if(void 0===a&&!u(r,o))return!0;var f=t[o],s=f&&f[Q];if(s?s.t!==a:!c(f,a))return!0}}var v=!!r[Q];return e.length!==nn(r).length+(v?0:1)}function a(n){var r=n.k;if(r.length!==n.t.length)return!0;var t=Object.getOwnPropertyDescriptor(r,r.length-1);if(t&&!t.get)return!0;for(var e=0;e<r.length;e++)if(!r.hasOwnProperty(e))return!0;return!1}function f(r){r.O&&n(3,JSON.stringify(p(r)))}var s={};m("ES5",{J:function(n,r){var e=Array.isArray(n),i=function(n,r){if(n){for(var e=Array(r.length),i=0;i<r.length;i++)Object.defineProperty(e,""+i,t(i,!0));return e}var o=rn(r);delete o[Q];for(var u=nn(o),a=0;a<u.length;a++){var f=u[a];o[f]=t(f,n||!!o[f].enumerable)}return Object.create(Object.getPrototypeOf(r),o)}(e,n),o={i:e?5:4,A:r?r.A:_(),P:!1,I:!1,R:{},l:r,t:n,k:i,o:null,O:!1,C:!1};return Object.defineProperty(i,Q,{value:o,writable:!0}),i},S:function(n,t,o){o?r(t)&&t[Q].A===n&&e(n.p):(n.u&&function n(r){if(r&&"object"==typeof r){var t=r[Q];if(t){var e=t.t,o=t.k,f=t.R,c=t.i;if(4===c)i(o,(function(r){r!==Q&&(void 0!==e[r]||u(e,r)?f[r]||n(o[r]):(f[r]=!0,k(t)))})),i(e,(function(n){void 0!==o[n]||u(o,n)||(f[n]=!1,k(t))}));else if(5===c){if(a(t)&&(k(t),f.length=!0),o.length<e.length)for(var s=o.length;s<e.length;s++)f[s]=!1;else for(var v=e.length;v<o.length;v++)f[v]=!0;for(var p=Math.min(o.length,e.length),l=0;l<p;l++)o.hasOwnProperty(l)||(f[l]=!0),void 0===f[l]&&n(o[l])}}}}(n.p[0]),e(n.p))},K:function(n){return 4===n.i?o(n):a(n)}})}function T(){function e(n){if(!t(n))return n;if(Array.isArray(n))return n.map(e);if(s(n))return new Map(Array.from(n.entries()).map((function(n){return[n[0],e(n[1])]})));if(v(n))return new Set(Array.from(n).map(e));var r=Object.create(Object.getPrototypeOf(n));for(var i in n)r[i]=e(n[i]);return u(n,L)&&(r[L]=n[L]),r}function f(n){return r(n)?e(n):n}var c="add";m("Patches",{$:function(r,t){return t.forEach((function(t){for(var i=t.path,u=t.op,f=r,s=0;s<i.length-1;s++){var v=o(f),p=""+i[s];0!==v&&1!==v||"__proto__"!==p&&"constructor"!==p||n(24),"function"==typeof f&&"prototype"===p&&n(24),"object"!=typeof(f=a(f,p))&&n(15,i.join("/"))}var l=o(f),d=e(t.value),h=i[i.length-1];switch(u){case"replace":switch(l){case 2:return f.set(h,d);case 3:n(16);default:return f[h]=d}case c:switch(l){case 1:return"-"===h?f.push(d):f.splice(h,0,d);case 2:return f.set(h,d);case 3:return f.add(d);default:return f[h]=d}case"remove":switch(l){case 1:return f.splice(h,1);case 2:return f.delete(h);case 3:return f.delete(t.value);default:return delete f[h]}default:n(17,u)}})),r},N:function(n,r,t,e){switch(n.i){case 0:case 4:case 2:return function(n,r,t,e){var o=n.t,s=n.o;i(n.R,(function(n,i){var v=a(o,n),p=a(s,n),l=i?u(o,n)?"replace":c:"remove";if(v!==p||"replace"!==l){var d=r.concat(n);t.push("remove"===l?{op:l,path:d}:{op:l,path:d,value:p}),e.push(l===c?{op:"remove",path:d}:"remove"===l?{op:c,path:d,value:f(v)}:{op:"replace",path:d,value:f(v)})}}))}(n,r,t,e);case 5:case 1:return function(n,r,t,e){var i=n.t,o=n.R,u=n.o;if(u.length<i.length){var a=[u,i];i=a[0],u=a[1];var s=[e,t];t=s[0],e=s[1]}for(var v=0;v<i.length;v++)if(o[v]&&u[v]!==i[v]){var p=r.concat([v]);t.push({op:"replace",path:p,value:f(u[v])}),e.push({op:"replace",path:p,value:f(i[v])})}for(var l=i.length;l<u.length;l++){var d=r.concat([l]);t.push({op:c,path:d,value:f(u[l])})}i.length<u.length&&e.push({op:"replace",path:r.concat(["length"]),value:i.length})}(n,r,t,e);case 3:return function(n,r,t,e){var i=n.t,o=n.o,u=0;i.forEach((function(n){if(!o.has(n)){var i=r.concat([u]);t.push({op:"remove",path:i,value:n}),e.unshift({op:c,path:i,value:n})}u++})),u=0,o.forEach((function(n){if(!i.has(n)){var o=r.concat([u]);t.push({op:c,path:o,value:n}),e.unshift({op:"remove",path:o,value:n})}u++}))}(n,r,t,e)}},M:function(n,r,t,e){t.push({op:"replace",path:[],value:r===H?void 0:r}),e.push({op:"replace",path:[],value:n})}})}function C(){function r(n,r){function t(){this.constructor=n}a(n,r),n.prototype=(t.prototype=r.prototype,new t)}function e(n){n.o||(n.R=new Map,n.o=new Map(n.t))}function o(n){n.o||(n.o=new Set,n.t.forEach((function(r){if(t(r)){var e=N(n.A.h,r,n);n.p.set(r,e),n.o.add(e)}else n.o.add(r)})))}function u(r){r.O&&n(3,JSON.stringify(p(r)))}var a=function(n,r){return(a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,r){n.__proto__=r}||function(n,r){for(var t in r)r.hasOwnProperty(t)&&(n[t]=r[t])})(n,r)},f=function(){function n(n,r){return this[Q]={i:2,l:r,A:r?r.A:_(),P:!1,I:!1,o:void 0,R:void 0,t:n,k:this,C:!1,O:!1},this}r(n,Map);var o=n.prototype;return Object.defineProperty(o,"size",{get:function(){return p(this[Q]).size}}),o.has=function(n){return p(this[Q]).has(n)},o.set=function(n,r){var t=this[Q];return u(t),p(t).has(n)&&p(t).get(n)===r||(e(t),k(t),t.R.set(n,!0),t.o.set(n,r),t.R.set(n,!0)),this},o.delete=function(n){if(!this.has(n))return!1;var r=this[Q];return u(r),e(r),k(r),r.t.has(n)?r.R.set(n,!1):r.R.delete(n),r.o.delete(n),!0},o.clear=function(){var n=this[Q];u(n),p(n).size&&(e(n),k(n),n.R=new Map,i(n.t,(function(r){n.R.set(r,!1)})),n.o.clear())},o.forEach=function(n,r){var t=this;p(this[Q]).forEach((function(e,i){n.call(r,t.get(i),i,t)}))},o.get=function(n){var r=this[Q];u(r);var i=p(r).get(n);if(r.I||!t(i))return i;if(i!==r.t.get(n))return i;var o=N(r.A.h,i,r);return e(r),r.o.set(n,o),o},o.keys=function(){return p(this[Q]).keys()},o.values=function(){var n,r=this,t=this.keys();return(n={})[V]=function(){return r.values()},n.next=function(){var n=t.next();return n.done?n:{done:!1,value:r.get(n.value)}},n},o.entries=function(){var n,r=this,t=this.keys();return(n={})[V]=function(){return r.entries()},n.next=function(){var n=t.next();if(n.done)return n;var e=r.get(n.value);return{done:!1,value:[n.value,e]}},n},o[V]=function(){return this.entries()},n}(),c=function(){function n(n,r){return this[Q]={i:3,l:r,A:r?r.A:_(),P:!1,I:!1,o:void 0,t:n,k:this,p:new Map,O:!1,C:!1},this}r(n,Set);var t=n.prototype;return Object.defineProperty(t,"size",{get:function(){return p(this[Q]).size}}),t.has=function(n){var r=this[Q];return u(r),r.o?!!r.o.has(n)||!(!r.p.has(n)||!r.o.has(r.p.get(n))):r.t.has(n)},t.add=function(n){var r=this[Q];return u(r),this.has(n)||(o(r),k(r),r.o.add(n)),this},t.delete=function(n){if(!this.has(n))return!1;var r=this[Q];return u(r),o(r),k(r),r.o.delete(n)||!!r.p.has(n)&&r.o.delete(r.p.get(n))},t.clear=function(){var n=this[Q];u(n),p(n).size&&(o(n),k(n),n.o.clear())},t.values=function(){var n=this[Q];return u(n),o(n),n.o.values()},t.entries=function(){var n=this[Q];return u(n),o(n),n.o.entries()},t.keys=function(){return this.values()},t[V]=function(){return this.values()},t.forEach=function(n,r){for(var t=this.values(),e=t.next();!e.done;)n.call(r,e.value,e.value,this),e=t.next()},n}();m("MapSet",{F:function(n,r){return new f(n,r)},T:function(n,r){return new c(n,r)}})}function J(){F(),C(),T()}function K(n){return n}function $(n){return n}var G,U,W="undefined"!=typeof Symbol&&"symbol"==typeof Symbol("x"),X="undefined"!=typeof Map,q="undefined"!=typeof Set,B="undefined"!=typeof Proxy&&void 0!==Proxy.revocable&&"undefined"!=typeof Reflect,H=W?Symbol.for("immer-nothing"):((G={})["immer-nothing"]=!0,G),L=W?Symbol.for("immer-draftable"):"__$immer_draftable",Q=W?Symbol.for("immer-state"):"__$immer_state",V="undefined"!=typeof Symbol&&Symbol.iterator||"@@iterator",Y={0:"Illegal state",1:"Immer drafts cannot have computed properties",2:"This object has been frozen and should not be mutated",3:function(n){return"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? "+n},4:"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.",5:"Immer forbids circular references",6:"The first or second argument to `produce` must be a function",7:"The third argument to `produce` must be a function or undefined",8:"First argument to `createDraft` must be a plain object, an array, or an immerable object",9:"First argument to `finishDraft` must be a draft returned by `createDraft`",10:"The given draft is already finalized",11:"Object.defineProperty() cannot be used on an Immer draft",12:"Object.setPrototypeOf() cannot be used on an Immer draft",13:"Immer only supports deleting array indices",14:"Immer only supports setting array indices and the 'length' property",15:function(n){return"Cannot apply patch, path doesn't resolve: "+n},16:'Sets cannot have "replace" patches.',17:function(n){return"Unsupported patch operation: "+n},18:function(n){return"The plugin for '"+n+"' has not been loaded into Immer. To enable the plugin, import and call `enable"+n+"()` when initializing your application."},20:"Cannot use proxies if Proxy, Proxy.revocable or Reflect are not available",21:function(n){return"produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '"+n+"'"},22:function(n){return"'current' expects a draft, got: "+n},23:function(n){return"'original' expects a draft, got: "+n},24:"Patching reserved attributes like __proto__, prototype and constructor is not allowed"},Z=""+Object.prototype.constructor,nn="undefined"!=typeof Reflect&&Reflect.ownKeys?Reflect.ownKeys:void 0!==Object.getOwnPropertySymbols?function(n){return Object.getOwnPropertyNames(n).concat(Object.getOwnPropertySymbols(n))}:Object.getOwnPropertyNames,rn=Object.getOwnPropertyDescriptors||function(n){var r={};return nn(n).forEach((function(t){r[t]=Object.getOwnPropertyDescriptor(n,t)})),r},tn={},en={get:function(n,r){if(r===Q)return n;var e=p(n);if(!u(e,r))return function(n,r,t){var e,i=I(r,t);return i?"value"in i?i.value:null===(e=i.get)||void 0===e?void 0:e.call(n.k):void 0}(n,e,r);var i=e[r];return n.I||!t(i)?i:i===z(n.t,r)?(E(n),n.o[r]=N(n.A.h,i,n)):i},has:function(n,r){return r in p(n)},ownKeys:function(n){return Reflect.ownKeys(p(n))},set:function(n,r,t){var e=I(p(n),r);if(null==e?void 0:e.set)return e.set.call(n.k,t),!0;if(!n.P){var i=z(p(n),r),o=null==i?void 0:i[Q];if(o&&o.t===t)return n.o[r]=t,n.R[r]=!1,!0;if(c(t,i)&&(void 0!==t||u(n.t,r)))return!0;E(n),k(n)}return n.o[r]===t&&(void 0!==t||r in n.o)||Number.isNaN(t)&&Number.isNaN(n.o[r])||(n.o[r]=t,n.R[r]=!0),!0},deleteProperty:function(n,r){return void 0!==z(n.t,r)||r in n.t?(n.R[r]=!1,E(n),k(n)):delete n.R[r],n.o&&delete n.o[r],!0},getOwnPropertyDescriptor:function(n,r){var t=p(n),e=Reflect.getOwnPropertyDescriptor(t,r);return e?{writable:!0,configurable:1!==n.i||"length"!==r,enumerable:e.enumerable,value:t[r]}:e},defineProperty:function(){n(11)},getPrototypeOf:function(n){return Object.getPrototypeOf(n.t)},setPrototypeOf:function(){n(12)}},on={};i(en,(function(n,r){on[n]=function(){return arguments[0]=arguments[0][0],r.apply(this,arguments)}})),on.deleteProperty=function(r,t){return false&&0,on.set.call(this,r,t,void 0)},on.set=function(r,t,e){return false&&0,en.set.call(this,r[0],t,e,r[0])};var un=function(){function e(r){var e=this;this.g=B,this.D=!0,this.produce=function(r,i,o){if("function"==typeof r&&"function"!=typeof i){var u=i;i=r;var a=e;return function(n){var r=this;void 0===n&&(n=u);for(var t=arguments.length,e=Array(t>1?t-1:0),o=1;o<t;o++)e[o-1]=arguments[o];return a.produce(n,(function(n){var t;return(t=i).call.apply(t,[r,n].concat(e))}))}}var f;if("function"!=typeof i&&n(6),void 0!==o&&"function"!=typeof o&&n(7),t(r)){var c=w(e),s=N(e,r,void 0),v=!0;try{f=i(s),v=!1}finally{v?O(c):g(c)}return"undefined"!=typeof Promise&&f instanceof Promise?f.then((function(n){return j(c,o),P(n,c)}),(function(n){throw O(c),n})):(j(c,o),P(f,c))}if(!r||"object"!=typeof r){if(void 0===(f=i(r))&&(f=r),f===H&&(f=void 0),e.D&&d(f,!0),o){var p=[],l=[];b("Patches").M(r,f,p,l),o(p,l)}return f}n(21,r)},this.produceWithPatches=function(n,r){if("function"==typeof n)return function(r){for(var t=arguments.length,i=Array(t>1?t-1:0),o=1;o<t;o++)i[o-1]=arguments[o];return e.produceWithPatches(r,(function(r){return n.apply(void 0,[r].concat(i))}))};var t,i,o=e.produce(n,r,(function(n,r){t=n,i=r}));return"undefined"!=typeof Promise&&o instanceof Promise?o.then((function(n){return[n,t,i]})):[o,t,i]},"boolean"==typeof(null==r?void 0:r.useProxies)&&this.setUseProxies(r.useProxies),"boolean"==typeof(null==r?void 0:r.autoFreeze)&&this.setAutoFreeze(r.autoFreeze)}var i=e.prototype;return i.createDraft=function(e){t(e)||n(8),r(e)&&(e=R(e));var i=w(this),o=N(this,e,void 0);return o[Q].C=!0,g(i),o},i.finishDraft=function(r,t){var e=r&&r[Q]; false&&(0);var i=e.A;return j(i,t),P(void 0,i)},i.setAutoFreeze=function(n){this.D=n},i.setUseProxies=function(r){r&&!B&&n(20),this.g=r},i.applyPatches=function(n,t){var e;for(e=t.length-1;e>=0;e--){var i=t[e];if(0===i.path.length&&"replace"===i.op){n=i.value;break}}e>-1&&(t=t.slice(e+1));var o=b("Patches").$;return r(n)?o(n,t):this.produce(n,(function(n){return o(n,t)}))},e}(),an=new un,fn=an.produce,cn=an.produceWithPatches.bind(an),sn=an.setAutoFreeze.bind(an),vn=an.setUseProxies.bind(an),pn=an.applyPatches.bind(an),ln=an.createDraft.bind(an),dn=an.finishDraft.bind(an);/* harmony default export */ var immer_esm = (fn);
//# sourceMappingURL=immer.esm.js.map

// EXTERNAL MODULE: ./node_modules/reselect/es/index.js + 1 modules
var es = __webpack_require__(13806);
// EXTERNAL MODULE: ./node_modules/redux/es/redux.js + 2 modules
var redux = __webpack_require__(20118);
;// CONCATENATED MODULE: ./node_modules/redux-thunk/es/index.js
/** A function that accepts a potential "extra argument" value to be injected later,
 * and returns an instance of the thunk middleware that uses that value
 */
function createThunkMiddleware(extraArgument) {
  // Standard Redux middleware definition pattern:
  // See: https://redux.js.org/tutorials/fundamentals/part-4-store#writing-custom-middleware
  var middleware = function middleware(_ref) {
    var dispatch = _ref.dispatch,
        getState = _ref.getState;
    return function (next) {
      return function (action) {
        // The thunk middleware looks for any functions that were passed to `store.dispatch`.
        // If this "action" is really a function, call it and return the result.
        if (typeof action === 'function') {
          // Inject the store's `dispatch` and `getState` methods, as well as any "extra arg"
          return action(dispatch, getState, extraArgument);
        } // Otherwise, pass the action down the middleware chain as usual


        return next(action);
      };
    };
  };

  return middleware;
}

var thunk = createThunkMiddleware(); // Attach the factory function so users can create a customized version
// with whatever "extra arg" they want to inject into their thunks

thunk.withExtraArgument = createThunkMiddleware;
/* harmony default export */ var redux_thunk_es = (thunk);
;// CONCATENATED MODULE: ./node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArray = (undefined && undefined.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = function (obj, key, value) { return key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value: value }) : obj[key] = value; };
var __spreadValues = function (a, b) {
    for (var prop in b || (b = {}))
        if (__hasOwnProp.call(b, prop))
            __defNormalProp(a, prop, b[prop]);
    if (__getOwnPropSymbols)
        for (var _i = 0, _c = __getOwnPropSymbols(b); _i < _c.length; _i++) {
            var prop = _c[_i];
            if (__propIsEnum.call(b, prop))
                __defNormalProp(a, prop, b[prop]);
        }
    return a;
};
var __spreadProps = function (a, b) { return __defProps(a, __getOwnPropDescs(b)); };
var __async = function (__this, __arguments, generator) {
    return new Promise(function (resolve, reject) {
        var fulfilled = function (value) {
            try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            }
        };
        var rejected = function (value) {
            try {
                step(generator.throw(value));
            }
            catch (e) {
                reject(e);
            }
        };
        var step = function (x) { return x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected); };
        step((generator = generator.apply(__this, __arguments)).next());
    });
};
// src/index.ts




// src/createDraftSafeSelector.ts


var createDraftSafeSelector = function () {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    var selector = es/* createSelector.apply */.P1.apply(void 0, args);
    var wrappedSelector = function (value) {
        var rest = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            rest[_i - 1] = arguments[_i];
        }
        return selector.apply(void 0, __spreadArray([r(value) ? R(value) : value], rest));
    };
    return wrappedSelector;
};
// src/configureStore.ts

// src/devtoolsExtension.ts

var composeWithDevTools = typeof window !== "undefined" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : function () {
    if (arguments.length === 0)
        return void 0;
    if (typeof arguments[0] === "object")
        return redux/* compose */.qC;
    return redux/* compose.apply */.qC.apply(null, arguments);
};
var devToolsEnhancer = typeof window !== "undefined" && window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__ : function () {
    return function (noop2) {
        return noop2;
    };
};
// src/isPlainObject.ts
function isPlainObject(value) {
    if (typeof value !== "object" || value === null)
        return false;
    var proto = Object.getPrototypeOf(value);
    if (proto === null)
        return true;
    var baseProto = proto;
    while (Object.getPrototypeOf(baseProto) !== null) {
        baseProto = Object.getPrototypeOf(baseProto);
    }
    return proto === baseProto;
}
// src/getDefaultMiddleware.ts

// src/utils.ts

function getTimeMeasureUtils(maxDelay, fnName) {
    var elapsed = 0;
    return {
        measureTime: function (fn) {
            var started = Date.now();
            try {
                return fn();
            }
            finally {
                var finished = Date.now();
                elapsed += finished - started;
            }
        },
        warnIfExceeded: function () {
            if (elapsed > maxDelay) {
                console.warn(fnName + " took " + elapsed + "ms, which is more than the warning threshold of " + maxDelay + "ms. \nIf your state or actions are very large, you may want to disable the middleware as it might cause too much of a slowdown in development mode. See https://redux-toolkit.js.org/api/getDefaultMiddleware for instructions.\nIt is disabled in production builds, so you don't need to worry about that.");
            }
        }
    };
}
var MiddlewareArray = /** @class */ (function (_super) {
    __extends(MiddlewareArray, _super);
    function MiddlewareArray() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = _super.apply(this, args) || this;
        Object.setPrototypeOf(_this, MiddlewareArray.prototype);
        return _this;
    }
    Object.defineProperty(MiddlewareArray, Symbol.species, {
        get: function () {
            return MiddlewareArray;
        },
        enumerable: false,
        configurable: true
    });
    MiddlewareArray.prototype.concat = function () {
        var arr = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            arr[_i] = arguments[_i];
        }
        return _super.prototype.concat.apply(this, arr);
    };
    MiddlewareArray.prototype.prepend = function () {
        var arr = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            arr[_i] = arguments[_i];
        }
        if (arr.length === 1 && Array.isArray(arr[0])) {
            return new (MiddlewareArray.bind.apply(MiddlewareArray, __spreadArray([void 0], arr[0].concat(this))))();
        }
        return new (MiddlewareArray.bind.apply(MiddlewareArray, __spreadArray([void 0], arr.concat(this))))();
    };
    return MiddlewareArray;
}(Array));
function freezeDraftable(val) {
    return t(val) ? immer_esm(val, function () {
    }) : val;
}
// src/immutableStateInvariantMiddleware.ts
var isProduction = (/* unused pure expression or super */ null && ("production" === "production"));
var prefix = "Invariant failed";
function invariant(condition, message) {
    if (condition) {
        return;
    }
    if (isProduction) {
        throw new Error(prefix);
    }
    throw new Error(prefix + ": " + (message || ""));
}
function stringify(obj, serializer, indent, decycler) {
    return JSON.stringify(obj, getSerialize(serializer, decycler), indent);
}
function getSerialize(serializer, decycler) {
    var stack = [], keys = [];
    if (!decycler)
        decycler = function (_, value) {
            if (stack[0] === value)
                return "[Circular ~]";
            return "[Circular ~." + keys.slice(0, stack.indexOf(value)).join(".") + "]";
        };
    return function (key, value) {
        if (stack.length > 0) {
            var thisPos = stack.indexOf(this);
            ~thisPos ? stack.splice(thisPos + 1) : stack.push(this);
            ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key);
            if (~stack.indexOf(value))
                value = decycler.call(this, key, value);
        }
        else
            stack.push(value);
        return serializer == null ? value : serializer.call(this, key, value);
    };
}
function isImmutableDefault(value) {
    return typeof value !== "object" || value == null || Object.isFrozen(value);
}
function trackForMutations(isImmutable, ignorePaths, obj) {
    var trackedProperties = trackProperties(isImmutable, ignorePaths, obj);
    return {
        detectMutations: function () {
            return detectMutations(isImmutable, ignorePaths, trackedProperties, obj);
        }
    };
}
function trackProperties(isImmutable, ignorePaths, obj, path) {
    if (ignorePaths === void 0) { ignorePaths = []; }
    if (path === void 0) { path = ""; }
    var tracked = { value: obj };
    if (!isImmutable(obj)) {
        tracked.children = {};
        for (var key in obj) {
            var childPath = path ? path + "." + key : key;
            if (ignorePaths.length && ignorePaths.indexOf(childPath) !== -1) {
                continue;
            }
            tracked.children[key] = trackProperties(isImmutable, ignorePaths, obj[key], childPath);
        }
    }
    return tracked;
}
function detectMutations(isImmutable, ignoredPaths, trackedProperty, obj, sameParentRef, path) {
    if (ignoredPaths === void 0) { ignoredPaths = []; }
    if (sameParentRef === void 0) { sameParentRef = false; }
    if (path === void 0) { path = ""; }
    var prevObj = trackedProperty ? trackedProperty.value : void 0;
    var sameRef = prevObj === obj;
    if (sameParentRef && !sameRef && !Number.isNaN(obj)) {
        return { wasMutated: true, path: path };
    }
    if (isImmutable(prevObj) || isImmutable(obj)) {
        return { wasMutated: false };
    }
    var keysToDetect = {};
    for (var key in trackedProperty.children) {
        keysToDetect[key] = true;
    }
    for (var key in obj) {
        keysToDetect[key] = true;
    }
    var hasIgnoredPaths = ignoredPaths.length > 0;
    var _loop_1 = function (key) {
        var nestedPath = path ? path + "." + key : key;
        if (hasIgnoredPaths) {
            var hasMatches = ignoredPaths.some(function (ignored) {
                if (ignored instanceof RegExp) {
                    return ignored.test(nestedPath);
                }
                return nestedPath === ignored;
            });
            if (hasMatches) {
                return "continue";
            }
        }
        var result = detectMutations(isImmutable, ignoredPaths, trackedProperty.children[key], obj[key], sameRef, nestedPath);
        if (result.wasMutated) {
            return { value: result };
        }
    };
    for (var key in keysToDetect) {
        var state_1 = _loop_1(key);
        if (typeof state_1 === "object")
            return state_1.value;
    }
    return { wasMutated: false };
}
function createImmutableStateInvariantMiddleware(options) {
    if (options === void 0) { options = {}; }
    if (true) {
        return function () { return function (next) { return function (action) { return next(action); }; }; };
    }
    var _c = options.isImmutable, isImmutable = _c === void 0 ? isImmutableDefault : _c, ignoredPaths = options.ignoredPaths, _d = options.warnAfter, warnAfter = _d === void 0 ? 32 : _d, ignore = options.ignore;
    ignoredPaths = ignoredPaths || ignore;
    var track = trackForMutations.bind(null, isImmutable, ignoredPaths);
    return function (_c) {
        var getState = _c.getState;
        var state = getState();
        var tracker = track(state);
        var result;
        return function (next) { return function (action) {
            var measureUtils = getTimeMeasureUtils(warnAfter, "ImmutableStateInvariantMiddleware");
            measureUtils.measureTime(function () {
                state = getState();
                result = tracker.detectMutations();
                tracker = track(state);
                invariant(!result.wasMutated, "A state mutation was detected between dispatches, in the path '" + (result.path || "") + "'.  This may cause incorrect behavior. (https://redux.js.org/style-guide/style-guide#do-not-mutate-state)");
            });
            var dispatchedAction = next(action);
            measureUtils.measureTime(function () {
                state = getState();
                result = tracker.detectMutations();
                tracker = track(state);
                result.wasMutated && invariant(!result.wasMutated, "A state mutation was detected inside a dispatch, in the path: " + (result.path || "") + ". Take a look at the reducer(s) handling the action " + stringify(action) + ". (https://redux.js.org/style-guide/style-guide#do-not-mutate-state)");
            });
            measureUtils.warnIfExceeded();
            return dispatchedAction;
        }; };
    };
}
// src/serializableStateInvariantMiddleware.ts
function isPlain(val) {
    var type = typeof val;
    return val == null || type === "string" || type === "boolean" || type === "number" || Array.isArray(val) || isPlainObject(val);
}
function findNonSerializableValue(value, path, isSerializable, getEntries, ignoredPaths, cache) {
    if (path === void 0) { path = ""; }
    if (isSerializable === void 0) { isSerializable = isPlain; }
    if (ignoredPaths === void 0) { ignoredPaths = []; }
    var foundNestedSerializable;
    if (!isSerializable(value)) {
        return {
            keyPath: path || "<root>",
            value: value
        };
    }
    if (typeof value !== "object" || value === null) {
        return false;
    }
    if (cache == null ? void 0 : cache.has(value))
        return false;
    var entries = getEntries != null ? getEntries(value) : Object.entries(value);
    var hasIgnoredPaths = ignoredPaths.length > 0;
    var _loop_2 = function (key, nestedValue) {
        var nestedPath = path ? path + "." + key : key;
        if (hasIgnoredPaths) {
            var hasMatches = ignoredPaths.some(function (ignored) {
                if (ignored instanceof RegExp) {
                    return ignored.test(nestedPath);
                }
                return nestedPath === ignored;
            });
            if (hasMatches) {
                return "continue";
            }
        }
        if (!isSerializable(nestedValue)) {
            return { value: {
                    keyPath: nestedPath,
                    value: nestedValue
                } };
        }
        if (typeof nestedValue === "object") {
            foundNestedSerializable = findNonSerializableValue(nestedValue, nestedPath, isSerializable, getEntries, ignoredPaths, cache);
            if (foundNestedSerializable) {
                return { value: foundNestedSerializable };
            }
        }
    };
    for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {
        var _c = entries_1[_i], key = _c[0], nestedValue = _c[1];
        var state_2 = _loop_2(key, nestedValue);
        if (typeof state_2 === "object")
            return state_2.value;
    }
    if (cache && isNestedFrozen(value))
        cache.add(value);
    return false;
}
function isNestedFrozen(value) {
    if (!Object.isFrozen(value))
        return false;
    for (var _i = 0, _c = Object.values(value); _i < _c.length; _i++) {
        var nestedValue = _c[_i];
        if (typeof nestedValue !== "object" || nestedValue === null)
            continue;
        if (!isNestedFrozen(nestedValue))
            return false;
    }
    return true;
}
function createSerializableStateInvariantMiddleware(options) {
    if (options === void 0) { options = {}; }
    if (true) {
        return function () { return function (next) { return function (action) { return next(action); }; }; };
    }
    var _c = options.isSerializable, isSerializable = _c === void 0 ? isPlain : _c, getEntries = options.getEntries, _d = options.ignoredActions, ignoredActions = _d === void 0 ? [] : _d, _e = options.ignoredActionPaths, ignoredActionPaths = _e === void 0 ? ["meta.arg", "meta.baseQueryMeta"] : _e, _f = options.ignoredPaths, ignoredPaths = _f === void 0 ? [] : _f, _g = options.warnAfter, warnAfter = _g === void 0 ? 32 : _g, _h = options.ignoreState, ignoreState = _h === void 0 ? false : _h, _j = options.ignoreActions, ignoreActions = _j === void 0 ? false : _j, _k = options.disableCache, disableCache = _k === void 0 ? false : _k;
    var cache = !disableCache && WeakSet ? new WeakSet() : void 0;
    return function (storeAPI) { return function (next) { return function (action) {
        var result = next(action);
        var measureUtils = getTimeMeasureUtils(warnAfter, "SerializableStateInvariantMiddleware");
        if (!ignoreActions && !(ignoredActions.length && ignoredActions.indexOf(action.type) !== -1)) {
            measureUtils.measureTime(function () {
                var foundActionNonSerializableValue = findNonSerializableValue(action, "", isSerializable, getEntries, ignoredActionPaths, cache);
                if (foundActionNonSerializableValue) {
                    var keyPath = foundActionNonSerializableValue.keyPath, value = foundActionNonSerializableValue.value;
                    console.error("A non-serializable value was detected in an action, in the path: `" + keyPath + "`. Value:", value, "\nTake a look at the logic that dispatched this action: ", action, "\n(See https://redux.js.org/faq/actions#why-should-type-be-a-string-or-at-least-serializable-why-should-my-action-types-be-constants)", "\n(To allow non-serializable values see: https://redux-toolkit.js.org/usage/usage-guide#working-with-non-serializable-data)");
                }
            });
        }
        if (!ignoreState) {
            measureUtils.measureTime(function () {
                var state = storeAPI.getState();
                var foundStateNonSerializableValue = findNonSerializableValue(state, "", isSerializable, getEntries, ignoredPaths, cache);
                if (foundStateNonSerializableValue) {
                    var keyPath = foundStateNonSerializableValue.keyPath, value = foundStateNonSerializableValue.value;
                    console.error("A non-serializable value was detected in the state, in the path: `" + keyPath + "`. Value:", value, "\nTake a look at the reducer(s) handling this action type: " + action.type + ".\n(See https://redux.js.org/faq/organizing-state#can-i-put-functions-promises-or-other-non-serializable-items-in-my-store-state)");
                }
            });
            measureUtils.warnIfExceeded();
        }
        return result;
    }; }; };
}
// src/getDefaultMiddleware.ts
function isBoolean(x) {
    return typeof x === "boolean";
}
function curryGetDefaultMiddleware() {
    return function curriedGetDefaultMiddleware(options) {
        return getDefaultMiddleware(options);
    };
}
function getDefaultMiddleware(options) {
    if (options === void 0) { options = {}; }
    var _c = options.thunk, thunk = _c === void 0 ? true : _c, _d = options.immutableCheck, immutableCheck = _d === void 0 ? true : _d, _e = options.serializableCheck, serializableCheck = _e === void 0 ? true : _e;
    var middlewareArray = new MiddlewareArray();
    if (thunk) {
        if (isBoolean(thunk)) {
            middlewareArray.push(redux_thunk_es);
        }
        else {
            middlewareArray.push(redux_thunk_es.withExtraArgument(thunk.extraArgument));
        }
    }
    if (false) { var serializableOptions, immutableOptions; }
    return middlewareArray;
}
// src/configureStore.ts
var IS_PRODUCTION = "production" === "production";
function configureStore(options) {
    var curriedGetDefaultMiddleware = curryGetDefaultMiddleware();
    var _c = options || {}, _d = _c.reducer, reducer = _d === void 0 ? void 0 : _d, _e = _c.middleware, middleware = _e === void 0 ? curriedGetDefaultMiddleware() : _e, _f = _c.devTools, devTools = _f === void 0 ? true : _f, _g = _c.preloadedState, preloadedState = _g === void 0 ? void 0 : _g, _h = _c.enhancers, enhancers = _h === void 0 ? void 0 : _h;
    var rootReducer;
    if (typeof reducer === "function") {
        rootReducer = reducer;
    }
    else if (isPlainObject(reducer)) {
        rootReducer = (0,redux/* combineReducers */.UY)(reducer);
    }
    else {
        throw new Error('"reducer" is a required argument, and must be a function or an object of functions that can be passed to combineReducers');
    }
    var finalMiddleware = middleware;
    if (typeof finalMiddleware === "function") {
        finalMiddleware = finalMiddleware(curriedGetDefaultMiddleware);
        if (!IS_PRODUCTION && !Array.isArray(finalMiddleware)) {
            throw new Error("when using a middleware builder function, an array of middleware must be returned");
        }
    }
    if (!IS_PRODUCTION && finalMiddleware.some(function (item) { return typeof item !== "function"; })) {
        throw new Error("each middleware provided to configureStore must be a function");
    }
    var middlewareEnhancer = redux/* applyMiddleware.apply */.md.apply(void 0, finalMiddleware);
    var finalCompose = redux/* compose */.qC;
    if (devTools) {
        finalCompose = composeWithDevTools(__spreadValues({
            trace: !IS_PRODUCTION
        }, typeof devTools === "object" && devTools));
    }
    var storeEnhancers = [middlewareEnhancer];
    if (Array.isArray(enhancers)) {
        storeEnhancers = __spreadArray([middlewareEnhancer], enhancers);
    }
    else if (typeof enhancers === "function") {
        storeEnhancers = enhancers(storeEnhancers);
    }
    var composedEnhancer = finalCompose.apply(void 0, storeEnhancers);
    return (0,redux/* createStore */.MT)(rootReducer, preloadedState, composedEnhancer);
}
// src/createAction.ts
function createAction(type, prepareAction) {
    function actionCreator() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (prepareAction) {
            var prepared = prepareAction.apply(void 0, args);
            if (!prepared) {
                throw new Error("prepareAction did not return an object");
            }
            return __spreadValues(__spreadValues({
                type: type,
                payload: prepared.payload
            }, "meta" in prepared && { meta: prepared.meta }), "error" in prepared && { error: prepared.error });
        }
        return { type: type, payload: args[0] };
    }
    actionCreator.toString = function () { return "" + type; };
    actionCreator.type = type;
    actionCreator.match = function (action) { return action.type === type; };
    return actionCreator;
}
function isFSA(action) {
    return isPlainObject(action) && typeof action.type === "string" && Object.keys(action).every(isValidKey);
}
function isValidKey(key) {
    return ["type", "payload", "error", "meta"].indexOf(key) > -1;
}
function getType(actionCreator) {
    return "" + actionCreator;
}
// src/createReducer.ts

// src/mapBuilders.ts
function executeReducerBuilderCallback(builderCallback) {
    var actionsMap = {};
    var actionMatchers = [];
    var defaultCaseReducer;
    var builder = {
        addCase: function (typeOrActionCreator, reducer) {
            if (false) {}
            var type = typeof typeOrActionCreator === "string" ? typeOrActionCreator : typeOrActionCreator.type;
            if (type in actionsMap) {
                throw new Error("addCase cannot be called with two reducers for the same action type");
            }
            actionsMap[type] = reducer;
            return builder;
        },
        addMatcher: function (matcher, reducer) {
            if (false) {}
            actionMatchers.push({ matcher: matcher, reducer: reducer });
            return builder;
        },
        addDefaultCase: function (reducer) {
            if (false) {}
            defaultCaseReducer = reducer;
            return builder;
        }
    };
    builderCallback(builder);
    return [actionsMap, actionMatchers, defaultCaseReducer];
}
// src/createReducer.ts
function isStateFunction(x) {
    return typeof x === "function";
}
var hasWarnedAboutObjectNotation = false;
function createReducer(initialState, mapOrBuilderCallback, actionMatchers, defaultCaseReducer) {
    if (actionMatchers === void 0) { actionMatchers = []; }
    if (false) {}
    var _c = typeof mapOrBuilderCallback === "function" ? executeReducerBuilderCallback(mapOrBuilderCallback) : [mapOrBuilderCallback, actionMatchers, defaultCaseReducer], actionsMap = _c[0], finalActionMatchers = _c[1], finalDefaultCaseReducer = _c[2];
    var getInitialState;
    if (isStateFunction(initialState)) {
        getInitialState = function () { return freezeDraftable(initialState()); };
    }
    else {
        var frozenInitialState_1 = freezeDraftable(initialState);
        getInitialState = function () { return frozenInitialState_1; };
    }
    function reducer(state, action) {
        if (state === void 0) { state = getInitialState(); }
        var caseReducers = __spreadArray([
            actionsMap[action.type]
        ], finalActionMatchers.filter(function (_c) {
            var matcher = _c.matcher;
            return matcher(action);
        }).map(function (_c) {
            var reducer2 = _c.reducer;
            return reducer2;
        }));
        if (caseReducers.filter(function (cr) { return !!cr; }).length === 0) {
            caseReducers = [finalDefaultCaseReducer];
        }
        return caseReducers.reduce(function (previousState, caseReducer) {
            if (caseReducer) {
                if (r(previousState)) {
                    var draft = previousState;
                    var result = caseReducer(draft, action);
                    if (result === void 0) {
                        return previousState;
                    }
                    return result;
                }
                else if (!t(previousState)) {
                    var result = caseReducer(previousState, action);
                    if (result === void 0) {
                        if (previousState === null) {
                            return previousState;
                        }
                        throw Error("A case reducer on a non-draftable value must not return undefined");
                    }
                    return result;
                }
                else {
                    return immer_esm(previousState, function (draft) {
                        return caseReducer(draft, action);
                    });
                }
            }
            return previousState;
        }, state);
    }
    reducer.getInitialState = getInitialState;
    return reducer;
}
// src/createSlice.ts
var hasWarnedAboutObjectNotation2 = false;
function getType2(slice, actionKey) {
    return slice + "/" + actionKey;
}
function createSlice(options) {
    var name = options.name;
    if (!name) {
        throw new Error("`name` is a required option for createSlice");
    }
    if (typeof process !== "undefined" && "production" === "development") {}
    var initialState = typeof options.initialState == "function" ? options.initialState : freezeDraftable(options.initialState);
    var reducers = options.reducers || {};
    var reducerNames = Object.keys(reducers);
    var sliceCaseReducersByName = {};
    var sliceCaseReducersByType = {};
    var actionCreators = {};
    reducerNames.forEach(function (reducerName) {
        var maybeReducerWithPrepare = reducers[reducerName];
        var type = getType2(name, reducerName);
        var caseReducer;
        var prepareCallback;
        if ("reducer" in maybeReducerWithPrepare) {
            caseReducer = maybeReducerWithPrepare.reducer;
            prepareCallback = maybeReducerWithPrepare.prepare;
        }
        else {
            caseReducer = maybeReducerWithPrepare;
        }
        sliceCaseReducersByName[reducerName] = caseReducer;
        sliceCaseReducersByType[type] = caseReducer;
        actionCreators[reducerName] = prepareCallback ? createAction(type, prepareCallback) : createAction(type);
    });
    function buildReducer() {
        if (false) {}
        var _c = typeof options.extraReducers === "function" ? executeReducerBuilderCallback(options.extraReducers) : [options.extraReducers], _d = _c[0], extraReducers = _d === void 0 ? {} : _d, _e = _c[1], actionMatchers = _e === void 0 ? [] : _e, _f = _c[2], defaultCaseReducer = _f === void 0 ? void 0 : _f;
        var finalCaseReducers = __spreadValues(__spreadValues({}, extraReducers), sliceCaseReducersByType);
        return createReducer(initialState, function (builder) {
            for (var key in finalCaseReducers) {
                builder.addCase(key, finalCaseReducers[key]);
            }
            for (var _i = 0, actionMatchers_1 = actionMatchers; _i < actionMatchers_1.length; _i++) {
                var m = actionMatchers_1[_i];
                builder.addMatcher(m.matcher, m.reducer);
            }
            if (defaultCaseReducer) {
                builder.addDefaultCase(defaultCaseReducer);
            }
        });
    }
    var _reducer;
    return {
        name: name,
        reducer: function (state, action) {
            if (!_reducer)
                _reducer = buildReducer();
            return _reducer(state, action);
        },
        actions: actionCreators,
        caseReducers: sliceCaseReducersByName,
        getInitialState: function () {
            if (!_reducer)
                _reducer = buildReducer();
            return _reducer.getInitialState();
        }
    };
}
// src/entities/entity_state.ts
function getInitialEntityState() {
    return {
        ids: [],
        entities: {}
    };
}
function createInitialStateFactory() {
    function getInitialState(additionalState) {
        if (additionalState === void 0) { additionalState = {}; }
        return Object.assign(getInitialEntityState(), additionalState);
    }
    return { getInitialState: getInitialState };
}
// src/entities/state_selectors.ts
function createSelectorsFactory() {
    function getSelectors(selectState) {
        var selectIds = function (state) { return state.ids; };
        var selectEntities = function (state) { return state.entities; };
        var selectAll = createDraftSafeSelector(selectIds, selectEntities, function (ids, entities) { return ids.map(function (id) { return entities[id]; }); });
        var selectId = function (_, id) { return id; };
        var selectById = function (entities, id) { return entities[id]; };
        var selectTotal = createDraftSafeSelector(selectIds, function (ids) { return ids.length; });
        if (!selectState) {
            return {
                selectIds: selectIds,
                selectEntities: selectEntities,
                selectAll: selectAll,
                selectTotal: selectTotal,
                selectById: createDraftSafeSelector(selectEntities, selectId, selectById)
            };
        }
        var selectGlobalizedEntities = createDraftSafeSelector(selectState, selectEntities);
        return {
            selectIds: createDraftSafeSelector(selectState, selectIds),
            selectEntities: selectGlobalizedEntities,
            selectAll: createDraftSafeSelector(selectState, selectAll),
            selectTotal: createDraftSafeSelector(selectState, selectTotal),
            selectById: createDraftSafeSelector(selectGlobalizedEntities, selectId, selectById)
        };
    }
    return { getSelectors: getSelectors };
}
// src/entities/state_adapter.ts

function createSingleArgumentStateOperator(mutator) {
    var operator = createStateOperator(function (_, state) { return mutator(state); });
    return function operation(state) {
        return operator(state, void 0);
    };
}
function createStateOperator(mutator) {
    return function operation(state, arg) {
        function isPayloadActionArgument(arg2) {
            return isFSA(arg2);
        }
        var runMutator = function (draft) {
            if (isPayloadActionArgument(arg)) {
                mutator(arg.payload, draft);
            }
            else {
                mutator(arg, draft);
            }
        };
        if (r(state)) {
            runMutator(state);
            return state;
        }
        else {
            return immer_esm(state, runMutator);
        }
    };
}
// src/entities/utils.ts
function selectIdValue(entity, selectId) {
    var key = selectId(entity);
    if (false) {}
    return key;
}
function ensureEntitiesArray(entities) {
    if (!Array.isArray(entities)) {
        entities = Object.values(entities);
    }
    return entities;
}
function splitAddedUpdatedEntities(newEntities, selectId, state) {
    newEntities = ensureEntitiesArray(newEntities);
    var added = [];
    var updated = [];
    for (var _i = 0, newEntities_1 = newEntities; _i < newEntities_1.length; _i++) {
        var entity = newEntities_1[_i];
        var id = selectIdValue(entity, selectId);
        if (id in state.entities) {
            updated.push({ id: id, changes: entity });
        }
        else {
            added.push(entity);
        }
    }
    return [added, updated];
}
// src/entities/unsorted_state_adapter.ts
function createUnsortedStateAdapter(selectId) {
    function addOneMutably(entity, state) {
        var key = selectIdValue(entity, selectId);
        if (key in state.entities) {
            return;
        }
        state.ids.push(key);
        state.entities[key] = entity;
    }
    function addManyMutably(newEntities, state) {
        newEntities = ensureEntitiesArray(newEntities);
        for (var _i = 0, newEntities_2 = newEntities; _i < newEntities_2.length; _i++) {
            var entity = newEntities_2[_i];
            addOneMutably(entity, state);
        }
    }
    function setOneMutably(entity, state) {
        var key = selectIdValue(entity, selectId);
        if (!(key in state.entities)) {
            state.ids.push(key);
        }
        state.entities[key] = entity;
    }
    function setManyMutably(newEntities, state) {
        newEntities = ensureEntitiesArray(newEntities);
        for (var _i = 0, newEntities_3 = newEntities; _i < newEntities_3.length; _i++) {
            var entity = newEntities_3[_i];
            setOneMutably(entity, state);
        }
    }
    function setAllMutably(newEntities, state) {
        newEntities = ensureEntitiesArray(newEntities);
        state.ids = [];
        state.entities = {};
        addManyMutably(newEntities, state);
    }
    function removeOneMutably(key, state) {
        return removeManyMutably([key], state);
    }
    function removeManyMutably(keys, state) {
        var didMutate = false;
        keys.forEach(function (key) {
            if (key in state.entities) {
                delete state.entities[key];
                didMutate = true;
            }
        });
        if (didMutate) {
            state.ids = state.ids.filter(function (id) { return id in state.entities; });
        }
    }
    function removeAllMutably(state) {
        Object.assign(state, {
            ids: [],
            entities: {}
        });
    }
    function takeNewKey(keys, update, state) {
        var original2 = state.entities[update.id];
        var updated = Object.assign({}, original2, update.changes);
        var newKey = selectIdValue(updated, selectId);
        var hasNewKey = newKey !== update.id;
        if (hasNewKey) {
            keys[update.id] = newKey;
            delete state.entities[update.id];
        }
        state.entities[newKey] = updated;
        return hasNewKey;
    }
    function updateOneMutably(update, state) {
        return updateManyMutably([update], state);
    }
    function updateManyMutably(updates, state) {
        var newKeys = {};
        var updatesPerEntity = {};
        updates.forEach(function (update) {
            if (update.id in state.entities) {
                updatesPerEntity[update.id] = {
                    id: update.id,
                    changes: __spreadValues(__spreadValues({}, updatesPerEntity[update.id] ? updatesPerEntity[update.id].changes : null), update.changes)
                };
            }
        });
        updates = Object.values(updatesPerEntity);
        var didMutateEntities = updates.length > 0;
        if (didMutateEntities) {
            var didMutateIds = updates.filter(function (update) { return takeNewKey(newKeys, update, state); }).length > 0;
            if (didMutateIds) {
                state.ids = Object.keys(state.entities);
            }
        }
    }
    function upsertOneMutably(entity, state) {
        return upsertManyMutably([entity], state);
    }
    function upsertManyMutably(newEntities, state) {
        var _c = splitAddedUpdatedEntities(newEntities, selectId, state), added = _c[0], updated = _c[1];
        updateManyMutably(updated, state);
        addManyMutably(added, state);
    }
    return {
        removeAll: createSingleArgumentStateOperator(removeAllMutably),
        addOne: createStateOperator(addOneMutably),
        addMany: createStateOperator(addManyMutably),
        setOne: createStateOperator(setOneMutably),
        setMany: createStateOperator(setManyMutably),
        setAll: createStateOperator(setAllMutably),
        updateOne: createStateOperator(updateOneMutably),
        updateMany: createStateOperator(updateManyMutably),
        upsertOne: createStateOperator(upsertOneMutably),
        upsertMany: createStateOperator(upsertManyMutably),
        removeOne: createStateOperator(removeOneMutably),
        removeMany: createStateOperator(removeManyMutably)
    };
}
// src/entities/sorted_state_adapter.ts
function createSortedStateAdapter(selectId, sort) {
    var _c = createUnsortedStateAdapter(selectId), removeOne = _c.removeOne, removeMany = _c.removeMany, removeAll = _c.removeAll;
    function addOneMutably(entity, state) {
        return addManyMutably([entity], state);
    }
    function addManyMutably(newEntities, state) {
        newEntities = ensureEntitiesArray(newEntities);
        var models = newEntities.filter(function (model) { return !(selectIdValue(model, selectId) in state.entities); });
        if (models.length !== 0) {
            merge(models, state);
        }
    }
    function setOneMutably(entity, state) {
        return setManyMutably([entity], state);
    }
    function setManyMutably(newEntities, state) {
        newEntities = ensureEntitiesArray(newEntities);
        if (newEntities.length !== 0) {
            merge(newEntities, state);
        }
    }
    function setAllMutably(newEntities, state) {
        newEntities = ensureEntitiesArray(newEntities);
        state.entities = {};
        state.ids = [];
        addManyMutably(newEntities, state);
    }
    function updateOneMutably(update, state) {
        return updateManyMutably([update], state);
    }
    function updateManyMutably(updates, state) {
        var appliedUpdates = false;
        for (var _i = 0, updates_1 = updates; _i < updates_1.length; _i++) {
            var update = updates_1[_i];
            var entity = state.entities[update.id];
            if (!entity) {
                continue;
            }
            appliedUpdates = true;
            Object.assign(entity, update.changes);
            var newId = selectId(entity);
            if (update.id !== newId) {
                delete state.entities[update.id];
                state.entities[newId] = entity;
            }
        }
        if (appliedUpdates) {
            resortEntities(state);
        }
    }
    function upsertOneMutably(entity, state) {
        return upsertManyMutably([entity], state);
    }
    function upsertManyMutably(newEntities, state) {
        var _c = splitAddedUpdatedEntities(newEntities, selectId, state), added = _c[0], updated = _c[1];
        updateManyMutably(updated, state);
        addManyMutably(added, state);
    }
    function areArraysEqual(a, b) {
        if (a.length !== b.length) {
            return false;
        }
        for (var i = 0; i < a.length && i < b.length; i++) {
            if (a[i] === b[i]) {
                continue;
            }
            return false;
        }
        return true;
    }
    function merge(models, state) {
        models.forEach(function (model) {
            state.entities[selectId(model)] = model;
        });
        resortEntities(state);
    }
    function resortEntities(state) {
        var allEntities = Object.values(state.entities);
        allEntities.sort(sort);
        var newSortedIds = allEntities.map(selectId);
        var ids = state.ids;
        if (!areArraysEqual(ids, newSortedIds)) {
            state.ids = newSortedIds;
        }
    }
    return {
        removeOne: removeOne,
        removeMany: removeMany,
        removeAll: removeAll,
        addOne: createStateOperator(addOneMutably),
        updateOne: createStateOperator(updateOneMutably),
        upsertOne: createStateOperator(upsertOneMutably),
        setOne: createStateOperator(setOneMutably),
        setMany: createStateOperator(setManyMutably),
        setAll: createStateOperator(setAllMutably),
        addMany: createStateOperator(addManyMutably),
        updateMany: createStateOperator(updateManyMutably),
        upsertMany: createStateOperator(upsertManyMutably)
    };
}
// src/entities/create_adapter.ts
function createEntityAdapter(options) {
    if (options === void 0) { options = {}; }
    var _c = __spreadValues({
        sortComparer: false,
        selectId: function (instance) { return instance.id; }
    }, options), selectId = _c.selectId, sortComparer = _c.sortComparer;
    var stateFactory = createInitialStateFactory();
    var selectorsFactory = createSelectorsFactory();
    var stateAdapter = sortComparer ? createSortedStateAdapter(selectId, sortComparer) : createUnsortedStateAdapter(selectId);
    return __spreadValues(__spreadValues(__spreadValues({
        selectId: selectId,
        sortComparer: sortComparer
    }, stateFactory), selectorsFactory), stateAdapter);
}
// src/nanoid.ts
var urlAlphabet = "ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW";
var nanoid = function (size) {
    if (size === void 0) { size = 21; }
    var id = "";
    var i = size;
    while (i--) {
        id += urlAlphabet[Math.random() * 64 | 0];
    }
    return id;
};
// src/createAsyncThunk.ts
var commonProperties = [
    "name",
    "message",
    "stack",
    "code"
];
var RejectWithValue = /** @class */ (function () {
    function RejectWithValue(payload, meta) {
        this.payload = payload;
        this.meta = meta;
    }
    return RejectWithValue;
}());
var FulfillWithMeta = /** @class */ (function () {
    function FulfillWithMeta(payload, meta) {
        this.payload = payload;
        this.meta = meta;
    }
    return FulfillWithMeta;
}());
var miniSerializeError = function (value) {
    if (typeof value === "object" && value !== null) {
        var simpleError = {};
        for (var _i = 0, commonProperties_1 = commonProperties; _i < commonProperties_1.length; _i++) {
            var property = commonProperties_1[_i];
            if (typeof value[property] === "string") {
                simpleError[property] = value[property];
            }
        }
        return simpleError;
    }
    return { message: String(value) };
};
var createAsyncThunk = (function () {
    function createAsyncThunk2(typePrefix, payloadCreator, options) {
        var fulfilled = createAction(typePrefix + "/fulfilled", function (payload, requestId, arg, meta) { return ({
            payload: payload,
            meta: __spreadProps(__spreadValues({}, meta || {}), {
                arg: arg,
                requestId: requestId,
                requestStatus: "fulfilled"
            })
        }); });
        var pending = createAction(typePrefix + "/pending", function (requestId, arg, meta) { return ({
            payload: void 0,
            meta: __spreadProps(__spreadValues({}, meta || {}), {
                arg: arg,
                requestId: requestId,
                requestStatus: "pending"
            })
        }); });
        var rejected = createAction(typePrefix + "/rejected", function (error, requestId, arg, payload, meta) { return ({
            payload: payload,
            error: (options && options.serializeError || miniSerializeError)(error || "Rejected"),
            meta: __spreadProps(__spreadValues({}, meta || {}), {
                arg: arg,
                requestId: requestId,
                rejectedWithValue: !!payload,
                requestStatus: "rejected",
                aborted: (error == null ? void 0 : error.name) === "AbortError",
                condition: (error == null ? void 0 : error.name) === "ConditionError"
            })
        }); });
        var displayedWarning = false;
        var AC = typeof AbortController !== "undefined" ? AbortController : /** @class */ (function () {
            function class_1() {
                this.signal = {
                    aborted: false,
                    addEventListener: function () {
                    },
                    dispatchEvent: function () {
                        return false;
                    },
                    onabort: function () {
                    },
                    removeEventListener: function () {
                    },
                    reason: void 0,
                    throwIfAborted: function () {
                    }
                };
            }
            class_1.prototype.abort = function () {
                if (false) {}
            };
            return class_1;
        }());
        function actionCreator(arg) {
            return function (dispatch, getState, extra) {
                var requestId = (options == null ? void 0 : options.idGenerator) ? options.idGenerator(arg) : nanoid();
                var abortController = new AC();
                var abortReason;
                var started = false;
                function abort(reason) {
                    abortReason = reason;
                    abortController.abort();
                }
                var promise2 = function () {
                    return __async(this, null, function () {
                        var _a, _b, finalAction, conditionResult, abortedPromise, err_1, skipDispatch;
                        return __generator(this, function (_c) {
                            switch (_c.label) {
                                case 0:
                                    _c.trys.push([0, 4, , 5]);
                                    conditionResult = (_a = options == null ? void 0 : options.condition) == null ? void 0 : _a.call(options, arg, { getState: getState, extra: extra });
                                    if (!isThenable(conditionResult)) return [3 /*break*/, 2];
                                    return [4 /*yield*/, conditionResult];
                                case 1:
                                    conditionResult = _c.sent();
                                    _c.label = 2;
                                case 2:
                                    if (conditionResult === false || abortController.signal.aborted) {
                                        throw {
                                            name: "ConditionError",
                                            message: "Aborted due to condition callback returning false."
                                        };
                                    }
                                    started = true;
                                    abortedPromise = new Promise(function (_, reject) { return abortController.signal.addEventListener("abort", function () { return reject({
                                        name: "AbortError",
                                        message: abortReason || "Aborted"
                                    }); }); });
                                    dispatch(pending(requestId, arg, (_b = options == null ? void 0 : options.getPendingMeta) == null ? void 0 : _b.call(options, { requestId: requestId, arg: arg }, { getState: getState, extra: extra })));
                                    return [4 /*yield*/, Promise.race([
                                            abortedPromise,
                                            Promise.resolve(payloadCreator(arg, {
                                                dispatch: dispatch,
                                                getState: getState,
                                                extra: extra,
                                                requestId: requestId,
                                                signal: abortController.signal,
                                                abort: abort,
                                                rejectWithValue: function (value, meta) {
                                                    return new RejectWithValue(value, meta);
                                                },
                                                fulfillWithValue: function (value, meta) {
                                                    return new FulfillWithMeta(value, meta);
                                                }
                                            })).then(function (result) {
                                                if (result instanceof RejectWithValue) {
                                                    throw result;
                                                }
                                                if (result instanceof FulfillWithMeta) {
                                                    return fulfilled(result.payload, requestId, arg, result.meta);
                                                }
                                                return fulfilled(result, requestId, arg);
                                            })
                                        ])];
                                case 3:
                                    finalAction = _c.sent();
                                    return [3 /*break*/, 5];
                                case 4:
                                    err_1 = _c.sent();
                                    finalAction = err_1 instanceof RejectWithValue ? rejected(null, requestId, arg, err_1.payload, err_1.meta) : rejected(err_1, requestId, arg);
                                    return [3 /*break*/, 5];
                                case 5:
                                    skipDispatch = options && !options.dispatchConditionRejection && rejected.match(finalAction) && finalAction.meta.condition;
                                    if (!skipDispatch) {
                                        dispatch(finalAction);
                                    }
                                    return [2 /*return*/, finalAction];
                            }
                        });
                    });
                }();
                return Object.assign(promise2, {
                    abort: abort,
                    requestId: requestId,
                    arg: arg,
                    unwrap: function () {
                        return promise2.then(unwrapResult);
                    }
                });
            };
        }
        return Object.assign(actionCreator, {
            pending: pending,
            rejected: rejected,
            fulfilled: fulfilled,
            typePrefix: typePrefix
        });
    }
    createAsyncThunk2.withTypes = function () { return createAsyncThunk2; };
    return createAsyncThunk2;
})();
function unwrapResult(action) {
    if (action.meta && action.meta.rejectedWithValue) {
        throw action.payload;
    }
    if (action.error) {
        throw action.error;
    }
    return action.payload;
}
function isThenable(value) {
    return value !== null && typeof value === "object" && typeof value.then === "function";
}
// src/tsHelpers.ts
var hasMatchFunction = function (v) {
    return v && typeof v.match === "function";
};
// src/matchers.ts
var matches = function (matcher, action) {
    if (hasMatchFunction(matcher)) {
        return matcher.match(action);
    }
    else {
        return matcher(action);
    }
};
function isAnyOf() {
    var matchers = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        matchers[_i] = arguments[_i];
    }
    return function (action) {
        return matchers.some(function (matcher) { return matches(matcher, action); });
    };
}
function isAllOf() {
    var matchers = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        matchers[_i] = arguments[_i];
    }
    return function (action) {
        return matchers.every(function (matcher) { return matches(matcher, action); });
    };
}
function hasExpectedRequestMetadata(action, validStatus) {
    if (!action || !action.meta)
        return false;
    var hasValidRequestId = typeof action.meta.requestId === "string";
    var hasValidRequestStatus = validStatus.indexOf(action.meta.requestStatus) > -1;
    return hasValidRequestId && hasValidRequestStatus;
}
function isAsyncThunkArray(a) {
    return typeof a[0] === "function" && "pending" in a[0] && "fulfilled" in a[0] && "rejected" in a[0];
}
function isPending() {
    var asyncThunks = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        asyncThunks[_i] = arguments[_i];
    }
    if (asyncThunks.length === 0) {
        return function (action) { return hasExpectedRequestMetadata(action, ["pending"]); };
    }
    if (!isAsyncThunkArray(asyncThunks)) {
        return isPending()(asyncThunks[0]);
    }
    return function (action) {
        var matchers = asyncThunks.map(function (asyncThunk) { return asyncThunk.pending; });
        var combinedMatcher = isAnyOf.apply(void 0, matchers);
        return combinedMatcher(action);
    };
}
function isRejected() {
    var asyncThunks = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        asyncThunks[_i] = arguments[_i];
    }
    if (asyncThunks.length === 0) {
        return function (action) { return hasExpectedRequestMetadata(action, ["rejected"]); };
    }
    if (!isAsyncThunkArray(asyncThunks)) {
        return isRejected()(asyncThunks[0]);
    }
    return function (action) {
        var matchers = asyncThunks.map(function (asyncThunk) { return asyncThunk.rejected; });
        var combinedMatcher = isAnyOf.apply(void 0, matchers);
        return combinedMatcher(action);
    };
}
function isRejectedWithValue() {
    var asyncThunks = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        asyncThunks[_i] = arguments[_i];
    }
    var hasFlag = function (action) {
        return action && action.meta && action.meta.rejectedWithValue;
    };
    if (asyncThunks.length === 0) {
        return function (action) {
            var combinedMatcher = isAllOf(isRejected.apply(void 0, asyncThunks), hasFlag);
            return combinedMatcher(action);
        };
    }
    if (!isAsyncThunkArray(asyncThunks)) {
        return isRejectedWithValue()(asyncThunks[0]);
    }
    return function (action) {
        var combinedMatcher = isAllOf(isRejected.apply(void 0, asyncThunks), hasFlag);
        return combinedMatcher(action);
    };
}
function isFulfilled() {
    var asyncThunks = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        asyncThunks[_i] = arguments[_i];
    }
    if (asyncThunks.length === 0) {
        return function (action) { return hasExpectedRequestMetadata(action, ["fulfilled"]); };
    }
    if (!isAsyncThunkArray(asyncThunks)) {
        return isFulfilled()(asyncThunks[0]);
    }
    return function (action) {
        var matchers = asyncThunks.map(function (asyncThunk) { return asyncThunk.fulfilled; });
        var combinedMatcher = isAnyOf.apply(void 0, matchers);
        return combinedMatcher(action);
    };
}
function isAsyncThunkAction() {
    var asyncThunks = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        asyncThunks[_i] = arguments[_i];
    }
    if (asyncThunks.length === 0) {
        return function (action) { return hasExpectedRequestMetadata(action, ["pending", "fulfilled", "rejected"]); };
    }
    if (!isAsyncThunkArray(asyncThunks)) {
        return isAsyncThunkAction()(asyncThunks[0]);
    }
    return function (action) {
        var matchers = [];
        for (var _i = 0, asyncThunks_1 = asyncThunks; _i < asyncThunks_1.length; _i++) {
            var asyncThunk = asyncThunks_1[_i];
            matchers.push(asyncThunk.pending, asyncThunk.rejected, asyncThunk.fulfilled);
        }
        var combinedMatcher = isAnyOf.apply(void 0, matchers);
        return combinedMatcher(action);
    };
}
// src/listenerMiddleware/utils.ts
var assertFunction = function (func, expected) {
    if (typeof func !== "function") {
        throw new TypeError(expected + " is not a function");
    }
};
var noop = function () {
};
var catchRejection = function (promise2, onError) {
    if (onError === void 0) { onError = noop; }
    promise2.catch(onError);
    return promise2;
};
var addAbortSignalListener = function (abortSignal, callback) {
    abortSignal.addEventListener("abort", callback, { once: true });
    return function () { return abortSignal.removeEventListener("abort", callback); };
};
var abortControllerWithReason = function (abortController, reason) {
    var signal = abortController.signal;
    if (signal.aborted) {
        return;
    }
    if (!("reason" in signal)) {
        Object.defineProperty(signal, "reason", {
            enumerable: true,
            value: reason,
            configurable: true,
            writable: true
        });
    }
    ;
    abortController.abort(reason);
};
// src/listenerMiddleware/exceptions.ts
var task = "task";
var listener = "listener";
var completed = "completed";
var cancelled = "cancelled";
var taskCancelled = "task-" + cancelled;
var taskCompleted = "task-" + completed;
var listenerCancelled = listener + "-" + cancelled;
var listenerCompleted = listener + "-" + completed;
var TaskAbortError = /** @class */ (function () {
    function TaskAbortError(code) {
        this.code = code;
        this.name = "TaskAbortError";
        this.message = task + " " + cancelled + " (reason: " + code + ")";
    }
    return TaskAbortError;
}());
// src/listenerMiddleware/task.ts
var validateActive = function (signal) {
    if (signal.aborted) {
        throw new TaskAbortError(signal.reason);
    }
};
function raceWithSignal(signal, promise2) {
    var cleanup = noop;
    return new Promise(function (resolve, reject) {
        var notifyRejection = function () { return reject(new TaskAbortError(signal.reason)); };
        if (signal.aborted) {
            notifyRejection();
            return;
        }
        cleanup = addAbortSignalListener(signal, notifyRejection);
        promise2.finally(function () { return cleanup(); }).then(resolve, reject);
    }).finally(function () {
        cleanup = noop;
    });
}
var runTask = function (task2, cleanUp) { return __async(void 0, null, function () {
    var value, error_1;
    return __generator(this, function (_c) {
        switch (_c.label) {
            case 0:
                _c.trys.push([0, 3, 4, 5]);
                return [4 /*yield*/, Promise.resolve()];
            case 1:
                _c.sent();
                return [4 /*yield*/, task2()];
            case 2:
                value = _c.sent();
                return [2 /*return*/, {
                        status: "ok",
                        value: value
                    }];
            case 3:
                error_1 = _c.sent();
                return [2 /*return*/, {
                        status: error_1 instanceof TaskAbortError ? "cancelled" : "rejected",
                        error: error_1
                    }];
            case 4:
                cleanUp == null ? void 0 : cleanUp();
                return [7 /*endfinally*/];
            case 5: return [2 /*return*/];
        }
    });
}); };
var createPause = function (signal) {
    return function (promise2) {
        return catchRejection(raceWithSignal(signal, promise2).then(function (output) {
            validateActive(signal);
            return output;
        }));
    };
};
var createDelay = function (signal) {
    var pause = createPause(signal);
    return function (timeoutMs) {
        return pause(new Promise(function (resolve) { return setTimeout(resolve, timeoutMs); }));
    };
};
// src/listenerMiddleware/index.ts
var redux_toolkit_esm_assign = Object.assign;
var INTERNAL_NIL_TOKEN = {};
var alm = "listenerMiddleware";
var createFork = function (parentAbortSignal) {
    var linkControllers = function (controller) { return addAbortSignalListener(parentAbortSignal, function () { return abortControllerWithReason(controller, parentAbortSignal.reason); }); };
    return function (taskExecutor) {
        assertFunction(taskExecutor, "taskExecutor");
        var childAbortController = new AbortController();
        linkControllers(childAbortController);
        var result = runTask(function () { return __async(void 0, null, function () {
            var result2;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        validateActive(parentAbortSignal);
                        validateActive(childAbortController.signal);
                        return [4 /*yield*/, taskExecutor({
                                pause: createPause(childAbortController.signal),
                                delay: createDelay(childAbortController.signal),
                                signal: childAbortController.signal
                            })];
                    case 1:
                        result2 = _c.sent();
                        validateActive(childAbortController.signal);
                        return [2 /*return*/, result2];
                }
            });
        }); }, function () { return abortControllerWithReason(childAbortController, taskCompleted); });
        return {
            result: createPause(parentAbortSignal)(result),
            cancel: function () {
                abortControllerWithReason(childAbortController, taskCancelled);
            }
        };
    };
};
var createTakePattern = function (startListening, signal) {
    var take = function (predicate, timeout) { return __async(void 0, null, function () {
        var unsubscribe, tuplePromise, promises, output;
        return __generator(this, function (_c) {
            switch (_c.label) {
                case 0:
                    validateActive(signal);
                    unsubscribe = function () {
                    };
                    tuplePromise = new Promise(function (resolve, reject) {
                        var stopListening = startListening({
                            predicate: predicate,
                            effect: function (action, listenerApi) {
                                listenerApi.unsubscribe();
                                resolve([
                                    action,
                                    listenerApi.getState(),
                                    listenerApi.getOriginalState()
                                ]);
                            }
                        });
                        unsubscribe = function () {
                            stopListening();
                            reject();
                        };
                    });
                    promises = [
                        tuplePromise
                    ];
                    if (timeout != null) {
                        promises.push(new Promise(function (resolve) { return setTimeout(resolve, timeout, null); }));
                    }
                    _c.label = 1;
                case 1:
                    _c.trys.push([1, , 3, 4]);
                    return [4 /*yield*/, raceWithSignal(signal, Promise.race(promises))];
                case 2:
                    output = _c.sent();
                    validateActive(signal);
                    return [2 /*return*/, output];
                case 3:
                    unsubscribe();
                    return [7 /*endfinally*/];
                case 4: return [2 /*return*/];
            }
        });
    }); };
    return function (predicate, timeout) { return catchRejection(take(predicate, timeout)); };
};
var getListenerEntryPropsFrom = function (options) {
    var type = options.type, actionCreator = options.actionCreator, matcher = options.matcher, predicate = options.predicate, effect = options.effect;
    if (type) {
        predicate = createAction(type).match;
    }
    else if (actionCreator) {
        type = actionCreator.type;
        predicate = actionCreator.match;
    }
    else if (matcher) {
        predicate = matcher;
    }
    else if (predicate) {
    }
    else {
        throw new Error("Creating or removing a listener requires one of the known fields for matching an action");
    }
    assertFunction(effect, "options.listener");
    return { predicate: predicate, type: type, effect: effect };
};
var createListenerEntry = function (options) {
    var _c = getListenerEntryPropsFrom(options), type = _c.type, predicate = _c.predicate, effect = _c.effect;
    var id = nanoid();
    var entry = {
        id: id,
        effect: effect,
        type: type,
        predicate: predicate,
        pending: new Set(),
        unsubscribe: function () {
            throw new Error("Unsubscribe not initialized");
        }
    };
    return entry;
};
var cancelActiveListeners = function (entry) {
    entry.pending.forEach(function (controller) {
        abortControllerWithReason(controller, listenerCancelled);
    });
};
var createClearListenerMiddleware = function (listenerMap) {
    return function () {
        listenerMap.forEach(cancelActiveListeners);
        listenerMap.clear();
    };
};
var safelyNotifyError = function (errorHandler, errorToNotify, errorInfo) {
    try {
        errorHandler(errorToNotify, errorInfo);
    }
    catch (errorHandlerError) {
        setTimeout(function () {
            throw errorHandlerError;
        }, 0);
    }
};
var addListener = createAction(alm + "/add");
var clearAllListeners = createAction(alm + "/removeAll");
var removeListener = createAction(alm + "/remove");
var defaultErrorHandler = function () {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    console.error.apply(console, __spreadArray([alm + "/error"], args));
};
function createListenerMiddleware(middlewareOptions) {
    var _this = this;
    if (middlewareOptions === void 0) { middlewareOptions = {}; }
    var listenerMap = new Map();
    var extra = middlewareOptions.extra, _c = middlewareOptions.onError, onError = _c === void 0 ? defaultErrorHandler : _c;
    assertFunction(onError, "onError");
    var insertEntry = function (entry) {
        entry.unsubscribe = function () { return listenerMap.delete(entry.id); };
        listenerMap.set(entry.id, entry);
        return function (cancelOptions) {
            entry.unsubscribe();
            if (cancelOptions == null ? void 0 : cancelOptions.cancelActive) {
                cancelActiveListeners(entry);
            }
        };
    };
    var findListenerEntry = function (comparator) {
        for (var _i = 0, _c = Array.from(listenerMap.values()); _i < _c.length; _i++) {
            var entry = _c[_i];
            if (comparator(entry)) {
                return entry;
            }
        }
        return void 0;
    };
    var startListening = function (options) {
        var entry = findListenerEntry(function (existingEntry) { return existingEntry.effect === options.effect; });
        if (!entry) {
            entry = createListenerEntry(options);
        }
        return insertEntry(entry);
    };
    var stopListening = function (options) {
        var _c = getListenerEntryPropsFrom(options), type = _c.type, effect = _c.effect, predicate = _c.predicate;
        var entry = findListenerEntry(function (entry2) {
            var matchPredicateOrType = typeof type === "string" ? entry2.type === type : entry2.predicate === predicate;
            return matchPredicateOrType && entry2.effect === effect;
        });
        if (entry) {
            entry.unsubscribe();
            if (options.cancelActive) {
                cancelActiveListeners(entry);
            }
        }
        return !!entry;
    };
    var notifyListener = function (entry, action, api, getOriginalState) { return __async(_this, null, function () {
        var internalTaskController, take, listenerError_1;
        return __generator(this, function (_c) {
            switch (_c.label) {
                case 0:
                    internalTaskController = new AbortController();
                    take = createTakePattern(startListening, internalTaskController.signal);
                    _c.label = 1;
                case 1:
                    _c.trys.push([1, 3, 4, 5]);
                    entry.pending.add(internalTaskController);
                    return [4 /*yield*/, Promise.resolve(entry.effect(action, redux_toolkit_esm_assign({}, api, {
                            getOriginalState: getOriginalState,
                            condition: function (predicate, timeout) { return take(predicate, timeout).then(Boolean); },
                            take: take,
                            delay: createDelay(internalTaskController.signal),
                            pause: createPause(internalTaskController.signal),
                            extra: extra,
                            signal: internalTaskController.signal,
                            fork: createFork(internalTaskController.signal),
                            unsubscribe: entry.unsubscribe,
                            subscribe: function () {
                                listenerMap.set(entry.id, entry);
                            },
                            cancelActiveListeners: function () {
                                entry.pending.forEach(function (controller, _, set) {
                                    if (controller !== internalTaskController) {
                                        abortControllerWithReason(controller, listenerCancelled);
                                        set.delete(controller);
                                    }
                                });
                            }
                        })))];
                case 2:
                    _c.sent();
                    return [3 /*break*/, 5];
                case 3:
                    listenerError_1 = _c.sent();
                    if (!(listenerError_1 instanceof TaskAbortError)) {
                        safelyNotifyError(onError, listenerError_1, {
                            raisedBy: "effect"
                        });
                    }
                    return [3 /*break*/, 5];
                case 4:
                    abortControllerWithReason(internalTaskController, listenerCompleted);
                    entry.pending.delete(internalTaskController);
                    return [7 /*endfinally*/];
                case 5: return [2 /*return*/];
            }
        });
    }); };
    var clearListenerMiddleware = createClearListenerMiddleware(listenerMap);
    var middleware = function (api) { return function (next) { return function (action) {
        if (addListener.match(action)) {
            return startListening(action.payload);
        }
        if (clearAllListeners.match(action)) {
            clearListenerMiddleware();
            return;
        }
        if (removeListener.match(action)) {
            return stopListening(action.payload);
        }
        var originalState = api.getState();
        var getOriginalState = function () {
            if (originalState === INTERNAL_NIL_TOKEN) {
                throw new Error(alm + ": getOriginalState can only be called synchronously");
            }
            return originalState;
        };
        var result;
        try {
            result = next(action);
            if (listenerMap.size > 0) {
                var currentState = api.getState();
                var listenerEntries = Array.from(listenerMap.values());
                for (var _i = 0, listenerEntries_1 = listenerEntries; _i < listenerEntries_1.length; _i++) {
                    var entry = listenerEntries_1[_i];
                    var runListener = false;
                    try {
                        runListener = entry.predicate(action, currentState, originalState);
                    }
                    catch (predicateError) {
                        runListener = false;
                        safelyNotifyError(onError, predicateError, {
                            raisedBy: "predicate"
                        });
                    }
                    if (!runListener) {
                        continue;
                    }
                    notifyListener(entry, action, api, getOriginalState);
                }
            }
        }
        finally {
            originalState = INTERNAL_NIL_TOKEN;
        }
        return result;
    }; }; };
    return {
        middleware: middleware,
        startListening: startListening,
        stopListening: stopListening,
        clearListeners: clearListenerMiddleware
    };
}
// src/autoBatchEnhancer.ts
var SHOULD_AUTOBATCH = "RTK_autoBatch";
var prepareAutoBatched = function () { return function (payload) {
    var _c;
    return ({
        payload: payload,
        meta: (_c = {}, _c[SHOULD_AUTOBATCH] = true, _c)
    });
}; };
var promise;
var queueMicrotaskShim = typeof queueMicrotask === "function" ? queueMicrotask.bind(typeof window !== "undefined" ? window : typeof __webpack_require__.g !== "undefined" ? __webpack_require__.g : globalThis) : function (cb) { return (promise || (promise = Promise.resolve())).then(cb).catch(function (err) { return setTimeout(function () {
    throw err;
}, 0); }); };
var createQueueWithTimer = function (timeout) {
    return function (notify) {
        setTimeout(notify, timeout);
    };
};
var rAF = typeof window !== "undefined" && window.requestAnimationFrame ? window.requestAnimationFrame : createQueueWithTimer(10);
var autoBatchEnhancer = function (options) {
    if (options === void 0) { options = { type: "raf" }; }
    return function (next) { return function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var store = next.apply(void 0, args);
        var notifying = true;
        var shouldNotifyAtEndOfTick = false;
        var notificationQueued = false;
        var listeners = new Set();
        var queueCallback = options.type === "tick" ? queueMicrotaskShim : options.type === "raf" ? rAF : options.type === "callback" ? options.queueNotification : createQueueWithTimer(options.timeout);
        var notifyListeners = function () {
            notificationQueued = false;
            if (shouldNotifyAtEndOfTick) {
                shouldNotifyAtEndOfTick = false;
                listeners.forEach(function (l) { return l(); });
            }
        };
        return Object.assign({}, store, {
            subscribe: function (listener2) {
                var wrappedListener = function () { return notifying && listener2(); };
                var unsubscribe = store.subscribe(wrappedListener);
                listeners.add(listener2);
                return function () {
                    unsubscribe();
                    listeners.delete(listener2);
                };
            },
            dispatch: function (action) {
                var _a;
                try {
                    notifying = !((_a = action == null ? void 0 : action.meta) == null ? void 0 : _a[SHOULD_AUTOBATCH]);
                    shouldNotifyAtEndOfTick = !notifying;
                    if (shouldNotifyAtEndOfTick) {
                        if (!notificationQueued) {
                            notificationQueued = true;
                            queueCallback(notifyListeners);
                        }
                    }
                    return store.dispatch(action);
                }
                finally {
                    notifying = true;
                }
            }
        });
    }; };
};
// src/index.ts
F();



/***/ }),

/***/ 16585:
/***/ ((__unused_webpack_module, exports) => {

"use strict";
var __webpack_unused_export__;
/*!
 * content-type
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */



/**
 * RegExp to match *( ";" parameter ) in RFC 7231 sec 3.1.1.1
 *
 * parameter     = token "=" ( token / quoted-string )
 * token         = 1*tchar
 * tchar         = "!" / "#" / "$" / "%" / "&" / "'" / "*"
 *               / "+" / "-" / "." / "^" / "_" / "`" / "|" / "~"
 *               / DIGIT / ALPHA
 *               ; any VCHAR, except delimiters
 * quoted-string = DQUOTE *( qdtext / quoted-pair ) DQUOTE
 * qdtext        = HTAB / SP / %x21 / %x23-5B / %x5D-7E / obs-text
 * obs-text      = %x80-FF
 * quoted-pair   = "\" ( HTAB / SP / VCHAR / obs-text )
 */
var PARAM_REGEXP = /; *([!#$%&'*+.^_`|~0-9A-Za-z-]+) *= *("(?:[\u000b\u0020\u0021\u0023-\u005b\u005d-\u007e\u0080-\u00ff]|\\[\u000b\u0020-\u00ff])*"|[!#$%&'*+.^_`|~0-9A-Za-z-]+) */g
var TEXT_REGEXP = /^[\u000b\u0020-\u007e\u0080-\u00ff]+$/
var TOKEN_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+$/

/**
 * RegExp to match quoted-pair in RFC 7230 sec 3.2.6
 *
 * quoted-pair = "\" ( HTAB / SP / VCHAR / obs-text )
 * obs-text    = %x80-FF
 */
var QESC_REGEXP = /\\([\u000b\u0020-\u00ff])/g

/**
 * RegExp to match chars that must be quoted-pair in RFC 7230 sec 3.2.6
 */
var QUOTE_REGEXP = /([\\"])/g

/**
 * RegExp to match type in RFC 7231 sec 3.1.1.1
 *
 * media-type = type "/" subtype
 * type       = token
 * subtype    = token
 */
var TYPE_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+\/[!#$%&'*+.^_`|~0-9A-Za-z-]+$/

/**
 * Module exports.
 * @public
 */

__webpack_unused_export__ = format
exports.Q = parse

/**
 * Format object to media type.
 *
 * @param {object} obj
 * @return {string}
 * @public
 */

function format (obj) {
  if (!obj || typeof obj !== 'object') {
    throw new TypeError('argument obj is required')
  }

  var parameters = obj.parameters
  var type = obj.type

  if (!type || !TYPE_REGEXP.test(type)) {
    throw new TypeError('invalid type')
  }

  var string = type

  // append parameters
  if (parameters && typeof parameters === 'object') {
    var param
    var params = Object.keys(parameters).sort()

    for (var i = 0; i < params.length; i++) {
      param = params[i]

      if (!TOKEN_REGEXP.test(param)) {
        throw new TypeError('invalid parameter name')
      }

      string += '; ' + param + '=' + qstring(parameters[param])
    }
  }

  return string
}

/**
 * Parse media type to object.
 *
 * @param {string|object} string
 * @return {Object}
 * @public
 */

function parse (string) {
  if (!string) {
    throw new TypeError('argument string is required')
  }

  // support req/res-like objects as argument
  var header = typeof string === 'object'
    ? getcontenttype(string)
    : string

  if (typeof header !== 'string') {
    throw new TypeError('argument string is required to be a string')
  }

  var index = header.indexOf(';')
  var type = index !== -1
    ? header.substr(0, index).trim()
    : header.trim()

  if (!TYPE_REGEXP.test(type)) {
    throw new TypeError('invalid media type')
  }

  var obj = new ContentType(type.toLowerCase())

  // parse parameters
  if (index !== -1) {
    var key
    var match
    var value

    PARAM_REGEXP.lastIndex = index

    while ((match = PARAM_REGEXP.exec(header))) {
      if (match.index !== index) {
        throw new TypeError('invalid parameter format')
      }

      index += match[0].length
      key = match[1].toLowerCase()
      value = match[2]

      if (value[0] === '"') {
        // remove quotes and escapes
        value = value
          .substr(1, value.length - 2)
          .replace(QESC_REGEXP, '$1')
      }

      obj.parameters[key] = value
    }

    if (index !== header.length) {
      throw new TypeError('invalid parameter format')
    }
  }

  return obj
}

/**
 * Get content-type from req/res objects.
 *
 * @param {object}
 * @return {Object}
 * @private
 */

function getcontenttype (obj) {
  var header

  if (typeof obj.getHeader === 'function') {
    // res-like
    header = obj.getHeader('content-type')
  } else if (typeof obj.headers === 'object') {
    // req-like
    header = obj.headers && obj.headers['content-type']
  }

  if (typeof header !== 'string') {
    throw new TypeError('content-type header is missing from object')
  }

  return header
}

/**
 * Quote a string if necessary.
 *
 * @param {string} val
 * @return {string}
 * @private
 */

function qstring (val) {
  var str = String(val)

  // no need to quote tokens
  if (TOKEN_REGEXP.test(str)) {
    return str
  }

  if (str.length > 0 && !TEXT_REGEXP.test(str)) {
    throw new TypeError('invalid parameter value')
  }

  return '"' + str.replace(QUOTE_REGEXP, '\\$1') + '"'
}

/**
 * Class to represent a content type.
 * @private
 */
function ContentType (type) {
  this.parameters = Object.create(null)
  this.type = type
}


/***/ }),

/***/ 60352:
/***/ ((module) => {

"use strict";


/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
// eslint-disable-next-line func-names
module.exports = function (cssWithMappingToString) {
  var list = []; // return the list of modules as css string

  list.toString = function toString() {
    return this.map(function (item) {
      var content = cssWithMappingToString(item);

      if (item[2]) {
        return "@media ".concat(item[2], " {").concat(content, "}");
      }

      return content;
    }).join("");
  }; // import a list of modules into the list
  // eslint-disable-next-line func-names


  list.i = function (modules, mediaQuery, dedupe) {
    if (typeof modules === "string") {
      // eslint-disable-next-line no-param-reassign
      modules = [[null, modules, ""]];
    }

    var alreadyImportedModules = {};

    if (dedupe) {
      for (var i = 0; i < this.length; i++) {
        // eslint-disable-next-line prefer-destructuring
        var id = this[i][0];

        if (id != null) {
          alreadyImportedModules[id] = true;
        }
      }
    }

    for (var _i = 0; _i < modules.length; _i++) {
      var item = [].concat(modules[_i]);

      if (dedupe && alreadyImportedModules[item[0]]) {
        // eslint-disable-next-line no-continue
        continue;
      }

      if (mediaQuery) {
        if (!item[2]) {
          item[2] = mediaQuery;
        } else {
          item[2] = "".concat(mediaQuery, " and ").concat(item[2]);
        }
      }

      list.push(item);
    }
  };

  return list;
};

/***/ }),

/***/ 60445:
/***/ ((module) => {

"use strict";


function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

module.exports = function cssWithMappingToString(item) {
  var _item = _slicedToArray(item, 4),
      content = _item[1],
      cssMapping = _item[3];

  if (!cssMapping) {
    return content;
  }

  if (typeof btoa === "function") {
    // eslint-disable-next-line no-undef
    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));
    var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);
    var sourceMapping = "/*# ".concat(data, " */");
    var sourceURLs = cssMapping.sources.map(function (source) {
      return "/*# sourceURL=".concat(cssMapping.sourceRoot || "").concat(source, " */");
    });
    return [content].concat(sourceURLs).concat([sourceMapping]).join("\n");
  }

  return [content].join("\n");
};

/***/ }),

/***/ 18393:
/***/ ((module) => {

"use strict";


module.exports = function (url, options) {
  if (!options) {
    // eslint-disable-next-line no-param-reassign
    options = {};
  } // eslint-disable-next-line no-underscore-dangle, no-param-reassign


  url = url && url.__esModule ? url.default : url;

  if (typeof url !== "string") {
    return url;
  } // If url is already wrapped in quotes, remove them


  if (/^['"].*['"]$/.test(url)) {
    // eslint-disable-next-line no-param-reassign
    url = url.slice(1, -1);
  }

  if (options.hash) {
    // eslint-disable-next-line no-param-reassign
    url += options.hash;
  } // Should url be wrapped?
  // See https://drafts.csswg.org/css-values-3/#urls


  if (/["'() \t\n]/.test(url) || options.needQuotes) {
    return "\"".concat(url.replace(/"/g, '\\"').replace(/\n/g, "\\n"), "\"");
  }

  return url;
};

/***/ }),

/***/ 37941:
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_RESULT__;/*!
  Copyright (c) 2015 Jed Watson.
  Based on code that is Copyright 2013-2015, Facebook, Inc.
  All rights reserved.
*/
/* global define */

(function () {
	'use strict';

	var canUseDOM = !!(
		typeof window !== 'undefined' &&
		window.document &&
		window.document.createElement
	);

	var ExecutionEnvironment = {

		canUseDOM: canUseDOM,

		canUseWorkers: typeof Worker !== 'undefined',

		canUseEventListeners:
			canUseDOM && !!(window.addEventListener || window.attachEvent),

		canUseViewport: canUseDOM && !!window.screen

	};

	if (true) {
		!(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {
			return ExecutionEnvironment;
		}).call(exports, __webpack_require__, exports, module),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else {}

}());


/***/ }),

/***/ 6067:
/***/ ((module) => {

"use strict";


var hasOwn = Object.prototype.hasOwnProperty;
var toStr = Object.prototype.toString;
var defineProperty = Object.defineProperty;
var gOPD = Object.getOwnPropertyDescriptor;

var isArray = function isArray(arr) {
	if (typeof Array.isArray === 'function') {
		return Array.isArray(arr);
	}

	return toStr.call(arr) === '[object Array]';
};

var isPlainObject = function isPlainObject(obj) {
	if (!obj || toStr.call(obj) !== '[object Object]') {
		return false;
	}

	var hasOwnConstructor = hasOwn.call(obj, 'constructor');
	var hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');
	// Not own constructor property must be Object
	if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {
		return false;
	}

	// Own properties are enumerated firstly, so to speed up,
	// if last one is own, then all properties are own.
	var key;
	for (key in obj) { /**/ }

	return typeof key === 'undefined' || hasOwn.call(obj, key);
};

// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target
var setProperty = function setProperty(target, options) {
	if (defineProperty && options.name === '__proto__') {
		defineProperty(target, options.name, {
			enumerable: true,
			configurable: true,
			value: options.newValue,
			writable: true
		});
	} else {
		target[options.name] = options.newValue;
	}
};

// Return undefined instead of __proto__ if '__proto__' is not an own property
var getProperty = function getProperty(obj, name) {
	if (name === '__proto__') {
		if (!hasOwn.call(obj, name)) {
			return void 0;
		} else if (gOPD) {
			// In early versions of node, obj['__proto__'] is buggy when obj has
			// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.
			return gOPD(obj, name).value;
		}
	}

	return obj[name];
};

module.exports = function extend() {
	var options, name, src, copy, copyIsArray, clone;
	var target = arguments[0];
	var i = 1;
	var length = arguments.length;
	var deep = false;

	// Handle a deep copy situation
	if (typeof target === 'boolean') {
		deep = target;
		target = arguments[1] || {};
		// skip the boolean and the target
		i = 2;
	}
	if (target == null || (typeof target !== 'object' && typeof target !== 'function')) {
		target = {};
	}

	for (; i < length; ++i) {
		options = arguments[i];
		// Only deal with non-null/undefined values
		if (options != null) {
			// Extend the base object
			for (name in options) {
				src = getProperty(target, name);
				copy = getProperty(options, name);

				// Prevent never-ending loop
				if (target !== copy) {
					// Recurse if we're merging plain objects or arrays
					if (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {
						if (copyIsArray) {
							copyIsArray = false;
							clone = src && isArray(src) ? src : [];
						} else {
							clone = src && isPlainObject(src) ? src : {};
						}

						// Never move original objects, clone them
						setProperty(target, { name: name, newValue: extend(deep, clone, copy) });

					// Don't bring in undefined values
					} else if (typeof copy !== 'undefined') {
						setProperty(target, { name: name, newValue: copy });
					}
				}
			}
		}
	}

	// Return the modified object
	return target;
};


/***/ }),

/***/ 41281:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var reactIs = __webpack_require__(1892);

/**
 * Copyright 2015, Yahoo! Inc.
 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
 */
var REACT_STATICS = {
  childContextTypes: true,
  contextType: true,
  contextTypes: true,
  defaultProps: true,
  displayName: true,
  getDefaultProps: true,
  getDerivedStateFromError: true,
  getDerivedStateFromProps: true,
  mixins: true,
  propTypes: true,
  type: true
};
var KNOWN_STATICS = {
  name: true,
  length: true,
  prototype: true,
  caller: true,
  callee: true,
  arguments: true,
  arity: true
};
var FORWARD_REF_STATICS = {
  '$$typeof': true,
  render: true,
  defaultProps: true,
  displayName: true,
  propTypes: true
};
var MEMO_STATICS = {
  '$$typeof': true,
  compare: true,
  defaultProps: true,
  displayName: true,
  propTypes: true,
  type: true
};
var TYPE_STATICS = {};
TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;

function getStatics(component) {
  // React v16.11 and below
  if (reactIs.isMemo(component)) {
    return MEMO_STATICS;
  } // React v16.12 and above


  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;
}

var defineProperty = Object.defineProperty;
var getOwnPropertyNames = Object.getOwnPropertyNames;
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var getPrototypeOf = Object.getPrototypeOf;
var objectPrototype = Object.prototype;
function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
  if (typeof sourceComponent !== 'string') {
    // don't hoist over string (html) components
    if (objectPrototype) {
      var inheritedComponent = getPrototypeOf(sourceComponent);

      if (inheritedComponent && inheritedComponent !== objectPrototype) {
        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
      }
    }

    var keys = getOwnPropertyNames(sourceComponent);

    if (getOwnPropertySymbols) {
      keys = keys.concat(getOwnPropertySymbols(sourceComponent));
    }

    var targetStatics = getStatics(targetComponent);
    var sourceStatics = getStatics(sourceComponent);

    for (var i = 0; i < keys.length; ++i) {
      var key = keys[i];

      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);

        try {
          // Avoid failures from read-only properties
          defineProperty(targetComponent, key, descriptor);
        } catch (e) {}
      }
    }
  }

  return targetComponent;
}

module.exports = hoistNonReactStatics;


/***/ }),

/***/ 57651:
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var b="function"===typeof Symbol&&Symbol.for,c=b?Symbol.for("react.element"):60103,d=b?Symbol.for("react.portal"):60106,e=b?Symbol.for("react.fragment"):60107,f=b?Symbol.for("react.strict_mode"):60108,g=b?Symbol.for("react.profiler"):60114,h=b?Symbol.for("react.provider"):60109,k=b?Symbol.for("react.context"):60110,l=b?Symbol.for("react.async_mode"):60111,m=b?Symbol.for("react.concurrent_mode"):60111,n=b?Symbol.for("react.forward_ref"):60112,p=b?Symbol.for("react.suspense"):60113,q=b?
Symbol.for("react.suspense_list"):60120,r=b?Symbol.for("react.memo"):60115,t=b?Symbol.for("react.lazy"):60116,v=b?Symbol.for("react.block"):60121,w=b?Symbol.for("react.fundamental"):60117,x=b?Symbol.for("react.responder"):60118,y=b?Symbol.for("react.scope"):60119;
function z(a){if("object"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;
exports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return"object"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};
exports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};
exports.isValidElementType=function(a){return"string"===typeof a||"function"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||"object"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;


/***/ }),

/***/ 1892:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


if (true) {
  module.exports = __webpack_require__(57651);
} else {}


/***/ }),

/***/ 24373:
/***/ ((module) => {

// http://www.w3.org/TR/CSS21/grammar.html
// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027
var COMMENT_REGEX = /\/\*[^*]*\*+([^/*][^*]*\*+)*\//g;

var NEWLINE_REGEX = /\n/g;
var WHITESPACE_REGEX = /^\s*/;

// declaration
var PROPERTY_REGEX = /^(\*?[-#/*\\\w]+(\[[0-9a-z_-]+\])?)\s*/;
var COLON_REGEX = /^:\s*/;
var VALUE_REGEX = /^((?:'(?:\\'|.)*?'|"(?:\\"|.)*?"|\([^)]*?\)|[^};])+)/;
var SEMICOLON_REGEX = /^[;\s]*/;

// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill
var TRIM_REGEX = /^\s+|\s+$/g;

// strings
var NEWLINE = '\n';
var FORWARD_SLASH = '/';
var ASTERISK = '*';
var EMPTY_STRING = '';

// types
var TYPE_COMMENT = 'comment';
var TYPE_DECLARATION = 'declaration';

/**
 * @param {String} style
 * @param {Object} [options]
 * @return {Object[]}
 * @throws {TypeError}
 * @throws {Error}
 */
module.exports = function(style, options) {
  if (typeof style !== 'string') {
    throw new TypeError('First argument must be a string');
  }

  if (!style) return [];

  options = options || {};

  /**
   * Positional.
   */
  var lineno = 1;
  var column = 1;

  /**
   * Update lineno and column based on `str`.
   *
   * @param {String} str
   */
  function updatePosition(str) {
    var lines = str.match(NEWLINE_REGEX);
    if (lines) lineno += lines.length;
    var i = str.lastIndexOf(NEWLINE);
    column = ~i ? str.length - i : column + str.length;
  }

  /**
   * Mark position and patch `node.position`.
   *
   * @return {Function}
   */
  function position() {
    var start = { line: lineno, column: column };
    return function(node) {
      node.position = new Position(start);
      whitespace();
      return node;
    };
  }

  /**
   * Store position information for a node.
   *
   * @constructor
   * @property {Object} start
   * @property {Object} end
   * @property {undefined|String} source
   */
  function Position(start) {
    this.start = start;
    this.end = { line: lineno, column: column };
    this.source = options.source;
  }

  /**
   * Non-enumerable source string.
   */
  Position.prototype.content = style;

  var errorsList = [];

  /**
   * Error `msg`.
   *
   * @param {String} msg
   * @throws {Error}
   */
  function error(msg) {
    var err = new Error(
      options.source + ':' + lineno + ':' + column + ': ' + msg
    );
    err.reason = msg;
    err.filename = options.source;
    err.line = lineno;
    err.column = column;
    err.source = style;

    if (options.silent) {
      errorsList.push(err);
    } else {
      throw err;
    }
  }

  /**
   * Match `re` and return captures.
   *
   * @param {RegExp} re
   * @return {undefined|Array}
   */
  function match(re) {
    var m = re.exec(style);
    if (!m) return;
    var str = m[0];
    updatePosition(str);
    style = style.slice(str.length);
    return m;
  }

  /**
   * Parse whitespace.
   */
  function whitespace() {
    match(WHITESPACE_REGEX);
  }

  /**
   * Parse comments.
   *
   * @param {Object[]} [rules]
   * @return {Object[]}
   */
  function comments(rules) {
    var c;
    rules = rules || [];
    while ((c = comment())) {
      if (c !== false) {
        rules.push(c);
      }
    }
    return rules;
  }

  /**
   * Parse comment.
   *
   * @return {Object}
   * @throws {Error}
   */
  function comment() {
    var pos = position();
    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;

    var i = 2;
    while (
      EMPTY_STRING != style.charAt(i) &&
      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))
    ) {
      ++i;
    }
    i += 2;

    if (EMPTY_STRING === style.charAt(i - 1)) {
      return error('End of comment missing');
    }

    var str = style.slice(2, i - 2);
    column += 2;
    updatePosition(str);
    style = style.slice(i);
    column += 2;

    return pos({
      type: TYPE_COMMENT,
      comment: str
    });
  }

  /**
   * Parse declaration.
   *
   * @return {Object}
   * @throws {Error}
   */
  function declaration() {
    var pos = position();

    // prop
    var prop = match(PROPERTY_REGEX);
    if (!prop) return;
    comment();

    // :
    if (!match(COLON_REGEX)) return error("property missing ':'");

    // val
    var val = match(VALUE_REGEX);

    var ret = pos({
      type: TYPE_DECLARATION,
      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),
      value: val
        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))
        : EMPTY_STRING
    });

    // ;
    match(SEMICOLON_REGEX);

    return ret;
  }

  /**
   * Parse declarations.
   *
   * @return {Object[]}
   */
  function declarations() {
    var decls = [];

    comments(decls);

    // declarations
    var decl;
    while ((decl = declaration())) {
      if (decl !== false) {
        decls.push(decl);
        comments(decls);
      }
    }

    return decls;
  }

  whitespace();
  return declarations();
};

/**
 * Trim `str`.
 *
 * @param {String} str
 * @return {String}
 */
function trim(str) {
  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;
}


/***/ }),

/***/ 81246:
/***/ ((module) => {

/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */

module.exports = function isBuffer (obj) {
  return obj != null && obj.constructor != null &&
    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)
}


/***/ }),

/***/ 62628:
/***/ ((module) => {

"use strict";




var encodeCache = {};


// Create a lookup array where anything but characters in `chars` string
// and alphanumeric chars is percent-encoded.
//
function getEncodeCache(exclude) {
  var i, ch, cache = encodeCache[exclude];
  if (cache) { return cache; }

  cache = encodeCache[exclude] = [];

  for (i = 0; i < 128; i++) {
    ch = String.fromCharCode(i);

    if (/^[0-9a-z]$/i.test(ch)) {
      // always allow unencoded alphanumeric characters
      cache.push(ch);
    } else {
      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));
    }
  }

  for (i = 0; i < exclude.length; i++) {
    cache[exclude.charCodeAt(i)] = exclude[i];
  }

  return cache;
}


// Encode unsafe characters with percent-encoding, skipping already
// encoded sequences.
//
//  - string       - string to encode
//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)
//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)
//
function encode(string, exclude, keepEscaped) {
  var i, l, code, nextCode, cache,
      result = '';

  if (typeof exclude !== 'string') {
    // encode(string, keepEscaped)
    keepEscaped  = exclude;
    exclude = encode.defaultChars;
  }

  if (typeof keepEscaped === 'undefined') {
    keepEscaped = true;
  }

  cache = getEncodeCache(exclude);

  for (i = 0, l = string.length; i < l; i++) {
    code = string.charCodeAt(i);

    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {
      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {
        result += string.slice(i, i + 3);
        i += 2;
        continue;
      }
    }

    if (code < 128) {
      result += cache[code];
      continue;
    }

    if (code >= 0xD800 && code <= 0xDFFF) {
      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {
        nextCode = string.charCodeAt(i + 1);
        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {
          result += encodeURIComponent(string[i] + string[i + 1]);
          i++;
          continue;
        }
      }
      result += '%EF%BF%BD';
      continue;
    }

    result += encodeURIComponent(string[i]);
  }

  return result;
}

encode.defaultChars   = ";/?:@&=+$,-_.!~*'()#";
encode.componentChars = "-_.!~*'()";


module.exports = encode;


/***/ }),

/***/ 28349:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


const { DOCUMENT_MODE } = __webpack_require__(1199);

//Const
const VALID_DOCTYPE_NAME = 'html';
const VALID_SYSTEM_ID = 'about:legacy-compat';
const QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';

const QUIRKS_MODE_PUBLIC_ID_PREFIXES = [
    '+//silmaril//dtd html pro v0r11 19970101//',
    '-//as//dtd html 3.0 aswedit + extensions//',
    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',
    '-//ietf//dtd html 2.0 level 1//',
    '-//ietf//dtd html 2.0 level 2//',
    '-//ietf//dtd html 2.0 strict level 1//',
    '-//ietf//dtd html 2.0 strict level 2//',
    '-//ietf//dtd html 2.0 strict//',
    '-//ietf//dtd html 2.0//',
    '-//ietf//dtd html 2.1e//',
    '-//ietf//dtd html 3.0//',
    '-//ietf//dtd html 3.2 final//',
    '-//ietf//dtd html 3.2//',
    '-//ietf//dtd html 3//',
    '-//ietf//dtd html level 0//',
    '-//ietf//dtd html level 1//',
    '-//ietf//dtd html level 2//',
    '-//ietf//dtd html level 3//',
    '-//ietf//dtd html strict level 0//',
    '-//ietf//dtd html strict level 1//',
    '-//ietf//dtd html strict level 2//',
    '-//ietf//dtd html strict level 3//',
    '-//ietf//dtd html strict//',
    '-//ietf//dtd html//',
    '-//metrius//dtd metrius presentational//',
    '-//microsoft//dtd internet explorer 2.0 html strict//',
    '-//microsoft//dtd internet explorer 2.0 html//',
    '-//microsoft//dtd internet explorer 2.0 tables//',
    '-//microsoft//dtd internet explorer 3.0 html strict//',
    '-//microsoft//dtd internet explorer 3.0 html//',
    '-//microsoft//dtd internet explorer 3.0 tables//',
    '-//netscape comm. corp.//dtd html//',
    '-//netscape comm. corp.//dtd strict html//',
    "-//o'reilly and associates//dtd html 2.0//",
    "-//o'reilly and associates//dtd html extended 1.0//",
    "-//o'reilly and associates//dtd html extended relaxed 1.0//",
    '-//sq//dtd html 2.0 hotmetal + extensions//',
    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',
    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',
    '-//spyglass//dtd html 2.0 extended//',
    '-//sun microsystems corp.//dtd hotjava html//',
    '-//sun microsystems corp.//dtd hotjava strict html//',
    '-//w3c//dtd html 3 1995-03-24//',
    '-//w3c//dtd html 3.2 draft//',
    '-//w3c//dtd html 3.2 final//',
    '-//w3c//dtd html 3.2//',
    '-//w3c//dtd html 3.2s draft//',
    '-//w3c//dtd html 4.0 frameset//',
    '-//w3c//dtd html 4.0 transitional//',
    '-//w3c//dtd html experimental 19960712//',
    '-//w3c//dtd html experimental 970421//',
    '-//w3c//dtd w3 html//',
    '-//w3o//dtd w3 html 3.0//',
    '-//webtechs//dtd mozilla html 2.0//',
    '-//webtechs//dtd mozilla html//'
];

const QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = QUIRKS_MODE_PUBLIC_ID_PREFIXES.concat([
    '-//w3c//dtd html 4.01 frameset//',
    '-//w3c//dtd html 4.01 transitional//'
]);

const QUIRKS_MODE_PUBLIC_IDS = ['-//w3o//dtd w3 html strict 3.0//en//', '-/w3c/dtd html 4.0 transitional/en', 'html'];
const LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];

const LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = LIMITED_QUIRKS_PUBLIC_ID_PREFIXES.concat([
    '-//w3c//dtd html 4.01 frameset//',
    '-//w3c//dtd html 4.01 transitional//'
]);

//Utils
function enquoteDoctypeId(id) {
    const quote = id.indexOf('"') !== -1 ? "'" : '"';

    return quote + id + quote;
}

function hasPrefix(publicId, prefixes) {
    for (let i = 0; i < prefixes.length; i++) {
        if (publicId.indexOf(prefixes[i]) === 0) {
            return true;
        }
    }

    return false;
}

//API
exports.isConforming = function(token) {
    return (
        token.name === VALID_DOCTYPE_NAME &&
        token.publicId === null &&
        (token.systemId === null || token.systemId === VALID_SYSTEM_ID)
    );
};

exports.getDocumentMode = function(token) {
    if (token.name !== VALID_DOCTYPE_NAME) {
        return DOCUMENT_MODE.QUIRKS;
    }

    const systemId = token.systemId;

    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {
        return DOCUMENT_MODE.QUIRKS;
    }

    let publicId = token.publicId;

    if (publicId !== null) {
        publicId = publicId.toLowerCase();

        if (QUIRKS_MODE_PUBLIC_IDS.indexOf(publicId) > -1) {
            return DOCUMENT_MODE.QUIRKS;
        }

        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;

        if (hasPrefix(publicId, prefixes)) {
            return DOCUMENT_MODE.QUIRKS;
        }

        prefixes =
            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;

        if (hasPrefix(publicId, prefixes)) {
            return DOCUMENT_MODE.LIMITED_QUIRKS;
        }
    }

    return DOCUMENT_MODE.NO_QUIRKS;
};

exports.serializeContent = function(name, publicId, systemId) {
    let str = '!DOCTYPE ';

    if (name) {
        str += name;
    }

    if (publicId) {
        str += ' PUBLIC ' + enquoteDoctypeId(publicId);
    } else if (systemId) {
        str += ' SYSTEM';
    }

    if (systemId !== null) {
        str += ' ' + enquoteDoctypeId(systemId);
    }

    return str;
};


/***/ }),

/***/ 58991:
/***/ ((module) => {

"use strict";


module.exports = {
    controlCharacterInInputStream: 'control-character-in-input-stream',
    noncharacterInInputStream: 'noncharacter-in-input-stream',
    surrogateInInputStream: 'surrogate-in-input-stream',
    nonVoidHtmlElementStartTagWithTrailingSolidus: 'non-void-html-element-start-tag-with-trailing-solidus',
    endTagWithAttributes: 'end-tag-with-attributes',
    endTagWithTrailingSolidus: 'end-tag-with-trailing-solidus',
    unexpectedSolidusInTag: 'unexpected-solidus-in-tag',
    unexpectedNullCharacter: 'unexpected-null-character',
    unexpectedQuestionMarkInsteadOfTagName: 'unexpected-question-mark-instead-of-tag-name',
    invalidFirstCharacterOfTagName: 'invalid-first-character-of-tag-name',
    unexpectedEqualsSignBeforeAttributeName: 'unexpected-equals-sign-before-attribute-name',
    missingEndTagName: 'missing-end-tag-name',
    unexpectedCharacterInAttributeName: 'unexpected-character-in-attribute-name',
    unknownNamedCharacterReference: 'unknown-named-character-reference',
    missingSemicolonAfterCharacterReference: 'missing-semicolon-after-character-reference',
    unexpectedCharacterAfterDoctypeSystemIdentifier: 'unexpected-character-after-doctype-system-identifier',
    unexpectedCharacterInUnquotedAttributeValue: 'unexpected-character-in-unquoted-attribute-value',
    eofBeforeTagName: 'eof-before-tag-name',
    eofInTag: 'eof-in-tag',
    missingAttributeValue: 'missing-attribute-value',
    missingWhitespaceBetweenAttributes: 'missing-whitespace-between-attributes',
    missingWhitespaceAfterDoctypePublicKeyword: 'missing-whitespace-after-doctype-public-keyword',
    missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers:
        'missing-whitespace-between-doctype-public-and-system-identifiers',
    missingWhitespaceAfterDoctypeSystemKeyword: 'missing-whitespace-after-doctype-system-keyword',
    missingQuoteBeforeDoctypePublicIdentifier: 'missing-quote-before-doctype-public-identifier',
    missingQuoteBeforeDoctypeSystemIdentifier: 'missing-quote-before-doctype-system-identifier',
    missingDoctypePublicIdentifier: 'missing-doctype-public-identifier',
    missingDoctypeSystemIdentifier: 'missing-doctype-system-identifier',
    abruptDoctypePublicIdentifier: 'abrupt-doctype-public-identifier',
    abruptDoctypeSystemIdentifier: 'abrupt-doctype-system-identifier',
    cdataInHtmlContent: 'cdata-in-html-content',
    incorrectlyOpenedComment: 'incorrectly-opened-comment',
    eofInScriptHtmlCommentLikeText: 'eof-in-script-html-comment-like-text',
    eofInDoctype: 'eof-in-doctype',
    nestedComment: 'nested-comment',
    abruptClosingOfEmptyComment: 'abrupt-closing-of-empty-comment',
    eofInComment: 'eof-in-comment',
    incorrectlyClosedComment: 'incorrectly-closed-comment',
    eofInCdata: 'eof-in-cdata',
    absenceOfDigitsInNumericCharacterReference: 'absence-of-digits-in-numeric-character-reference',
    nullCharacterReference: 'null-character-reference',
    surrogateCharacterReference: 'surrogate-character-reference',
    characterReferenceOutsideUnicodeRange: 'character-reference-outside-unicode-range',
    controlCharacterReference: 'control-character-reference',
    noncharacterCharacterReference: 'noncharacter-character-reference',
    missingWhitespaceBeforeDoctypeName: 'missing-whitespace-before-doctype-name',
    missingDoctypeName: 'missing-doctype-name',
    invalidCharacterSequenceAfterDoctypeName: 'invalid-character-sequence-after-doctype-name',
    duplicateAttribute: 'duplicate-attribute',
    nonConformingDoctype: 'non-conforming-doctype',
    missingDoctype: 'missing-doctype',
    misplacedDoctype: 'misplaced-doctype',
    endTagWithoutMatchingOpenElement: 'end-tag-without-matching-open-element',
    closingOfElementWithOpenChildElements: 'closing-of-element-with-open-child-elements',
    disallowedContentInNoscriptInHead: 'disallowed-content-in-noscript-in-head',
    openElementsLeftAfterEof: 'open-elements-left-after-eof',
    abandonedHeadElementChild: 'abandoned-head-element-child',
    misplacedStartTagForHeadElement: 'misplaced-start-tag-for-head-element',
    nestedNoscriptInHead: 'nested-noscript-in-head',
    eofInElementThatCanContainOnlyText: 'eof-in-element-that-can-contain-only-text'
};


/***/ }),

/***/ 40511:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


const Tokenizer = __webpack_require__(32494);
const HTML = __webpack_require__(1199);

//Aliases
const $ = HTML.TAG_NAMES;
const NS = HTML.NAMESPACES;
const ATTRS = HTML.ATTRS;

//MIME types
const MIME_TYPES = {
    TEXT_HTML: 'text/html',
    APPLICATION_XML: 'application/xhtml+xml'
};

//Attributes
const DEFINITION_URL_ATTR = 'definitionurl';
const ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';
const SVG_ATTRS_ADJUSTMENT_MAP = {
    attributename: 'attributeName',
    attributetype: 'attributeType',
    basefrequency: 'baseFrequency',
    baseprofile: 'baseProfile',
    calcmode: 'calcMode',
    clippathunits: 'clipPathUnits',
    diffuseconstant: 'diffuseConstant',
    edgemode: 'edgeMode',
    filterunits: 'filterUnits',
    glyphref: 'glyphRef',
    gradienttransform: 'gradientTransform',
    gradientunits: 'gradientUnits',
    kernelmatrix: 'kernelMatrix',
    kernelunitlength: 'kernelUnitLength',
    keypoints: 'keyPoints',
    keysplines: 'keySplines',
    keytimes: 'keyTimes',
    lengthadjust: 'lengthAdjust',
    limitingconeangle: 'limitingConeAngle',
    markerheight: 'markerHeight',
    markerunits: 'markerUnits',
    markerwidth: 'markerWidth',
    maskcontentunits: 'maskContentUnits',
    maskunits: 'maskUnits',
    numoctaves: 'numOctaves',
    pathlength: 'pathLength',
    patterncontentunits: 'patternContentUnits',
    patterntransform: 'patternTransform',
    patternunits: 'patternUnits',
    pointsatx: 'pointsAtX',
    pointsaty: 'pointsAtY',
    pointsatz: 'pointsAtZ',
    preservealpha: 'preserveAlpha',
    preserveaspectratio: 'preserveAspectRatio',
    primitiveunits: 'primitiveUnits',
    refx: 'refX',
    refy: 'refY',
    repeatcount: 'repeatCount',
    repeatdur: 'repeatDur',
    requiredextensions: 'requiredExtensions',
    requiredfeatures: 'requiredFeatures',
    specularconstant: 'specularConstant',
    specularexponent: 'specularExponent',
    spreadmethod: 'spreadMethod',
    startoffset: 'startOffset',
    stddeviation: 'stdDeviation',
    stitchtiles: 'stitchTiles',
    surfacescale: 'surfaceScale',
    systemlanguage: 'systemLanguage',
    tablevalues: 'tableValues',
    targetx: 'targetX',
    targety: 'targetY',
    textlength: 'textLength',
    viewbox: 'viewBox',
    viewtarget: 'viewTarget',
    xchannelselector: 'xChannelSelector',
    ychannelselector: 'yChannelSelector',
    zoomandpan: 'zoomAndPan'
};

const XML_ATTRS_ADJUSTMENT_MAP = {
    'xlink:actuate': { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK },
    'xlink:arcrole': { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK },
    'xlink:href': { prefix: 'xlink', name: 'href', namespace: NS.XLINK },
    'xlink:role': { prefix: 'xlink', name: 'role', namespace: NS.XLINK },
    'xlink:show': { prefix: 'xlink', name: 'show', namespace: NS.XLINK },
    'xlink:title': { prefix: 'xlink', name: 'title', namespace: NS.XLINK },
    'xlink:type': { prefix: 'xlink', name: 'type', namespace: NS.XLINK },
    'xml:base': { prefix: 'xml', name: 'base', namespace: NS.XML },
    'xml:lang': { prefix: 'xml', name: 'lang', namespace: NS.XML },
    'xml:space': { prefix: 'xml', name: 'space', namespace: NS.XML },
    xmlns: { prefix: '', name: 'xmlns', namespace: NS.XMLNS },
    'xmlns:xlink': { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }
};

//SVG tag names adjustment map
const SVG_TAG_NAMES_ADJUSTMENT_MAP = (exports.SVG_TAG_NAMES_ADJUSTMENT_MAP = {
    altglyph: 'altGlyph',
    altglyphdef: 'altGlyphDef',
    altglyphitem: 'altGlyphItem',
    animatecolor: 'animateColor',
    animatemotion: 'animateMotion',
    animatetransform: 'animateTransform',
    clippath: 'clipPath',
    feblend: 'feBlend',
    fecolormatrix: 'feColorMatrix',
    fecomponenttransfer: 'feComponentTransfer',
    fecomposite: 'feComposite',
    feconvolvematrix: 'feConvolveMatrix',
    fediffuselighting: 'feDiffuseLighting',
    fedisplacementmap: 'feDisplacementMap',
    fedistantlight: 'feDistantLight',
    feflood: 'feFlood',
    fefunca: 'feFuncA',
    fefuncb: 'feFuncB',
    fefuncg: 'feFuncG',
    fefuncr: 'feFuncR',
    fegaussianblur: 'feGaussianBlur',
    feimage: 'feImage',
    femerge: 'feMerge',
    femergenode: 'feMergeNode',
    femorphology: 'feMorphology',
    feoffset: 'feOffset',
    fepointlight: 'fePointLight',
    fespecularlighting: 'feSpecularLighting',
    fespotlight: 'feSpotLight',
    fetile: 'feTile',
    feturbulence: 'feTurbulence',
    foreignobject: 'foreignObject',
    glyphref: 'glyphRef',
    lineargradient: 'linearGradient',
    radialgradient: 'radialGradient',
    textpath: 'textPath'
});

//Tags that causes exit from foreign content
const EXITS_FOREIGN_CONTENT = {
    [$.B]: true,
    [$.BIG]: true,
    [$.BLOCKQUOTE]: true,
    [$.BODY]: true,
    [$.BR]: true,
    [$.CENTER]: true,
    [$.CODE]: true,
    [$.DD]: true,
    [$.DIV]: true,
    [$.DL]: true,
    [$.DT]: true,
    [$.EM]: true,
    [$.EMBED]: true,
    [$.H1]: true,
    [$.H2]: true,
    [$.H3]: true,
    [$.H4]: true,
    [$.H5]: true,
    [$.H6]: true,
    [$.HEAD]: true,
    [$.HR]: true,
    [$.I]: true,
    [$.IMG]: true,
    [$.LI]: true,
    [$.LISTING]: true,
    [$.MENU]: true,
    [$.META]: true,
    [$.NOBR]: true,
    [$.OL]: true,
    [$.P]: true,
    [$.PRE]: true,
    [$.RUBY]: true,
    [$.S]: true,
    [$.SMALL]: true,
    [$.SPAN]: true,
    [$.STRONG]: true,
    [$.STRIKE]: true,
    [$.SUB]: true,
    [$.SUP]: true,
    [$.TABLE]: true,
    [$.TT]: true,
    [$.U]: true,
    [$.UL]: true,
    [$.VAR]: true
};

//Check exit from foreign content
exports.causesExit = function(startTagToken) {
    const tn = startTagToken.tagName;
    const isFontWithAttrs =
        tn === $.FONT &&
        (Tokenizer.getTokenAttr(startTagToken, ATTRS.COLOR) !== null ||
            Tokenizer.getTokenAttr(startTagToken, ATTRS.SIZE) !== null ||
            Tokenizer.getTokenAttr(startTagToken, ATTRS.FACE) !== null);

    return isFontWithAttrs ? true : EXITS_FOREIGN_CONTENT[tn];
};

//Token adjustments
exports.adjustTokenMathMLAttrs = function(token) {
    for (let i = 0; i < token.attrs.length; i++) {
        if (token.attrs[i].name === DEFINITION_URL_ATTR) {
            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;
            break;
        }
    }
};

exports.adjustTokenSVGAttrs = function(token) {
    for (let i = 0; i < token.attrs.length; i++) {
        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP[token.attrs[i].name];

        if (adjustedAttrName) {
            token.attrs[i].name = adjustedAttrName;
        }
    }
};

exports.adjustTokenXMLAttrs = function(token) {
    for (let i = 0; i < token.attrs.length; i++) {
        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP[token.attrs[i].name];

        if (adjustedAttrEntry) {
            token.attrs[i].prefix = adjustedAttrEntry.prefix;
            token.attrs[i].name = adjustedAttrEntry.name;
            token.attrs[i].namespace = adjustedAttrEntry.namespace;
        }
    }
};

exports.adjustTokenSVGTagName = function(token) {
    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP[token.tagName];

    if (adjustedTagName) {
        token.tagName = adjustedTagName;
    }
};

//Integration points
function isMathMLTextIntegrationPoint(tn, ns) {
    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);
}

function isHtmlIntegrationPoint(tn, ns, attrs) {
    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {
        for (let i = 0; i < attrs.length; i++) {
            if (attrs[i].name === ATTRS.ENCODING) {
                const value = attrs[i].value.toLowerCase();

                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;
            }
        }
    }

    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);
}

exports.isIntegrationPoint = function(tn, ns, attrs, foreignNS) {
    if ((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) {
        return true;
    }

    if ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)) {
        return true;
    }

    return false;
};


/***/ }),

/***/ 1199:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


const NS = (exports.NAMESPACES = {
    HTML: 'http://www.w3.org/1999/xhtml',
    MATHML: 'http://www.w3.org/1998/Math/MathML',
    SVG: 'http://www.w3.org/2000/svg',
    XLINK: 'http://www.w3.org/1999/xlink',
    XML: 'http://www.w3.org/XML/1998/namespace',
    XMLNS: 'http://www.w3.org/2000/xmlns/'
});

exports.ATTRS = {
    TYPE: 'type',
    ACTION: 'action',
    ENCODING: 'encoding',
    PROMPT: 'prompt',
    NAME: 'name',
    COLOR: 'color',
    FACE: 'face',
    SIZE: 'size'
};

exports.DOCUMENT_MODE = {
    NO_QUIRKS: 'no-quirks',
    QUIRKS: 'quirks',
    LIMITED_QUIRKS: 'limited-quirks'
};

const $ = (exports.TAG_NAMES = {
    A: 'a',
    ADDRESS: 'address',
    ANNOTATION_XML: 'annotation-xml',
    APPLET: 'applet',
    AREA: 'area',
    ARTICLE: 'article',
    ASIDE: 'aside',

    B: 'b',
    BASE: 'base',
    BASEFONT: 'basefont',
    BGSOUND: 'bgsound',
    BIG: 'big',
    BLOCKQUOTE: 'blockquote',
    BODY: 'body',
    BR: 'br',
    BUTTON: 'button',

    CAPTION: 'caption',
    CENTER: 'center',
    CODE: 'code',
    COL: 'col',
    COLGROUP: 'colgroup',

    DD: 'dd',
    DESC: 'desc',
    DETAILS: 'details',
    DIALOG: 'dialog',
    DIR: 'dir',
    DIV: 'div',
    DL: 'dl',
    DT: 'dt',

    EM: 'em',
    EMBED: 'embed',

    FIELDSET: 'fieldset',
    FIGCAPTION: 'figcaption',
    FIGURE: 'figure',
    FONT: 'font',
    FOOTER: 'footer',
    FOREIGN_OBJECT: 'foreignObject',
    FORM: 'form',
    FRAME: 'frame',
    FRAMESET: 'frameset',

    H1: 'h1',
    H2: 'h2',
    H3: 'h3',
    H4: 'h4',
    H5: 'h5',
    H6: 'h6',
    HEAD: 'head',
    HEADER: 'header',
    HGROUP: 'hgroup',
    HR: 'hr',
    HTML: 'html',

    I: 'i',
    IMG: 'img',
    IMAGE: 'image',
    INPUT: 'input',
    IFRAME: 'iframe',

    KEYGEN: 'keygen',

    LABEL: 'label',
    LI: 'li',
    LINK: 'link',
    LISTING: 'listing',

    MAIN: 'main',
    MALIGNMARK: 'malignmark',
    MARQUEE: 'marquee',
    MATH: 'math',
    MENU: 'menu',
    META: 'meta',
    MGLYPH: 'mglyph',
    MI: 'mi',
    MO: 'mo',
    MN: 'mn',
    MS: 'ms',
    MTEXT: 'mtext',

    NAV: 'nav',
    NOBR: 'nobr',
    NOFRAMES: 'noframes',
    NOEMBED: 'noembed',
    NOSCRIPT: 'noscript',

    OBJECT: 'object',
    OL: 'ol',
    OPTGROUP: 'optgroup',
    OPTION: 'option',

    P: 'p',
    PARAM: 'param',
    PLAINTEXT: 'plaintext',
    PRE: 'pre',

    RB: 'rb',
    RP: 'rp',
    RT: 'rt',
    RTC: 'rtc',
    RUBY: 'ruby',

    S: 's',
    SCRIPT: 'script',
    SECTION: 'section',
    SELECT: 'select',
    SOURCE: 'source',
    SMALL: 'small',
    SPAN: 'span',
    STRIKE: 'strike',
    STRONG: 'strong',
    STYLE: 'style',
    SUB: 'sub',
    SUMMARY: 'summary',
    SUP: 'sup',

    TABLE: 'table',
    TBODY: 'tbody',
    TEMPLATE: 'template',
    TEXTAREA: 'textarea',
    TFOOT: 'tfoot',
    TD: 'td',
    TH: 'th',
    THEAD: 'thead',
    TITLE: 'title',
    TR: 'tr',
    TRACK: 'track',
    TT: 'tt',

    U: 'u',
    UL: 'ul',

    SVG: 'svg',

    VAR: 'var',

    WBR: 'wbr',

    XMP: 'xmp'
});

exports.SPECIAL_ELEMENTS = {
    [NS.HTML]: {
        [$.ADDRESS]: true,
        [$.APPLET]: true,
        [$.AREA]: true,
        [$.ARTICLE]: true,
        [$.ASIDE]: true,
        [$.BASE]: true,
        [$.BASEFONT]: true,
        [$.BGSOUND]: true,
        [$.BLOCKQUOTE]: true,
        [$.BODY]: true,
        [$.BR]: true,
        [$.BUTTON]: true,
        [$.CAPTION]: true,
        [$.CENTER]: true,
        [$.COL]: true,
        [$.COLGROUP]: true,
        [$.DD]: true,
        [$.DETAILS]: true,
        [$.DIR]: true,
        [$.DIV]: true,
        [$.DL]: true,
        [$.DT]: true,
        [$.EMBED]: true,
        [$.FIELDSET]: true,
        [$.FIGCAPTION]: true,
        [$.FIGURE]: true,
        [$.FOOTER]: true,
        [$.FORM]: true,
        [$.FRAME]: true,
        [$.FRAMESET]: true,
        [$.H1]: true,
        [$.H2]: true,
        [$.H3]: true,
        [$.H4]: true,
        [$.H5]: true,
        [$.H6]: true,
        [$.HEAD]: true,
        [$.HEADER]: true,
        [$.HGROUP]: true,
        [$.HR]: true,
        [$.HTML]: true,
        [$.IFRAME]: true,
        [$.IMG]: true,
        [$.INPUT]: true,
        [$.LI]: true,
        [$.LINK]: true,
        [$.LISTING]: true,
        [$.MAIN]: true,
        [$.MARQUEE]: true,
        [$.MENU]: true,
        [$.META]: true,
        [$.NAV]: true,
        [$.NOEMBED]: true,
        [$.NOFRAMES]: true,
        [$.NOSCRIPT]: true,
        [$.OBJECT]: true,
        [$.OL]: true,
        [$.P]: true,
        [$.PARAM]: true,
        [$.PLAINTEXT]: true,
        [$.PRE]: true,
        [$.SCRIPT]: true,
        [$.SECTION]: true,
        [$.SELECT]: true,
        [$.SOURCE]: true,
        [$.STYLE]: true,
        [$.SUMMARY]: true,
        [$.TABLE]: true,
        [$.TBODY]: true,
        [$.TD]: true,
        [$.TEMPLATE]: true,
        [$.TEXTAREA]: true,
        [$.TFOOT]: true,
        [$.TH]: true,
        [$.THEAD]: true,
        [$.TITLE]: true,
        [$.TR]: true,
        [$.TRACK]: true,
        [$.UL]: true,
        [$.WBR]: true,
        [$.XMP]: true
    },
    [NS.MATHML]: {
        [$.MI]: true,
        [$.MO]: true,
        [$.MN]: true,
        [$.MS]: true,
        [$.MTEXT]: true,
        [$.ANNOTATION_XML]: true
    },
    [NS.SVG]: {
        [$.TITLE]: true,
        [$.FOREIGN_OBJECT]: true,
        [$.DESC]: true
    }
};


/***/ }),

/***/ 15695:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


const UNDEFINED_CODE_POINTS = [
    0xfffe,
    0xffff,
    0x1fffe,
    0x1ffff,
    0x2fffe,
    0x2ffff,
    0x3fffe,
    0x3ffff,
    0x4fffe,
    0x4ffff,
    0x5fffe,
    0x5ffff,
    0x6fffe,
    0x6ffff,
    0x7fffe,
    0x7ffff,
    0x8fffe,
    0x8ffff,
    0x9fffe,
    0x9ffff,
    0xafffe,
    0xaffff,
    0xbfffe,
    0xbffff,
    0xcfffe,
    0xcffff,
    0xdfffe,
    0xdffff,
    0xefffe,
    0xeffff,
    0xffffe,
    0xfffff,
    0x10fffe,
    0x10ffff
];

exports.REPLACEMENT_CHARACTER = '\uFFFD';

exports.CODE_POINTS = {
    EOF: -1,
    NULL: 0x00,
    TABULATION: 0x09,
    CARRIAGE_RETURN: 0x0d,
    LINE_FEED: 0x0a,
    FORM_FEED: 0x0c,
    SPACE: 0x20,
    EXCLAMATION_MARK: 0x21,
    QUOTATION_MARK: 0x22,
    NUMBER_SIGN: 0x23,
    AMPERSAND: 0x26,
    APOSTROPHE: 0x27,
    HYPHEN_MINUS: 0x2d,
    SOLIDUS: 0x2f,
    DIGIT_0: 0x30,
    DIGIT_9: 0x39,
    SEMICOLON: 0x3b,
    LESS_THAN_SIGN: 0x3c,
    EQUALS_SIGN: 0x3d,
    GREATER_THAN_SIGN: 0x3e,
    QUESTION_MARK: 0x3f,
    LATIN_CAPITAL_A: 0x41,
    LATIN_CAPITAL_F: 0x46,
    LATIN_CAPITAL_X: 0x58,
    LATIN_CAPITAL_Z: 0x5a,
    RIGHT_SQUARE_BRACKET: 0x5d,
    GRAVE_ACCENT: 0x60,
    LATIN_SMALL_A: 0x61,
    LATIN_SMALL_F: 0x66,
    LATIN_SMALL_X: 0x78,
    LATIN_SMALL_Z: 0x7a,
    REPLACEMENT_CHARACTER: 0xfffd
};

exports.CODE_POINT_SEQUENCES = {
    DASH_DASH_STRING: [0x2d, 0x2d], //--
    DOCTYPE_STRING: [0x44, 0x4f, 0x43, 0x54, 0x59, 0x50, 0x45], //DOCTYPE
    CDATA_START_STRING: [0x5b, 0x43, 0x44, 0x41, 0x54, 0x41, 0x5b], //[CDATA[
    SCRIPT_STRING: [0x73, 0x63, 0x72, 0x69, 0x70, 0x74], //script
    PUBLIC_STRING: [0x50, 0x55, 0x42, 0x4c, 0x49, 0x43], //PUBLIC
    SYSTEM_STRING: [0x53, 0x59, 0x53, 0x54, 0x45, 0x4d] //SYSTEM
};

//Surrogates
exports.isSurrogate = function(cp) {
    return cp >= 0xd800 && cp <= 0xdfff;
};

exports.isSurrogatePair = function(cp) {
    return cp >= 0xdc00 && cp <= 0xdfff;
};

exports.getSurrogatePairCodePoint = function(cp1, cp2) {
    return (cp1 - 0xd800) * 0x400 + 0x2400 + cp2;
};

//NOTE: excluding NULL and ASCII whitespace
exports.isControlCodePoint = function(cp) {
    return (
        (cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||
        (cp >= 0x7f && cp <= 0x9f)
    );
};

exports.isUndefinedCodePoint = function(cp) {
    return (cp >= 0xfdd0 && cp <= 0xfdef) || UNDEFINED_CODE_POINTS.indexOf(cp) > -1;
};


/***/ }),

/***/ 12676:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


const Mixin = __webpack_require__(27260);

class ErrorReportingMixinBase extends Mixin {
    constructor(host, opts) {
        super(host);

        this.posTracker = null;
        this.onParseError = opts.onParseError;
    }

    _setErrorLocation(err) {
        err.startLine = err.endLine = this.posTracker.line;
        err.startCol = err.endCol = this.posTracker.col;
        err.startOffset = err.endOffset = this.posTracker.offset;
    }

    _reportError(code) {
        const err = {
            code: code,
            startLine: -1,
            startCol: -1,
            startOffset: -1,
            endLine: -1,
            endCol: -1,
            endOffset: -1
        };

        this._setErrorLocation(err);
        this.onParseError(err);
    }

    _getOverriddenMethods(mxn) {
        return {
            _err(code) {
                mxn._reportError(code);
            }
        };
    }
}

module.exports = ErrorReportingMixinBase;


/***/ }),

/***/ 7250:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


const ErrorReportingMixinBase = __webpack_require__(12676);
const ErrorReportingTokenizerMixin = __webpack_require__(62847);
const LocationInfoTokenizerMixin = __webpack_require__(56573);
const Mixin = __webpack_require__(27260);

class ErrorReportingParserMixin extends ErrorReportingMixinBase {
    constructor(parser, opts) {
        super(parser, opts);

        this.opts = opts;
        this.ctLoc = null;
        this.locBeforeToken = false;
    }

    _setErrorLocation(err) {
        if (this.ctLoc) {
            err.startLine = this.ctLoc.startLine;
            err.startCol = this.ctLoc.startCol;
            err.startOffset = this.ctLoc.startOffset;

            err.endLine = this.locBeforeToken ? this.ctLoc.startLine : this.ctLoc.endLine;
            err.endCol = this.locBeforeToken ? this.ctLoc.startCol : this.ctLoc.endCol;
            err.endOffset = this.locBeforeToken ? this.ctLoc.startOffset : this.ctLoc.endOffset;
        }
    }

    _getOverriddenMethods(mxn, orig) {
        return {
            _bootstrap(document, fragmentContext) {
                orig._bootstrap.call(this, document, fragmentContext);

                Mixin.install(this.tokenizer, ErrorReportingTokenizerMixin, mxn.opts);
                Mixin.install(this.tokenizer, LocationInfoTokenizerMixin);
            },

            _processInputToken(token) {
                mxn.ctLoc = token.location;

                orig._processInputToken.call(this, token);
            },

            _err(code, options) {
                mxn.locBeforeToken = options && options.beforeToken;
                mxn._reportError(code);
            }
        };
    }
}

module.exports = ErrorReportingParserMixin;


/***/ }),

/***/ 8816:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


const ErrorReportingMixinBase = __webpack_require__(12676);
const PositionTrackingPreprocessorMixin = __webpack_require__(75167);
const Mixin = __webpack_require__(27260);

class ErrorReportingPreprocessorMixin extends ErrorReportingMixinBase {
    constructor(preprocessor, opts) {
        super(preprocessor, opts);

        this.posTracker = Mixin.install(preprocessor, PositionTrackingPreprocessorMixin);
        this.lastErrOffset = -1;
    }

    _reportError(code) {
        //NOTE: avoid reporting error twice on advance/retreat
        if (this.lastErrOffset !== this.posTracker.offset) {
            this.lastErrOffset = this.posTracker.offset;
            super._reportError(code);
        }
    }
}

module.exports = ErrorReportingPreprocessorMixin;


/***/ }),

/***/ 62847:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


const ErrorReportingMixinBase = __webpack_require__(12676);
const ErrorReportingPreprocessorMixin = __webpack_require__(8816);
const Mixin = __webpack_require__(27260);

class ErrorReportingTokenizerMixin extends ErrorReportingMixinBase {
    constructor(tokenizer, opts) {
        super(tokenizer, opts);

        const preprocessorMixin = Mixin.install(tokenizer.preprocessor, ErrorReportingPreprocessorMixin, opts);

        this.posTracker = preprocessorMixin.posTracker;
    }
}

module.exports = ErrorReportingTokenizerMixin;


/***/ }),

/***/ 15434:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


const Mixin = __webpack_require__(27260);

class LocationInfoOpenElementStackMixin extends Mixin {
    constructor(stack, opts) {
        super(stack);

        this.onItemPop = opts.onItemPop;
    }

    _getOverriddenMethods(mxn, orig) {
        return {
            pop() {
                mxn.onItemPop(this.current);
                orig.pop.call(this);
            },

            popAllUpToHtmlElement() {
                for (let i = this.stackTop; i > 0; i--) {
                    mxn.onItemPop(this.items[i]);
                }

                orig.popAllUpToHtmlElement.call(this);
            },

            remove(element) {
                mxn.onItemPop(this.current);
                orig.remove.call(this, element);
            }
        };
    }
}

module.exports = LocationInfoOpenElementStackMixin;


/***/ }),

/***/ 24829:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


const Mixin = __webpack_require__(27260);
const Tokenizer = __webpack_require__(32494);
const LocationInfoTokenizerMixin = __webpack_require__(56573);
const LocationInfoOpenElementStackMixin = __webpack_require__(15434);
const HTML = __webpack_require__(1199);

//Aliases
const $ = HTML.TAG_NAMES;

class LocationInfoParserMixin extends Mixin {
    constructor(parser) {
        super(parser);

        this.parser = parser;
        this.treeAdapter = this.parser.treeAdapter;
        this.posTracker = null;
        this.lastStartTagToken = null;
        this.lastFosterParentingLocation = null;
        this.currentToken = null;
    }

    _setStartLocation(element) {
        let loc = null;

        if (this.lastStartTagToken) {
            loc = Object.assign({}, this.lastStartTagToken.location);
            loc.startTag = this.lastStartTagToken.location;
        }

        this.treeAdapter.setNodeSourceCodeLocation(element, loc);
    }

    _setEndLocation(element, closingToken) {
        const loc = this.treeAdapter.getNodeSourceCodeLocation(element);

        if (loc) {
            if (closingToken.location) {
                const ctLoc = closingToken.location;
                const tn = this.treeAdapter.getTagName(element);

                // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing
                // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.
                const isClosingEndTag = closingToken.type === Tokenizer.END_TAG_TOKEN && tn === closingToken.tagName;
                const endLoc = {};
                if (isClosingEndTag) {
                    endLoc.endTag = Object.assign({}, ctLoc);
                    endLoc.endLine = ctLoc.endLine;
                    endLoc.endCol = ctLoc.endCol;
                    endLoc.endOffset = ctLoc.endOffset;
                } else {
                    endLoc.endLine = ctLoc.startLine;
                    endLoc.endCol = ctLoc.startCol;
                    endLoc.endOffset = ctLoc.startOffset;
                }

                this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);
            }
        }
    }

    _getOverriddenMethods(mxn, orig) {
        return {
            _bootstrap(document, fragmentContext) {
                orig._bootstrap.call(this, document, fragmentContext);

                mxn.lastStartTagToken = null;
                mxn.lastFosterParentingLocation = null;
                mxn.currentToken = null;

                const tokenizerMixin = Mixin.install(this.tokenizer, LocationInfoTokenizerMixin);

                mxn.posTracker = tokenizerMixin.posTracker;

                Mixin.install(this.openElements, LocationInfoOpenElementStackMixin, {
                    onItemPop: function(element) {
                        mxn._setEndLocation(element, mxn.currentToken);
                    }
                });
            },

            _runParsingLoop(scriptHandler) {
                orig._runParsingLoop.call(this, scriptHandler);

                // NOTE: generate location info for elements
                // that remains on open element stack
                for (let i = this.openElements.stackTop; i >= 0; i--) {
                    mxn._setEndLocation(this.openElements.items[i], mxn.currentToken);
                }
            },

            //Token processing
            _processTokenInForeignContent(token) {
                mxn.currentToken = token;
                orig._processTokenInForeignContent.call(this, token);
            },

            _processToken(token) {
                mxn.currentToken = token;
                orig._processToken.call(this, token);

                //NOTE: <body> and <html> are never popped from the stack, so we need to updated
                //their end location explicitly.
                const requireExplicitUpdate =
                    token.type === Tokenizer.END_TAG_TOKEN &&
                    (token.tagName === $.HTML || (token.tagName === $.BODY && this.openElements.hasInScope($.BODY)));

                if (requireExplicitUpdate) {
                    for (let i = this.openElements.stackTop; i >= 0; i--) {
                        const element = this.openElements.items[i];

                        if (this.treeAdapter.getTagName(element) === token.tagName) {
                            mxn._setEndLocation(element, token);
                            break;
                        }
                    }
                }
            },

            //Doctype
            _setDocumentType(token) {
                orig._setDocumentType.call(this, token);

                const documentChildren = this.treeAdapter.getChildNodes(this.document);
                const cnLength = documentChildren.length;

                for (let i = 0; i < cnLength; i++) {
                    const node = documentChildren[i];

                    if (this.treeAdapter.isDocumentTypeNode(node)) {
                        this.treeAdapter.setNodeSourceCodeLocation(node, token.location);
                        break;
                    }
                }
            },

            //Elements
            _attachElementToTree(element) {
                //NOTE: _attachElementToTree is called from _appendElement, _insertElement and _insertTemplate methods.
                //So we will use token location stored in this methods for the element.
                mxn._setStartLocation(element);
                mxn.lastStartTagToken = null;
                orig._attachElementToTree.call(this, element);
            },

            _appendElement(token, namespaceURI) {
                mxn.lastStartTagToken = token;
                orig._appendElement.call(this, token, namespaceURI);
            },

            _insertElement(token, namespaceURI) {
                mxn.lastStartTagToken = token;
                orig._insertElement.call(this, token, namespaceURI);
            },

            _insertTemplate(token) {
                mxn.lastStartTagToken = token;
                orig._insertTemplate.call(this, token);

                const tmplContent = this.treeAdapter.getTemplateContent(this.openElements.current);

                this.treeAdapter.setNodeSourceCodeLocation(tmplContent, null);
            },

            _insertFakeRootElement() {
                orig._insertFakeRootElement.call(this);
                this.treeAdapter.setNodeSourceCodeLocation(this.openElements.current, null);
            },

            //Comments
            _appendCommentNode(token, parent) {
                orig._appendCommentNode.call(this, token, parent);

                const children = this.treeAdapter.getChildNodes(parent);
                const commentNode = children[children.length - 1];

                this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);
            },

            //Text
            _findFosterParentingLocation() {
                //NOTE: store last foster parenting location, so we will be able to find inserted text
                //in case of foster parenting
                mxn.lastFosterParentingLocation = orig._findFosterParentingLocation.call(this);

                return mxn.lastFosterParentingLocation;
            },

            _insertCharacters(token) {
                orig._insertCharacters.call(this, token);

                const hasFosterParent = this._shouldFosterParentOnInsertion();

                const parent =
                    (hasFosterParent && mxn.lastFosterParentingLocation.parent) ||
                    this.openElements.currentTmplContent ||
                    this.openElements.current;

                const siblings = this.treeAdapter.getChildNodes(parent);

                const textNodeIdx =
                    hasFosterParent && mxn.lastFosterParentingLocation.beforeElement
                        ? siblings.indexOf(mxn.lastFosterParentingLocation.beforeElement) - 1
                        : siblings.length - 1;

                const textNode = siblings[textNodeIdx];

                //NOTE: if we have location assigned by another token, then just update end position
                const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);

                if (tnLoc) {
                    const { endLine, endCol, endOffset } = token.location;
                    this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });
                } else {
                    this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);
                }
            }
        };
    }
}

module.exports = LocationInfoParserMixin;


/***/ }),

/***/ 56573:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


const Mixin = __webpack_require__(27260);
const Tokenizer = __webpack_require__(32494);
const PositionTrackingPreprocessorMixin = __webpack_require__(75167);

class LocationInfoTokenizerMixin extends Mixin {
    constructor(tokenizer) {
        super(tokenizer);

        this.tokenizer = tokenizer;
        this.posTracker = Mixin.install(tokenizer.preprocessor, PositionTrackingPreprocessorMixin);
        this.currentAttrLocation = null;
        this.ctLoc = null;
    }

    _getCurrentLocation() {
        return {
            startLine: this.posTracker.line,
            startCol: this.posTracker.col,
            startOffset: this.posTracker.offset,
            endLine: -1,
            endCol: -1,
            endOffset: -1
        };
    }

    _attachCurrentAttrLocationInfo() {
        this.currentAttrLocation.endLine = this.posTracker.line;
        this.currentAttrLocation.endCol = this.posTracker.col;
        this.currentAttrLocation.endOffset = this.posTracker.offset;

        const currentToken = this.tokenizer.currentToken;
        const currentAttr = this.tokenizer.currentAttr;

        if (!currentToken.location.attrs) {
            currentToken.location.attrs = Object.create(null);
        }

        currentToken.location.attrs[currentAttr.name] = this.currentAttrLocation;
    }

    _getOverriddenMethods(mxn, orig) {
        const methods = {
            _createStartTagToken() {
                orig._createStartTagToken.call(this);
                this.currentToken.location = mxn.ctLoc;
            },

            _createEndTagToken() {
                orig._createEndTagToken.call(this);
                this.currentToken.location = mxn.ctLoc;
            },

            _createCommentToken() {
                orig._createCommentToken.call(this);
                this.currentToken.location = mxn.ctLoc;
            },

            _createDoctypeToken(initialName) {
                orig._createDoctypeToken.call(this, initialName);
                this.currentToken.location = mxn.ctLoc;
            },

            _createCharacterToken(type, ch) {
                orig._createCharacterToken.call(this, type, ch);
                this.currentCharacterToken.location = mxn.ctLoc;
            },

            _createEOFToken() {
                orig._createEOFToken.call(this);
                this.currentToken.location = mxn._getCurrentLocation();
            },

            _createAttr(attrNameFirstCh) {
                orig._createAttr.call(this, attrNameFirstCh);
                mxn.currentAttrLocation = mxn._getCurrentLocation();
            },

            _leaveAttrName(toState) {
                orig._leaveAttrName.call(this, toState);
                mxn._attachCurrentAttrLocationInfo();
            },

            _leaveAttrValue(toState) {
                orig._leaveAttrValue.call(this, toState);
                mxn._attachCurrentAttrLocationInfo();
            },

            _emitCurrentToken() {
                const ctLoc = this.currentToken.location;

                //NOTE: if we have pending character token make it's end location equal to the
                //current token's start location.
                if (this.currentCharacterToken) {
                    this.currentCharacterToken.location.endLine = ctLoc.startLine;
                    this.currentCharacterToken.location.endCol = ctLoc.startCol;
                    this.currentCharacterToken.location.endOffset = ctLoc.startOffset;
                }

                if (this.currentToken.type === Tokenizer.EOF_TOKEN) {
                    ctLoc.endLine = ctLoc.startLine;
                    ctLoc.endCol = ctLoc.startCol;
                    ctLoc.endOffset = ctLoc.startOffset;
                } else {
                    ctLoc.endLine = mxn.posTracker.line;
                    ctLoc.endCol = mxn.posTracker.col + 1;
                    ctLoc.endOffset = mxn.posTracker.offset + 1;
                }

                orig._emitCurrentToken.call(this);
            },

            _emitCurrentCharacterToken() {
                const ctLoc = this.currentCharacterToken && this.currentCharacterToken.location;

                //NOTE: if we have character token and it's location wasn't set in the _emitCurrentToken(),
                //then set it's location at the current preprocessor position.
                //We don't need to increment preprocessor position, since character token
                //emission is always forced by the start of the next character token here.
                //So, we already have advanced position.
                if (ctLoc && ctLoc.endOffset === -1) {
                    ctLoc.endLine = mxn.posTracker.line;
                    ctLoc.endCol = mxn.posTracker.col;
                    ctLoc.endOffset = mxn.posTracker.offset;
                }

                orig._emitCurrentCharacterToken.call(this);
            }
        };

        //NOTE: patch initial states for each mode to obtain token start position
        Object.keys(Tokenizer.MODE).forEach(modeName => {
            const state = Tokenizer.MODE[modeName];

            methods[state] = function(cp) {
                mxn.ctLoc = mxn._getCurrentLocation();
                orig[state].call(this, cp);
            };
        });

        return methods;
    }
}

module.exports = LocationInfoTokenizerMixin;


/***/ }),

/***/ 75167:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


const Mixin = __webpack_require__(27260);

class PositionTrackingPreprocessorMixin extends Mixin {
    constructor(preprocessor) {
        super(preprocessor);

        this.preprocessor = preprocessor;
        this.isEol = false;
        this.lineStartPos = 0;
        this.droppedBufferSize = 0;

        this.offset = 0;
        this.col = 0;
        this.line = 1;
    }

    _getOverriddenMethods(mxn, orig) {
        return {
            advance() {
                const pos = this.pos + 1;
                const ch = this.html[pos];

                //NOTE: LF should be in the last column of the line
                if (mxn.isEol) {
                    mxn.isEol = false;
                    mxn.line++;
                    mxn.lineStartPos = pos;
                }

                if (ch === '\n' || (ch === '\r' && this.html[pos + 1] !== '\n')) {
                    mxn.isEol = true;
                }

                mxn.col = pos - mxn.lineStartPos + 1;
                mxn.offset = mxn.droppedBufferSize + pos;

                return orig.advance.call(this);
            },

            retreat() {
                orig.retreat.call(this);

                mxn.isEol = false;
                mxn.col = this.pos - mxn.lineStartPos + 1;
            },

            dropParsedChunk() {
                const prevPos = this.pos;

                orig.dropParsedChunk.call(this);

                const reduction = prevPos - this.pos;

                mxn.lineStartPos -= reduction;
                mxn.droppedBufferSize += reduction;
                mxn.offset = mxn.droppedBufferSize + this.pos;
            }
        };
    }
}

module.exports = PositionTrackingPreprocessorMixin;


/***/ }),

/***/ 72623:
/***/ ((module) => {

"use strict";


//Const
const NOAH_ARK_CAPACITY = 3;

//List of formatting elements
class FormattingElementList {
    constructor(treeAdapter) {
        this.length = 0;
        this.entries = [];
        this.treeAdapter = treeAdapter;
        this.bookmark = null;
    }

    //Noah Ark's condition
    //OPTIMIZATION: at first we try to find possible candidates for exclusion using
    //lightweight heuristics without thorough attributes check.
    _getNoahArkConditionCandidates(newElement) {
        const candidates = [];

        if (this.length >= NOAH_ARK_CAPACITY) {
            const neAttrsLength = this.treeAdapter.getAttrList(newElement).length;
            const neTagName = this.treeAdapter.getTagName(newElement);
            const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);

            for (let i = this.length - 1; i >= 0; i--) {
                const entry = this.entries[i];

                if (entry.type === FormattingElementList.MARKER_ENTRY) {
                    break;
                }

                const element = entry.element;
                const elementAttrs = this.treeAdapter.getAttrList(element);

                const isCandidate =
                    this.treeAdapter.getTagName(element) === neTagName &&
                    this.treeAdapter.getNamespaceURI(element) === neNamespaceURI &&
                    elementAttrs.length === neAttrsLength;

                if (isCandidate) {
                    candidates.push({ idx: i, attrs: elementAttrs });
                }
            }
        }

        return candidates.length < NOAH_ARK_CAPACITY ? [] : candidates;
    }

    _ensureNoahArkCondition(newElement) {
        const candidates = this._getNoahArkConditionCandidates(newElement);
        let cLength = candidates.length;

        if (cLength) {
            const neAttrs = this.treeAdapter.getAttrList(newElement);
            const neAttrsLength = neAttrs.length;
            const neAttrsMap = Object.create(null);

            //NOTE: build attrs map for the new element so we can perform fast lookups
            for (let i = 0; i < neAttrsLength; i++) {
                const neAttr = neAttrs[i];

                neAttrsMap[neAttr.name] = neAttr.value;
            }

            for (let i = 0; i < neAttrsLength; i++) {
                for (let j = 0; j < cLength; j++) {
                    const cAttr = candidates[j].attrs[i];

                    if (neAttrsMap[cAttr.name] !== cAttr.value) {
                        candidates.splice(j, 1);
                        cLength--;
                    }

                    if (candidates.length < NOAH_ARK_CAPACITY) {
                        return;
                    }
                }
            }

            //NOTE: remove bottommost candidates until Noah's Ark condition will not be met
            for (let i = cLength - 1; i >= NOAH_ARK_CAPACITY - 1; i--) {
                this.entries.splice(candidates[i].idx, 1);
                this.length--;
            }
        }
    }

    //Mutations
    insertMarker() {
        this.entries.push({ type: FormattingElementList.MARKER_ENTRY });
        this.length++;
    }

    pushElement(element, token) {
        this._ensureNoahArkCondition(element);

        this.entries.push({
            type: FormattingElementList.ELEMENT_ENTRY,
            element: element,
            token: token
        });

        this.length++;
    }

    insertElementAfterBookmark(element, token) {
        let bookmarkIdx = this.length - 1;

        for (; bookmarkIdx >= 0; bookmarkIdx--) {
            if (this.entries[bookmarkIdx] === this.bookmark) {
                break;
            }
        }

        this.entries.splice(bookmarkIdx + 1, 0, {
            type: FormattingElementList.ELEMENT_ENTRY,
            element: element,
            token: token
        });

        this.length++;
    }

    removeEntry(entry) {
        for (let i = this.length - 1; i >= 0; i--) {
            if (this.entries[i] === entry) {
                this.entries.splice(i, 1);
                this.length--;
                break;
            }
        }
    }

    clearToLastMarker() {
        while (this.length) {
            const entry = this.entries.pop();

            this.length--;

            if (entry.type === FormattingElementList.MARKER_ENTRY) {
                break;
            }
        }
    }

    //Search
    getElementEntryInScopeWithTagName(tagName) {
        for (let i = this.length - 1; i >= 0; i--) {
            const entry = this.entries[i];

            if (entry.type === FormattingElementList.MARKER_ENTRY) {
                return null;
            }

            if (this.treeAdapter.getTagName(entry.element) === tagName) {
                return entry;
            }
        }

        return null;
    }

    getElementEntry(element) {
        for (let i = this.length - 1; i >= 0; i--) {
            const entry = this.entries[i];

            if (entry.type === FormattingElementList.ELEMENT_ENTRY && entry.element === element) {
                return entry;
            }
        }

        return null;
    }
}

//Entry types
FormattingElementList.MARKER_ENTRY = 'MARKER_ENTRY';
FormattingElementList.ELEMENT_ENTRY = 'ELEMENT_ENTRY';

module.exports = FormattingElementList;


/***/ }),

/***/ 14298:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


const Tokenizer = __webpack_require__(32494);
const OpenElementStack = __webpack_require__(49177);
const FormattingElementList = __webpack_require__(72623);
const LocationInfoParserMixin = __webpack_require__(24829);
const ErrorReportingParserMixin = __webpack_require__(7250);
const Mixin = __webpack_require__(27260);
const defaultTreeAdapter = __webpack_require__(26247);
const mergeOptions = __webpack_require__(54773);
const doctype = __webpack_require__(28349);
const foreignContent = __webpack_require__(40511);
const ERR = __webpack_require__(58991);
const unicode = __webpack_require__(15695);
const HTML = __webpack_require__(1199);

//Aliases
const $ = HTML.TAG_NAMES;
const NS = HTML.NAMESPACES;
const ATTRS = HTML.ATTRS;

const DEFAULT_OPTIONS = {
    scriptingEnabled: true,
    sourceCodeLocationInfo: false,
    onParseError: null,
    treeAdapter: defaultTreeAdapter
};

//Misc constants
const HIDDEN_INPUT_TYPE = 'hidden';

//Adoption agency loops iteration count
const AA_OUTER_LOOP_ITER = 8;
const AA_INNER_LOOP_ITER = 3;

//Insertion modes
const INITIAL_MODE = 'INITIAL_MODE';
const BEFORE_HTML_MODE = 'BEFORE_HTML_MODE';
const BEFORE_HEAD_MODE = 'BEFORE_HEAD_MODE';
const IN_HEAD_MODE = 'IN_HEAD_MODE';
const IN_HEAD_NO_SCRIPT_MODE = 'IN_HEAD_NO_SCRIPT_MODE';
const AFTER_HEAD_MODE = 'AFTER_HEAD_MODE';
const IN_BODY_MODE = 'IN_BODY_MODE';
const TEXT_MODE = 'TEXT_MODE';
const IN_TABLE_MODE = 'IN_TABLE_MODE';
const IN_TABLE_TEXT_MODE = 'IN_TABLE_TEXT_MODE';
const IN_CAPTION_MODE = 'IN_CAPTION_MODE';
const IN_COLUMN_GROUP_MODE = 'IN_COLUMN_GROUP_MODE';
const IN_TABLE_BODY_MODE = 'IN_TABLE_BODY_MODE';
const IN_ROW_MODE = 'IN_ROW_MODE';
const IN_CELL_MODE = 'IN_CELL_MODE';
const IN_SELECT_MODE = 'IN_SELECT_MODE';
const IN_SELECT_IN_TABLE_MODE = 'IN_SELECT_IN_TABLE_MODE';
const IN_TEMPLATE_MODE = 'IN_TEMPLATE_MODE';
const AFTER_BODY_MODE = 'AFTER_BODY_MODE';
const IN_FRAMESET_MODE = 'IN_FRAMESET_MODE';
const AFTER_FRAMESET_MODE = 'AFTER_FRAMESET_MODE';
const AFTER_AFTER_BODY_MODE = 'AFTER_AFTER_BODY_MODE';
const AFTER_AFTER_FRAMESET_MODE = 'AFTER_AFTER_FRAMESET_MODE';

//Insertion mode reset map
const INSERTION_MODE_RESET_MAP = {
    [$.TR]: IN_ROW_MODE,
    [$.TBODY]: IN_TABLE_BODY_MODE,
    [$.THEAD]: IN_TABLE_BODY_MODE,
    [$.TFOOT]: IN_TABLE_BODY_MODE,
    [$.CAPTION]: IN_CAPTION_MODE,
    [$.COLGROUP]: IN_COLUMN_GROUP_MODE,
    [$.TABLE]: IN_TABLE_MODE,
    [$.BODY]: IN_BODY_MODE,
    [$.FRAMESET]: IN_FRAMESET_MODE
};

//Template insertion mode switch map
const TEMPLATE_INSERTION_MODE_SWITCH_MAP = {
    [$.CAPTION]: IN_TABLE_MODE,
    [$.COLGROUP]: IN_TABLE_MODE,
    [$.TBODY]: IN_TABLE_MODE,
    [$.TFOOT]: IN_TABLE_MODE,
    [$.THEAD]: IN_TABLE_MODE,
    [$.COL]: IN_COLUMN_GROUP_MODE,
    [$.TR]: IN_TABLE_BODY_MODE,
    [$.TD]: IN_ROW_MODE,
    [$.TH]: IN_ROW_MODE
};

//Token handlers map for insertion modes
const TOKEN_HANDLERS = {
    [INITIAL_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: tokenInInitialMode,
        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenInInitialMode,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: doctypeInInitialMode,
        [Tokenizer.START_TAG_TOKEN]: tokenInInitialMode,
        [Tokenizer.END_TAG_TOKEN]: tokenInInitialMode,
        [Tokenizer.EOF_TOKEN]: tokenInInitialMode
    },
    [BEFORE_HTML_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: tokenBeforeHtml,
        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenBeforeHtml,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: startTagBeforeHtml,
        [Tokenizer.END_TAG_TOKEN]: endTagBeforeHtml,
        [Tokenizer.EOF_TOKEN]: tokenBeforeHtml
    },
    [BEFORE_HEAD_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: tokenBeforeHead,
        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenBeforeHead,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: misplacedDoctype,
        [Tokenizer.START_TAG_TOKEN]: startTagBeforeHead,
        [Tokenizer.END_TAG_TOKEN]: endTagBeforeHead,
        [Tokenizer.EOF_TOKEN]: tokenBeforeHead
    },
    [IN_HEAD_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: tokenInHead,
        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenInHead,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: misplacedDoctype,
        [Tokenizer.START_TAG_TOKEN]: startTagInHead,
        [Tokenizer.END_TAG_TOKEN]: endTagInHead,
        [Tokenizer.EOF_TOKEN]: tokenInHead
    },
    [IN_HEAD_NO_SCRIPT_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: tokenInHeadNoScript,
        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenInHeadNoScript,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: misplacedDoctype,
        [Tokenizer.START_TAG_TOKEN]: startTagInHeadNoScript,
        [Tokenizer.END_TAG_TOKEN]: endTagInHeadNoScript,
        [Tokenizer.EOF_TOKEN]: tokenInHeadNoScript
    },
    [AFTER_HEAD_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: tokenAfterHead,
        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenAfterHead,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: misplacedDoctype,
        [Tokenizer.START_TAG_TOKEN]: startTagAfterHead,
        [Tokenizer.END_TAG_TOKEN]: endTagAfterHead,
        [Tokenizer.EOF_TOKEN]: tokenAfterHead
    },
    [IN_BODY_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: characterInBody,
        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: startTagInBody,
        [Tokenizer.END_TAG_TOKEN]: endTagInBody,
        [Tokenizer.EOF_TOKEN]: eofInBody
    },
    [TEXT_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer.NULL_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer.COMMENT_TOKEN]: ignoreToken,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: ignoreToken,
        [Tokenizer.END_TAG_TOKEN]: endTagInText,
        [Tokenizer.EOF_TOKEN]: eofInText
    },
    [IN_TABLE_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: characterInTable,
        [Tokenizer.NULL_CHARACTER_TOKEN]: characterInTable,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: characterInTable,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: startTagInTable,
        [Tokenizer.END_TAG_TOKEN]: endTagInTable,
        [Tokenizer.EOF_TOKEN]: eofInBody
    },
    [IN_TABLE_TEXT_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: characterInTableText,
        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInTableText,
        [Tokenizer.COMMENT_TOKEN]: tokenInTableText,
        [Tokenizer.DOCTYPE_TOKEN]: tokenInTableText,
        [Tokenizer.START_TAG_TOKEN]: tokenInTableText,
        [Tokenizer.END_TAG_TOKEN]: tokenInTableText,
        [Tokenizer.EOF_TOKEN]: tokenInTableText
    },
    [IN_CAPTION_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: characterInBody,
        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: startTagInCaption,
        [Tokenizer.END_TAG_TOKEN]: endTagInCaption,
        [Tokenizer.EOF_TOKEN]: eofInBody
    },
    [IN_COLUMN_GROUP_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: tokenInColumnGroup,
        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenInColumnGroup,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: startTagInColumnGroup,
        [Tokenizer.END_TAG_TOKEN]: endTagInColumnGroup,
        [Tokenizer.EOF_TOKEN]: eofInBody
    },
    [IN_TABLE_BODY_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: characterInTable,
        [Tokenizer.NULL_CHARACTER_TOKEN]: characterInTable,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: characterInTable,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: startTagInTableBody,
        [Tokenizer.END_TAG_TOKEN]: endTagInTableBody,
        [Tokenizer.EOF_TOKEN]: eofInBody
    },
    [IN_ROW_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: characterInTable,
        [Tokenizer.NULL_CHARACTER_TOKEN]: characterInTable,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: characterInTable,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: startTagInRow,
        [Tokenizer.END_TAG_TOKEN]: endTagInRow,
        [Tokenizer.EOF_TOKEN]: eofInBody
    },
    [IN_CELL_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: characterInBody,
        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: startTagInCell,
        [Tokenizer.END_TAG_TOKEN]: endTagInCell,
        [Tokenizer.EOF_TOKEN]: eofInBody
    },
    [IN_SELECT_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: startTagInSelect,
        [Tokenizer.END_TAG_TOKEN]: endTagInSelect,
        [Tokenizer.EOF_TOKEN]: eofInBody
    },
    [IN_SELECT_IN_TABLE_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: startTagInSelectInTable,
        [Tokenizer.END_TAG_TOKEN]: endTagInSelectInTable,
        [Tokenizer.EOF_TOKEN]: eofInBody
    },
    [IN_TEMPLATE_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: characterInBody,
        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: startTagInTemplate,
        [Tokenizer.END_TAG_TOKEN]: endTagInTemplate,
        [Tokenizer.EOF_TOKEN]: eofInTemplate
    },
    [AFTER_BODY_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: tokenAfterBody,
        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenAfterBody,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,
        [Tokenizer.COMMENT_TOKEN]: appendCommentToRootHtmlElement,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: startTagAfterBody,
        [Tokenizer.END_TAG_TOKEN]: endTagAfterBody,
        [Tokenizer.EOF_TOKEN]: stopParsing
    },
    [IN_FRAMESET_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: startTagInFrameset,
        [Tokenizer.END_TAG_TOKEN]: endTagInFrameset,
        [Tokenizer.EOF_TOKEN]: stopParsing
    },
    [AFTER_FRAMESET_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: startTagAfterFrameset,
        [Tokenizer.END_TAG_TOKEN]: endTagAfterFrameset,
        [Tokenizer.EOF_TOKEN]: stopParsing
    },
    [AFTER_AFTER_BODY_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: tokenAfterAfterBody,
        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenAfterAfterBody,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,
        [Tokenizer.COMMENT_TOKEN]: appendCommentToDocument,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: startTagAfterAfterBody,
        [Tokenizer.END_TAG_TOKEN]: tokenAfterAfterBody,
        [Tokenizer.EOF_TOKEN]: stopParsing
    },
    [AFTER_AFTER_FRAMESET_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,
        [Tokenizer.COMMENT_TOKEN]: appendCommentToDocument,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: startTagAfterAfterFrameset,
        [Tokenizer.END_TAG_TOKEN]: ignoreToken,
        [Tokenizer.EOF_TOKEN]: stopParsing
    }
};

//Parser
class Parser {
    constructor(options) {
        this.options = mergeOptions(DEFAULT_OPTIONS, options);

        this.treeAdapter = this.options.treeAdapter;
        this.pendingScript = null;

        if (this.options.sourceCodeLocationInfo) {
            Mixin.install(this, LocationInfoParserMixin);
        }

        if (this.options.onParseError) {
            Mixin.install(this, ErrorReportingParserMixin, { onParseError: this.options.onParseError });
        }
    }

    // API
    parse(html) {
        const document = this.treeAdapter.createDocument();

        this._bootstrap(document, null);
        this.tokenizer.write(html, true);
        this._runParsingLoop(null);

        return document;
    }

    parseFragment(html, fragmentContext) {
        //NOTE: use <template> element as a fragment context if context element was not provided,
        //so we will parse in "forgiving" manner
        if (!fragmentContext) {
            fragmentContext = this.treeAdapter.createElement($.TEMPLATE, NS.HTML, []);
        }

        //NOTE: create fake element which will be used as 'document' for fragment parsing.
        //This is important for jsdom there 'document' can't be recreated, therefore
        //fragment parsing causes messing of the main `document`.
        const documentMock = this.treeAdapter.createElement('documentmock', NS.HTML, []);

        this._bootstrap(documentMock, fragmentContext);

        if (this.treeAdapter.getTagName(fragmentContext) === $.TEMPLATE) {
            this._pushTmplInsertionMode(IN_TEMPLATE_MODE);
        }

        this._initTokenizerForFragmentParsing();
        this._insertFakeRootElement();
        this._resetInsertionMode();
        this._findFormInFragmentContext();
        this.tokenizer.write(html, true);
        this._runParsingLoop(null);

        const rootElement = this.treeAdapter.getFirstChild(documentMock);
        const fragment = this.treeAdapter.createDocumentFragment();

        this._adoptNodes(rootElement, fragment);

        return fragment;
    }

    //Bootstrap parser
    _bootstrap(document, fragmentContext) {
        this.tokenizer = new Tokenizer(this.options);

        this.stopped = false;

        this.insertionMode = INITIAL_MODE;
        this.originalInsertionMode = '';

        this.document = document;
        this.fragmentContext = fragmentContext;

        this.headElement = null;
        this.formElement = null;

        this.openElements = new OpenElementStack(this.document, this.treeAdapter);
        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);

        this.tmplInsertionModeStack = [];
        this.tmplInsertionModeStackTop = -1;
        this.currentTmplInsertionMode = null;

        this.pendingCharacterTokens = [];
        this.hasNonWhitespacePendingCharacterToken = false;

        this.framesetOk = true;
        this.skipNextNewLine = false;
        this.fosterParentingEnabled = false;
    }

    //Errors
    _err() {
        // NOTE: err reporting is noop by default. Enabled by mixin.
    }

    //Parsing loop
    _runParsingLoop(scriptHandler) {
        while (!this.stopped) {
            this._setupTokenizerCDATAMode();

            const token = this.tokenizer.getNextToken();

            if (token.type === Tokenizer.HIBERNATION_TOKEN) {
                break;
            }

            if (this.skipNextNewLine) {
                this.skipNextNewLine = false;

                if (token.type === Tokenizer.WHITESPACE_CHARACTER_TOKEN && token.chars[0] === '\n') {
                    if (token.chars.length === 1) {
                        continue;
                    }

                    token.chars = token.chars.substr(1);
                }
            }

            this._processInputToken(token);

            if (scriptHandler && this.pendingScript) {
                break;
            }
        }
    }

    runParsingLoopForCurrentChunk(writeCallback, scriptHandler) {
        this._runParsingLoop(scriptHandler);

        if (scriptHandler && this.pendingScript) {
            const script = this.pendingScript;

            this.pendingScript = null;

            scriptHandler(script);

            return;
        }

        if (writeCallback) {
            writeCallback();
        }
    }

    //Text parsing
    _setupTokenizerCDATAMode() {
        const current = this._getAdjustedCurrentElement();

        this.tokenizer.allowCDATA =
            current &&
            current !== this.document &&
            this.treeAdapter.getNamespaceURI(current) !== NS.HTML &&
            !this._isIntegrationPoint(current);
    }

    _switchToTextParsing(currentToken, nextTokenizerState) {
        this._insertElement(currentToken, NS.HTML);
        this.tokenizer.state = nextTokenizerState;
        this.originalInsertionMode = this.insertionMode;
        this.insertionMode = TEXT_MODE;
    }

    switchToPlaintextParsing() {
        this.insertionMode = TEXT_MODE;
        this.originalInsertionMode = IN_BODY_MODE;
        this.tokenizer.state = Tokenizer.MODE.PLAINTEXT;
    }

    //Fragment parsing
    _getAdjustedCurrentElement() {
        return this.openElements.stackTop === 0 && this.fragmentContext
            ? this.fragmentContext
            : this.openElements.current;
    }

    _findFormInFragmentContext() {
        let node = this.fragmentContext;

        do {
            if (this.treeAdapter.getTagName(node) === $.FORM) {
                this.formElement = node;
                break;
            }

            node = this.treeAdapter.getParentNode(node);
        } while (node);
    }

    _initTokenizerForFragmentParsing() {
        if (this.treeAdapter.getNamespaceURI(this.fragmentContext) === NS.HTML) {
            const tn = this.treeAdapter.getTagName(this.fragmentContext);

            if (tn === $.TITLE || tn === $.TEXTAREA) {
                this.tokenizer.state = Tokenizer.MODE.RCDATA;
            } else if (
                tn === $.STYLE ||
                tn === $.XMP ||
                tn === $.IFRAME ||
                tn === $.NOEMBED ||
                tn === $.NOFRAMES ||
                tn === $.NOSCRIPT
            ) {
                this.tokenizer.state = Tokenizer.MODE.RAWTEXT;
            } else if (tn === $.SCRIPT) {
                this.tokenizer.state = Tokenizer.MODE.SCRIPT_DATA;
            } else if (tn === $.PLAINTEXT) {
                this.tokenizer.state = Tokenizer.MODE.PLAINTEXT;
            }
        }
    }

    //Tree mutation
    _setDocumentType(token) {
        const name = token.name || '';
        const publicId = token.publicId || '';
        const systemId = token.systemId || '';

        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);
    }

    _attachElementToTree(element) {
        if (this._shouldFosterParentOnInsertion()) {
            this._fosterParentElement(element);
        } else {
            const parent = this.openElements.currentTmplContent || this.openElements.current;

            this.treeAdapter.appendChild(parent, element);
        }
    }

    _appendElement(token, namespaceURI) {
        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);

        this._attachElementToTree(element);
    }

    _insertElement(token, namespaceURI) {
        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);

        this._attachElementToTree(element);
        this.openElements.push(element);
    }

    _insertFakeElement(tagName) {
        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);

        this._attachElementToTree(element);
        this.openElements.push(element);
    }

    _insertTemplate(token) {
        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);
        const content = this.treeAdapter.createDocumentFragment();

        this.treeAdapter.setTemplateContent(tmpl, content);
        this._attachElementToTree(tmpl);
        this.openElements.push(tmpl);
    }

    _insertFakeRootElement() {
        const element = this.treeAdapter.createElement($.HTML, NS.HTML, []);

        this.treeAdapter.appendChild(this.openElements.current, element);
        this.openElements.push(element);
    }

    _appendCommentNode(token, parent) {
        const commentNode = this.treeAdapter.createCommentNode(token.data);

        this.treeAdapter.appendChild(parent, commentNode);
    }

    _insertCharacters(token) {
        if (this._shouldFosterParentOnInsertion()) {
            this._fosterParentText(token.chars);
        } else {
            const parent = this.openElements.currentTmplContent || this.openElements.current;

            this.treeAdapter.insertText(parent, token.chars);
        }
    }

    _adoptNodes(donor, recipient) {
        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {
            this.treeAdapter.detachNode(child);
            this.treeAdapter.appendChild(recipient, child);
        }
    }

    //Token processing
    _shouldProcessTokenInForeignContent(token) {
        const current = this._getAdjustedCurrentElement();

        if (!current || current === this.document) {
            return false;
        }

        const ns = this.treeAdapter.getNamespaceURI(current);

        if (ns === NS.HTML) {
            return false;
        }

        if (
            this.treeAdapter.getTagName(current) === $.ANNOTATION_XML &&
            ns === NS.MATHML &&
            token.type === Tokenizer.START_TAG_TOKEN &&
            token.tagName === $.SVG
        ) {
            return false;
        }

        const isCharacterToken =
            token.type === Tokenizer.CHARACTER_TOKEN ||
            token.type === Tokenizer.NULL_CHARACTER_TOKEN ||
            token.type === Tokenizer.WHITESPACE_CHARACTER_TOKEN;

        const isMathMLTextStartTag =
            token.type === Tokenizer.START_TAG_TOKEN && token.tagName !== $.MGLYPH && token.tagName !== $.MALIGNMARK;

        if ((isMathMLTextStartTag || isCharacterToken) && this._isIntegrationPoint(current, NS.MATHML)) {
            return false;
        }

        if (
            (token.type === Tokenizer.START_TAG_TOKEN || isCharacterToken) &&
            this._isIntegrationPoint(current, NS.HTML)
        ) {
            return false;
        }

        return token.type !== Tokenizer.EOF_TOKEN;
    }

    _processToken(token) {
        TOKEN_HANDLERS[this.insertionMode][token.type](this, token);
    }

    _processTokenInBodyMode(token) {
        TOKEN_HANDLERS[IN_BODY_MODE][token.type](this, token);
    }

    _processTokenInForeignContent(token) {
        if (token.type === Tokenizer.CHARACTER_TOKEN) {
            characterInForeignContent(this, token);
        } else if (token.type === Tokenizer.NULL_CHARACTER_TOKEN) {
            nullCharacterInForeignContent(this, token);
        } else if (token.type === Tokenizer.WHITESPACE_CHARACTER_TOKEN) {
            insertCharacters(this, token);
        } else if (token.type === Tokenizer.COMMENT_TOKEN) {
            appendComment(this, token);
        } else if (token.type === Tokenizer.START_TAG_TOKEN) {
            startTagInForeignContent(this, token);
        } else if (token.type === Tokenizer.END_TAG_TOKEN) {
            endTagInForeignContent(this, token);
        }
    }

    _processInputToken(token) {
        if (this._shouldProcessTokenInForeignContent(token)) {
            this._processTokenInForeignContent(token);
        } else {
            this._processToken(token);
        }

        if (token.type === Tokenizer.START_TAG_TOKEN && token.selfClosing && !token.ackSelfClosing) {
            this._err(ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);
        }
    }

    //Integration points
    _isIntegrationPoint(element, foreignNS) {
        const tn = this.treeAdapter.getTagName(element);
        const ns = this.treeAdapter.getNamespaceURI(element);
        const attrs = this.treeAdapter.getAttrList(element);

        return foreignContent.isIntegrationPoint(tn, ns, attrs, foreignNS);
    }

    //Active formatting elements reconstruction
    _reconstructActiveFormattingElements() {
        const listLength = this.activeFormattingElements.length;

        if (listLength) {
            let unopenIdx = listLength;
            let entry = null;

            do {
                unopenIdx--;
                entry = this.activeFormattingElements.entries[unopenIdx];

                if (entry.type === FormattingElementList.MARKER_ENTRY || this.openElements.contains(entry.element)) {
                    unopenIdx++;
                    break;
                }
            } while (unopenIdx > 0);

            for (let i = unopenIdx; i < listLength; i++) {
                entry = this.activeFormattingElements.entries[i];
                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));
                entry.element = this.openElements.current;
            }
        }
    }

    //Close elements
    _closeTableCell() {
        this.openElements.generateImpliedEndTags();
        this.openElements.popUntilTableCellPopped();
        this.activeFormattingElements.clearToLastMarker();
        this.insertionMode = IN_ROW_MODE;
    }

    _closePElement() {
        this.openElements.generateImpliedEndTagsWithExclusion($.P);
        this.openElements.popUntilTagNamePopped($.P);
    }

    //Insertion modes
    _resetInsertionMode() {
        for (let i = this.openElements.stackTop, last = false; i >= 0; i--) {
            let element = this.openElements.items[i];

            if (i === 0) {
                last = true;

                if (this.fragmentContext) {
                    element = this.fragmentContext;
                }
            }

            const tn = this.treeAdapter.getTagName(element);
            const newInsertionMode = INSERTION_MODE_RESET_MAP[tn];

            if (newInsertionMode) {
                this.insertionMode = newInsertionMode;
                break;
            } else if (!last && (tn === $.TD || tn === $.TH)) {
                this.insertionMode = IN_CELL_MODE;
                break;
            } else if (!last && tn === $.HEAD) {
                this.insertionMode = IN_HEAD_MODE;
                break;
            } else if (tn === $.SELECT) {
                this._resetInsertionModeForSelect(i);
                break;
            } else if (tn === $.TEMPLATE) {
                this.insertionMode = this.currentTmplInsertionMode;
                break;
            } else if (tn === $.HTML) {
                this.insertionMode = this.headElement ? AFTER_HEAD_MODE : BEFORE_HEAD_MODE;
                break;
            } else if (last) {
                this.insertionMode = IN_BODY_MODE;
                break;
            }
        }
    }

    _resetInsertionModeForSelect(selectIdx) {
        if (selectIdx > 0) {
            for (let i = selectIdx - 1; i > 0; i--) {
                const ancestor = this.openElements.items[i];
                const tn = this.treeAdapter.getTagName(ancestor);

                if (tn === $.TEMPLATE) {
                    break;
                } else if (tn === $.TABLE) {
                    this.insertionMode = IN_SELECT_IN_TABLE_MODE;
                    return;
                }
            }
        }

        this.insertionMode = IN_SELECT_MODE;
    }

    _pushTmplInsertionMode(mode) {
        this.tmplInsertionModeStack.push(mode);
        this.tmplInsertionModeStackTop++;
        this.currentTmplInsertionMode = mode;
    }

    _popTmplInsertionMode() {
        this.tmplInsertionModeStack.pop();
        this.tmplInsertionModeStackTop--;
        this.currentTmplInsertionMode = this.tmplInsertionModeStack[this.tmplInsertionModeStackTop];
    }

    //Foster parenting
    _isElementCausesFosterParenting(element) {
        const tn = this.treeAdapter.getTagName(element);

        return tn === $.TABLE || tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD || tn === $.TR;
    }

    _shouldFosterParentOnInsertion() {
        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.current);
    }

    _findFosterParentingLocation() {
        const location = {
            parent: null,
            beforeElement: null
        };

        for (let i = this.openElements.stackTop; i >= 0; i--) {
            const openElement = this.openElements.items[i];
            const tn = this.treeAdapter.getTagName(openElement);
            const ns = this.treeAdapter.getNamespaceURI(openElement);

            if (tn === $.TEMPLATE && ns === NS.HTML) {
                location.parent = this.treeAdapter.getTemplateContent(openElement);
                break;
            } else if (tn === $.TABLE) {
                location.parent = this.treeAdapter.getParentNode(openElement);

                if (location.parent) {
                    location.beforeElement = openElement;
                } else {
                    location.parent = this.openElements.items[i - 1];
                }

                break;
            }
        }

        if (!location.parent) {
            location.parent = this.openElements.items[0];
        }

        return location;
    }

    _fosterParentElement(element) {
        const location = this._findFosterParentingLocation();

        if (location.beforeElement) {
            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);
        } else {
            this.treeAdapter.appendChild(location.parent, element);
        }
    }

    _fosterParentText(chars) {
        const location = this._findFosterParentingLocation();

        if (location.beforeElement) {
            this.treeAdapter.insertTextBefore(location.parent, chars, location.beforeElement);
        } else {
            this.treeAdapter.insertText(location.parent, chars);
        }
    }

    //Special elements
    _isSpecialElement(element) {
        const tn = this.treeAdapter.getTagName(element);
        const ns = this.treeAdapter.getNamespaceURI(element);

        return HTML.SPECIAL_ELEMENTS[ns][tn];
    }
}

module.exports = Parser;

//Adoption agency algorithm
//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)
//------------------------------------------------------------------

//Steps 5-8 of the algorithm
function aaObtainFormattingElementEntry(p, token) {
    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);

    if (formattingElementEntry) {
        if (!p.openElements.contains(formattingElementEntry.element)) {
            p.activeFormattingElements.removeEntry(formattingElementEntry);
            formattingElementEntry = null;
        } else if (!p.openElements.hasInScope(token.tagName)) {
            formattingElementEntry = null;
        }
    } else {
        genericEndTagInBody(p, token);
    }

    return formattingElementEntry;
}

//Steps 9 and 10 of the algorithm
function aaObtainFurthestBlock(p, formattingElementEntry) {
    let furthestBlock = null;

    for (let i = p.openElements.stackTop; i >= 0; i--) {
        const element = p.openElements.items[i];

        if (element === formattingElementEntry.element) {
            break;
        }

        if (p._isSpecialElement(element)) {
            furthestBlock = element;
        }
    }

    if (!furthestBlock) {
        p.openElements.popUntilElementPopped(formattingElementEntry.element);
        p.activeFormattingElements.removeEntry(formattingElementEntry);
    }

    return furthestBlock;
}

//Step 13 of the algorithm
function aaInnerLoop(p, furthestBlock, formattingElement) {
    let lastElement = furthestBlock;
    let nextElement = p.openElements.getCommonAncestor(furthestBlock);

    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {
        //NOTE: store next element for the next loop iteration (it may be deleted from the stack by step 9.5)
        nextElement = p.openElements.getCommonAncestor(element);

        const elementEntry = p.activeFormattingElements.getElementEntry(element);
        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;
        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;

        if (shouldRemoveFromOpenElements) {
            if (counterOverflow) {
                p.activeFormattingElements.removeEntry(elementEntry);
            }

            p.openElements.remove(element);
        } else {
            element = aaRecreateElementFromEntry(p, elementEntry);

            if (lastElement === furthestBlock) {
                p.activeFormattingElements.bookmark = elementEntry;
            }

            p.treeAdapter.detachNode(lastElement);
            p.treeAdapter.appendChild(element, lastElement);
            lastElement = element;
        }
    }

    return lastElement;
}

//Step 13.7 of the algorithm
function aaRecreateElementFromEntry(p, elementEntry) {
    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);
    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);

    p.openElements.replace(elementEntry.element, newElement);
    elementEntry.element = newElement;

    return newElement;
}

//Step 14 of the algorithm
function aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {
    if (p._isElementCausesFosterParenting(commonAncestor)) {
        p._fosterParentElement(lastElement);
    } else {
        const tn = p.treeAdapter.getTagName(commonAncestor);
        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);

        if (tn === $.TEMPLATE && ns === NS.HTML) {
            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);
        }

        p.treeAdapter.appendChild(commonAncestor, lastElement);
    }
}

//Steps 15-19 of the algorithm
function aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {
    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);
    const token = formattingElementEntry.token;
    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);

    p._adoptNodes(furthestBlock, newElement);
    p.treeAdapter.appendChild(furthestBlock, newElement);

    p.activeFormattingElements.insertElementAfterBookmark(newElement, formattingElementEntry.token);
    p.activeFormattingElements.removeEntry(formattingElementEntry);

    p.openElements.remove(formattingElementEntry.element);
    p.openElements.insertAfter(furthestBlock, newElement);
}

//Algorithm entry point
function callAdoptionAgency(p, token) {
    let formattingElementEntry;

    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {
        formattingElementEntry = aaObtainFormattingElementEntry(p, token, formattingElementEntry);

        if (!formattingElementEntry) {
            break;
        }

        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);

        if (!furthestBlock) {
            break;
        }

        p.activeFormattingElements.bookmark = formattingElementEntry;

        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);
        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);

        p.treeAdapter.detachNode(lastElement);
        aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);
        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);
    }
}

//Generic token handlers
//------------------------------------------------------------------
function ignoreToken() {
    //NOTE: do nothing =)
}

function misplacedDoctype(p) {
    p._err(ERR.misplacedDoctype);
}

function appendComment(p, token) {
    p._appendCommentNode(token, p.openElements.currentTmplContent || p.openElements.current);
}

function appendCommentToRootHtmlElement(p, token) {
    p._appendCommentNode(token, p.openElements.items[0]);
}

function appendCommentToDocument(p, token) {
    p._appendCommentNode(token, p.document);
}

function insertCharacters(p, token) {
    p._insertCharacters(token);
}

function stopParsing(p) {
    p.stopped = true;
}

// The "initial" insertion mode
//------------------------------------------------------------------
function doctypeInInitialMode(p, token) {
    p._setDocumentType(token);

    const mode = token.forceQuirks ? HTML.DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);

    if (!doctype.isConforming(token)) {
        p._err(ERR.nonConformingDoctype);
    }

    p.treeAdapter.setDocumentMode(p.document, mode);

    p.insertionMode = BEFORE_HTML_MODE;
}

function tokenInInitialMode(p, token) {
    p._err(ERR.missingDoctype, { beforeToken: true });
    p.treeAdapter.setDocumentMode(p.document, HTML.DOCUMENT_MODE.QUIRKS);
    p.insertionMode = BEFORE_HTML_MODE;
    p._processToken(token);
}

// The "before html" insertion mode
//------------------------------------------------------------------
function startTagBeforeHtml(p, token) {
    if (token.tagName === $.HTML) {
        p._insertElement(token, NS.HTML);
        p.insertionMode = BEFORE_HEAD_MODE;
    } else {
        tokenBeforeHtml(p, token);
    }
}

function endTagBeforeHtml(p, token) {
    const tn = token.tagName;

    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {
        tokenBeforeHtml(p, token);
    }
}

function tokenBeforeHtml(p, token) {
    p._insertFakeRootElement();
    p.insertionMode = BEFORE_HEAD_MODE;
    p._processToken(token);
}

// The "before head" insertion mode
//------------------------------------------------------------------
function startTagBeforeHead(p, token) {
    const tn = token.tagName;

    if (tn === $.HTML) {
        startTagInBody(p, token);
    } else if (tn === $.HEAD) {
        p._insertElement(token, NS.HTML);
        p.headElement = p.openElements.current;
        p.insertionMode = IN_HEAD_MODE;
    } else {
        tokenBeforeHead(p, token);
    }
}

function endTagBeforeHead(p, token) {
    const tn = token.tagName;

    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {
        tokenBeforeHead(p, token);
    } else {
        p._err(ERR.endTagWithoutMatchingOpenElement);
    }
}

function tokenBeforeHead(p, token) {
    p._insertFakeElement($.HEAD);
    p.headElement = p.openElements.current;
    p.insertionMode = IN_HEAD_MODE;
    p._processToken(token);
}

// The "in head" insertion mode
//------------------------------------------------------------------
function startTagInHead(p, token) {
    const tn = token.tagName;

    if (tn === $.HTML) {
        startTagInBody(p, token);
    } else if (tn === $.BASE || tn === $.BASEFONT || tn === $.BGSOUND || tn === $.LINK || tn === $.META) {
        p._appendElement(token, NS.HTML);
        token.ackSelfClosing = true;
    } else if (tn === $.TITLE) {
        p._switchToTextParsing(token, Tokenizer.MODE.RCDATA);
    } else if (tn === $.NOSCRIPT) {
        if (p.options.scriptingEnabled) {
            p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);
        } else {
            p._insertElement(token, NS.HTML);
            p.insertionMode = IN_HEAD_NO_SCRIPT_MODE;
        }
    } else if (tn === $.NOFRAMES || tn === $.STYLE) {
        p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);
    } else if (tn === $.SCRIPT) {
        p._switchToTextParsing(token, Tokenizer.MODE.SCRIPT_DATA);
    } else if (tn === $.TEMPLATE) {
        p._insertTemplate(token, NS.HTML);
        p.activeFormattingElements.insertMarker();
        p.framesetOk = false;
        p.insertionMode = IN_TEMPLATE_MODE;
        p._pushTmplInsertionMode(IN_TEMPLATE_MODE);
    } else if (tn === $.HEAD) {
        p._err(ERR.misplacedStartTagForHeadElement);
    } else {
        tokenInHead(p, token);
    }
}

function endTagInHead(p, token) {
    const tn = token.tagName;

    if (tn === $.HEAD) {
        p.openElements.pop();
        p.insertionMode = AFTER_HEAD_MODE;
    } else if (tn === $.BODY || tn === $.BR || tn === $.HTML) {
        tokenInHead(p, token);
    } else if (tn === $.TEMPLATE) {
        if (p.openElements.tmplCount > 0) {
            p.openElements.generateImpliedEndTagsThoroughly();

            if (p.openElements.currentTagName !== $.TEMPLATE) {
                p._err(ERR.closingOfElementWithOpenChildElements);
            }

            p.openElements.popUntilTagNamePopped($.TEMPLATE);
            p.activeFormattingElements.clearToLastMarker();
            p._popTmplInsertionMode();
            p._resetInsertionMode();
        } else {
            p._err(ERR.endTagWithoutMatchingOpenElement);
        }
    } else {
        p._err(ERR.endTagWithoutMatchingOpenElement);
    }
}

function tokenInHead(p, token) {
    p.openElements.pop();
    p.insertionMode = AFTER_HEAD_MODE;
    p._processToken(token);
}

// The "in head no script" insertion mode
//------------------------------------------------------------------
function startTagInHeadNoScript(p, token) {
    const tn = token.tagName;

    if (tn === $.HTML) {
        startTagInBody(p, token);
    } else if (
        tn === $.BASEFONT ||
        tn === $.BGSOUND ||
        tn === $.HEAD ||
        tn === $.LINK ||
        tn === $.META ||
        tn === $.NOFRAMES ||
        tn === $.STYLE
    ) {
        startTagInHead(p, token);
    } else if (tn === $.NOSCRIPT) {
        p._err(ERR.nestedNoscriptInHead);
    } else {
        tokenInHeadNoScript(p, token);
    }
}

function endTagInHeadNoScript(p, token) {
    const tn = token.tagName;

    if (tn === $.NOSCRIPT) {
        p.openElements.pop();
        p.insertionMode = IN_HEAD_MODE;
    } else if (tn === $.BR) {
        tokenInHeadNoScript(p, token);
    } else {
        p._err(ERR.endTagWithoutMatchingOpenElement);
    }
}

function tokenInHeadNoScript(p, token) {
    const errCode =
        token.type === Tokenizer.EOF_TOKEN ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;

    p._err(errCode);
    p.openElements.pop();
    p.insertionMode = IN_HEAD_MODE;
    p._processToken(token);
}

// The "after head" insertion mode
//------------------------------------------------------------------
function startTagAfterHead(p, token) {
    const tn = token.tagName;

    if (tn === $.HTML) {
        startTagInBody(p, token);
    } else if (tn === $.BODY) {
        p._insertElement(token, NS.HTML);
        p.framesetOk = false;
        p.insertionMode = IN_BODY_MODE;
    } else if (tn === $.FRAMESET) {
        p._insertElement(token, NS.HTML);
        p.insertionMode = IN_FRAMESET_MODE;
    } else if (
        tn === $.BASE ||
        tn === $.BASEFONT ||
        tn === $.BGSOUND ||
        tn === $.LINK ||
        tn === $.META ||
        tn === $.NOFRAMES ||
        tn === $.SCRIPT ||
        tn === $.STYLE ||
        tn === $.TEMPLATE ||
        tn === $.TITLE
    ) {
        p._err(ERR.abandonedHeadElementChild);
        p.openElements.push(p.headElement);
        startTagInHead(p, token);
        p.openElements.remove(p.headElement);
    } else if (tn === $.HEAD) {
        p._err(ERR.misplacedStartTagForHeadElement);
    } else {
        tokenAfterHead(p, token);
    }
}

function endTagAfterHead(p, token) {
    const tn = token.tagName;

    if (tn === $.BODY || tn === $.HTML || tn === $.BR) {
        tokenAfterHead(p, token);
    } else if (tn === $.TEMPLATE) {
        endTagInHead(p, token);
    } else {
        p._err(ERR.endTagWithoutMatchingOpenElement);
    }
}

function tokenAfterHead(p, token) {
    p._insertFakeElement($.BODY);
    p.insertionMode = IN_BODY_MODE;
    p._processToken(token);
}

// The "in body" insertion mode
//------------------------------------------------------------------
function whitespaceCharacterInBody(p, token) {
    p._reconstructActiveFormattingElements();
    p._insertCharacters(token);
}

function characterInBody(p, token) {
    p._reconstructActiveFormattingElements();
    p._insertCharacters(token);
    p.framesetOk = false;
}

function htmlStartTagInBody(p, token) {
    if (p.openElements.tmplCount === 0) {
        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);
    }
}

function bodyStartTagInBody(p, token) {
    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();

    if (bodyElement && p.openElements.tmplCount === 0) {
        p.framesetOk = false;
        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);
    }
}

function framesetStartTagInBody(p, token) {
    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();

    if (p.framesetOk && bodyElement) {
        p.treeAdapter.detachNode(bodyElement);
        p.openElements.popAllUpToHtmlElement();
        p._insertElement(token, NS.HTML);
        p.insertionMode = IN_FRAMESET_MODE;
    }
}

function addressStartTagInBody(p, token) {
    if (p.openElements.hasInButtonScope($.P)) {
        p._closePElement();
    }

    p._insertElement(token, NS.HTML);
}

function numberedHeaderStartTagInBody(p, token) {
    if (p.openElements.hasInButtonScope($.P)) {
        p._closePElement();
    }

    const tn = p.openElements.currentTagName;

    if (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6) {
        p.openElements.pop();
    }

    p._insertElement(token, NS.HTML);
}

function preStartTagInBody(p, token) {
    if (p.openElements.hasInButtonScope($.P)) {
        p._closePElement();
    }

    p._insertElement(token, NS.HTML);
    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move
    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)
    p.skipNextNewLine = true;
    p.framesetOk = false;
}

function formStartTagInBody(p, token) {
    const inTemplate = p.openElements.tmplCount > 0;

    if (!p.formElement || inTemplate) {
        if (p.openElements.hasInButtonScope($.P)) {
            p._closePElement();
        }

        p._insertElement(token, NS.HTML);

        if (!inTemplate) {
            p.formElement = p.openElements.current;
        }
    }
}

function listItemStartTagInBody(p, token) {
    p.framesetOk = false;

    const tn = token.tagName;

    for (let i = p.openElements.stackTop; i >= 0; i--) {
        const element = p.openElements.items[i];
        const elementTn = p.treeAdapter.getTagName(element);
        let closeTn = null;

        if (tn === $.LI && elementTn === $.LI) {
            closeTn = $.LI;
        } else if ((tn === $.DD || tn === $.DT) && (elementTn === $.DD || elementTn === $.DT)) {
            closeTn = elementTn;
        }

        if (closeTn) {
            p.openElements.generateImpliedEndTagsWithExclusion(closeTn);
            p.openElements.popUntilTagNamePopped(closeTn);
            break;
        }

        if (elementTn !== $.ADDRESS && elementTn !== $.DIV && elementTn !== $.P && p._isSpecialElement(element)) {
            break;
        }
    }

    if (p.openElements.hasInButtonScope($.P)) {
        p._closePElement();
    }

    p._insertElement(token, NS.HTML);
}

function plaintextStartTagInBody(p, token) {
    if (p.openElements.hasInButtonScope($.P)) {
        p._closePElement();
    }

    p._insertElement(token, NS.HTML);
    p.tokenizer.state = Tokenizer.MODE.PLAINTEXT;
}

function buttonStartTagInBody(p, token) {
    if (p.openElements.hasInScope($.BUTTON)) {
        p.openElements.generateImpliedEndTags();
        p.openElements.popUntilTagNamePopped($.BUTTON);
    }

    p._reconstructActiveFormattingElements();
    p._insertElement(token, NS.HTML);
    p.framesetOk = false;
}

function aStartTagInBody(p, token) {
    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName($.A);

    if (activeElementEntry) {
        callAdoptionAgency(p, token);
        p.openElements.remove(activeElementEntry.element);
        p.activeFormattingElements.removeEntry(activeElementEntry);
    }

    p._reconstructActiveFormattingElements();
    p._insertElement(token, NS.HTML);
    p.activeFormattingElements.pushElement(p.openElements.current, token);
}

function bStartTagInBody(p, token) {
    p._reconstructActiveFormattingElements();
    p._insertElement(token, NS.HTML);
    p.activeFormattingElements.pushElement(p.openElements.current, token);
}

function nobrStartTagInBody(p, token) {
    p._reconstructActiveFormattingElements();

    if (p.openElements.hasInScope($.NOBR)) {
        callAdoptionAgency(p, token);
        p._reconstructActiveFormattingElements();
    }

    p._insertElement(token, NS.HTML);
    p.activeFormattingElements.pushElement(p.openElements.current, token);
}

function appletStartTagInBody(p, token) {
    p._reconstructActiveFormattingElements();
    p._insertElement(token, NS.HTML);
    p.activeFormattingElements.insertMarker();
    p.framesetOk = false;
}

function tableStartTagInBody(p, token) {
    if (
        p.treeAdapter.getDocumentMode(p.document) !== HTML.DOCUMENT_MODE.QUIRKS &&
        p.openElements.hasInButtonScope($.P)
    ) {
        p._closePElement();
    }

    p._insertElement(token, NS.HTML);
    p.framesetOk = false;
    p.insertionMode = IN_TABLE_MODE;
}

function areaStartTagInBody(p, token) {
    p._reconstructActiveFormattingElements();
    p._appendElement(token, NS.HTML);
    p.framesetOk = false;
    token.ackSelfClosing = true;
}

function inputStartTagInBody(p, token) {
    p._reconstructActiveFormattingElements();
    p._appendElement(token, NS.HTML);

    const inputType = Tokenizer.getTokenAttr(token, ATTRS.TYPE);

    if (!inputType || inputType.toLowerCase() !== HIDDEN_INPUT_TYPE) {
        p.framesetOk = false;
    }

    token.ackSelfClosing = true;
}

function paramStartTagInBody(p, token) {
    p._appendElement(token, NS.HTML);
    token.ackSelfClosing = true;
}

function hrStartTagInBody(p, token) {
    if (p.openElements.hasInButtonScope($.P)) {
        p._closePElement();
    }

    p._appendElement(token, NS.HTML);
    p.framesetOk = false;
    token.ackSelfClosing = true;
}

function imageStartTagInBody(p, token) {
    token.tagName = $.IMG;
    areaStartTagInBody(p, token);
}

function textareaStartTagInBody(p, token) {
    p._insertElement(token, NS.HTML);
    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move
    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)
    p.skipNextNewLine = true;
    p.tokenizer.state = Tokenizer.MODE.RCDATA;
    p.originalInsertionMode = p.insertionMode;
    p.framesetOk = false;
    p.insertionMode = TEXT_MODE;
}

function xmpStartTagInBody(p, token) {
    if (p.openElements.hasInButtonScope($.P)) {
        p._closePElement();
    }

    p._reconstructActiveFormattingElements();
    p.framesetOk = false;
    p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);
}

function iframeStartTagInBody(p, token) {
    p.framesetOk = false;
    p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);
}

//NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse
//<noembed> as a rawtext.
function noembedStartTagInBody(p, token) {
    p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);
}

function selectStartTagInBody(p, token) {
    p._reconstructActiveFormattingElements();
    p._insertElement(token, NS.HTML);
    p.framesetOk = false;

    if (
        p.insertionMode === IN_TABLE_MODE ||
        p.insertionMode === IN_CAPTION_MODE ||
        p.insertionMode === IN_TABLE_BODY_MODE ||
        p.insertionMode === IN_ROW_MODE ||
        p.insertionMode === IN_CELL_MODE
    ) {
        p.insertionMode = IN_SELECT_IN_TABLE_MODE;
    } else {
        p.insertionMode = IN_SELECT_MODE;
    }
}

function optgroupStartTagInBody(p, token) {
    if (p.openElements.currentTagName === $.OPTION) {
        p.openElements.pop();
    }

    p._reconstructActiveFormattingElements();
    p._insertElement(token, NS.HTML);
}

function rbStartTagInBody(p, token) {
    if (p.openElements.hasInScope($.RUBY)) {
        p.openElements.generateImpliedEndTags();
    }

    p._insertElement(token, NS.HTML);
}

function rtStartTagInBody(p, token) {
    if (p.openElements.hasInScope($.RUBY)) {
        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);
    }

    p._insertElement(token, NS.HTML);
}

function menuStartTagInBody(p, token) {
    if (p.openElements.hasInButtonScope($.P)) {
        p._closePElement();
    }

    p._insertElement(token, NS.HTML);
}

function mathStartTagInBody(p, token) {
    p._reconstructActiveFormattingElements();

    foreignContent.adjustTokenMathMLAttrs(token);
    foreignContent.adjustTokenXMLAttrs(token);

    if (token.selfClosing) {
        p._appendElement(token, NS.MATHML);
    } else {
        p._insertElement(token, NS.MATHML);
    }

    token.ackSelfClosing = true;
}

function svgStartTagInBody(p, token) {
    p._reconstructActiveFormattingElements();

    foreignContent.adjustTokenSVGAttrs(token);
    foreignContent.adjustTokenXMLAttrs(token);

    if (token.selfClosing) {
        p._appendElement(token, NS.SVG);
    } else {
        p._insertElement(token, NS.SVG);
    }

    token.ackSelfClosing = true;
}

function genericStartTagInBody(p, token) {
    p._reconstructActiveFormattingElements();
    p._insertElement(token, NS.HTML);
}

//OPTIMIZATION: Integer comparisons are low-cost, so we can use very fast tag name length filters here.
//It's faster than using dictionary.
function startTagInBody(p, token) {
    const tn = token.tagName;

    switch (tn.length) {
        case 1:
            if (tn === $.I || tn === $.S || tn === $.B || tn === $.U) {
                bStartTagInBody(p, token);
            } else if (tn === $.P) {
                addressStartTagInBody(p, token);
            } else if (tn === $.A) {
                aStartTagInBody(p, token);
            } else {
                genericStartTagInBody(p, token);
            }

            break;

        case 2:
            if (tn === $.DL || tn === $.OL || tn === $.UL) {
                addressStartTagInBody(p, token);
            } else if (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6) {
                numberedHeaderStartTagInBody(p, token);
            } else if (tn === $.LI || tn === $.DD || tn === $.DT) {
                listItemStartTagInBody(p, token);
            } else if (tn === $.EM || tn === $.TT) {
                bStartTagInBody(p, token);
            } else if (tn === $.BR) {
                areaStartTagInBody(p, token);
            } else if (tn === $.HR) {
                hrStartTagInBody(p, token);
            } else if (tn === $.RB) {
                rbStartTagInBody(p, token);
            } else if (tn === $.RT || tn === $.RP) {
                rtStartTagInBody(p, token);
            } else if (tn !== $.TH && tn !== $.TD && tn !== $.TR) {
                genericStartTagInBody(p, token);
            }

            break;

        case 3:
            if (tn === $.DIV || tn === $.DIR || tn === $.NAV) {
                addressStartTagInBody(p, token);
            } else if (tn === $.PRE) {
                preStartTagInBody(p, token);
            } else if (tn === $.BIG) {
                bStartTagInBody(p, token);
            } else if (tn === $.IMG || tn === $.WBR) {
                areaStartTagInBody(p, token);
            } else if (tn === $.XMP) {
                xmpStartTagInBody(p, token);
            } else if (tn === $.SVG) {
                svgStartTagInBody(p, token);
            } else if (tn === $.RTC) {
                rbStartTagInBody(p, token);
            } else if (tn !== $.COL) {
                genericStartTagInBody(p, token);
            }

            break;

        case 4:
            if (tn === $.HTML) {
                htmlStartTagInBody(p, token);
            } else if (tn === $.BASE || tn === $.LINK || tn === $.META) {
                startTagInHead(p, token);
            } else if (tn === $.BODY) {
                bodyStartTagInBody(p, token);
            } else if (tn === $.MAIN || tn === $.MENU) {
                addressStartTagInBody(p, token);
            } else if (tn === $.FORM) {
                formStartTagInBody(p, token);
            } else if (tn === $.CODE || tn === $.FONT) {
                bStartTagInBody(p, token);
            } else if (tn === $.NOBR) {
                nobrStartTagInBody(p, token);
            } else if (tn === $.AREA) {
                areaStartTagInBody(p, token);
            } else if (tn === $.MATH) {
                mathStartTagInBody(p, token);
            } else if (tn === $.MENU) {
                menuStartTagInBody(p, token);
            } else if (tn !== $.HEAD) {
                genericStartTagInBody(p, token);
            }

            break;

        case 5:
            if (tn === $.STYLE || tn === $.TITLE) {
                startTagInHead(p, token);
            } else if (tn === $.ASIDE) {
                addressStartTagInBody(p, token);
            } else if (tn === $.SMALL) {
                bStartTagInBody(p, token);
            } else if (tn === $.TABLE) {
                tableStartTagInBody(p, token);
            } else if (tn === $.EMBED) {
                areaStartTagInBody(p, token);
            } else if (tn === $.INPUT) {
                inputStartTagInBody(p, token);
            } else if (tn === $.PARAM || tn === $.TRACK) {
                paramStartTagInBody(p, token);
            } else if (tn === $.IMAGE) {
                imageStartTagInBody(p, token);
            } else if (tn !== $.FRAME && tn !== $.TBODY && tn !== $.TFOOT && tn !== $.THEAD) {
                genericStartTagInBody(p, token);
            }

            break;

        case 6:
            if (tn === $.SCRIPT) {
                startTagInHead(p, token);
            } else if (
                tn === $.CENTER ||
                tn === $.FIGURE ||
                tn === $.FOOTER ||
                tn === $.HEADER ||
                tn === $.HGROUP ||
                tn === $.DIALOG
            ) {
                addressStartTagInBody(p, token);
            } else if (tn === $.BUTTON) {
                buttonStartTagInBody(p, token);
            } else if (tn === $.STRIKE || tn === $.STRONG) {
                bStartTagInBody(p, token);
            } else if (tn === $.APPLET || tn === $.OBJECT) {
                appletStartTagInBody(p, token);
            } else if (tn === $.KEYGEN) {
                areaStartTagInBody(p, token);
            } else if (tn === $.SOURCE) {
                paramStartTagInBody(p, token);
            } else if (tn === $.IFRAME) {
                iframeStartTagInBody(p, token);
            } else if (tn === $.SELECT) {
                selectStartTagInBody(p, token);
            } else if (tn === $.OPTION) {
                optgroupStartTagInBody(p, token);
            } else {
                genericStartTagInBody(p, token);
            }

            break;

        case 7:
            if (tn === $.BGSOUND) {
                startTagInHead(p, token);
            } else if (
                tn === $.DETAILS ||
                tn === $.ADDRESS ||
                tn === $.ARTICLE ||
                tn === $.SECTION ||
                tn === $.SUMMARY
            ) {
                addressStartTagInBody(p, token);
            } else if (tn === $.LISTING) {
                preStartTagInBody(p, token);
            } else if (tn === $.MARQUEE) {
                appletStartTagInBody(p, token);
            } else if (tn === $.NOEMBED) {
                noembedStartTagInBody(p, token);
            } else if (tn !== $.CAPTION) {
                genericStartTagInBody(p, token);
            }

            break;

        case 8:
            if (tn === $.BASEFONT) {
                startTagInHead(p, token);
            } else if (tn === $.FRAMESET) {
                framesetStartTagInBody(p, token);
            } else if (tn === $.FIELDSET) {
                addressStartTagInBody(p, token);
            } else if (tn === $.TEXTAREA) {
                textareaStartTagInBody(p, token);
            } else if (tn === $.TEMPLATE) {
                startTagInHead(p, token);
            } else if (tn === $.NOSCRIPT) {
                if (p.options.scriptingEnabled) {
                    noembedStartTagInBody(p, token);
                } else {
                    genericStartTagInBody(p, token);
                }
            } else if (tn === $.OPTGROUP) {
                optgroupStartTagInBody(p, token);
            } else if (tn !== $.COLGROUP) {
                genericStartTagInBody(p, token);
            }

            break;

        case 9:
            if (tn === $.PLAINTEXT) {
                plaintextStartTagInBody(p, token);
            } else {
                genericStartTagInBody(p, token);
            }

            break;

        case 10:
            if (tn === $.BLOCKQUOTE || tn === $.FIGCAPTION) {
                addressStartTagInBody(p, token);
            } else {
                genericStartTagInBody(p, token);
            }

            break;

        default:
            genericStartTagInBody(p, token);
    }
}

function bodyEndTagInBody(p) {
    if (p.openElements.hasInScope($.BODY)) {
        p.insertionMode = AFTER_BODY_MODE;
    }
}

function htmlEndTagInBody(p, token) {
    if (p.openElements.hasInScope($.BODY)) {
        p.insertionMode = AFTER_BODY_MODE;
        p._processToken(token);
    }
}

function addressEndTagInBody(p, token) {
    const tn = token.tagName;

    if (p.openElements.hasInScope(tn)) {
        p.openElements.generateImpliedEndTags();
        p.openElements.popUntilTagNamePopped(tn);
    }
}

function formEndTagInBody(p) {
    const inTemplate = p.openElements.tmplCount > 0;
    const formElement = p.formElement;

    if (!inTemplate) {
        p.formElement = null;
    }

    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {
        p.openElements.generateImpliedEndTags();

        if (inTemplate) {
            p.openElements.popUntilTagNamePopped($.FORM);
        } else {
            p.openElements.remove(formElement);
        }
    }
}

function pEndTagInBody(p) {
    if (!p.openElements.hasInButtonScope($.P)) {
        p._insertFakeElement($.P);
    }

    p._closePElement();
}

function liEndTagInBody(p) {
    if (p.openElements.hasInListItemScope($.LI)) {
        p.openElements.generateImpliedEndTagsWithExclusion($.LI);
        p.openElements.popUntilTagNamePopped($.LI);
    }
}

function ddEndTagInBody(p, token) {
    const tn = token.tagName;

    if (p.openElements.hasInScope(tn)) {
        p.openElements.generateImpliedEndTagsWithExclusion(tn);
        p.openElements.popUntilTagNamePopped(tn);
    }
}

function numberedHeaderEndTagInBody(p) {
    if (p.openElements.hasNumberedHeaderInScope()) {
        p.openElements.generateImpliedEndTags();
        p.openElements.popUntilNumberedHeaderPopped();
    }
}

function appletEndTagInBody(p, token) {
    const tn = token.tagName;

    if (p.openElements.hasInScope(tn)) {
        p.openElements.generateImpliedEndTags();
        p.openElements.popUntilTagNamePopped(tn);
        p.activeFormattingElements.clearToLastMarker();
    }
}

function brEndTagInBody(p) {
    p._reconstructActiveFormattingElements();
    p._insertFakeElement($.BR);
    p.openElements.pop();
    p.framesetOk = false;
}

function genericEndTagInBody(p, token) {
    const tn = token.tagName;

    for (let i = p.openElements.stackTop; i > 0; i--) {
        const element = p.openElements.items[i];

        if (p.treeAdapter.getTagName(element) === tn) {
            p.openElements.generateImpliedEndTagsWithExclusion(tn);
            p.openElements.popUntilElementPopped(element);
            break;
        }

        if (p._isSpecialElement(element)) {
            break;
        }
    }
}

//OPTIMIZATION: Integer comparisons are low-cost, so we can use very fast tag name length filters here.
//It's faster than using dictionary.
function endTagInBody(p, token) {
    const tn = token.tagName;

    switch (tn.length) {
        case 1:
            if (tn === $.A || tn === $.B || tn === $.I || tn === $.S || tn === $.U) {
                callAdoptionAgency(p, token);
            } else if (tn === $.P) {
                pEndTagInBody(p, token);
            } else {
                genericEndTagInBody(p, token);
            }

            break;

        case 2:
            if (tn === $.DL || tn === $.UL || tn === $.OL) {
                addressEndTagInBody(p, token);
            } else if (tn === $.LI) {
                liEndTagInBody(p, token);
            } else if (tn === $.DD || tn === $.DT) {
                ddEndTagInBody(p, token);
            } else if (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6) {
                numberedHeaderEndTagInBody(p, token);
            } else if (tn === $.BR) {
                brEndTagInBody(p, token);
            } else if (tn === $.EM || tn === $.TT) {
                callAdoptionAgency(p, token);
            } else {
                genericEndTagInBody(p, token);
            }

            break;

        case 3:
            if (tn === $.BIG) {
                callAdoptionAgency(p, token);
            } else if (tn === $.DIR || tn === $.DIV || tn === $.NAV || tn === $.PRE) {
                addressEndTagInBody(p, token);
            } else {
                genericEndTagInBody(p, token);
            }

            break;

        case 4:
            if (tn === $.BODY) {
                bodyEndTagInBody(p, token);
            } else if (tn === $.HTML) {
                htmlEndTagInBody(p, token);
            } else if (tn === $.FORM) {
                formEndTagInBody(p, token);
            } else if (tn === $.CODE || tn === $.FONT || tn === $.NOBR) {
                callAdoptionAgency(p, token);
            } else if (tn === $.MAIN || tn === $.MENU) {
                addressEndTagInBody(p, token);
            } else {
                genericEndTagInBody(p, token);
            }

            break;

        case 5:
            if (tn === $.ASIDE) {
                addressEndTagInBody(p, token);
            } else if (tn === $.SMALL) {
                callAdoptionAgency(p, token);
            } else {
                genericEndTagInBody(p, token);
            }

            break;

        case 6:
            if (
                tn === $.CENTER ||
                tn === $.FIGURE ||
                tn === $.FOOTER ||
                tn === $.HEADER ||
                tn === $.HGROUP ||
                tn === $.DIALOG
            ) {
                addressEndTagInBody(p, token);
            } else if (tn === $.APPLET || tn === $.OBJECT) {
                appletEndTagInBody(p, token);
            } else if (tn === $.STRIKE || tn === $.STRONG) {
                callAdoptionAgency(p, token);
            } else {
                genericEndTagInBody(p, token);
            }

            break;

        case 7:
            if (
                tn === $.ADDRESS ||
                tn === $.ARTICLE ||
                tn === $.DETAILS ||
                tn === $.SECTION ||
                tn === $.SUMMARY ||
                tn === $.LISTING
            ) {
                addressEndTagInBody(p, token);
            } else if (tn === $.MARQUEE) {
                appletEndTagInBody(p, token);
            } else {
                genericEndTagInBody(p, token);
            }

            break;

        case 8:
            if (tn === $.FIELDSET) {
                addressEndTagInBody(p, token);
            } else if (tn === $.TEMPLATE) {
                endTagInHead(p, token);
            } else {
                genericEndTagInBody(p, token);
            }

            break;

        case 10:
            if (tn === $.BLOCKQUOTE || tn === $.FIGCAPTION) {
                addressEndTagInBody(p, token);
            } else {
                genericEndTagInBody(p, token);
            }

            break;

        default:
            genericEndTagInBody(p, token);
    }
}

function eofInBody(p, token) {
    if (p.tmplInsertionModeStackTop > -1) {
        eofInTemplate(p, token);
    } else {
        p.stopped = true;
    }
}

// The "text" insertion mode
//------------------------------------------------------------------
function endTagInText(p, token) {
    if (token.tagName === $.SCRIPT) {
        p.pendingScript = p.openElements.current;
    }

    p.openElements.pop();
    p.insertionMode = p.originalInsertionMode;
}

function eofInText(p, token) {
    p._err(ERR.eofInElementThatCanContainOnlyText);
    p.openElements.pop();
    p.insertionMode = p.originalInsertionMode;
    p._processToken(token);
}

// The "in table" insertion mode
//------------------------------------------------------------------
function characterInTable(p, token) {
    const curTn = p.openElements.currentTagName;

    if (curTn === $.TABLE || curTn === $.TBODY || curTn === $.TFOOT || curTn === $.THEAD || curTn === $.TR) {
        p.pendingCharacterTokens = [];
        p.hasNonWhitespacePendingCharacterToken = false;
        p.originalInsertionMode = p.insertionMode;
        p.insertionMode = IN_TABLE_TEXT_MODE;
        p._processToken(token);
    } else {
        tokenInTable(p, token);
    }
}

function captionStartTagInTable(p, token) {
    p.openElements.clearBackToTableContext();
    p.activeFormattingElements.insertMarker();
    p._insertElement(token, NS.HTML);
    p.insertionMode = IN_CAPTION_MODE;
}

function colgroupStartTagInTable(p, token) {
    p.openElements.clearBackToTableContext();
    p._insertElement(token, NS.HTML);
    p.insertionMode = IN_COLUMN_GROUP_MODE;
}

function colStartTagInTable(p, token) {
    p.openElements.clearBackToTableContext();
    p._insertFakeElement($.COLGROUP);
    p.insertionMode = IN_COLUMN_GROUP_MODE;
    p._processToken(token);
}

function tbodyStartTagInTable(p, token) {
    p.openElements.clearBackToTableContext();
    p._insertElement(token, NS.HTML);
    p.insertionMode = IN_TABLE_BODY_MODE;
}

function tdStartTagInTable(p, token) {
    p.openElements.clearBackToTableContext();
    p._insertFakeElement($.TBODY);
    p.insertionMode = IN_TABLE_BODY_MODE;
    p._processToken(token);
}

function tableStartTagInTable(p, token) {
    if (p.openElements.hasInTableScope($.TABLE)) {
        p.openElements.popUntilTagNamePopped($.TABLE);
        p._resetInsertionMode();
        p._processToken(token);
    }
}

function inputStartTagInTable(p, token) {
    const inputType = Tokenizer.getTokenAttr(token, ATTRS.TYPE);

    if (inputType && inputType.toLowerCase() === HIDDEN_INPUT_TYPE) {
        p._appendElement(token, NS.HTML);
    } else {
        tokenInTable(p, token);
    }

    token.ackSelfClosing = true;
}

function formStartTagInTable(p, token) {
    if (!p.formElement && p.openElements.tmplCount === 0) {
        p._insertElement(token, NS.HTML);
        p.formElement = p.openElements.current;
        p.openElements.pop();
    }
}

function startTagInTable(p, token) {
    const tn = token.tagName;

    switch (tn.length) {
        case 2:
            if (tn === $.TD || tn === $.TH || tn === $.TR) {
                tdStartTagInTable(p, token);
            } else {
                tokenInTable(p, token);
            }

            break;

        case 3:
            if (tn === $.COL) {
                colStartTagInTable(p, token);
            } else {
                tokenInTable(p, token);
            }

            break;

        case 4:
            if (tn === $.FORM) {
                formStartTagInTable(p, token);
            } else {
                tokenInTable(p, token);
            }

            break;

        case 5:
            if (tn === $.TABLE) {
                tableStartTagInTable(p, token);
            } else if (tn === $.STYLE) {
                startTagInHead(p, token);
            } else if (tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD) {
                tbodyStartTagInTable(p, token);
            } else if (tn === $.INPUT) {
                inputStartTagInTable(p, token);
            } else {
                tokenInTable(p, token);
            }

            break;

        case 6:
            if (tn === $.SCRIPT) {
                startTagInHead(p, token);
            } else {
                tokenInTable(p, token);
            }

            break;

        case 7:
            if (tn === $.CAPTION) {
                captionStartTagInTable(p, token);
            } else {
                tokenInTable(p, token);
            }

            break;

        case 8:
            if (tn === $.COLGROUP) {
                colgroupStartTagInTable(p, token);
            } else if (tn === $.TEMPLATE) {
                startTagInHead(p, token);
            } else {
                tokenInTable(p, token);
            }

            break;

        default:
            tokenInTable(p, token);
    }
}

function endTagInTable(p, token) {
    const tn = token.tagName;

    if (tn === $.TABLE) {
        if (p.openElements.hasInTableScope($.TABLE)) {
            p.openElements.popUntilTagNamePopped($.TABLE);
            p._resetInsertionMode();
        }
    } else if (tn === $.TEMPLATE) {
        endTagInHead(p, token);
    } else if (
        tn !== $.BODY &&
        tn !== $.CAPTION &&
        tn !== $.COL &&
        tn !== $.COLGROUP &&
        tn !== $.HTML &&
        tn !== $.TBODY &&
        tn !== $.TD &&
        tn !== $.TFOOT &&
        tn !== $.TH &&
        tn !== $.THEAD &&
        tn !== $.TR
    ) {
        tokenInTable(p, token);
    }
}

function tokenInTable(p, token) {
    const savedFosterParentingState = p.fosterParentingEnabled;

    p.fosterParentingEnabled = true;
    p._processTokenInBodyMode(token);
    p.fosterParentingEnabled = savedFosterParentingState;
}

// The "in table text" insertion mode
//------------------------------------------------------------------
function whitespaceCharacterInTableText(p, token) {
    p.pendingCharacterTokens.push(token);
}

function characterInTableText(p, token) {
    p.pendingCharacterTokens.push(token);
    p.hasNonWhitespacePendingCharacterToken = true;
}

function tokenInTableText(p, token) {
    let i = 0;

    if (p.hasNonWhitespacePendingCharacterToken) {
        for (; i < p.pendingCharacterTokens.length; i++) {
            tokenInTable(p, p.pendingCharacterTokens[i]);
        }
    } else {
        for (; i < p.pendingCharacterTokens.length; i++) {
            p._insertCharacters(p.pendingCharacterTokens[i]);
        }
    }

    p.insertionMode = p.originalInsertionMode;
    p._processToken(token);
}

// The "in caption" insertion mode
//------------------------------------------------------------------
function startTagInCaption(p, token) {
    const tn = token.tagName;

    if (
        tn === $.CAPTION ||
        tn === $.COL ||
        tn === $.COLGROUP ||
        tn === $.TBODY ||
        tn === $.TD ||
        tn === $.TFOOT ||
        tn === $.TH ||
        tn === $.THEAD ||
        tn === $.TR
    ) {
        if (p.openElements.hasInTableScope($.CAPTION)) {
            p.openElements.generateImpliedEndTags();
            p.openElements.popUntilTagNamePopped($.CAPTION);
            p.activeFormattingElements.clearToLastMarker();
            p.insertionMode = IN_TABLE_MODE;
            p._processToken(token);
        }
    } else {
        startTagInBody(p, token);
    }
}

function endTagInCaption(p, token) {
    const tn = token.tagName;

    if (tn === $.CAPTION || tn === $.TABLE) {
        if (p.openElements.hasInTableScope($.CAPTION)) {
            p.openElements.generateImpliedEndTags();
            p.openElements.popUntilTagNamePopped($.CAPTION);
            p.activeFormattingElements.clearToLastMarker();
            p.insertionMode = IN_TABLE_MODE;

            if (tn === $.TABLE) {
                p._processToken(token);
            }
        }
    } else if (
        tn !== $.BODY &&
        tn !== $.COL &&
        tn !== $.COLGROUP &&
        tn !== $.HTML &&
        tn !== $.TBODY &&
        tn !== $.TD &&
        tn !== $.TFOOT &&
        tn !== $.TH &&
        tn !== $.THEAD &&
        tn !== $.TR
    ) {
        endTagInBody(p, token);
    }
}

// The "in column group" insertion mode
//------------------------------------------------------------------
function startTagInColumnGroup(p, token) {
    const tn = token.tagName;

    if (tn === $.HTML) {
        startTagInBody(p, token);
    } else if (tn === $.COL) {
        p._appendElement(token, NS.HTML);
        token.ackSelfClosing = true;
    } else if (tn === $.TEMPLATE) {
        startTagInHead(p, token);
    } else {
        tokenInColumnGroup(p, token);
    }
}

function endTagInColumnGroup(p, token) {
    const tn = token.tagName;

    if (tn === $.COLGROUP) {
        if (p.openElements.currentTagName === $.COLGROUP) {
            p.openElements.pop();
            p.insertionMode = IN_TABLE_MODE;
        }
    } else if (tn === $.TEMPLATE) {
        endTagInHead(p, token);
    } else if (tn !== $.COL) {
        tokenInColumnGroup(p, token);
    }
}

function tokenInColumnGroup(p, token) {
    if (p.openElements.currentTagName === $.COLGROUP) {
        p.openElements.pop();
        p.insertionMode = IN_TABLE_MODE;
        p._processToken(token);
    }
}

// The "in table body" insertion mode
//------------------------------------------------------------------
function startTagInTableBody(p, token) {
    const tn = token.tagName;

    if (tn === $.TR) {
        p.openElements.clearBackToTableBodyContext();
        p._insertElement(token, NS.HTML);
        p.insertionMode = IN_ROW_MODE;
    } else if (tn === $.TH || tn === $.TD) {
        p.openElements.clearBackToTableBodyContext();
        p._insertFakeElement($.TR);
        p.insertionMode = IN_ROW_MODE;
        p._processToken(token);
    } else if (
        tn === $.CAPTION ||
        tn === $.COL ||
        tn === $.COLGROUP ||
        tn === $.TBODY ||
        tn === $.TFOOT ||
        tn === $.THEAD
    ) {
        if (p.openElements.hasTableBodyContextInTableScope()) {
            p.openElements.clearBackToTableBodyContext();
            p.openElements.pop();
            p.insertionMode = IN_TABLE_MODE;
            p._processToken(token);
        }
    } else {
        startTagInTable(p, token);
    }
}

function endTagInTableBody(p, token) {
    const tn = token.tagName;

    if (tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD) {
        if (p.openElements.hasInTableScope(tn)) {
            p.openElements.clearBackToTableBodyContext();
            p.openElements.pop();
            p.insertionMode = IN_TABLE_MODE;
        }
    } else if (tn === $.TABLE) {
        if (p.openElements.hasTableBodyContextInTableScope()) {
            p.openElements.clearBackToTableBodyContext();
            p.openElements.pop();
            p.insertionMode = IN_TABLE_MODE;
            p._processToken(token);
        }
    } else if (
        (tn !== $.BODY && tn !== $.CAPTION && tn !== $.COL && tn !== $.COLGROUP) ||
        (tn !== $.HTML && tn !== $.TD && tn !== $.TH && tn !== $.TR)
    ) {
        endTagInTable(p, token);
    }
}

// The "in row" insertion mode
//------------------------------------------------------------------
function startTagInRow(p, token) {
    const tn = token.tagName;

    if (tn === $.TH || tn === $.TD) {
        p.openElements.clearBackToTableRowContext();
        p._insertElement(token, NS.HTML);
        p.insertionMode = IN_CELL_MODE;
        p.activeFormattingElements.insertMarker();
    } else if (
        tn === $.CAPTION ||
        tn === $.COL ||
        tn === $.COLGROUP ||
        tn === $.TBODY ||
        tn === $.TFOOT ||
        tn === $.THEAD ||
        tn === $.TR
    ) {
        if (p.openElements.hasInTableScope($.TR)) {
            p.openElements.clearBackToTableRowContext();
            p.openElements.pop();
            p.insertionMode = IN_TABLE_BODY_MODE;
            p._processToken(token);
        }
    } else {
        startTagInTable(p, token);
    }
}

function endTagInRow(p, token) {
    const tn = token.tagName;

    if (tn === $.TR) {
        if (p.openElements.hasInTableScope($.TR)) {
            p.openElements.clearBackToTableRowContext();
            p.openElements.pop();
            p.insertionMode = IN_TABLE_BODY_MODE;
        }
    } else if (tn === $.TABLE) {
        if (p.openElements.hasInTableScope($.TR)) {
            p.openElements.clearBackToTableRowContext();
            p.openElements.pop();
            p.insertionMode = IN_TABLE_BODY_MODE;
            p._processToken(token);
        }
    } else if (tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD) {
        if (p.openElements.hasInTableScope(tn) || p.openElements.hasInTableScope($.TR)) {
            p.openElements.clearBackToTableRowContext();
            p.openElements.pop();
            p.insertionMode = IN_TABLE_BODY_MODE;
            p._processToken(token);
        }
    } else if (
        (tn !== $.BODY && tn !== $.CAPTION && tn !== $.COL && tn !== $.COLGROUP) ||
        (tn !== $.HTML && tn !== $.TD && tn !== $.TH)
    ) {
        endTagInTable(p, token);
    }
}

// The "in cell" insertion mode
//------------------------------------------------------------------
function startTagInCell(p, token) {
    const tn = token.tagName;

    if (
        tn === $.CAPTION ||
        tn === $.COL ||
        tn === $.COLGROUP ||
        tn === $.TBODY ||
        tn === $.TD ||
        tn === $.TFOOT ||
        tn === $.TH ||
        tn === $.THEAD ||
        tn === $.TR
    ) {
        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {
            p._closeTableCell();
            p._processToken(token);
        }
    } else {
        startTagInBody(p, token);
    }
}

function endTagInCell(p, token) {
    const tn = token.tagName;

    if (tn === $.TD || tn === $.TH) {
        if (p.openElements.hasInTableScope(tn)) {
            p.openElements.generateImpliedEndTags();
            p.openElements.popUntilTagNamePopped(tn);
            p.activeFormattingElements.clearToLastMarker();
            p.insertionMode = IN_ROW_MODE;
        }
    } else if (tn === $.TABLE || tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD || tn === $.TR) {
        if (p.openElements.hasInTableScope(tn)) {
            p._closeTableCell();
            p._processToken(token);
        }
    } else if (tn !== $.BODY && tn !== $.CAPTION && tn !== $.COL && tn !== $.COLGROUP && tn !== $.HTML) {
        endTagInBody(p, token);
    }
}

// The "in select" insertion mode
//------------------------------------------------------------------
function startTagInSelect(p, token) {
    const tn = token.tagName;

    if (tn === $.HTML) {
        startTagInBody(p, token);
    } else if (tn === $.OPTION) {
        if (p.openElements.currentTagName === $.OPTION) {
            p.openElements.pop();
        }

        p._insertElement(token, NS.HTML);
    } else if (tn === $.OPTGROUP) {
        if (p.openElements.currentTagName === $.OPTION) {
            p.openElements.pop();
        }

        if (p.openElements.currentTagName === $.OPTGROUP) {
            p.openElements.pop();
        }

        p._insertElement(token, NS.HTML);
    } else if (tn === $.INPUT || tn === $.KEYGEN || tn === $.TEXTAREA || tn === $.SELECT) {
        if (p.openElements.hasInSelectScope($.SELECT)) {
            p.openElements.popUntilTagNamePopped($.SELECT);
            p._resetInsertionMode();

            if (tn !== $.SELECT) {
                p._processToken(token);
            }
        }
    } else if (tn === $.SCRIPT || tn === $.TEMPLATE) {
        startTagInHead(p, token);
    }
}

function endTagInSelect(p, token) {
    const tn = token.tagName;

    if (tn === $.OPTGROUP) {
        const prevOpenElement = p.openElements.items[p.openElements.stackTop - 1];
        const prevOpenElementTn = prevOpenElement && p.treeAdapter.getTagName(prevOpenElement);

        if (p.openElements.currentTagName === $.OPTION && prevOpenElementTn === $.OPTGROUP) {
            p.openElements.pop();
        }

        if (p.openElements.currentTagName === $.OPTGROUP) {
            p.openElements.pop();
        }
    } else if (tn === $.OPTION) {
        if (p.openElements.currentTagName === $.OPTION) {
            p.openElements.pop();
        }
    } else if (tn === $.SELECT && p.openElements.hasInSelectScope($.SELECT)) {
        p.openElements.popUntilTagNamePopped($.SELECT);
        p._resetInsertionMode();
    } else if (tn === $.TEMPLATE) {
        endTagInHead(p, token);
    }
}

//12.2.5.4.17 The "in select in table" insertion mode
//------------------------------------------------------------------
function startTagInSelectInTable(p, token) {
    const tn = token.tagName;

    if (
        tn === $.CAPTION ||
        tn === $.TABLE ||
        tn === $.TBODY ||
        tn === $.TFOOT ||
        tn === $.THEAD ||
        tn === $.TR ||
        tn === $.TD ||
        tn === $.TH
    ) {
        p.openElements.popUntilTagNamePopped($.SELECT);
        p._resetInsertionMode();
        p._processToken(token);
    } else {
        startTagInSelect(p, token);
    }
}

function endTagInSelectInTable(p, token) {
    const tn = token.tagName;

    if (
        tn === $.CAPTION ||
        tn === $.TABLE ||
        tn === $.TBODY ||
        tn === $.TFOOT ||
        tn === $.THEAD ||
        tn === $.TR ||
        tn === $.TD ||
        tn === $.TH
    ) {
        if (p.openElements.hasInTableScope(tn)) {
            p.openElements.popUntilTagNamePopped($.SELECT);
            p._resetInsertionMode();
            p._processToken(token);
        }
    } else {
        endTagInSelect(p, token);
    }
}

// The "in template" insertion mode
//------------------------------------------------------------------
function startTagInTemplate(p, token) {
    const tn = token.tagName;

    if (
        tn === $.BASE ||
        tn === $.BASEFONT ||
        tn === $.BGSOUND ||
        tn === $.LINK ||
        tn === $.META ||
        tn === $.NOFRAMES ||
        tn === $.SCRIPT ||
        tn === $.STYLE ||
        tn === $.TEMPLATE ||
        tn === $.TITLE
    ) {
        startTagInHead(p, token);
    } else {
        const newInsertionMode = TEMPLATE_INSERTION_MODE_SWITCH_MAP[tn] || IN_BODY_MODE;

        p._popTmplInsertionMode();
        p._pushTmplInsertionMode(newInsertionMode);
        p.insertionMode = newInsertionMode;
        p._processToken(token);
    }
}

function endTagInTemplate(p, token) {
    if (token.tagName === $.TEMPLATE) {
        endTagInHead(p, token);
    }
}

function eofInTemplate(p, token) {
    if (p.openElements.tmplCount > 0) {
        p.openElements.popUntilTagNamePopped($.TEMPLATE);
        p.activeFormattingElements.clearToLastMarker();
        p._popTmplInsertionMode();
        p._resetInsertionMode();
        p._processToken(token);
    } else {
        p.stopped = true;
    }
}

// The "after body" insertion mode
//------------------------------------------------------------------
function startTagAfterBody(p, token) {
    if (token.tagName === $.HTML) {
        startTagInBody(p, token);
    } else {
        tokenAfterBody(p, token);
    }
}

function endTagAfterBody(p, token) {
    if (token.tagName === $.HTML) {
        if (!p.fragmentContext) {
            p.insertionMode = AFTER_AFTER_BODY_MODE;
        }
    } else {
        tokenAfterBody(p, token);
    }
}

function tokenAfterBody(p, token) {
    p.insertionMode = IN_BODY_MODE;
    p._processToken(token);
}

// The "in frameset" insertion mode
//------------------------------------------------------------------
function startTagInFrameset(p, token) {
    const tn = token.tagName;

    if (tn === $.HTML) {
        startTagInBody(p, token);
    } else if (tn === $.FRAMESET) {
        p._insertElement(token, NS.HTML);
    } else if (tn === $.FRAME) {
        p._appendElement(token, NS.HTML);
        token.ackSelfClosing = true;
    } else if (tn === $.NOFRAMES) {
        startTagInHead(p, token);
    }
}

function endTagInFrameset(p, token) {
    if (token.tagName === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {
        p.openElements.pop();

        if (!p.fragmentContext && p.openElements.currentTagName !== $.FRAMESET) {
            p.insertionMode = AFTER_FRAMESET_MODE;
        }
    }
}

// The "after frameset" insertion mode
//------------------------------------------------------------------
function startTagAfterFrameset(p, token) {
    const tn = token.tagName;

    if (tn === $.HTML) {
        startTagInBody(p, token);
    } else if (tn === $.NOFRAMES) {
        startTagInHead(p, token);
    }
}

function endTagAfterFrameset(p, token) {
    if (token.tagName === $.HTML) {
        p.insertionMode = AFTER_AFTER_FRAMESET_MODE;
    }
}

// The "after after body" insertion mode
//------------------------------------------------------------------
function startTagAfterAfterBody(p, token) {
    if (token.tagName === $.HTML) {
        startTagInBody(p, token);
    } else {
        tokenAfterAfterBody(p, token);
    }
}

function tokenAfterAfterBody(p, token) {
    p.insertionMode = IN_BODY_MODE;
    p._processToken(token);
}

// The "after after frameset" insertion mode
//------------------------------------------------------------------
function startTagAfterAfterFrameset(p, token) {
    const tn = token.tagName;

    if (tn === $.HTML) {
        startTagInBody(p, token);
    } else if (tn === $.NOFRAMES) {
        startTagInHead(p, token);
    }
}

// The rules for parsing tokens in foreign content
//------------------------------------------------------------------
function nullCharacterInForeignContent(p, token) {
    token.chars = unicode.REPLACEMENT_CHARACTER;
    p._insertCharacters(token);
}

function characterInForeignContent(p, token) {
    p._insertCharacters(token);
    p.framesetOk = false;
}

function startTagInForeignContent(p, token) {
    if (foreignContent.causesExit(token) && !p.fragmentContext) {
        while (
            p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&
            !p._isIntegrationPoint(p.openElements.current)
        ) {
            p.openElements.pop();
        }

        p._processToken(token);
    } else {
        const current = p._getAdjustedCurrentElement();
        const currentNs = p.treeAdapter.getNamespaceURI(current);

        if (currentNs === NS.MATHML) {
            foreignContent.adjustTokenMathMLAttrs(token);
        } else if (currentNs === NS.SVG) {
            foreignContent.adjustTokenSVGTagName(token);
            foreignContent.adjustTokenSVGAttrs(token);
        }

        foreignContent.adjustTokenXMLAttrs(token);

        if (token.selfClosing) {
            p._appendElement(token, currentNs);
        } else {
            p._insertElement(token, currentNs);
        }

        token.ackSelfClosing = true;
    }
}

function endTagInForeignContent(p, token) {
    for (let i = p.openElements.stackTop; i > 0; i--) {
        const element = p.openElements.items[i];

        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {
            p._processToken(token);
            break;
        }

        if (p.treeAdapter.getTagName(element).toLowerCase() === token.tagName) {
            p.openElements.popUntilElementPopped(element);
            break;
        }
    }
}


/***/ }),

/***/ 49177:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


const HTML = __webpack_require__(1199);

//Aliases
const $ = HTML.TAG_NAMES;
const NS = HTML.NAMESPACES;

//Element utils

//OPTIMIZATION: Integer comparisons are low-cost, so we can use very fast tag name length filters here.
//It's faster than using dictionary.
function isImpliedEndTagRequired(tn) {
    switch (tn.length) {
        case 1:
            return tn === $.P;

        case 2:
            return tn === $.RB || tn === $.RP || tn === $.RT || tn === $.DD || tn === $.DT || tn === $.LI;

        case 3:
            return tn === $.RTC;

        case 6:
            return tn === $.OPTION;

        case 8:
            return tn === $.OPTGROUP;
    }

    return false;
}

function isImpliedEndTagRequiredThoroughly(tn) {
    switch (tn.length) {
        case 1:
            return tn === $.P;

        case 2:
            return (
                tn === $.RB ||
                tn === $.RP ||
                tn === $.RT ||
                tn === $.DD ||
                tn === $.DT ||
                tn === $.LI ||
                tn === $.TD ||
                tn === $.TH ||
                tn === $.TR
            );

        case 3:
            return tn === $.RTC;

        case 5:
            return tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD;

        case 6:
            return tn === $.OPTION;

        case 7:
            return tn === $.CAPTION;

        case 8:
            return tn === $.OPTGROUP || tn === $.COLGROUP;
    }

    return false;
}

function isScopingElement(tn, ns) {
    switch (tn.length) {
        case 2:
            if (tn === $.TD || tn === $.TH) {
                return ns === NS.HTML;
            } else if (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS) {
                return ns === NS.MATHML;
            }

            break;

        case 4:
            if (tn === $.HTML) {
                return ns === NS.HTML;
            } else if (tn === $.DESC) {
                return ns === NS.SVG;
            }

            break;

        case 5:
            if (tn === $.TABLE) {
                return ns === NS.HTML;
            } else if (tn === $.MTEXT) {
                return ns === NS.MATHML;
            } else if (tn === $.TITLE) {
                return ns === NS.SVG;
            }

            break;

        case 6:
            return (tn === $.APPLET || tn === $.OBJECT) && ns === NS.HTML;

        case 7:
            return (tn === $.CAPTION || tn === $.MARQUEE) && ns === NS.HTML;

        case 8:
            return tn === $.TEMPLATE && ns === NS.HTML;

        case 13:
            return tn === $.FOREIGN_OBJECT && ns === NS.SVG;

        case 14:
            return tn === $.ANNOTATION_XML && ns === NS.MATHML;
    }

    return false;
}

//Stack of open elements
class OpenElementStack {
    constructor(document, treeAdapter) {
        this.stackTop = -1;
        this.items = [];
        this.current = document;
        this.currentTagName = null;
        this.currentTmplContent = null;
        this.tmplCount = 0;
        this.treeAdapter = treeAdapter;
    }

    //Index of element
    _indexOf(element) {
        let idx = -1;

        for (let i = this.stackTop; i >= 0; i--) {
            if (this.items[i] === element) {
                idx = i;
                break;
            }
        }
        return idx;
    }

    //Update current element
    _isInTemplate() {
        return this.currentTagName === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;
    }

    _updateCurrentElement() {
        this.current = this.items[this.stackTop];
        this.currentTagName = this.current && this.treeAdapter.getTagName(this.current);

        this.currentTmplContent = this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : null;
    }

    //Mutations
    push(element) {
        this.items[++this.stackTop] = element;
        this._updateCurrentElement();

        if (this._isInTemplate()) {
            this.tmplCount++;
        }
    }

    pop() {
        this.stackTop--;

        if (this.tmplCount > 0 && this._isInTemplate()) {
            this.tmplCount--;
        }

        this._updateCurrentElement();
    }

    replace(oldElement, newElement) {
        const idx = this._indexOf(oldElement);

        this.items[idx] = newElement;

        if (idx === this.stackTop) {
            this._updateCurrentElement();
        }
    }

    insertAfter(referenceElement, newElement) {
        const insertionIdx = this._indexOf(referenceElement) + 1;

        this.items.splice(insertionIdx, 0, newElement);

        if (insertionIdx === ++this.stackTop) {
            this._updateCurrentElement();
        }
    }

    popUntilTagNamePopped(tagName) {
        while (this.stackTop > -1) {
            const tn = this.currentTagName;
            const ns = this.treeAdapter.getNamespaceURI(this.current);

            this.pop();

            if (tn === tagName && ns === NS.HTML) {
                break;
            }
        }
    }

    popUntilElementPopped(element) {
        while (this.stackTop > -1) {
            const poppedElement = this.current;

            this.pop();

            if (poppedElement === element) {
                break;
            }
        }
    }

    popUntilNumberedHeaderPopped() {
        while (this.stackTop > -1) {
            const tn = this.currentTagName;
            const ns = this.treeAdapter.getNamespaceURI(this.current);

            this.pop();

            if (
                tn === $.H1 ||
                tn === $.H2 ||
                tn === $.H3 ||
                tn === $.H4 ||
                tn === $.H5 ||
                (tn === $.H6 && ns === NS.HTML)
            ) {
                break;
            }
        }
    }

    popUntilTableCellPopped() {
        while (this.stackTop > -1) {
            const tn = this.currentTagName;
            const ns = this.treeAdapter.getNamespaceURI(this.current);

            this.pop();

            if (tn === $.TD || (tn === $.TH && ns === NS.HTML)) {
                break;
            }
        }
    }

    popAllUpToHtmlElement() {
        //NOTE: here we assume that root <html> element is always first in the open element stack, so
        //we perform this fast stack clean up.
        this.stackTop = 0;
        this._updateCurrentElement();
    }

    clearBackToTableContext() {
        while (
            (this.currentTagName !== $.TABLE && this.currentTagName !== $.TEMPLATE && this.currentTagName !== $.HTML) ||
            this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML
        ) {
            this.pop();
        }
    }

    clearBackToTableBodyContext() {
        while (
            (this.currentTagName !== $.TBODY &&
                this.currentTagName !== $.TFOOT &&
                this.currentTagName !== $.THEAD &&
                this.currentTagName !== $.TEMPLATE &&
                this.currentTagName !== $.HTML) ||
            this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML
        ) {
            this.pop();
        }
    }

    clearBackToTableRowContext() {
        while (
            (this.currentTagName !== $.TR && this.currentTagName !== $.TEMPLATE && this.currentTagName !== $.HTML) ||
            this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML
        ) {
            this.pop();
        }
    }

    remove(element) {
        for (let i = this.stackTop; i >= 0; i--) {
            if (this.items[i] === element) {
                this.items.splice(i, 1);
                this.stackTop--;
                this._updateCurrentElement();
                break;
            }
        }
    }

    //Search
    tryPeekProperlyNestedBodyElement() {
        //Properly nested <body> element (should be second element in stack).
        const element = this.items[1];

        return element && this.treeAdapter.getTagName(element) === $.BODY ? element : null;
    }

    contains(element) {
        return this._indexOf(element) > -1;
    }

    getCommonAncestor(element) {
        let elementIdx = this._indexOf(element);

        return --elementIdx >= 0 ? this.items[elementIdx] : null;
    }

    isRootHtmlElementCurrent() {
        return this.stackTop === 0 && this.currentTagName === $.HTML;
    }

    //Element in scope
    hasInScope(tagName) {
        for (let i = this.stackTop; i >= 0; i--) {
            const tn = this.treeAdapter.getTagName(this.items[i]);
            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);

            if (tn === tagName && ns === NS.HTML) {
                return true;
            }

            if (isScopingElement(tn, ns)) {
                return false;
            }
        }

        return true;
    }

    hasNumberedHeaderInScope() {
        for (let i = this.stackTop; i >= 0; i--) {
            const tn = this.treeAdapter.getTagName(this.items[i]);
            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);

            if (
                (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6) &&
                ns === NS.HTML
            ) {
                return true;
            }

            if (isScopingElement(tn, ns)) {
                return false;
            }
        }

        return true;
    }

    hasInListItemScope(tagName) {
        for (let i = this.stackTop; i >= 0; i--) {
            const tn = this.treeAdapter.getTagName(this.items[i]);
            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);

            if (tn === tagName && ns === NS.HTML) {
                return true;
            }

            if (((tn === $.UL || tn === $.OL) && ns === NS.HTML) || isScopingElement(tn, ns)) {
                return false;
            }
        }

        return true;
    }

    hasInButtonScope(tagName) {
        for (let i = this.stackTop; i >= 0; i--) {
            const tn = this.treeAdapter.getTagName(this.items[i]);
            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);

            if (tn === tagName && ns === NS.HTML) {
                return true;
            }

            if ((tn === $.BUTTON && ns === NS.HTML) || isScopingElement(tn, ns)) {
                return false;
            }
        }

        return true;
    }

    hasInTableScope(tagName) {
        for (let i = this.stackTop; i >= 0; i--) {
            const tn = this.treeAdapter.getTagName(this.items[i]);
            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);

            if (ns !== NS.HTML) {
                continue;
            }

            if (tn === tagName) {
                return true;
            }

            if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {
                return false;
            }
        }

        return true;
    }

    hasTableBodyContextInTableScope() {
        for (let i = this.stackTop; i >= 0; i--) {
            const tn = this.treeAdapter.getTagName(this.items[i]);
            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);

            if (ns !== NS.HTML) {
                continue;
            }

            if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {
                return true;
            }

            if (tn === $.TABLE || tn === $.HTML) {
                return false;
            }
        }

        return true;
    }

    hasInSelectScope(tagName) {
        for (let i = this.stackTop; i >= 0; i--) {
            const tn = this.treeAdapter.getTagName(this.items[i]);
            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);

            if (ns !== NS.HTML) {
                continue;
            }

            if (tn === tagName) {
                return true;
            }

            if (tn !== $.OPTION && tn !== $.OPTGROUP) {
                return false;
            }
        }

        return true;
    }

    //Implied end tags
    generateImpliedEndTags() {
        while (isImpliedEndTagRequired(this.currentTagName)) {
            this.pop();
        }
    }

    generateImpliedEndTagsThoroughly() {
        while (isImpliedEndTagRequiredThoroughly(this.currentTagName)) {
            this.pop();
        }
    }

    generateImpliedEndTagsWithExclusion(exclusionTagName) {
        while (isImpliedEndTagRequired(this.currentTagName) && this.currentTagName !== exclusionTagName) {
            this.pop();
        }
    }
}

module.exports = OpenElementStack;


/***/ }),

/***/ 32494:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


const Preprocessor = __webpack_require__(98601);
const unicode = __webpack_require__(15695);
const neTree = __webpack_require__(56667);
const ERR = __webpack_require__(58991);

//Aliases
const $ = unicode.CODE_POINTS;
const $$ = unicode.CODE_POINT_SEQUENCES;

//C1 Unicode control character reference replacements
const C1_CONTROLS_REFERENCE_REPLACEMENTS = {
    0x80: 0x20ac,
    0x82: 0x201a,
    0x83: 0x0192,
    0x84: 0x201e,
    0x85: 0x2026,
    0x86: 0x2020,
    0x87: 0x2021,
    0x88: 0x02c6,
    0x89: 0x2030,
    0x8a: 0x0160,
    0x8b: 0x2039,
    0x8c: 0x0152,
    0x8e: 0x017d,
    0x91: 0x2018,
    0x92: 0x2019,
    0x93: 0x201c,
    0x94: 0x201d,
    0x95: 0x2022,
    0x96: 0x2013,
    0x97: 0x2014,
    0x98: 0x02dc,
    0x99: 0x2122,
    0x9a: 0x0161,
    0x9b: 0x203a,
    0x9c: 0x0153,
    0x9e: 0x017e,
    0x9f: 0x0178
};

// Named entity tree flags
const HAS_DATA_FLAG = 1 << 0;
const DATA_DUPLET_FLAG = 1 << 1;
const HAS_BRANCHES_FLAG = 1 << 2;
const MAX_BRANCH_MARKER_VALUE = HAS_DATA_FLAG | DATA_DUPLET_FLAG | HAS_BRANCHES_FLAG;

//States
const DATA_STATE = 'DATA_STATE';
const RCDATA_STATE = 'RCDATA_STATE';
const RAWTEXT_STATE = 'RAWTEXT_STATE';
const SCRIPT_DATA_STATE = 'SCRIPT_DATA_STATE';
const PLAINTEXT_STATE = 'PLAINTEXT_STATE';
const TAG_OPEN_STATE = 'TAG_OPEN_STATE';
const END_TAG_OPEN_STATE = 'END_TAG_OPEN_STATE';
const TAG_NAME_STATE = 'TAG_NAME_STATE';
const RCDATA_LESS_THAN_SIGN_STATE = 'RCDATA_LESS_THAN_SIGN_STATE';
const RCDATA_END_TAG_OPEN_STATE = 'RCDATA_END_TAG_OPEN_STATE';
const RCDATA_END_TAG_NAME_STATE = 'RCDATA_END_TAG_NAME_STATE';
const RAWTEXT_LESS_THAN_SIGN_STATE = 'RAWTEXT_LESS_THAN_SIGN_STATE';
const RAWTEXT_END_TAG_OPEN_STATE = 'RAWTEXT_END_TAG_OPEN_STATE';
const RAWTEXT_END_TAG_NAME_STATE = 'RAWTEXT_END_TAG_NAME_STATE';
const SCRIPT_DATA_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_LESS_THAN_SIGN_STATE';
const SCRIPT_DATA_END_TAG_OPEN_STATE = 'SCRIPT_DATA_END_TAG_OPEN_STATE';
const SCRIPT_DATA_END_TAG_NAME_STATE = 'SCRIPT_DATA_END_TAG_NAME_STATE';
const SCRIPT_DATA_ESCAPE_START_STATE = 'SCRIPT_DATA_ESCAPE_START_STATE';
const SCRIPT_DATA_ESCAPE_START_DASH_STATE = 'SCRIPT_DATA_ESCAPE_START_DASH_STATE';
const SCRIPT_DATA_ESCAPED_STATE = 'SCRIPT_DATA_ESCAPED_STATE';
const SCRIPT_DATA_ESCAPED_DASH_STATE = 'SCRIPT_DATA_ESCAPED_DASH_STATE';
const SCRIPT_DATA_ESCAPED_DASH_DASH_STATE = 'SCRIPT_DATA_ESCAPED_DASH_DASH_STATE';
const SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE';
const SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE = 'SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE';
const SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE = 'SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE';
const SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE';
const SCRIPT_DATA_DOUBLE_ESCAPED_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_STATE';
const SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE';
const SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE';
const SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE';
const SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE';
const BEFORE_ATTRIBUTE_NAME_STATE = 'BEFORE_ATTRIBUTE_NAME_STATE';
const ATTRIBUTE_NAME_STATE = 'ATTRIBUTE_NAME_STATE';
const AFTER_ATTRIBUTE_NAME_STATE = 'AFTER_ATTRIBUTE_NAME_STATE';
const BEFORE_ATTRIBUTE_VALUE_STATE = 'BEFORE_ATTRIBUTE_VALUE_STATE';
const ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE = 'ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE';
const ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE = 'ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE';
const ATTRIBUTE_VALUE_UNQUOTED_STATE = 'ATTRIBUTE_VALUE_UNQUOTED_STATE';
const AFTER_ATTRIBUTE_VALUE_QUOTED_STATE = 'AFTER_ATTRIBUTE_VALUE_QUOTED_STATE';
const SELF_CLOSING_START_TAG_STATE = 'SELF_CLOSING_START_TAG_STATE';
const BOGUS_COMMENT_STATE = 'BOGUS_COMMENT_STATE';
const MARKUP_DECLARATION_OPEN_STATE = 'MARKUP_DECLARATION_OPEN_STATE';
const COMMENT_START_STATE = 'COMMENT_START_STATE';
const COMMENT_START_DASH_STATE = 'COMMENT_START_DASH_STATE';
const COMMENT_STATE = 'COMMENT_STATE';
const COMMENT_LESS_THAN_SIGN_STATE = 'COMMENT_LESS_THAN_SIGN_STATE';
const COMMENT_LESS_THAN_SIGN_BANG_STATE = 'COMMENT_LESS_THAN_SIGN_BANG_STATE';
const COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE = 'COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE';
const COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE = 'COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE';
const COMMENT_END_DASH_STATE = 'COMMENT_END_DASH_STATE';
const COMMENT_END_STATE = 'COMMENT_END_STATE';
const COMMENT_END_BANG_STATE = 'COMMENT_END_BANG_STATE';
const DOCTYPE_STATE = 'DOCTYPE_STATE';
const BEFORE_DOCTYPE_NAME_STATE = 'BEFORE_DOCTYPE_NAME_STATE';
const DOCTYPE_NAME_STATE = 'DOCTYPE_NAME_STATE';
const AFTER_DOCTYPE_NAME_STATE = 'AFTER_DOCTYPE_NAME_STATE';
const AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE = 'AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE';
const BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE = 'BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE';
const DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE = 'DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE';
const DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE = 'DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE';
const AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE = 'AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE';
const BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE = 'BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE';
const AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE = 'AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE';
const BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE = 'BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE';
const DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE = 'DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE';
const DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE = 'DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE';
const AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE = 'AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE';
const BOGUS_DOCTYPE_STATE = 'BOGUS_DOCTYPE_STATE';
const CDATA_SECTION_STATE = 'CDATA_SECTION_STATE';
const CDATA_SECTION_BRACKET_STATE = 'CDATA_SECTION_BRACKET_STATE';
const CDATA_SECTION_END_STATE = 'CDATA_SECTION_END_STATE';
const CHARACTER_REFERENCE_STATE = 'CHARACTER_REFERENCE_STATE';
const NAMED_CHARACTER_REFERENCE_STATE = 'NAMED_CHARACTER_REFERENCE_STATE';
const AMBIGUOUS_AMPERSAND_STATE = 'AMBIGUOS_AMPERSAND_STATE';
const NUMERIC_CHARACTER_REFERENCE_STATE = 'NUMERIC_CHARACTER_REFERENCE_STATE';
const HEXADEMICAL_CHARACTER_REFERENCE_START_STATE = 'HEXADEMICAL_CHARACTER_REFERENCE_START_STATE';
const DECIMAL_CHARACTER_REFERENCE_START_STATE = 'DECIMAL_CHARACTER_REFERENCE_START_STATE';
const HEXADEMICAL_CHARACTER_REFERENCE_STATE = 'HEXADEMICAL_CHARACTER_REFERENCE_STATE';
const DECIMAL_CHARACTER_REFERENCE_STATE = 'DECIMAL_CHARACTER_REFERENCE_STATE';
const NUMERIC_CHARACTER_REFERENCE_END_STATE = 'NUMERIC_CHARACTER_REFERENCE_END_STATE';

//Utils

//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline
//this functions if they will be situated in another module due to context switch.
//Always perform inlining check before modifying this functions ('node --trace-inlining').
function isWhitespace(cp) {
    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;
}

function isAsciiDigit(cp) {
    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;
}

function isAsciiUpper(cp) {
    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;
}

function isAsciiLower(cp) {
    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;
}

function isAsciiLetter(cp) {
    return isAsciiLower(cp) || isAsciiUpper(cp);
}

function isAsciiAlphaNumeric(cp) {
    return isAsciiLetter(cp) || isAsciiDigit(cp);
}

function isAsciiUpperHexDigit(cp) {
    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_F;
}

function isAsciiLowerHexDigit(cp) {
    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_F;
}

function isAsciiHexDigit(cp) {
    return isAsciiDigit(cp) || isAsciiUpperHexDigit(cp) || isAsciiLowerHexDigit(cp);
}

function toAsciiLowerCodePoint(cp) {
    return cp + 0x0020;
}

//NOTE: String.fromCharCode() function can handle only characters from BMP subset.
//So, we need to workaround this manually.
//(see: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/fromCharCode#Getting_it_to_work_with_higher_values)
function toChar(cp) {
    if (cp <= 0xffff) {
        return String.fromCharCode(cp);
    }

    cp -= 0x10000;
    return String.fromCharCode(((cp >>> 10) & 0x3ff) | 0xd800) + String.fromCharCode(0xdc00 | (cp & 0x3ff));
}

function toAsciiLowerChar(cp) {
    return String.fromCharCode(toAsciiLowerCodePoint(cp));
}

function findNamedEntityTreeBranch(nodeIx, cp) {
    const branchCount = neTree[++nodeIx];
    let lo = ++nodeIx;
    let hi = lo + branchCount - 1;

    while (lo <= hi) {
        const mid = (lo + hi) >>> 1;
        const midCp = neTree[mid];

        if (midCp < cp) {
            lo = mid + 1;
        } else if (midCp > cp) {
            hi = mid - 1;
        } else {
            return neTree[mid + branchCount];
        }
    }

    return -1;
}

//Tokenizer
class Tokenizer {
    constructor() {
        this.preprocessor = new Preprocessor();

        this.tokenQueue = [];

        this.allowCDATA = false;

        this.state = DATA_STATE;
        this.returnState = '';

        this.charRefCode = -1;
        this.tempBuff = [];
        this.lastStartTagName = '';

        this.consumedAfterSnapshot = -1;
        this.active = false;

        this.currentCharacterToken = null;
        this.currentToken = null;
        this.currentAttr = null;
    }

    //Errors
    _err() {
        // NOTE: err reporting is noop by default. Enabled by mixin.
    }

    _errOnNextCodePoint(err) {
        this._consume();
        this._err(err);
        this._unconsume();
    }

    //API
    getNextToken() {
        while (!this.tokenQueue.length && this.active) {
            this.consumedAfterSnapshot = 0;

            const cp = this._consume();

            if (!this._ensureHibernation()) {
                this[this.state](cp);
            }
        }

        return this.tokenQueue.shift();
    }

    write(chunk, isLastChunk) {
        this.active = true;
        this.preprocessor.write(chunk, isLastChunk);
    }

    insertHtmlAtCurrentPos(chunk) {
        this.active = true;
        this.preprocessor.insertHtmlAtCurrentPos(chunk);
    }

    //Hibernation
    _ensureHibernation() {
        if (this.preprocessor.endOfChunkHit) {
            for (; this.consumedAfterSnapshot > 0; this.consumedAfterSnapshot--) {
                this.preprocessor.retreat();
            }

            this.active = false;
            this.tokenQueue.push({ type: Tokenizer.HIBERNATION_TOKEN });

            return true;
        }

        return false;
    }

    //Consumption
    _consume() {
        this.consumedAfterSnapshot++;
        return this.preprocessor.advance();
    }

    _unconsume() {
        this.consumedAfterSnapshot--;
        this.preprocessor.retreat();
    }

    _reconsumeInState(state) {
        this.state = state;
        this._unconsume();
    }

    _consumeSequenceIfMatch(pattern, startCp, caseSensitive) {
        let consumedCount = 0;
        let isMatch = true;
        const patternLength = pattern.length;
        let patternPos = 0;
        let cp = startCp;
        let patternCp = void 0;

        for (; patternPos < patternLength; patternPos++) {
            if (patternPos > 0) {
                cp = this._consume();
                consumedCount++;
            }

            if (cp === $.EOF) {
                isMatch = false;
                break;
            }

            patternCp = pattern[patternPos];

            if (cp !== patternCp && (caseSensitive || cp !== toAsciiLowerCodePoint(patternCp))) {
                isMatch = false;
                break;
            }
        }

        if (!isMatch) {
            while (consumedCount--) {
                this._unconsume();
            }
        }

        return isMatch;
    }

    //Temp buffer
    _isTempBufferEqualToScriptString() {
        if (this.tempBuff.length !== $$.SCRIPT_STRING.length) {
            return false;
        }

        for (let i = 0; i < this.tempBuff.length; i++) {
            if (this.tempBuff[i] !== $$.SCRIPT_STRING[i]) {
                return false;
            }
        }

        return true;
    }

    //Token creation
    _createStartTagToken() {
        this.currentToken = {
            type: Tokenizer.START_TAG_TOKEN,
            tagName: '',
            selfClosing: false,
            ackSelfClosing: false,
            attrs: []
        };
    }

    _createEndTagToken() {
        this.currentToken = {
            type: Tokenizer.END_TAG_TOKEN,
            tagName: '',
            selfClosing: false,
            attrs: []
        };
    }

    _createCommentToken() {
        this.currentToken = {
            type: Tokenizer.COMMENT_TOKEN,
            data: ''
        };
    }

    _createDoctypeToken(initialName) {
        this.currentToken = {
            type: Tokenizer.DOCTYPE_TOKEN,
            name: initialName,
            forceQuirks: false,
            publicId: null,
            systemId: null
        };
    }

    _createCharacterToken(type, ch) {
        this.currentCharacterToken = {
            type: type,
            chars: ch
        };
    }

    _createEOFToken() {
        this.currentToken = { type: Tokenizer.EOF_TOKEN };
    }

    //Tag attributes
    _createAttr(attrNameFirstCh) {
        this.currentAttr = {
            name: attrNameFirstCh,
            value: ''
        };
    }

    _leaveAttrName(toState) {
        if (Tokenizer.getTokenAttr(this.currentToken, this.currentAttr.name) === null) {
            this.currentToken.attrs.push(this.currentAttr);
        } else {
            this._err(ERR.duplicateAttribute);
        }

        this.state = toState;
    }

    _leaveAttrValue(toState) {
        this.state = toState;
    }

    //Token emission
    _emitCurrentToken() {
        this._emitCurrentCharacterToken();

        const ct = this.currentToken;

        this.currentToken = null;

        //NOTE: store emited start tag's tagName to determine is the following end tag token is appropriate.
        if (ct.type === Tokenizer.START_TAG_TOKEN) {
            this.lastStartTagName = ct.tagName;
        } else if (ct.type === Tokenizer.END_TAG_TOKEN) {
            if (ct.attrs.length > 0) {
                this._err(ERR.endTagWithAttributes);
            }

            if (ct.selfClosing) {
                this._err(ERR.endTagWithTrailingSolidus);
            }
        }

        this.tokenQueue.push(ct);
    }

    _emitCurrentCharacterToken() {
        if (this.currentCharacterToken) {
            this.tokenQueue.push(this.currentCharacterToken);
            this.currentCharacterToken = null;
        }
    }

    _emitEOFToken() {
        this._createEOFToken();
        this._emitCurrentToken();
    }

    //Characters emission

    //OPTIMIZATION: specification uses only one type of character tokens (one token per character).
    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.
    //If we have a sequence of characters that belong to the same group, parser can process it
    //as a single solid character token.
    //So, there are 3 types of character tokens in parse5:
    //1)NULL_CHARACTER_TOKEN - \u0000-character sequences (e.g. '\u0000\u0000\u0000')
    //2)WHITESPACE_CHARACTER_TOKEN - any whitespace/new-line character sequences (e.g. '\n  \r\t   \f')
    //3)CHARACTER_TOKEN - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')
    _appendCharToCurrentCharacterToken(type, ch) {
        if (this.currentCharacterToken && this.currentCharacterToken.type !== type) {
            this._emitCurrentCharacterToken();
        }

        if (this.currentCharacterToken) {
            this.currentCharacterToken.chars += ch;
        } else {
            this._createCharacterToken(type, ch);
        }
    }

    _emitCodePoint(cp) {
        let type = Tokenizer.CHARACTER_TOKEN;

        if (isWhitespace(cp)) {
            type = Tokenizer.WHITESPACE_CHARACTER_TOKEN;
        } else if (cp === $.NULL) {
            type = Tokenizer.NULL_CHARACTER_TOKEN;
        }

        this._appendCharToCurrentCharacterToken(type, toChar(cp));
    }

    _emitSeveralCodePoints(codePoints) {
        for (let i = 0; i < codePoints.length; i++) {
            this._emitCodePoint(codePoints[i]);
        }
    }

    //NOTE: used then we emit character explicitly. This is always a non-whitespace and a non-null character.
    //So we can avoid additional checks here.
    _emitChars(ch) {
        this._appendCharToCurrentCharacterToken(Tokenizer.CHARACTER_TOKEN, ch);
    }

    // Character reference helpers
    _matchNamedCharacterReference(startCp) {
        let result = null;
        let excess = 1;
        let i = findNamedEntityTreeBranch(0, startCp);

        this.tempBuff.push(startCp);

        while (i > -1) {
            const current = neTree[i];
            const inNode = current < MAX_BRANCH_MARKER_VALUE;
            const nodeWithData = inNode && current & HAS_DATA_FLAG;

            if (nodeWithData) {
                //NOTE: we use greedy search, so we continue lookup at this point
                result = current & DATA_DUPLET_FLAG ? [neTree[++i], neTree[++i]] : [neTree[++i]];
                excess = 0;
            }

            const cp = this._consume();

            this.tempBuff.push(cp);
            excess++;

            if (cp === $.EOF) {
                break;
            }

            if (inNode) {
                i = current & HAS_BRANCHES_FLAG ? findNamedEntityTreeBranch(i, cp) : -1;
            } else {
                i = cp === current ? ++i : -1;
            }
        }

        while (excess--) {
            this.tempBuff.pop();
            this._unconsume();
        }

        return result;
    }

    _isCharacterReferenceInAttribute() {
        return (
            this.returnState === ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE ||
            this.returnState === ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE ||
            this.returnState === ATTRIBUTE_VALUE_UNQUOTED_STATE
        );
    }

    _isCharacterReferenceAttributeQuirk(withSemicolon) {
        if (!withSemicolon && this._isCharacterReferenceInAttribute()) {
            const nextCp = this._consume();

            this._unconsume();

            return nextCp === $.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp);
        }

        return false;
    }

    _flushCodePointsConsumedAsCharacterReference() {
        if (this._isCharacterReferenceInAttribute()) {
            for (let i = 0; i < this.tempBuff.length; i++) {
                this.currentAttr.value += toChar(this.tempBuff[i]);
            }
        } else {
            this._emitSeveralCodePoints(this.tempBuff);
        }

        this.tempBuff = [];
    }

    // State machine

    // Data state
    //------------------------------------------------------------------
    [DATA_STATE](cp) {
        this.preprocessor.dropParsedChunk();

        if (cp === $.LESS_THAN_SIGN) {
            this.state = TAG_OPEN_STATE;
        } else if (cp === $.AMPERSAND) {
            this.returnState = DATA_STATE;
            this.state = CHARACTER_REFERENCE_STATE;
        } else if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
            this._emitCodePoint(cp);
        } else if (cp === $.EOF) {
            this._emitEOFToken();
        } else {
            this._emitCodePoint(cp);
        }
    }

    //  RCDATA state
    //------------------------------------------------------------------
    [RCDATA_STATE](cp) {
        this.preprocessor.dropParsedChunk();

        if (cp === $.AMPERSAND) {
            this.returnState = RCDATA_STATE;
            this.state = CHARACTER_REFERENCE_STATE;
        } else if (cp === $.LESS_THAN_SIGN) {
            this.state = RCDATA_LESS_THAN_SIGN_STATE;
        } else if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
            this._emitChars(unicode.REPLACEMENT_CHARACTER);
        } else if (cp === $.EOF) {
            this._emitEOFToken();
        } else {
            this._emitCodePoint(cp);
        }
    }

    // RAWTEXT state
    //------------------------------------------------------------------
    [RAWTEXT_STATE](cp) {
        this.preprocessor.dropParsedChunk();

        if (cp === $.LESS_THAN_SIGN) {
            this.state = RAWTEXT_LESS_THAN_SIGN_STATE;
        } else if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
            this._emitChars(unicode.REPLACEMENT_CHARACTER);
        } else if (cp === $.EOF) {
            this._emitEOFToken();
        } else {
            this._emitCodePoint(cp);
        }
    }

    // Script data state
    //------------------------------------------------------------------
    [SCRIPT_DATA_STATE](cp) {
        this.preprocessor.dropParsedChunk();

        if (cp === $.LESS_THAN_SIGN) {
            this.state = SCRIPT_DATA_LESS_THAN_SIGN_STATE;
        } else if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
            this._emitChars(unicode.REPLACEMENT_CHARACTER);
        } else if (cp === $.EOF) {
            this._emitEOFToken();
        } else {
            this._emitCodePoint(cp);
        }
    }

    // PLAINTEXT state
    //------------------------------------------------------------------
    [PLAINTEXT_STATE](cp) {
        this.preprocessor.dropParsedChunk();

        if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
            this._emitChars(unicode.REPLACEMENT_CHARACTER);
        } else if (cp === $.EOF) {
            this._emitEOFToken();
        } else {
            this._emitCodePoint(cp);
        }
    }

    // Tag open state
    //------------------------------------------------------------------
    [TAG_OPEN_STATE](cp) {
        if (cp === $.EXCLAMATION_MARK) {
            this.state = MARKUP_DECLARATION_OPEN_STATE;
        } else if (cp === $.SOLIDUS) {
            this.state = END_TAG_OPEN_STATE;
        } else if (isAsciiLetter(cp)) {
            this._createStartTagToken();
            this._reconsumeInState(TAG_NAME_STATE);
        } else if (cp === $.QUESTION_MARK) {
            this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);
            this._createCommentToken();
            this._reconsumeInState(BOGUS_COMMENT_STATE);
        } else if (cp === $.EOF) {
            this._err(ERR.eofBeforeTagName);
            this._emitChars('<');
            this._emitEOFToken();
        } else {
            this._err(ERR.invalidFirstCharacterOfTagName);
            this._emitChars('<');
            this._reconsumeInState(DATA_STATE);
        }
    }

    // End tag open state
    //------------------------------------------------------------------
    [END_TAG_OPEN_STATE](cp) {
        if (isAsciiLetter(cp)) {
            this._createEndTagToken();
            this._reconsumeInState(TAG_NAME_STATE);
        } else if (cp === $.GREATER_THAN_SIGN) {
            this._err(ERR.missingEndTagName);
            this.state = DATA_STATE;
        } else if (cp === $.EOF) {
            this._err(ERR.eofBeforeTagName);
            this._emitChars('</');
            this._emitEOFToken();
        } else {
            this._err(ERR.invalidFirstCharacterOfTagName);
            this._createCommentToken();
            this._reconsumeInState(BOGUS_COMMENT_STATE);
        }
    }

    // Tag name state
    //------------------------------------------------------------------
    [TAG_NAME_STATE](cp) {
        if (isWhitespace(cp)) {
            this.state = BEFORE_ATTRIBUTE_NAME_STATE;
        } else if (cp === $.SOLIDUS) {
            this.state = SELF_CLOSING_START_TAG_STATE;
        } else if (cp === $.GREATER_THAN_SIGN) {
            this.state = DATA_STATE;
            this._emitCurrentToken();
        } else if (isAsciiUpper(cp)) {
            this.currentToken.tagName += toAsciiLowerChar(cp);
        } else if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
            this.currentToken.tagName += unicode.REPLACEMENT_CHARACTER;
        } else if (cp === $.EOF) {
            this._err(ERR.eofInTag);
            this._emitEOFToken();
        } else {
            this.currentToken.tagName += toChar(cp);
        }
    }

    // RCDATA less-than sign state
    //------------------------------------------------------------------
    [RCDATA_LESS_THAN_SIGN_STATE](cp) {
        if (cp === $.SOLIDUS) {
            this.tempBuff = [];
            this.state = RCDATA_END_TAG_OPEN_STATE;
        } else {
            this._emitChars('<');
            this._reconsumeInState(RCDATA_STATE);
        }
    }

    // RCDATA end tag open state
    //------------------------------------------------------------------
    [RCDATA_END_TAG_OPEN_STATE](cp) {
        if (isAsciiLetter(cp)) {
            this._createEndTagToken();
            this._reconsumeInState(RCDATA_END_TAG_NAME_STATE);
        } else {
            this._emitChars('</');
            this._reconsumeInState(RCDATA_STATE);
        }
    }

    // RCDATA end tag name state
    //------------------------------------------------------------------
    [RCDATA_END_TAG_NAME_STATE](cp) {
        if (isAsciiUpper(cp)) {
            this.currentToken.tagName += toAsciiLowerChar(cp);
            this.tempBuff.push(cp);
        } else if (isAsciiLower(cp)) {
            this.currentToken.tagName += toChar(cp);
            this.tempBuff.push(cp);
        } else {
            if (this.lastStartTagName === this.currentToken.tagName) {
                if (isWhitespace(cp)) {
                    this.state = BEFORE_ATTRIBUTE_NAME_STATE;
                    return;
                }

                if (cp === $.SOLIDUS) {
                    this.state = SELF_CLOSING_START_TAG_STATE;
                    return;
                }

                if (cp === $.GREATER_THAN_SIGN) {
                    this.state = DATA_STATE;
                    this._emitCurrentToken();
                    return;
                }
            }

            this._emitChars('</');
            this._emitSeveralCodePoints(this.tempBuff);
            this._reconsumeInState(RCDATA_STATE);
        }
    }

    // RAWTEXT less-than sign state
    //------------------------------------------------------------------
    [RAWTEXT_LESS_THAN_SIGN_STATE](cp) {
        if (cp === $.SOLIDUS) {
            this.tempBuff = [];
            this.state = RAWTEXT_END_TAG_OPEN_STATE;
        } else {
            this._emitChars('<');
            this._reconsumeInState(RAWTEXT_STATE);
        }
    }

    // RAWTEXT end tag open state
    //------------------------------------------------------------------
    [RAWTEXT_END_TAG_OPEN_STATE](cp) {
        if (isAsciiLetter(cp)) {
            this._createEndTagToken();
            this._reconsumeInState(RAWTEXT_END_TAG_NAME_STATE);
        } else {
            this._emitChars('</');
            this._reconsumeInState(RAWTEXT_STATE);
        }
    }

    // RAWTEXT end tag name state
    //------------------------------------------------------------------
    [RAWTEXT_END_TAG_NAME_STATE](cp) {
        if (isAsciiUpper(cp)) {
            this.currentToken.tagName += toAsciiLowerChar(cp);
            this.tempBuff.push(cp);
        } else if (isAsciiLower(cp)) {
            this.currentToken.tagName += toChar(cp);
            this.tempBuff.push(cp);
        } else {
            if (this.lastStartTagName === this.currentToken.tagName) {
                if (isWhitespace(cp)) {
                    this.state = BEFORE_ATTRIBUTE_NAME_STATE;
                    return;
                }

                if (cp === $.SOLIDUS) {
                    this.state = SELF_CLOSING_START_TAG_STATE;
                    return;
                }

                if (cp === $.GREATER_THAN_SIGN) {
                    this._emitCurrentToken();
                    this.state = DATA_STATE;
                    return;
                }
            }

            this._emitChars('</');
            this._emitSeveralCodePoints(this.tempBuff);
            this._reconsumeInState(RAWTEXT_STATE);
        }
    }

    // Script data less-than sign state
    //------------------------------------------------------------------
    [SCRIPT_DATA_LESS_THAN_SIGN_STATE](cp) {
        if (cp === $.SOLIDUS) {
            this.tempBuff = [];
            this.state = SCRIPT_DATA_END_TAG_OPEN_STATE;
        } else if (cp === $.EXCLAMATION_MARK) {
            this.state = SCRIPT_DATA_ESCAPE_START_STATE;
            this._emitChars('<!');
        } else {
            this._emitChars('<');
            this._reconsumeInState(SCRIPT_DATA_STATE);
        }
    }

    // Script data end tag open state
    //------------------------------------------------------------------
    [SCRIPT_DATA_END_TAG_OPEN_STATE](cp) {
        if (isAsciiLetter(cp)) {
            this._createEndTagToken();
            this._reconsumeInState(SCRIPT_DATA_END_TAG_NAME_STATE);
        } else {
            this._emitChars('</');
            this._reconsumeInState(SCRIPT_DATA_STATE);
        }
    }

    // Script data end tag name state
    //------------------------------------------------------------------
    [SCRIPT_DATA_END_TAG_NAME_STATE](cp) {
        if (isAsciiUpper(cp)) {
            this.currentToken.tagName += toAsciiLowerChar(cp);
            this.tempBuff.push(cp);
        } else if (isAsciiLower(cp)) {
            this.currentToken.tagName += toChar(cp);
            this.tempBuff.push(cp);
        } else {
            if (this.lastStartTagName === this.currentToken.tagName) {
                if (isWhitespace(cp)) {
                    this.state = BEFORE_ATTRIBUTE_NAME_STATE;
                    return;
                } else if (cp === $.SOLIDUS) {
                    this.state = SELF_CLOSING_START_TAG_STATE;
                    return;
                } else if (cp === $.GREATER_THAN_SIGN) {
                    this._emitCurrentToken();
                    this.state = DATA_STATE;
                    return;
                }
            }

            this._emitChars('</');
            this._emitSeveralCodePoints(this.tempBuff);
            this._reconsumeInState(SCRIPT_DATA_STATE);
        }
    }

    // Script data escape start state
    //------------------------------------------------------------------
    [SCRIPT_DATA_ESCAPE_START_STATE](cp) {
        if (cp === $.HYPHEN_MINUS) {
            this.state = SCRIPT_DATA_ESCAPE_START_DASH_STATE;
            this._emitChars('-');
        } else {
            this._reconsumeInState(SCRIPT_DATA_STATE);
        }
    }

    // Script data escape start dash state
    //------------------------------------------------------------------
    [SCRIPT_DATA_ESCAPE_START_DASH_STATE](cp) {
        if (cp === $.HYPHEN_MINUS) {
            this.state = SCRIPT_DATA_ESCAPED_DASH_DASH_STATE;
            this._emitChars('-');
        } else {
            this._reconsumeInState(SCRIPT_DATA_STATE);
        }
    }

    // Script data escaped state
    //------------------------------------------------------------------
    [SCRIPT_DATA_ESCAPED_STATE](cp) {
        if (cp === $.HYPHEN_MINUS) {
            this.state = SCRIPT_DATA_ESCAPED_DASH_STATE;
            this._emitChars('-');
        } else if (cp === $.LESS_THAN_SIGN) {
            this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;
        } else if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
            this._emitChars(unicode.REPLACEMENT_CHARACTER);
        } else if (cp === $.EOF) {
            this._err(ERR.eofInScriptHtmlCommentLikeText);
            this._emitEOFToken();
        } else {
            this._emitCodePoint(cp);
        }
    }

    // Script data escaped dash state
    //------------------------------------------------------------------
    [SCRIPT_DATA_ESCAPED_DASH_STATE](cp) {
        if (cp === $.HYPHEN_MINUS) {
            this.state = SCRIPT_DATA_ESCAPED_DASH_DASH_STATE;
            this._emitChars('-');
        } else if (cp === $.LESS_THAN_SIGN) {
            this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;
        } else if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
            this.state = SCRIPT_DATA_ESCAPED_STATE;
            this._emitChars(unicode.REPLACEMENT_CHARACTER);
        } else if (cp === $.EOF) {
            this._err(ERR.eofInScriptHtmlCommentLikeText);
            this._emitEOFToken();
        } else {
            this.state = SCRIPT_DATA_ESCAPED_STATE;
            this._emitCodePoint(cp);
        }
    }

    // Script data escaped dash dash state
    //------------------------------------------------------------------
    [SCRIPT_DATA_ESCAPED_DASH_DASH_STATE](cp) {
        if (cp === $.HYPHEN_MINUS) {
            this._emitChars('-');
        } else if (cp === $.LESS_THAN_SIGN) {
            this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;
        } else if (cp === $.GREATER_THAN_SIGN) {
            this.state = SCRIPT_DATA_STATE;
            this._emitChars('>');
        } else if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
            this.state = SCRIPT_DATA_ESCAPED_STATE;
            this._emitChars(unicode.REPLACEMENT_CHARACTER);
        } else if (cp === $.EOF) {
            this._err(ERR.eofInScriptHtmlCommentLikeText);
            this._emitEOFToken();
        } else {
            this.state = SCRIPT_DATA_ESCAPED_STATE;
            this._emitCodePoint(cp);
        }
    }

    // Script data escaped less-than sign state
    //------------------------------------------------------------------
    [SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE](cp) {
        if (cp === $.SOLIDUS) {
            this.tempBuff = [];
            this.state = SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE;
        } else if (isAsciiLetter(cp)) {
            this.tempBuff = [];
            this._emitChars('<');
            this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE);
        } else {
            this._emitChars('<');
            this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);
        }
    }

    // Script data escaped end tag open state
    //------------------------------------------------------------------
    [SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE](cp) {
        if (isAsciiLetter(cp)) {
            this._createEndTagToken();
            this._reconsumeInState(SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE);
        } else {
            this._emitChars('</');
            this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);
        }
    }

    // Script data escaped end tag name state
    //------------------------------------------------------------------
    [SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE](cp) {
        if (isAsciiUpper(cp)) {
            this.currentToken.tagName += toAsciiLowerChar(cp);
            this.tempBuff.push(cp);
        } else if (isAsciiLower(cp)) {
            this.currentToken.tagName += toChar(cp);
            this.tempBuff.push(cp);
        } else {
            if (this.lastStartTagName === this.currentToken.tagName) {
                if (isWhitespace(cp)) {
                    this.state = BEFORE_ATTRIBUTE_NAME_STATE;
                    return;
                }

                if (cp === $.SOLIDUS) {
                    this.state = SELF_CLOSING_START_TAG_STATE;
                    return;
                }

                if (cp === $.GREATER_THAN_SIGN) {
                    this._emitCurrentToken();
                    this.state = DATA_STATE;
                    return;
                }
            }

            this._emitChars('</');
            this._emitSeveralCodePoints(this.tempBuff);
            this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);
        }
    }

    // Script data double escape start state
    //------------------------------------------------------------------
    [SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE](cp) {
        if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN) {
            this.state = this._isTempBufferEqualToScriptString()
                ? SCRIPT_DATA_DOUBLE_ESCAPED_STATE
                : SCRIPT_DATA_ESCAPED_STATE;
            this._emitCodePoint(cp);
        } else if (isAsciiUpper(cp)) {
            this.tempBuff.push(toAsciiLowerCodePoint(cp));
            this._emitCodePoint(cp);
        } else if (isAsciiLower(cp)) {
            this.tempBuff.push(cp);
            this._emitCodePoint(cp);
        } else {
            this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);
        }
    }

    // Script data double escaped state
    //------------------------------------------------------------------
    [SCRIPT_DATA_DOUBLE_ESCAPED_STATE](cp) {
        if (cp === $.HYPHEN_MINUS) {
            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE;
            this._emitChars('-');
        } else if (cp === $.LESS_THAN_SIGN) {
            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;
            this._emitChars('<');
        } else if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
            this._emitChars(unicode.REPLACEMENT_CHARACTER);
        } else if (cp === $.EOF) {
            this._err(ERR.eofInScriptHtmlCommentLikeText);
            this._emitEOFToken();
        } else {
            this._emitCodePoint(cp);
        }
    }

    // Script data double escaped dash state
    //------------------------------------------------------------------
    [SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE](cp) {
        if (cp === $.HYPHEN_MINUS) {
            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE;
            this._emitChars('-');
        } else if (cp === $.LESS_THAN_SIGN) {
            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;
            this._emitChars('<');
        } else if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;
            this._emitChars(unicode.REPLACEMENT_CHARACTER);
        } else if (cp === $.EOF) {
            this._err(ERR.eofInScriptHtmlCommentLikeText);
            this._emitEOFToken();
        } else {
            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;
            this._emitCodePoint(cp);
        }
    }

    // Script data double escaped dash dash state
    //------------------------------------------------------------------
    [SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE](cp) {
        if (cp === $.HYPHEN_MINUS) {
            this._emitChars('-');
        } else if (cp === $.LESS_THAN_SIGN) {
            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;
            this._emitChars('<');
        } else if (cp === $.GREATER_THAN_SIGN) {
            this.state = SCRIPT_DATA_STATE;
            this._emitChars('>');
        } else if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;
            this._emitChars(unicode.REPLACEMENT_CHARACTER);
        } else if (cp === $.EOF) {
            this._err(ERR.eofInScriptHtmlCommentLikeText);
            this._emitEOFToken();
        } else {
            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;
            this._emitCodePoint(cp);
        }
    }

    // Script data double escaped less-than sign state
    //------------------------------------------------------------------
    [SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE](cp) {
        if (cp === $.SOLIDUS) {
            this.tempBuff = [];
            this.state = SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE;
            this._emitChars('/');
        } else {
            this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPED_STATE);
        }
    }

    // Script data double escape end state
    //------------------------------------------------------------------
    [SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE](cp) {
        if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN) {
            this.state = this._isTempBufferEqualToScriptString()
                ? SCRIPT_DATA_ESCAPED_STATE
                : SCRIPT_DATA_DOUBLE_ESCAPED_STATE;

            this._emitCodePoint(cp);
        } else if (isAsciiUpper(cp)) {
            this.tempBuff.push(toAsciiLowerCodePoint(cp));
            this._emitCodePoint(cp);
        } else if (isAsciiLower(cp)) {
            this.tempBuff.push(cp);
            this._emitCodePoint(cp);
        } else {
            this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPED_STATE);
        }
    }

    // Before attribute name state
    //------------------------------------------------------------------
    [BEFORE_ATTRIBUTE_NAME_STATE](cp) {
        if (isWhitespace(cp)) {
            return;
        }

        if (cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN || cp === $.EOF) {
            this._reconsumeInState(AFTER_ATTRIBUTE_NAME_STATE);
        } else if (cp === $.EQUALS_SIGN) {
            this._err(ERR.unexpectedEqualsSignBeforeAttributeName);
            this._createAttr('=');
            this.state = ATTRIBUTE_NAME_STATE;
        } else {
            this._createAttr('');
            this._reconsumeInState(ATTRIBUTE_NAME_STATE);
        }
    }

    // Attribute name state
    //------------------------------------------------------------------
    [ATTRIBUTE_NAME_STATE](cp) {
        if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN || cp === $.EOF) {
            this._leaveAttrName(AFTER_ATTRIBUTE_NAME_STATE);
            this._unconsume();
        } else if (cp === $.EQUALS_SIGN) {
            this._leaveAttrName(BEFORE_ATTRIBUTE_VALUE_STATE);
        } else if (isAsciiUpper(cp)) {
            this.currentAttr.name += toAsciiLowerChar(cp);
        } else if (cp === $.QUOTATION_MARK || cp === $.APOSTROPHE || cp === $.LESS_THAN_SIGN) {
            this._err(ERR.unexpectedCharacterInAttributeName);
            this.currentAttr.name += toChar(cp);
        } else if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
            this.currentAttr.name += unicode.REPLACEMENT_CHARACTER;
        } else {
            this.currentAttr.name += toChar(cp);
        }
    }

    // After attribute name state
    //------------------------------------------------------------------
    [AFTER_ATTRIBUTE_NAME_STATE](cp) {
        if (isWhitespace(cp)) {
            return;
        }

        if (cp === $.SOLIDUS) {
            this.state = SELF_CLOSING_START_TAG_STATE;
        } else if (cp === $.EQUALS_SIGN) {
            this.state = BEFORE_ATTRIBUTE_VALUE_STATE;
        } else if (cp === $.GREATER_THAN_SIGN) {
            this.state = DATA_STATE;
            this._emitCurrentToken();
        } else if (cp === $.EOF) {
            this._err(ERR.eofInTag);
            this._emitEOFToken();
        } else {
            this._createAttr('');
            this._reconsumeInState(ATTRIBUTE_NAME_STATE);
        }
    }

    // Before attribute value state
    //------------------------------------------------------------------
    [BEFORE_ATTRIBUTE_VALUE_STATE](cp) {
        if (isWhitespace(cp)) {
            return;
        }

        if (cp === $.QUOTATION_MARK) {
            this.state = ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE;
        } else if (cp === $.APOSTROPHE) {
            this.state = ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE;
        } else if (cp === $.GREATER_THAN_SIGN) {
            this._err(ERR.missingAttributeValue);
            this.state = DATA_STATE;
            this._emitCurrentToken();
        } else {
            this._reconsumeInState(ATTRIBUTE_VALUE_UNQUOTED_STATE);
        }
    }

    // Attribute value (double-quoted) state
    //------------------------------------------------------------------
    [ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE](cp) {
        if (cp === $.QUOTATION_MARK) {
            this.state = AFTER_ATTRIBUTE_VALUE_QUOTED_STATE;
        } else if (cp === $.AMPERSAND) {
            this.returnState = ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE;
            this.state = CHARACTER_REFERENCE_STATE;
        } else if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
            this.currentAttr.value += unicode.REPLACEMENT_CHARACTER;
        } else if (cp === $.EOF) {
            this._err(ERR.eofInTag);
            this._emitEOFToken();
        } else {
            this.currentAttr.value += toChar(cp);
        }
    }

    // Attribute value (single-quoted) state
    //------------------------------------------------------------------
    [ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE](cp) {
        if (cp === $.APOSTROPHE) {
            this.state = AFTER_ATTRIBUTE_VALUE_QUOTED_STATE;
        } else if (cp === $.AMPERSAND) {
            this.returnState = ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE;
            this.state = CHARACTER_REFERENCE_STATE;
        } else if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
            this.currentAttr.value += unicode.REPLACEMENT_CHARACTER;
        } else if (cp === $.EOF) {
            this._err(ERR.eofInTag);
            this._emitEOFToken();
        } else {
            this.currentAttr.value += toChar(cp);
        }
    }

    // Attribute value (unquoted) state
    //------------------------------------------------------------------
    [ATTRIBUTE_VALUE_UNQUOTED_STATE](cp) {
        if (isWhitespace(cp)) {
            this._leaveAttrValue(BEFORE_ATTRIBUTE_NAME_STATE);
        } else if (cp === $.AMPERSAND) {
            this.returnState = ATTRIBUTE_VALUE_UNQUOTED_STATE;
            this.state = CHARACTER_REFERENCE_STATE;
        } else if (cp === $.GREATER_THAN_SIGN) {
            this._leaveAttrValue(DATA_STATE);
            this._emitCurrentToken();
        } else if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
            this.currentAttr.value += unicode.REPLACEMENT_CHARACTER;
        } else if (
            cp === $.QUOTATION_MARK ||
            cp === $.APOSTROPHE ||
            cp === $.LESS_THAN_SIGN ||
            cp === $.EQUALS_SIGN ||
            cp === $.GRAVE_ACCENT
        ) {
            this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);
            this.currentAttr.value += toChar(cp);
        } else if (cp === $.EOF) {
            this._err(ERR.eofInTag);
            this._emitEOFToken();
        } else {
            this.currentAttr.value += toChar(cp);
        }
    }

    // After attribute value (quoted) state
    //------------------------------------------------------------------
    [AFTER_ATTRIBUTE_VALUE_QUOTED_STATE](cp) {
        if (isWhitespace(cp)) {
            this._leaveAttrValue(BEFORE_ATTRIBUTE_NAME_STATE);
        } else if (cp === $.SOLIDUS) {
            this._leaveAttrValue(SELF_CLOSING_START_TAG_STATE);
        } else if (cp === $.GREATER_THAN_SIGN) {
            this._leaveAttrValue(DATA_STATE);
            this._emitCurrentToken();
        } else if (cp === $.EOF) {
            this._err(ERR.eofInTag);
            this._emitEOFToken();
        } else {
            this._err(ERR.missingWhitespaceBetweenAttributes);
            this._reconsumeInState(BEFORE_ATTRIBUTE_NAME_STATE);
        }
    }

    // Self-closing start tag state
    //------------------------------------------------------------------
    [SELF_CLOSING_START_TAG_STATE](cp) {
        if (cp === $.GREATER_THAN_SIGN) {
            this.currentToken.selfClosing = true;
            this.state = DATA_STATE;
            this._emitCurrentToken();
        } else if (cp === $.EOF) {
            this._err(ERR.eofInTag);
            this._emitEOFToken();
        } else {
            this._err(ERR.unexpectedSolidusInTag);
            this._reconsumeInState(BEFORE_ATTRIBUTE_NAME_STATE);
        }
    }

    // Bogus comment state
    //------------------------------------------------------------------
    [BOGUS_COMMENT_STATE](cp) {
        if (cp === $.GREATER_THAN_SIGN) {
            this.state = DATA_STATE;
            this._emitCurrentToken();
        } else if (cp === $.EOF) {
            this._emitCurrentToken();
            this._emitEOFToken();
        } else if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
            this.currentToken.data += unicode.REPLACEMENT_CHARACTER;
        } else {
            this.currentToken.data += toChar(cp);
        }
    }

    // Markup declaration open state
    //------------------------------------------------------------------
    [MARKUP_DECLARATION_OPEN_STATE](cp) {
        if (this._consumeSequenceIfMatch($$.DASH_DASH_STRING, cp, true)) {
            this._createCommentToken();
            this.state = COMMENT_START_STATE;
        } else if (this._consumeSequenceIfMatch($$.DOCTYPE_STRING, cp, false)) {
            this.state = DOCTYPE_STATE;
        } else if (this._consumeSequenceIfMatch($$.CDATA_START_STRING, cp, true)) {
            if (this.allowCDATA) {
                this.state = CDATA_SECTION_STATE;
            } else {
                this._err(ERR.cdataInHtmlContent);
                this._createCommentToken();
                this.currentToken.data = '[CDATA[';
                this.state = BOGUS_COMMENT_STATE;
            }
        }

        //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup
        //results are no longer valid and we will need to start over.
        else if (!this._ensureHibernation()) {
            this._err(ERR.incorrectlyOpenedComment);
            this._createCommentToken();
            this._reconsumeInState(BOGUS_COMMENT_STATE);
        }
    }

    // Comment start state
    //------------------------------------------------------------------
    [COMMENT_START_STATE](cp) {
        if (cp === $.HYPHEN_MINUS) {
            this.state = COMMENT_START_DASH_STATE;
        } else if (cp === $.GREATER_THAN_SIGN) {
            this._err(ERR.abruptClosingOfEmptyComment);
            this.state = DATA_STATE;
            this._emitCurrentToken();
        } else {
            this._reconsumeInState(COMMENT_STATE);
        }
    }

    // Comment start dash state
    //------------------------------------------------------------------
    [COMMENT_START_DASH_STATE](cp) {
        if (cp === $.HYPHEN_MINUS) {
            this.state = COMMENT_END_STATE;
        } else if (cp === $.GREATER_THAN_SIGN) {
            this._err(ERR.abruptClosingOfEmptyComment);
            this.state = DATA_STATE;
            this._emitCurrentToken();
        } else if (cp === $.EOF) {
            this._err(ERR.eofInComment);
            this._emitCurrentToken();
            this._emitEOFToken();
        } else {
            this.currentToken.data += '-';
            this._reconsumeInState(COMMENT_STATE);
        }
    }

    // Comment state
    //------------------------------------------------------------------
    [COMMENT_STATE](cp) {
        if (cp === $.HYPHEN_MINUS) {
            this.state = COMMENT_END_DASH_STATE;
        } else if (cp === $.LESS_THAN_SIGN) {
            this.currentToken.data += '<';
            this.state = COMMENT_LESS_THAN_SIGN_STATE;
        } else if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
            this.currentToken.data += unicode.REPLACEMENT_CHARACTER;
        } else if (cp === $.EOF) {
            this._err(ERR.eofInComment);
            this._emitCurrentToken();
            this._emitEOFToken();
        } else {
            this.currentToken.data += toChar(cp);
        }
    }

    // Comment less-than sign state
    //------------------------------------------------------------------
    [COMMENT_LESS_THAN_SIGN_STATE](cp) {
        if (cp === $.EXCLAMATION_MARK) {
            this.currentToken.data += '!';
            this.state = COMMENT_LESS_THAN_SIGN_BANG_STATE;
        } else if (cp === $.LESS_THAN_SIGN) {
            this.currentToken.data += '!';
        } else {
            this._reconsumeInState(COMMENT_STATE);
        }
    }

    // Comment less-than sign bang state
    //------------------------------------------------------------------
    [COMMENT_LESS_THAN_SIGN_BANG_STATE](cp) {
        if (cp === $.HYPHEN_MINUS) {
            this.state = COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE;
        } else {
            this._reconsumeInState(COMMENT_STATE);
        }
    }

    // Comment less-than sign bang dash state
    //------------------------------------------------------------------
    [COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE](cp) {
        if (cp === $.HYPHEN_MINUS) {
            this.state = COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE;
        } else {
            this._reconsumeInState(COMMENT_END_DASH_STATE);
        }
    }

    // Comment less-than sign bang dash dash state
    //------------------------------------------------------------------
    [COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE](cp) {
        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {
            this._err(ERR.nestedComment);
        }

        this._reconsumeInState(COMMENT_END_STATE);
    }

    // Comment end dash state
    //------------------------------------------------------------------
    [COMMENT_END_DASH_STATE](cp) {
        if (cp === $.HYPHEN_MINUS) {
            this.state = COMMENT_END_STATE;
        } else if (cp === $.EOF) {
            this._err(ERR.eofInComment);
            this._emitCurrentToken();
            this._emitEOFToken();
        } else {
            this.currentToken.data += '-';
            this._reconsumeInState(COMMENT_STATE);
        }
    }

    // Comment end state
    //------------------------------------------------------------------
    [COMMENT_END_STATE](cp) {
        if (cp === $.GREATER_THAN_SIGN) {
            this.state = DATA_STATE;
            this._emitCurrentToken();
        } else if (cp === $.EXCLAMATION_MARK) {
            this.state = COMMENT_END_BANG_STATE;
        } else if (cp === $.HYPHEN_MINUS) {
            this.currentToken.data += '-';
        } else if (cp === $.EOF) {
            this._err(ERR.eofInComment);
            this._emitCurrentToken();
            this._emitEOFToken();
        } else {
            this.currentToken.data += '--';
            this._reconsumeInState(COMMENT_STATE);
        }
    }

    // Comment end bang state
    //------------------------------------------------------------------
    [COMMENT_END_BANG_STATE](cp) {
        if (cp === $.HYPHEN_MINUS) {
            this.currentToken.data += '--!';
            this.state = COMMENT_END_DASH_STATE;
        } else if (cp === $.GREATER_THAN_SIGN) {
            this._err(ERR.incorrectlyClosedComment);
            this.state = DATA_STATE;
            this._emitCurrentToken();
        } else if (cp === $.EOF) {
            this._err(ERR.eofInComment);
            this._emitCurrentToken();
            this._emitEOFToken();
        } else {
            this.currentToken.data += '--!';
            this._reconsumeInState(COMMENT_STATE);
        }
    }

    // DOCTYPE state
    //------------------------------------------------------------------
    [DOCTYPE_STATE](cp) {
        if (isWhitespace(cp)) {
            this.state = BEFORE_DOCTYPE_NAME_STATE;
        } else if (cp === $.GREATER_THAN_SIGN) {
            this._reconsumeInState(BEFORE_DOCTYPE_NAME_STATE);
        } else if (cp === $.EOF) {
            this._err(ERR.eofInDoctype);
            this._createDoctypeToken(null);
            this.currentToken.forceQuirks = true;
            this._emitCurrentToken();
            this._emitEOFToken();
        } else {
            this._err(ERR.missingWhitespaceBeforeDoctypeName);
            this._reconsumeInState(BEFORE_DOCTYPE_NAME_STATE);
        }
    }

    // Before DOCTYPE name state
    //------------------------------------------------------------------
    [BEFORE_DOCTYPE_NAME_STATE](cp) {
        if (isWhitespace(cp)) {
            return;
        }

        if (isAsciiUpper(cp)) {
            this._createDoctypeToken(toAsciiLowerChar(cp));
            this.state = DOCTYPE_NAME_STATE;
        } else if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
            this._createDoctypeToken(unicode.REPLACEMENT_CHARACTER);
            this.state = DOCTYPE_NAME_STATE;
        } else if (cp === $.GREATER_THAN_SIGN) {
            this._err(ERR.missingDoctypeName);
            this._createDoctypeToken(null);
            this.currentToken.forceQuirks = true;
            this._emitCurrentToken();
            this.state = DATA_STATE;
        } else if (cp === $.EOF) {
            this._err(ERR.eofInDoctype);
            this._createDoctypeToken(null);
            this.currentToken.forceQuirks = true;
            this._emitCurrentToken();
            this._emitEOFToken();
        } else {
            this._createDoctypeToken(toChar(cp));
            this.state = DOCTYPE_NAME_STATE;
        }
    }

    // DOCTYPE name state
    //------------------------------------------------------------------
    [DOCTYPE_NAME_STATE](cp) {
        if (isWhitespace(cp)) {
            this.state = AFTER_DOCTYPE_NAME_STATE;
        } else if (cp === $.GREATER_THAN_SIGN) {
            this.state = DATA_STATE;
            this._emitCurrentToken();
        } else if (isAsciiUpper(cp)) {
            this.currentToken.name += toAsciiLowerChar(cp);
        } else if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
            this.currentToken.name += unicode.REPLACEMENT_CHARACTER;
        } else if (cp === $.EOF) {
            this._err(ERR.eofInDoctype);
            this.currentToken.forceQuirks = true;
            this._emitCurrentToken();
            this._emitEOFToken();
        } else {
            this.currentToken.name += toChar(cp);
        }
    }

    // After DOCTYPE name state
    //------------------------------------------------------------------
    [AFTER_DOCTYPE_NAME_STATE](cp) {
        if (isWhitespace(cp)) {
            return;
        }

        if (cp === $.GREATER_THAN_SIGN) {
            this.state = DATA_STATE;
            this._emitCurrentToken();
        } else if (cp === $.EOF) {
            this._err(ERR.eofInDoctype);
            this.currentToken.forceQuirks = true;
            this._emitCurrentToken();
            this._emitEOFToken();
        } else if (this._consumeSequenceIfMatch($$.PUBLIC_STRING, cp, false)) {
            this.state = AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE;
        } else if (this._consumeSequenceIfMatch($$.SYSTEM_STRING, cp, false)) {
            this.state = AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE;
        }
        //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup
        //results are no longer valid and we will need to start over.
        else if (!this._ensureHibernation()) {
            this._err(ERR.invalidCharacterSequenceAfterDoctypeName);
            this.currentToken.forceQuirks = true;
            this._reconsumeInState(BOGUS_DOCTYPE_STATE);
        }
    }

    // After DOCTYPE public keyword state
    //------------------------------------------------------------------
    [AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE](cp) {
        if (isWhitespace(cp)) {
            this.state = BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE;
        } else if (cp === $.QUOTATION_MARK) {
            this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);
            this.currentToken.publicId = '';
            this.state = DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE;
        } else if (cp === $.APOSTROPHE) {
            this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);
            this.currentToken.publicId = '';
            this.state = DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE;
        } else if (cp === $.GREATER_THAN_SIGN) {
            this._err(ERR.missingDoctypePublicIdentifier);
            this.currentToken.forceQuirks = true;
            this.state = DATA_STATE;
            this._emitCurrentToken();
        } else if (cp === $.EOF) {
            this._err(ERR.eofInDoctype);
            this.currentToken.forceQuirks = true;
            this._emitCurrentToken();
            this._emitEOFToken();
        } else {
            this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);
            this.currentToken.forceQuirks = true;
            this._reconsumeInState(BOGUS_DOCTYPE_STATE);
        }
    }

    // Before DOCTYPE public identifier state
    //------------------------------------------------------------------
    [BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE](cp) {
        if (isWhitespace(cp)) {
            return;
        }

        if (cp === $.QUOTATION_MARK) {
            this.currentToken.publicId = '';
            this.state = DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE;
        } else if (cp === $.APOSTROPHE) {
            this.currentToken.publicId = '';
            this.state = DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE;
        } else if (cp === $.GREATER_THAN_SIGN) {
            this._err(ERR.missingDoctypePublicIdentifier);
            this.currentToken.forceQuirks = true;
            this.state = DATA_STATE;
            this._emitCurrentToken();
        } else if (cp === $.EOF) {
            this._err(ERR.eofInDoctype);
            this.currentToken.forceQuirks = true;
            this._emitCurrentToken();
            this._emitEOFToken();
        } else {
            this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);
            this.currentToken.forceQuirks = true;
            this._reconsumeInState(BOGUS_DOCTYPE_STATE);
        }
    }

    // DOCTYPE public identifier (double-quoted) state
    //------------------------------------------------------------------
    [DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE](cp) {
        if (cp === $.QUOTATION_MARK) {
            this.state = AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE;
        } else if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
            this.currentToken.publicId += unicode.REPLACEMENT_CHARACTER;
        } else if (cp === $.GREATER_THAN_SIGN) {
            this._err(ERR.abruptDoctypePublicIdentifier);
            this.currentToken.forceQuirks = true;
            this._emitCurrentToken();
            this.state = DATA_STATE;
        } else if (cp === $.EOF) {
            this._err(ERR.eofInDoctype);
            this.currentToken.forceQuirks = true;
            this._emitCurrentToken();
            this._emitEOFToken();
        } else {
            this.currentToken.publicId += toChar(cp);
        }
    }

    // DOCTYPE public identifier (single-quoted) state
    //------------------------------------------------------------------
    [DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE](cp) {
        if (cp === $.APOSTROPHE) {
            this.state = AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE;
        } else if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
            this.currentToken.publicId += unicode.REPLACEMENT_CHARACTER;
        } else if (cp === $.GREATER_THAN_SIGN) {
            this._err(ERR.abruptDoctypePublicIdentifier);
            this.currentToken.forceQuirks = true;
            this._emitCurrentToken();
            this.state = DATA_STATE;
        } else if (cp === $.EOF) {
            this._err(ERR.eofInDoctype);
            this.currentToken.forceQuirks = true;
            this._emitCurrentToken();
            this._emitEOFToken();
        } else {
            this.currentToken.publicId += toChar(cp);
        }
    }

    // After DOCTYPE public identifier state
    //------------------------------------------------------------------
    [AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE](cp) {
        if (isWhitespace(cp)) {
            this.state = BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE;
        } else if (cp === $.GREATER_THAN_SIGN) {
            this.state = DATA_STATE;
            this._emitCurrentToken();
        } else if (cp === $.QUOTATION_MARK) {
            this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);
            this.currentToken.systemId = '';
            this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;
        } else if (cp === $.APOSTROPHE) {
            this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);
            this.currentToken.systemId = '';
            this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;
        } else if (cp === $.EOF) {
            this._err(ERR.eofInDoctype);
            this.currentToken.forceQuirks = true;
            this._emitCurrentToken();
            this._emitEOFToken();
        } else {
            this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);
            this.currentToken.forceQuirks = true;
            this._reconsumeInState(BOGUS_DOCTYPE_STATE);
        }
    }

    // Between DOCTYPE public and system identifiers state
    //------------------------------------------------------------------
    [BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE](cp) {
        if (isWhitespace(cp)) {
            return;
        }

        if (cp === $.GREATER_THAN_SIGN) {
            this._emitCurrentToken();
            this.state = DATA_STATE;
        } else if (cp === $.QUOTATION_MARK) {
            this.currentToken.systemId = '';
            this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;
        } else if (cp === $.APOSTROPHE) {
            this.currentToken.systemId = '';
            this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;
        } else if (cp === $.EOF) {
            this._err(ERR.eofInDoctype);
            this.currentToken.forceQuirks = true;
            this._emitCurrentToken();
            this._emitEOFToken();
        } else {
            this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);
            this.currentToken.forceQuirks = true;
            this._reconsumeInState(BOGUS_DOCTYPE_STATE);
        }
    }

    // After DOCTYPE system keyword state
    //------------------------------------------------------------------
    [AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE](cp) {
        if (isWhitespace(cp)) {
            this.state = BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE;
        } else if (cp === $.QUOTATION_MARK) {
            this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);
            this.currentToken.systemId = '';
            this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;
        } else if (cp === $.APOSTROPHE) {
            this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);
            this.currentToken.systemId = '';
            this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;
        } else if (cp === $.GREATER_THAN_SIGN) {
            this._err(ERR.missingDoctypeSystemIdentifier);
            this.currentToken.forceQuirks = true;
            this.state = DATA_STATE;
            this._emitCurrentToken();
        } else if (cp === $.EOF) {
            this._err(ERR.eofInDoctype);
            this.currentToken.forceQuirks = true;
            this._emitCurrentToken();
            this._emitEOFToken();
        } else {
            this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);
            this.currentToken.forceQuirks = true;
            this._reconsumeInState(BOGUS_DOCTYPE_STATE);
        }
    }

    // Before DOCTYPE system identifier state
    //------------------------------------------------------------------
    [BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE](cp) {
        if (isWhitespace(cp)) {
            return;
        }

        if (cp === $.QUOTATION_MARK) {
            this.currentToken.systemId = '';
            this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;
        } else if (cp === $.APOSTROPHE) {
            this.currentToken.systemId = '';
            this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;
        } else if (cp === $.GREATER_THAN_SIGN) {
            this._err(ERR.missingDoctypeSystemIdentifier);
            this.currentToken.forceQuirks = true;
            this.state = DATA_STATE;
            this._emitCurrentToken();
        } else if (cp === $.EOF) {
            this._err(ERR.eofInDoctype);
            this.currentToken.forceQuirks = true;
            this._emitCurrentToken();
            this._emitEOFToken();
        } else {
            this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);
            this.currentToken.forceQuirks = true;
            this._reconsumeInState(BOGUS_DOCTYPE_STATE);
        }
    }

    // DOCTYPE system identifier (double-quoted) state
    //------------------------------------------------------------------
    [DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE](cp) {
        if (cp === $.QUOTATION_MARK) {
            this.state = AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE;
        } else if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
            this.currentToken.systemId += unicode.REPLACEMENT_CHARACTER;
        } else if (cp === $.GREATER_THAN_SIGN) {
            this._err(ERR.abruptDoctypeSystemIdentifier);
            this.currentToken.forceQuirks = true;
            this._emitCurrentToken();
            this.state = DATA_STATE;
        } else if (cp === $.EOF) {
            this._err(ERR.eofInDoctype);
            this.currentToken.forceQuirks = true;
            this._emitCurrentToken();
            this._emitEOFToken();
        } else {
            this.currentToken.systemId += toChar(cp);
        }
    }

    // DOCTYPE system identifier (single-quoted) state
    //------------------------------------------------------------------
    [DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE](cp) {
        if (cp === $.APOSTROPHE) {
            this.state = AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE;
        } else if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
            this.currentToken.systemId += unicode.REPLACEMENT_CHARACTER;
        } else if (cp === $.GREATER_THAN_SIGN) {
            this._err(ERR.abruptDoctypeSystemIdentifier);
            this.currentToken.forceQuirks = true;
            this._emitCurrentToken();
            this.state = DATA_STATE;
        } else if (cp === $.EOF) {
            this._err(ERR.eofInDoctype);
            this.currentToken.forceQuirks = true;
            this._emitCurrentToken();
            this._emitEOFToken();
        } else {
            this.currentToken.systemId += toChar(cp);
        }
    }

    // After DOCTYPE system identifier state
    //------------------------------------------------------------------
    [AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE](cp) {
        if (isWhitespace(cp)) {
            return;
        }

        if (cp === $.GREATER_THAN_SIGN) {
            this._emitCurrentToken();
            this.state = DATA_STATE;
        } else if (cp === $.EOF) {
            this._err(ERR.eofInDoctype);
            this.currentToken.forceQuirks = true;
            this._emitCurrentToken();
            this._emitEOFToken();
        } else {
            this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);
            this._reconsumeInState(BOGUS_DOCTYPE_STATE);
        }
    }

    // Bogus DOCTYPE state
    //------------------------------------------------------------------
    [BOGUS_DOCTYPE_STATE](cp) {
        if (cp === $.GREATER_THAN_SIGN) {
            this._emitCurrentToken();
            this.state = DATA_STATE;
        } else if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
        } else if (cp === $.EOF) {
            this._emitCurrentToken();
            this._emitEOFToken();
        }
    }

    // CDATA section state
    //------------------------------------------------------------------
    [CDATA_SECTION_STATE](cp) {
        if (cp === $.RIGHT_SQUARE_BRACKET) {
            this.state = CDATA_SECTION_BRACKET_STATE;
        } else if (cp === $.EOF) {
            this._err(ERR.eofInCdata);
            this._emitEOFToken();
        } else {
            this._emitCodePoint(cp);
        }
    }

    // CDATA section bracket state
    //------------------------------------------------------------------
    [CDATA_SECTION_BRACKET_STATE](cp) {
        if (cp === $.RIGHT_SQUARE_BRACKET) {
            this.state = CDATA_SECTION_END_STATE;
        } else {
            this._emitChars(']');
            this._reconsumeInState(CDATA_SECTION_STATE);
        }
    }

    // CDATA section end state
    //------------------------------------------------------------------
    [CDATA_SECTION_END_STATE](cp) {
        if (cp === $.GREATER_THAN_SIGN) {
            this.state = DATA_STATE;
        } else if (cp === $.RIGHT_SQUARE_BRACKET) {
            this._emitChars(']');
        } else {
            this._emitChars(']]');
            this._reconsumeInState(CDATA_SECTION_STATE);
        }
    }

    // Character reference state
    //------------------------------------------------------------------
    [CHARACTER_REFERENCE_STATE](cp) {
        this.tempBuff = [$.AMPERSAND];

        if (cp === $.NUMBER_SIGN) {
            this.tempBuff.push(cp);
            this.state = NUMERIC_CHARACTER_REFERENCE_STATE;
        } else if (isAsciiAlphaNumeric(cp)) {
            this._reconsumeInState(NAMED_CHARACTER_REFERENCE_STATE);
        } else {
            this._flushCodePointsConsumedAsCharacterReference();
            this._reconsumeInState(this.returnState);
        }
    }

    // Named character reference state
    //------------------------------------------------------------------
    [NAMED_CHARACTER_REFERENCE_STATE](cp) {
        const matchResult = this._matchNamedCharacterReference(cp);

        //NOTE: matching can be abrupted by hibernation. In that case match
        //results are no longer valid and we will need to start over.
        if (this._ensureHibernation()) {
            this.tempBuff = [$.AMPERSAND];
        } else if (matchResult) {
            const withSemicolon = this.tempBuff[this.tempBuff.length - 1] === $.SEMICOLON;

            if (!this._isCharacterReferenceAttributeQuirk(withSemicolon)) {
                if (!withSemicolon) {
                    this._errOnNextCodePoint(ERR.missingSemicolonAfterCharacterReference);
                }

                this.tempBuff = matchResult;
            }

            this._flushCodePointsConsumedAsCharacterReference();
            this.state = this.returnState;
        } else {
            this._flushCodePointsConsumedAsCharacterReference();
            this.state = AMBIGUOUS_AMPERSAND_STATE;
        }
    }

    // Ambiguos ampersand state
    //------------------------------------------------------------------
    [AMBIGUOUS_AMPERSAND_STATE](cp) {
        if (isAsciiAlphaNumeric(cp)) {
            if (this._isCharacterReferenceInAttribute()) {
                this.currentAttr.value += toChar(cp);
            } else {
                this._emitCodePoint(cp);
            }
        } else {
            if (cp === $.SEMICOLON) {
                this._err(ERR.unknownNamedCharacterReference);
            }

            this._reconsumeInState(this.returnState);
        }
    }

    // Numeric character reference state
    //------------------------------------------------------------------
    [NUMERIC_CHARACTER_REFERENCE_STATE](cp) {
        this.charRefCode = 0;

        if (cp === $.LATIN_SMALL_X || cp === $.LATIN_CAPITAL_X) {
            this.tempBuff.push(cp);
            this.state = HEXADEMICAL_CHARACTER_REFERENCE_START_STATE;
        } else {
            this._reconsumeInState(DECIMAL_CHARACTER_REFERENCE_START_STATE);
        }
    }

    // Hexademical character reference start state
    //------------------------------------------------------------------
    [HEXADEMICAL_CHARACTER_REFERENCE_START_STATE](cp) {
        if (isAsciiHexDigit(cp)) {
            this._reconsumeInState(HEXADEMICAL_CHARACTER_REFERENCE_STATE);
        } else {
            this._err(ERR.absenceOfDigitsInNumericCharacterReference);
            this._flushCodePointsConsumedAsCharacterReference();
            this._reconsumeInState(this.returnState);
        }
    }

    // Decimal character reference start state
    //------------------------------------------------------------------
    [DECIMAL_CHARACTER_REFERENCE_START_STATE](cp) {
        if (isAsciiDigit(cp)) {
            this._reconsumeInState(DECIMAL_CHARACTER_REFERENCE_STATE);
        } else {
            this._err(ERR.absenceOfDigitsInNumericCharacterReference);
            this._flushCodePointsConsumedAsCharacterReference();
            this._reconsumeInState(this.returnState);
        }
    }

    // Hexademical character reference state
    //------------------------------------------------------------------
    [HEXADEMICAL_CHARACTER_REFERENCE_STATE](cp) {
        if (isAsciiUpperHexDigit(cp)) {
            this.charRefCode = this.charRefCode * 16 + cp - 0x37;
        } else if (isAsciiLowerHexDigit(cp)) {
            this.charRefCode = this.charRefCode * 16 + cp - 0x57;
        } else if (isAsciiDigit(cp)) {
            this.charRefCode = this.charRefCode * 16 + cp - 0x30;
        } else if (cp === $.SEMICOLON) {
            this.state = NUMERIC_CHARACTER_REFERENCE_END_STATE;
        } else {
            this._err(ERR.missingSemicolonAfterCharacterReference);
            this._reconsumeInState(NUMERIC_CHARACTER_REFERENCE_END_STATE);
        }
    }

    // Decimal character reference state
    //------------------------------------------------------------------
    [DECIMAL_CHARACTER_REFERENCE_STATE](cp) {
        if (isAsciiDigit(cp)) {
            this.charRefCode = this.charRefCode * 10 + cp - 0x30;
        } else if (cp === $.SEMICOLON) {
            this.state = NUMERIC_CHARACTER_REFERENCE_END_STATE;
        } else {
            this._err(ERR.missingSemicolonAfterCharacterReference);
            this._reconsumeInState(NUMERIC_CHARACTER_REFERENCE_END_STATE);
        }
    }

    // Numeric character reference end state
    //------------------------------------------------------------------
    [NUMERIC_CHARACTER_REFERENCE_END_STATE]() {
        if (this.charRefCode === $.NULL) {
            this._err(ERR.nullCharacterReference);
            this.charRefCode = $.REPLACEMENT_CHARACTER;
        } else if (this.charRefCode > 0x10ffff) {
            this._err(ERR.characterReferenceOutsideUnicodeRange);
            this.charRefCode = $.REPLACEMENT_CHARACTER;
        } else if (unicode.isSurrogate(this.charRefCode)) {
            this._err(ERR.surrogateCharacterReference);
            this.charRefCode = $.REPLACEMENT_CHARACTER;
        } else if (unicode.isUndefinedCodePoint(this.charRefCode)) {
            this._err(ERR.noncharacterCharacterReference);
        } else if (unicode.isControlCodePoint(this.charRefCode) || this.charRefCode === $.CARRIAGE_RETURN) {
            this._err(ERR.controlCharacterReference);

            const replacement = C1_CONTROLS_REFERENCE_REPLACEMENTS[this.charRefCode];

            if (replacement) {
                this.charRefCode = replacement;
            }
        }

        this.tempBuff = [this.charRefCode];

        this._flushCodePointsConsumedAsCharacterReference();
        this._reconsumeInState(this.returnState);
    }
}

//Token types
Tokenizer.CHARACTER_TOKEN = 'CHARACTER_TOKEN';
Tokenizer.NULL_CHARACTER_TOKEN = 'NULL_CHARACTER_TOKEN';
Tokenizer.WHITESPACE_CHARACTER_TOKEN = 'WHITESPACE_CHARACTER_TOKEN';
Tokenizer.START_TAG_TOKEN = 'START_TAG_TOKEN';
Tokenizer.END_TAG_TOKEN = 'END_TAG_TOKEN';
Tokenizer.COMMENT_TOKEN = 'COMMENT_TOKEN';
Tokenizer.DOCTYPE_TOKEN = 'DOCTYPE_TOKEN';
Tokenizer.EOF_TOKEN = 'EOF_TOKEN';
Tokenizer.HIBERNATION_TOKEN = 'HIBERNATION_TOKEN';

//Tokenizer initial states for different modes
Tokenizer.MODE = {
    DATA: DATA_STATE,
    RCDATA: RCDATA_STATE,
    RAWTEXT: RAWTEXT_STATE,
    SCRIPT_DATA: SCRIPT_DATA_STATE,
    PLAINTEXT: PLAINTEXT_STATE
};

//Static
Tokenizer.getTokenAttr = function(token, attrName) {
    for (let i = token.attrs.length - 1; i >= 0; i--) {
        if (token.attrs[i].name === attrName) {
            return token.attrs[i].value;
        }
    }

    return null;
};

module.exports = Tokenizer;


/***/ }),

/***/ 56667:
/***/ ((module) => {

"use strict";


//NOTE: this file contains auto-generated array mapped radix tree that is used for the named entity references consumption
//(details: https://github.com/inikulin/parse5/tree/master/scripts/generate-named-entity-data/README.md)
module.exports = new Uint16Array([4,52,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,106,303,412,810,1432,1701,1796,1987,2114,2360,2420,2484,3170,3251,4140,4393,4575,4610,5106,5512,5728,6117,6274,6315,6345,6427,6516,7002,7910,8733,9323,9870,10170,10631,10893,11318,11386,11467,12773,13092,14474,14922,15448,15542,16419,17666,18166,18611,19004,19095,19298,19397,4,16,69,77,97,98,99,102,103,108,109,110,111,112,114,115,116,117,140,150,158,169,176,194,199,210,216,222,226,242,256,266,283,294,108,105,103,5,198,1,59,148,1,198,80,5,38,1,59,156,1,38,99,117,116,101,5,193,1,59,167,1,193,114,101,118,101,59,1,258,4,2,105,121,182,191,114,99,5,194,1,59,189,1,194,59,1,1040,114,59,3,55349,56580,114,97,118,101,5,192,1,59,208,1,192,112,104,97,59,1,913,97,99,114,59,1,256,100,59,1,10835,4,2,103,112,232,237,111,110,59,1,260,102,59,3,55349,56632,112,108,121,70,117,110,99,116,105,111,110,59,1,8289,105,110,103,5,197,1,59,264,1,197,4,2,99,115,272,277,114,59,3,55349,56476,105,103,110,59,1,8788,105,108,100,101,5,195,1,59,292,1,195,109,108,5,196,1,59,301,1,196,4,8,97,99,101,102,111,114,115,117,321,350,354,383,388,394,400,405,4,2,99,114,327,336,107,115,108,97,115,104,59,1,8726,4,2,118,119,342,345,59,1,10983,101,100,59,1,8966,121,59,1,1041,4,3,99,114,116,362,369,379,97,117,115,101,59,1,8757,110,111,117,108,108,105,115,59,1,8492,97,59,1,914,114,59,3,55349,56581,112,102,59,3,55349,56633,101,118,101,59,1,728,99,114,59,1,8492,109,112,101,113,59,1,8782,4,14,72,79,97,99,100,101,102,104,105,108,111,114,115,117,442,447,456,504,542,547,569,573,577,616,678,784,790,796,99,121,59,1,1063,80,89,5,169,1,59,454,1,169,4,3,99,112,121,464,470,497,117,116,101,59,1,262,4,2,59,105,476,478,1,8914,116,97,108,68,105,102,102,101,114,101,110,116,105,97,108,68,59,1,8517,108,101,121,115,59,1,8493,4,4,97,101,105,111,514,520,530,535,114,111,110,59,1,268,100,105,108,5,199,1,59,528,1,199,114,99,59,1,264,110,105,110,116,59,1,8752,111,116,59,1,266,4,2,100,110,553,560,105,108,108,97,59,1,184,116,101,114,68,111,116,59,1,183,114,59,1,8493,105,59,1,935,114,99,108,101,4,4,68,77,80,84,591,596,603,609,111,116,59,1,8857,105,110,117,115,59,1,8854,108,117,115,59,1,8853,105,109,101,115,59,1,8855,111,4,2,99,115,623,646,107,119,105,115,101,67,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59,1,8754,101,67,117,114,108,121,4,2,68,81,658,671,111,117,98,108,101,81,117,111,116,101,59,1,8221,117,111,116,101,59,1,8217,4,4,108,110,112,117,688,701,736,753,111,110,4,2,59,101,696,698,1,8759,59,1,10868,4,3,103,105,116,709,717,722,114,117,101,110,116,59,1,8801,110,116,59,1,8751,111,117,114,73,110,116,101,103,114,97,108,59,1,8750,4,2,102,114,742,745,59,1,8450,111,100,117,99,116,59,1,8720,110,116,101,114,67,108,111,99,107,119,105,115,101,67,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59,1,8755,111,115,115,59,1,10799,99,114,59,3,55349,56478,112,4,2,59,67,803,805,1,8915,97,112,59,1,8781,4,11,68,74,83,90,97,99,101,102,105,111,115,834,850,855,860,865,888,903,916,921,1011,1415,4,2,59,111,840,842,1,8517,116,114,97,104,100,59,1,10513,99,121,59,1,1026,99,121,59,1,1029,99,121,59,1,1039,4,3,103,114,115,873,879,883,103,101,114,59,1,8225,114,59,1,8609,104,118,59,1,10980,4,2,97,121,894,900,114,111,110,59,1,270,59,1,1044,108,4,2,59,116,910,912,1,8711,97,59,1,916,114,59,3,55349,56583,4,2,97,102,927,998,4,2,99,109,933,992,114,105,116,105,99,97,108,4,4,65,68,71,84,950,957,978,985,99,117,116,101,59,1,180,111,4,2,116,117,964,967,59,1,729,98,108,101,65,99,117,116,101,59,1,733,114,97,118,101,59,1,96,105,108,100,101,59,1,732,111,110,100,59,1,8900,102,101,114,101,110,116,105,97,108,68,59,1,8518,4,4,112,116,117,119,1021,1026,1048,1249,102,59,3,55349,56635,4,3,59,68,69,1034,1036,1041,1,168,111,116,59,1,8412,113,117,97,108,59,1,8784,98,108,101,4,6,67,68,76,82,85,86,1065,1082,1101,1189,1211,1236,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59,1,8751,111,4,2,116,119,1089,1092,59,1,168,110,65,114,114,111,119,59,1,8659,4,2,101,111,1107,1141,102,116,4,3,65,82,84,1117,1124,1136,114,114,111,119,59,1,8656,105,103,104,116,65,114,114,111,119,59,1,8660,101,101,59,1,10980,110,103,4,2,76,82,1149,1177,101,102,116,4,2,65,82,1158,1165,114,114,111,119,59,1,10232,105,103,104,116,65,114,114,111,119,59,1,10234,105,103,104,116,65,114,114,111,119,59,1,10233,105,103,104,116,4,2,65,84,1199,1206,114,114,111,119,59,1,8658,101,101,59,1,8872,112,4,2,65,68,1218,1225,114,114,111,119,59,1,8657,111,119,110,65,114,114,111,119,59,1,8661,101,114,116,105,99,97,108,66,97,114,59,1,8741,110,4,6,65,66,76,82,84,97,1264,1292,1299,1352,1391,1408,114,114,111,119,4,3,59,66,85,1276,1278,1283,1,8595,97,114,59,1,10515,112,65,114,114,111,119,59,1,8693,114,101,118,101,59,1,785,101,102,116,4,3,82,84,86,1310,1323,1334,105,103,104,116,86,101,99,116,111,114,59,1,10576,101,101,86,101,99,116,111,114,59,1,10590,101,99,116,111,114,4,2,59,66,1345,1347,1,8637,97,114,59,1,10582,105,103,104,116,4,2,84,86,1362,1373,101,101,86,101,99,116,111,114,59,1,10591,101,99,116,111,114,4,2,59,66,1384,1386,1,8641,97,114,59,1,10583,101,101,4,2,59,65,1399,1401,1,8868,114,114,111,119,59,1,8615,114,114,111,119,59,1,8659,4,2,99,116,1421,1426,114,59,3,55349,56479,114,111,107,59,1,272,4,16,78,84,97,99,100,102,103,108,109,111,112,113,115,116,117,120,1466,1470,1478,1489,1515,1520,1525,1536,1544,1593,1609,1617,1650,1664,1668,1677,71,59,1,330,72,5,208,1,59,1476,1,208,99,117,116,101,5,201,1,59,1487,1,201,4,3,97,105,121,1497,1503,1512,114,111,110,59,1,282,114,99,5,202,1,59,1510,1,202,59,1,1069,111,116,59,1,278,114,59,3,55349,56584,114,97,118,101,5,200,1,59,1534,1,200,101,109,101,110,116,59,1,8712,4,2,97,112,1550,1555,99,114,59,1,274,116,121,4,2,83,86,1563,1576,109,97,108,108,83,113,117,97,114,101,59,1,9723,101,114,121,83,109,97,108,108,83,113,117,97,114,101,59,1,9643,4,2,103,112,1599,1604,111,110,59,1,280,102,59,3,55349,56636,115,105,108,111,110,59,1,917,117,4,2,97,105,1624,1640,108,4,2,59,84,1631,1633,1,10869,105,108,100,101,59,1,8770,108,105,98,114,105,117,109,59,1,8652,4,2,99,105,1656,1660,114,59,1,8496,109,59,1,10867,97,59,1,919,109,108,5,203,1,59,1675,1,203,4,2,105,112,1683,1689,115,116,115,59,1,8707,111,110,101,110,116,105,97,108,69,59,1,8519,4,5,99,102,105,111,115,1713,1717,1722,1762,1791,121,59,1,1060,114,59,3,55349,56585,108,108,101,100,4,2,83,86,1732,1745,109,97,108,108,83,113,117,97,114,101,59,1,9724,101,114,121,83,109,97,108,108,83,113,117,97,114,101,59,1,9642,4,3,112,114,117,1770,1775,1781,102,59,3,55349,56637,65,108,108,59,1,8704,114,105,101,114,116,114,102,59,1,8497,99,114,59,1,8497,4,12,74,84,97,98,99,100,102,103,111,114,115,116,1822,1827,1834,1848,1855,1877,1882,1887,1890,1896,1978,1984,99,121,59,1,1027,5,62,1,59,1832,1,62,109,109,97,4,2,59,100,1843,1845,1,915,59,1,988,114,101,118,101,59,1,286,4,3,101,105,121,1863,1869,1874,100,105,108,59,1,290,114,99,59,1,284,59,1,1043,111,116,59,1,288,114,59,3,55349,56586,59,1,8921,112,102,59,3,55349,56638,101,97,116,101,114,4,6,69,70,71,76,83,84,1915,1933,1944,1953,1959,1971,113,117,97,108,4,2,59,76,1925,1927,1,8805,101,115,115,59,1,8923,117,108,108,69,113,117,97,108,59,1,8807,114,101,97,116,101,114,59,1,10914,101,115,115,59,1,8823,108,97,110,116,69,113,117,97,108,59,1,10878,105,108,100,101,59,1,8819,99,114,59,3,55349,56482,59,1,8811,4,8,65,97,99,102,105,111,115,117,2005,2012,2026,2032,2036,2049,2073,2089,82,68,99,121,59,1,1066,4,2,99,116,2018,2023,101,107,59,1,711,59,1,94,105,114,99,59,1,292,114,59,1,8460,108,98,101,114,116,83,112,97,99,101,59,1,8459,4,2,112,114,2055,2059,102,59,1,8461,105,122,111,110,116,97,108,76,105,110,101,59,1,9472,4,2,99,116,2079,2083,114,59,1,8459,114,111,107,59,1,294,109,112,4,2,68,69,2097,2107,111,119,110,72,117,109,112,59,1,8782,113,117,97,108,59,1,8783,4,14,69,74,79,97,99,100,102,103,109,110,111,115,116,117,2144,2149,2155,2160,2171,2189,2194,2198,2209,2245,2307,2329,2334,2341,99,121,59,1,1045,108,105,103,59,1,306,99,121,59,1,1025,99,117,116,101,5,205,1,59,2169,1,205,4,2,105,121,2177,2186,114,99,5,206,1,59,2184,1,206,59,1,1048,111,116,59,1,304,114,59,1,8465,114,97,118,101,5,204,1,59,2207,1,204,4,3,59,97,112,2217,2219,2238,1,8465,4,2,99,103,2225,2229,114,59,1,298,105,110,97,114,121,73,59,1,8520,108,105,101,115,59,1,8658,4,2,116,118,2251,2281,4,2,59,101,2257,2259,1,8748,4,2,103,114,2265,2271,114,97,108,59,1,8747,115,101,99,116,105,111,110,59,1,8898,105,115,105,98,108,101,4,2,67,84,2293,2300,111,109,109,97,59,1,8291,105,109,101,115,59,1,8290,4,3,103,112,116,2315,2320,2325,111,110,59,1,302,102,59,3,55349,56640,97,59,1,921,99,114,59,1,8464,105,108,100,101,59,1,296,4,2,107,109,2347,2352,99,121,59,1,1030,108,5,207,1,59,2358,1,207,4,5,99,102,111,115,117,2372,2386,2391,2397,2414,4,2,105,121,2378,2383,114,99,59,1,308,59,1,1049,114,59,3,55349,56589,112,102,59,3,55349,56641,4,2,99,101,2403,2408,114,59,3,55349,56485,114,99,121,59,1,1032,107,99,121,59,1,1028,4,7,72,74,97,99,102,111,115,2436,2441,2446,2452,2467,2472,2478,99,121,59,1,1061,99,121,59,1,1036,112,112,97,59,1,922,4,2,101,121,2458,2464,100,105,108,59,1,310,59,1,1050,114,59,3,55349,56590,112,102,59,3,55349,56642,99,114,59,3,55349,56486,4,11,74,84,97,99,101,102,108,109,111,115,116,2508,2513,2520,2562,2585,2981,2986,3004,3011,3146,3167,99,121,59,1,1033,5,60,1,59,2518,1,60,4,5,99,109,110,112,114,2532,2538,2544,2548,2558,117,116,101,59,1,313,98,100,97,59,1,923,103,59,1,10218,108,97,99,101,116,114,102,59,1,8466,114,59,1,8606,4,3,97,101,121,2570,2576,2582,114,111,110,59,1,317,100,105,108,59,1,315,59,1,1051,4,2,102,115,2591,2907,116,4,10,65,67,68,70,82,84,85,86,97,114,2614,2663,2672,2728,2735,2760,2820,2870,2888,2895,4,2,110,114,2620,2633,103,108,101,66,114,97,99,107,101,116,59,1,10216,114,111,119,4,3,59,66,82,2644,2646,2651,1,8592,97,114,59,1,8676,105,103,104,116,65,114,114,111,119,59,1,8646,101,105,108,105,110,103,59,1,8968,111,4,2,117,119,2679,2692,98,108,101,66,114,97,99,107,101,116,59,1,10214,110,4,2,84,86,2699,2710,101,101,86,101,99,116,111,114,59,1,10593,101,99,116,111,114,4,2,59,66,2721,2723,1,8643,97,114,59,1,10585,108,111,111,114,59,1,8970,105,103,104,116,4,2,65,86,2745,2752,114,114,111,119,59,1,8596,101,99,116,111,114,59,1,10574,4,2,101,114,2766,2792,101,4,3,59,65,86,2775,2777,2784,1,8867,114,114,111,119,59,1,8612,101,99,116,111,114,59,1,10586,105,97,110,103,108,101,4,3,59,66,69,2806,2808,2813,1,8882,97,114,59,1,10703,113,117,97,108,59,1,8884,112,4,3,68,84,86,2829,2841,2852,111,119,110,86,101,99,116,111,114,59,1,10577,101,101,86,101,99,116,111,114,59,1,10592,101,99,116,111,114,4,2,59,66,2863,2865,1,8639,97,114,59,1,10584,101,99,116,111,114,4,2,59,66,2881,2883,1,8636,97,114,59,1,10578,114,114,111,119,59,1,8656,105,103,104,116,97,114,114,111,119,59,1,8660,115,4,6,69,70,71,76,83,84,2922,2936,2947,2956,2962,2974,113,117,97,108,71,114,101,97,116,101,114,59,1,8922,117,108,108,69,113,117,97,108,59,1,8806,114,101,97,116,101,114,59,1,8822,101,115,115,59,1,10913,108,97,110,116,69,113,117,97,108,59,1,10877,105,108,100,101,59,1,8818,114,59,3,55349,56591,4,2,59,101,2992,2994,1,8920,102,116,97,114,114,111,119,59,1,8666,105,100,111,116,59,1,319,4,3,110,112,119,3019,3110,3115,103,4,4,76,82,108,114,3030,3058,3070,3098,101,102,116,4,2,65,82,3039,3046,114,114,111,119,59,1,10229,105,103,104,116,65,114,114,111,119,59,1,10231,105,103,104,116,65,114,114,111,119,59,1,10230,101,102,116,4,2,97,114,3079,3086,114,114,111,119,59,1,10232,105,103,104,116,97,114,114,111,119,59,1,10234,105,103,104,116,97,114,114,111,119,59,1,10233,102,59,3,55349,56643,101,114,4,2,76,82,3123,3134,101,102,116,65,114,114,111,119,59,1,8601,105,103,104,116,65,114,114,111,119,59,1,8600,4,3,99,104,116,3154,3158,3161,114,59,1,8466,59,1,8624,114,111,107,59,1,321,59,1,8810,4,8,97,99,101,102,105,111,115,117,3188,3192,3196,3222,3227,3237,3243,3248,112,59,1,10501,121,59,1,1052,4,2,100,108,3202,3213,105,117,109,83,112,97,99,101,59,1,8287,108,105,110,116,114,102,59,1,8499,114,59,3,55349,56592,110,117,115,80,108,117,115,59,1,8723,112,102,59,3,55349,56644,99,114,59,1,8499,59,1,924,4,9,74,97,99,101,102,111,115,116,117,3271,3276,3283,3306,3422,3427,4120,4126,4137,99,121,59,1,1034,99,117,116,101,59,1,323,4,3,97,101,121,3291,3297,3303,114,111,110,59,1,327,100,105,108,59,1,325,59,1,1053,4,3,103,115,119,3314,3380,3415,97,116,105,118,101,4,3,77,84,86,3327,3340,3365,101,100,105,117,109,83,112,97,99,101,59,1,8203,104,105,4,2,99,110,3348,3357,107,83,112,97,99,101,59,1,8203,83,112,97,99,101,59,1,8203,101,114,121,84,104,105,110,83,112,97,99,101,59,1,8203,116,101,100,4,2,71,76,3389,3405,114,101,97,116,101,114,71,114,101,97,116,101,114,59,1,8811,101,115,115,76,101,115,115,59,1,8810,76,105,110,101,59,1,10,114,59,3,55349,56593,4,4,66,110,112,116,3437,3444,3460,3464,114,101,97,107,59,1,8288,66,114,101,97,107,105,110,103,83,112,97,99,101,59,1,160,102,59,1,8469,4,13,59,67,68,69,71,72,76,78,80,82,83,84,86,3492,3494,3517,3536,3578,3657,3685,3784,3823,3860,3915,4066,4107,1,10988,4,2,111,117,3500,3510,110,103,114,117,101,110,116,59,1,8802,112,67,97,112,59,1,8813,111,117,98,108,101,86,101,114,116,105,99,97,108,66,97,114,59,1,8742,4,3,108,113,120,3544,3552,3571,101,109,101,110,116,59,1,8713,117,97,108,4,2,59,84,3561,3563,1,8800,105,108,100,101,59,3,8770,824,105,115,116,115,59,1,8708,114,101,97,116,101,114,4,7,59,69,70,71,76,83,84,3600,3602,3609,3621,3631,3637,3650,1,8815,113,117,97,108,59,1,8817,117,108,108,69,113,117,97,108,59,3,8807,824,114,101,97,116,101,114,59,3,8811,824,101,115,115,59,1,8825,108,97,110,116,69,113,117,97,108,59,3,10878,824,105,108,100,101,59,1,8821,117,109,112,4,2,68,69,3666,3677,111,119,110,72,117,109,112,59,3,8782,824,113,117,97,108,59,3,8783,824,101,4,2,102,115,3692,3724,116,84,114,105,97,110,103,108,101,4,3,59,66,69,3709,3711,3717,1,8938,97,114,59,3,10703,824,113,117,97,108,59,1,8940,115,4,6,59,69,71,76,83,84,3739,3741,3748,3757,3764,3777,1,8814,113,117,97,108,59,1,8816,114,101,97,116,101,114,59,1,8824,101,115,115,59,3,8810,824,108,97,110,116,69,113,117,97,108,59,3,10877,824,105,108,100,101,59,1,8820,101,115,116,101,100,4,2,71,76,3795,3812,114,101,97,116,101,114,71,114,101,97,116,101,114,59,3,10914,824,101,115,115,76,101,115,115,59,3,10913,824,114,101,99,101,100,101,115,4,3,59,69,83,3838,3840,3848,1,8832,113,117,97,108,59,3,10927,824,108,97,110,116,69,113,117,97,108,59,1,8928,4,2,101,105,3866,3881,118,101,114,115,101,69,108,101,109,101,110,116,59,1,8716,103,104,116,84,114,105,97,110,103,108,101,4,3,59,66,69,3900,3902,3908,1,8939,97,114,59,3,10704,824,113,117,97,108,59,1,8941,4,2,113,117,3921,3973,117,97,114,101,83,117,4,2,98,112,3933,3952,115,101,116,4,2,59,69,3942,3945,3,8847,824,113,117,97,108,59,1,8930,101,114,115,101,116,4,2,59,69,3963,3966,3,8848,824,113,117,97,108,59,1,8931,4,3,98,99,112,3981,4000,4045,115,101,116,4,2,59,69,3990,3993,3,8834,8402,113,117,97,108,59,1,8840,99,101,101,100,115,4,4,59,69,83,84,4015,4017,4025,4037,1,8833,113,117,97,108,59,3,10928,824,108,97,110,116,69,113,117,97,108,59,1,8929,105,108,100,101,59,3,8831,824,101,114,115,101,116,4,2,59,69,4056,4059,3,8835,8402,113,117,97,108,59,1,8841,105,108,100,101,4,4,59,69,70,84,4080,4082,4089,4100,1,8769,113,117,97,108,59,1,8772,117,108,108,69,113,117,97,108,59,1,8775,105,108,100,101,59,1,8777,101,114,116,105,99,97,108,66,97,114,59,1,8740,99,114,59,3,55349,56489,105,108,100,101,5,209,1,59,4135,1,209,59,1,925,4,14,69,97,99,100,102,103,109,111,112,114,115,116,117,118,4170,4176,4187,4205,4212,4217,4228,4253,4259,4292,4295,4316,4337,4346,108,105,103,59,1,338,99,117,116,101,5,211,1,59,4185,1,211,4,2,105,121,4193,4202,114,99,5,212,1,59,4200,1,212,59,1,1054,98,108,97,99,59,1,336,114,59,3,55349,56594,114,97,118,101,5,210,1,59,4226,1,210,4,3,97,101,105,4236,4241,4246,99,114,59,1,332,103,97,59,1,937,99,114,111,110,59,1,927,112,102,59,3,55349,56646,101,110,67,117,114,108,121,4,2,68,81,4272,4285,111,117,98,108,101,81,117,111,116,101,59,1,8220,117,111,116,101,59,1,8216,59,1,10836,4,2,99,108,4301,4306,114,59,3,55349,56490,97,115,104,5,216,1,59,4314,1,216,105,4,2,108,109,4323,4332,100,101,5,213,1,59,4330,1,213,101,115,59,1,10807,109,108,5,214,1,59,4344,1,214,101,114,4,2,66,80,4354,4380,4,2,97,114,4360,4364,114,59,1,8254,97,99,4,2,101,107,4372,4375,59,1,9182,101,116,59,1,9140,97,114,101,110,116,104,101,115,105,115,59,1,9180,4,9,97,99,102,104,105,108,111,114,115,4413,4422,4426,4431,4435,4438,4448,4471,4561,114,116,105,97,108,68,59,1,8706,121,59,1,1055,114,59,3,55349,56595,105,59,1,934,59,1,928,117,115,77,105,110,117,115,59,1,177,4,2,105,112,4454,4467,110,99,97,114,101,112,108,97,110,101,59,1,8460,102,59,1,8473,4,4,59,101,105,111,4481,4483,4526,4531,1,10939,99,101,100,101,115,4,4,59,69,83,84,4498,4500,4507,4519,1,8826,113,117,97,108,59,1,10927,108,97,110,116,69,113,117,97,108,59,1,8828,105,108,100,101,59,1,8830,109,101,59,1,8243,4,2,100,112,4537,4543,117,99,116,59,1,8719,111,114,116,105,111,110,4,2,59,97,4555,4557,1,8759,108,59,1,8733,4,2,99,105,4567,4572,114,59,3,55349,56491,59,1,936,4,4,85,102,111,115,4585,4594,4599,4604,79,84,5,34,1,59,4592,1,34,114,59,3,55349,56596,112,102,59,1,8474,99,114,59,3,55349,56492,4,12,66,69,97,99,101,102,104,105,111,114,115,117,4636,4642,4650,4681,4704,4763,4767,4771,5047,5069,5081,5094,97,114,114,59,1,10512,71,5,174,1,59,4648,1,174,4,3,99,110,114,4658,4664,4668,117,116,101,59,1,340,103,59,1,10219,114,4,2,59,116,4675,4677,1,8608,108,59,1,10518,4,3,97,101,121,4689,4695,4701,114,111,110,59,1,344,100,105,108,59,1,342,59,1,1056,4,2,59,118,4710,4712,1,8476,101,114,115,101,4,2,69,85,4722,4748,4,2,108,113,4728,4736,101,109,101,110,116,59,1,8715,117,105,108,105,98,114,105,117,109,59,1,8651,112,69,113,117,105,108,105,98,114,105,117,109,59,1,10607,114,59,1,8476,111,59,1,929,103,104,116,4,8,65,67,68,70,84,85,86,97,4792,4840,4849,4905,4912,4972,5022,5040,4,2,110,114,4798,4811,103,108,101,66,114,97,99,107,101,116,59,1,10217,114,111,119,4,3,59,66,76,4822,4824,4829,1,8594,97,114,59,1,8677,101,102,116,65,114,114,111,119,59,1,8644,101,105,108,105,110,103,59,1,8969,111,4,2,117,119,4856,4869,98,108,101,66,114,97,99,107,101,116,59,1,10215,110,4,2,84,86,4876,4887,101,101,86,101,99,116,111,114,59,1,10589,101,99,116,111,114,4,2,59,66,4898,4900,1,8642,97,114,59,1,10581,108,111,111,114,59,1,8971,4,2,101,114,4918,4944,101,4,3,59,65,86,4927,4929,4936,1,8866,114,114,111,119,59,1,8614,101,99,116,111,114,59,1,10587,105,97,110,103,108,101,4,3,59,66,69,4958,4960,4965,1,8883,97,114,59,1,10704,113,117,97,108,59,1,8885,112,4,3,68,84,86,4981,4993,5004,111,119,110,86,101,99,116,111,114,59,1,10575,101,101,86,101,99,116,111,114,59,1,10588,101,99,116,111,114,4,2,59,66,5015,5017,1,8638,97,114,59,1,10580,101,99,116,111,114,4,2,59,66,5033,5035,1,8640,97,114,59,1,10579,114,114,111,119,59,1,8658,4,2,112,117,5053,5057,102,59,1,8477,110,100,73,109,112,108,105,101,115,59,1,10608,105,103,104,116,97,114,114,111,119,59,1,8667,4,2,99,104,5087,5091,114,59,1,8475,59,1,8625,108,101,68,101,108,97,121,101,100,59,1,10740,4,13,72,79,97,99,102,104,105,109,111,113,115,116,117,5134,5150,5157,5164,5198,5203,5259,5265,5277,5283,5374,5380,5385,4,2,67,99,5140,5146,72,99,121,59,1,1065,121,59,1,1064,70,84,99,121,59,1,1068,99,117,116,101,59,1,346,4,5,59,97,101,105,121,5176,5178,5184,5190,5195,1,10940,114,111,110,59,1,352,100,105,108,59,1,350,114,99,59,1,348,59,1,1057,114,59,3,55349,56598,111,114,116,4,4,68,76,82,85,5216,5227,5238,5250,111,119,110,65,114,114,111,119,59,1,8595,101,102,116,65,114,114,111,119,59,1,8592,105,103,104,116,65,114,114,111,119,59,1,8594,112,65,114,114,111,119,59,1,8593,103,109,97,59,1,931,97,108,108,67,105,114,99,108,101,59,1,8728,112,102,59,3,55349,56650,4,2,114,117,5289,5293,116,59,1,8730,97,114,101,4,4,59,73,83,85,5306,5308,5322,5367,1,9633,110,116,101,114,115,101,99,116,105,111,110,59,1,8851,117,4,2,98,112,5329,5347,115,101,116,4,2,59,69,5338,5340,1,8847,113,117,97,108,59,1,8849,101,114,115,101,116,4,2,59,69,5358,5360,1,8848,113,117,97,108,59,1,8850,110,105,111,110,59,1,8852,99,114,59,3,55349,56494,97,114,59,1,8902,4,4,98,99,109,112,5395,5420,5475,5478,4,2,59,115,5401,5403,1,8912,101,116,4,2,59,69,5411,5413,1,8912,113,117,97,108,59,1,8838,4,2,99,104,5426,5468,101,101,100,115,4,4,59,69,83,84,5440,5442,5449,5461,1,8827,113,117,97,108,59,1,10928,108,97,110,116,69,113,117,97,108,59,1,8829,105,108,100,101,59,1,8831,84,104,97,116,59,1,8715,59,1,8721,4,3,59,101,115,5486,5488,5507,1,8913,114,115,101,116,4,2,59,69,5498,5500,1,8835,113,117,97,108,59,1,8839,101,116,59,1,8913,4,11,72,82,83,97,99,102,104,105,111,114,115,5536,5546,5552,5567,5579,5602,5607,5655,5695,5701,5711,79,82,78,5,222,1,59,5544,1,222,65,68,69,59,1,8482,4,2,72,99,5558,5563,99,121,59,1,1035,121,59,1,1062,4,2,98,117,5573,5576,59,1,9,59,1,932,4,3,97,101,121,5587,5593,5599,114,111,110,59,1,356,100,105,108,59,1,354,59,1,1058,114,59,3,55349,56599,4,2,101,105,5613,5631,4,2,114,116,5619,5627,101,102,111,114,101,59,1,8756,97,59,1,920,4,2,99,110,5637,5647,107,83,112,97,99,101,59,3,8287,8202,83,112,97,99,101,59,1,8201,108,100,101,4,4,59,69,70,84,5668,5670,5677,5688,1,8764,113,117,97,108,59,1,8771,117,108,108,69,113,117,97,108,59,1,8773,105,108,100,101,59,1,8776,112,102,59,3,55349,56651,105,112,108,101,68,111,116,59,1,8411,4,2,99,116,5717,5722,114,59,3,55349,56495,114,111,107,59,1,358,4,14,97,98,99,100,102,103,109,110,111,112,114,115,116,117,5758,5789,5805,5823,5830,5835,5846,5852,5921,5937,6089,6095,6101,6108,4,2,99,114,5764,5774,117,116,101,5,218,1,59,5772,1,218,114,4,2,59,111,5781,5783,1,8607,99,105,114,59,1,10569,114,4,2,99,101,5796,5800,121,59,1,1038,118,101,59,1,364,4,2,105,121,5811,5820,114,99,5,219,1,59,5818,1,219,59,1,1059,98,108,97,99,59,1,368,114,59,3,55349,56600,114,97,118,101,5,217,1,59,5844,1,217,97,99,114,59,1,362,4,2,100,105,5858,5905,101,114,4,2,66,80,5866,5892,4,2,97,114,5872,5876,114,59,1,95,97,99,4,2,101,107,5884,5887,59,1,9183,101,116,59,1,9141,97,114,101,110,116,104,101,115,105,115,59,1,9181,111,110,4,2,59,80,5913,5915,1,8899,108,117,115,59,1,8846,4,2,103,112,5927,5932,111,110,59,1,370,102,59,3,55349,56652,4,8,65,68,69,84,97,100,112,115,5955,5985,5996,6009,6026,6033,6044,6075,114,114,111,119,4,3,59,66,68,5967,5969,5974,1,8593,97,114,59,1,10514,111,119,110,65,114,114,111,119,59,1,8645,111,119,110,65,114,114,111,119,59,1,8597,113,117,105,108,105,98,114,105,117,109,59,1,10606,101,101,4,2,59,65,6017,6019,1,8869,114,114,111,119,59,1,8613,114,114,111,119,59,1,8657,111,119,110,97,114,114,111,119,59,1,8661,101,114,4,2,76,82,6052,6063,101,102,116,65,114,114,111,119,59,1,8598,105,103,104,116,65,114,114,111,119,59,1,8599,105,4,2,59,108,6082,6084,1,978,111,110,59,1,933,105,110,103,59,1,366,99,114,59,3,55349,56496,105,108,100,101,59,1,360,109,108,5,220,1,59,6115,1,220,4,9,68,98,99,100,101,102,111,115,118,6137,6143,6148,6152,6166,6250,6255,6261,6267,97,115,104,59,1,8875,97,114,59,1,10987,121,59,1,1042,97,115,104,4,2,59,108,6161,6163,1,8873,59,1,10982,4,2,101,114,6172,6175,59,1,8897,4,3,98,116,121,6183,6188,6238,97,114,59,1,8214,4,2,59,105,6194,6196,1,8214,99,97,108,4,4,66,76,83,84,6209,6214,6220,6231,97,114,59,1,8739,105,110,101,59,1,124,101,112,97,114,97,116,111,114,59,1,10072,105,108,100,101,59,1,8768,84,104,105,110,83,112,97,99,101,59,1,8202,114,59,3,55349,56601,112,102,59,3,55349,56653,99,114,59,3,55349,56497,100,97,115,104,59,1,8874,4,5,99,101,102,111,115,6286,6292,6298,6303,6309,105,114,99,59,1,372,100,103,101,59,1,8896,114,59,3,55349,56602,112,102,59,3,55349,56654,99,114,59,3,55349,56498,4,4,102,105,111,115,6325,6330,6333,6339,114,59,3,55349,56603,59,1,926,112,102,59,3,55349,56655,99,114,59,3,55349,56499,4,9,65,73,85,97,99,102,111,115,117,6365,6370,6375,6380,6391,6405,6410,6416,6422,99,121,59,1,1071,99,121,59,1,1031,99,121,59,1,1070,99,117,116,101,5,221,1,59,6389,1,221,4,2,105,121,6397,6402,114,99,59,1,374,59,1,1067,114,59,3,55349,56604,112,102,59,3,55349,56656,99,114,59,3,55349,56500,109,108,59,1,376,4,8,72,97,99,100,101,102,111,115,6445,6450,6457,6472,6477,6501,6505,6510,99,121,59,1,1046,99,117,116,101,59,1,377,4,2,97,121,6463,6469,114,111,110,59,1,381,59,1,1047,111,116,59,1,379,4,2,114,116,6483,6497,111,87,105,100,116,104,83,112,97,99,101,59,1,8203,97,59,1,918,114,59,1,8488,112,102,59,1,8484,99,114,59,3,55349,56501,4,16,97,98,99,101,102,103,108,109,110,111,112,114,115,116,117,119,6550,6561,6568,6612,6622,6634,6645,6672,6699,6854,6870,6923,6933,6963,6974,6983,99,117,116,101,5,225,1,59,6559,1,225,114,101,118,101,59,1,259,4,6,59,69,100,105,117,121,6582,6584,6588,6591,6600,6609,1,8766,59,3,8766,819,59,1,8767,114,99,5,226,1,59,6598,1,226,116,101,5,180,1,59,6607,1,180,59,1,1072,108,105,103,5,230,1,59,6620,1,230,4,2,59,114,6628,6630,1,8289,59,3,55349,56606,114,97,118,101,5,224,1,59,6643,1,224,4,2,101,112,6651,6667,4,2,102,112,6657,6663,115,121,109,59,1,8501,104,59,1,8501,104,97,59,1,945,4,2,97,112,6678,6692,4,2,99,108,6684,6688,114,59,1,257,103,59,1,10815,5,38,1,59,6697,1,38,4,2,100,103,6705,6737,4,5,59,97,100,115,118,6717,6719,6724,6727,6734,1,8743,110,100,59,1,10837,59,1,10844,108,111,112,101,59,1,10840,59,1,10842,4,7,59,101,108,109,114,115,122,6753,6755,6758,6762,6814,6835,6848,1,8736,59,1,10660,101,59,1,8736,115,100,4,2,59,97,6770,6772,1,8737,4,8,97,98,99,100,101,102,103,104,6790,6793,6796,6799,6802,6805,6808,6811,59,1,10664,59,1,10665,59,1,10666,59,1,10667,59,1,10668,59,1,10669,59,1,10670,59,1,10671,116,4,2,59,118,6821,6823,1,8735,98,4,2,59,100,6830,6832,1,8894,59,1,10653,4,2,112,116,6841,6845,104,59,1,8738,59,1,197,97,114,114,59,1,9084,4,2,103,112,6860,6865,111,110,59,1,261,102,59,3,55349,56658,4,7,59,69,97,101,105,111,112,6886,6888,6891,6897,6900,6904,6908,1,8776,59,1,10864,99,105,114,59,1,10863,59,1,8778,100,59,1,8779,115,59,1,39,114,111,120,4,2,59,101,6917,6919,1,8776,113,59,1,8778,105,110,103,5,229,1,59,6931,1,229,4,3,99,116,121,6941,6946,6949,114,59,3,55349,56502,59,1,42,109,112,4,2,59,101,6957,6959,1,8776,113,59,1,8781,105,108,100,101,5,227,1,59,6972,1,227,109,108,5,228,1,59,6981,1,228,4,2,99,105,6989,6997,111,110,105,110,116,59,1,8755,110,116,59,1,10769,4,16,78,97,98,99,100,101,102,105,107,108,110,111,112,114,115,117,7036,7041,7119,7135,7149,7155,7219,7224,7347,7354,7463,7489,7786,7793,7814,7866,111,116,59,1,10989,4,2,99,114,7047,7094,107,4,4,99,101,112,115,7058,7064,7073,7080,111,110,103,59,1,8780,112,115,105,108,111,110,59,1,1014,114,105,109,101,59,1,8245,105,109,4,2,59,101,7088,7090,1,8765,113,59,1,8909,4,2,118,119,7100,7105,101,101,59,1,8893,101,100,4,2,59,103,7113,7115,1,8965,101,59,1,8965,114,107,4,2,59,116,7127,7129,1,9141,98,114,107,59,1,9142,4,2,111,121,7141,7146,110,103,59,1,8780,59,1,1073,113,117,111,59,1,8222,4,5,99,109,112,114,116,7167,7181,7188,7193,7199,97,117,115,4,2,59,101,7176,7178,1,8757,59,1,8757,112,116,121,118,59,1,10672,115,105,59,1,1014,110,111,117,59,1,8492,4,3,97,104,119,7207,7210,7213,59,1,946,59,1,8502,101,101,110,59,1,8812,114,59,3,55349,56607,103,4,7,99,111,115,116,117,118,119,7241,7262,7288,7305,7328,7335,7340,4,3,97,105,117,7249,7253,7258,112,59,1,8898,114,99,59,1,9711,112,59,1,8899,4,3,100,112,116,7270,7275,7281,111,116,59,1,10752,108,117,115,59,1,10753,105,109,101,115,59,1,10754,4,2,113,116,7294,7300,99,117,112,59,1,10758,97,114,59,1,9733,114,105,97,110,103,108,101,4,2,100,117,7318,7324,111,119,110,59,1,9661,112,59,1,9651,112,108,117,115,59,1,10756,101,101,59,1,8897,101,100,103,101,59,1,8896,97,114,111,119,59,1,10509,4,3,97,107,111,7362,7436,7458,4,2,99,110,7368,7432,107,4,3,108,115,116,7377,7386,7394,111,122,101,110,103,101,59,1,10731,113,117,97,114,101,59,1,9642,114,105,97,110,103,108,101,4,4,59,100,108,114,7411,7413,7419,7425,1,9652,111,119,110,59,1,9662,101,102,116,59,1,9666,105,103,104,116,59,1,9656,107,59,1,9251,4,2,49,51,7442,7454,4,2,50,52,7448,7451,59,1,9618,59,1,9617,52,59,1,9619,99,107,59,1,9608,4,2,101,111,7469,7485,4,2,59,113,7475,7478,3,61,8421,117,105,118,59,3,8801,8421,116,59,1,8976,4,4,112,116,119,120,7499,7504,7517,7523,102,59,3,55349,56659,4,2,59,116,7510,7512,1,8869,111,109,59,1,8869,116,105,101,59,1,8904,4,12,68,72,85,86,98,100,104,109,112,116,117,118,7549,7571,7597,7619,7655,7660,7682,7708,7715,7721,7728,7750,4,4,76,82,108,114,7559,7562,7565,7568,59,1,9559,59,1,9556,59,1,9558,59,1,9555,4,5,59,68,85,100,117,7583,7585,7588,7591,7594,1,9552,59,1,9574,59,1,9577,59,1,9572,59,1,9575,4,4,76,82,108,114,7607,7610,7613,7616,59,1,9565,59,1,9562,59,1,9564,59,1,9561,4,7,59,72,76,82,104,108,114,7635,7637,7640,7643,7646,7649,7652,1,9553,59,1,9580,59,1,9571,59,1,9568,59,1,9579,59,1,9570,59,1,9567,111,120,59,1,10697,4,4,76,82,108,114,7670,7673,7676,7679,59,1,9557,59,1,9554,59,1,9488,59,1,9484,4,5,59,68,85,100,117,7694,7696,7699,7702,7705,1,9472,59,1,9573,59,1,9576,59,1,9516,59,1,9524,105,110,117,115,59,1,8863,108,117,115,59,1,8862,105,109,101,115,59,1,8864,4,4,76,82,108,114,7738,7741,7744,7747,59,1,9563,59,1,9560,59,1,9496,59,1,9492,4,7,59,72,76,82,104,108,114,7766,7768,7771,7774,7777,7780,7783,1,9474,59,1,9578,59,1,9569,59,1,9566,59,1,9532,59,1,9508,59,1,9500,114,105,109,101,59,1,8245,4,2,101,118,7799,7804,118,101,59,1,728,98,97,114,5,166,1,59,7812,1,166,4,4,99,101,105,111,7824,7829,7834,7846,114,59,3,55349,56503,109,105,59,1,8271,109,4,2,59,101,7841,7843,1,8765,59,1,8909,108,4,3,59,98,104,7855,7857,7860,1,92,59,1,10693,115,117,98,59,1,10184,4,2,108,109,7872,7885,108,4,2,59,101,7879,7881,1,8226,116,59,1,8226,112,4,3,59,69,101,7894,7896,7899,1,8782,59,1,10926,4,2,59,113,7905,7907,1,8783,59,1,8783,4,15,97,99,100,101,102,104,105,108,111,114,115,116,117,119,121,7942,8021,8075,8080,8121,8126,8157,8279,8295,8430,8446,8485,8491,8707,8726,4,3,99,112,114,7950,7956,8007,117,116,101,59,1,263,4,6,59,97,98,99,100,115,7970,7972,7977,7984,7998,8003,1,8745,110,100,59,1,10820,114,99,117,112,59,1,10825,4,2,97,117,7990,7994,112,59,1,10827,112,59,1,10823,111,116,59,1,10816,59,3,8745,65024,4,2,101,111,8013,8017,116,59,1,8257,110,59,1,711,4,4,97,101,105,117,8031,8046,8056,8061,4,2,112,114,8037,8041,115,59,1,10829,111,110,59,1,269,100,105,108,5,231,1,59,8054,1,231,114,99,59,1,265,112,115,4,2,59,115,8069,8071,1,10828,109,59,1,10832,111,116,59,1,267,4,3,100,109,110,8088,8097,8104,105,108,5,184,1,59,8095,1,184,112,116,121,118,59,1,10674,116,5,162,2,59,101,8112,8114,1,162,114,100,111,116,59,1,183,114,59,3,55349,56608,4,3,99,101,105,8134,8138,8154,121,59,1,1095,99,107,4,2,59,109,8146,8148,1,10003,97,114,107,59,1,10003,59,1,967,114,4,7,59,69,99,101,102,109,115,8174,8176,8179,8258,8261,8268,8273,1,9675,59,1,10691,4,3,59,101,108,8187,8189,8193,1,710,113,59,1,8791,101,4,2,97,100,8200,8223,114,114,111,119,4,2,108,114,8210,8216,101,102,116,59,1,8634,105,103,104,116,59,1,8635,4,5,82,83,97,99,100,8235,8238,8241,8246,8252,59,1,174,59,1,9416,115,116,59,1,8859,105,114,99,59,1,8858,97,115,104,59,1,8861,59,1,8791,110,105,110,116,59,1,10768,105,100,59,1,10991,99,105,114,59,1,10690,117,98,115,4,2,59,117,8288,8290,1,9827,105,116,59,1,9827,4,4,108,109,110,112,8305,8326,8376,8400,111,110,4,2,59,101,8313,8315,1,58,4,2,59,113,8321,8323,1,8788,59,1,8788,4,2,109,112,8332,8344,97,4,2,59,116,8339,8341,1,44,59,1,64,4,3,59,102,108,8352,8354,8358,1,8705,110,59,1,8728,101,4,2,109,120,8365,8371,101,110,116,59,1,8705,101,115,59,1,8450,4,2,103,105,8382,8395,4,2,59,100,8388,8390,1,8773,111,116,59,1,10861,110,116,59,1,8750,4,3,102,114,121,8408,8412,8417,59,3,55349,56660,111,100,59,1,8720,5,169,2,59,115,8424,8426,1,169,114,59,1,8471,4,2,97,111,8436,8441,114,114,59,1,8629,115,115,59,1,10007,4,2,99,117,8452,8457,114,59,3,55349,56504,4,2,98,112,8463,8474,4,2,59,101,8469,8471,1,10959,59,1,10961,4,2,59,101,8480,8482,1,10960,59,1,10962,100,111,116,59,1,8943,4,7,100,101,108,112,114,118,119,8507,8522,8536,8550,8600,8697,8702,97,114,114,4,2,108,114,8516,8519,59,1,10552,59,1,10549,4,2,112,115,8528,8532,114,59,1,8926,99,59,1,8927,97,114,114,4,2,59,112,8545,8547,1,8630,59,1,10557,4,6,59,98,99,100,111,115,8564,8566,8573,8587,8592,8596,1,8746,114,99,97,112,59,1,10824,4,2,97,117,8579,8583,112,59,1,10822,112,59,1,10826,111,116,59,1,8845,114,59,1,10821,59,3,8746,65024,4,4,97,108,114,118,8610,8623,8663,8672,114,114,4,2,59,109,8618,8620,1,8631,59,1,10556,121,4,3,101,118,119,8632,8651,8656,113,4,2,112,115,8639,8645,114,101,99,59,1,8926,117,99,99,59,1,8927,101,101,59,1,8910,101,100,103,101,59,1,8911,101,110,5,164,1,59,8670,1,164,101,97,114,114,111,119,4,2,108,114,8684,8690,101,102,116,59,1,8630,105,103,104,116,59,1,8631,101,101,59,1,8910,101,100,59,1,8911,4,2,99,105,8713,8721,111,110,105,110,116,59,1,8754,110,116,59,1,8753,108,99,116,121,59,1,9005,4,19,65,72,97,98,99,100,101,102,104,105,106,108,111,114,115,116,117,119,122,8773,8778,8783,8821,8839,8854,8887,8914,8930,8944,9036,9041,9058,9197,9227,9258,9281,9297,9305,114,114,59,1,8659,97,114,59,1,10597,4,4,103,108,114,115,8793,8799,8805,8809,103,101,114,59,1,8224,101,116,104,59,1,8504,114,59,1,8595,104,4,2,59,118,8816,8818,1,8208,59,1,8867,4,2,107,108,8827,8834,97,114,111,119,59,1,10511,97,99,59,1,733,4,2,97,121,8845,8851,114,111,110,59,1,271,59,1,1076,4,3,59,97,111,8862,8864,8880,1,8518,4,2,103,114,8870,8876,103,101,114,59,1,8225,114,59,1,8650,116,115,101,113,59,1,10871,4,3,103,108,109,8895,8902,8907,5,176,1,59,8900,1,176,116,97,59,1,948,112,116,121,118,59,1,10673,4,2,105,114,8920,8926,115,104,116,59,1,10623,59,3,55349,56609,97,114,4,2,108,114,8938,8941,59,1,8643,59,1,8642,4,5,97,101,103,115,118,8956,8986,8989,8996,9001,109,4,3,59,111,115,8965,8967,8983,1,8900,110,100,4,2,59,115,8975,8977,1,8900,117,105,116,59,1,9830,59,1,9830,59,1,168,97,109,109,97,59,1,989,105,110,59,1,8946,4,3,59,105,111,9009,9011,9031,1,247,100,101,5,247,2,59,111,9020,9022,1,247,110,116,105,109,101,115,59,1,8903,110,120,59,1,8903,99,121,59,1,1106,99,4,2,111,114,9048,9053,114,110,59,1,8990,111,112,59,1,8973,4,5,108,112,116,117,119,9070,9076,9081,9130,9144,108,97,114,59,1,36,102,59,3,55349,56661,4,5,59,101,109,112,115,9093,9095,9109,9116,9122,1,729,113,4,2,59,100,9102,9104,1,8784,111,116,59,1,8785,105,110,117,115,59,1,8760,108,117,115,59,1,8724,113,117,97,114,101,59,1,8865,98,108,101,98,97,114,119,101,100,103,101,59,1,8966,110,4,3,97,100,104,9153,9160,9172,114,114,111,119,59,1,8595,111,119,110,97,114,114,111,119,115,59,1,8650,97,114,112,111,111,110,4,2,108,114,9184,9190,101,102,116,59,1,8643,105,103,104,116,59,1,8642,4,2,98,99,9203,9211,107,97,114,111,119,59,1,10512,4,2,111,114,9217,9222,114,110,59,1,8991,111,112,59,1,8972,4,3,99,111,116,9235,9248,9252,4,2,114,121,9241,9245,59,3,55349,56505,59,1,1109,108,59,1,10742,114,111,107,59,1,273,4,2,100,114,9264,9269,111,116,59,1,8945,105,4,2,59,102,9276,9278,1,9663,59,1,9662,4,2,97,104,9287,9292,114,114,59,1,8693,97,114,59,1,10607,97,110,103,108,101,59,1,10662,4,2,99,105,9311,9315,121,59,1,1119,103,114,97,114,114,59,1,10239,4,18,68,97,99,100,101,102,103,108,109,110,111,112,113,114,115,116,117,120,9361,9376,9398,9439,9444,9447,9462,9495,9531,9585,9598,9614,9659,9755,9771,9792,9808,9826,4,2,68,111,9367,9372,111,116,59,1,10871,116,59,1,8785,4,2,99,115,9382,9392,117,116,101,5,233,1,59,9390,1,233,116,101,114,59,1,10862,4,4,97,105,111,121,9408,9414,9430,9436,114,111,110,59,1,283,114,4,2,59,99,9421,9423,1,8790,5,234,1,59,9428,1,234,108,111,110,59,1,8789,59,1,1101,111,116,59,1,279,59,1,8519,4,2,68,114,9453,9458,111,116,59,1,8786,59,3,55349,56610,4,3,59,114,115,9470,9472,9482,1,10906,97,118,101,5,232,1,59,9480,1,232,4,2,59,100,9488,9490,1,10902,111,116,59,1,10904,4,4,59,105,108,115,9505,9507,9515,9518,1,10905,110,116,101,114,115,59,1,9191,59,1,8467,4,2,59,100,9524,9526,1,10901,111,116,59,1,10903,4,3,97,112,115,9539,9544,9564,99,114,59,1,275,116,121,4,3,59,115,118,9554,9556,9561,1,8709,101,116,59,1,8709,59,1,8709,112,4,2,49,59,9571,9583,4,2,51,52,9577,9580,59,1,8196,59,1,8197,1,8195,4,2,103,115,9591,9594,59,1,331,112,59,1,8194,4,2,103,112,9604,9609,111,110,59,1,281,102,59,3,55349,56662,4,3,97,108,115,9622,9635,9640,114,4,2,59,115,9629,9631,1,8917,108,59,1,10723,117,115,59,1,10865,105,4,3,59,108,118,9649,9651,9656,1,949,111,110,59,1,949,59,1,1013,4,4,99,115,117,118,9669,9686,9716,9747,4,2,105,111,9675,9680,114,99,59,1,8790,108,111,110,59,1,8789,4,2,105,108,9692,9696,109,59,1,8770,97,110,116,4,2,103,108,9705,9710,116,114,59,1,10902,101,115,115,59,1,10901,4,3,97,101,105,9724,9729,9734,108,115,59,1,61,115,116,59,1,8799,118,4,2,59,68,9741,9743,1,8801,68,59,1,10872,112,97,114,115,108,59,1,10725,4,2,68,97,9761,9766,111,116,59,1,8787,114,114,59,1,10609,4,3,99,100,105,9779,9783,9788,114,59,1,8495,111,116,59,1,8784,109,59,1,8770,4,2,97,104,9798,9801,59,1,951,5,240,1,59,9806,1,240,4,2,109,114,9814,9822,108,5,235,1,59,9820,1,235,111,59,1,8364,4,3,99,105,112,9834,9838,9843,108,59,1,33,115,116,59,1,8707,4,2,101,111,9849,9859,99,116,97,116,105,111,110,59,1,8496,110,101,110,116,105,97,108,101,59,1,8519,4,12,97,99,101,102,105,106,108,110,111,112,114,115,9896,9910,9914,9921,9954,9960,9967,9989,9994,10027,10036,10164,108,108,105,110,103,100,111,116,115,101,113,59,1,8786,121,59,1,1092,109,97,108,101,59,1,9792,4,3,105,108,114,9929,9935,9950,108,105,103,59,1,64259,4,2,105,108,9941,9945,103,59,1,64256,105,103,59,1,64260,59,3,55349,56611,108,105,103,59,1,64257,108,105,103,59,3,102,106,4,3,97,108,116,9975,9979,9984,116,59,1,9837,105,103,59,1,64258,110,115,59,1,9649,111,102,59,1,402,4,2,112,114,10000,10005,102,59,3,55349,56663,4,2,97,107,10011,10016,108,108,59,1,8704,4,2,59,118,10022,10024,1,8916,59,1,10969,97,114,116,105,110,116,59,1,10765,4,2,97,111,10042,10159,4,2,99,115,10048,10155,4,6,49,50,51,52,53,55,10062,10102,10114,10135,10139,10151,4,6,50,51,52,53,54,56,10076,10083,10086,10093,10096,10099,5,189,1,59,10081,1,189,59,1,8531,5,188,1,59,10091,1,188,59,1,8533,59,1,8537,59,1,8539,4,2,51,53,10108,10111,59,1,8532,59,1,8534,4,3,52,53,56,10122,10129,10132,5,190,1,59,10127,1,190,59,1,8535,59,1,8540,53,59,1,8536,4,2,54,56,10145,10148,59,1,8538,59,1,8541,56,59,1,8542,108,59,1,8260,119,110,59,1,8994,99,114,59,3,55349,56507,4,17,69,97,98,99,100,101,102,103,105,106,108,110,111,114,115,116,118,10206,10217,10247,10254,10268,10273,10358,10363,10374,10380,10385,10406,10458,10464,10470,10497,10610,4,2,59,108,10212,10214,1,8807,59,1,10892,4,3,99,109,112,10225,10231,10244,117,116,101,59,1,501,109,97,4,2,59,100,10239,10241,1,947,59,1,989,59,1,10886,114,101,118,101,59,1,287,4,2,105,121,10260,10265,114,99,59,1,285,59,1,1075,111,116,59,1,289,4,4,59,108,113,115,10283,10285,10288,10308,1,8805,59,1,8923,4,3,59,113,115,10296,10298,10301,1,8805,59,1,8807,108,97,110,116,59,1,10878,4,4,59,99,100,108,10318,10320,10324,10345,1,10878,99,59,1,10921,111,116,4,2,59,111,10332,10334,1,10880,4,2,59,108,10340,10342,1,10882,59,1,10884,4,2,59,101,10351,10354,3,8923,65024,115,59,1,10900,114,59,3,55349,56612,4,2,59,103,10369,10371,1,8811,59,1,8921,109,101,108,59,1,8503,99,121,59,1,1107,4,4,59,69,97,106,10395,10397,10400,10403,1,8823,59,1,10898,59,1,10917,59,1,10916,4,4,69,97,101,115,10416,10419,10434,10453,59,1,8809,112,4,2,59,112,10426,10428,1,10890,114,111,120,59,1,10890,4,2,59,113,10440,10442,1,10888,4,2,59,113,10448,10450,1,10888,59,1,8809,105,109,59,1,8935,112,102,59,3,55349,56664,97,118,101,59,1,96,4,2,99,105,10476,10480,114,59,1,8458,109,4,3,59,101,108,10489,10491,10494,1,8819,59,1,10894,59,1,10896,5,62,6,59,99,100,108,113,114,10512,10514,10527,10532,10538,10545,1,62,4,2,99,105,10520,10523,59,1,10919,114,59,1,10874,111,116,59,1,8919,80,97,114,59,1,10645,117,101,115,116,59,1,10876,4,5,97,100,101,108,115,10557,10574,10579,10599,10605,4,2,112,114,10563,10570,112,114,111,120,59,1,10886,114,59,1,10616,111,116,59,1,8919,113,4,2,108,113,10586,10592,101,115,115,59,1,8923,108,101,115,115,59,1,10892,101,115,115,59,1,8823,105,109,59,1,8819,4,2,101,110,10616,10626,114,116,110,101,113,113,59,3,8809,65024,69,59,3,8809,65024,4,10,65,97,98,99,101,102,107,111,115,121,10653,10658,10713,10718,10724,10760,10765,10786,10850,10875,114,114,59,1,8660,4,4,105,108,109,114,10668,10674,10678,10684,114,115,112,59,1,8202,102,59,1,189,105,108,116,59,1,8459,4,2,100,114,10690,10695,99,121,59,1,1098,4,3,59,99,119,10703,10705,10710,1,8596,105,114,59,1,10568,59,1,8621,97,114,59,1,8463,105,114,99,59,1,293,4,3,97,108,114,10732,10748,10754,114,116,115,4,2,59,117,10741,10743,1,9829,105,116,59,1,9829,108,105,112,59,1,8230,99,111,110,59,1,8889,114,59,3,55349,56613,115,4,2,101,119,10772,10779,97,114,111,119,59,1,10533,97,114,111,119,59,1,10534,4,5,97,109,111,112,114,10798,10803,10809,10839,10844,114,114,59,1,8703,116,104,116,59,1,8763,107,4,2,108,114,10816,10827,101,102,116,97,114,114,111,119,59,1,8617,105,103,104,116,97,114,114,111,119,59,1,8618,102,59,3,55349,56665,98,97,114,59,1,8213,4,3,99,108,116,10858,10863,10869,114,59,3,55349,56509,97,115,104,59,1,8463,114,111,107,59,1,295,4,2,98,112,10881,10887,117,108,108,59,1,8259,104,101,110,59,1,8208,4,15,97,99,101,102,103,105,106,109,110,111,112,113,115,116,117,10925,10936,10958,10977,10990,11001,11039,11045,11101,11192,11220,11226,11237,11285,11299,99,117,116,101,5,237,1,59,10934,1,237,4,3,59,105,121,10944,10946,10955,1,8291,114,99,5,238,1,59,10953,1,238,59,1,1080,4,2,99,120,10964,10968,121,59,1,1077,99,108,5,161,1,59,10975,1,161,4,2,102,114,10983,10986,59,1,8660,59,3,55349,56614,114,97,118,101,5,236,1,59,10999,1,236,4,4,59,105,110,111,11011,11013,11028,11034,1,8520,4,2,105,110,11019,11024,110,116,59,1,10764,116,59,1,8749,102,105,110,59,1,10716,116,97,59,1,8489,108,105,103,59,1,307,4,3,97,111,112,11053,11092,11096,4,3,99,103,116,11061,11065,11088,114,59,1,299,4,3,101,108,112,11073,11076,11082,59,1,8465,105,110,101,59,1,8464,97,114,116,59,1,8465,104,59,1,305,102,59,1,8887,101,100,59,1,437,4,5,59,99,102,111,116,11113,11115,11121,11136,11142,1,8712,97,114,101,59,1,8453,105,110,4,2,59,116,11129,11131,1,8734,105,101,59,1,10717,100,111,116,59,1,305,4,5,59,99,101,108,112,11154,11156,11161,11179,11186,1,8747,97,108,59,1,8890,4,2,103,114,11167,11173,101,114,115,59,1,8484,99,97,108,59,1,8890,97,114,104,107,59,1,10775,114,111,100,59,1,10812,4,4,99,103,112,116,11202,11206,11211,11216,121,59,1,1105,111,110,59,1,303,102,59,3,55349,56666,97,59,1,953,114,111,100,59,1,10812,117,101,115,116,5,191,1,59,11235,1,191,4,2,99,105,11243,11248,114,59,3,55349,56510,110,4,5,59,69,100,115,118,11261,11263,11266,11271,11282,1,8712,59,1,8953,111,116,59,1,8949,4,2,59,118,11277,11279,1,8948,59,1,8947,59,1,8712,4,2,59,105,11291,11293,1,8290,108,100,101,59,1,297,4,2,107,109,11305,11310,99,121,59,1,1110,108,5,239,1,59,11316,1,239,4,6,99,102,109,111,115,117,11332,11346,11351,11357,11363,11380,4,2,105,121,11338,11343,114,99,59,1,309,59,1,1081,114,59,3,55349,56615,97,116,104,59,1,567,112,102,59,3,55349,56667,4,2,99,101,11369,11374,114,59,3,55349,56511,114,99,121,59,1,1112,107,99,121,59,1,1108,4,8,97,99,102,103,104,106,111,115,11404,11418,11433,11438,11445,11450,11455,11461,112,112,97,4,2,59,118,11413,11415,1,954,59,1,1008,4,2,101,121,11424,11430,100,105,108,59,1,311,59,1,1082,114,59,3,55349,56616,114,101,101,110,59,1,312,99,121,59,1,1093,99,121,59,1,1116,112,102,59,3,55349,56668,99,114,59,3,55349,56512,4,23,65,66,69,72,97,98,99,100,101,102,103,104,106,108,109,110,111,112,114,115,116,117,118,11515,11538,11544,11555,11560,11721,11780,11818,11868,12136,12160,12171,12203,12208,12246,12275,12327,12509,12523,12569,12641,12732,12752,4,3,97,114,116,11523,11528,11532,114,114,59,1,8666,114,59,1,8656,97,105,108,59,1,10523,97,114,114,59,1,10510,4,2,59,103,11550,11552,1,8806,59,1,10891,97,114,59,1,10594,4,9,99,101,103,109,110,112,113,114,116,11580,11586,11594,11600,11606,11624,11627,11636,11694,117,116,101,59,1,314,109,112,116,121,118,59,1,10676,114,97,110,59,1,8466,98,100,97,59,1,955,103,4,3,59,100,108,11615,11617,11620,1,10216,59,1,10641,101,59,1,10216,59,1,10885,117,111,5,171,1,59,11634,1,171,114,4,8,59,98,102,104,108,112,115,116,11655,11657,11669,11673,11677,11681,11685,11690,1,8592,4,2,59,102,11663,11665,1,8676,115,59,1,10527,115,59,1,10525,107,59,1,8617,112,59,1,8619,108,59,1,10553,105,109,59,1,10611,108,59,1,8610,4,3,59,97,101,11702,11704,11709,1,10923,105,108,59,1,10521,4,2,59,115,11715,11717,1,10925,59,3,10925,65024,4,3,97,98,114,11729,11734,11739,114,114,59,1,10508,114,107,59,1,10098,4,2,97,107,11745,11758,99,4,2,101,107,11752,11755,59,1,123,59,1,91,4,2,101,115,11764,11767,59,1,10635,108,4,2,100,117,11774,11777,59,1,10639,59,1,10637,4,4,97,101,117,121,11790,11796,11811,11815,114,111,110,59,1,318,4,2,100,105,11802,11807,105,108,59,1,316,108,59,1,8968,98,59,1,123,59,1,1083,4,4,99,113,114,115,11828,11832,11845,11864,97,59,1,10550,117,111,4,2,59,114,11840,11842,1,8220,59,1,8222,4,2,100,117,11851,11857,104,97,114,59,1,10599,115,104,97,114,59,1,10571,104,59,1,8626,4,5,59,102,103,113,115,11880,11882,12008,12011,12031,1,8804,116,4,5,97,104,108,114,116,11895,11913,11935,11947,11996,114,114,111,119,4,2,59,116,11905,11907,1,8592,97,105,108,59,1,8610,97,114,112,111,111,110,4,2,100,117,11925,11931,111,119,110,59,1,8637,112,59,1,8636,101,102,116,97,114,114,111,119,115,59,1,8647,105,103,104,116,4,3,97,104,115,11959,11974,11984,114,114,111,119,4,2,59,115,11969,11971,1,8596,59,1,8646,97,114,112,111,111,110,115,59,1,8651,113,117,105,103,97,114,114,111,119,59,1,8621,104,114,101,101,116,105,109,101,115,59,1,8907,59,1,8922,4,3,59,113,115,12019,12021,12024,1,8804,59,1,8806,108,97,110,116,59,1,10877,4,5,59,99,100,103,115,12043,12045,12049,12070,12083,1,10877,99,59,1,10920,111,116,4,2,59,111,12057,12059,1,10879,4,2,59,114,12065,12067,1,10881,59,1,10883,4,2,59,101,12076,12079,3,8922,65024,115,59,1,10899,4,5,97,100,101,103,115,12095,12103,12108,12126,12131,112,112,114,111,120,59,1,10885,111,116,59,1,8918,113,4,2,103,113,12115,12120,116,114,59,1,8922,103,116,114,59,1,10891,116,114,59,1,8822,105,109,59,1,8818,4,3,105,108,114,12144,12150,12156,115,104,116,59,1,10620,111,111,114,59,1,8970,59,3,55349,56617,4,2,59,69,12166,12168,1,8822,59,1,10897,4,2,97,98,12177,12198,114,4,2,100,117,12184,12187,59,1,8637,4,2,59,108,12193,12195,1,8636,59,1,10602,108,107,59,1,9604,99,121,59,1,1113,4,5,59,97,99,104,116,12220,12222,12227,12235,12241,1,8810,114,114,59,1,8647,111,114,110,101,114,59,1,8990,97,114,100,59,1,10603,114,105,59,1,9722,4,2,105,111,12252,12258,100,111,116,59,1,320,117,115,116,4,2,59,97,12267,12269,1,9136,99,104,101,59,1,9136,4,4,69,97,101,115,12285,12288,12303,12322,59,1,8808,112,4,2,59,112,12295,12297,1,10889,114,111,120,59,1,10889,4,2,59,113,12309,12311,1,10887,4,2,59,113,12317,12319,1,10887,59,1,8808,105,109,59,1,8934,4,8,97,98,110,111,112,116,119,122,12345,12359,12364,12421,12446,12467,12474,12490,4,2,110,114,12351,12355,103,59,1,10220,114,59,1,8701,114,107,59,1,10214,103,4,3,108,109,114,12373,12401,12409,101,102,116,4,2,97,114,12382,12389,114,114,111,119,59,1,10229,105,103,104,116,97,114,114,111,119,59,1,10231,97,112,115,116,111,59,1,10236,105,103,104,116,97,114,114,111,119,59,1,10230,112,97,114,114,111,119,4,2,108,114,12433,12439,101,102,116,59,1,8619,105,103,104,116,59,1,8620,4,3,97,102,108,12454,12458,12462,114,59,1,10629,59,3,55349,56669,117,115,59,1,10797,105,109,101,115,59,1,10804,4,2,97,98,12480,12485,115,116,59,1,8727,97,114,59,1,95,4,3,59,101,102,12498,12500,12506,1,9674,110,103,101,59,1,9674,59,1,10731,97,114,4,2,59,108,12517,12519,1,40,116,59,1,10643,4,5,97,99,104,109,116,12535,12540,12548,12561,12564,114,114,59,1,8646,111,114,110,101,114,59,1,8991,97,114,4,2,59,100,12556,12558,1,8651,59,1,10605,59,1,8206,114,105,59,1,8895,4,6,97,99,104,105,113,116,12583,12589,12594,12597,12614,12635,113,117,111,59,1,8249,114,59,3,55349,56513,59,1,8624,109,4,3,59,101,103,12606,12608,12611,1,8818,59,1,10893,59,1,10895,4,2,98,117,12620,12623,59,1,91,111,4,2,59,114,12630,12632,1,8216,59,1,8218,114,111,107,59,1,322,5,60,8,59,99,100,104,105,108,113,114,12660,12662,12675,12680,12686,12692,12698,12705,1,60,4,2,99,105,12668,12671,59,1,10918,114,59,1,10873,111,116,59,1,8918,114,101,101,59,1,8907,109,101,115,59,1,8905,97,114,114,59,1,10614,117,101,115,116,59,1,10875,4,2,80,105,12711,12716,97,114,59,1,10646,4,3,59,101,102,12724,12726,12729,1,9667,59,1,8884,59,1,9666,114,4,2,100,117,12739,12746,115,104,97,114,59,1,10570,104,97,114,59,1,10598,4,2,101,110,12758,12768,114,116,110,101,113,113,59,3,8808,65024,69,59,3,8808,65024,4,14,68,97,99,100,101,102,104,105,108,110,111,112,115,117,12803,12809,12893,12908,12914,12928,12933,12937,13011,13025,13032,13049,13052,13069,68,111,116,59,1,8762,4,4,99,108,112,114,12819,12827,12849,12887,114,5,175,1,59,12825,1,175,4,2,101,116,12833,12836,59,1,9794,4,2,59,101,12842,12844,1,10016,115,101,59,1,10016,4,2,59,115,12855,12857,1,8614,116,111,4,4,59,100,108,117,12869,12871,12877,12883,1,8614,111,119,110,59,1,8615,101,102,116,59,1,8612,112,59,1,8613,107,101,114,59,1,9646,4,2,111,121,12899,12905,109,109,97,59,1,10793,59,1,1084,97,115,104,59,1,8212,97,115,117,114,101,100,97,110,103,108,101,59,1,8737,114,59,3,55349,56618,111,59,1,8487,4,3,99,100,110,12945,12954,12985,114,111,5,181,1,59,12952,1,181,4,4,59,97,99,100,12964,12966,12971,12976,1,8739,115,116,59,1,42,105,114,59,1,10992,111,116,5,183,1,59,12983,1,183,117,115,4,3,59,98,100,12995,12997,13000,1,8722,59,1,8863,4,2,59,117,13006,13008,1,8760,59,1,10794,4,2,99,100,13017,13021,112,59,1,10971,114,59,1,8230,112,108,117,115,59,1,8723,4,2,100,112,13038,13044,101,108,115,59,1,8871,102,59,3,55349,56670,59,1,8723,4,2,99,116,13058,13063,114,59,3,55349,56514,112,111,115,59,1,8766,4,3,59,108,109,13077,13079,13087,1,956,116,105,109,97,112,59,1,8888,97,112,59,1,8888,4,24,71,76,82,86,97,98,99,100,101,102,103,104,105,106,108,109,111,112,114,115,116,117,118,119,13142,13165,13217,13229,13247,13330,13359,13414,13420,13508,13513,13579,13602,13626,13631,13762,13767,13855,13936,13995,14214,14285,14312,14432,4,2,103,116,13148,13152,59,3,8921,824,4,2,59,118,13158,13161,3,8811,8402,59,3,8811,824,4,3,101,108,116,13173,13200,13204,102,116,4,2,97,114,13181,13188,114,114,111,119,59,1,8653,105,103,104,116,97,114,114,111,119,59,1,8654,59,3,8920,824,4,2,59,118,13210,13213,3,8810,8402,59,3,8810,824,105,103,104,116,97,114,114,111,119,59,1,8655,4,2,68,100,13235,13241,97,115,104,59,1,8879,97,115,104,59,1,8878,4,5,98,99,110,112,116,13259,13264,13270,13275,13308,108,97,59,1,8711,117,116,101,59,1,324,103,59,3,8736,8402,4,5,59,69,105,111,112,13287,13289,13293,13298,13302,1,8777,59,3,10864,824,100,59,3,8779,824,115,59,1,329,114,111,120,59,1,8777,117,114,4,2,59,97,13316,13318,1,9838,108,4,2,59,115,13325,13327,1,9838,59,1,8469,4,2,115,117,13336,13344,112,5,160,1,59,13342,1,160,109,112,4,2,59,101,13352,13355,3,8782,824,59,3,8783,824,4,5,97,101,111,117,121,13371,13385,13391,13407,13411,4,2,112,114,13377,13380,59,1,10819,111,110,59,1,328,100,105,108,59,1,326,110,103,4,2,59,100,13399,13401,1,8775,111,116,59,3,10861,824,112,59,1,10818,59,1,1085,97,115,104,59,1,8211,4,7,59,65,97,100,113,115,120,13436,13438,13443,13466,13472,13478,13494,1,8800,114,114,59,1,8663,114,4,2,104,114,13450,13454,107,59,1,10532,4,2,59,111,13460,13462,1,8599,119,59,1,8599,111,116,59,3,8784,824,117,105,118,59,1,8802,4,2,101,105,13484,13489,97,114,59,1,10536,109,59,3,8770,824,105,115,116,4,2,59,115,13503,13505,1,8708,59,1,8708,114,59,3,55349,56619,4,4,69,101,115,116,13523,13527,13563,13568,59,3,8807,824,4,3,59,113,115,13535,13537,13559,1,8817,4,3,59,113,115,13545,13547,13551,1,8817,59,3,8807,824,108,97,110,116,59,3,10878,824,59,3,10878,824,105,109,59,1,8821,4,2,59,114,13574,13576,1,8815,59,1,8815,4,3,65,97,112,13587,13592,13597,114,114,59,1,8654,114,114,59,1,8622,97,114,59,1,10994,4,3,59,115,118,13610,13612,13623,1,8715,4,2,59,100,13618,13620,1,8956,59,1,8954,59,1,8715,99,121,59,1,1114,4,7,65,69,97,100,101,115,116,13647,13652,13656,13661,13665,13737,13742,114,114,59,1,8653,59,3,8806,824,114,114,59,1,8602,114,59,1,8229,4,4,59,102,113,115,13675,13677,13703,13725,1,8816,116,4,2,97,114,13684,13691,114,114,111,119,59,1,8602,105,103,104,116,97,114,114,111,119,59,1,8622,4,3,59,113,115,13711,13713,13717,1,8816,59,3,8806,824,108,97,110,116,59,3,10877,824,4,2,59,115,13731,13734,3,10877,824,59,1,8814,105,109,59,1,8820,4,2,59,114,13748,13750,1,8814,105,4,2,59,101,13757,13759,1,8938,59,1,8940,105,100,59,1,8740,4,2,112,116,13773,13778,102,59,3,55349,56671,5,172,3,59,105,110,13787,13789,13829,1,172,110,4,4,59,69,100,118,13800,13802,13806,13812,1,8713,59,3,8953,824,111,116,59,3,8949,824,4,3,97,98,99,13820,13823,13826,59,1,8713,59,1,8951,59,1,8950,105,4,2,59,118,13836,13838,1,8716,4,3,97,98,99,13846,13849,13852,59,1,8716,59,1,8958,59,1,8957,4,3,97,111,114,13863,13892,13899,114,4,4,59,97,115,116,13874,13876,13883,13888,1,8742,108,108,101,108,59,1,8742,108,59,3,11005,8421,59,3,8706,824,108,105,110,116,59,1,10772,4,3,59,99,101,13907,13909,13914,1,8832,117,101,59,1,8928,4,2,59,99,13920,13923,3,10927,824,4,2,59,101,13929,13931,1,8832,113,59,3,10927,824,4,4,65,97,105,116,13946,13951,13971,13982,114,114,59,1,8655,114,114,4,3,59,99,119,13961,13963,13967,1,8603,59,3,10547,824,59,3,8605,824,103,104,116,97,114,114,111,119,59,1,8603,114,105,4,2,59,101,13990,13992,1,8939,59,1,8941,4,7,99,104,105,109,112,113,117,14011,14036,14060,14080,14085,14090,14106,4,4,59,99,101,114,14021,14023,14028,14032,1,8833,117,101,59,1,8929,59,3,10928,824,59,3,55349,56515,111,114,116,4,2,109,112,14045,14050,105,100,59,1,8740,97,114,97,108,108,101,108,59,1,8742,109,4,2,59,101,14067,14069,1,8769,4,2,59,113,14075,14077,1,8772,59,1,8772,105,100,59,1,8740,97,114,59,1,8742,115,117,4,2,98,112,14098,14102,101,59,1,8930,101,59,1,8931,4,3,98,99,112,14114,14157,14171,4,4,59,69,101,115,14124,14126,14130,14133,1,8836,59,3,10949,824,59,1,8840,101,116,4,2,59,101,14141,14144,3,8834,8402,113,4,2,59,113,14151,14153,1,8840,59,3,10949,824,99,4,2,59,101,14164,14166,1,8833,113,59,3,10928,824,4,4,59,69,101,115,14181,14183,14187,14190,1,8837,59,3,10950,824,59,1,8841,101,116,4,2,59,101,14198,14201,3,8835,8402,113,4,2,59,113,14208,14210,1,8841,59,3,10950,824,4,4,103,105,108,114,14224,14228,14238,14242,108,59,1,8825,108,100,101,5,241,1,59,14236,1,241,103,59,1,8824,105,97,110,103,108,101,4,2,108,114,14254,14269,101,102,116,4,2,59,101,14263,14265,1,8938,113,59,1,8940,105,103,104,116,4,2,59,101,14279,14281,1,8939,113,59,1,8941,4,2,59,109,14291,14293,1,957,4,3,59,101,115,14301,14303,14308,1,35,114,111,59,1,8470,112,59,1,8199,4,9,68,72,97,100,103,105,108,114,115,14332,14338,14344,14349,14355,14369,14376,14408,14426,97,115,104,59,1,8877,97,114,114,59,1,10500,112,59,3,8781,8402,97,115,104,59,1,8876,4,2,101,116,14361,14365,59,3,8805,8402,59,3,62,8402,110,102,105,110,59,1,10718,4,3,65,101,116,14384,14389,14393,114,114,59,1,10498,59,3,8804,8402,4,2,59,114,14399,14402,3,60,8402,105,101,59,3,8884,8402,4,2,65,116,14414,14419,114,114,59,1,10499,114,105,101,59,3,8885,8402,105,109,59,3,8764,8402,4,3,65,97,110,14440,14445,14468,114,114,59,1,8662,114,4,2,104,114,14452,14456,107,59,1,10531,4,2,59,111,14462,14464,1,8598,119,59,1,8598,101,97,114,59,1,10535,4,18,83,97,99,100,101,102,103,104,105,108,109,111,112,114,115,116,117,118,14512,14515,14535,14560,14597,14603,14618,14643,14657,14662,14701,14741,14747,14769,14851,14877,14907,14916,59,1,9416,4,2,99,115,14521,14531,117,116,101,5,243,1,59,14529,1,243,116,59,1,8859,4,2,105,121,14541,14557,114,4,2,59,99,14548,14550,1,8858,5,244,1,59,14555,1,244,59,1,1086,4,5,97,98,105,111,115,14572,14577,14583,14587,14591,115,104,59,1,8861,108,97,99,59,1,337,118,59,1,10808,116,59,1,8857,111,108,100,59,1,10684,108,105,103,59,1,339,4,2,99,114,14609,14614,105,114,59,1,10687,59,3,55349,56620,4,3,111,114,116,14626,14630,14640,110,59,1,731,97,118,101,5,242,1,59,14638,1,242,59,1,10689,4,2,98,109,14649,14654,97,114,59,1,10677,59,1,937,110,116,59,1,8750,4,4,97,99,105,116,14672,14677,14693,14698,114,114,59,1,8634,4,2,105,114,14683,14687,114,59,1,10686,111,115,115,59,1,10683,110,101,59,1,8254,59,1,10688,4,3,97,101,105,14709,14714,14719,99,114,59,1,333,103,97,59,1,969,4,3,99,100,110,14727,14733,14736,114,111,110,59,1,959,59,1,10678,117,115,59,1,8854,112,102,59,3,55349,56672,4,3,97,101,108,14755,14759,14764,114,59,1,10679,114,112,59,1,10681,117,115,59,1,8853,4,7,59,97,100,105,111,115,118,14785,14787,14792,14831,14837,14841,14848,1,8744,114,114,59,1,8635,4,4,59,101,102,109,14802,14804,14817,14824,1,10845,114,4,2,59,111,14811,14813,1,8500,102,59,1,8500,5,170,1,59,14822,1,170,5,186,1,59,14829,1,186,103,111,102,59,1,8886,114,59,1,10838,108,111,112,101,59,1,10839,59,1,10843,4,3,99,108,111,14859,14863,14873,114,59,1,8500,97,115,104,5,248,1,59,14871,1,248,108,59,1,8856,105,4,2,108,109,14884,14893,100,101,5,245,1,59,14891,1,245,101,115,4,2,59,97,14901,14903,1,8855,115,59,1,10806,109,108,5,246,1,59,14914,1,246,98,97,114,59,1,9021,4,12,97,99,101,102,104,105,108,109,111,114,115,117,14948,14992,14996,15033,15038,15068,15090,15189,15192,15222,15427,15441,114,4,4,59,97,115,116,14959,14961,14976,14989,1,8741,5,182,2,59,108,14968,14970,1,182,108,101,108,59,1,8741,4,2,105,108,14982,14986,109,59,1,10995,59,1,11005,59,1,8706,121,59,1,1087,114,4,5,99,105,109,112,116,15009,15014,15019,15024,15027,110,116,59,1,37,111,100,59,1,46,105,108,59,1,8240,59,1,8869,101,110,107,59,1,8241,114,59,3,55349,56621,4,3,105,109,111,15046,15057,15063,4,2,59,118,15052,15054,1,966,59,1,981,109,97,116,59,1,8499,110,101,59,1,9742,4,3,59,116,118,15076,15078,15087,1,960,99,104,102,111,114,107,59,1,8916,59,1,982,4,2,97,117,15096,15119,110,4,2,99,107,15103,15115,107,4,2,59,104,15110,15112,1,8463,59,1,8462,118,59,1,8463,115,4,9,59,97,98,99,100,101,109,115,116,15140,15142,15148,15151,15156,15168,15171,15179,15184,1,43,99,105,114,59,1,10787,59,1,8862,105,114,59,1,10786,4,2,111,117,15162,15165,59,1,8724,59,1,10789,59,1,10866,110,5,177,1,59,15177,1,177,105,109,59,1,10790,119,111,59,1,10791,59,1,177,4,3,105,112,117,15200,15208,15213,110,116,105,110,116,59,1,10773,102,59,3,55349,56673,110,100,5,163,1,59,15220,1,163,4,10,59,69,97,99,101,105,110,111,115,117,15244,15246,15249,15253,15258,15334,15347,15367,15416,15421,1,8826,59,1,10931,112,59,1,10935,117,101,59,1,8828,4,2,59,99,15264,15266,1,10927,4,6,59,97,99,101,110,115,15280,15282,15290,15299,15303,15329,1,8826,112,112,114,111,120,59,1,10935,117,114,108,121,101,113,59,1,8828,113,59,1,10927,4,3,97,101,115,15311,15319,15324,112,112,114,111,120,59,1,10937,113,113,59,1,10933,105,109,59,1,8936,105,109,59,1,8830,109,101,4,2,59,115,15342,15344,1,8242,59,1,8473,4,3,69,97,115,15355,15358,15362,59,1,10933,112,59,1,10937,105,109,59,1,8936,4,3,100,102,112,15375,15378,15404,59,1,8719,4,3,97,108,115,15386,15392,15398,108,97,114,59,1,9006,105,110,101,59,1,8978,117,114,102,59,1,8979,4,2,59,116,15410,15412,1,8733,111,59,1,8733,105,109,59,1,8830,114,101,108,59,1,8880,4,2,99,105,15433,15438,114,59,3,55349,56517,59,1,968,110,99,115,112,59,1,8200,4,6,102,105,111,112,115,117,15462,15467,15472,15478,15485,15491,114,59,3,55349,56622,110,116,59,1,10764,112,102,59,3,55349,56674,114,105,109,101,59,1,8279,99,114,59,3,55349,56518,4,3,97,101,111,15499,15520,15534,116,4,2,101,105,15506,15515,114,110,105,111,110,115,59,1,8461,110,116,59,1,10774,115,116,4,2,59,101,15528,15530,1,63,113,59,1,8799,116,5,34,1,59,15540,1,34,4,21,65,66,72,97,98,99,100,101,102,104,105,108,109,110,111,112,114,115,116,117,120,15586,15609,15615,15620,15796,15855,15893,15931,15977,16001,16039,16183,16204,16222,16228,16285,16312,16318,16363,16408,16416,4,3,97,114,116,15594,15599,15603,114,114,59,1,8667,114,59,1,8658,97,105,108,59,1,10524,97,114,114,59,1,10511,97,114,59,1,10596,4,7,99,100,101,110,113,114,116,15636,15651,15656,15664,15687,15696,15770,4,2,101,117,15642,15646,59,3,8765,817,116,101,59,1,341,105,99,59,1,8730,109,112,116,121,118,59,1,10675,103,4,4,59,100,101,108,15675,15677,15680,15683,1,10217,59,1,10642,59,1,10661,101,59,1,10217,117,111,5,187,1,59,15694,1,187,114,4,11,59,97,98,99,102,104,108,112,115,116,119,15721,15723,15727,15739,15742,15746,15750,15754,15758,15763,15767,1,8594,112,59,1,10613,4,2,59,102,15733,15735,1,8677,115,59,1,10528,59,1,10547,115,59,1,10526,107,59,1,8618,112,59,1,8620,108,59,1,10565,105,109,59,1,10612,108,59,1,8611,59,1,8605,4,2,97,105,15776,15781,105,108,59,1,10522,111,4,2,59,110,15788,15790,1,8758,97,108,115,59,1,8474,4,3,97,98,114,15804,15809,15814,114,114,59,1,10509,114,107,59,1,10099,4,2,97,107,15820,15833,99,4,2,101,107,15827,15830,59,1,125,59,1,93,4,2,101,115,15839,15842,59,1,10636,108,4,2,100,117,15849,15852,59,1,10638,59,1,10640,4,4,97,101,117,121,15865,15871,15886,15890,114,111,110,59,1,345,4,2,100,105,15877,15882,105,108,59,1,343,108,59,1,8969,98,59,1,125,59,1,1088,4,4,99,108,113,115,15903,15907,15914,15927,97,59,1,10551,100,104,97,114,59,1,10601,117,111,4,2,59,114,15922,15924,1,8221,59,1,8221,104,59,1,8627,4,3,97,99,103,15939,15966,15970,108,4,4,59,105,112,115,15950,15952,15957,15963,1,8476,110,101,59,1,8475,97,114,116,59,1,8476,59,1,8477,116,59,1,9645,5,174,1,59,15975,1,174,4,3,105,108,114,15985,15991,15997,115,104,116,59,1,10621,111,111,114,59,1,8971,59,3,55349,56623,4,2,97,111,16007,16028,114,4,2,100,117,16014,16017,59,1,8641,4,2,59,108,16023,16025,1,8640,59,1,10604,4,2,59,118,16034,16036,1,961,59,1,1009,4,3,103,110,115,16047,16167,16171,104,116,4,6,97,104,108,114,115,116,16063,16081,16103,16130,16143,16155,114,114,111,119,4,2,59,116,16073,16075,1,8594,97,105,108,59,1,8611,97,114,112,111,111,110,4,2,100,117,16093,16099,111,119,110,59,1,8641,112,59,1,8640,101,102,116,4,2,97,104,16112,16120,114,114,111,119,115,59,1,8644,97,114,112,111,111,110,115,59,1,8652,105,103,104,116,97,114,114,111,119,115,59,1,8649,113,117,105,103,97,114,114,111,119,59,1,8605,104,114,101,101,116,105,109,101,115,59,1,8908,103,59,1,730,105,110,103,100,111,116,115,101,113,59,1,8787,4,3,97,104,109,16191,16196,16201,114,114,59,1,8644,97,114,59,1,8652,59,1,8207,111,117,115,116,4,2,59,97,16214,16216,1,9137,99,104,101,59,1,9137,109,105,100,59,1,10990,4,4,97,98,112,116,16238,16252,16257,16278,4,2,110,114,16244,16248,103,59,1,10221,114,59,1,8702,114,107,59,1,10215,4,3,97,102,108,16265,16269,16273,114,59,1,10630,59,3,55349,56675,117,115,59,1,10798,105,109,101,115,59,1,10805,4,2,97,112,16291,16304,114,4,2,59,103,16298,16300,1,41,116,59,1,10644,111,108,105,110,116,59,1,10770,97,114,114,59,1,8649,4,4,97,99,104,113,16328,16334,16339,16342,113,117,111,59,1,8250,114,59,3,55349,56519,59,1,8625,4,2,98,117,16348,16351,59,1,93,111,4,2,59,114,16358,16360,1,8217,59,1,8217,4,3,104,105,114,16371,16377,16383,114,101,101,59,1,8908,109,101,115,59,1,8906,105,4,4,59,101,102,108,16394,16396,16399,16402,1,9657,59,1,8885,59,1,9656,116,114,105,59,1,10702,108,117,104,97,114,59,1,10600,59,1,8478,4,19,97,98,99,100,101,102,104,105,108,109,111,112,113,114,115,116,117,119,122,16459,16466,16472,16572,16590,16672,16687,16746,16844,16850,16924,16963,16988,17115,17121,17154,17206,17614,17656,99,117,116,101,59,1,347,113,117,111,59,1,8218,4,10,59,69,97,99,101,105,110,112,115,121,16494,16496,16499,16513,16518,16531,16536,16556,16564,16569,1,8827,59,1,10932,4,2,112,114,16505,16508,59,1,10936,111,110,59,1,353,117,101,59,1,8829,4,2,59,100,16524,16526,1,10928,105,108,59,1,351,114,99,59,1,349,4,3,69,97,115,16544,16547,16551,59,1,10934,112,59,1,10938,105,109,59,1,8937,111,108,105,110,116,59,1,10771,105,109,59,1,8831,59,1,1089,111,116,4,3,59,98,101,16582,16584,16587,1,8901,59,1,8865,59,1,10854,4,7,65,97,99,109,115,116,120,16606,16611,16634,16642,16646,16652,16668,114,114,59,1,8664,114,4,2,104,114,16618,16622,107,59,1,10533,4,2,59,111,16628,16630,1,8600,119,59,1,8600,116,5,167,1,59,16640,1,167,105,59,1,59,119,97,114,59,1,10537,109,4,2,105,110,16659,16665,110,117,115,59,1,8726,59,1,8726,116,59,1,10038,114,4,2,59,111,16679,16682,3,55349,56624,119,110,59,1,8994,4,4,97,99,111,121,16697,16702,16716,16739,114,112,59,1,9839,4,2,104,121,16708,16713,99,121,59,1,1097,59,1,1096,114,116,4,2,109,112,16724,16729,105,100,59,1,8739,97,114,97,108,108,101,108,59,1,8741,5,173,1,59,16744,1,173,4,2,103,109,16752,16770,109,97,4,3,59,102,118,16762,16764,16767,1,963,59,1,962,59,1,962,4,8,59,100,101,103,108,110,112,114,16788,16790,16795,16806,16817,16828,16832,16838,1,8764,111,116,59,1,10858,4,2,59,113,16801,16803,1,8771,59,1,8771,4,2,59,69,16812,16814,1,10910,59,1,10912,4,2,59,69,16823,16825,1,10909,59,1,10911,101,59,1,8774,108,117,115,59,1,10788,97,114,114,59,1,10610,97,114,114,59,1,8592,4,4,97,101,105,116,16860,16883,16891,16904,4,2,108,115,16866,16878,108,115,101,116,109,105,110,117,115,59,1,8726,104,112,59,1,10803,112,97,114,115,108,59,1,10724,4,2,100,108,16897,16900,59,1,8739,101,59,1,8995,4,2,59,101,16910,16912,1,10922,4,2,59,115,16918,16920,1,10924,59,3,10924,65024,4,3,102,108,112,16932,16938,16958,116,99,121,59,1,1100,4,2,59,98,16944,16946,1,47,4,2,59,97,16952,16954,1,10692,114,59,1,9023,102,59,3,55349,56676,97,4,2,100,114,16970,16985,101,115,4,2,59,117,16978,16980,1,9824,105,116,59,1,9824,59,1,8741,4,3,99,115,117,16996,17028,17089,4,2,97,117,17002,17015,112,4,2,59,115,17009,17011,1,8851,59,3,8851,65024,112,4,2,59,115,17022,17024,1,8852,59,3,8852,65024,117,4,2,98,112,17035,17062,4,3,59,101,115,17043,17045,17048,1,8847,59,1,8849,101,116,4,2,59,101,17056,17058,1,8847,113,59,1,8849,4,3,59,101,115,17070,17072,17075,1,8848,59,1,8850,101,116,4,2,59,101,17083,17085,1,8848,113,59,1,8850,4,3,59,97,102,17097,17099,17112,1,9633,114,4,2,101,102,17106,17109,59,1,9633,59,1,9642,59,1,9642,97,114,114,59,1,8594,4,4,99,101,109,116,17131,17136,17142,17148,114,59,3,55349,56520,116,109,110,59,1,8726,105,108,101,59,1,8995,97,114,102,59,1,8902,4,2,97,114,17160,17172,114,4,2,59,102,17167,17169,1,9734,59,1,9733,4,2,97,110,17178,17202,105,103,104,116,4,2,101,112,17188,17197,112,115,105,108,111,110,59,1,1013,104,105,59,1,981,115,59,1,175,4,5,98,99,109,110,112,17218,17351,17420,17423,17427,4,9,59,69,100,101,109,110,112,114,115,17238,17240,17243,17248,17261,17267,17279,17285,17291,1,8834,59,1,10949,111,116,59,1,10941,4,2,59,100,17254,17256,1,8838,111,116,59,1,10947,117,108,116,59,1,10945,4,2,69,101,17273,17276,59,1,10955,59,1,8842,108,117,115,59,1,10943,97,114,114,59,1,10617,4,3,101,105,117,17299,17335,17339,116,4,3,59,101,110,17308,17310,17322,1,8834,113,4,2,59,113,17317,17319,1,8838,59,1,10949,101,113,4,2,59,113,17330,17332,1,8842,59,1,10955,109,59,1,10951,4,2,98,112,17345,17348,59,1,10965,59,1,10963,99,4,6,59,97,99,101,110,115,17366,17368,17376,17385,17389,17415,1,8827,112,112,114,111,120,59,1,10936,117,114,108,121,101,113,59,1,8829,113,59,1,10928,4,3,97,101,115,17397,17405,17410,112,112,114,111,120,59,1,10938,113,113,59,1,10934,105,109,59,1,8937,105,109,59,1,8831,59,1,8721,103,59,1,9834,4,13,49,50,51,59,69,100,101,104,108,109,110,112,115,17455,17462,17469,17476,17478,17481,17496,17509,17524,17530,17536,17548,17554,5,185,1,59,17460,1,185,5,178,1,59,17467,1,178,5,179,1,59,17474,1,179,1,8835,59,1,10950,4,2,111,115,17487,17491,116,59,1,10942,117,98,59,1,10968,4,2,59,100,17502,17504,1,8839,111,116,59,1,10948,115,4,2,111,117,17516,17520,108,59,1,10185,98,59,1,10967,97,114,114,59,1,10619,117,108,116,59,1,10946,4,2,69,101,17542,17545,59,1,10956,59,1,8843,108,117,115,59,1,10944,4,3,101,105,117,17562,17598,17602,116,4,3,59,101,110,17571,17573,17585,1,8835,113,4,2,59,113,17580,17582,1,8839,59,1,10950,101,113,4,2,59,113,17593,17595,1,8843,59,1,10956,109,59,1,10952,4,2,98,112,17608,17611,59,1,10964,59,1,10966,4,3,65,97,110,17622,17627,17650,114,114,59,1,8665,114,4,2,104,114,17634,17638,107,59,1,10534,4,2,59,111,17644,17646,1,8601,119,59,1,8601,119,97,114,59,1,10538,108,105,103,5,223,1,59,17664,1,223,4,13,97,98,99,100,101,102,104,105,111,112,114,115,119,17694,17709,17714,17737,17742,17749,17754,17860,17905,17957,17964,18090,18122,4,2,114,117,17700,17706,103,101,116,59,1,8982,59,1,964,114,107,59,1,9140,4,3,97,101,121,17722,17728,17734,114,111,110,59,1,357,100,105,108,59,1,355,59,1,1090,111,116,59,1,8411,108,114,101,99,59,1,8981,114,59,3,55349,56625,4,4,101,105,107,111,17764,17805,17836,17851,4,2,114,116,17770,17786,101,4,2,52,102,17777,17780,59,1,8756,111,114,101,59,1,8756,97,4,3,59,115,118,17795,17797,17802,1,952,121,109,59,1,977,59,1,977,4,2,99,110,17811,17831,107,4,2,97,115,17818,17826,112,112,114,111,120,59,1,8776,105,109,59,1,8764,115,112,59,1,8201,4,2,97,115,17842,17846,112,59,1,8776,105,109,59,1,8764,114,110,5,254,1,59,17858,1,254,4,3,108,109,110,17868,17873,17901,100,101,59,1,732,101,115,5,215,3,59,98,100,17884,17886,17898,1,215,4,2,59,97,17892,17894,1,8864,114,59,1,10801,59,1,10800,116,59,1,8749,4,3,101,112,115,17913,17917,17953,97,59,1,10536,4,4,59,98,99,102,17927,17929,17934,17939,1,8868,111,116,59,1,9014,105,114,59,1,10993,4,2,59,111,17945,17948,3,55349,56677,114,107,59,1,10970,97,59,1,10537,114,105,109,101,59,1,8244,4,3,97,105,112,17972,17977,18082,100,101,59,1,8482,4,7,97,100,101,109,112,115,116,17993,18051,18056,18059,18066,18072,18076,110,103,108,101,4,5,59,100,108,113,114,18009,18011,18017,18032,18035,1,9653,111,119,110,59,1,9663,101,102,116,4,2,59,101,18026,18028,1,9667,113,59,1,8884,59,1,8796,105,103,104,116,4,2,59,101,18045,18047,1,9657,113,59,1,8885,111,116,59,1,9708,59,1,8796,105,110,117,115,59,1,10810,108,117,115,59,1,10809,98,59,1,10701,105,109,101,59,1,10811,101,122,105,117,109,59,1,9186,4,3,99,104,116,18098,18111,18116,4,2,114,121,18104,18108,59,3,55349,56521,59,1,1094,99,121,59,1,1115,114,111,107,59,1,359,4,2,105,111,18128,18133,120,116,59,1,8812,104,101,97,100,4,2,108,114,18143,18154,101,102,116,97,114,114,111,119,59,1,8606,105,103,104,116,97,114,114,111,119,59,1,8608,4,18,65,72,97,98,99,100,102,103,104,108,109,111,112,114,115,116,117,119,18204,18209,18214,18234,18250,18268,18292,18308,18319,18343,18379,18397,18413,18504,18547,18553,18584,18603,114,114,59,1,8657,97,114,59,1,10595,4,2,99,114,18220,18230,117,116,101,5,250,1,59,18228,1,250,114,59,1,8593,114,4,2,99,101,18241,18245,121,59,1,1118,118,101,59,1,365,4,2,105,121,18256,18265,114,99,5,251,1,59,18263,1,251,59,1,1091,4,3,97,98,104,18276,18281,18287,114,114,59,1,8645,108,97,99,59,1,369,97,114,59,1,10606,4,2,105,114,18298,18304,115,104,116,59,1,10622,59,3,55349,56626,114,97,118,101,5,249,1,59,18317,1,249,4,2,97,98,18325,18338,114,4,2,108,114,18332,18335,59,1,8639,59,1,8638,108,107,59,1,9600,4,2,99,116,18349,18374,4,2,111,114,18355,18369,114,110,4,2,59,101,18363,18365,1,8988,114,59,1,8988,111,112,59,1,8975,114,105,59,1,9720,4,2,97,108,18385,18390,99,114,59,1,363,5,168,1,59,18395,1,168,4,2,103,112,18403,18408,111,110,59,1,371,102,59,3,55349,56678,4,6,97,100,104,108,115,117,18427,18434,18445,18470,18475,18494,114,114,111,119,59,1,8593,111,119,110,97,114,114,111,119,59,1,8597,97,114,112,111,111,110,4,2,108,114,18457,18463,101,102,116,59,1,8639,105,103,104,116,59,1,8638,117,115,59,1,8846,105,4,3,59,104,108,18484,18486,18489,1,965,59,1,978,111,110,59,1,965,112,97,114,114,111,119,115,59,1,8648,4,3,99,105,116,18512,18537,18542,4,2,111,114,18518,18532,114,110,4,2,59,101,18526,18528,1,8989,114,59,1,8989,111,112,59,1,8974,110,103,59,1,367,114,105,59,1,9721,99,114,59,3,55349,56522,4,3,100,105,114,18561,18566,18572,111,116,59,1,8944,108,100,101,59,1,361,105,4,2,59,102,18579,18581,1,9653,59,1,9652,4,2,97,109,18590,18595,114,114,59,1,8648,108,5,252,1,59,18601,1,252,97,110,103,108,101,59,1,10663,4,15,65,66,68,97,99,100,101,102,108,110,111,112,114,115,122,18643,18648,18661,18667,18847,18851,18857,18904,18909,18915,18931,18937,18943,18949,18996,114,114,59,1,8661,97,114,4,2,59,118,18656,18658,1,10984,59,1,10985,97,115,104,59,1,8872,4,2,110,114,18673,18679,103,114,116,59,1,10652,4,7,101,107,110,112,114,115,116,18695,18704,18711,18720,18742,18754,18810,112,115,105,108,111,110,59,1,1013,97,112,112,97,59,1,1008,111,116,104,105,110,103,59,1,8709,4,3,104,105,114,18728,18732,18735,105,59,1,981,59,1,982,111,112,116,111,59,1,8733,4,2,59,104,18748,18750,1,8597,111,59,1,1009,4,2,105,117,18760,18766,103,109,97,59,1,962,4,2,98,112,18772,18791,115,101,116,110,101,113,4,2,59,113,18784,18787,3,8842,65024,59,3,10955,65024,115,101,116,110,101,113,4,2,59,113,18803,18806,3,8843,65024,59,3,10956,65024,4,2,104,114,18816,18822,101,116,97,59,1,977,105,97,110,103,108,101,4,2,108,114,18834,18840,101,102,116,59,1,8882,105,103,104,116,59,1,8883,121,59,1,1074,97,115,104,59,1,8866,4,3,101,108,114,18865,18884,18890,4,3,59,98,101,18873,18875,18880,1,8744,97,114,59,1,8891,113,59,1,8794,108,105,112,59,1,8942,4,2,98,116,18896,18901,97,114,59,1,124,59,1,124,114,59,3,55349,56627,116,114,105,59,1,8882,115,117,4,2,98,112,18923,18927,59,3,8834,8402,59,3,8835,8402,112,102,59,3,55349,56679,114,111,112,59,1,8733,116,114,105,59,1,8883,4,2,99,117,18955,18960,114,59,3,55349,56523,4,2,98,112,18966,18981,110,4,2,69,101,18973,18977,59,3,10955,65024,59,3,8842,65024,110,4,2,69,101,18988,18992,59,3,10956,65024,59,3,8843,65024,105,103,122,97,103,59,1,10650,4,7,99,101,102,111,112,114,115,19020,19026,19061,19066,19072,19075,19089,105,114,99,59,1,373,4,2,100,105,19032,19055,4,2,98,103,19038,19043,97,114,59,1,10847,101,4,2,59,113,19050,19052,1,8743,59,1,8793,101,114,112,59,1,8472,114,59,3,55349,56628,112,102,59,3,55349,56680,59,1,8472,4,2,59,101,19081,19083,1,8768,97,116,104,59,1,8768,99,114,59,3,55349,56524,4,14,99,100,102,104,105,108,109,110,111,114,115,117,118,119,19125,19146,19152,19157,19173,19176,19192,19197,19202,19236,19252,19269,19286,19291,4,3,97,105,117,19133,19137,19142,112,59,1,8898,114,99,59,1,9711,112,59,1,8899,116,114,105,59,1,9661,114,59,3,55349,56629,4,2,65,97,19163,19168,114,114,59,1,10234,114,114,59,1,10231,59,1,958,4,2,65,97,19182,19187,114,114,59,1,10232,114,114,59,1,10229,97,112,59,1,10236,105,115,59,1,8955,4,3,100,112,116,19210,19215,19230,111,116,59,1,10752,4,2,102,108,19221,19225,59,3,55349,56681,117,115,59,1,10753,105,109,101,59,1,10754,4,2,65,97,19242,19247,114,114,59,1,10233,114,114,59,1,10230,4,2,99,113,19258,19263,114,59,3,55349,56525,99,117,112,59,1,10758,4,2,112,116,19275,19281,108,117,115,59,1,10756,114,105,59,1,9651,101,101,59,1,8897,101,100,103,101,59,1,8896,4,8,97,99,101,102,105,111,115,117,19316,19335,19349,19357,19362,19367,19373,19379,99,4,2,117,121,19323,19332,116,101,5,253,1,59,19330,1,253,59,1,1103,4,2,105,121,19341,19346,114,99,59,1,375,59,1,1099,110,5,165,1,59,19355,1,165,114,59,3,55349,56630,99,121,59,1,1111,112,102,59,3,55349,56682,99,114,59,3,55349,56526,4,2,99,109,19385,19389,121,59,1,1102,108,5,255,1,59,19395,1,255,4,10,97,99,100,101,102,104,105,111,115,119,19419,19426,19441,19446,19462,19467,19472,19480,19486,19492,99,117,116,101,59,1,378,4,2,97,121,19432,19438,114,111,110,59,1,382,59,1,1079,111,116,59,1,380,4,2,101,116,19452,19458,116,114,102,59,1,8488,97,59,1,950,114,59,3,55349,56631,99,121,59,1,1078,103,114,97,114,114,59,1,8669,112,102,59,3,55349,56683,99,114,59,3,55349,56527,4,2,106,110,19498,19501,59,1,8205,106,59,1,8204]);

/***/ }),

/***/ 98601:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


const unicode = __webpack_require__(15695);
const ERR = __webpack_require__(58991);

//Aliases
const $ = unicode.CODE_POINTS;

//Const
const DEFAULT_BUFFER_WATERLINE = 1 << 16;

//Preprocessor
//NOTE: HTML input preprocessing
//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)
class Preprocessor {
    constructor() {
        this.html = null;

        this.pos = -1;
        this.lastGapPos = -1;
        this.lastCharPos = -1;

        this.gapStack = [];

        this.skipNextNewLine = false;

        this.lastChunkWritten = false;
        this.endOfChunkHit = false;
        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;
    }

    _err() {
        // NOTE: err reporting is noop by default. Enabled by mixin.
    }

    _addGap() {
        this.gapStack.push(this.lastGapPos);
        this.lastGapPos = this.pos;
    }

    _processSurrogate(cp) {
        //NOTE: try to peek a surrogate pair
        if (this.pos !== this.lastCharPos) {
            const nextCp = this.html.charCodeAt(this.pos + 1);

            if (unicode.isSurrogatePair(nextCp)) {
                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.
                this.pos++;

                //NOTE: add gap that should be avoided during retreat
                this._addGap();

                return unicode.getSurrogatePairCodePoint(cp, nextCp);
            }
        }

        //NOTE: we are at the end of a chunk, therefore we can't infer surrogate pair yet.
        else if (!this.lastChunkWritten) {
            this.endOfChunkHit = true;
            return $.EOF;
        }

        //NOTE: isolated surrogate
        this._err(ERR.surrogateInInputStream);

        return cp;
    }

    dropParsedChunk() {
        if (this.pos > this.bufferWaterline) {
            this.lastCharPos -= this.pos;
            this.html = this.html.substring(this.pos);
            this.pos = 0;
            this.lastGapPos = -1;
            this.gapStack = [];
        }
    }

    write(chunk, isLastChunk) {
        if (this.html) {
            this.html += chunk;
        } else {
            this.html = chunk;
        }

        this.lastCharPos = this.html.length - 1;
        this.endOfChunkHit = false;
        this.lastChunkWritten = isLastChunk;
    }

    insertHtmlAtCurrentPos(chunk) {
        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1, this.html.length);

        this.lastCharPos = this.html.length - 1;
        this.endOfChunkHit = false;
    }

    advance() {
        this.pos++;

        if (this.pos > this.lastCharPos) {
            this.endOfChunkHit = !this.lastChunkWritten;
            return $.EOF;
        }

        let cp = this.html.charCodeAt(this.pos);

        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character
        //must be ignored.
        if (this.skipNextNewLine && cp === $.LINE_FEED) {
            this.skipNextNewLine = false;
            this._addGap();
            return this.advance();
        }

        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters
        if (cp === $.CARRIAGE_RETURN) {
            this.skipNextNewLine = true;
            return $.LINE_FEED;
        }

        this.skipNextNewLine = false;

        if (unicode.isSurrogate(cp)) {
            cp = this._processSurrogate(cp);
        }

        //OPTIMIZATION: first check if code point is in the common allowed
        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)
        //before going into detailed performance cost validation.
        const isCommonValidRange =
            (cp > 0x1f && cp < 0x7f) || cp === $.LINE_FEED || cp === $.CARRIAGE_RETURN || (cp > 0x9f && cp < 0xfdd0);

        if (!isCommonValidRange) {
            this._checkForProblematicCharacters(cp);
        }

        return cp;
    }

    _checkForProblematicCharacters(cp) {
        if (unicode.isControlCodePoint(cp)) {
            this._err(ERR.controlCharacterInInputStream);
        } else if (unicode.isUndefinedCodePoint(cp)) {
            this._err(ERR.noncharacterInInputStream);
        }
    }

    retreat() {
        if (this.pos === this.lastGapPos) {
            this.lastGapPos = this.gapStack.pop();
            this.pos--;
        }

        this.pos--;
    }
}

module.exports = Preprocessor;


/***/ }),

/***/ 26247:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


const { DOCUMENT_MODE } = __webpack_require__(1199);

//Node construction
exports.createDocument = function() {
    return {
        nodeName: '#document',
        mode: DOCUMENT_MODE.NO_QUIRKS,
        childNodes: []
    };
};

exports.createDocumentFragment = function() {
    return {
        nodeName: '#document-fragment',
        childNodes: []
    };
};

exports.createElement = function(tagName, namespaceURI, attrs) {
    return {
        nodeName: tagName,
        tagName: tagName,
        attrs: attrs,
        namespaceURI: namespaceURI,
        childNodes: [],
        parentNode: null
    };
};

exports.createCommentNode = function(data) {
    return {
        nodeName: '#comment',
        data: data,
        parentNode: null
    };
};

const createTextNode = function(value) {
    return {
        nodeName: '#text',
        value: value,
        parentNode: null
    };
};

//Tree mutation
const appendChild = (exports.appendChild = function(parentNode, newNode) {
    parentNode.childNodes.push(newNode);
    newNode.parentNode = parentNode;
});

const insertBefore = (exports.insertBefore = function(parentNode, newNode, referenceNode) {
    const insertionIdx = parentNode.childNodes.indexOf(referenceNode);

    parentNode.childNodes.splice(insertionIdx, 0, newNode);
    newNode.parentNode = parentNode;
});

exports.setTemplateContent = function(templateElement, contentElement) {
    templateElement.content = contentElement;
};

exports.getTemplateContent = function(templateElement) {
    return templateElement.content;
};

exports.setDocumentType = function(document, name, publicId, systemId) {
    let doctypeNode = null;

    for (let i = 0; i < document.childNodes.length; i++) {
        if (document.childNodes[i].nodeName === '#documentType') {
            doctypeNode = document.childNodes[i];
            break;
        }
    }

    if (doctypeNode) {
        doctypeNode.name = name;
        doctypeNode.publicId = publicId;
        doctypeNode.systemId = systemId;
    } else {
        appendChild(document, {
            nodeName: '#documentType',
            name: name,
            publicId: publicId,
            systemId: systemId
        });
    }
};

exports.setDocumentMode = function(document, mode) {
    document.mode = mode;
};

exports.getDocumentMode = function(document) {
    return document.mode;
};

exports.detachNode = function(node) {
    if (node.parentNode) {
        const idx = node.parentNode.childNodes.indexOf(node);

        node.parentNode.childNodes.splice(idx, 1);
        node.parentNode = null;
    }
};

exports.insertText = function(parentNode, text) {
    if (parentNode.childNodes.length) {
        const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];

        if (prevNode.nodeName === '#text') {
            prevNode.value += text;
            return;
        }
    }

    appendChild(parentNode, createTextNode(text));
};

exports.insertTextBefore = function(parentNode, text, referenceNode) {
    const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];

    if (prevNode && prevNode.nodeName === '#text') {
        prevNode.value += text;
    } else {
        insertBefore(parentNode, createTextNode(text), referenceNode);
    }
};

exports.adoptAttributes = function(recipient, attrs) {
    const recipientAttrsMap = [];

    for (let i = 0; i < recipient.attrs.length; i++) {
        recipientAttrsMap.push(recipient.attrs[i].name);
    }

    for (let j = 0; j < attrs.length; j++) {
        if (recipientAttrsMap.indexOf(attrs[j].name) === -1) {
            recipient.attrs.push(attrs[j]);
        }
    }
};

//Tree traversing
exports.getFirstChild = function(node) {
    return node.childNodes[0];
};

exports.getChildNodes = function(node) {
    return node.childNodes;
};

exports.getParentNode = function(node) {
    return node.parentNode;
};

exports.getAttrList = function(element) {
    return element.attrs;
};

//Node data
exports.getTagName = function(element) {
    return element.tagName;
};

exports.getNamespaceURI = function(element) {
    return element.namespaceURI;
};

exports.getTextNodeContent = function(textNode) {
    return textNode.value;
};

exports.getCommentNodeContent = function(commentNode) {
    return commentNode.data;
};

exports.getDocumentTypeNodeName = function(doctypeNode) {
    return doctypeNode.name;
};

exports.getDocumentTypeNodePublicId = function(doctypeNode) {
    return doctypeNode.publicId;
};

exports.getDocumentTypeNodeSystemId = function(doctypeNode) {
    return doctypeNode.systemId;
};

//Node types
exports.isTextNode = function(node) {
    return node.nodeName === '#text';
};

exports.isCommentNode = function(node) {
    return node.nodeName === '#comment';
};

exports.isDocumentTypeNode = function(node) {
    return node.nodeName === '#documentType';
};

exports.isElementNode = function(node) {
    return !!node.tagName;
};

// Source code location
exports.setNodeSourceCodeLocation = function(node, location) {
    node.sourceCodeLocation = location;
};

exports.getNodeSourceCodeLocation = function(node) {
    return node.sourceCodeLocation;
};

exports.updateNodeSourceCodeLocation = function(node, endLocation) {
    node.sourceCodeLocation = Object.assign(node.sourceCodeLocation, endLocation);
};


/***/ }),

/***/ 54773:
/***/ ((module) => {

"use strict";


module.exports = function mergeOptions(defaults, options) {
    options = options || Object.create(null);

    return [defaults, options].reduce((merged, optObj) => {
        Object.keys(optObj).forEach(key => {
            merged[key] = optObj[key];
        });

        return merged;
    }, Object.create(null));
};


/***/ }),

/***/ 27260:
/***/ ((module) => {

"use strict";


class Mixin {
    constructor(host) {
        const originalMethods = {};
        const overriddenMethods = this._getOverriddenMethods(this, originalMethods);

        for (const key of Object.keys(overriddenMethods)) {
            if (typeof overriddenMethods[key] === 'function') {
                originalMethods[key] = host[key];
                host[key] = overriddenMethods[key];
            }
        }
    }

    _getOverriddenMethods() {
        throw new Error('Not implemented');
    }
}

Mixin.install = function(host, Ctor, opts) {
    if (!host.__mixins) {
        host.__mixins = [];
    }

    for (let i = 0; i < host.__mixins.length; i++) {
        if (host.__mixins[i].constructor === Ctor) {
            return host.__mixins[i];
        }
    }

    const mixin = new Ctor(host, opts);

    host.__mixins.push(mixin);

    return mixin;
};

module.exports = Mixin;


/***/ }),

/***/ 5372:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = __webpack_require__(49567);

function emptyFunction() {}
function emptyFunctionWithReset() {}
emptyFunctionWithReset.resetWarningCache = emptyFunction;

module.exports = function() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      // It is still safe when called from React.
      return;
    }
    var err = new Error(
      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
      'Use PropTypes.checkPropTypes() to call them. ' +
      'Read more at http://fb.me/use-check-prop-types'
    );
    err.name = 'Invariant Violation';
    throw err;
  };
  shim.isRequired = shim;
  function getShim() {
    return shim;
  };
  // Important!
  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
  var ReactPropTypes = {
    array: shim,
    bigint: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    elementType: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim,

    checkPropTypes: emptyFunctionWithReset,
    resetWarningCache: emptyFunction
  };

  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};


/***/ }),

/***/ 2652:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (false) { var throwOnDirectAccess, ReactIs; } else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  module.exports = __webpack_require__(5372)();
}


/***/ }),

/***/ 49567:
/***/ ((module) => {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;


/***/ }),

/***/ 57799:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/*
 Modernizr 3.0.0pre (Custom Build) | MIT
*/
var aa=__webpack_require__(89526),ca=__webpack_require__(72851);function p(a){for(var b="https://reactjs.org/docs/error-decoder.html?invariant="+a,c=1;c<arguments.length;c++)b+="&args[]="+encodeURIComponent(arguments[c]);return"Minified React error #"+a+"; visit "+b+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+"Capture",b)}
function ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}
var ia=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,la=
{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case "function":case "symbol":return!0;case "boolean":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return"data-"!==a&&"aria-"!==a;default:return!1}}
function qa(a,b,c,d){if(null===b||"undefined"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});["contentEditable","draggable","spellCheck","value"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});
["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});
["checked","multiple","muted","selected"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});["capture","download"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});["cols","rows","size","span"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});["rowSpan","start"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a){var b=a.replace(ra,
sa);z[b]=new v(b,1,!1,a,null,!1,!1)});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,"http://www.w3.org/1999/xlink",!1,!1)});["xml:base","xml:lang","xml:space"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,"http://www.w3.org/XML/1998/namespace",!1,!1)});["tabIndex","crossOrigin"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});
z.xlinkHref=new v("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1);["src","href","action","formAction"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});
function ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||"o"!==b[0]&&"O"!==b[0]||"n"!==b[1]&&"N"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,""+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:"":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?"":""+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}
var ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for("react.element"),wa=Symbol.for("react.portal"),ya=Symbol.for("react.fragment"),za=Symbol.for("react.strict_mode"),Aa=Symbol.for("react.profiler"),Ba=Symbol.for("react.provider"),Ca=Symbol.for("react.context"),Da=Symbol.for("react.forward_ref"),Ea=Symbol.for("react.suspense"),Fa=Symbol.for("react.suspense_list"),Ga=Symbol.for("react.memo"),Ha=Symbol.for("react.lazy");Symbol.for("react.scope");Symbol.for("react.debug_trace_mode");
var Ia=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden");Symbol.for("react.cache");Symbol.for("react.tracing_marker");var Ja=Symbol.iterator;function Ka(a){if(null===a||"object"!==typeof a)return null;a=Ja&&a[Ja]||a["@@iterator"];return"function"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\n( *(at )?)/);La=b&&b[1]||""}return"\n"+La+a}var Na=!1;
function Oa(a,b){if(!a||Na)return"";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,"props",{set:function(){throw Error();}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&"string"===typeof l.stack){for(var e=l.stack.split("\n"),
f=d.stack.split("\n"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k="\n"+e[g].replace(" at new "," at ");a.displayName&&k.includes("<anonymous>")&&(k=k.replace("<anonymous>",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:"")?Ma(a):""}
function Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma("Lazy");case 13:return Ma("Suspense");case 19:return Ma("SuspenseList");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return""}}
function Qa(a){if(null==a)return null;if("function"===typeof a)return a.displayName||a.name||null;if("string"===typeof a)return a;switch(a){case ya:return"Fragment";case wa:return"Portal";case Aa:return"Profiler";case za:return"StrictMode";case Ea:return"Suspense";case Fa:return"SuspenseList"}if("object"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||"Context")+".Consumer";case Ba:return(a._context.displayName||"Context")+".Provider";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||
b.name||"",a=""!==a?"ForwardRef("+a+")":"ForwardRef");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||"Memo";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}
function Ra(a){var b=a.type;switch(a.tag){case 24:return"Cache";case 9:return(b.displayName||"Context")+".Consumer";case 10:return(b._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return a=b.render,a=a.displayName||a.name||"",b.displayName||(""!==a?"ForwardRef("+a+")":"ForwardRef");case 7:return"Fragment";case 5:return b;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return Qa(b);case 8:return b===za?"StrictMode":"Mode";case 22:return"Offscreen";
case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"===typeof b)return b.displayName||b.name||null;if("string"===typeof b)return b}return null}function Sa(a){switch(typeof a){case "boolean":case "number":case "string":case "undefined":return a;case "object":return a;default:return""}}
function Ta(a){var b=a.type;return(a=a.nodeName)&&"input"===a.toLowerCase()&&("checkbox"===b||"radio"===b)}
function Ua(a){var b=Ta(a)?"checked":"value",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=""+a[b];if(!a.hasOwnProperty(b)&&"undefined"!==typeof c&&"function"===typeof c.get&&"function"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=""+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=""+a},stopTracking:function(){a._valueTracker=
null;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d="";a&&(d=Ta(a)?a.checked?"true":"false":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||("undefined"!==typeof document?document:void 0);if("undefined"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}
function Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?"":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:"checkbox"===b.type||"radio"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,"checked",b,!1)}
function bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if("number"===d){if(0===c&&""===a.value||a.value!=c)a.value=""+c}else a.value!==""+c&&(a.value=""+c);else if("submit"===d||"reset"===d){a.removeAttribute("value");return}b.hasOwnProperty("value")?cb(a,b.type,c):b.hasOwnProperty("defaultValue")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}
function db(a,b,c){if(b.hasOwnProperty("value")||b.hasOwnProperty("defaultValue")){var d=b.type;if(!("submit"!==d&&"reset"!==d||void 0!==b.value&&null!==b.value))return;b=""+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;""!==c&&(a.name="");a.defaultChecked=!!a._wrapperState.initialChecked;""!==c&&(a.name=c)}
function cb(a,b,c){if("number"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=""+a._wrapperState.initialValue:a.defaultValue!==""+c&&(a.defaultValue=""+c)}var eb=Array.isArray;
function fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b["$"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty("$"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=""+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}
function gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:""+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b="");c=b}a._wrapperState={initialValue:Sa(c)}}
function ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=""+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=""+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&""!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case "svg":return"http://www.w3.org/2000/svg";case "math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}
function lb(a,b){return null==a||"http://www.w3.org/1999/xhtml"===a?kb(b):"http://www.w3.org/2000/svg"===a&&"foreignObject"===b?"http://www.w3.org/1999/xhtml":a}
var mb,nb=function(a){return"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if("http://www.w3.org/2000/svg"!==a.namespaceURI||"innerHTML"in a)a.innerHTML=b;else{mb=mb||document.createElement("div");mb.innerHTML="<svg>"+b.valueOf().toString()+"</svg>";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});
function ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}
var pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,
zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=["Webkit","ms","Moz","O"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||"boolean"===typeof b||""===b?"":c||"number"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(""+b).trim():b+"px"}
function sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf("--"),e=rb(c,b[c],d);"float"===c&&(c="cssFloat");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});
function ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if("object"!==typeof b.dangerouslySetInnerHTML||!("__html"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&"object"!==typeof b.style)throw Error(p(62));}}
function vb(a,b){if(-1===a.indexOf("-"))return"string"===typeof b.is;switch(a){case "annotation-xml":case "color-profile":case "font-face":case "font-face-src":case "font-face-uri":case "font-face-format":case "font-face-name":case "missing-glyph":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;
function Bb(a){if(a=Cb(a)){if("function"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}
function Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case "onClick":case "onClickCapture":case "onDoubleClick":case "onDoubleClickCapture":case "onMouseDown":case "onMouseDownCapture":case "onMouseMove":case "onMouseMoveCapture":case "onMouseUp":case "onMouseUpCapture":case "onMouseEnter":(d=!d.disabled)||(a=a.type,d=!("button"===a||"input"===a||"select"===a||"textarea"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&"function"!==
typeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,"passive",{get:function(){Lb=!0}});window.addEventListener("test",Mb,Mb);window.removeEventListener("test",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}
function Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}
function Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===
c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}
var ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&"function"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}
var oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;
function tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;
default:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}
function vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}
function wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}
function Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}
function Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
function Sc(a,b){switch(a){case "focusin":case "focusout":Lc=null;break;case "dragenter":case "dragleave":Mc=null;break;case "mouseover":case "mouseout":Nc=null;break;case "pointerover":case "pointerout":Oc.delete(b.pointerId);break;case "gotpointercapture":case "lostpointercapture":Pc.delete(b.pointerId)}}
function Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}
function Uc(a,b,c,d,e){switch(b){case "focusin":return Lc=Tc(Lc,a,b,c,d,e),!0;case "dragenter":return Mc=Tc(Mc,a,b,c,d,e),!0;case "mouseover":return Nc=Tc(Nc,a,b,c,d,e),!0;case "pointerover":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case "gotpointercapture":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}
function Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}
function Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}
function ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}
function bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;
function ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}
function fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;
function Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}
function jd(a){switch(a){case "cancel":case "click":case "close":case "contextmenu":case "copy":case "cut":case "auxclick":case "dblclick":case "dragend":case "dragstart":case "drop":case "focusin":case "focusout":case "input":case "invalid":case "keydown":case "keypress":case "keyup":case "mousedown":case "mouseup":case "paste":case "pause":case "play":case "pointercancel":case "pointerdown":case "pointerup":case "ratechange":case "reset":case "resize":case "seeked":case "submit":case "touchcancel":case "touchend":case "touchstart":case "volumechange":case "change":case "selectionchange":case "textInput":case "compositionstart":case "compositionend":case "compositionupdate":case "beforeblur":case "afterblur":case "beforeinput":case "blur":case "fullscreenchange":case "focus":case "hashchange":case "popstate":case "select":case "selectstart":return 1;case "drag":case "dragenter":case "dragexit":case "dragleave":case "dragover":case "mousemove":case "mouseout":case "mouseover":case "pointermove":case "pointerout":case "pointerover":case "scroll":case "toggle":case "touchmove":case "wheel":case "mouseenter":case "mouseleave":case "pointerenter":case "pointerleave":return 4;
case "message":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e="value"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}
function od(a){var b=a.keyCode;"charCode"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}
function rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():"unknown"!==typeof a.returnValue&&
(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():"unknown"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}
var sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if("movementX"in
a)return a.movementX;a!==yd&&(yd&&"mousemove"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return"movementY"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return"clipboardData"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:"Escape",
Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Nd={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",
119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Od={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}
var Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if("Unidentified"!==b)return b}return"keypress"===a.type?(a=od(a),13===a?"Enter":String.fromCharCode(a)):"keydown"===a.type||"keyup"===a.type?Nd[a.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return"keypress"===a.type?od(a):0},keyCode:function(a){return"keydown"===a.type||"keyup"===a.type?a.keyCode:0},which:function(a){return"keypress"===
a.type?od(a):"keydown"===a.type||"keyup"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return"deltaX"in a?a.deltaX:"wheelDeltaX"in a?-a.wheelDeltaX:0},
deltaY:function(a){return"deltaY"in a?a.deltaY:"wheelDeltaY"in a?-a.wheelDeltaY:"wheelDelta"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&"CompositionEvent"in window,be=null;ia&&"documentMode"in document&&(be=document.documentMode);var ce=ia&&"TextEvent"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;
function ge(a,b){switch(a){case "keyup":return-1!==$d.indexOf(b.keyCode);case "keydown":return 229!==b.keyCode;case "keypress":case "mousedown":case "focusout":return!0;default:return!1}}function he(a){a=a.detail;return"object"===typeof a&&"data"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case "compositionend":return he(b);case "keypress":if(32!==b.which)return null;fe=!0;return ee;case "textInput":return a=b.data,a===ee&&fe?null:a;default:return null}}
function ke(a,b){if(ie)return"compositionend"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case "paste":return null;case "keypress":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case "compositionend":return de&&"ko"!==b.locale?null:b.data;default:return null}}
var le={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return"input"===b?!!le[a.type]:"textarea"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,"onChange");0<b.length&&(c=new td("onChange","change",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}
function ve(a,b){if("change"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye="oninput"in document;if(!ye){var ze=document.createElement("div");ze.setAttribute("oninput","return;");ye="function"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent("onpropertychange",Be),qe=pe=null)}function Be(a){if("value"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));Jb(re,b)}}
function Ce(a,b,c){"focusin"===a?(Ae(),pe=b,qe=c,pe.attachEvent("onpropertychange",Be)):"focusout"===a&&Ae()}function De(a){if("selectionchange"===a||"keyup"===a||"keydown"===a)return te(qe)}function Ee(a,b){if("click"===a)return te(b)}function Fe(a,b){if("input"===a||"change"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He="function"===typeof Object.is?Object.is:Ge;
function Ie(a,b){if(He(a,b))return!0;if("object"!==typeof a||null===a||"object"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}
function Ke(a,b){var c=Je(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Le(a,b.parentNode):"contains"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}
function Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c="string"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&("input"===b&&("text"===a.type||"search"===a.type||"tel"===a.type||"url"===a.type||"password"===a.type)||"textarea"===b||"true"===a.contentEditable)}
function Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),"selectionStart"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ke(c,f);var g=Ke(c,
d);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});"function"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}
var Pe=ia&&"documentMode"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;
function Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,"selectionStart"in d&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Ie(Se,d)||(Se=d,d=oe(Re,"onSelect"),0<d.length&&(b=new td("onSelect","select",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}
function Ve(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c["Webkit"+a]="webkit"+b;c["Moz"+a]="moz"+b;return c}var We={animationend:Ve("Animation","AnimationEnd"),animationiteration:Ve("Animation","AnimationIteration"),animationstart:Ve("Animation","AnimationStart"),transitionend:Ve("Transition","TransitionEnd")},Xe={},Ye={};
ia&&(Ye=document.createElement("div").style,"AnimationEvent"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),"TransitionEvent"in window||delete We.transitionend.transition);function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var b=We[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}var $e=Ze("animationend"),af=Ze("animationiteration"),bf=Ze("animationstart"),cf=Ze("transitionend"),df=new Map,ef="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");
function ff(a,b){df.set(a,b);fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,"on"+kf)}ff($e,"onAnimationEnd");ff(af,"onAnimationIteration");ff(bf,"onAnimationStart");ff("dblclick","onDoubleClick");ff("focusin","onFocus");ff("focusout","onBlur");ff(cf,"onTransitionEnd");ha("onMouseEnter",["mouseout","mouseover"]);ha("onMouseLeave",["mouseout","mouseover"]);ha("onPointerEnter",["pointerout","pointerover"]);
ha("onPointerLeave",["pointerout","pointerover"]);fa("onChange","change click focusin focusout input keydown keyup selectionchange".split(" "));fa("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));fa("onBeforeInput",["compositionend","keypress","textInput","paste"]);fa("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" "));fa("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" "));
fa("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var lf="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),mf=new Set("cancel close invalid load scroll toggle".split(" ").concat(lf));
function nf(a,b,c){var d=a.type||"unknown-event";a.currentTarget=c;Ub(d,b,void 0,a);a.currentTarget=null}
function se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a;}
function D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+"__bubble";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4);pf(c,a,d,b)}var rf="_reactListening"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0;da.forEach(function(b){"selectionchange"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf("selectionchange",!1,b))}}
function pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a);e=void 0;!Lb||"touchstart"!==b&&"touchmove"!==b&&"wheel"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}
function hd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb(function(){var d=f,e=xb(c),g=[];
a:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case "keypress":if(0===od(c))break a;case "keydown":case "keyup":k=Rd;break;case "focusin":n="focus";k=Fd;break;case "focusout":n="blur";k=Fd;break;case "beforeblur":case "afterblur":k=Fd;break;case "click":if(2===c.button)break a;case "auxclick":case "dblclick":case "mousedown":case "mousemove":case "mouseup":case "mouseout":case "mouseover":case "contextmenu":k=Bd;break;case "drag":case "dragend":case "dragenter":case "dragexit":case "dragleave":case "dragover":case "dragstart":case "drop":k=
Dd;break;case "touchcancel":case "touchend":case "touchmove":case "touchstart":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case "scroll":k=vd;break;case "wheel":k=Zd;break;case "copy":case "cut":case "paste":k=Jd;break;case "gotpointercapture":case "lostpointercapture":case "pointercancel":case "pointerdown":case "pointermove":case "pointerout":case "pointerover":case "pointerup":k=Td}var t=0!==(b&4),J=!t&&"scroll"===a,x=t?null!==h?h+"Capture":null:h;t=[];for(var w=d,u;null!==
w;){u=w;var F=u.stateNode;5===u.tag&&null!==F&&(u=F,null!==x&&(F=Kb(w,x),null!=F&&t.push(tf(w,F,u))));if(J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(0===(b&7)){a:{h="mouseover"===a||"pointerover"===a;k="mouseout"===a||"pointerout"===a;if(h&&c!==wb&&(n=c.relatedTarget||c.fromElement)&&(Wc(n)||n[uf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(n=c.relatedTarget||c.toElement,k=d,n=n?Wc(n):null,null!==
n&&(J=Vb(n),n!==J||5!==n.tag&&6!==n.tag))n=null}else k=null,n=d;if(k!==n){t=Bd;F="onMouseLeave";x="onMouseEnter";w="mouse";if("pointerout"===a||"pointerover"===a)t=Td,F="onPointerLeave",x="onPointerEnter",w="pointer";J=null==k?h:ue(k);u=null==n?h:ue(n);h=new t(F,w+"leave",k,c,e);h.target=J;h.relatedTarget=u;F=null;Wc(e)===d&&(t=new t(x,w+"enter",n,c,e),t.target=u,t.relatedTarget=J,F=t);J=F;if(k&&n)b:{t=k;x=n;w=0;for(u=t;u;u=vf(u))w++;u=0;for(F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=
vf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t);x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1);null!==n&&null!==J&&wf(g,J,n,t,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if("select"===k||"input"===k&&"file"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&"input"===k.toLowerCase()&&("checkbox"===h.type||"radio"===h.type)&&(na=Ee);if(na&&(na=na(a,d))){ne(g,na,c,e);break a}xa&&xa(a,h,d);"focusout"===a&&(xa=h._wrapperState)&&
xa.controlled&&"number"===h.type&&cb(h,"number",h.value)}xa=d?ue(d):window;switch(a){case "focusin":if(me(xa)||"true"===xa.contentEditable)Qe=xa,Re=d,Se=null;break;case "focusout":Se=Re=Qe=null;break;case "mousedown":Te=!0;break;case "contextmenu":case "mouseup":case "dragend":Te=!1;Ue(g,c,e);break;case "selectionchange":if(Pe)break;case "keydown":case "keyup":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case "compositionstart":var ba="onCompositionStart";break b;case "compositionend":ba="onCompositionEnd";
break b;case "compositionupdate":ba="onCompositionUpdate";break b}ba=void 0}else ie?ge(a,c)&&(ba="onCompositionEnd"):"keydown"===a&&229===c.keyCode&&(ba="onCompositionStart");ba&&(de&&"ko"!==c.locale&&(ie||"onCompositionStart"!==ba?"onCompositionEnd"===ba&&ie&&($a=nd()):(kd=e,ld="value"in kd?kd.value:kd.textContent,ie=!0)),xa=oe(d,ba),0<xa.length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:($a=he(c),null!==$a&&(ba.data=$a))));if($a=ce?je(a,c):ke(a,c))d=oe(d,"onBeforeInput"),
0<d.length&&(e=new Ld("onBeforeInput","beforeinput",null,c,e),g.push({event:e,listeners:d}),e.data=$a)}se(g,b)})}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+"Capture",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Kb(a,c),null!=f&&d.unshift(tf(a,f,e)),f=Kb(a,b),null!=f&&d.push(tf(a,f,e)));a=a.return}return d}function vf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}
function wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Kb(c,f),null!=k&&g.unshift(tf(c,k,h))):e||(k=Kb(c,f),null!=k&&g.push(tf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\r\n?/g,yf=/\u0000|\uFFFD/g;function zf(a){return("string"===typeof a?a:""+a).replace(xf,"\n").replace(yf,"")}function Af(a,b,c){b=zf(b);if(zf(a)!==b&&c)throw Error(p(425));}function Bf(){}
var Cf=null,Df=null;function Ef(a,b){return"textarea"===a||"noscript"===a||"string"===typeof b.children||"number"===typeof b.children||"object"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}
var Ff="function"===typeof setTimeout?setTimeout:void 0,Gf="function"===typeof clearTimeout?clearTimeout:void 0,Hf="function"===typeof Promise?Promise:void 0,Jf="function"===typeof queueMicrotask?queueMicrotask:"undefined"!==typeof Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout(function(){throw a;})}
function Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,"/$"===c){if(0===d){a.removeChild(e);bd(b);return}d--}else"$"!==c&&"$?"!==c&&"$!"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if("$"===b||"$!"===b||"$?"===b)break;if("/$"===b)return null}}return a}
function Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if("$"===c||"$!"===c||"$?"===c){if(0===b)return a;b--}else"/$"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of="__reactFiber$"+Nf,Pf="__reactProps$"+Nf,uf="__reactContainer$"+Nf,of="__reactEvents$"+Nf,Qf="__reactListeners$"+Nf,Rf="__reactHandles$"+Nf;
function Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[Of]||a[uf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}
function E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++;Sf[Tf]=a.current;a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}
function Zf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $f(){E(Wf);E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b);G(Wf,c)}function bg(a,b,c){var d=a.stateNode;b=b.childContextTypes;if("function"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Ra(a)||"Unknown",e));return A({},c,d)}
function cg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf;Xf=H.current;G(H,a);G(Wf,Wf.current);return!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf);G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function ig(a){fg=!0;hg(a)}
function jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}eg=null;fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e;}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg="";function tg(a,b){kg[lg++]=ng;kg[lg++]=mg;mg=a;ng=b}
function ug(a,b,c){og[pg++]=rg;og[pg++]=sg;og[pg++]=qg;qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e);c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;rg=1<<32-oc(b)+e|c<<e|d;sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;
function Ag(a,b){var c=Bg(5,null,null,0);c.elementType="DELETED";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}
function Cg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0):!1;case 6:return b=""===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,xg=a,yg=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=Bg(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,xg=a,yg=
null,!0):!1;default:return!1}}function Dg(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=a.flags&-4097|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}
function Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b="head"!==b&&"body"!==b&&!Ef(a.type,a.memoizedProps));if(b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}Fg(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if("/$"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else"$"!==c&&"$!"!==c&&"$?"!==c||b++}a=a.nextSibling}yg=
null}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null;I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;function Lg(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}var Mg=Uf(null),Ng=null,Og=null,Pg=null;function Qg(){Pg=Og=Ng=null}function Rg(a){var b=Mg.current;E(Mg);a._currentValue=b}
function Sg(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}function Tg(a,b){Ng=a;Pg=Og=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(Ug=!0),a.firstContext=null)}
function Vg(a){var b=a._currentValue;if(Pg!==a)if(a={context:a,memoizedValue:b,next:null},null===Og){if(null===Ng)throw Error(p(308));Og=a;Ng.dependencies={lanes:0,firstContext:a}}else Og=Og.next=a;return b}var Wg=null;function Xg(a){null===Wg?Wg=[a]:Wg.push(a)}function Yg(a,b,c,d){var e=b.interleaved;null===e?(c.next=c,Xg(b)):(c.next=e.next,e.next=c);b.interleaved=c;return Zg(a,d)}
function Zg(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var $g=!1;function ah(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}
function bh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function ch(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}
function dh(a,b,c){var d=a.updateQueue;if(null===d)return null;d=d.shared;if(0!==(K&2)){var e=d.pending;null===e?b.next=b:(b.next=e.next,e.next=b);d.pending=b;return Zg(a,c)}e=d.interleaved;null===e?(b.next=b,Xg(d)):(b.next=e.next,e.next=b);d.interleaved=b;return Zg(a,c)}function eh(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}
function fh(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=
b;c.lastBaseUpdate=b}
function gh(a,b,c,d){var e=a.updateQueue;$g=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var m=a.alternate;null!==m&&(m=m.updateQueue,h=m.lastBaseUpdate,h!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;g=0;m=l=k=null;h=f;do{var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,
next:null});a:{var n=a,t=h;r=b;y=c;switch(t.tag){case 1:n=t.payload;if("function"===typeof n){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=n.flags&-65537|128;case 0:n=t.payload;r="function"===typeof n?n.call(y,q,r):n;if(null===r||void 0===r)break a;q=A({},q,r);break a;case 2:$g=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,r=e.effects,null===r?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;
h=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else r=h,h=r.next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}while(1);null===m&&(k=q);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=m;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);hh|=g;a.lanes=g;a.memoizedState=q}}
function ih(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if("function"!==typeof e)throw Error(p(191,e));e.call(d)}}}var jh=(new aa.Component).refs;function kh(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}
var nh={isMounted:function(a){return(a=a._reactInternals)?Vb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=L(),e=lh(a),f=ch(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=dh(a,f,e);null!==b&&(mh(b,a,e,d),eh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=L(),e=lh(a),f=ch(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=dh(a,f,e);null!==b&&(mh(b,a,e,d),eh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=L(),d=
lh(a),e=ch(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);b=dh(a,e,d);null!==b&&(mh(b,a,d,c),eh(b,a,d))}};function oh(a,b,c,d,e,f,g){a=a.stateNode;return"function"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Ie(c,d)||!Ie(e,f):!0}
function ph(a,b,c){var d=!1,e=Vf;var f=b.contextType;"object"===typeof f&&null!==f?f=Vg(f):(e=Zf(b)?Xf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Yf(a,e):Vf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=nh;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}
function qh(a,b,c,d){a=b.state;"function"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);"function"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&nh.enqueueReplaceState(b,b.state,null)}
function rh(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=jh;ah(a);var f=b.contextType;"object"===typeof f&&null!==f?e.context=Vg(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;"function"===typeof f&&(kh(a,b,f,c),e.state=a.memoizedState);"function"===typeof b.getDerivedStateFromProps||"function"===typeof e.getSnapshotBeforeUpdate||"function"!==typeof e.UNSAFE_componentWillMount&&"function"!==typeof e.componentWillMount||(b=e.state,
"function"===typeof e.componentWillMount&&e.componentWillMount(),"function"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&nh.enqueueReplaceState(e,e.state,null),gh(a,c,e,d),e.state=a.memoizedState);"function"===typeof e.componentDidMount&&(a.flags|=4194308)}
function sh(a,b,c){a=c.ref;if(null!==a&&"function"!==typeof a&&"object"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=""+a;if(null!==b&&null!==b.ref&&"function"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;b===jh&&(b=e.refs={});null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if("string"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}
function th(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,"[object Object]"===a?"object with keys {"+Object.keys(b).join(", ")+"}":a));}function uh(a){var b=a._init;return b(a._payload)}
function vh(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=wh(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&
null===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=xh(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===ya)return m(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||"object"===typeof f&&null!==f&&f.$$typeof===Ha&&uh(f)===b.type))return d=e(b,c.props),d.ref=sh(a,b,c),d.return=a,d;d=yh(c.type,c.key,c.props,null,a.mode,d);d.ref=sh(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||
b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=zh(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Ah(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function q(a,b,c){if("string"===typeof b&&""!==b||"number"===typeof b)return b=xh(""+b,a.mode,c),b.return=a,b;if("object"===typeof b&&null!==b){switch(b.$$typeof){case va:return c=yh(b.type,b.key,b.props,null,a.mode,c),
c.ref=sh(a,null,b),c.return=a,c;case wa:return b=zh(b,a.mode,c),b.return=a,b;case Ha:var d=b._init;return q(a,d(b._payload),c)}if(eb(b)||Ka(b))return b=Ah(b,a.mode,c,null),b.return=a,b;th(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if("string"===typeof c&&""!==c||"number"===typeof c)return null!==e?null:h(a,b,""+c,d);if("object"===typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return e=c._init,r(a,
b,e(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);th(a,c)}return null}function y(a,b,c,d,e){if("string"===typeof d&&""!==d||"number"===typeof d)return a=a.get(c)||null,h(b,a,""+d,e);if("object"===typeof d&&null!==d){switch(d.$$typeof){case va:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case wa:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ha:var f=d._init;return y(a,b,c,f(d._payload),e)}if(eb(d)||Ka(d))return a=a.get(c)||null,m(b,a,d,e,null);th(b,d)}return null}
function n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u);g=f(n,g,w);null===m?l=n:m.sibling=n;m=n;u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)u=q(e,h[w],k),null!==u&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);I&&tg(e,w);return l}for(u=d(e,u);w<h.length;w++)x=y(u,e,w,h[w],k),null!==x&&(a&&null!==x.alternate&&u.delete(null===
x.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);a&&u.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function t(e,g,h,k){var l=Ka(h);if("function"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m);g=f(t,g,w);null===u?l=t:u.sibling=t;u=t;m=x}if(n.done)return c(e,
m),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())n=q(e,n.value,k),null!==n&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);I&&tg(e,w);return l}for(m=d(e,m);!n.done;w++,n=h.next())n=y(m,e,w,n.value,k),null!==n&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);a&&m.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function J(a,d,f,h){"object"===typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children);if("object"===typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=
f.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===ya){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||"object"===typeof k&&null!==k&&k.$$typeof===Ha&&uh(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=sh(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===ya?(d=Ah(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=yh(f.type,f.key,f.props,null,a.mode,h),h.ref=sh(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==
d;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=zh(f,a.mode,h);d.return=a;a=d}return g(a);case Ha:return l=f._init,J(a,d,l(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);th(a,f)}return"string"===typeof f&&""!==f||"number"===typeof f?(f=""+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):
(c(a,d),d=xh(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var Bh=vh(!0),Ch=vh(!1),Dh={},Eh=Uf(Dh),Fh=Uf(Dh),Gh=Uf(Dh);function Hh(a){if(a===Dh)throw Error(p(174));return a}function Ih(a,b){G(Gh,b);G(Fh,a);G(Eh,Dh);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,"");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=lb(b,a)}E(Eh);G(Eh,b)}function Jh(){E(Eh);E(Fh);E(Gh)}
function Kh(a){Hh(Gh.current);var b=Hh(Eh.current);var c=lb(b,a.type);b!==c&&(G(Fh,a),G(Eh,c))}function Lh(a){Fh.current===a&&(E(Eh),E(Fh))}var M=Uf(0);
function Mh(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||"$?"===c.data||"$!"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Nh=[];
function Oh(){for(var a=0;a<Nh.length;a++)Nh[a]._workInProgressVersionPrimary=null;Nh.length=0}var Ph=ua.ReactCurrentDispatcher,Qh=ua.ReactCurrentBatchConfig,Rh=0,N=null,O=null,P=null,Sh=!1,Th=!1,Uh=0,Vh=0;function Q(){throw Error(p(321));}function Wh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}
function Xh(a,b,c,d,e,f){Rh=f;N=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Ph.current=null===a||null===a.memoizedState?Yh:Zh;a=c(d,e);if(Th){f=0;do{Th=!1;Uh=0;if(25<=f)throw Error(p(301));f+=1;P=O=null;b.updateQueue=null;Ph.current=$h;a=c(d,e)}while(Th)}Ph.current=ai;b=null!==O&&null!==O.next;Rh=0;P=O=N=null;Sh=!1;if(b)throw Error(p(300));return a}function bi(){var a=0!==Uh;Uh=0;return a}
function ci(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===P?N.memoizedState=P=a:P=P.next=a;return P}function di(){if(null===O){var a=N.alternate;a=null!==a?a.memoizedState:null}else a=O.next;var b=null===P?N.memoizedState:P.next;if(null!==b)P=b,O=a;else{if(null===a)throw Error(p(310));O=a;a={memoizedState:O.memoizedState,baseState:O.baseState,baseQueue:O.baseQueue,queue:O.queue,next:null};null===P?N.memoizedState=P=a:P=P.next=a}return P}
function ei(a,b){return"function"===typeof b?b(a):b}
function fi(a){var b=di(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=O,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Rh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,
eagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q;N.lanes|=m;hh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;He(d,b.memoizedState)||(Ug=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,N.lanes|=f,hh|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}
function gi(a){var b=di(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(Ug=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function hi(){}
function ii(a,b){var c=N,d=di(),e=b(),f=!He(d.memoizedState,e);f&&(d.memoizedState=e,Ug=!0);d=d.queue;ji(ki.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==P&&P.memoizedState.tag&1){c.flags|=2048;li(9,mi.bind(null,c,d,e,b),void 0,null);if(null===R)throw Error(p(349));0!==(Rh&30)||ni(c,b,e)}return e}function ni(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=N.updateQueue;null===b?(b={lastEffect:null,stores:null},N.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}
function mi(a,b,c,d){b.value=c;b.getSnapshot=d;oi(b)&&pi(a)}function ki(a,b,c){return c(function(){oi(b)&&pi(a)})}function oi(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function pi(a){var b=Zg(a,1);null!==b&&mh(b,a,1,-1)}
function qi(a){var b=ci();"function"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:ei,lastRenderedState:a};b.queue=a;a=a.dispatch=ri.bind(null,N,a);return[b.memoizedState,a]}
function li(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=N.updateQueue;null===b?(b={lastEffect:null,stores:null},N.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function si(){return di().memoizedState}function ti(a,b,c,d){var e=ci();N.flags|=a;e.memoizedState=li(1|b,c,void 0,void 0===d?null:d)}
function ui(a,b,c,d){var e=di();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&Wh(d,g.deps)){e.memoizedState=li(b,c,f,d);return}}N.flags|=a;e.memoizedState=li(1|b,c,f,d)}function vi(a,b){return ti(8390656,8,a,b)}function ji(a,b){return ui(2048,8,a,b)}function wi(a,b){return ui(4,2,a,b)}function xi(a,b){return ui(4,4,a,b)}
function yi(a,b){if("function"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function zi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ui(4,4,yi.bind(null,b,a),c)}function Ai(){}function Bi(a,b){var c=di();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Wh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}
function Ci(a,b){var c=di();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Wh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function Di(a,b,c){if(0===(Rh&21))return a.baseState&&(a.baseState=!1,Ug=!0),a.memoizedState=c;He(c,b)||(c=yc(),N.lanes|=c,hh|=c,a.baseState=!0);return b}function Ei(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Qh.transition;Qh.transition={};try{a(!1),b()}finally{C=c,Qh.transition=d}}function Fi(){return di().memoizedState}
function Gi(a,b,c){var d=lh(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(Hi(a))Ii(b,c);else if(c=Yg(a,b,c,d),null!==c){var e=L();mh(c,a,d,e);Ji(c,b,d)}}
function ri(a,b,c){var d=lh(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(Hi(a))Ii(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(He(h,g)){var k=b.interleaved;null===k?(e.next=e,Xg(b)):(e.next=k.next,k.next=e);b.interleaved=e;return}}catch(l){}finally{}c=Yg(a,b,e,d);null!==c&&(e=L(),mh(c,a,d,e),Ji(c,b,d))}}
function Hi(a){var b=a.alternate;return a===N||null!==b&&b===N}function Ii(a,b){Th=Sh=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Ji(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}
var ai={readContext:Vg,useCallback:Q,useContext:Q,useEffect:Q,useImperativeHandle:Q,useInsertionEffect:Q,useLayoutEffect:Q,useMemo:Q,useReducer:Q,useRef:Q,useState:Q,useDebugValue:Q,useDeferredValue:Q,useTransition:Q,useMutableSource:Q,useSyncExternalStore:Q,useId:Q,unstable_isNewReconciler:!1},Yh={readContext:Vg,useCallback:function(a,b){ci().memoizedState=[a,void 0===b?null:b];return a},useContext:Vg,useEffect:vi,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ti(4194308,
4,yi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ti(4194308,4,a,b)},useInsertionEffect:function(a,b){return ti(4,2,a,b)},useMemo:function(a,b){var c=ci();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=ci();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=Gi.bind(null,N,a);return[d.memoizedState,a]},useRef:function(a){var b=
ci();a={current:a};return b.memoizedState=a},useState:qi,useDebugValue:Ai,useDeferredValue:function(a){return ci().memoizedState=a},useTransition:function(){var a=qi(!1),b=a[0];a=Ei.bind(null,a[1]);ci().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=N,e=ci();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===R)throw Error(p(349));0!==(Rh&30)||ni(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;vi(ki.bind(null,d,
f,a),[a]);d.flags|=2048;li(9,mi.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=ci(),b=R.identifierPrefix;if(I){var c=sg;var d=rg;c=(d&~(1<<32-oc(d)-1)).toString(32)+c;b=":"+b+"R"+c;c=Uh++;0<c&&(b+="H"+c.toString(32));b+=":"}else c=Vh++,b=":"+b+"r"+c.toString(32)+":";return a.memoizedState=b},unstable_isNewReconciler:!1},Zh={readContext:Vg,useCallback:Bi,useContext:Vg,useEffect:ji,useImperativeHandle:zi,useInsertionEffect:wi,useLayoutEffect:xi,useMemo:Ci,useReducer:fi,useRef:si,useState:function(){return fi(ei)},
useDebugValue:Ai,useDeferredValue:function(a){var b=di();return Di(b,O.memoizedState,a)},useTransition:function(){var a=fi(ei)[0],b=di().memoizedState;return[a,b]},useMutableSource:hi,useSyncExternalStore:ii,useId:Fi,unstable_isNewReconciler:!1},$h={readContext:Vg,useCallback:Bi,useContext:Vg,useEffect:ji,useImperativeHandle:zi,useInsertionEffect:wi,useLayoutEffect:xi,useMemo:Ci,useReducer:gi,useRef:si,useState:function(){return gi(ei)},useDebugValue:Ai,useDeferredValue:function(a){var b=di();return null===
O?b.memoizedState=a:Di(b,O.memoizedState,a)},useTransition:function(){var a=gi(ei)[0],b=di().memoizedState;return[a,b]},useMutableSource:hi,useSyncExternalStore:ii,useId:Fi,unstable_isNewReconciler:!1};function Ki(a,b){try{var c="",d=b;do c+=Pa(d),d=d.return;while(d);var e=c}catch(f){e="\nError generating stack: "+f.message+"\n"+f.stack}return{value:a,source:b,stack:e,digest:null}}function Li(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}
function Mi(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Ni="function"===typeof WeakMap?WeakMap:Map;function Oi(a,b,c){c=ch(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Pi||(Pi=!0,Qi=d);Mi(a,b)};return c}
function Ri(a,b,c){c=ch(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if("function"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Mi(a,b)}}var f=a.stateNode;null!==f&&"function"===typeof f.componentDidCatch&&(c.callback=function(){Mi(a,b);"function"!==typeof d&&(null===Si?Si=new Set([this]):Si.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:""})});return c}
function Ti(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Ni;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ui.bind(null,a,b,c),b.then(a,a))}function Vi(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}
function Wi(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=ch(-1,1),b.tag=2,dh(c,b,1))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Xi=ua.ReactCurrentOwner,Ug=!1;function Yi(a,b,c,d){b.child=null===a?Ch(b,null,c,d):Bh(b,a.child,c,d)}
function Zi(a,b,c,d,e){c=c.render;var f=b.ref;Tg(b,e);d=Xh(a,b,c,d,f,e);c=bi();if(null!==a&&!Ug)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,$i(a,b,e);I&&c&&vg(b);b.flags|=1;Yi(a,b,d,e);return b.child}
function aj(a,b,c,d,e){if(null===a){var f=c.type;if("function"===typeof f&&!bj(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,cj(a,b,f,d,e);a=yh(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:Ie;if(c(g,d)&&a.ref===b.ref)return $i(a,b,e)}b.flags|=1;a=wh(f,d);a.ref=b.ref;a.return=b;return b.child=a}
function cj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref)if(Ug=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(Ug=!0);else return b.lanes=a.lanes,$i(a,b,e)}return dj(a,b,c,d,e)}
function ej(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if("hidden"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(fj,gj),gj|=c;else{if(0===(c&1073741824))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(fj,gj),gj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null};d=null!==f?f.baseLanes:c;G(fj,gj);gj|=d}else null!==
f?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(fj,gj),gj|=d;Yi(a,b,e,c);return b.child}function hj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function dj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;f=Yf(b,f);Tg(b,e);c=Xh(a,b,c,d,f,e);d=bi();if(null!==a&&!Ug)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,$i(a,b,e);I&&d&&vg(b);b.flags|=1;Yi(a,b,c,e);return b.child}
function ij(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;Tg(b,e);if(null===b.stateNode)jj(a,b),ph(b,c,d),rh(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;"object"===typeof l&&null!==l?l=Vg(l):(l=Zf(c)?Xf:H.current,l=Yf(b,l));var m=c.getDerivedStateFromProps,q="function"===typeof m||"function"===typeof g.getSnapshotBeforeUpdate;q||"function"!==typeof g.UNSAFE_componentWillReceiveProps&&"function"!==typeof g.componentWillReceiveProps||
(h!==d||k!==l)&&qh(b,g,d,l);$g=!1;var r=b.memoizedState;g.state=r;gh(b,d,g,e);k=b.memoizedState;h!==d||r!==k||Wf.current||$g?("function"===typeof m&&(kh(b,c,m,d),k=b.memoizedState),(h=$g||oh(b,c,h,d,r,k,l))?(q||"function"!==typeof g.UNSAFE_componentWillMount&&"function"!==typeof g.componentWillMount||("function"===typeof g.componentWillMount&&g.componentWillMount(),"function"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),"function"===typeof g.componentDidMount&&(b.flags|=4194308)):
("function"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):("function"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;bh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Lg(b.type,h);g.props=l;q=b.pendingProps;r=g.context;k=c.contextType;"object"===typeof k&&null!==k?k=Vg(k):(k=Zf(c)?Xf:H.current,k=Yf(b,k));var y=c.getDerivedStateFromProps;(m="function"===typeof y||"function"===typeof g.getSnapshotBeforeUpdate)||
"function"!==typeof g.UNSAFE_componentWillReceiveProps&&"function"!==typeof g.componentWillReceiveProps||(h!==q||r!==k)&&qh(b,g,d,k);$g=!1;r=b.memoizedState;g.state=r;gh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||$g?("function"===typeof y&&(kh(b,c,y,d),n=b.memoizedState),(l=$g||oh(b,c,l,d,r,n,k)||!1)?(m||"function"!==typeof g.UNSAFE_componentWillUpdate&&"function"!==typeof g.componentWillUpdate||("function"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),"function"===typeof g.UNSAFE_componentWillUpdate&&
g.UNSAFE_componentWillUpdate(d,n,k)),"function"===typeof g.componentDidUpdate&&(b.flags|=4),"function"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):("function"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),"function"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):("function"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===
a.memoizedState||(b.flags|=4),"function"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return kj(a,b,c,d,f,e)}
function kj(a,b,c,d,e,f){hj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&dg(b,c,!1),$i(a,b,f);d=b.stateNode;Xi.current=b;var h=g&&"function"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Bh(b,a.child,null,f),b.child=Bh(b,null,h,f)):Yi(a,b,h,f);b.memoizedState=d.state;e&&dg(b,c,!0);return b.child}function lj(a){var b=a.stateNode;b.pendingContext?ag(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(a,b.context,!1);Ih(a,b.containerInfo)}
function mj(a,b,c,d,e){Ig();Jg(e);b.flags|=256;Yi(a,b,c,d);return b.child}var nj={dehydrated:null,treeContext:null,retryLane:0};function oj(a){return{baseLanes:a,cachePool:null,transitions:null}}
function pj(a,b,c){var d=b.pendingProps,e=M.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(M,e&1);if(null===a){Eg(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:"$!"===a.data?b.lanes=8:b.lanes=1073741824,null;g=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,g={mode:"hidden",children:g},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=
g):f=qj(g,d,0,null),a=Ah(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=oj(c),b.memoizedState=nj,a):rj(b,g)}e=a.memoizedState;if(null!==e&&(h=e.dehydrated,null!==h))return sj(a,b,g,d,h,e,c);if(f){f=d.fallback;g=b.mode;e=a.child;h=e.sibling;var k={mode:"hidden",children:d.children};0===(g&1)&&b.child!==e?(d=b.child,d.childLanes=0,d.pendingProps=k,b.deletions=null):(d=wh(e,k),d.subtreeFlags=e.subtreeFlags&14680064);null!==h?f=wh(h,f):(f=Ah(f,g,c,null),f.flags|=2);f.return=
b;d.return=b;d.sibling=f;b.child=d;d=f;f=b.child;g=a.child.memoizedState;g=null===g?oj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions};f.memoizedState=g;f.childLanes=a.childLanes&~c;b.memoizedState=nj;return d}f=a.child;a=f.sibling;d=wh(f,{mode:"visible",children:d.children});0===(b.mode&1)&&(d.lanes=c);d.return=b;d.sibling=null;null!==a&&(c=b.deletions,null===c?(b.deletions=[a],b.flags|=16):c.push(a));b.child=d;b.memoizedState=null;return d}
function rj(a,b){b=qj({mode:"visible",children:b},a.mode,0,null);b.return=a;return a.child=b}function tj(a,b,c,d){null!==d&&Jg(d);Bh(b,a.child,null,c);a=rj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}
function sj(a,b,c,d,e,f,g){if(c){if(b.flags&256)return b.flags&=-257,d=Li(Error(p(422))),tj(a,b,g,d);if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=qj({mode:"visible",children:d.children},e,0,null);f=Ah(f,e,g,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&Bh(b,a.child,null,g);b.child.memoizedState=oj(g);b.memoizedState=nj;return f}if(0===(b.mode&1))return tj(a,b,g,null);if("$!"===e.data){d=e.nextSibling&&e.nextSibling.dataset;
if(d)var h=d.dgst;d=h;f=Error(p(419));d=Li(f,d,void 0);return tj(a,b,g,d)}h=0!==(g&a.childLanes);if(Ug||h){d=R;if(null!==d){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}e=0!==(e&(d.suspendedLanes|g))?0:e;
0!==e&&e!==f.retryLane&&(f.retryLane=e,Zg(a,e),mh(d,a,e,-1))}uj();d=Li(Error(p(421)));return tj(a,b,g,d)}if("$?"===e.data)return b.flags|=128,b.child=a.child,b=vj.bind(null,a),e._reactRetry=b,null;a=f.treeContext;yg=Lf(e.nextSibling);xg=b;I=!0;zg=null;null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b);b=rj(b,d.children);b.flags|=4096;return b}function wj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);Sg(a.return,b,c)}
function xj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}
function yj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;Yi(a,b,d.children,c);d=M.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&wj(a,c,b);else if(19===a.tag)wj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(M,d);if(0===(b.mode&1))b.memoizedState=
null;else switch(e){case "forwards":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Mh(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);xj(b,!1,e,c,f);break;case "backwards":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Mh(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}xj(b,!0,c,null,f);break;case "together":xj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}
function jj(a,b){0===(b.mode&1)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function $i(a,b,c){null!==a&&(b.dependencies=a.dependencies);hh|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=wh(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=wh(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}
function zj(a,b,c){switch(b.tag){case 3:lj(b);Ig();break;case 5:Kh(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:Ih(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Mg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(M,M.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return pj(a,b,c);G(M,M.current&1);a=$i(a,b,c);return null!==a?a.sibling:null}G(M,M.current&1);break;case 19:d=0!==(c&
b.childLanes);if(0!==(a.flags&128)){if(d)return yj(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(M,M.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,ej(a,b,c)}return $i(a,b,c)}var Aj,Bj,Cj,Dj;
Aj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Bj=function(){};
Cj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;Hh(Eh.current);var f=null;switch(c){case "input":e=Ya(a,e);d=Ya(a,d);f=[];break;case "select":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case "textarea":e=gb(a,e);d=gb(a,d);f=[];break;default:"function"!==typeof e.onClick&&"function"===typeof d.onClick&&(a.onclick=Bf)}ub(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if("style"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&
(c||(c={}),c[g]="")}else"dangerouslySetInnerHTML"!==l&&"children"!==l&&"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if("style"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]="");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,
c)),c=k;else"dangerouslySetInnerHTML"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):"children"===l?"string"!==typeof k&&"number"!==typeof k||(f=f||[]).push(l,""+k):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&(ea.hasOwnProperty(l)?(null!=k&&"onScroll"===l&&D("scroll",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push("style",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Dj=function(a,b,c,d){c!==d&&(b.flags|=4)};
function Ej(a,b){if(!I)switch(a.tailMode){case "hidden":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case "collapsed":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}
function S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}
function Fj(a,b,c){var d=b.pendingProps;wg(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:return Zf(b.type)&&$f(),S(b),null;case 3:d=b.stateNode;Jh();E(Wf);E(H);Oh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==zg&&(Gj(zg),zg=null));Bj(a,b);S(b);return null;case 5:Lh(b);var e=Hh(Gh.current);
c=b.type;if(null!==a&&null!=b.stateNode)Cj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));S(b);return null}a=Hh(Eh.current);if(Gg(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Of]=b;d[Pf]=f;a=0!==(b.mode&1);switch(c){case "dialog":D("cancel",d);D("close",d);break;case "iframe":case "object":case "embed":D("load",d);break;case "video":case "audio":for(e=0;e<lf.length;e++)D(lf[e],d);break;case "source":D("error",d);break;case "img":case "image":case "link":D("error",
d);D("load",d);break;case "details":D("toggle",d);break;case "input":Za(d,f);D("invalid",d);break;case "select":d._wrapperState={wasMultiple:!!f.multiple};D("invalid",d);break;case "textarea":hb(d,f),D("invalid",d)}ub(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];"children"===g?"string"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=["children",h]):"number"===typeof h&&d.textContent!==""+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,
h,a),e=["children",""+h]):ea.hasOwnProperty(g)&&null!=h&&"onScroll"===g&&D("scroll",d)}switch(c){case "input":Va(d);db(d,f,!0);break;case "textarea":Va(d);jb(d);break;case "select":case "option":break;default:"function"===typeof f.onClick&&(d.onclick=Bf)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;"http://www.w3.org/1999/xhtml"===a&&(a=kb(c));"http://www.w3.org/1999/xhtml"===a?"script"===c?(a=g.createElement("div"),a.innerHTML="<script>\x3c/script>",a=a.removeChild(a.firstChild)):
"string"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),"select"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Of]=b;a[Pf]=d;Aj(a,b,!1,!1);b.stateNode=a;a:{g=vb(c,d);switch(c){case "dialog":D("cancel",a);D("close",a);e=d;break;case "iframe":case "object":case "embed":D("load",a);e=d;break;case "video":case "audio":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case "source":D("error",a);e=d;break;case "img":case "image":case "link":D("error",
a);D("load",a);e=d;break;case "details":D("toggle",a);e=d;break;case "input":Za(a,d);e=Ya(a,d);D("invalid",a);break;case "option":e=d;break;case "select":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D("invalid",a);break;case "textarea":hb(a,d);e=gb(a,d);D("invalid",a);break;default:e=d}ub(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];"style"===f?sb(a,k):"dangerouslySetInnerHTML"===f?(k=k?k.__html:void 0,null!=k&&nb(a,k)):"children"===f?"string"===typeof k?("textarea"!==
c||""!==k)&&ob(a,k):"number"===typeof k&&ob(a,""+k):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(ea.hasOwnProperty(f)?null!=k&&"onScroll"===f&&D("scroll",a):null!=k&&ta(a,f,k,g))}switch(c){case "input":Va(a);db(a,d,!1);break;case "textarea":Va(a);jb(a);break;case "option":null!=d.value&&a.setAttribute("value",""+Sa(d.value));break;case "select":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,
!0);break;default:"function"===typeof e.onClick&&(a.onclick=Bf)}switch(c){case "button":case "input":case "select":case "textarea":d=!!d.autoFocus;break a;case "img":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}S(b);return null;case 6:if(a&&null!=b.stateNode)Dj(a,b,a.memoizedProps,d);else{if("string"!==typeof d&&null===b.stateNode)throw Error(p(166));c=Hh(Gh.current);Hh(Eh.current);if(Gg(b)){d=b.stateNode;c=b.memoizedProps;d[Of]=b;if(f=d.nodeValue!==c)if(a=
xg,null!==a)switch(a.tag){case 3:Af(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Of]=b,b.stateNode=d}S(b);return null;case 13:E(M);d=b.memoizedState;if(null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&0!==(b.mode&1)&&0===(b.flags&128))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===
a){if(!f)throw Error(p(318));f=b.memoizedState;f=null!==f?f.dehydrated:null;if(!f)throw Error(p(317));f[Of]=b}else Ig(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;S(b);f=!1}else null!==zg&&(Gj(zg),zg=null),f=!0;if(!f)return b.flags&65536?b:null}if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;d!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(M.current&1)?0===T&&(T=3):uj()));null!==b.updateQueue&&(b.flags|=4);S(b);return null;case 4:return Jh(),
Bj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return Rg(b.type._context),S(b),null;case 17:return Zf(b.type)&&$f(),S(b),null;case 19:E(M);f=b.memoizedState;if(null===f)return S(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Ej(f,!1);else{if(0!==T||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Mh(a);if(null!==g){b.flags|=128;Ej(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,
g=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(M,M.current&1|2);return b.child}a=
a.sibling}null!==f.tail&&B()>Hj&&(b.flags|=128,d=!0,Ej(f,!1),b.lanes=4194304)}else{if(!d)if(a=Mh(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Ej(f,!0),null===f.tail&&"hidden"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Hj&&1073741824!==c&&(b.flags|=128,d=!0,Ej(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=
b,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=M.current,G(M,d?c&1|2:c&1),b;S(b);return null;case 22:case 23:return Ij(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(gj&1073741824)&&(S(b),b.subtreeFlags&6&&(b.flags|=8192)):S(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}
function Jj(a,b){wg(b);switch(b.tag){case 1:return Zf(b.type)&&$f(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return Jh(),E(Wf),E(H),Oh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Lh(b),null;case 13:E(M);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(M),null;case 4:return Jh(),null;case 10:return Rg(b.type._context),null;case 22:case 23:return Ij(),
null;case 24:return null;default:return null}}var Kj=!1,U=!1,Lj="function"===typeof WeakSet?WeakSet:Set,V=null;function Mj(a,b){var c=a.ref;if(null!==c)if("function"===typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Nj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Oj=!1;
function Pj(a,b){Cf=dd;a=Me();if(Ne(a)){if("selectionStart"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;;){q!==c||0!==e&&3!==q.nodeType||(h=g+e);q!==f||0!==d&&3!==q.nodeType||(k=g+d);3===q.nodeType&&(g+=
q.nodeValue.length);if(null===(y=q.firstChild))break;r=q;q=y}for(;;){if(q===a)break b;r===c&&++l===e&&(h=g);r===f&&++m===d&&(k=g);if(null!==(y=q.nextSibling))break;q=r;r=q.parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Df={focusedElem:a,selectionRange:c};dd=!1;for(V=b;null!==V;)if(b=V,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;
case 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Lg(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent="":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(F){W(b,b.return,F)}a=b.sibling;if(null!==a){a.return=b.return;V=a;break}V=b.return}n=Oj;Oj=!1;return n}
function Qj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Nj(b,c,f)}e=e.next}while(e!==d)}}function Rj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Sj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}"function"===typeof b?b(a):b.current=a}}
function Tj(a){var b=a.alternate;null!==b&&(a.alternate=null,Tj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Uj(a){return 5===a.tag||3===a.tag||4===a.tag}
function Vj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Uj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}
function Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&(a=a.child,null!==a))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}
function Xj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Xj(a,b,c),a=a.sibling;null!==a;)Xj(a,b,c),a=a.sibling}var X=null,Yj=!1;function Zj(a,b,c){for(c=c.child;null!==c;)ak(a,b,c),c=c.sibling}
function ak(a,b,c){if(lc&&"function"===typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Mj(c,b);case 6:var d=X,e=Yj;X=null;Zj(a,b,c);X=d;Yj=e;null!==X&&(Yj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Yj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X;e=Yj;X=c.stateNode.containerInfo;Yj=!0;
Zj(a,b,c);X=d;Yj=e;break;case 0:case 11:case 14:case 15:if(!U&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Nj(c,b,g):0!==(f&4)&&Nj(c,b,g));e=e.next}while(e!==d)}Zj(a,b,c);break;case 1:if(!U&&(Mj(c,b),d=c.stateNode,"function"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Zj(a,b,c);break;case 21:Zj(a,b,c);break;case 22:c.mode&1?(U=(d=U)||null!==
c.memoizedState,Zj(a,b,c),U=d):Zj(a,b,c);break;default:Zj(a,b,c)}}function bk(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Lj);b.forEach(function(b){var d=ck.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}
function dk(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode;Yj=!1;break a;case 3:X=h.stateNode.containerInfo;Yj=!0;break a;case 4:X=h.stateNode.containerInfo;Yj=!0;break a}h=h.return}if(null===X)throw Error(p(160));ak(f,g,e);X=null;Yj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){W(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)ek(b,a),b=b.sibling}
function ek(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:dk(b,a);fk(a);if(d&4){try{Qj(3,a,a.return),Rj(3,a)}catch(t){W(a,a.return,t)}try{Qj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:dk(b,a);fk(a);d&512&&null!==c&&Mj(c,c.return);break;case 5:dk(b,a);fk(a);d&512&&null!==c&&Mj(c,c.return);if(a.flags&32){var e=a.stateNode;try{ob(e,"")}catch(t){W(a,a.return,t)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;
a.updateQueue=null;if(null!==k)try{"input"===h&&"radio"===f.type&&null!=f.name&&ab(e,f);vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];"style"===m?sb(e,q):"dangerouslySetInnerHTML"===m?nb(e,q):"children"===m?ob(e,q):ta(e,m,q,l)}switch(h){case "input":bb(e,f);break;case "textarea":ib(e,f);break;case "select":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,
f.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:"",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:dk(b,a);fk(a);if(d&4){if(null===a.stateNode)throw Error(p(162));e=a.stateNode;f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:dk(b,a);fk(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:dk(b,a);fk(a);break;case 13:dk(b,a);fk(a);e=a.child;e.flags&8192&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||
null!==e.alternate&&null!==e.alternate.memoizedState||(gk=B()));d&4&&bk(a);break;case 22:m=null!==c&&null!==c.memoizedState;a.mode&1?(U=(l=U)||m,dk(b,a),U=l):dk(b,a);fk(a);if(d&8192){l=null!==a.memoizedState;if((a.stateNode.isHidden=l)&&!m&&0!==(a.mode&1))for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){r=V;y=r.child;switch(r.tag){case 0:case 11:case 14:case 15:Qj(4,r,r.return);break;case 1:Mj(r,r.return);var n=r.stateNode;if("function"===typeof n.componentWillUnmount){d=r;c=r.return;try{b=d,n.props=
b.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Mj(r,r.return);break;case 22:if(null!==r.memoizedState){hk(q);continue}}null!==y?(y.return=r,V=y):hk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?(f=e.style,"function"===typeof f.setProperty?f.setProperty("display","none","important"):f.display="none"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty("display")?k.display:null,h.style.display=
rb("display",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?"":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null);q=q.return}m===q&&(m=null);q.sibling.return=q.return;q=q.sibling}}break;case 19:dk(b,a);fk(a);d&4&&bk(a);break;case 21:break;default:dk(b,
a),fk(a)}}function fk(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Uj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(ob(e,""),d.flags&=-33);var f=Vj(a);Xj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Vj(a);Wj(a,h,g);break;default:throw Error(p(161));}}catch(k){W(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function ik(a,b,c){V=a;jk(a,b,c)}
function jk(a,b,c){for(var d=0!==(a.mode&1);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Kj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Kj;var l=U;Kj=g;if((U=k)&&!l)for(V=e;null!==V;)g=V,k=g.child,22===g.tag&&null!==g.memoizedState?kk(e):null!==k?(k.return=g,V=k):kk(e);for(;null!==f;)V=f,jk(f,b,c),f=f.sibling;V=e;Kj=h;U=l}lk(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,V=f):lk(a,b,c)}}
function lk(a){for(;null!==V;){var b=V;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:U||Rj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Lg(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&ih(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=
b.child.stateNode;break;case 1:c=b.child.stateNode}ih(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case "button":case "input":case "select":case "textarea":k.autoFocus&&c.focus();break;case "img":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;
default:throw Error(p(163));}U||b.flags&512&&Sj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}function hk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}
function kk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Rj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if("function"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Sj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Sj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return;V=h;break}V=b.return}}
var mk=Math.ceil,nk=ua.ReactCurrentDispatcher,ok=ua.ReactCurrentOwner,pk=ua.ReactCurrentBatchConfig,K=0,R=null,Y=null,Z=0,gj=0,fj=Uf(0),T=0,qk=null,hh=0,rk=0,sk=0,tk=null,uk=null,gk=0,Hj=Infinity,vk=null,Pi=!1,Qi=null,Si=null,wk=!1,xk=null,yk=0,zk=0,Ak=null,Bk=-1,Ck=0;function L(){return 0!==(K&6)?B():-1!==Bk?Bk:Bk=B()}
function lh(a){if(0===(a.mode&1))return 1;if(0!==(K&2)&&0!==Z)return Z&-Z;if(null!==Kg.transition)return 0===Ck&&(Ck=yc()),Ck;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:jd(a.type);return a}function mh(a,b,c,d){if(50<zk)throw zk=0,Ak=null,Error(p(185));Ac(a,c,d);if(0===(K&2)||a!==R)a===R&&(0===(K&2)&&(rk|=c),4===T&&Dk(a,Z)),Ek(a,d),1===c&&0===K&&0===(b.mode&1)&&(Hj=B()+500,fg&&jg())}
function Ek(a,b){var c=a.callbackNode;wc(a,b);var d=uc(a,a===R?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&bc(c);if(1===b)0===a.tag?ig(Fk.bind(null,a)):hg(Fk.bind(null,a)),Jf(function(){0===(K&6)&&jg()}),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:c=hc;break;case 536870912:c=jc;break;default:c=hc}c=Gk(c,Hk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}
function Hk(a,b){Bk=-1;Ck=0;if(0!==(K&6))throw Error(p(327));var c=a.callbackNode;if(Ik()&&a.callbackNode!==c)return null;var d=uc(a,a===R?Z:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Jk(a,d);else{b=d;var e=K;K|=2;var f=Kk();if(R!==a||Z!==b)vk=null,Hj=B()+500,Lk(a,b);do try{Mk();break}catch(h){Nk(a,h)}while(1);Qg();nk.current=f;K=e;null!==Y?b=0:(R=null,Z=0,b=T)}if(0!==b){2===b&&(e=xc(a),0!==e&&(d=e,b=Ok(a,e)));if(1===b)throw c=qk,Lk(a,0),Dk(a,d),Ek(a,B()),c;if(6===b)Dk(a,d);
else{e=a.current.alternate;if(0===(d&30)&&!Pk(e)&&(b=Jk(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Ok(a,f))),1===b))throw c=qk,Lk(a,0),Dk(a,d),Ek(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Qk(a,uk,vk);break;case 3:Dk(a,d);if((d&130023424)===d&&(b=gk+500-B(),10<b)){if(0!==uc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){L();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Qk.bind(null,a,uk,vk),b);break}Qk(a,uk,vk);break;case 4:Dk(a,d);if((d&4194240)===
d)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-oc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*mk(d/1960))-d;if(10<d){a.timeoutHandle=Ff(Qk.bind(null,a,uk,vk),d);break}Qk(a,uk,vk);break;case 5:Qk(a,uk,vk);break;default:throw Error(p(329));}}}Ek(a,B());return a.callbackNode===c?Hk.bind(null,a):null}
function Ok(a,b){var c=tk;a.current.memoizedState.isDehydrated&&(Lk(a,b).flags|=256);a=Jk(a,b);2!==a&&(b=uk,uk=c,null!==b&&Gj(b));return a}function Gj(a){null===uk?uk=a:uk.push.apply(uk,a)}
function Pk(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}
function Dk(a,b){b&=~sk;b&=~rk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1;b&=~d}}function Fk(a){if(0!==(K&6))throw Error(p(327));Ik();var b=uc(a,0);if(0===(b&1))return Ek(a,B()),null;var c=Jk(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Ok(a,d))}if(1===c)throw c=qk,Lk(a,0),Dk(a,b),Ek(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Qk(a,uk,vk);Ek(a,B());return null}
function Rk(a,b){var c=K;K|=1;try{return a(b)}finally{K=c,0===K&&(Hj=B()+500,fg&&jg())}}function Sk(a){null!==xk&&0===xk.tag&&0===(K&6)&&Ik();var b=K;K|=1;var c=pk.transition,d=C;try{if(pk.transition=null,C=1,a)return a()}finally{C=d,pk.transition=c,K=b,0===(K&6)&&jg()}}function Ij(){gj=fj.current;E(fj)}
function Lk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Gf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;wg(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$f();break;case 3:Jh();E(Wf);E(H);Oh();break;case 5:Lh(d);break;case 4:Jh();break;case 13:E(M);break;case 19:E(M);break;case 10:Rg(d.type._context);break;case 22:case 23:Ij()}c=c.return}R=a;Y=a=wh(a.current,null);Z=gj=b;T=0;qk=null;sk=rk=hh=0;uk=tk=null;if(null!==Wg){for(b=
0;b<Wg.length;b++)if(c=Wg[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}Wg=null}return a}
function Nk(a,b){do{var c=Y;try{Qg();Ph.current=ai;if(Sh){for(var d=N.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Sh=!1}Rh=0;P=O=N=null;Th=!1;Uh=0;ok.current=null;if(null===c||null===c.return){T=1;qk=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Z;h.flags|=32768;if(null!==k&&"object"===typeof k&&"function"===typeof k.then){var l=k,m=h,q=m.tag;if(0===(m.mode&1)&&(0===q||11===q||15===q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,
m.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Vi(g);if(null!==y){y.flags&=-257;Wi(y,g,h,f,b);y.mode&1&&Ti(f,l,b);b=y;k=l;var n=b.updateQueue;if(null===n){var t=new Set;t.add(k);b.updateQueue=t}else n.add(k);break a}else{if(0===(b&1)){Ti(f,l,b);uj();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Vi(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Wi(J,g,h,f,b);Jg(Ki(k,h));break a}}f=k=Ki(k,h);4!==T&&(T=2);null===tk?tk=[f]:tk.push(f);f=g;do{switch(f.tag){case 3:f.flags|=65536;
b&=-b;f.lanes|=b;var x=Oi(f,k,b);fh(f,x);break a;case 1:h=k;var w=f.type,u=f.stateNode;if(0===(f.flags&128)&&("function"===typeof w.getDerivedStateFromError||null!==u&&"function"===typeof u.componentDidCatch&&(null===Si||!Si.has(u)))){f.flags|=65536;b&=-b;f.lanes|=b;var F=Ri(f,h,b);fh(f,F);break a}}f=f.return}while(null!==f)}Tk(c)}catch(na){b=na;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}function Kk(){var a=nk.current;nk.current=ai;return null===a?ai:a}
function uj(){if(0===T||3===T||2===T)T=4;null===R||0===(hh&268435455)&&0===(rk&268435455)||Dk(R,Z)}function Jk(a,b){var c=K;K|=2;var d=Kk();if(R!==a||Z!==b)vk=null,Lk(a,b);do try{Uk();break}catch(e){Nk(a,e)}while(1);Qg();K=c;nk.current=d;if(null!==Y)throw Error(p(261));R=null;Z=0;return T}function Uk(){for(;null!==Y;)Vk(Y)}function Mk(){for(;null!==Y&&!cc();)Vk(Y)}function Vk(a){var b=Wk(a.alternate,a,gj);a.memoizedProps=a.pendingProps;null===b?Tk(a):Y=b;ok.current=null}
function Tk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Fj(c,b,gj),null!==c){Y=c;return}}else{c=Jj(c,b);if(null!==c){c.flags&=32767;Y=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{T=6;Y=null;return}}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===T&&(T=5)}function Qk(a,b,c){var d=C,e=pk.transition;try{pk.transition=null,C=1,Xk(a,b,c,d)}finally{pk.transition=e,C=d}return null}
function Xk(a,b,c,d){do Ik();while(null!==xk);if(0!==(K&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Bc(a,f);a===R&&(Y=R=null,Z=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||wk||(wk=!0,Gk(hc,function(){Ik();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=pk.transition;pk.transition=null;
var g=C;C=1;var h=K;K|=4;ok.current=null;Pj(a,c);ek(c,a);Oe(Df);dd=!!Cf;Df=Cf=null;a.current=c;ik(c,a,e);dc();K=h;C=g;pk.transition=f}else a.current=c;wk&&(wk=!1,xk=a,yk=e);f=a.pendingLanes;0===f&&(Si=null);mc(c.stateNode,d);Ek(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Pi)throw Pi=!1,a=Qi,Qi=null,a;0!==(yk&1)&&0!==a.tag&&Ik();f=a.pendingLanes;0!==(f&1)?a===Ak?zk++:(zk=0,Ak=a):zk=0;jg();return null}
function Ik(){if(null!==xk){var a=Dc(yk),b=pk.transition,c=C;try{pk.transition=null;C=16>a?16:a;if(null===xk)var d=!1;else{a=xk;xk=null;yk=0;if(0!==(K&6))throw Error(p(331));var e=K;K|=4;for(V=a.current;null!==V;){var f=V,g=f.child;if(0!==(V.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Qj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){m=V;var r=m.sibling,y=m.return;Tj(m);if(m===
l){V=null;break}if(null!==r){r.return=y;V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null;t=J}while(null!==t)}}V=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,V=g;else b:for(;null!==V;){f=V;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Qj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return;V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){g=V;var u=g.child;if(0!==(g.subtreeFlags&2064)&&null!==
u)u.return=g,V=u;else b:for(g=w;null!==V;){h=V;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Rj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;V=F;break b}V=h.return}}K=e;jg();if(lc&&"function"===typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,pk.transition=b}}return!1}function Yk(a,b,c){b=Ki(c,b);b=Oi(a,b,1);a=dh(a,b,1);b=L();null!==a&&(Ac(a,1,b),Ek(a,b))}
function W(a,b,c){if(3===a.tag)Yk(a,a,c);else for(;null!==b;){if(3===b.tag){Yk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if("function"===typeof b.type.getDerivedStateFromError||"function"===typeof d.componentDidCatch&&(null===Si||!Si.has(d))){a=Ki(c,a);a=Ri(b,a,1);b=dh(b,a,1);a=L();null!==b&&(Ac(b,1,a),Ek(b,a));break}}b=b.return}}
function Ui(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=L();a.pingedLanes|=a.suspendedLanes&c;R===a&&(Z&c)===c&&(4===T||3===T&&(Z&130023424)===Z&&500>B()-gk?Lk(a,0):sk|=c);Ek(a,b)}function Zk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=sc,sc<<=1,0===(sc&130023424)&&(sc=4194304)));var c=L();a=Zg(a,b);null!==a&&(Ac(a,b,c),Ek(a,c))}function vj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Zk(a,c)}
function ck(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Zk(a,c)}var Wk;
Wk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)Ug=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return Ug=!1,zj(a,b,c);Ug=0!==(a.flags&131072)?!0:!1}else Ug=!1,I&&0!==(b.flags&1048576)&&ug(b,ng,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;jj(a,b);a=b.pendingProps;var e=Yf(b,H.current);Tg(b,c);e=Xh(null,b,d,a,e,c);var f=bi();b.flags|=1;"object"===typeof e&&null!==e&&"function"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=
null,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,ah(b),e.updater=nh,b.stateNode=e,e._reactInternals=b,rh(b,d,a,c),b=kj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Yi(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{jj(a,b);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=$k(d);a=Lg(d,a);switch(e){case 0:b=dj(null,b,d,a,c);break a;case 1:b=ij(null,b,d,a,c);break a;case 11:b=Zi(null,b,d,a,c);break a;case 14:b=aj(null,b,d,Lg(d.type,a),c);break a}throw Error(p(306,
d,""));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),dj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),ij(a,b,d,e,c);case 3:a:{lj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;bh(a,b);gh(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=
f,b.memoizedState=f,b.flags&256){e=Ki(Error(p(423)),b);b=mj(a,b,d,c,e);break a}else if(d!==e){e=Ki(Error(p(424)),b);b=mj(a,b,d,c,e);break a}else for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Ch(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{Ig();if(d===e){b=$i(a,b,c);break a}Yi(a,b,d,c)}b=b.child}return b;case 5:return Kh(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),
hj(a,b),Yi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return pj(a,b,c);case 4:return Ih(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Bh(b,null,d,c):Yi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),Zi(a,b,d,e,c);case 7:return Yi(a,b,b.pendingProps,c),b.child;case 8:return Yi(a,b,b.pendingProps.children,c),b.child;case 12:return Yi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;
g=e.value;G(Mg,d._currentValue);d._currentValue=g;if(null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=$i(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=ch(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var m=l.pending;null===m?k.next=k:(k.next=m.next,m.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);Sg(f.return,
c,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);Sg(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}Yi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,Tg(b,c),e=Vg(e),d=d(e),b.flags|=1,Yi(a,b,d,c),
b.child;case 14:return d=b.type,e=Lg(d,b.pendingProps),e=Lg(d.type,e),aj(a,b,d,e,c);case 15:return cj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),jj(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,Tg(b,c),ph(b,d,e),rh(b,d,e,c),kj(null,b,d,!0,a,c);case 19:return yj(a,b,c);case 22:return ej(a,b,c)}throw Error(p(156,b.tag));};function Gk(a,b){return ac(a,b)}
function al(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function Bg(a,b,c,d){return new al(a,b,c,d)}function bj(a){a=a.prototype;return!(!a||!a.isReactComponent)}
function $k(a){if("function"===typeof a)return bj(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Da)return 11;if(a===Ga)return 14}return 2}
function wh(a,b){var c=a.alternate;null===c?(c=Bg(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};
c.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}
function yh(a,b,c,d,e,f){var g=2;d=a;if("function"===typeof a)bj(a)&&(g=1);else if("string"===typeof a)g=5;else a:switch(a){case ya:return Ah(c.children,e,f,b);case za:g=8;e|=8;break;case Aa:return a=Bg(12,c,b,e|2),a.elementType=Aa,a.lanes=f,a;case Ea:return a=Bg(13,c,b,e),a.elementType=Ea,a.lanes=f,a;case Fa:return a=Bg(19,c,b,e),a.elementType=Fa,a.lanes=f,a;case Ia:return qj(c,e,f,b);default:if("object"===typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;
break a;case Ga:g=14;break a;case Ha:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,""));}b=Bg(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Ah(a,b,c,d){a=Bg(7,a,d,b);a.lanes=c;return a}function qj(a,b,c,d){a=Bg(22,a,d,b);a.elementType=Ia;a.lanes=c;a.stateNode={isHidden:!1};return a}function xh(a,b,c){a=Bg(6,a,null,b);a.lanes=c;return a}
function zh(a,b,c){b=Bg(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}
function bl(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=zc(0);this.expirationTimes=zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=zc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=
null}function cl(a,b,c,d,e,f,g,h,k){a=new bl(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=Bg(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};ah(f);return a}function dl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:""+d,children:a,containerInfo:b,implementation:c}}
function el(a){if(!a)return Vf;a=a._reactInternals;a:{if(Vb(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}
function fl(a,b,c,d,e,f,g,h,k){a=cl(c,d,!0,a,e,f,g,h,k);a.context=el(null);c=a.current;d=L();e=lh(c);f=ch(d,e);f.callback=void 0!==b&&null!==b?b:null;dh(c,f,e);a.current.lanes=e;Ac(a,e,d);Ek(a,d);return a}function gl(a,b,c,d){var e=b.current,f=L(),g=lh(e);c=el(c);null===b.context?b.context=c:b.pendingContext=c;b=ch(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);a=dh(e,b,g);null!==a&&(mh(a,e,g,f),eh(a,e,g));return g}
function hl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function il(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function jl(a,b){il(a,b);(a=a.alternate)&&il(a,b)}function kl(){return null}var ll="function"===typeof reportError?reportError:function(a){console.error(a)};function ml(a){this._internalRoot=a}
nl.prototype.render=ml.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));gl(a,b,null,null)};nl.prototype.unmount=ml.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Sk(function(){gl(null,a,null,null)});b[uf]=null}};function nl(a){this._internalRoot=a}
nl.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a);0===c&&Vc(a)}};function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function pl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||" react-mount-point-unstable "!==a.nodeValue))}function ql(){}
function rl(a,b,c,d,e){if(e){if("function"===typeof d){var f=d;d=function(){var a=hl(g);f.call(a)}}var g=fl(b,d,a,0,null,!1,!1,"",ql);a._reactRootContainer=g;a[uf]=g.current;sf(8===a.nodeType?a.parentNode:a);Sk();return g}for(;e=a.lastChild;)a.removeChild(e);if("function"===typeof d){var h=d;d=function(){var a=hl(k);h.call(a)}}var k=cl(a,0,!1,null,null,!1,!1,"",ql);a._reactRootContainer=k;a[uf]=k.current;sf(8===a.nodeType?a.parentNode:a);Sk(function(){gl(b,k,c,d)});return k}
function sl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if("function"===typeof e){var h=e;e=function(){var a=hl(g);h.call(a)}}gl(b,g,a,e)}else g=rl(c,b,a,e,d);return hl(g)}Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,c|1),Ek(b,B()),0===(K&6)&&(Hj=B()+500,jg()))}break;case 13:Sk(function(){var b=Zg(a,1);if(null!==b){var c=L();mh(b,a,1,c)}}),jl(a,1)}};
Fc=function(a){if(13===a.tag){var b=Zg(a,134217728);if(null!==b){var c=L();mh(b,a,134217728,c)}jl(a,134217728)}};Gc=function(a){if(13===a.tag){var b=lh(a),c=Zg(a,b);if(null!==c){var d=L();mh(c,a,b,d)}jl(a,b)}};Hc=function(){return C};Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};
yb=function(a,b,c){switch(b){case "input":bb(a,c);b=c.name;if("radio"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll("input[name="+JSON.stringify(""+b)+'][type="radio"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d);bb(d,e)}}}break;case "textarea":ib(a,c);break;case "select":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Rk;Hb=Sk;
var tl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Rk]},ul={findFiberByHostInstance:Wc,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"};
var vl={bundleType:ul.bundleType,version:ul.version,rendererPackageName:ul.rendererPackageName,rendererConfig:ul.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Zb(a);return null===a?null:a.stateNode},findFiberByHostInstance:ul.findFiberByHostInstance||
kl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var wl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!wl.isDisabled&&wl.supportsFiber)try{kc=wl.inject(vl),lc=wl}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=tl;
exports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!ol(b))throw Error(p(200));return dl(a,b,null,c)};exports.createRoot=function(a,b){if(!ol(a))throw Error(p(299));var c=!1,d="",e=ll;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=cl(a,1,!1,null,null,c,!1,d,e);a[uf]=b.current;sf(8===a.nodeType?a.parentNode:a);return new ml(b)};
exports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if("function"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(",");throw Error(p(268,a));}a=Zb(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a){return Sk(a)};exports.hydrate=function(a,b,c){if(!pl(b))throw Error(p(200));return sl(null,a,b,!0,c)};
exports.hydrateRoot=function(a,b,c){if(!ol(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f="",g=ll;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=fl(b,null,a,1,null!=c?c:null,e,!1,f,g);a[uf]=b.current;sf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,
e);return new nl(b)};exports.render=function(a,b,c){if(!pl(b))throw Error(p(200));return sl(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!pl(a))throw Error(p(40));return a._reactRootContainer?(Sk(function(){sl(null,null,a,!1,function(){a._reactRootContainer=null;a[uf]=null})}),!0):!1};exports.unstable_batchedUpdates=Rk;
exports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!pl(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return sl(a,b,c,!1,d)};exports.version="18.2.0-next-9e3b772b8-20220608";


/***/ }),

/***/ 24470:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
var __webpack_unused_export__;


var m = __webpack_require__(73961);
if (true) {
  exports.s = m.createRoot;
  __webpack_unused_export__ = m.hydrateRoot;
} else { var i; }


/***/ }),

/***/ 73961:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


function checkDCE() {
  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
  if (
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'
  ) {
    return;
  }
  if (false) {}
  try {
    // Verify that the code above has been dead code eliminated (DCE'd).
    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
  } catch (err) {
    // DevTools shouldn't crash React, no matter what.
    // We should still report in case we break this code.
    console.error(err);
  }
}

if (true) {
  // DCE check should happen before ReactDOM bundle executes so that
  // DevTools can report bad minification during injection.
  checkDCE();
  module.exports = __webpack_require__(57799);
} else {}


/***/ }),

/***/ 24821:
/***/ ((__unused_webpack_module, exports) => {

"use strict";
var __webpack_unused_export__;
/**
 * @license React
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var b=Symbol.for("react.element"),c=Symbol.for("react.portal"),d=Symbol.for("react.fragment"),e=Symbol.for("react.strict_mode"),f=Symbol.for("react.profiler"),g=Symbol.for("react.provider"),h=Symbol.for("react.context"),k=Symbol.for("react.server_context"),l=Symbol.for("react.forward_ref"),m=Symbol.for("react.suspense"),n=Symbol.for("react.suspense_list"),p=Symbol.for("react.memo"),q=Symbol.for("react.lazy"),t=Symbol.for("react.offscreen"),u;u=Symbol.for("react.module.reference");
function v(a){if("object"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}__webpack_unused_export__=h;__webpack_unused_export__=g;__webpack_unused_export__=b;__webpack_unused_export__=l;__webpack_unused_export__=d;__webpack_unused_export__=q;__webpack_unused_export__=p;__webpack_unused_export__=c;__webpack_unused_export__=f;__webpack_unused_export__=e;__webpack_unused_export__=m;
__webpack_unused_export__=n;__webpack_unused_export__=function(){return!1};__webpack_unused_export__=function(){return!1};__webpack_unused_export__=function(a){return v(a)===h};__webpack_unused_export__=function(a){return v(a)===g};__webpack_unused_export__=function(a){return"object"===typeof a&&null!==a&&a.$$typeof===b};__webpack_unused_export__=function(a){return v(a)===l};__webpack_unused_export__=function(a){return v(a)===d};__webpack_unused_export__=function(a){return v(a)===q};__webpack_unused_export__=function(a){return v(a)===p};
__webpack_unused_export__=function(a){return v(a)===c};__webpack_unused_export__=function(a){return v(a)===f};__webpack_unused_export__=function(a){return v(a)===e};__webpack_unused_export__=function(a){return v(a)===m};__webpack_unused_export__=function(a){return v(a)===n};
__webpack_unused_export__=function(a){return"string"===typeof a||"function"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||"object"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};__webpack_unused_export__=v;


/***/ }),

/***/ 338:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


if (true) {
  /* unused reexport */ __webpack_require__(24821);
} else {}


/***/ }),

/***/ 19018:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "polyfill": () => (/* binding */ polyfill)
/* harmony export */ });
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

function componentWillMount() {
  // Call this.constructor.gDSFP to support sub-classes.
  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);
  if (state !== null && state !== undefined) {
    this.setState(state);
  }
}

function componentWillReceiveProps(nextProps) {
  // Call this.constructor.gDSFP to support sub-classes.
  // Use the setState() updater to ensure state isn't stale in certain edge cases.
  function updater(prevState) {
    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);
    return state !== null && state !== undefined ? state : null;
  }
  // Binding "this" is important for shallow renderer support.
  this.setState(updater.bind(this));
}

function componentWillUpdate(nextProps, nextState) {
  try {
    var prevProps = this.props;
    var prevState = this.state;
    this.props = nextProps;
    this.state = nextState;
    this.__reactInternalSnapshotFlag = true;
    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(
      prevProps,
      prevState
    );
  } finally {
    this.props = prevProps;
    this.state = prevState;
  }
}

// React may warn about cWM/cWRP/cWU methods being deprecated.
// Add a flag to suppress these warnings for this special case.
componentWillMount.__suppressDeprecationWarning = true;
componentWillReceiveProps.__suppressDeprecationWarning = true;
componentWillUpdate.__suppressDeprecationWarning = true;

function polyfill(Component) {
  var prototype = Component.prototype;

  if (!prototype || !prototype.isReactComponent) {
    throw new Error('Can only polyfill class components');
  }

  if (
    typeof Component.getDerivedStateFromProps !== 'function' &&
    typeof prototype.getSnapshotBeforeUpdate !== 'function'
  ) {
    return Component;
  }

  // If new component APIs are defined, "unsafe" lifecycles won't be called.
  // Error if any of these lifecycles are present,
  // Because they would work differently between older and newer (16.3+) versions of React.
  var foundWillMountName = null;
  var foundWillReceivePropsName = null;
  var foundWillUpdateName = null;
  if (typeof prototype.componentWillMount === 'function') {
    foundWillMountName = 'componentWillMount';
  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {
    foundWillMountName = 'UNSAFE_componentWillMount';
  }
  if (typeof prototype.componentWillReceiveProps === 'function') {
    foundWillReceivePropsName = 'componentWillReceiveProps';
  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {
    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';
  }
  if (typeof prototype.componentWillUpdate === 'function') {
    foundWillUpdateName = 'componentWillUpdate';
  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {
    foundWillUpdateName = 'UNSAFE_componentWillUpdate';
  }
  if (
    foundWillMountName !== null ||
    foundWillReceivePropsName !== null ||
    foundWillUpdateName !== null
  ) {
    var componentName = Component.displayName || Component.name;
    var newApiName =
      typeof Component.getDerivedStateFromProps === 'function'
        ? 'getDerivedStateFromProps()'
        : 'getSnapshotBeforeUpdate()';

    throw Error(
      'Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n' +
        componentName +
        ' uses ' +
        newApiName +
        ' but also contains the following legacy lifecycles:' +
        (foundWillMountName !== null ? '\n  ' + foundWillMountName : '') +
        (foundWillReceivePropsName !== null
          ? '\n  ' + foundWillReceivePropsName
          : '') +
        (foundWillUpdateName !== null ? '\n  ' + foundWillUpdateName : '') +
        '\n\nThe above lifecycles should be removed. Learn more about this warning here:\n' +
        'https://fb.me/react-async-component-lifecycle-hooks'
    );
  }

  // React <= 16.2 does not support static getDerivedStateFromProps.
  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.
  // Newer versions of React will ignore these lifecycles if gDSFP exists.
  if (typeof Component.getDerivedStateFromProps === 'function') {
    prototype.componentWillMount = componentWillMount;
    prototype.componentWillReceiveProps = componentWillReceiveProps;
  }

  // React <= 16.2 does not support getSnapshotBeforeUpdate.
  // As a workaround, use cWU to invoke the new lifecycle.
  // Newer versions of React will ignore that lifecycle if gSBU exists.
  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {
    if (typeof prototype.componentDidUpdate !== 'function') {
      throw new Error(
        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'
      );
    }

    prototype.componentWillUpdate = componentWillUpdate;

    var componentDidUpdate = prototype.componentDidUpdate;

    prototype.componentDidUpdate = function componentDidUpdatePolyfill(
      prevProps,
      prevState,
      maybeSnapshot
    ) {
      // 16.3+ will not execute our will-update method;
      // It will pass a snapshot value to did-update though.
      // Older versions will require our polyfilled will-update value.
      // We need to handle both cases, but can't just check for the presence of "maybeSnapshot",
      // Because for <= 15.x versions this might be a "prevContext" object.
      // We also can't just check "__reactInternalSnapshot",
      // Because get-snapshot might return a falsy value.
      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.
      var snapshot = this.__reactInternalSnapshotFlag
        ? this.__reactInternalSnapshot
        : maybeSnapshot;

      componentDidUpdate.call(this, prevProps, prevState, snapshot);
    };
  }

  return Component;
}




/***/ }),

/***/ 42307:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.bodyOpenClassName = exports.portalClassName = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(89526);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(73961);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _propTypes = __webpack_require__(2652);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _ModalPortal = __webpack_require__(72713);

var _ModalPortal2 = _interopRequireDefault(_ModalPortal);

var _ariaAppHider = __webpack_require__(92773);

var ariaAppHider = _interopRequireWildcard(_ariaAppHider);

var _safeHTMLElement = __webpack_require__(65198);

var _safeHTMLElement2 = _interopRequireDefault(_safeHTMLElement);

var _reactLifecyclesCompat = __webpack_require__(19018);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var portalClassName = exports.portalClassName = "ReactModalPortal";
var bodyOpenClassName = exports.bodyOpenClassName = "ReactModal__Body--open";

var isReact16 = _safeHTMLElement.canUseDOM && _reactDom2.default.createPortal !== undefined;

var createHTMLElement = function createHTMLElement(name) {
  return document.createElement(name);
};

var getCreatePortal = function getCreatePortal() {
  return isReact16 ? _reactDom2.default.createPortal : _reactDom2.default.unstable_renderSubtreeIntoContainer;
};

function getParentElement(parentSelector) {
  return parentSelector();
}

var Modal = function (_Component) {
  _inherits(Modal, _Component);

  function Modal() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, Modal);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Modal.__proto__ || Object.getPrototypeOf(Modal)).call.apply(_ref, [this].concat(args))), _this), _this.removePortal = function () {
      !isReact16 && _reactDom2.default.unmountComponentAtNode(_this.node);
      var parent = getParentElement(_this.props.parentSelector);
      if (parent && parent.contains(_this.node)) {
        parent.removeChild(_this.node);
      } else {
        // eslint-disable-next-line no-console
        console.warn('React-Modal: "parentSelector" prop did not returned any DOM ' + "element. Make sure that the parent element is unmounted to " + "avoid any memory leaks.");
      }
    }, _this.portalRef = function (ref) {
      _this.portal = ref;
    }, _this.renderPortal = function (props) {
      var createPortal = getCreatePortal();
      var portal = createPortal(_this, _react2.default.createElement(_ModalPortal2.default, _extends({ defaultStyles: Modal.defaultStyles }, props)), _this.node);
      _this.portalRef(portal);
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(Modal, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (!_safeHTMLElement.canUseDOM) return;

      if (!isReact16) {
        this.node = createHTMLElement("div");
      }
      this.node.className = this.props.portalClassName;

      var parent = getParentElement(this.props.parentSelector);
      parent.appendChild(this.node);

      !isReact16 && this.renderPortal(this.props);
    }
  }, {
    key: "getSnapshotBeforeUpdate",
    value: function getSnapshotBeforeUpdate(prevProps) {
      var prevParent = getParentElement(prevProps.parentSelector);
      var nextParent = getParentElement(this.props.parentSelector);
      return { prevParent: prevParent, nextParent: nextParent };
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps, _, snapshot) {
      if (!_safeHTMLElement.canUseDOM) return;
      var _props = this.props,
          isOpen = _props.isOpen,
          portalClassName = _props.portalClassName;


      if (prevProps.portalClassName !== portalClassName) {
        this.node.className = portalClassName;
      }

      var prevParent = snapshot.prevParent,
          nextParent = snapshot.nextParent;

      if (nextParent !== prevParent) {
        prevParent.removeChild(this.node);
        nextParent.appendChild(this.node);
      }

      // Stop unnecessary renders if modal is remaining closed
      if (!prevProps.isOpen && !isOpen) return;

      !isReact16 && this.renderPortal(this.props);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (!_safeHTMLElement.canUseDOM || !this.node || !this.portal) return;

      var state = this.portal.state;
      var now = Date.now();
      var closesAt = state.isOpen && this.props.closeTimeoutMS && (state.closesAt || now + this.props.closeTimeoutMS);

      if (closesAt) {
        if (!state.beforeClose) {
          this.portal.closeWithTimeout();
        }

        setTimeout(this.removePortal, closesAt - now);
      } else {
        this.removePortal();
      }
    }
  }, {
    key: "render",
    value: function render() {
      if (!_safeHTMLElement.canUseDOM || !isReact16) {
        return null;
      }

      if (!this.node && isReact16) {
        this.node = createHTMLElement("div");
      }

      var createPortal = getCreatePortal();
      return createPortal(_react2.default.createElement(_ModalPortal2.default, _extends({
        ref: this.portalRef,
        defaultStyles: Modal.defaultStyles
      }, this.props)), this.node);
    }
  }], [{
    key: "setAppElement",
    value: function setAppElement(element) {
      ariaAppHider.setElement(element);
    }

    /* eslint-disable react/no-unused-prop-types */

    /* eslint-enable react/no-unused-prop-types */

  }]);

  return Modal;
}(_react.Component);

Modal.propTypes = {
  isOpen: _propTypes2.default.bool.isRequired,
  style: _propTypes2.default.shape({
    content: _propTypes2.default.object,
    overlay: _propTypes2.default.object
  }),
  portalClassName: _propTypes2.default.string,
  bodyOpenClassName: _propTypes2.default.string,
  htmlOpenClassName: _propTypes2.default.string,
  className: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.shape({
    base: _propTypes2.default.string.isRequired,
    afterOpen: _propTypes2.default.string.isRequired,
    beforeClose: _propTypes2.default.string.isRequired
  })]),
  overlayClassName: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.shape({
    base: _propTypes2.default.string.isRequired,
    afterOpen: _propTypes2.default.string.isRequired,
    beforeClose: _propTypes2.default.string.isRequired
  })]),
  appElement: _propTypes2.default.oneOfType([_propTypes2.default.instanceOf(_safeHTMLElement2.default), _propTypes2.default.instanceOf(_safeHTMLElement.SafeHTMLCollection), _propTypes2.default.instanceOf(_safeHTMLElement.SafeNodeList), _propTypes2.default.arrayOf(_propTypes2.default.instanceOf(_safeHTMLElement2.default))]),
  onAfterOpen: _propTypes2.default.func,
  onRequestClose: _propTypes2.default.func,
  closeTimeoutMS: _propTypes2.default.number,
  ariaHideApp: _propTypes2.default.bool,
  shouldFocusAfterRender: _propTypes2.default.bool,
  shouldCloseOnOverlayClick: _propTypes2.default.bool,
  shouldReturnFocusAfterClose: _propTypes2.default.bool,
  preventScroll: _propTypes2.default.bool,
  parentSelector: _propTypes2.default.func,
  aria: _propTypes2.default.object,
  data: _propTypes2.default.object,
  role: _propTypes2.default.string,
  contentLabel: _propTypes2.default.string,
  shouldCloseOnEsc: _propTypes2.default.bool,
  overlayRef: _propTypes2.default.func,
  contentRef: _propTypes2.default.func,
  id: _propTypes2.default.string,
  overlayElement: _propTypes2.default.func,
  contentElement: _propTypes2.default.func
};
Modal.defaultProps = {
  isOpen: false,
  portalClassName: portalClassName,
  bodyOpenClassName: bodyOpenClassName,
  role: "dialog",
  ariaHideApp: true,
  closeTimeoutMS: 0,
  shouldFocusAfterRender: true,
  shouldCloseOnEsc: true,
  shouldCloseOnOverlayClick: true,
  shouldReturnFocusAfterClose: true,
  preventScroll: false,
  parentSelector: function parentSelector() {
    return document.body;
  },
  overlayElement: function overlayElement(props, contentEl) {
    return _react2.default.createElement(
      "div",
      props,
      contentEl
    );
  },
  contentElement: function contentElement(props, children) {
    return _react2.default.createElement(
      "div",
      props,
      children
    );
  }
};
Modal.defaultStyles = {
  overlay: {
    position: "fixed",
    top: 0,
    left: 0,
    right: 0,
    bottom: 0,
    backgroundColor: "rgba(255, 255, 255, 0.75)"
  },
  content: {
    position: "absolute",
    top: "40px",
    left: "40px",
    right: "40px",
    bottom: "40px",
    border: "1px solid #ccc",
    background: "#fff",
    overflow: "auto",
    WebkitOverflowScrolling: "touch",
    borderRadius: "4px",
    outline: "none",
    padding: "20px"
  }
};


(0, _reactLifecyclesCompat.polyfill)(Modal);

if (false) {}

exports["default"] = Modal;

/***/ }),

/***/ 72713:
/***/ ((module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(89526);

var _propTypes = __webpack_require__(2652);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _focusManager = __webpack_require__(39677);

var focusManager = _interopRequireWildcard(_focusManager);

var _scopeTab = __webpack_require__(33851);

var _scopeTab2 = _interopRequireDefault(_scopeTab);

var _ariaAppHider = __webpack_require__(92773);

var ariaAppHider = _interopRequireWildcard(_ariaAppHider);

var _classList = __webpack_require__(8411);

var classList = _interopRequireWildcard(_classList);

var _safeHTMLElement = __webpack_require__(65198);

var _safeHTMLElement2 = _interopRequireDefault(_safeHTMLElement);

var _portalOpenInstances = __webpack_require__(27578);

var _portalOpenInstances2 = _interopRequireDefault(_portalOpenInstances);

__webpack_require__(30613);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// so that our CSS is statically analyzable
var CLASS_NAMES = {
  overlay: "ReactModal__Overlay",
  content: "ReactModal__Content"
};

/**
 * We need to support the deprecated `KeyboardEvent.keyCode` in addition to
 * `KeyboardEvent.code` for apps that still support IE11. Can be removed when
 * `react-modal` only supports React >18 (which dropped IE support).
 */
var isTabKey = function isTabKey(event) {
  return event.code === "Tab" || event.keyCode === 9;
};
var isEscKey = function isEscKey(event) {
  return event.code === "Escape" || event.keyCode === 27;
};

var ariaHiddenInstances = 0;

var ModalPortal = function (_Component) {
  _inherits(ModalPortal, _Component);

  function ModalPortal(props) {
    _classCallCheck(this, ModalPortal);

    var _this = _possibleConstructorReturn(this, (ModalPortal.__proto__ || Object.getPrototypeOf(ModalPortal)).call(this, props));

    _this.setOverlayRef = function (overlay) {
      _this.overlay = overlay;
      _this.props.overlayRef && _this.props.overlayRef(overlay);
    };

    _this.setContentRef = function (content) {
      _this.content = content;
      _this.props.contentRef && _this.props.contentRef(content);
    };

    _this.afterClose = function () {
      var _this$props = _this.props,
          appElement = _this$props.appElement,
          ariaHideApp = _this$props.ariaHideApp,
          htmlOpenClassName = _this$props.htmlOpenClassName,
          bodyOpenClassName = _this$props.bodyOpenClassName,
          parentSelector = _this$props.parentSelector;


      var parentDocument = parentSelector && parentSelector().ownerDocument || document;

      // Remove classes.
      bodyOpenClassName && classList.remove(parentDocument.body, bodyOpenClassName);

      htmlOpenClassName && classList.remove(parentDocument.getElementsByTagName("html")[0], htmlOpenClassName);

      // Reset aria-hidden attribute if all modals have been removed
      if (ariaHideApp && ariaHiddenInstances > 0) {
        ariaHiddenInstances -= 1;

        if (ariaHiddenInstances === 0) {
          ariaAppHider.show(appElement);
        }
      }

      if (_this.props.shouldFocusAfterRender) {
        if (_this.props.shouldReturnFocusAfterClose) {
          focusManager.returnFocus(_this.props.preventScroll);
          focusManager.teardownScopedFocus();
        } else {
          focusManager.popWithoutFocus();
        }
      }

      if (_this.props.onAfterClose) {
        _this.props.onAfterClose();
      }

      _portalOpenInstances2.default.deregister(_this);
    };

    _this.open = function () {
      _this.beforeOpen();
      if (_this.state.afterOpen && _this.state.beforeClose) {
        clearTimeout(_this.closeTimer);
        _this.setState({ beforeClose: false });
      } else {
        if (_this.props.shouldFocusAfterRender) {
          focusManager.setupScopedFocus(_this.node);
          focusManager.markForFocusLater();
        }

        _this.setState({ isOpen: true }, function () {
          _this.openAnimationFrame = requestAnimationFrame(function () {
            _this.setState({ afterOpen: true });

            if (_this.props.isOpen && _this.props.onAfterOpen) {
              _this.props.onAfterOpen({
                overlayEl: _this.overlay,
                contentEl: _this.content
              });
            }
          });
        });
      }
    };

    _this.close = function () {
      if (_this.props.closeTimeoutMS > 0) {
        _this.closeWithTimeout();
      } else {
        _this.closeWithoutTimeout();
      }
    };

    _this.focusContent = function () {
      return _this.content && !_this.contentHasFocus() && _this.content.focus({ preventScroll: true });
    };

    _this.closeWithTimeout = function () {
      var closesAt = Date.now() + _this.props.closeTimeoutMS;
      _this.setState({ beforeClose: true, closesAt: closesAt }, function () {
        _this.closeTimer = setTimeout(_this.closeWithoutTimeout, _this.state.closesAt - Date.now());
      });
    };

    _this.closeWithoutTimeout = function () {
      _this.setState({
        beforeClose: false,
        isOpen: false,
        afterOpen: false,
        closesAt: null
      }, _this.afterClose);
    };

    _this.handleKeyDown = function (event) {
      if (isTabKey(event)) {
        (0, _scopeTab2.default)(_this.content, event);
      }

      if (_this.props.shouldCloseOnEsc && isEscKey(event)) {
        event.stopPropagation();
        _this.requestClose(event);
      }
    };

    _this.handleOverlayOnClick = function (event) {
      if (_this.shouldClose === null) {
        _this.shouldClose = true;
      }

      if (_this.shouldClose && _this.props.shouldCloseOnOverlayClick) {
        if (_this.ownerHandlesClose()) {
          _this.requestClose(event);
        } else {
          _this.focusContent();
        }
      }
      _this.shouldClose = null;
    };

    _this.handleContentOnMouseUp = function () {
      _this.shouldClose = false;
    };

    _this.handleOverlayOnMouseDown = function (event) {
      if (!_this.props.shouldCloseOnOverlayClick && event.target == _this.overlay) {
        event.preventDefault();
      }
    };

    _this.handleContentOnClick = function () {
      _this.shouldClose = false;
    };

    _this.handleContentOnMouseDown = function () {
      _this.shouldClose = false;
    };

    _this.requestClose = function (event) {
      return _this.ownerHandlesClose() && _this.props.onRequestClose(event);
    };

    _this.ownerHandlesClose = function () {
      return _this.props.onRequestClose;
    };

    _this.shouldBeClosed = function () {
      return !_this.state.isOpen && !_this.state.beforeClose;
    };

    _this.contentHasFocus = function () {
      return document.activeElement === _this.content || _this.content.contains(document.activeElement);
    };

    _this.buildClassName = function (which, additional) {
      var classNames = (typeof additional === "undefined" ? "undefined" : _typeof(additional)) === "object" ? additional : {
        base: CLASS_NAMES[which],
        afterOpen: CLASS_NAMES[which] + "--after-open",
        beforeClose: CLASS_NAMES[which] + "--before-close"
      };
      var className = classNames.base;
      if (_this.state.afterOpen) {
        className = className + " " + classNames.afterOpen;
      }
      if (_this.state.beforeClose) {
        className = className + " " + classNames.beforeClose;
      }
      return typeof additional === "string" && additional ? className + " " + additional : className;
    };

    _this.attributesFromObject = function (prefix, items) {
      return Object.keys(items).reduce(function (acc, name) {
        acc[prefix + "-" + name] = items[name];
        return acc;
      }, {});
    };

    _this.state = {
      afterOpen: false,
      beforeClose: false
    };

    _this.shouldClose = null;
    _this.moveFromContentToOverlay = null;
    return _this;
  }

  _createClass(ModalPortal, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (this.props.isOpen) {
        this.open();
      }
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps, prevState) {
      if (false) {}

      if (this.props.isOpen && !prevProps.isOpen) {
        this.open();
      } else if (!this.props.isOpen && prevProps.isOpen) {
        this.close();
      }

      // Focus only needs to be set once when the modal is being opened
      if (this.props.shouldFocusAfterRender && this.state.isOpen && !prevState.isOpen) {
        this.focusContent();
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.state.isOpen) {
        this.afterClose();
      }
      clearTimeout(this.closeTimer);
      cancelAnimationFrame(this.openAnimationFrame);
    }
  }, {
    key: "beforeOpen",
    value: function beforeOpen() {
      var _props = this.props,
          appElement = _props.appElement,
          ariaHideApp = _props.ariaHideApp,
          htmlOpenClassName = _props.htmlOpenClassName,
          bodyOpenClassName = _props.bodyOpenClassName,
          parentSelector = _props.parentSelector;


      var parentDocument = parentSelector && parentSelector().ownerDocument || document;

      // Add classes.
      bodyOpenClassName && classList.add(parentDocument.body, bodyOpenClassName);

      htmlOpenClassName && classList.add(parentDocument.getElementsByTagName("html")[0], htmlOpenClassName);

      if (ariaHideApp) {
        ariaHiddenInstances += 1;
        ariaAppHider.hide(appElement);
      }

      _portalOpenInstances2.default.register(this);
    }

    // Don't steal focus from inner elements

  }, {
    key: "render",
    value: function render() {
      var _props2 = this.props,
          id = _props2.id,
          className = _props2.className,
          overlayClassName = _props2.overlayClassName,
          defaultStyles = _props2.defaultStyles,
          children = _props2.children;

      var contentStyles = className ? {} : defaultStyles.content;
      var overlayStyles = overlayClassName ? {} : defaultStyles.overlay;

      if (this.shouldBeClosed()) {
        return null;
      }

      var overlayProps = {
        ref: this.setOverlayRef,
        className: this.buildClassName("overlay", overlayClassName),
        style: _extends({}, overlayStyles, this.props.style.overlay),
        onClick: this.handleOverlayOnClick,
        onMouseDown: this.handleOverlayOnMouseDown
      };

      var contentProps = _extends({
        id: id,
        ref: this.setContentRef,
        style: _extends({}, contentStyles, this.props.style.content),
        className: this.buildClassName("content", className),
        tabIndex: "-1",
        onKeyDown: this.handleKeyDown,
        onMouseDown: this.handleContentOnMouseDown,
        onMouseUp: this.handleContentOnMouseUp,
        onClick: this.handleContentOnClick,
        role: this.props.role,
        "aria-label": this.props.contentLabel
      }, this.attributesFromObject("aria", _extends({ modal: true }, this.props.aria)), this.attributesFromObject("data", this.props.data || {}), {
        "data-testid": this.props.testId
      });

      var contentElement = this.props.contentElement(contentProps, children);
      return this.props.overlayElement(overlayProps, contentElement);
    }
  }]);

  return ModalPortal;
}(_react.Component);

ModalPortal.defaultProps = {
  style: {
    overlay: {},
    content: {}
  },
  defaultStyles: {}
};
ModalPortal.propTypes = {
  isOpen: _propTypes2.default.bool.isRequired,
  defaultStyles: _propTypes2.default.shape({
    content: _propTypes2.default.object,
    overlay: _propTypes2.default.object
  }),
  style: _propTypes2.default.shape({
    content: _propTypes2.default.object,
    overlay: _propTypes2.default.object
  }),
  className: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]),
  overlayClassName: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]),
  parentSelector: _propTypes2.default.func,
  bodyOpenClassName: _propTypes2.default.string,
  htmlOpenClassName: _propTypes2.default.string,
  ariaHideApp: _propTypes2.default.bool,
  appElement: _propTypes2.default.oneOfType([_propTypes2.default.instanceOf(_safeHTMLElement2.default), _propTypes2.default.instanceOf(_safeHTMLElement.SafeHTMLCollection), _propTypes2.default.instanceOf(_safeHTMLElement.SafeNodeList), _propTypes2.default.arrayOf(_propTypes2.default.instanceOf(_safeHTMLElement2.default))]),
  onAfterOpen: _propTypes2.default.func,
  onAfterClose: _propTypes2.default.func,
  onRequestClose: _propTypes2.default.func,
  closeTimeoutMS: _propTypes2.default.number,
  shouldFocusAfterRender: _propTypes2.default.bool,
  shouldCloseOnOverlayClick: _propTypes2.default.bool,
  shouldReturnFocusAfterClose: _propTypes2.default.bool,
  preventScroll: _propTypes2.default.bool,
  role: _propTypes2.default.string,
  contentLabel: _propTypes2.default.string,
  aria: _propTypes2.default.object,
  data: _propTypes2.default.object,
  children: _propTypes2.default.node,
  shouldCloseOnEsc: _propTypes2.default.bool,
  overlayRef: _propTypes2.default.func,
  contentRef: _propTypes2.default.func,
  id: _propTypes2.default.string,
  overlayElement: _propTypes2.default.func,
  contentElement: _propTypes2.default.func,
  testId: _propTypes2.default.string
};
exports["default"] = ModalPortal;
module.exports = exports["default"];

/***/ }),

/***/ 92773:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.resetState = resetState;
exports.log = log;
exports.assertNodeList = assertNodeList;
exports.setElement = setElement;
exports.validateElement = validateElement;
exports.hide = hide;
exports.show = show;
exports.documentNotReadyOrSSRTesting = documentNotReadyOrSSRTesting;

var _warning = __webpack_require__(626);

var _warning2 = _interopRequireDefault(_warning);

var _safeHTMLElement = __webpack_require__(65198);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var globalElement = null;

/* eslint-disable no-console */
/* istanbul ignore next */
function resetState() {
  if (globalElement) {
    if (globalElement.removeAttribute) {
      globalElement.removeAttribute("aria-hidden");
    } else if (globalElement.length != null) {
      globalElement.forEach(function (element) {
        return element.removeAttribute("aria-hidden");
      });
    } else {
      document.querySelectorAll(globalElement).forEach(function (element) {
        return element.removeAttribute("aria-hidden");
      });
    }
  }
  globalElement = null;
}

/* istanbul ignore next */
function log() {
  if (false) { var check; }
}
/* eslint-enable no-console */

function assertNodeList(nodeList, selector) {
  if (!nodeList || !nodeList.length) {
    throw new Error("react-modal: No elements were found for selector " + selector + ".");
  }
}

function setElement(element) {
  var useElement = element;
  if (typeof useElement === "string" && _safeHTMLElement.canUseDOM) {
    var el = document.querySelectorAll(useElement);
    assertNodeList(el, useElement);
    useElement = el;
  }
  globalElement = useElement || globalElement;
  return globalElement;
}

function validateElement(appElement) {
  var el = appElement || globalElement;
  if (el) {
    return Array.isArray(el) || el instanceof HTMLCollection || el instanceof NodeList ? el : [el];
  } else {
    (0, _warning2.default)(false, ["react-modal: App element is not defined.", "Please use `Modal.setAppElement(el)` or set `appElement={el}`.", "This is needed so screen readers don't see main content", "when modal is opened. It is not recommended, but you can opt-out", "by setting `ariaHideApp={false}`."].join(" "));

    return [];
  }
}

function hide(appElement) {
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = validateElement(appElement)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var el = _step.value;

      el.setAttribute("aria-hidden", "true");
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }
}

function show(appElement) {
  var _iteratorNormalCompletion2 = true;
  var _didIteratorError2 = false;
  var _iteratorError2 = undefined;

  try {
    for (var _iterator2 = validateElement(appElement)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
      var el = _step2.value;

      el.removeAttribute("aria-hidden");
    }
  } catch (err) {
    _didIteratorError2 = true;
    _iteratorError2 = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion2 && _iterator2.return) {
        _iterator2.return();
      }
    } finally {
      if (_didIteratorError2) {
        throw _iteratorError2;
      }
    }
  }
}

function documentNotReadyOrSSRTesting() {
  globalElement = null;
}

/***/ }),

/***/ 30613:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.resetState = resetState;
exports.log = log;

var _portalOpenInstances = __webpack_require__(27578);

var _portalOpenInstances2 = _interopRequireDefault(_portalOpenInstances);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Body focus trap see Issue #742

var before = void 0,
    after = void 0,
    instances = [];

/* eslint-disable no-console */
/* istanbul ignore next */
function resetState() {
  var _arr = [before, after];

  for (var _i = 0; _i < _arr.length; _i++) {
    var item = _arr[_i];
    if (!item) continue;
    item.parentNode && item.parentNode.removeChild(item);
  }
  before = after = null;
  instances = [];
}

/* istanbul ignore next */
function log() {
  console.log("bodyTrap ----------");
  console.log(instances.length);
  var _arr2 = [before, after];
  for (var _i2 = 0; _i2 < _arr2.length; _i2++) {
    var item = _arr2[_i2];
    var check = item || {};
    console.log(check.nodeName, check.className, check.id);
  }
  console.log("edn bodyTrap ----------");
}
/* eslint-enable no-console */

function focusContent() {
  if (instances.length === 0) {
    if (false) {}
    return;
  }
  instances[instances.length - 1].focusContent();
}

function bodyTrap(eventType, openInstances) {
  if (!before && !after) {
    before = document.createElement("div");
    before.setAttribute("data-react-modal-body-trap", "");
    before.style.position = "absolute";
    before.style.opacity = "0";
    before.setAttribute("tabindex", "0");
    before.addEventListener("focus", focusContent);
    after = before.cloneNode();
    after.addEventListener("focus", focusContent);
  }

  instances = openInstances;

  if (instances.length > 0) {
    // Add focus trap
    if (document.body.firstChild !== before) {
      document.body.insertBefore(before, document.body.firstChild);
    }
    if (document.body.lastChild !== after) {
      document.body.appendChild(after);
    }
  } else {
    // Remove focus trap
    if (before.parentElement) {
      before.parentElement.removeChild(before);
    }
    if (after.parentElement) {
      after.parentElement.removeChild(after);
    }
  }
}

_portalOpenInstances2.default.subscribe(bodyTrap);

/***/ }),

/***/ 8411:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.resetState = resetState;
exports.log = log;
var htmlClassList = {};
var docBodyClassList = {};

/* eslint-disable no-console */
/* istanbul ignore next */
function removeClass(at, cls) {
  at.classList.remove(cls);
}

/* istanbul ignore next */
function resetState() {
  var htmlElement = document.getElementsByTagName("html")[0];
  for (var cls in htmlClassList) {
    removeClass(htmlElement, htmlClassList[cls]);
  }

  var body = document.body;
  for (var _cls in docBodyClassList) {
    removeClass(body, docBodyClassList[_cls]);
  }

  htmlClassList = {};
  docBodyClassList = {};
}

/* istanbul ignore next */
function log() {
  if (false) { var _x, x, buffer, classes; }
}
/* eslint-enable no-console */

/**
 * Track the number of reference of a class.
 * @param {object} poll The poll to receive the reference.
 * @param {string} className The class name.
 * @return {string}
 */
var incrementReference = function incrementReference(poll, className) {
  if (!poll[className]) {
    poll[className] = 0;
  }
  poll[className] += 1;
  return className;
};

/**
 * Drop the reference of a class.
 * @param {object} poll The poll to receive the reference.
 * @param {string} className The class name.
 * @return {string}
 */
var decrementReference = function decrementReference(poll, className) {
  if (poll[className]) {
    poll[className] -= 1;
  }
  return className;
};

/**
 * Track a class and add to the given class list.
 * @param {Object} classListRef A class list of an element.
 * @param {Object} poll         The poll to be used.
 * @param {Array}  classes      The list of classes to be tracked.
 */
var trackClass = function trackClass(classListRef, poll, classes) {
  classes.forEach(function (className) {
    incrementReference(poll, className);
    classListRef.add(className);
  });
};

/**
 * Untrack a class and remove from the given class list if the reference
 * reaches 0.
 * @param {Object} classListRef A class list of an element.
 * @param {Object} poll         The poll to be used.
 * @param {Array}  classes      The list of classes to be untracked.
 */
var untrackClass = function untrackClass(classListRef, poll, classes) {
  classes.forEach(function (className) {
    decrementReference(poll, className);
    poll[className] === 0 && classListRef.remove(className);
  });
};

/**
 * Public inferface to add classes to the document.body.
 * @param {string} bodyClass The class string to be added.
 *                           It may contain more then one class
 *                           with ' ' as separator.
 */
var add = exports.add = function add(element, classString) {
  return trackClass(element.classList, element.nodeName.toLowerCase() == "html" ? htmlClassList : docBodyClassList, classString.split(" "));
};

/**
 * Public inferface to remove classes from the document.body.
 * @param {string} bodyClass The class string to be added.
 *                           It may contain more then one class
 *                           with ' ' as separator.
 */
var remove = exports.remove = function remove(element, classString) {
  return untrackClass(element.classList, element.nodeName.toLowerCase() == "html" ? htmlClassList : docBodyClassList, classString.split(" "));
};

/***/ }),

/***/ 39677:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.resetState = resetState;
exports.log = log;
exports.handleBlur = handleBlur;
exports.handleFocus = handleFocus;
exports.markForFocusLater = markForFocusLater;
exports.returnFocus = returnFocus;
exports.popWithoutFocus = popWithoutFocus;
exports.setupScopedFocus = setupScopedFocus;
exports.teardownScopedFocus = teardownScopedFocus;

var _tabbable = __webpack_require__(54639);

var _tabbable2 = _interopRequireDefault(_tabbable);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var focusLaterElements = [];
var modalElement = null;
var needToFocus = false;

/* eslint-disable no-console */
/* istanbul ignore next */
function resetState() {
  focusLaterElements = [];
}

/* istanbul ignore next */
function log() {
  if (false) {}
}
/* eslint-enable no-console */

function handleBlur() {
  needToFocus = true;
}

function handleFocus() {
  if (needToFocus) {
    needToFocus = false;
    if (!modalElement) {
      return;
    }
    // need to see how jQuery shims document.on('focusin') so we don't need the
    // setTimeout, firefox doesn't support focusin, if it did, we could focus
    // the element outside of a setTimeout. Side-effect of this implementation
    // is that the document.body gets focus, and then we focus our element right
    // after, seems fine.
    setTimeout(function () {
      if (modalElement.contains(document.activeElement)) {
        return;
      }
      var el = (0, _tabbable2.default)(modalElement)[0] || modalElement;
      el.focus();
    }, 0);
  }
}

function markForFocusLater() {
  focusLaterElements.push(document.activeElement);
}

/* eslint-disable no-console */
function returnFocus() {
  var preventScroll = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

  var toFocus = null;
  try {
    if (focusLaterElements.length !== 0) {
      toFocus = focusLaterElements.pop();
      toFocus.focus({ preventScroll: preventScroll });
    }
    return;
  } catch (e) {
    console.warn(["You tried to return focus to", toFocus, "but it is not in the DOM anymore"].join(" "));
  }
}
/* eslint-enable no-console */

function popWithoutFocus() {
  focusLaterElements.length > 0 && focusLaterElements.pop();
}

function setupScopedFocus(element) {
  modalElement = element;

  if (window.addEventListener) {
    window.addEventListener("blur", handleBlur, false);
    document.addEventListener("focus", handleFocus, true);
  } else {
    window.attachEvent("onBlur", handleBlur);
    document.attachEvent("onFocus", handleFocus);
  }
}

function teardownScopedFocus() {
  modalElement = null;

  if (window.addEventListener) {
    window.removeEventListener("blur", handleBlur);
    document.removeEventListener("focus", handleFocus);
  } else {
    window.detachEvent("onBlur", handleBlur);
    document.detachEvent("onFocus", handleFocus);
  }
}

/***/ }),

/***/ 27578:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.log = log;
exports.resetState = resetState;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

// Tracks portals that are open and emits events to subscribers

var PortalOpenInstances = function PortalOpenInstances() {
  var _this = this;

  _classCallCheck(this, PortalOpenInstances);

  this.register = function (openInstance) {
    if (_this.openInstances.indexOf(openInstance) !== -1) {
      if (false) {}
      return;
    }
    _this.openInstances.push(openInstance);
    _this.emit("register");
  };

  this.deregister = function (openInstance) {
    var index = _this.openInstances.indexOf(openInstance);
    if (index === -1) {
      if (false) {}
      return;
    }
    _this.openInstances.splice(index, 1);
    _this.emit("deregister");
  };

  this.subscribe = function (callback) {
    _this.subscribers.push(callback);
  };

  this.emit = function (eventType) {
    _this.subscribers.forEach(function (subscriber) {
      return subscriber(eventType,
      // shallow copy to avoid accidental mutation
      _this.openInstances.slice());
    });
  };

  this.openInstances = [];
  this.subscribers = [];
};

var portalOpenInstances = new PortalOpenInstances();

/* eslint-disable no-console */
/* istanbul ignore next */
function log() {
  console.log("portalOpenInstances ----------");
  console.log(portalOpenInstances.openInstances.length);
  portalOpenInstances.openInstances.forEach(function (p) {
    return console.log(p);
  });
  console.log("end portalOpenInstances ----------");
}

/* istanbul ignore next */
function resetState() {
  portalOpenInstances = new PortalOpenInstances();
}
/* eslint-enable no-console */

exports["default"] = portalOpenInstances;

/***/ }),

/***/ 65198:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.canUseDOM = exports.SafeNodeList = exports.SafeHTMLCollection = undefined;

var _exenv = __webpack_require__(37941);

var _exenv2 = _interopRequireDefault(_exenv);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var EE = _exenv2.default;

var SafeHTMLElement = EE.canUseDOM ? window.HTMLElement : {};

var SafeHTMLCollection = exports.SafeHTMLCollection = EE.canUseDOM ? window.HTMLCollection : {};

var SafeNodeList = exports.SafeNodeList = EE.canUseDOM ? window.NodeList : {};

var canUseDOM = exports.canUseDOM = EE.canUseDOM;

exports["default"] = SafeHTMLElement;

/***/ }),

/***/ 33851:
/***/ ((module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = scopeTab;

var _tabbable = __webpack_require__(54639);

var _tabbable2 = _interopRequireDefault(_tabbable);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getActiveElement() {
  var el = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;

  return el.activeElement.shadowRoot ? getActiveElement(el.activeElement.shadowRoot) : el.activeElement;
}

function scopeTab(node, event) {
  var tabbable = (0, _tabbable2.default)(node);

  if (!tabbable.length) {
    // Do nothing, since there are no elements that can receive focus.
    event.preventDefault();
    return;
  }

  var target = void 0;

  var shiftKey = event.shiftKey;
  var head = tabbable[0];
  var tail = tabbable[tabbable.length - 1];
  var activeElement = getActiveElement();

  // proceed with default browser behavior on tab.
  // Focus on last element on shift + tab.
  if (node === activeElement) {
    if (!shiftKey) return;
    target = tail;
  }

  if (tail === activeElement && !shiftKey) {
    target = head;
  }

  if (head === activeElement && shiftKey) {
    target = tail;
  }

  if (target) {
    event.preventDefault();
    target.focus();
    return;
  }

  // Safari radio issue.
  //
  // Safari does not move the focus to the radio button,
  // so we need to force it to really walk through all elements.
  //
  // This is very error prone, since we are trying to guess
  // if it is a safari browser from the first occurence between
  // chrome or safari.
  //
  // The chrome user agent contains the first ocurrence
  // as the 'chrome/version' and later the 'safari/version'.
  var checkSafari = /(\bChrome\b|\bSafari\b)\//.exec(navigator.userAgent);
  var isSafariDesktop = checkSafari != null && checkSafari[1] != "Chrome" && /\biPod\b|\biPad\b/g.exec(navigator.userAgent) == null;

  // If we are not in safari desktop, let the browser control
  // the focus
  if (!isSafariDesktop) return;

  var x = tabbable.indexOf(activeElement);

  if (x > -1) {
    x += shiftKey ? -1 : 1;
  }

  target = tabbable[x];

  // If the tabbable element does not exist,
  // focus head/tail based on shiftKey
  if (typeof target === "undefined") {
    event.preventDefault();
    target = shiftKey ? tail : head;
    target.focus();
    return;
  }

  event.preventDefault();

  target.focus();
}
module.exports = exports["default"];

/***/ }),

/***/ 54639:
/***/ ((module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = findTabbableDescendants;
/*!
 * Adapted from jQuery UI core
 *
 * http://jqueryui.com
 *
 * Copyright 2014 jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/category/ui-core/
 */

var DISPLAY_NONE = "none";
var DISPLAY_CONTENTS = "contents";

var tabbableNode = /input|select|textarea|button|object|iframe/;

function isNotOverflowing(element, style) {
  return style.getPropertyValue("overflow") !== "visible" ||
  // if 'overflow: visible' set, check if there is actually any overflow
  element.scrollWidth <= 0 && element.scrollHeight <= 0;
}

function hidesContents(element) {
  var zeroSize = element.offsetWidth <= 0 && element.offsetHeight <= 0;

  // If the node is empty, this is good enough
  if (zeroSize && !element.innerHTML) return true;

  try {
    // Otherwise we need to check some styles
    var style = window.getComputedStyle(element);
    var displayValue = style.getPropertyValue("display");
    return zeroSize ? displayValue !== DISPLAY_CONTENTS && isNotOverflowing(element, style) : displayValue === DISPLAY_NONE;
  } catch (exception) {
    // eslint-disable-next-line no-console
    console.warn("Failed to inspect element style");
    return false;
  }
}

function visible(element) {
  var parentElement = element;
  var rootNode = element.getRootNode && element.getRootNode();
  while (parentElement) {
    if (parentElement === document.body) break;

    // if we are not hidden yet, skip to checking outside the Web Component
    if (rootNode && parentElement === rootNode) parentElement = rootNode.host.parentNode;

    if (hidesContents(parentElement)) return false;
    parentElement = parentElement.parentNode;
  }
  return true;
}

function focusable(element, isTabIndexNotNaN) {
  var nodeName = element.nodeName.toLowerCase();
  var res = tabbableNode.test(nodeName) && !element.disabled || (nodeName === "a" ? element.href || isTabIndexNotNaN : isTabIndexNotNaN);
  return res && visible(element);
}

function tabbable(element) {
  var tabIndex = element.getAttribute("tabindex");
  if (tabIndex === null) tabIndex = undefined;
  var isTabIndexNaN = isNaN(tabIndex);
  return (isTabIndexNaN || tabIndex >= 0) && focusable(element, !isTabIndexNaN);
}

function findTabbableDescendants(element) {
  var descendants = [].slice.call(element.querySelectorAll("*"), 0).reduce(function (finished, el) {
    return finished.concat(!el.shadowRoot ? [el] : findTabbableDescendants(el.shadowRoot));
  }, []);
  return descendants.filter(tabbable);
}
module.exports = exports["default"];

/***/ }),

/***/ 34823:
/***/ ((module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));

var _Modal = __webpack_require__(42307);

var _Modal2 = _interopRequireDefault(_Modal);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports["default"] = _Modal2.default;
module.exports = exports["default"];

/***/ }),

/***/ 12384:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "zt": () => (/* reexport */ components_Provider),
  "I0": () => (/* reexport */ useDispatch),
  "v9": () => (/* reexport */ useSelector)
});

// UNUSED EXPORTS: ReactReduxContext, batch, connect, createDispatchHook, createSelectorHook, createStoreHook, shallowEqual, useStore

// EXTERNAL MODULE: ./node_modules/use-sync-external-store/shim/index.js
var shim = __webpack_require__(50635);
// EXTERNAL MODULE: ./node_modules/use-sync-external-store/shim/with-selector.js
var with_selector = __webpack_require__(49654);
// EXTERNAL MODULE: ./node_modules/react-dom/index.js
var react_dom = __webpack_require__(73961);
;// CONCATENATED MODULE: ./node_modules/react-redux/es/utils/reactBatchedUpdates.js

;// CONCATENATED MODULE: ./node_modules/react-redux/es/utils/batch.js
// Default to a dummy "batch" implementation that just runs the callback
function defaultNoopBatch(callback) {
  callback();
}

let batch = defaultNoopBatch; // Allow injecting another batching function later

const setBatch = newBatch => batch = newBatch; // Supply a getter just to skip dealing with ESM bindings

const getBatch = () => batch;
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(89526);
;// CONCATENATED MODULE: ./node_modules/react-redux/es/components/Context.js

const Context_ReactReduxContext = /*#__PURE__*/(0,react.createContext)(null);

if (false) {}

/* harmony default export */ var Context = ((/* unused pure expression or super */ null && (Context_ReactReduxContext)));
;// CONCATENATED MODULE: ./node_modules/react-redux/es/hooks/useReduxContext.js



/**
 * A hook to access the value of the `ReactReduxContext`. This is a low-level
 * hook that you should usually not need to call directly.
 *
 * @returns {any} the value of the `ReactReduxContext`
 *
 * @example
 *
 * import React from 'react'
 * import { useReduxContext } from 'react-redux'
 *
 * export const CounterComponent = () => {
 *   const { store } = useReduxContext()
 *   return <div>{store.getState()}</div>
 * }
 */
function useReduxContext_useReduxContext() {
  const contextValue = (0,react.useContext)(Context_ReactReduxContext);

  if (false) {}

  return contextValue;
}
;// CONCATENATED MODULE: ./node_modules/react-redux/es/utils/useSyncExternalStore.js
const useSyncExternalStore_notInitialized = () => {
  throw new Error('uSES not initialized!');
};
;// CONCATENATED MODULE: ./node_modules/react-redux/es/hooks/useSelector.js




let useSyncExternalStoreWithSelector = useSyncExternalStore_notInitialized;
const initializeUseSelector = fn => {
  useSyncExternalStoreWithSelector = fn;
};

const refEquality = (a, b) => a === b;
/**
 * Hook factory, which creates a `useSelector` hook bound to a given context.
 *
 * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.
 * @returns {Function} A `useSelector` hook bound to the specified context.
 */


function createSelectorHook(context = Context_ReactReduxContext) {
  const useReduxContext = context === Context_ReactReduxContext ? useReduxContext_useReduxContext : () => (0,react.useContext)(context);
  return function useSelector(selector, equalityFn = refEquality) {
    if (false) {}

    const {
      store,
      subscription,
      getServerState
    } = useReduxContext();
    const selectedState = useSyncExternalStoreWithSelector(subscription.addNestedSub, store.getState, getServerState || store.getState, selector, equalityFn);
    (0,react.useDebugValue)(selectedState);
    return selectedState;
  };
}
/**
 * A hook to access the redux store's state. This hook takes a selector function
 * as an argument. The selector is called with the store state.
 *
 * This hook takes an optional equality comparison function as the second parameter
 * that allows you to customize the way the selected state is compared to determine
 * whether the component needs to be re-rendered.
 *
 * @param {Function} selector the selector function
 * @param {Function=} equalityFn the function that will be used to determine equality
 *
 * @returns {any} the selected state
 *
 * @example
 *
 * import React from 'react'
 * import { useSelector } from 'react-redux'
 *
 * export const CounterComponent = () => {
 *   const counter = useSelector(state => state.counter)
 *   return <div>{counter}</div>
 * }
 */

const useSelector = /*#__PURE__*/createSelectorHook();
// EXTERNAL MODULE: ./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js
var hoist_non_react_statics_cjs = __webpack_require__(41281);
// EXTERNAL MODULE: ./node_modules/react-is/index.js
var react_is = __webpack_require__(338);
;// CONCATENATED MODULE: ./node_modules/react-redux/es/utils/Subscription.js
 // encapsulates the subscription logic for connecting a component to the redux store, as
// well as nesting subscriptions of descendant components, so that we can ensure the
// ancestor components re-render before descendants

function createListenerCollection() {
  const batch = getBatch();
  let first = null;
  let last = null;
  return {
    clear() {
      first = null;
      last = null;
    },

    notify() {
      batch(() => {
        let listener = first;

        while (listener) {
          listener.callback();
          listener = listener.next;
        }
      });
    },

    get() {
      let listeners = [];
      let listener = first;

      while (listener) {
        listeners.push(listener);
        listener = listener.next;
      }

      return listeners;
    },

    subscribe(callback) {
      let isSubscribed = true;
      let listener = last = {
        callback,
        next: null,
        prev: last
      };

      if (listener.prev) {
        listener.prev.next = listener;
      } else {
        first = listener;
      }

      return function unsubscribe() {
        if (!isSubscribed || first === null) return;
        isSubscribed = false;

        if (listener.next) {
          listener.next.prev = listener.prev;
        } else {
          last = listener.prev;
        }

        if (listener.prev) {
          listener.prev.next = listener.next;
        } else {
          first = listener.next;
        }
      };
    }

  };
}

const nullListeners = {
  notify() {},

  get: () => []
};
function Subscription_createSubscription(store, parentSub) {
  let unsubscribe;
  let listeners = nullListeners;

  function addNestedSub(listener) {
    trySubscribe();
    return listeners.subscribe(listener);
  }

  function notifyNestedSubs() {
    listeners.notify();
  }

  function handleChangeWrapper() {
    if (subscription.onStateChange) {
      subscription.onStateChange();
    }
  }

  function isSubscribed() {
    return Boolean(unsubscribe);
  }

  function trySubscribe() {
    if (!unsubscribe) {
      unsubscribe = parentSub ? parentSub.addNestedSub(handleChangeWrapper) : store.subscribe(handleChangeWrapper);
      listeners = createListenerCollection();
    }
  }

  function tryUnsubscribe() {
    if (unsubscribe) {
      unsubscribe();
      unsubscribe = undefined;
      listeners.clear();
      listeners = nullListeners;
    }
  }

  const subscription = {
    addNestedSub,
    notifyNestedSubs,
    handleChangeWrapper,
    isSubscribed,
    trySubscribe,
    tryUnsubscribe,
    getListeners: () => listeners
  };
  return subscription;
}
;// CONCATENATED MODULE: ./node_modules/react-redux/es/utils/useIsomorphicLayoutEffect.js
 // React currently throws a warning when using useLayoutEffect on the server.
// To get around it, we can conditionally useEffect on the server (no-op) and
// useLayoutEffect in the browser. We need useLayoutEffect to ensure the store
// subscription callback always has the selector from the latest render commit
// available, otherwise a store update may happen between render and the effect,
// which may cause missed updates; we also must ensure the store subscription
// is created synchronously, otherwise a store update may occur before the
// subscription is created and an inconsistent state may be observed
// Matches logic in React's `shared/ExecutionEnvironment` file

const canUseDOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined');
const useIsomorphicLayoutEffect_useIsomorphicLayoutEffect = canUseDOM ? react.useLayoutEffect : react.useEffect;
;// CONCATENATED MODULE: ./node_modules/react-redux/es/components/connect.js


const _excluded = (/* unused pure expression or super */ null && (["reactReduxForwardedRef"]));

/* eslint-disable valid-jsdoc, @typescript-eslint/no-unused-vars */













let useSyncExternalStore = (/* unused pure expression or super */ null && (notInitialized));
const initializeConnect = fn => {
  useSyncExternalStore = fn;
}; // Define some constant arrays just to avoid re-creating these

const EMPTY_ARRAY = (/* unused pure expression or super */ null && ([null, 0]));
const NO_SUBSCRIPTION_ARRAY = (/* unused pure expression or super */ null && ([null, null])); // Attempts to stringify whatever not-really-a-component value we were given
// for logging in an error message

const stringifyComponent = Comp => {
  try {
    return JSON.stringify(Comp);
  } catch (err) {
    return String(Comp);
  }
};

// This is "just" a `useLayoutEffect`, but with two modifications:
// - we need to fall back to `useEffect` in SSR to avoid annoying warnings
// - we extract this to a separate function to avoid closing over values
//   and causing memory leaks
function useIsomorphicLayoutEffectWithArgs(effectFunc, effectArgs, dependencies) {
  useIsomorphicLayoutEffect(() => effectFunc(...effectArgs), dependencies);
} // Effect callback, extracted: assign the latest props values to refs for later usage


function captureWrapperProps(lastWrapperProps, lastChildProps, renderIsScheduled, wrapperProps, // actualChildProps: unknown,
childPropsFromStoreUpdate, notifyNestedSubs) {
  // We want to capture the wrapper props and child props we used for later comparisons
  lastWrapperProps.current = wrapperProps;
  renderIsScheduled.current = false; // If the render was from a store update, clear out that reference and cascade the subscriber update

  if (childPropsFromStoreUpdate.current) {
    childPropsFromStoreUpdate.current = null;
    notifyNestedSubs();
  }
} // Effect callback, extracted: subscribe to the Redux store or nearest connected ancestor,
// check for updates after dispatched actions, and trigger re-renders.


function subscribeUpdates(shouldHandleStateChanges, store, subscription, childPropsSelector, lastWrapperProps, lastChildProps, renderIsScheduled, isMounted, childPropsFromStoreUpdate, notifyNestedSubs, // forceComponentUpdateDispatch: React.Dispatch<any>,
additionalSubscribeListener) {
  // If we're not subscribed to the store, nothing to do here
  if (!shouldHandleStateChanges) return () => {}; // Capture values for checking if and when this component unmounts

  let didUnsubscribe = false;
  let lastThrownError = null; // We'll run this callback every time a store subscription update propagates to this component

  const checkForUpdates = () => {
    if (didUnsubscribe || !isMounted.current) {
      // Don't run stale listeners.
      // Redux doesn't guarantee unsubscriptions happen until next dispatch.
      return;
    } // TODO We're currently calling getState ourselves here, rather than letting `uSES` do it


    const latestStoreState = store.getState();
    let newChildProps, error;

    try {
      // Actually run the selector with the most recent store state and wrapper props
      // to determine what the child props should be
      newChildProps = childPropsSelector(latestStoreState, lastWrapperProps.current);
    } catch (e) {
      error = e;
      lastThrownError = e;
    }

    if (!error) {
      lastThrownError = null;
    } // If the child props haven't changed, nothing to do here - cascade the subscription update


    if (newChildProps === lastChildProps.current) {
      if (!renderIsScheduled.current) {
        notifyNestedSubs();
      }
    } else {
      // Save references to the new child props.  Note that we track the "child props from store update"
      // as a ref instead of a useState/useReducer because we need a way to determine if that value has
      // been processed.  If this went into useState/useReducer, we couldn't clear out the value without
      // forcing another re-render, which we don't want.
      lastChildProps.current = newChildProps;
      childPropsFromStoreUpdate.current = newChildProps;
      renderIsScheduled.current = true; // TODO This is hacky and not how `uSES` is meant to be used
      // Trigger the React `useSyncExternalStore` subscriber

      additionalSubscribeListener();
    }
  }; // Actually subscribe to the nearest connected ancestor (or store)


  subscription.onStateChange = checkForUpdates;
  subscription.trySubscribe(); // Pull data from the store after first render in case the store has
  // changed since we began.

  checkForUpdates();

  const unsubscribeWrapper = () => {
    didUnsubscribe = true;
    subscription.tryUnsubscribe();
    subscription.onStateChange = null;

    if (lastThrownError) {
      // It's possible that we caught an error due to a bad mapState function, but the
      // parent re-rendered without this component and we're about to unmount.
      // This shouldn't happen as long as we do top-down subscriptions correctly, but
      // if we ever do those wrong, this throw will surface the error in our tests.
      // In that case, throw the error from here so it doesn't get lost.
      throw lastThrownError;
    }
  };

  return unsubscribeWrapper;
} // Reducer initial state creation for our update reducer


const initStateUpdates = () => EMPTY_ARRAY;

function strictEqual(a, b) {
  return a === b;
}
/**
 * Infers the type of props that a connector will inject into a component.
 */


let hasWarnedAboutDeprecatedPureOption = false;
/**
 * Connects a React component to a Redux store.
 *
 * - Without arguments, just wraps the component, without changing the behavior / props
 *
 * - If 2 params are passed (3rd param, mergeProps, is skipped), default behavior
 * is to override ownProps (as stated in the docs), so what remains is everything that's
 * not a state or dispatch prop
 *
 * - When 3rd param is passed, we don't know if ownProps propagate and whether they
 * should be valid component props, because it depends on mergeProps implementation.
 * As such, it is the user's responsibility to extend ownProps interface from state or
 * dispatch props or both when applicable
 *
 * @param mapStateToProps A function that extracts values from state
 * @param mapDispatchToProps Setup for dispatching actions
 * @param mergeProps Optional callback to merge state and dispatch props together
 * @param options Options for configuring the connection
 *
 */

function connect(mapStateToProps, mapDispatchToProps, mergeProps, {
  // The `pure` option has been removed, so TS doesn't like us destructuring this to check its existence.
  // @ts-ignore
  pure,
  areStatesEqual = strictEqual,
  areOwnPropsEqual = shallowEqual,
  areStatePropsEqual = shallowEqual,
  areMergedPropsEqual = shallowEqual,
  // use React's forwardRef to expose a ref of the wrapped component
  forwardRef = false,
  // the context consumer to use
  context = ReactReduxContext
} = {}) {
  if (false) {}

  const Context = context;
  const initMapStateToProps = mapStateToPropsFactory(mapStateToProps);
  const initMapDispatchToProps = mapDispatchToPropsFactory(mapDispatchToProps);
  const initMergeProps = mergePropsFactory(mergeProps);
  const shouldHandleStateChanges = Boolean(mapStateToProps);

  const wrapWithConnect = WrappedComponent => {
    if (false) {}

    const wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || 'Component';
    const displayName = `Connect(${wrappedComponentName})`;
    const selectorFactoryOptions = {
      shouldHandleStateChanges,
      displayName,
      wrappedComponentName,
      WrappedComponent,
      // @ts-ignore
      initMapStateToProps,
      // @ts-ignore
      initMapDispatchToProps,
      initMergeProps,
      areStatesEqual,
      areStatePropsEqual,
      areOwnPropsEqual,
      areMergedPropsEqual
    };

    function ConnectFunction(props) {
      const [propsContext, reactReduxForwardedRef, wrapperProps] = useMemo(() => {
        // Distinguish between actual "data" props that were passed to the wrapper component,
        // and values needed to control behavior (forwarded refs, alternate context instances).
        // To maintain the wrapperProps object reference, memoize this destructuring.
        const {
          reactReduxForwardedRef
        } = props,
              wrapperProps = _objectWithoutPropertiesLoose(props, _excluded);

        return [props.context, reactReduxForwardedRef, wrapperProps];
      }, [props]);
      const ContextToUse = useMemo(() => {
        // Users may optionally pass in a custom context instance to use instead of our ReactReduxContext.
        // Memoize the check that determines which context instance we should use.
        return propsContext && propsContext.Consumer && // @ts-ignore
        isContextConsumer( /*#__PURE__*/React.createElement(propsContext.Consumer, null)) ? propsContext : Context;
      }, [propsContext, Context]); // Retrieve the store and ancestor subscription via context, if available

      const contextValue = useContext(ContextToUse); // The store _must_ exist as either a prop or in context.
      // We'll check to see if it _looks_ like a Redux store first.
      // This allows us to pass through a `store` prop that is just a plain value.

      const didStoreComeFromProps = Boolean(props.store) && Boolean(props.store.getState) && Boolean(props.store.dispatch);
      const didStoreComeFromContext = Boolean(contextValue) && Boolean(contextValue.store);

      if (false) {} // Based on the previous check, one of these must be true


      const store = didStoreComeFromProps ? props.store : contextValue.store;
      const getServerState = didStoreComeFromContext ? contextValue.getServerState : store.getState;
      const childPropsSelector = useMemo(() => {
        // The child props selector needs the store reference as an input.
        // Re-create this selector whenever the store changes.
        return defaultSelectorFactory(store.dispatch, selectorFactoryOptions);
      }, [store]);
      const [subscription, notifyNestedSubs] = useMemo(() => {
        if (!shouldHandleStateChanges) return NO_SUBSCRIPTION_ARRAY; // This Subscription's source should match where store came from: props vs. context. A component
        // connected to the store via props shouldn't use subscription from context, or vice versa.

        const subscription = createSubscription(store, didStoreComeFromProps ? undefined : contextValue.subscription); // `notifyNestedSubs` is duplicated to handle the case where the component is unmounted in
        // the middle of the notification loop, where `subscription` will then be null. This can
        // probably be avoided if Subscription's listeners logic is changed to not call listeners
        // that have been unsubscribed in the  middle of the notification loop.

        const notifyNestedSubs = subscription.notifyNestedSubs.bind(subscription);
        return [subscription, notifyNestedSubs];
      }, [store, didStoreComeFromProps, contextValue]); // Determine what {store, subscription} value should be put into nested context, if necessary,
      // and memoize that value to avoid unnecessary context updates.

      const overriddenContextValue = useMemo(() => {
        if (didStoreComeFromProps) {
          // This component is directly subscribed to a store from props.
          // We don't want descendants reading from this store - pass down whatever
          // the existing context value is from the nearest connected ancestor.
          return contextValue;
        } // Otherwise, put this component's subscription instance into context, so that
        // connected descendants won't update until after this component is done


        return _extends({}, contextValue, {
          subscription
        });
      }, [didStoreComeFromProps, contextValue, subscription]); // Set up refs to coordinate values between the subscription effect and the render logic

      const lastChildProps = useRef();
      const lastWrapperProps = useRef(wrapperProps);
      const childPropsFromStoreUpdate = useRef();
      const renderIsScheduled = useRef(false);
      const isProcessingDispatch = useRef(false);
      const isMounted = useRef(false);
      const latestSubscriptionCallbackError = useRef();
      useIsomorphicLayoutEffect(() => {
        isMounted.current = true;
        return () => {
          isMounted.current = false;
        };
      }, []);
      const actualChildPropsSelector = useMemo(() => {
        const selector = () => {
          // Tricky logic here:
          // - This render may have been triggered by a Redux store update that produced new child props
          // - However, we may have gotten new wrapper props after that
          // If we have new child props, and the same wrapper props, we know we should use the new child props as-is.
          // But, if we have new wrapper props, those might change the child props, so we have to recalculate things.
          // So, we'll use the child props from store update only if the wrapper props are the same as last time.
          if (childPropsFromStoreUpdate.current && wrapperProps === lastWrapperProps.current) {
            return childPropsFromStoreUpdate.current;
          } // TODO We're reading the store directly in render() here. Bad idea?
          // This will likely cause Bad Things (TM) to happen in Concurrent Mode.
          // Note that we do this because on renders _not_ caused by store updates, we need the latest store state
          // to determine what the child props should be.


          return childPropsSelector(store.getState(), wrapperProps);
        };

        return selector;
      }, [store, wrapperProps]); // We need this to execute synchronously every time we re-render. However, React warns
      // about useLayoutEffect in SSR, so we try to detect environment and fall back to
      // just useEffect instead to avoid the warning, since neither will run anyway.

      const subscribeForReact = useMemo(() => {
        const subscribe = reactListener => {
          if (!subscription) {
            return () => {};
          }

          return subscribeUpdates(shouldHandleStateChanges, store, subscription, // @ts-ignore
          childPropsSelector, lastWrapperProps, lastChildProps, renderIsScheduled, isMounted, childPropsFromStoreUpdate, notifyNestedSubs, reactListener);
        };

        return subscribe;
      }, [subscription]);
      useIsomorphicLayoutEffectWithArgs(captureWrapperProps, [lastWrapperProps, lastChildProps, renderIsScheduled, wrapperProps, childPropsFromStoreUpdate, notifyNestedSubs]);
      let actualChildProps;

      try {
        actualChildProps = useSyncExternalStore( // TODO We're passing through a big wrapper that does a bunch of extra side effects besides subscribing
        subscribeForReact, // TODO This is incredibly hacky. We've already processed the store update and calculated new child props,
        // TODO and we're just passing that through so it triggers a re-render for us rather than relying on `uSES`.
        actualChildPropsSelector, getServerState ? () => childPropsSelector(getServerState(), wrapperProps) : actualChildPropsSelector);
      } catch (err) {
        if (latestSubscriptionCallbackError.current) {
          ;
          err.message += `\nThe error may be correlated with this previous error:\n${latestSubscriptionCallbackError.current.stack}\n\n`;
        }

        throw err;
      }

      useIsomorphicLayoutEffect(() => {
        latestSubscriptionCallbackError.current = undefined;
        childPropsFromStoreUpdate.current = undefined;
        lastChildProps.current = actualChildProps;
      }); // Now that all that's done, we can finally try to actually render the child component.
      // We memoize the elements for the rendered child component as an optimization.

      const renderedWrappedComponent = useMemo(() => {
        return (
          /*#__PURE__*/
          // @ts-ignore
          React.createElement(WrappedComponent, _extends({}, actualChildProps, {
            ref: reactReduxForwardedRef
          }))
        );
      }, [reactReduxForwardedRef, WrappedComponent, actualChildProps]); // If React sees the exact same element reference as last time, it bails out of re-rendering
      // that child, same as if it was wrapped in React.memo() or returned false from shouldComponentUpdate.

      const renderedChild = useMemo(() => {
        if (shouldHandleStateChanges) {
          // If this component is subscribed to store updates, we need to pass its own
          // subscription instance down to our descendants. That means rendering the same
          // Context instance, and putting a different value into the context.
          return /*#__PURE__*/React.createElement(ContextToUse.Provider, {
            value: overriddenContextValue
          }, renderedWrappedComponent);
        }

        return renderedWrappedComponent;
      }, [ContextToUse, renderedWrappedComponent, overriddenContextValue]);
      return renderedChild;
    }

    const _Connect = React.memo(ConnectFunction);

    // Add a hacky cast to get the right output type
    const Connect = _Connect;
    Connect.WrappedComponent = WrappedComponent;
    Connect.displayName = ConnectFunction.displayName = displayName;

    if (forwardRef) {
      const _forwarded = React.forwardRef(function forwardConnectRef(props, ref) {
        // @ts-ignore
        return /*#__PURE__*/React.createElement(Connect, _extends({}, props, {
          reactReduxForwardedRef: ref
        }));
      });

      const forwarded = _forwarded;
      forwarded.displayName = displayName;
      forwarded.WrappedComponent = WrappedComponent;
      return hoistStatics(forwarded, WrappedComponent);
    }

    return hoistStatics(Connect, WrappedComponent);
  };

  return wrapWithConnect;
}

/* harmony default export */ var components_connect = ((/* unused pure expression or super */ null && (connect)));
;// CONCATENATED MODULE: ./node_modules/react-redux/es/components/Provider.js





function Provider({
  store,
  context,
  children,
  serverState
}) {
  const contextValue = (0,react.useMemo)(() => {
    const subscription = Subscription_createSubscription(store);
    return {
      store,
      subscription,
      getServerState: serverState ? () => serverState : undefined
    };
  }, [store, serverState]);
  const previousState = (0,react.useMemo)(() => store.getState(), [store]);
  useIsomorphicLayoutEffect_useIsomorphicLayoutEffect(() => {
    const {
      subscription
    } = contextValue;
    subscription.onStateChange = subscription.notifyNestedSubs;
    subscription.trySubscribe();

    if (previousState !== store.getState()) {
      subscription.notifyNestedSubs();
    }

    return () => {
      subscription.tryUnsubscribe();
      subscription.onStateChange = undefined;
    };
  }, [contextValue, previousState]);
  const Context = context || Context_ReactReduxContext; // @ts-ignore 'AnyAction' is assignable to the constraint of type 'A', but 'A' could be instantiated with a different subtype

  return /*#__PURE__*/react.createElement(Context.Provider, {
    value: contextValue
  }, children);
}

/* harmony default export */ var components_Provider = (Provider);
;// CONCATENATED MODULE: ./node_modules/react-redux/es/hooks/useStore.js



/**
 * Hook factory, which creates a `useStore` hook bound to a given context.
 *
 * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.
 * @returns {Function} A `useStore` hook bound to the specified context.
 */

function createStoreHook(context = Context_ReactReduxContext) {
  const useReduxContext = // @ts-ignore
  context === Context_ReactReduxContext ? useReduxContext_useReduxContext : () => (0,react.useContext)(context);
  return function useStore() {
    const {
      store
    } = useReduxContext(); // @ts-ignore

    return store;
  };
}
/**
 * A hook to access the redux store.
 *
 * @returns {any} the redux store
 *
 * @example
 *
 * import React from 'react'
 * import { useStore } from 'react-redux'
 *
 * export const ExampleComponent = () => {
 *   const store = useStore()
 *   return <div>{store.getState()}</div>
 * }
 */

const useStore_useStore = /*#__PURE__*/createStoreHook();
;// CONCATENATED MODULE: ./node_modules/react-redux/es/hooks/useDispatch.js


/**
 * Hook factory, which creates a `useDispatch` hook bound to a given context.
 *
 * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.
 * @returns {Function} A `useDispatch` hook bound to the specified context.
 */

function createDispatchHook(context = Context_ReactReduxContext) {
  const useStore = // @ts-ignore
  context === Context_ReactReduxContext ? useStore_useStore : createStoreHook(context);
  return function useDispatch() {
    const store = useStore(); // @ts-ignore

    return store.dispatch;
  };
}
/**
 * A hook to access the redux `dispatch` function.
 *
 * @returns {any|function} redux store's `dispatch` function
 *
 * @example
 *
 * import React, { useCallback } from 'react'
 * import { useDispatch } from 'react-redux'
 *
 * export const CounterComponent = ({ value }) => {
 *   const dispatch = useDispatch()
 *   const increaseCounter = useCallback(() => dispatch({ type: 'increase-counter' }), [])
 *   return (
 *     <div>
 *       <span>{value}</span>
 *       <button onClick={increaseCounter}>Increase counter</button>
 *     </div>
 *   )
 * }
 */

const useDispatch = /*#__PURE__*/createDispatchHook();
;// CONCATENATED MODULE: ./node_modules/react-redux/es/exports.js









;// CONCATENATED MODULE: ./node_modules/react-redux/es/index.js
// The primary entry point assumes we're working with standard ReactDOM/RN, but
// older versions that do not include `useSyncExternalStore` (React 16.9 - 17.x).
// Because of that, the useSyncExternalStore compat shim is needed.






initializeUseSelector(with_selector.useSyncExternalStoreWithSelector);
initializeConnect(shim.useSyncExternalStore); // Enable batched updates in our subscriptions for use
// with standard React renderers (ReactDOM, React Native)

setBatch(react_dom.unstable_batchedUpdates);



/***/ }),

/***/ 13218:
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var l=Symbol.for("react.element"),n=Symbol.for("react.portal"),p=Symbol.for("react.fragment"),q=Symbol.for("react.strict_mode"),r=Symbol.for("react.profiler"),t=Symbol.for("react.provider"),u=Symbol.for("react.context"),v=Symbol.for("react.forward_ref"),w=Symbol.for("react.suspense"),x=Symbol.for("react.memo"),y=Symbol.for("react.lazy"),z=Symbol.iterator;function A(a){if(null===a||"object"!==typeof a)return null;a=z&&a[z]||a["@@iterator"];return"function"===typeof a?a:null}
var B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};
E.prototype.setState=function(a,b){if("object"!==typeof a&&"function"!==typeof a&&null!=a)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,a,b,"setState")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,"forceUpdate")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;
H.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};
function M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=""+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}
function N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return"object"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={"=":"=0",":":"=2"};return"$"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\/+/g;function Q(a,b){return"object"===typeof a&&null!==a&&null!=a.key?escape(""+a.key):b.toString(36)}
function R(a,b,e,d,c){var k=typeof a;if("undefined"===k||"boolean"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case "string":case "number":h=!0;break;case "object":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=""===d?"."+Q(h,0):d,I(c)?(e="",null!=a&&(e=a.replace(P,"$&/")+"/"),R(c,b,e,"",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?"":(""+c.key).replace(P,"$&/")+"/")+a)),b.push(c)),1;h=0;d=""===d?".":d+":";if(I(a))for(var g=0;g<a.length;g++){k=
a[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),"function"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if("object"===k)throw b=String(a),Error("Objects are not valid as a React child (found: "+("[object Object]"===b?"object with keys {"+Object.keys(a).join(", ")+"}":b)+"). If you meant to render a collection of children, use an array instead.");return h}
function S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,"","",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}
var U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};exports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error("React.Children.only expected to receive a single React element child.");return a}};exports.Component=E;exports.Fragment=p;
exports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;
exports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+a+".");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=""+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);
for(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};
exports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.");};
exports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};exports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};
exports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};exports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};
exports.useTransition=function(){return U.current.useTransition()};exports.version="18.2.0";


/***/ }),

/***/ 89526:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


if (true) {
  module.exports = __webpack_require__(13218);
} else {}


/***/ }),

/***/ 20118:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "md": () => (/* binding */ applyMiddleware),
  "UY": () => (/* binding */ combineReducers),
  "qC": () => (/* binding */ compose),
  "MT": () => (/* binding */ createStore)
});

// UNUSED EXPORTS: __DO_NOT_USE__ActionTypes, bindActionCreators, legacy_createStore

;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/objectSpread2.js


function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {
      _defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }

  return target;
}
;// CONCATENATED MODULE: ./node_modules/redux/es/redux.js


/**
 * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js
 *
 * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes
 * during build.
 * @param {number} code
 */
function formatProdErrorMessage(code) {
  return "Minified Redux error #" + code + "; visit https://redux.js.org/Errors?code=" + code + " for the full message or " + 'use the non-minified dev environment for full errors. ';
}

// Inlined version of the `symbol-observable` polyfill
var $$observable = (function () {
  return typeof Symbol === 'function' && Symbol.observable || '@@observable';
})();

/**
 * These are private action types reserved by Redux.
 * For any unknown actions, you must return the current state.
 * If the current state is undefined, you must return the initial state.
 * Do not reference these action types directly in your code.
 */
var randomString = function randomString() {
  return Math.random().toString(36).substring(7).split('').join('.');
};

var ActionTypes = {
  INIT: "@@redux/INIT" + randomString(),
  REPLACE: "@@redux/REPLACE" + randomString(),
  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {
    return "@@redux/PROBE_UNKNOWN_ACTION" + randomString();
  }
};

/**
 * @param {any} obj The object to inspect.
 * @returns {boolean} True if the argument appears to be a plain object.
 */
function isPlainObject(obj) {
  if (typeof obj !== 'object' || obj === null) return false;
  var proto = obj;

  while (Object.getPrototypeOf(proto) !== null) {
    proto = Object.getPrototypeOf(proto);
  }

  return Object.getPrototypeOf(obj) === proto;
}

// Inlined / shortened version of `kindOf` from https://github.com/jonschlinkert/kind-of
function miniKindOf(val) {
  if (val === void 0) return 'undefined';
  if (val === null) return 'null';
  var type = typeof val;

  switch (type) {
    case 'boolean':
    case 'string':
    case 'number':
    case 'symbol':
    case 'function':
      {
        return type;
      }
  }

  if (Array.isArray(val)) return 'array';
  if (isDate(val)) return 'date';
  if (isError(val)) return 'error';
  var constructorName = ctorName(val);

  switch (constructorName) {
    case 'Symbol':
    case 'Promise':
    case 'WeakMap':
    case 'WeakSet':
    case 'Map':
    case 'Set':
      return constructorName;
  } // other


  return type.slice(8, -1).toLowerCase().replace(/\s/g, '');
}

function ctorName(val) {
  return typeof val.constructor === 'function' ? val.constructor.name : null;
}

function isError(val) {
  return val instanceof Error || typeof val.message === 'string' && val.constructor && typeof val.constructor.stackTraceLimit === 'number';
}

function isDate(val) {
  if (val instanceof Date) return true;
  return typeof val.toDateString === 'function' && typeof val.getDate === 'function' && typeof val.setDate === 'function';
}

function kindOf(val) {
  var typeOfVal = typeof val;

  if (false) {}

  return typeOfVal;
}

/**
 * @deprecated
 *
 * **We recommend using the `configureStore` method
 * of the `@reduxjs/toolkit` package**, which replaces `createStore`.
 *
 * Redux Toolkit is our recommended approach for writing Redux logic today,
 * including store setup, reducers, data fetching, and more.
 *
 * **For more details, please read this Redux docs page:**
 * **https://redux.js.org/introduction/why-rtk-is-redux-today**
 *
 * `configureStore` from Redux Toolkit is an improved version of `createStore` that
 * simplifies setup and helps avoid common bugs.
 *
 * You should not be using the `redux` core package by itself today, except for learning purposes.
 * The `createStore` method from the core `redux` package will not be removed, but we encourage
 * all users to migrate to using Redux Toolkit for all Redux code.
 *
 * If you want to use `createStore` without this visual deprecation warning, use
 * the `legacy_createStore` import instead:
 *
 * `import { legacy_createStore as createStore} from 'redux'`
 *
 */

function createStore(reducer, preloadedState, enhancer) {
  var _ref2;

  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {
    throw new Error( true ? formatProdErrorMessage(0) : 0);
  }

  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {
    enhancer = preloadedState;
    preloadedState = undefined;
  }

  if (typeof enhancer !== 'undefined') {
    if (typeof enhancer !== 'function') {
      throw new Error( true ? formatProdErrorMessage(1) : 0);
    }

    return enhancer(createStore)(reducer, preloadedState);
  }

  if (typeof reducer !== 'function') {
    throw new Error( true ? formatProdErrorMessage(2) : 0);
  }

  var currentReducer = reducer;
  var currentState = preloadedState;
  var currentListeners = [];
  var nextListeners = currentListeners;
  var isDispatching = false;
  /**
   * This makes a shallow copy of currentListeners so we can use
   * nextListeners as a temporary list while dispatching.
   *
   * This prevents any bugs around consumers calling
   * subscribe/unsubscribe in the middle of a dispatch.
   */

  function ensureCanMutateNextListeners() {
    if (nextListeners === currentListeners) {
      nextListeners = currentListeners.slice();
    }
  }
  /**
   * Reads the state tree managed by the store.
   *
   * @returns {any} The current state tree of your application.
   */


  function getState() {
    if (isDispatching) {
      throw new Error( true ? formatProdErrorMessage(3) : 0);
    }

    return currentState;
  }
  /**
   * Adds a change listener. It will be called any time an action is dispatched,
   * and some part of the state tree may potentially have changed. You may then
   * call `getState()` to read the current state tree inside the callback.
   *
   * You may call `dispatch()` from a change listener, with the following
   * caveats:
   *
   * 1. The subscriptions are snapshotted just before every `dispatch()` call.
   * If you subscribe or unsubscribe while the listeners are being invoked, this
   * will not have any effect on the `dispatch()` that is currently in progress.
   * However, the next `dispatch()` call, whether nested or not, will use a more
   * recent snapshot of the subscription list.
   *
   * 2. The listener should not expect to see all state changes, as the state
   * might have been updated multiple times during a nested `dispatch()` before
   * the listener is called. It is, however, guaranteed that all subscribers
   * registered before the `dispatch()` started will be called with the latest
   * state by the time it exits.
   *
   * @param {Function} listener A callback to be invoked on every dispatch.
   * @returns {Function} A function to remove this change listener.
   */


  function subscribe(listener) {
    if (typeof listener !== 'function') {
      throw new Error( true ? formatProdErrorMessage(4) : 0);
    }

    if (isDispatching) {
      throw new Error( true ? formatProdErrorMessage(5) : 0);
    }

    var isSubscribed = true;
    ensureCanMutateNextListeners();
    nextListeners.push(listener);
    return function unsubscribe() {
      if (!isSubscribed) {
        return;
      }

      if (isDispatching) {
        throw new Error( true ? formatProdErrorMessage(6) : 0);
      }

      isSubscribed = false;
      ensureCanMutateNextListeners();
      var index = nextListeners.indexOf(listener);
      nextListeners.splice(index, 1);
      currentListeners = null;
    };
  }
  /**
   * Dispatches an action. It is the only way to trigger a state change.
   *
   * The `reducer` function, used to create the store, will be called with the
   * current state tree and the given `action`. Its return value will
   * be considered the **next** state of the tree, and the change listeners
   * will be notified.
   *
   * The base implementation only supports plain object actions. If you want to
   * dispatch a Promise, an Observable, a thunk, or something else, you need to
   * wrap your store creating function into the corresponding middleware. For
   * example, see the documentation for the `redux-thunk` package. Even the
   * middleware will eventually dispatch plain object actions using this method.
   *
   * @param {Object} action A plain object representing “what changed”. It is
   * a good idea to keep actions serializable so you can record and replay user
   * sessions, or use the time travelling `redux-devtools`. An action must have
   * a `type` property which may not be `undefined`. It is a good idea to use
   * string constants for action types.
   *
   * @returns {Object} For convenience, the same action object you dispatched.
   *
   * Note that, if you use a custom middleware, it may wrap `dispatch()` to
   * return something else (for example, a Promise you can await).
   */


  function dispatch(action) {
    if (!isPlainObject(action)) {
      throw new Error( true ? formatProdErrorMessage(7) : 0);
    }

    if (typeof action.type === 'undefined') {
      throw new Error( true ? formatProdErrorMessage(8) : 0);
    }

    if (isDispatching) {
      throw new Error( true ? formatProdErrorMessage(9) : 0);
    }

    try {
      isDispatching = true;
      currentState = currentReducer(currentState, action);
    } finally {
      isDispatching = false;
    }

    var listeners = currentListeners = nextListeners;

    for (var i = 0; i < listeners.length; i++) {
      var listener = listeners[i];
      listener();
    }

    return action;
  }
  /**
   * Replaces the reducer currently used by the store to calculate the state.
   *
   * You might need this if your app implements code splitting and you want to
   * load some of the reducers dynamically. You might also need this if you
   * implement a hot reloading mechanism for Redux.
   *
   * @param {Function} nextReducer The reducer for the store to use instead.
   * @returns {void}
   */


  function replaceReducer(nextReducer) {
    if (typeof nextReducer !== 'function') {
      throw new Error( true ? formatProdErrorMessage(10) : 0);
    }

    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.
    // Any reducers that existed in both the new and old rootReducer
    // will receive the previous state. This effectively populates
    // the new state tree with any relevant data from the old one.

    dispatch({
      type: ActionTypes.REPLACE
    });
  }
  /**
   * Interoperability point for observable/reactive libraries.
   * @returns {observable} A minimal observable of state changes.
   * For more information, see the observable proposal:
   * https://github.com/tc39/proposal-observable
   */


  function observable() {
    var _ref;

    var outerSubscribe = subscribe;
    return _ref = {
      /**
       * The minimal observable subscription method.
       * @param {Object} observer Any object that can be used as an observer.
       * The observer object should have a `next` method.
       * @returns {subscription} An object with an `unsubscribe` method that can
       * be used to unsubscribe the observable from the store, and prevent further
       * emission of values from the observable.
       */
      subscribe: function subscribe(observer) {
        if (typeof observer !== 'object' || observer === null) {
          throw new Error( true ? formatProdErrorMessage(11) : 0);
        }

        function observeState() {
          if (observer.next) {
            observer.next(getState());
          }
        }

        observeState();
        var unsubscribe = outerSubscribe(observeState);
        return {
          unsubscribe: unsubscribe
        };
      }
    }, _ref[$$observable] = function () {
      return this;
    }, _ref;
  } // When a store is created, an "INIT" action is dispatched so that every
  // reducer returns their initial state. This effectively populates
  // the initial state tree.


  dispatch({
    type: ActionTypes.INIT
  });
  return _ref2 = {
    dispatch: dispatch,
    subscribe: subscribe,
    getState: getState,
    replaceReducer: replaceReducer
  }, _ref2[$$observable] = observable, _ref2;
}
/**
 * Creates a Redux store that holds the state tree.
 *
 * **We recommend using `configureStore` from the
 * `@reduxjs/toolkit` package**, which replaces `createStore`:
 * **https://redux.js.org/introduction/why-rtk-is-redux-today**
 *
 * The only way to change the data in the store is to call `dispatch()` on it.
 *
 * There should only be a single store in your app. To specify how different
 * parts of the state tree respond to actions, you may combine several reducers
 * into a single reducer function by using `combineReducers`.
 *
 * @param {Function} reducer A function that returns the next state tree, given
 * the current state tree and the action to handle.
 *
 * @param {any} [preloadedState] The initial state. You may optionally specify it
 * to hydrate the state from the server in universal apps, or to restore a
 * previously serialized user session.
 * If you use `combineReducers` to produce the root reducer function, this must be
 * an object with the same shape as `combineReducers` keys.
 *
 * @param {Function} [enhancer] The store enhancer. You may optionally specify it
 * to enhance the store with third-party capabilities such as middleware,
 * time travel, persistence, etc. The only store enhancer that ships with Redux
 * is `applyMiddleware()`.
 *
 * @returns {Store} A Redux store that lets you read the state, dispatch actions
 * and subscribe to changes.
 */

var legacy_createStore = (/* unused pure expression or super */ null && (createStore));

/**
 * Prints a warning in the console if it exists.
 *
 * @param {String} message The warning message.
 * @returns {void}
 */
function warning(message) {
  /* eslint-disable no-console */
  if (typeof console !== 'undefined' && typeof console.error === 'function') {
    console.error(message);
  }
  /* eslint-enable no-console */


  try {
    // This error was thrown as a convenience so that if you enable
    // "break on all exceptions" in your console,
    // it would pause the execution at this line.
    throw new Error(message);
  } catch (e) {} // eslint-disable-line no-empty

}

function getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {
  var reducerKeys = Object.keys(reducers);
  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';

  if (reducerKeys.length === 0) {
    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';
  }

  if (!isPlainObject(inputState)) {
    return "The " + argumentName + " has unexpected type of \"" + kindOf(inputState) + "\". Expected argument to be an object with the following " + ("keys: \"" + reducerKeys.join('", "') + "\"");
  }

  var unexpectedKeys = Object.keys(inputState).filter(function (key) {
    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];
  });
  unexpectedKeys.forEach(function (key) {
    unexpectedKeyCache[key] = true;
  });
  if (action && action.type === ActionTypes.REPLACE) return;

  if (unexpectedKeys.length > 0) {
    return "Unexpected " + (unexpectedKeys.length > 1 ? 'keys' : 'key') + " " + ("\"" + unexpectedKeys.join('", "') + "\" found in " + argumentName + ". ") + "Expected to find one of the known reducer keys instead: " + ("\"" + reducerKeys.join('", "') + "\". Unexpected keys will be ignored.");
  }
}

function assertReducerShape(reducers) {
  Object.keys(reducers).forEach(function (key) {
    var reducer = reducers[key];
    var initialState = reducer(undefined, {
      type: ActionTypes.INIT
    });

    if (typeof initialState === 'undefined') {
      throw new Error( true ? formatProdErrorMessage(12) : 0);
    }

    if (typeof reducer(undefined, {
      type: ActionTypes.PROBE_UNKNOWN_ACTION()
    }) === 'undefined') {
      throw new Error( true ? formatProdErrorMessage(13) : 0);
    }
  });
}
/**
 * Turns an object whose values are different reducer functions, into a single
 * reducer function. It will call every child reducer, and gather their results
 * into a single state object, whose keys correspond to the keys of the passed
 * reducer functions.
 *
 * @param {Object} reducers An object whose values correspond to different
 * reducer functions that need to be combined into one. One handy way to obtain
 * it is to use ES6 `import * as reducers` syntax. The reducers may never return
 * undefined for any action. Instead, they should return their initial state
 * if the state passed to them was undefined, and the current state for any
 * unrecognized action.
 *
 * @returns {Function} A reducer function that invokes every reducer inside the
 * passed object, and builds a state object with the same shape.
 */


function combineReducers(reducers) {
  var reducerKeys = Object.keys(reducers);
  var finalReducers = {};

  for (var i = 0; i < reducerKeys.length; i++) {
    var key = reducerKeys[i];

    if (false) {}

    if (typeof reducers[key] === 'function') {
      finalReducers[key] = reducers[key];
    }
  }

  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same
  // keys multiple times.

  var unexpectedKeyCache;

  if (false) {}

  var shapeAssertionError;

  try {
    assertReducerShape(finalReducers);
  } catch (e) {
    shapeAssertionError = e;
  }

  return function combination(state, action) {
    if (state === void 0) {
      state = {};
    }

    if (shapeAssertionError) {
      throw shapeAssertionError;
    }

    if (false) { var warningMessage; }

    var hasChanged = false;
    var nextState = {};

    for (var _i = 0; _i < finalReducerKeys.length; _i++) {
      var _key = finalReducerKeys[_i];
      var reducer = finalReducers[_key];
      var previousStateForKey = state[_key];
      var nextStateForKey = reducer(previousStateForKey, action);

      if (typeof nextStateForKey === 'undefined') {
        var actionType = action && action.type;
        throw new Error( true ? formatProdErrorMessage(14) : 0);
      }

      nextState[_key] = nextStateForKey;
      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;
    }

    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;
    return hasChanged ? nextState : state;
  };
}

function bindActionCreator(actionCreator, dispatch) {
  return function () {
    return dispatch(actionCreator.apply(this, arguments));
  };
}
/**
 * Turns an object whose values are action creators, into an object with the
 * same keys, but with every function wrapped into a `dispatch` call so they
 * may be invoked directly. This is just a convenience method, as you can call
 * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.
 *
 * For convenience, you can also pass an action creator as the first argument,
 * and get a dispatch wrapped function in return.
 *
 * @param {Function|Object} actionCreators An object whose values are action
 * creator functions. One handy way to obtain it is to use ES6 `import * as`
 * syntax. You may also pass a single function.
 *
 * @param {Function} dispatch The `dispatch` function available on your Redux
 * store.
 *
 * @returns {Function|Object} The object mimicking the original object, but with
 * every action creator wrapped into the `dispatch` call. If you passed a
 * function as `actionCreators`, the return value will also be a single
 * function.
 */


function bindActionCreators(actionCreators, dispatch) {
  if (typeof actionCreators === 'function') {
    return bindActionCreator(actionCreators, dispatch);
  }

  if (typeof actionCreators !== 'object' || actionCreators === null) {
    throw new Error( true ? formatProdErrorMessage(16) : 0);
  }

  var boundActionCreators = {};

  for (var key in actionCreators) {
    var actionCreator = actionCreators[key];

    if (typeof actionCreator === 'function') {
      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);
    }
  }

  return boundActionCreators;
}

/**
 * Composes single-argument functions from right to left. The rightmost
 * function can take multiple arguments as it provides the signature for
 * the resulting composite function.
 *
 * @param {...Function} funcs The functions to compose.
 * @returns {Function} A function obtained by composing the argument functions
 * from right to left. For example, compose(f, g, h) is identical to doing
 * (...args) => f(g(h(...args))).
 */
function compose() {
  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {
    funcs[_key] = arguments[_key];
  }

  if (funcs.length === 0) {
    return function (arg) {
      return arg;
    };
  }

  if (funcs.length === 1) {
    return funcs[0];
  }

  return funcs.reduce(function (a, b) {
    return function () {
      return a(b.apply(void 0, arguments));
    };
  });
}

/**
 * Creates a store enhancer that applies middleware to the dispatch method
 * of the Redux store. This is handy for a variety of tasks, such as expressing
 * asynchronous actions in a concise manner, or logging every action payload.
 *
 * See `redux-thunk` package as an example of the Redux middleware.
 *
 * Because middleware is potentially asynchronous, this should be the first
 * store enhancer in the composition chain.
 *
 * Note that each middleware will be given the `dispatch` and `getState` functions
 * as named arguments.
 *
 * @param {...Function} middlewares The middleware chain to be applied.
 * @returns {Function} A store enhancer applying the middleware.
 */

function applyMiddleware() {
  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {
    middlewares[_key] = arguments[_key];
  }

  return function (createStore) {
    return function () {
      var store = createStore.apply(void 0, arguments);

      var _dispatch = function dispatch() {
        throw new Error( true ? formatProdErrorMessage(15) : 0);
      };

      var middlewareAPI = {
        getState: store.getState,
        dispatch: function dispatch() {
          return _dispatch.apply(void 0, arguments);
        }
      };
      var chain = middlewares.map(function (middleware) {
        return middleware(middlewareAPI);
      });
      _dispatch = compose.apply(void 0, chain)(store.dispatch);
      return _objectSpread2(_objectSpread2({}, store), {}, {
        dispatch: _dispatch
      });
    };
  };
}




/***/ }),

/***/ 21714:
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

/*! *****************************************************************************
Copyright (C) Microsoft. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
var Reflect;
(function (Reflect) {
    // Metadata Proposal
    // https://rbuckton.github.io/reflect-metadata/
    (function (factory) {
        var root = typeof __webpack_require__.g === "object" ? __webpack_require__.g :
            typeof self === "object" ? self :
                typeof this === "object" ? this :
                    Function("return this;")();
        var exporter = makeExporter(Reflect);
        if (typeof root.Reflect === "undefined") {
            root.Reflect = Reflect;
        }
        else {
            exporter = makeExporter(root.Reflect, exporter);
        }
        factory(exporter);
        function makeExporter(target, previous) {
            return function (key, value) {
                if (typeof target[key] !== "function") {
                    Object.defineProperty(target, key, { configurable: true, writable: true, value: value });
                }
                if (previous)
                    previous(key, value);
            };
        }
    })(function (exporter) {
        var hasOwn = Object.prototype.hasOwnProperty;
        // feature test for Symbol support
        var supportsSymbol = typeof Symbol === "function";
        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== "undefined" ? Symbol.toPrimitive : "@@toPrimitive";
        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== "undefined" ? Symbol.iterator : "@@iterator";
        var supportsCreate = typeof Object.create === "function"; // feature test for Object.create support
        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support
        var downLevel = !supportsCreate && !supportsProto;
        var HashMap = {
            // create an object in dictionary mode (a.k.a. "slow" mode in v8)
            create: supportsCreate
                ? function () { return MakeDictionary(Object.create(null)); }
                : supportsProto
                    ? function () { return MakeDictionary({ __proto__: null }); }
                    : function () { return MakeDictionary({}); },
            has: downLevel
                ? function (map, key) { return hasOwn.call(map, key); }
                : function (map, key) { return key in map; },
            get: downLevel
                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }
                : function (map, key) { return map[key]; },
        };
        // Load global or shim versions of Map, Set, and WeakMap
        var functionPrototype = Object.getPrototypeOf(Function);
        var usePolyfill = typeof process === "object" && process.env && process.env["REFLECT_METADATA_USE_MAP_POLYFILL"] === "true";
        var _Map = !usePolyfill && typeof Map === "function" && typeof Map.prototype.entries === "function" ? Map : CreateMapPolyfill();
        var _Set = !usePolyfill && typeof Set === "function" && typeof Set.prototype.entries === "function" ? Set : CreateSetPolyfill();
        var _WeakMap = !usePolyfill && typeof WeakMap === "function" ? WeakMap : CreateWeakMapPolyfill();
        // [[Metadata]] internal slot
        // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots
        var Metadata = new _WeakMap();
        /**
         * Applies a set of decorators to a property of a target object.
         * @param decorators An array of decorators.
         * @param target The target object.
         * @param propertyKey (Optional) The property key to decorate.
         * @param attributes (Optional) The property descriptor for the target key.
         * @remarks Decorators are applied in reverse order.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     Example = Reflect.decorate(decoratorsArray, Example);
         *
         *     // property (on constructor)
         *     Reflect.decorate(decoratorsArray, Example, "staticProperty");
         *
         *     // property (on prototype)
         *     Reflect.decorate(decoratorsArray, Example.prototype, "property");
         *
         *     // method (on constructor)
         *     Object.defineProperty(Example, "staticMethod",
         *         Reflect.decorate(decoratorsArray, Example, "staticMethod",
         *             Object.getOwnPropertyDescriptor(Example, "staticMethod")));
         *
         *     // method (on prototype)
         *     Object.defineProperty(Example.prototype, "method",
         *         Reflect.decorate(decoratorsArray, Example.prototype, "method",
         *             Object.getOwnPropertyDescriptor(Example.prototype, "method")));
         *
         */
        function decorate(decorators, target, propertyKey, attributes) {
            if (!IsUndefined(propertyKey)) {
                if (!IsArray(decorators))
                    throw new TypeError();
                if (!IsObject(target))
                    throw new TypeError();
                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))
                    throw new TypeError();
                if (IsNull(attributes))
                    attributes = undefined;
                propertyKey = ToPropertyKey(propertyKey);
                return DecorateProperty(decorators, target, propertyKey, attributes);
            }
            else {
                if (!IsArray(decorators))
                    throw new TypeError();
                if (!IsConstructor(target))
                    throw new TypeError();
                return DecorateConstructor(decorators, target);
            }
        }
        exporter("decorate", decorate);
        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)
        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata
        /**
         * A default metadata decorator factory that can be used on a class, class member, or parameter.
         * @param metadataKey The key for the metadata entry.
         * @param metadataValue The value for the metadata entry.
         * @returns A decorator function.
         * @remarks
         * If `metadataKey` is already defined for the target and target key, the
         * metadataValue for that key will be overwritten.
         * @example
         *
         *     // constructor
         *     @Reflect.metadata(key, value)
         *     class Example {
         *     }
         *
         *     // property (on constructor, TypeScript only)
         *     class Example {
         *         @Reflect.metadata(key, value)
         *         static staticProperty;
         *     }
         *
         *     // property (on prototype, TypeScript only)
         *     class Example {
         *         @Reflect.metadata(key, value)
         *         property;
         *     }
         *
         *     // method (on constructor)
         *     class Example {
         *         @Reflect.metadata(key, value)
         *         static staticMethod() { }
         *     }
         *
         *     // method (on prototype)
         *     class Example {
         *         @Reflect.metadata(key, value)
         *         method() { }
         *     }
         *
         */
        function metadata(metadataKey, metadataValue) {
            function decorator(target, propertyKey) {
                if (!IsObject(target))
                    throw new TypeError();
                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))
                    throw new TypeError();
                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);
            }
            return decorator;
        }
        exporter("metadata", metadata);
        /**
         * Define a unique metadata entry on the target.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param metadataValue A value that contains attached metadata.
         * @param target The target object on which to define metadata.
         * @param propertyKey (Optional) The property key for the target.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     Reflect.defineMetadata("custom:annotation", options, Example);
         *
         *     // property (on constructor)
         *     Reflect.defineMetadata("custom:annotation", options, Example, "staticProperty");
         *
         *     // property (on prototype)
         *     Reflect.defineMetadata("custom:annotation", options, Example.prototype, "property");
         *
         *     // method (on constructor)
         *     Reflect.defineMetadata("custom:annotation", options, Example, "staticMethod");
         *
         *     // method (on prototype)
         *     Reflect.defineMetadata("custom:annotation", options, Example.prototype, "method");
         *
         *     // decorator factory as metadata-producing annotation.
         *     function MyAnnotation(options): Decorator {
         *         return (target, key?) => Reflect.defineMetadata("custom:annotation", options, target, key);
         *     }
         *
         */
        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);
        }
        exporter("defineMetadata", defineMetadata);
        /**
         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.hasMetadata("custom:annotation", Example);
         *
         *     // property (on constructor)
         *     result = Reflect.hasMetadata("custom:annotation", Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.hasMetadata("custom:annotation", Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.hasMetadata("custom:annotation", Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.hasMetadata("custom:annotation", Example.prototype, "method");
         *
         */
        function hasMetadata(metadataKey, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryHasMetadata(metadataKey, target, propertyKey);
        }
        exporter("hasMetadata", hasMetadata);
        /**
         * Gets a value indicating whether the target object has the provided metadata key defined.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.hasOwnMetadata("custom:annotation", Example);
         *
         *     // property (on constructor)
         *     result = Reflect.hasOwnMetadata("custom:annotation", Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.hasOwnMetadata("custom:annotation", Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.hasOwnMetadata("custom:annotation", Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.hasOwnMetadata("custom:annotation", Example.prototype, "method");
         *
         */
        function hasOwnMetadata(metadataKey, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);
        }
        exporter("hasOwnMetadata", hasOwnMetadata);
        /**
         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.getMetadata("custom:annotation", Example);
         *
         *     // property (on constructor)
         *     result = Reflect.getMetadata("custom:annotation", Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.getMetadata("custom:annotation", Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.getMetadata("custom:annotation", Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.getMetadata("custom:annotation", Example.prototype, "method");
         *
         */
        function getMetadata(metadataKey, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryGetMetadata(metadataKey, target, propertyKey);
        }
        exporter("getMetadata", getMetadata);
        /**
         * Gets the metadata value for the provided metadata key on the target object.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.getOwnMetadata("custom:annotation", Example);
         *
         *     // property (on constructor)
         *     result = Reflect.getOwnMetadata("custom:annotation", Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.getOwnMetadata("custom:annotation", Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.getOwnMetadata("custom:annotation", Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.getOwnMetadata("custom:annotation", Example.prototype, "method");
         *
         */
        function getOwnMetadata(metadataKey, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);
        }
        exporter("getOwnMetadata", getOwnMetadata);
        /**
         * Gets the metadata keys defined on the target object or its prototype chain.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns An array of unique metadata keys.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.getMetadataKeys(Example);
         *
         *     // property (on constructor)
         *     result = Reflect.getMetadataKeys(Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.getMetadataKeys(Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.getMetadataKeys(Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.getMetadataKeys(Example.prototype, "method");
         *
         */
        function getMetadataKeys(target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryMetadataKeys(target, propertyKey);
        }
        exporter("getMetadataKeys", getMetadataKeys);
        /**
         * Gets the unique metadata keys defined on the target object.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns An array of unique metadata keys.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.getOwnMetadataKeys(Example);
         *
         *     // property (on constructor)
         *     result = Reflect.getOwnMetadataKeys(Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.getOwnMetadataKeys(Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.getOwnMetadataKeys(Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.getOwnMetadataKeys(Example.prototype, "method");
         *
         */
        function getOwnMetadataKeys(target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryOwnMetadataKeys(target, propertyKey);
        }
        exporter("getOwnMetadataKeys", getOwnMetadataKeys);
        /**
         * Deletes the metadata entry from the target object with the provided key.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns `true` if the metadata entry was found and deleted; otherwise, false.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.deleteMetadata("custom:annotation", Example);
         *
         *     // property (on constructor)
         *     result = Reflect.deleteMetadata("custom:annotation", Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.deleteMetadata("custom:annotation", Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.deleteMetadata("custom:annotation", Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.deleteMetadata("custom:annotation", Example.prototype, "method");
         *
         */
        function deleteMetadata(metadataKey, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);
            if (IsUndefined(metadataMap))
                return false;
            if (!metadataMap.delete(metadataKey))
                return false;
            if (metadataMap.size > 0)
                return true;
            var targetMetadata = Metadata.get(target);
            targetMetadata.delete(propertyKey);
            if (targetMetadata.size > 0)
                return true;
            Metadata.delete(target);
            return true;
        }
        exporter("deleteMetadata", deleteMetadata);
        function DecorateConstructor(decorators, target) {
            for (var i = decorators.length - 1; i >= 0; --i) {
                var decorator = decorators[i];
                var decorated = decorator(target);
                if (!IsUndefined(decorated) && !IsNull(decorated)) {
                    if (!IsConstructor(decorated))
                        throw new TypeError();
                    target = decorated;
                }
            }
            return target;
        }
        function DecorateProperty(decorators, target, propertyKey, descriptor) {
            for (var i = decorators.length - 1; i >= 0; --i) {
                var decorator = decorators[i];
                var decorated = decorator(target, propertyKey, descriptor);
                if (!IsUndefined(decorated) && !IsNull(decorated)) {
                    if (!IsObject(decorated))
                        throw new TypeError();
                    descriptor = decorated;
                }
            }
            return descriptor;
        }
        function GetOrCreateMetadataMap(O, P, Create) {
            var targetMetadata = Metadata.get(O);
            if (IsUndefined(targetMetadata)) {
                if (!Create)
                    return undefined;
                targetMetadata = new _Map();
                Metadata.set(O, targetMetadata);
            }
            var metadataMap = targetMetadata.get(P);
            if (IsUndefined(metadataMap)) {
                if (!Create)
                    return undefined;
                metadataMap = new _Map();
                targetMetadata.set(P, metadataMap);
            }
            return metadataMap;
        }
        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata
        function OrdinaryHasMetadata(MetadataKey, O, P) {
            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);
            if (hasOwn)
                return true;
            var parent = OrdinaryGetPrototypeOf(O);
            if (!IsNull(parent))
                return OrdinaryHasMetadata(MetadataKey, parent, P);
            return false;
        }
        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata
        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {
            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);
            if (IsUndefined(metadataMap))
                return false;
            return ToBoolean(metadataMap.has(MetadataKey));
        }
        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata
        function OrdinaryGetMetadata(MetadataKey, O, P) {
            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);
            if (hasOwn)
                return OrdinaryGetOwnMetadata(MetadataKey, O, P);
            var parent = OrdinaryGetPrototypeOf(O);
            if (!IsNull(parent))
                return OrdinaryGetMetadata(MetadataKey, parent, P);
            return undefined;
        }
        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata
        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {
            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);
            if (IsUndefined(metadataMap))
                return undefined;
            return metadataMap.get(MetadataKey);
        }
        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata
        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {
            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);
            metadataMap.set(MetadataKey, MetadataValue);
        }
        // 3.1.6.1 OrdinaryMetadataKeys(O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys
        function OrdinaryMetadataKeys(O, P) {
            var ownKeys = OrdinaryOwnMetadataKeys(O, P);
            var parent = OrdinaryGetPrototypeOf(O);
            if (parent === null)
                return ownKeys;
            var parentKeys = OrdinaryMetadataKeys(parent, P);
            if (parentKeys.length <= 0)
                return ownKeys;
            if (ownKeys.length <= 0)
                return parentKeys;
            var set = new _Set();
            var keys = [];
            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {
                var key = ownKeys_1[_i];
                var hasKey = set.has(key);
                if (!hasKey) {
                    set.add(key);
                    keys.push(key);
                }
            }
            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {
                var key = parentKeys_1[_a];
                var hasKey = set.has(key);
                if (!hasKey) {
                    set.add(key);
                    keys.push(key);
                }
            }
            return keys;
        }
        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys
        function OrdinaryOwnMetadataKeys(O, P) {
            var keys = [];
            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);
            if (IsUndefined(metadataMap))
                return keys;
            var keysObj = metadataMap.keys();
            var iterator = GetIterator(keysObj);
            var k = 0;
            while (true) {
                var next = IteratorStep(iterator);
                if (!next) {
                    keys.length = k;
                    return keys;
                }
                var nextValue = IteratorValue(next);
                try {
                    keys[k] = nextValue;
                }
                catch (e) {
                    try {
                        IteratorClose(iterator);
                    }
                    finally {
                        throw e;
                    }
                }
                k++;
            }
        }
        // 6 ECMAScript Data Typ0es and Values
        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values
        function Type(x) {
            if (x === null)
                return 1 /* Null */;
            switch (typeof x) {
                case "undefined": return 0 /* Undefined */;
                case "boolean": return 2 /* Boolean */;
                case "string": return 3 /* String */;
                case "symbol": return 4 /* Symbol */;
                case "number": return 5 /* Number */;
                case "object": return x === null ? 1 /* Null */ : 6 /* Object */;
                default: return 6 /* Object */;
            }
        }
        // 6.1.1 The Undefined Type
        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type
        function IsUndefined(x) {
            return x === undefined;
        }
        // 6.1.2 The Null Type
        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type
        function IsNull(x) {
            return x === null;
        }
        // 6.1.5 The Symbol Type
        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type
        function IsSymbol(x) {
            return typeof x === "symbol";
        }
        // 6.1.7 The Object Type
        // https://tc39.github.io/ecma262/#sec-object-type
        function IsObject(x) {
            return typeof x === "object" ? x !== null : typeof x === "function";
        }
        // 7.1 Type Conversion
        // https://tc39.github.io/ecma262/#sec-type-conversion
        // 7.1.1 ToPrimitive(input [, PreferredType])
        // https://tc39.github.io/ecma262/#sec-toprimitive
        function ToPrimitive(input, PreferredType) {
            switch (Type(input)) {
                case 0 /* Undefined */: return input;
                case 1 /* Null */: return input;
                case 2 /* Boolean */: return input;
                case 3 /* String */: return input;
                case 4 /* Symbol */: return input;
                case 5 /* Number */: return input;
            }
            var hint = PreferredType === 3 /* String */ ? "string" : PreferredType === 5 /* Number */ ? "number" : "default";
            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);
            if (exoticToPrim !== undefined) {
                var result = exoticToPrim.call(input, hint);
                if (IsObject(result))
                    throw new TypeError();
                return result;
            }
            return OrdinaryToPrimitive(input, hint === "default" ? "number" : hint);
        }
        // 7.1.1.1 OrdinaryToPrimitive(O, hint)
        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive
        function OrdinaryToPrimitive(O, hint) {
            if (hint === "string") {
                var toString_1 = O.toString;
                if (IsCallable(toString_1)) {
                    var result = toString_1.call(O);
                    if (!IsObject(result))
                        return result;
                }
                var valueOf = O.valueOf;
                if (IsCallable(valueOf)) {
                    var result = valueOf.call(O);
                    if (!IsObject(result))
                        return result;
                }
            }
            else {
                var valueOf = O.valueOf;
                if (IsCallable(valueOf)) {
                    var result = valueOf.call(O);
                    if (!IsObject(result))
                        return result;
                }
                var toString_2 = O.toString;
                if (IsCallable(toString_2)) {
                    var result = toString_2.call(O);
                    if (!IsObject(result))
                        return result;
                }
            }
            throw new TypeError();
        }
        // 7.1.2 ToBoolean(argument)
        // https://tc39.github.io/ecma262/2016/#sec-toboolean
        function ToBoolean(argument) {
            return !!argument;
        }
        // 7.1.12 ToString(argument)
        // https://tc39.github.io/ecma262/#sec-tostring
        function ToString(argument) {
            return "" + argument;
        }
        // 7.1.14 ToPropertyKey(argument)
        // https://tc39.github.io/ecma262/#sec-topropertykey
        function ToPropertyKey(argument) {
            var key = ToPrimitive(argument, 3 /* String */);
            if (IsSymbol(key))
                return key;
            return ToString(key);
        }
        // 7.2 Testing and Comparison Operations
        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations
        // 7.2.2 IsArray(argument)
        // https://tc39.github.io/ecma262/#sec-isarray
        function IsArray(argument) {
            return Array.isArray
                ? Array.isArray(argument)
                : argument instanceof Object
                    ? argument instanceof Array
                    : Object.prototype.toString.call(argument) === "[object Array]";
        }
        // 7.2.3 IsCallable(argument)
        // https://tc39.github.io/ecma262/#sec-iscallable
        function IsCallable(argument) {
            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.
            return typeof argument === "function";
        }
        // 7.2.4 IsConstructor(argument)
        // https://tc39.github.io/ecma262/#sec-isconstructor
        function IsConstructor(argument) {
            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.
            return typeof argument === "function";
        }
        // 7.2.7 IsPropertyKey(argument)
        // https://tc39.github.io/ecma262/#sec-ispropertykey
        function IsPropertyKey(argument) {
            switch (Type(argument)) {
                case 3 /* String */: return true;
                case 4 /* Symbol */: return true;
                default: return false;
            }
        }
        // 7.3 Operations on Objects
        // https://tc39.github.io/ecma262/#sec-operations-on-objects
        // 7.3.9 GetMethod(V, P)
        // https://tc39.github.io/ecma262/#sec-getmethod
        function GetMethod(V, P) {
            var func = V[P];
            if (func === undefined || func === null)
                return undefined;
            if (!IsCallable(func))
                throw new TypeError();
            return func;
        }
        // 7.4 Operations on Iterator Objects
        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects
        function GetIterator(obj) {
            var method = GetMethod(obj, iteratorSymbol);
            if (!IsCallable(method))
                throw new TypeError(); // from Call
            var iterator = method.call(obj);
            if (!IsObject(iterator))
                throw new TypeError();
            return iterator;
        }
        // 7.4.4 IteratorValue(iterResult)
        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue
        function IteratorValue(iterResult) {
            return iterResult.value;
        }
        // 7.4.5 IteratorStep(iterator)
        // https://tc39.github.io/ecma262/#sec-iteratorstep
        function IteratorStep(iterator) {
            var result = iterator.next();
            return result.done ? false : result;
        }
        // 7.4.6 IteratorClose(iterator, completion)
        // https://tc39.github.io/ecma262/#sec-iteratorclose
        function IteratorClose(iterator) {
            var f = iterator["return"];
            if (f)
                f.call(iterator);
        }
        // 9.1 Ordinary Object Internal Methods and Internal Slots
        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots
        // 9.1.1.1 OrdinaryGetPrototypeOf(O)
        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof
        function OrdinaryGetPrototypeOf(O) {
            var proto = Object.getPrototypeOf(O);
            if (typeof O !== "function" || O === functionPrototype)
                return proto;
            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.
            // Try to determine the superclass constructor. Compatible implementations
            // must either set __proto__ on a subclass constructor to the superclass constructor,
            // or ensure each class has a valid `constructor` property on its prototype that
            // points back to the constructor.
            // If this is not the same as Function.[[Prototype]], then this is definately inherited.
            // This is the case when in ES6 or when using __proto__ in a compatible browser.
            if (proto !== functionPrototype)
                return proto;
            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.
            var prototype = O.prototype;
            var prototypeProto = prototype && Object.getPrototypeOf(prototype);
            if (prototypeProto == null || prototypeProto === Object.prototype)
                return proto;
            // If the constructor was not a function, then we cannot determine the heritage.
            var constructor = prototypeProto.constructor;
            if (typeof constructor !== "function")
                return proto;
            // If we have some kind of self-reference, then we cannot determine the heritage.
            if (constructor === O)
                return proto;
            // we have a pretty good guess at the heritage.
            return constructor;
        }
        // naive Map shim
        function CreateMapPolyfill() {
            var cacheSentinel = {};
            var arraySentinel = [];
            var MapIterator = /** @class */ (function () {
                function MapIterator(keys, values, selector) {
                    this._index = 0;
                    this._keys = keys;
                    this._values = values;
                    this._selector = selector;
                }
                MapIterator.prototype["@@iterator"] = function () { return this; };
                MapIterator.prototype[iteratorSymbol] = function () { return this; };
                MapIterator.prototype.next = function () {
                    var index = this._index;
                    if (index >= 0 && index < this._keys.length) {
                        var result = this._selector(this._keys[index], this._values[index]);
                        if (index + 1 >= this._keys.length) {
                            this._index = -1;
                            this._keys = arraySentinel;
                            this._values = arraySentinel;
                        }
                        else {
                            this._index++;
                        }
                        return { value: result, done: false };
                    }
                    return { value: undefined, done: true };
                };
                MapIterator.prototype.throw = function (error) {
                    if (this._index >= 0) {
                        this._index = -1;
                        this._keys = arraySentinel;
                        this._values = arraySentinel;
                    }
                    throw error;
                };
                MapIterator.prototype.return = function (value) {
                    if (this._index >= 0) {
                        this._index = -1;
                        this._keys = arraySentinel;
                        this._values = arraySentinel;
                    }
                    return { value: value, done: true };
                };
                return MapIterator;
            }());
            return /** @class */ (function () {
                function Map() {
                    this._keys = [];
                    this._values = [];
                    this._cacheKey = cacheSentinel;
                    this._cacheIndex = -2;
                }
                Object.defineProperty(Map.prototype, "size", {
                    get: function () { return this._keys.length; },
                    enumerable: true,
                    configurable: true
                });
                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };
                Map.prototype.get = function (key) {
                    var index = this._find(key, /*insert*/ false);
                    return index >= 0 ? this._values[index] : undefined;
                };
                Map.prototype.set = function (key, value) {
                    var index = this._find(key, /*insert*/ true);
                    this._values[index] = value;
                    return this;
                };
                Map.prototype.delete = function (key) {
                    var index = this._find(key, /*insert*/ false);
                    if (index >= 0) {
                        var size = this._keys.length;
                        for (var i = index + 1; i < size; i++) {
                            this._keys[i - 1] = this._keys[i];
                            this._values[i - 1] = this._values[i];
                        }
                        this._keys.length--;
                        this._values.length--;
                        if (key === this._cacheKey) {
                            this._cacheKey = cacheSentinel;
                            this._cacheIndex = -2;
                        }
                        return true;
                    }
                    return false;
                };
                Map.prototype.clear = function () {
                    this._keys.length = 0;
                    this._values.length = 0;
                    this._cacheKey = cacheSentinel;
                    this._cacheIndex = -2;
                };
                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };
                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };
                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };
                Map.prototype["@@iterator"] = function () { return this.entries(); };
                Map.prototype[iteratorSymbol] = function () { return this.entries(); };
                Map.prototype._find = function (key, insert) {
                    if (this._cacheKey !== key) {
                        this._cacheIndex = this._keys.indexOf(this._cacheKey = key);
                    }
                    if (this._cacheIndex < 0 && insert) {
                        this._cacheIndex = this._keys.length;
                        this._keys.push(key);
                        this._values.push(undefined);
                    }
                    return this._cacheIndex;
                };
                return Map;
            }());
            function getKey(key, _) {
                return key;
            }
            function getValue(_, value) {
                return value;
            }
            function getEntry(key, value) {
                return [key, value];
            }
        }
        // naive Set shim
        function CreateSetPolyfill() {
            return /** @class */ (function () {
                function Set() {
                    this._map = new _Map();
                }
                Object.defineProperty(Set.prototype, "size", {
                    get: function () { return this._map.size; },
                    enumerable: true,
                    configurable: true
                });
                Set.prototype.has = function (value) { return this._map.has(value); };
                Set.prototype.add = function (value) { return this._map.set(value, value), this; };
                Set.prototype.delete = function (value) { return this._map.delete(value); };
                Set.prototype.clear = function () { this._map.clear(); };
                Set.prototype.keys = function () { return this._map.keys(); };
                Set.prototype.values = function () { return this._map.values(); };
                Set.prototype.entries = function () { return this._map.entries(); };
                Set.prototype["@@iterator"] = function () { return this.keys(); };
                Set.prototype[iteratorSymbol] = function () { return this.keys(); };
                return Set;
            }());
        }
        // naive WeakMap shim
        function CreateWeakMapPolyfill() {
            var UUID_SIZE = 16;
            var keys = HashMap.create();
            var rootKey = CreateUniqueKey();
            return /** @class */ (function () {
                function WeakMap() {
                    this._key = CreateUniqueKey();
                }
                WeakMap.prototype.has = function (target) {
                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);
                    return table !== undefined ? HashMap.has(table, this._key) : false;
                };
                WeakMap.prototype.get = function (target) {
                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);
                    return table !== undefined ? HashMap.get(table, this._key) : undefined;
                };
                WeakMap.prototype.set = function (target, value) {
                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);
                    table[this._key] = value;
                    return this;
                };
                WeakMap.prototype.delete = function (target) {
                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);
                    return table !== undefined ? delete table[this._key] : false;
                };
                WeakMap.prototype.clear = function () {
                    // NOTE: not a real clear, just makes the previous data unreachable
                    this._key = CreateUniqueKey();
                };
                return WeakMap;
            }());
            function CreateUniqueKey() {
                var key;
                do
                    key = "@@WeakMap@@" + CreateUUID();
                while (HashMap.has(keys, key));
                keys[key] = true;
                return key;
            }
            function GetOrCreateWeakMapTable(target, create) {
                if (!hasOwn.call(target, rootKey)) {
                    if (!create)
                        return undefined;
                    Object.defineProperty(target, rootKey, { value: HashMap.create() });
                }
                return target[rootKey];
            }
            function FillRandomBytes(buffer, size) {
                for (var i = 0; i < size; ++i)
                    buffer[i] = Math.random() * 0xff | 0;
                return buffer;
            }
            function GenRandomBytes(size) {
                if (typeof Uint8Array === "function") {
                    if (typeof crypto !== "undefined")
                        return crypto.getRandomValues(new Uint8Array(size));
                    if (typeof msCrypto !== "undefined")
                        return msCrypto.getRandomValues(new Uint8Array(size));
                    return FillRandomBytes(new Uint8Array(size), size);
                }
                return FillRandomBytes(new Array(size), size);
            }
            function CreateUUID() {
                var data = GenRandomBytes(UUID_SIZE);
                // mark as random - RFC 4122 § 4.4
                data[6] = data[6] & 0x4f | 0x40;
                data[8] = data[8] & 0xbf | 0x80;
                var result = "";
                for (var offset = 0; offset < UUID_SIZE; ++offset) {
                    var byte = data[offset];
                    if (offset === 4 || offset === 6 || offset === 8)
                        result += "-";
                    if (byte < 16)
                        result += "0";
                    result += byte.toString(16).toLowerCase();
                }
                return result;
            }
        }
        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.
        function MakeDictionary(obj) {
            obj.__ = undefined;
            delete obj.__;
            return obj;
        }
    });
})(Reflect || (Reflect = {}));


/***/ }),

/***/ 13806:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "P1": () => (/* binding */ createSelector)
});

// UNUSED EXPORTS: createSelectorCreator, createStructuredSelector, defaultEqualityCheck, defaultMemoize

;// CONCATENATED MODULE: ./node_modules/reselect/es/defaultMemoize.js
// Cache implementation based on Erik Rasmussen's `lru-memoize`:
// https://github.com/erikras/lru-memoize
var NOT_FOUND = 'NOT_FOUND';

function createSingletonCache(equals) {
  var entry;
  return {
    get: function get(key) {
      if (entry && equals(entry.key, key)) {
        return entry.value;
      }

      return NOT_FOUND;
    },
    put: function put(key, value) {
      entry = {
        key: key,
        value: value
      };
    },
    getEntries: function getEntries() {
      return entry ? [entry] : [];
    },
    clear: function clear() {
      entry = undefined;
    }
  };
}

function createLruCache(maxSize, equals) {
  var entries = [];

  function get(key) {
    var cacheIndex = entries.findIndex(function (entry) {
      return equals(key, entry.key);
    }); // We found a cached entry

    if (cacheIndex > -1) {
      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top

      if (cacheIndex > 0) {
        entries.splice(cacheIndex, 1);
        entries.unshift(entry);
      }

      return entry.value;
    } // No entry found in cache, return sentinel


    return NOT_FOUND;
  }

  function put(key, value) {
    if (get(key) === NOT_FOUND) {
      // TODO Is unshift slow?
      entries.unshift({
        key: key,
        value: value
      });

      if (entries.length > maxSize) {
        entries.pop();
      }
    }
  }

  function getEntries() {
    return entries;
  }

  function clear() {
    entries = [];
  }

  return {
    get: get,
    put: put,
    getEntries: getEntries,
    clear: clear
  };
}

var defaultEqualityCheck = function defaultEqualityCheck(a, b) {
  return a === b;
};
function createCacheKeyComparator(equalityCheck) {
  return function areArgumentsShallowlyEqual(prev, next) {
    if (prev === null || next === null || prev.length !== next.length) {
      return false;
    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.


    var length = prev.length;

    for (var i = 0; i < length; i++) {
      if (!equalityCheck(prev[i], next[i])) {
        return false;
      }
    }

    return true;
  };
}
// defaultMemoize now supports a configurable cache size with LRU behavior,
// and optional comparison of the result value with existing values
function defaultMemoize(func, equalityCheckOrOptions) {
  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {
    equalityCheck: equalityCheckOrOptions
  };
  var _providedOptions$equa = providedOptions.equalityCheck,
      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,
      _providedOptions$maxS = providedOptions.maxSize,
      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,
      resultEqualityCheck = providedOptions.resultEqualityCheck;
  var comparator = createCacheKeyComparator(equalityCheck);
  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons

  function memoized() {
    var value = cache.get(arguments);

    if (value === NOT_FOUND) {
      // @ts-ignore
      value = func.apply(null, arguments);

      if (resultEqualityCheck) {
        var entries = cache.getEntries();
        var matchingEntry = entries.find(function (entry) {
          return resultEqualityCheck(entry.value, value);
        });

        if (matchingEntry) {
          value = matchingEntry.value;
        }
      }

      cache.put(arguments, value);
    }

    return value;
  }

  memoized.clearCache = function () {
    return cache.clear();
  };

  return memoized;
}
;// CONCATENATED MODULE: ./node_modules/reselect/es/index.js



function getDependencies(funcs) {
  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;

  if (!dependencies.every(function (dep) {
    return typeof dep === 'function';
  })) {
    var dependencyTypes = dependencies.map(function (dep) {
      return typeof dep === 'function' ? "function " + (dep.name || 'unnamed') + "()" : typeof dep;
    }).join(', ');
    throw new Error("createSelector expects all input-selectors to be functions, but received the following types: [" + dependencyTypes + "]");
  }

  return dependencies;
}

function createSelectorCreator(memoize) {
  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    memoizeOptionsFromArgs[_key - 1] = arguments[_key];
  }

  var createSelector = function createSelector() {
    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      funcs[_key2] = arguments[_key2];
    }

    var _recomputations = 0;

    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.
    // So, start by declaring the default value here.
    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)


    var directlyPassedOptions = {
      memoizeOptions: undefined
    }; // Normally, the result func or "output selector" is the last arg

    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object

    if (typeof resultFunc === 'object') {
      directlyPassedOptions = resultFunc; // and pop the real result func off

      resultFunc = funcs.pop();
    }

    if (typeof resultFunc !== 'function') {
      throw new Error("createSelector expects an output function after the inputs, but received: [" + typeof resultFunc + "]");
    } // Determine which set of options we're using. Prefer options passed directly,
    // but fall back to options given to createSelectorCreator.


    var _directlyPassedOption = directlyPassedOptions,
        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,
        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer
    // is an array. In most libs I've looked at, it's an equality function or options object.
    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full
    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so
    // we wrap it in an array so we can apply it.

    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];
    var dependencies = getDependencies(funcs);
    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {
      _recomputations++; // apply arguments instead of spreading for performance.

      return resultFunc.apply(null, arguments);
    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.

    var selector = memoize(function dependenciesChecker() {
      var params = [];
      var length = dependencies.length;

      for (var i = 0; i < length; i++) {
        // apply arguments instead of spreading and mutate a local list of params for performance.
        // @ts-ignore
        params.push(dependencies[i].apply(null, arguments));
      } // apply arguments instead of spreading for performance.


      _lastResult = memoizedResultFunc.apply(null, params);
      return _lastResult;
    });
    Object.assign(selector, {
      resultFunc: resultFunc,
      memoizedResultFunc: memoizedResultFunc,
      dependencies: dependencies,
      lastResult: function lastResult() {
        return _lastResult;
      },
      recomputations: function recomputations() {
        return _recomputations;
      },
      resetRecomputations: function resetRecomputations() {
        return _recomputations = 0;
      }
    });
    return selector;
  }; // @ts-ignore


  return createSelector;
}
var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);
// Manual definition of state and output arguments
var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {
  if (selectorCreator === void 0) {
    selectorCreator = createSelector;
  }

  if (typeof selectors !== 'object') {
    throw new Error('createStructuredSelector expects first argument to be an object ' + ("where each property is a selector, instead received a " + typeof selectors));
  }

  var objectKeys = Object.keys(selectors);
  var resultSelector = selectorCreator( // @ts-ignore
  objectKeys.map(function (key) {
    return selectors[key];
  }), function () {
    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      values[_key3] = arguments[_key3];
    }

    return values.reduce(function (composition, value, index) {
      composition[objectKeys[index]] = value;
      return composition;
    }, {});
  });
  return resultSelector;
};

/***/ }),

/***/ 41196:
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}
function g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if("object"===typeof performance&&"function"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D="function"===typeof setTimeout?setTimeout:null,E="function"===typeof clearTimeout?clearTimeout:null,F="undefined"!==typeof setImmediate?setImmediate:null;
"undefined"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}
function J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if("function"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();"function"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;
function M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if("function"===typeof F)S=function(){F(R)};else if("undefined"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}
exports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};
exports.unstable_forceFrameRate=function(a){0>a||125<a?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};
exports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};
exports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();"object"===typeof c&&null!==c?(c=c.delay,c="number"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};
exports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};


/***/ }),

/***/ 72851:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


if (true) {
  module.exports = __webpack_require__(41196);
} else {}


/***/ }),

/***/ 75701:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var isOldIE = function isOldIE() {
  var memo;
  return function memorize() {
    if (typeof memo === 'undefined') {
      // Test for IE <= 9 as proposed by Browserhacks
      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
      // Tests for existence of standard globals is to allow style-loader
      // to operate correctly into non-standard environments
      // @see https://github.com/webpack-contrib/style-loader/issues/177
      memo = Boolean(window && document && document.all && !window.atob);
    }

    return memo;
  };
}();

var getTarget = function getTarget() {
  var memo = {};
  return function memorize(target) {
    if (typeof memo[target] === 'undefined') {
      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself

      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
        try {
          // This will throw an exception if access to iframe is blocked
          // due to cross-origin restrictions
          styleTarget = styleTarget.contentDocument.head;
        } catch (e) {
          // istanbul ignore next
          styleTarget = null;
        }
      }

      memo[target] = styleTarget;
    }

    return memo[target];
  };
}();

var stylesInDom = [];

function getIndexByIdentifier(identifier) {
  var result = -1;

  for (var i = 0; i < stylesInDom.length; i++) {
    if (stylesInDom[i].identifier === identifier) {
      result = i;
      break;
    }
  }

  return result;
}

function modulesToDom(list, options) {
  var idCountMap = {};
  var identifiers = [];

  for (var i = 0; i < list.length; i++) {
    var item = list[i];
    var id = options.base ? item[0] + options.base : item[0];
    var count = idCountMap[id] || 0;
    var identifier = "".concat(id, " ").concat(count);
    idCountMap[id] = count + 1;
    var index = getIndexByIdentifier(identifier);
    var obj = {
      css: item[1],
      media: item[2],
      sourceMap: item[3]
    };

    if (index !== -1) {
      stylesInDom[index].references++;
      stylesInDom[index].updater(obj);
    } else {
      stylesInDom.push({
        identifier: identifier,
        updater: addStyle(obj, options),
        references: 1
      });
    }

    identifiers.push(identifier);
  }

  return identifiers;
}

function insertStyleElement(options) {
  var style = document.createElement('style');
  var attributes = options.attributes || {};

  if (typeof attributes.nonce === 'undefined') {
    var nonce =  true ? __webpack_require__.nc : 0;

    if (nonce) {
      attributes.nonce = nonce;
    }
  }

  Object.keys(attributes).forEach(function (key) {
    style.setAttribute(key, attributes[key]);
  });

  if (typeof options.insert === 'function') {
    options.insert(style);
  } else {
    var target = getTarget(options.insert || 'head');

    if (!target) {
      throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
    }

    target.appendChild(style);
  }

  return style;
}

function removeStyleElement(style) {
  // istanbul ignore if
  if (style.parentNode === null) {
    return false;
  }

  style.parentNode.removeChild(style);
}
/* istanbul ignore next  */


var replaceText = function replaceText() {
  var textStore = [];
  return function replace(index, replacement) {
    textStore[index] = replacement;
    return textStore.filter(Boolean).join('\n');
  };
}();

function applyToSingletonTag(style, index, remove, obj) {
  var css = remove ? '' : obj.media ? "@media ".concat(obj.media, " {").concat(obj.css, "}") : obj.css; // For old IE

  /* istanbul ignore if  */

  if (style.styleSheet) {
    style.styleSheet.cssText = replaceText(index, css);
  } else {
    var cssNode = document.createTextNode(css);
    var childNodes = style.childNodes;

    if (childNodes[index]) {
      style.removeChild(childNodes[index]);
    }

    if (childNodes.length) {
      style.insertBefore(cssNode, childNodes[index]);
    } else {
      style.appendChild(cssNode);
    }
  }
}

function applyToTag(style, options, obj) {
  var css = obj.css;
  var media = obj.media;
  var sourceMap = obj.sourceMap;

  if (media) {
    style.setAttribute('media', media);
  } else {
    style.removeAttribute('media');
  }

  if (sourceMap && typeof btoa !== 'undefined') {
    css += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");
  } // For old IE

  /* istanbul ignore if  */


  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    while (style.firstChild) {
      style.removeChild(style.firstChild);
    }

    style.appendChild(document.createTextNode(css));
  }
}

var singleton = null;
var singletonCounter = 0;

function addStyle(obj, options) {
  var style;
  var update;
  var remove;

  if (options.singleton) {
    var styleIndex = singletonCounter++;
    style = singleton || (singleton = insertStyleElement(options));
    update = applyToSingletonTag.bind(null, style, styleIndex, false);
    remove = applyToSingletonTag.bind(null, style, styleIndex, true);
  } else {
    style = insertStyleElement(options);
    update = applyToTag.bind(null, style, options);

    remove = function remove() {
      removeStyleElement(style);
    };
  }

  update(obj);
  return function updateStyle(newObj) {
    if (newObj) {
      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {
        return;
      }

      update(obj = newObj);
    } else {
      remove();
    }
  };
}

module.exports = function (list, options) {
  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
  // tags it will allow on a page

  if (!options.singleton && typeof options.singleton !== 'boolean') {
    options.singleton = isOldIE();
  }

  list = list || [];
  var lastIdentifiers = modulesToDom(list, options);
  return function update(newList) {
    newList = newList || [];

    if (Object.prototype.toString.call(newList) !== '[object Array]') {
      return;
    }

    for (var i = 0; i < lastIdentifiers.length; i++) {
      var identifier = lastIdentifiers[i];
      var index = getIndexByIdentifier(identifier);
      stylesInDom[index].references--;
    }

    var newLastIdentifiers = modulesToDom(newList, options);

    for (var _i = 0; _i < lastIdentifiers.length; _i++) {
      var _identifier = lastIdentifiers[_i];

      var _index = getIndexByIdentifier(_identifier);

      if (stylesInDom[_index].references === 0) {
        stylesInDom[_index].updater();

        stylesInDom.splice(_index, 1);
      }
    }

    lastIdentifiers = newLastIdentifiers;
  };
};

/***/ }),

/***/ 34848:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parse = __webpack_require__(24373);

/**
 * Parses inline style to object.
 *
 * @example
 * // returns { 'line-height': '42' }
 * StyleToObject('line-height: 42;');
 *
 * @param  {String}      style      - The inline style.
 * @param  {Function}    [iterator] - The iterator function.
 * @return {null|Object}
 */
function StyleToObject(style, iterator) {
  var output = null;
  if (!style || typeof style !== 'string') {
    return output;
  }

  var declaration;
  var declarations = parse(style);
  var hasIterator = typeof iterator === 'function';
  var property;
  var value;

  for (var i = 0, len = declarations.length; i < len; i++) {
    declaration = declarations[i];
    property = declaration.property;
    value = declaration.value;

    if (hasIterator) {
      iterator(property, value, declaration);
    } else if (value) {
      output || (output = {});
      output[property] = value;
    }
  }

  return output;
}

module.exports = StyleToObject;


/***/ }),

/***/ 99338:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


module.exports = visit

var visitParents = __webpack_require__(83980)

var CONTINUE = visitParents.CONTINUE
var SKIP = visitParents.SKIP
var EXIT = visitParents.EXIT

visit.CONTINUE = CONTINUE
visit.SKIP = SKIP
visit.EXIT = EXIT

function visit(tree, test, visitor, reverse) {
  if (typeof test === 'function' && typeof visitor !== 'function') {
    reverse = visitor
    visitor = test
    test = null
  }

  visitParents(tree, test, overload, reverse)

  function overload(node, parents) {
    var parent = parents[parents.length - 1]
    var index = parent ? parent.children.indexOf(node) : null
    return visitor(node, index, parent)
  }
}


/***/ }),

/***/ 13006:
/***/ ((module) => {

"use strict";


module.exports = convert

function convert(test) {
  if (typeof test === 'string') {
    return typeFactory(test)
  }

  if (test === null || test === undefined) {
    return ok
  }

  if (typeof test === 'object') {
    return ('length' in test ? anyFactory : matchesFactory)(test)
  }

  if (typeof test === 'function') {
    return test
  }

  throw new Error('Expected function, string, or object as test')
}

function convertAll(tests) {
  var results = []
  var length = tests.length
  var index = -1

  while (++index < length) {
    results[index] = convert(tests[index])
  }

  return results
}

// Utility assert each property in `test` is represented in `node`, and each
// values are strictly equal.
function matchesFactory(test) {
  return matches

  function matches(node) {
    var key

    for (key in test) {
      if (node[key] !== test[key]) {
        return false
      }
    }

    return true
  }
}

function anyFactory(tests) {
  var checks = convertAll(tests)
  var length = checks.length

  return matches

  function matches() {
    var index = -1

    while (++index < length) {
      if (checks[index].apply(this, arguments)) {
        return true
      }
    }

    return false
  }
}

// Utility to convert a string into a function which checks a given node’s type
// for said string.
function typeFactory(test) {
  return type

  function type(node) {
    return Boolean(node && node.type === test)
  }
}

// Utility to return true.
function ok() {
  return true
}


/***/ }),

/***/ 83980:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


module.exports = visitParents

var convert = __webpack_require__(13006)

var CONTINUE = true
var SKIP = 'skip'
var EXIT = false

visitParents.CONTINUE = CONTINUE
visitParents.SKIP = SKIP
visitParents.EXIT = EXIT

function visitParents(tree, test, visitor, reverse) {
  var is

  if (typeof test === 'function' && typeof visitor !== 'function') {
    reverse = visitor
    visitor = test
    test = null
  }

  is = convert(test)

  one(tree, null, [])

  // Visit a single node.
  function one(node, index, parents) {
    var result = []
    var subresult

    if (!test || is(node, index, parents[parents.length - 1] || null)) {
      result = toResult(visitor(node, parents))

      if (result[0] === EXIT) {
        return result
      }
    }

    if (node.children && result[0] !== SKIP) {
      subresult = toResult(all(node.children, parents.concat(node)))
      return subresult[0] === EXIT ? subresult : result
    }

    return result
  }

  // Visit children in `parent`.
  function all(children, parents) {
    var min = -1
    var step = reverse ? -1 : 1
    var index = (reverse ? children.length : min) + step
    var result

    while (index > min && index < children.length) {
      result = one(children[index], index, parents)

      if (result[0] === EXIT) {
        return result
      }

      index = typeof result[1] === 'number' ? result[1] : index + step
    }
  }
}

function toResult(value) {
  if (value !== null && typeof value === 'object' && 'length' in value) {
    return value
  }

  if (typeof value === 'number') {
    return [CONTINUE, value]
  }

  return [value]
}


/***/ }),

/***/ 57755:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/**
 * @license React
 * use-sync-external-store-shim.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var e=__webpack_require__(89526);function h(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var k="function"===typeof Object.is?Object.is:h,l=e.useState,m=e.useEffect,n=e.useLayoutEffect,p=e.useDebugValue;function q(a,b){var d=b(),f=l({inst:{value:d,getSnapshot:b}}),c=f[0].inst,g=f[1];n(function(){c.value=d;c.getSnapshot=b;r(c)&&g({inst:c})},[a,d,b]);m(function(){r(c)&&g({inst:c});return a(function(){r(c)&&g({inst:c})})},[a]);p(d);return d}
function r(a){var b=a.getSnapshot;a=a.value;try{var d=b();return!k(a,d)}catch(f){return!0}}function t(a,b){return b()}var u="undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement?t:q;exports.useSyncExternalStore=void 0!==e.useSyncExternalStore?e.useSyncExternalStore:u;


/***/ }),

/***/ 96603:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/**
 * @license React
 * use-sync-external-store-shim/with-selector.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var h=__webpack_require__(89526),n=__webpack_require__(50635);function p(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var q="function"===typeof Object.is?Object.is:p,r=n.useSyncExternalStore,t=h.useRef,u=h.useEffect,v=h.useMemo,w=h.useDebugValue;
exports.useSyncExternalStoreWithSelector=function(a,b,e,l,g){var c=t(null);if(null===c.current){var f={hasValue:!1,value:null};c.current=f}else f=c.current;c=v(function(){function a(a){if(!c){c=!0;d=a;a=l(a);if(void 0!==g&&f.hasValue){var b=f.value;if(g(b,a))return k=b}return k=a}b=k;if(q(d,a))return b;var e=l(a);if(void 0!==g&&g(b,e))return b;d=a;return k=e}var c=!1,d,k,m=void 0===e?null:e;return[function(){return a(b())},null===m?void 0:function(){return a(m())}]},[b,e,l,g]);var d=r(a,c[0],c[1]);
u(function(){f.hasValue=!0;f.value=d},[d]);w(d);return d};


/***/ }),

/***/ 50635:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


if (true) {
  module.exports = __webpack_require__(57755);
} else {}


/***/ }),

/***/ 49654:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


if (true) {
  module.exports = __webpack_require__(96603);
} else {}


/***/ }),

/***/ 626:
/***/ ((module) => {

"use strict";
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var __DEV__ = "production" !== 'production';

var warning = function() {};

if (__DEV__) {
  var printWarning = function printWarning(format, args) {
    var len = arguments.length;
    args = new Array(len > 1 ? len - 1 : 0);
    for (var key = 1; key < len; key++) {
      args[key - 1] = arguments[key];
    }
    var argIndex = 0;
    var message = 'Warning: ' +
      format.replace(/%s/g, function() {
        return args[argIndex++];
      });
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  }

  warning = function(condition, format, args) {
    var len = arguments.length;
    args = new Array(len > 2 ? len - 2 : 0);
    for (var key = 2; key < len; key++) {
      args[key - 2] = arguments[key];
    }
    if (format === undefined) {
      throw new Error(
          '`warning(condition, format, ...args)` requires a warning ' +
          'message argument'
      );
    }
    if (!condition) {
      printWarning.apply(null, [format].concat(args));
    }
  };
}

module.exports = warning;


/***/ }),

/***/ 33432:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(75701);
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_1_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_1_use_2_BoardPlaceholder_module_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(73801);

            

var options = {};

options.insert = "head";
options.singleton = false;

var update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_1_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_1_use_2_BoardPlaceholder_module_scss__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z, options);



/* harmony default export */ __webpack_exports__["Z"] = (_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_1_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_1_use_2_BoardPlaceholder_module_scss__WEBPACK_IMPORTED_MODULE_1__/* ["default"].locals */ .Z.locals || {});

/***/ }),

/***/ 91219:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(75701);
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_1_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_1_use_2_GameDisplay_module_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(36017);

            

var options = {};

options.insert = "head";
options.singleton = false;

var update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_1_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_1_use_2_GameDisplay_module_scss__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z, options);



/* harmony default export */ __webpack_exports__["Z"] = (_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_1_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_1_use_2_GameDisplay_module_scss__WEBPACK_IMPORTED_MODULE_1__/* ["default"].locals */ .Z.locals || {});

/***/ }),

/***/ 49330:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(75701);
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_1_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_1_use_2_GameVariantRules_module_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(75278);

            

var options = {};

options.insert = "head";
options.singleton = false;

var update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_1_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_1_use_2_GameVariantRules_module_scss__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z, options);



/* harmony default export */ __webpack_exports__["Z"] = (_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_1_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_1_use_2_GameVariantRules_module_scss__WEBPACK_IMPORTED_MODULE_1__/* ["default"].locals */ .Z.locals || {});

/***/ }),

/***/ 320:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(75701);
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_1_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_1_use_2_GameController_module_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(29324);

            

var options = {};

options.insert = "head";
options.singleton = false;

var update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_1_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_1_use_2_GameController_module_scss__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z, options);



/* harmony default export */ __webpack_exports__["Z"] = (_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_1_use_1_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_1_use_2_GameController_module_scss__WEBPACK_IMPORTED_MODULE_1__/* ["default"].locals */ .Z.locals || {});

/***/ }),

/***/ 35402:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var map = {
	"./a.svg": 70026,
	"./alpha.svg": 3323,
	"./b.svg": 31451,
	"./beta.svg": 93244,
	"./c.svg": 90698,
	"./d.svg": 74027,
	"./delta.svg": 69756,
	"./deltaUpper.svg": 2938,
	"./e.svg": 59364,
	"./f.svg": 85679,
	"./g.svg": 80055,
	"./gamma.svg": 61433,
	"./h.svg": 65780,
	"./i.svg": 87950,
	"./iAlt1.svg": 95871,
	"./j.svg": 80506,
	"./k.svg": 23317,
	"./l.svg": 15807,
	"./m.svg": 78012,
	"./n.svg": 28784,
	"./o.svg": 37968,
	"./p.svg": 13542,
	"./q.svg": 86322,
	"./r.svg": 19541,
	"./rAlt1.svg": 48569,
	"./rAlt2.svg": 9689,
	"./s.svg": 64245,
	"./t.svg": 53870,
	"./u.svg": 47,
	"./v.svg": 57760,
	"./w.svg": 63993,
	"./y.svg": 14981,
	"./z.svg": 6657
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 35402;

/***/ }),

/***/ 94499:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var map = {
	"./a.svg": 29067,
	"./alpha.svg": 98681,
	"./b.svg": 11304,
	"./beta.svg": 42416,
	"./c.svg": 6292,
	"./d.svg": 15939,
	"./delta.svg": 56485,
	"./deltaUpper.svg": 68177,
	"./e.svg": 95270,
	"./f.svg": 45041,
	"./g.svg": 41267,
	"./gamma.svg": 89187,
	"./h.svg": 48380,
	"./i.svg": 42151,
	"./iAlt1.svg": 59638,
	"./j.svg": 76613,
	"./k.svg": 5828,
	"./l.svg": 3649,
	"./m.svg": 79319,
	"./n.svg": 34578,
	"./o.svg": 60819,
	"./p.svg": 81127,
	"./q.svg": 84625,
	"./r.svg": 3591,
	"./rAlt1.svg": 84508,
	"./rAlt2.svg": 29053,
	"./s.svg": 62305,
	"./t.svg": 80919,
	"./u.svg": 50162,
	"./v.svg": 6017,
	"./w.svg": 90977,
	"./y.svg": 96937,
	"./z.svg": 85314
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 94499;

/***/ }),

/***/ 47325:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var map = {
	"./a.png": 39205,
	"./alpha.png": 53480,
	"./b.png": 91140,
	"./beta.png": 19288,
	"./c.png": 98759,
	"./d.png": 34033,
	"./delta.png": 4397,
	"./deltaUpper.png": 98920,
	"./e.png": 34222,
	"./f.png": 72204,
	"./g.png": 80779,
	"./gamma.png": 72568,
	"./h.png": 35530,
	"./i.png": 87804,
	"./j.png": 36048,
	"./k.png": 25257,
	"./l.png": 46776,
	"./m.png": 18704,
	"./n.png": 45992,
	"./o.png": 60277,
	"./p.png": 43217,
	"./q.png": 66915,
	"./r.png": 43819,
	"./s.png": 81363,
	"./t.png": 82787,
	"./u.png": 68900,
	"./v.png": 6145,
	"./w.png": 75274,
	"./y.png": 51784,
	"./z.png": 71445
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 47325;

/***/ }),

/***/ 69953:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var map = {
	"./a.png": 67783,
	"./alpha.png": 53009,
	"./b.png": 29850,
	"./beta.png": 77149,
	"./c.png": 5090,
	"./d.png": 13601,
	"./delta.png": 91523,
	"./deltaUpper.png": 96298,
	"./e.png": 72277,
	"./f.png": 82121,
	"./g.png": 54475,
	"./gamma.png": 99841,
	"./h.png": 59403,
	"./i.png": 74521,
	"./j.png": 26397,
	"./k.png": 94476,
	"./l.png": 74605,
	"./m.png": 32302,
	"./n.png": 94907,
	"./o.png": 76986,
	"./p.png": 55541,
	"./q.png": 62244,
	"./r.png": 86073,
	"./s.png": 61656,
	"./t.png": 62737,
	"./u.png": 22451,
	"./v.png": 95315,
	"./w.png": 45723,
	"./y.png": 35259,
	"./z.png": 56362
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 69953;

/***/ }),

/***/ 10544:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var map = {
	"./a.png": 22464,
	"./alpha.png": 89676,
	"./b.png": 12450,
	"./beta.png": 51986,
	"./c.png": 63830,
	"./d.png": 15436,
	"./delta.png": 51882,
	"./deltaUpper.png": 40774,
	"./e.png": 43386,
	"./f.png": 64703,
	"./g.png": 13586,
	"./gamma.png": 77461,
	"./h.png": 28606,
	"./i.png": 19239,
	"./j.png": 39923,
	"./k.png": 61705,
	"./l.png": 80199,
	"./m.png": 3466,
	"./n.png": 87052,
	"./o.png": 22264,
	"./p.png": 19559,
	"./q.png": 11614,
	"./r.png": 28884,
	"./s.png": 53918,
	"./t.png": 23294,
	"./u.png": 45205,
	"./v.png": 59817,
	"./w.png": 66652,
	"./y.png": 73115,
	"./z.png": 76648
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 10544;

/***/ }),

/***/ 47174:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var map = {
	"./a.png": 28358,
	"./alpha.png": 52017,
	"./b.png": 67289,
	"./beta.png": 60084,
	"./c.png": 74844,
	"./d.png": 12789,
	"./delta.png": 52662,
	"./deltaUpper.png": 90659,
	"./e.png": 33299,
	"./f.png": 69853,
	"./g.png": 29158,
	"./gamma.png": 71530,
	"./h.png": 996,
	"./i.png": 20518,
	"./j.png": 73277,
	"./k.png": 51135,
	"./l.png": 19597,
	"./m.png": 54254,
	"./n.png": 11226,
	"./o.png": 75385,
	"./p.png": 17852,
	"./q.png": 49703,
	"./r.png": 94692,
	"./s.png": 97370,
	"./t.png": 45169,
	"./u.png": 52407,
	"./v.png": 28684,
	"./w.png": 99810,
	"./y.png": 24601,
	"./z.png": 32678
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 47174;

/***/ }),

/***/ 57159:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var map = {
	"./a.png": 52743,
	"./alpha.png": 48161,
	"./b.png": 86094,
	"./beta.png": 66408,
	"./c.png": 47437,
	"./d.png": 25751,
	"./delta.png": 5801,
	"./deltaUpper.png": 93824,
	"./e.png": 14545,
	"./f.png": 33182,
	"./g.png": 82117,
	"./gamma.png": 84539,
	"./h.png": 9955,
	"./i.png": 20203,
	"./j.png": 43321,
	"./k.png": 74117,
	"./l.png": 62416,
	"./m.png": 30587,
	"./n.png": 64754,
	"./o.png": 65188,
	"./p.png": 81795,
	"./q.png": 17537,
	"./r.png": 73045,
	"./s.png": 37685,
	"./t.png": 1925,
	"./u.png": 95376,
	"./v.png": 36886,
	"./w.png": 86702,
	"./y.png": 76193,
	"./z.png": 69382
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 57159;

/***/ }),

/***/ 47733:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var map = {
	"./a.png": 65328,
	"./alpha.png": 79042,
	"./b.png": 93295,
	"./beta.png": 38643,
	"./c.png": 31292,
	"./d.png": 57065,
	"./delta.png": 30318,
	"./deltaUpper.png": 27148,
	"./e.png": 7093,
	"./f.png": 95634,
	"./g.png": 73076,
	"./gamma.png": 48345,
	"./h.png": 13255,
	"./i.png": 94486,
	"./j.png": 49216,
	"./k.png": 74712,
	"./l.png": 78550,
	"./m.png": 18955,
	"./n.png": 57762,
	"./o.png": 82213,
	"./p.png": 81387,
	"./q.png": 7368,
	"./r.png": 53569,
	"./s.png": 89034,
	"./t.png": 50205,
	"./u.png": 18795,
	"./v.png": 56658,
	"./w.png": 38402,
	"./y.png": 77615,
	"./z.png": 24463
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 47733;

/***/ }),

/***/ 74103:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var map = {
	"./a.png": 93094,
	"./alpha.png": 5846,
	"./b.png": 24457,
	"./beta.png": 76369,
	"./c.png": 37676,
	"./d.png": 7116,
	"./delta.png": 556,
	"./deltaUpper.png": 48842,
	"./e.png": 88656,
	"./f.png": 28913,
	"./g.png": 99969,
	"./gamma.png": 81653,
	"./h.png": 29640,
	"./i.png": 26609,
	"./j.png": 59607,
	"./k.png": 34612,
	"./l.png": 63810,
	"./m.png": 76578,
	"./n.png": 73652,
	"./o.png": 54282,
	"./p.png": 92406,
	"./q.png": 67780,
	"./r.png": 98458,
	"./s.png": 14850,
	"./t.png": 63306,
	"./u.png": 84270,
	"./v.png": 21912,
	"./w.png": 50764,
	"./y.png": 2999,
	"./z.png": 97422
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 74103;

/***/ }),

/***/ 63406:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var map = {
	"./a.png": 14564,
	"./alpha.png": 74019,
	"./b.png": 20441,
	"./beta.png": 63832,
	"./c.png": 94263,
	"./d.png": 71216,
	"./delta.png": 68312,
	"./deltaUpper.png": 46584,
	"./e.png": 19641,
	"./f.png": 79653,
	"./g.png": 57037,
	"./gamma.png": 6480,
	"./h.png": 13051,
	"./i.png": 63277,
	"./j.png": 35620,
	"./k.png": 73974,
	"./l.png": 44293,
	"./m.png": 72370,
	"./n.png": 59738,
	"./o.png": 9534,
	"./p.png": 55031,
	"./q.png": 14116,
	"./r.png": 80264,
	"./s.png": 18281,
	"./t.png": 62953,
	"./u.png": 73436,
	"./v.png": 73966,
	"./w.png": 6384,
	"./y.png": 78051,
	"./z.png": 72399
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 63406;

/***/ }),

/***/ 55874:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var map = {
	"./a.svg": 77697,
	"./alpha.svg": 79565,
	"./b.svg": 39744,
	"./beta.svg": 44084,
	"./c.svg": 10087,
	"./d.svg": 71933,
	"./delta.svg": 90610,
	"./deltaUpper.svg": 88594,
	"./e.svg": 23030,
	"./eAlt1.svg": 35060,
	"./f.svg": 96760,
	"./g.svg": 5359,
	"./gamma.svg": 88943,
	"./h.svg": 74394,
	"./hAlt1.svg": 47357,
	"./i.svg": 41732,
	"./iAlt1.svg": 26458,
	"./j.svg": 78504,
	"./k.svg": 6677,
	"./l.svg": 27038,
	"./m.svg": 68838,
	"./n.svg": 16037,
	"./o.svg": 1307,
	"./p.svg": 48760,
	"./q.svg": 71796,
	"./r.svg": 15897,
	"./rAlt1.svg": 99642,
	"./rAlt2.svg": 35699,
	"./s.svg": 28179,
	"./t.svg": 23914,
	"./u.svg": 61716,
	"./v.svg": 43150,
	"./w.svg": 7254,
	"./y.svg": 27498,
	"./z.svg": 26596
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 55874;

/***/ }),

/***/ 77173:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var map = {
	"./a.svg": 30261,
	"./alpha.svg": 56957,
	"./b.svg": 67971,
	"./beta.svg": 9841,
	"./c.svg": 82629,
	"./d.svg": 61294,
	"./delta.svg": 72488,
	"./deltaUpper.svg": 37006,
	"./e.svg": 87287,
	"./eAlt1.svg": 91283,
	"./f.svg": 52576,
	"./g.svg": 4116,
	"./gamma.svg": 78549,
	"./h.svg": 12122,
	"./hAlt2.svg": 24218,
	"./i.svg": 96750,
	"./iAlt1.svg": 59067,
	"./j.svg": 94024,
	"./k.svg": 66790,
	"./l.svg": 48100,
	"./m.svg": 42102,
	"./n.svg": 26455,
	"./o.svg": 38212,
	"./p.svg": 20159,
	"./q.svg": 69954,
	"./r.svg": 66275,
	"./rAlt1.svg": 40869,
	"./rAlt2.svg": 53561,
	"./s.svg": 85630,
	"./t.svg": 51333,
	"./u.svg": 65019,
	"./v.svg": 85464,
	"./w.svg": 28157,
	"./y.svg": 4938,
	"./z.svg": 2673
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 77173;

/***/ }),

/***/ 73949:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var map = {
	"./BoardDecorators/AllowPassing.ts": 9987,
	"./BoardDecorators/AlternativeTeams.ts": 12546,
	"./BoardDecorators/BarePieceRule.ts": 52702,
	"./BoardDecorators/Blindfold.ts": 37010,
	"./BoardDecorators/CaptureTheKing.ts": 1953,
	"./BoardDecorators/Chess960.ts": 89506,
	"./BoardDecorators/Crazyhouse.ts": 43210,
	"./BoardDecorators/DuckChess.ts": 94001,
	"./BoardDecorators/FogOfWar.ts": 55136,
	"./BoardDecorators/ForcedCapture.ts": 66798,
	"./BoardDecorators/GameMetadataRules.ts": 83543,
	"./BoardDecorators/Ghostboard.ts": 23681,
	"./BoardDecorators/ParadigmChess30.ts": 4214,
	"./BoardDecorators/PiecesFaceCenter.ts": 97148,
	"./BoardDecorators/SeirawanSetup.ts": 33340,
	"./BoardDecorators/SelfCheck.ts": 73401,
	"./BoardDecorators/SetupChess.ts": 301,
	"./BoardDecorators/Taboo.ts": 25896,
	"./BoardVariantModules/EngineMoveGeneration/Algorithms/ComfuterEvaluation.ts": 53241,
	"./BoardVariantModules/EngineMoveGeneration/Algorithms/ComfuterEvaluationExtensions.ts": 42751,
	"./BoardVariantModules/EngineMoveGeneration/Algorithms/MixedAlgorithms.ts": 78497,
	"./BoardVariantModules/EngineMoveGeneration/Algorithms/RandomEvaluation.ts": 12160,
	"./BoardVariantModules/EngineMoveGeneration/Algorithms/RandomEvaluationExtensions.ts": 48656,
	"./BoardVariantModules/EngineMoveGeneration/BotInterface.ts": 69283,
	"./BoardVariantModules/InsufficientMaterial/InsufficientMaterialChecker.ts": 14599,
	"./BoardVariantModules/InsufficientMaterial/InsufficientMaterialConstructor.ts": 84926,
	"./BoardVariantModules/InsufficientMaterial/PieceMedianCounter.ts": 7270,
	"./BoardVariantModules/InsufficientMaterial/StateSerializer.ts": 72420,
	"./BoardVariantModules/InsufficientMaterial/Utilities.ts": 63659,
	"./FENDataDecorators/Atomic.ts": 9896,
	"./FENDataDecorators/DeadKingWalking.ts": 83782,
	"./FENDataDecorators/EnPassant.ts": 95143,
	"./FENDataDecorators/FatalCapture.ts": 67870,
	"./FENDataDecorators/FiftyMoveRule.ts": 83433,
	"./FENDataDecorators/Giveaway.ts": 35561,
	"./FENDataDecorators/KingOfTheHill.ts": 22469,
	"./FENDataDecorators/NCheck.ts": 23446,
	"./FENDataDecorators/OppositeMultiplier.ts": 55867,
	"./FENDataDecorators/OppositeSideCastling.ts": 59495,
	"./FENDataDecorators/PiecesGoToBanks.ts": 60705,
	"./FENDataDecorators/PlayForMate.ts": 61252,
	"./FENDataDecorators/PointsForMate.ts": 34208,
	"./FENDataDecorators/StalemateOptions.ts": 47822,
	"./FENDataDecorators/Takeover.ts": 96572,
	"./FENDataDecorators/ThreefoldRepetition.ts": 38260,
	"./PieceControlDecorators/AnyCapture.ts": 93323,
	"./PieceControlDecorators/PromoteTo.ts": 96823,
	"./PieceControlDecorators/PromotionRank.ts": 46393,
	"./PieceControlDecorators/RoyalsCannotCapture.ts": 87247,
	"./PieceControlDecorators/Sideways.ts": 49556,
	"./PieceControlDecorators/Stonewall.ts": 71016,
	"./PieceControlDecorators/Torpedo.ts": 90433
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 73949;

/***/ }),

/***/ 74456:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var map = {
	"./Accordion/Accordion.tsx": 50813,
	"./BoardDisplay/BoardDisplay.tsx": 64570,
	"./CompositesDisplay/CompositesDisplay.tsx": 58952,
	"./GameController/GameController.tsx": 81532,
	"./GameController/GameControllerInternalActions.tsx": 12833,
	"./GameController/GameFENDisplay.tsx": 21892,
	"./GameController/GameVariantTypeDisplay.tsx": 5631,
	"./PercentageDisplay/PercentageDisplay.tsx": 13494,
	"./Sidebar/Sidebar.tsx": 53218,
	"./TemplateInterface.tsx": 59793
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 74456;

/***/ }),

/***/ 58510:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Ix": () => (/* binding */ k),
  "Am": () => (/* binding */ Q)
});

// UNUSED EXPORTS: Bounce, Flip, Icons, Slide, Zoom, collapseToast, cssTransition, useToast, useToastContainer

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(89526);
;// CONCATENATED MODULE: ./node_modules/clsx/dist/clsx.m.js
function r(e){var t,f,n="";if("string"==typeof e||"number"==typeof e)n+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=" "),n+=f);else for(t in e)e[t]&&(n&&(n+=" "),n+=t);return n}function clsx(){for(var e,t,f=0,n="";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=" "),n+=t);return n}/* harmony default export */ var clsx_m = (clsx);
;// CONCATENATED MODULE: ./node_modules/react-toastify/dist/react-toastify.esm.mjs
const u=t=>"number"==typeof t&&!isNaN(t),d=t=>"string"==typeof t,p=t=>"function"==typeof t,m=t=>d(t)||p(t)?t:null,f=t=>(0,react.isValidElement)(t)||d(t)||p(t)||u(t);function g(t,e,n){void 0===n&&(n=300);const{scrollHeight:o,style:s}=t;requestAnimationFrame(()=>{s.minHeight="initial",s.height=o+"px",s.transition=`all ${n}ms`,requestAnimationFrame(()=>{s.height="0",s.padding="0",s.margin="0",setTimeout(e,n)})})}function h(e){let{enter:a,exit:r,appendPosition:i=!1,collapse:l=!0,collapseDuration:c=300}=e;return function(e){let{children:u,position:d,preventExitTransition:p,done:m,nodeRef:f,isIn:h}=e;const y=i?`${a}--${d}`:a,v=i?`${r}--${d}`:r,T=(0,react.useRef)(0);return (0,react.useLayoutEffect)(()=>{const t=f.current,e=y.split(" "),n=o=>{o.target===f.current&&(t.dispatchEvent(new Event("d")),t.removeEventListener("animationend",n),t.removeEventListener("animationcancel",n),0===T.current&&"animationcancel"!==o.type&&t.classList.remove(...e))};t.classList.add(...e),t.addEventListener("animationend",n),t.addEventListener("animationcancel",n)},[]),(0,react.useEffect)(()=>{const t=f.current,e=()=>{t.removeEventListener("animationend",e),l?g(t,m,c):m()};h||(p?e():(T.current=1,t.className+=` ${v}`,t.addEventListener("animationend",e)))},[h]),react.createElement(react.Fragment,null,u)}}function y(t,e){return{content:t.content,containerId:t.props.containerId,id:t.props.toastId,theme:t.props.theme,type:t.props.type,data:t.props.data||{},isLoading:t.props.isLoading,icon:t.props.icon,status:e}}const v={list:new Map,emitQueue:new Map,on(t,e){return this.list.has(t)||this.list.set(t,[]),this.list.get(t).push(e),this},off(t,e){if(e){const n=this.list.get(t).filter(t=>t!==e);return this.list.set(t,n),this}return this.list.delete(t),this},cancelEmit(t){const e=this.emitQueue.get(t);return e&&(e.forEach(clearTimeout),this.emitQueue.delete(t)),this},emit(t){this.list.has(t)&&this.list.get(t).forEach(e=>{const n=setTimeout(()=>{e(...[].slice.call(arguments,1))},0);this.emitQueue.has(t)||this.emitQueue.set(t,[]),this.emitQueue.get(t).push(n)})}},T=e=>{let{theme:n,type:o,...s}=e;return react.createElement("svg",{viewBox:"0 0 24 24",width:"100%",height:"100%",fill:"colored"===n?"currentColor":`var(--toastify-icon-color-${o})`,...s})},E={info:function(e){return react.createElement(T,{...e},react.createElement("path",{d:"M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm.25 5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm2.25 13.5h-4a1 1 0 010-2h.75a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-.75a1 1 0 010-2h1a2 2 0 012 2v4.75a.25.25 0 00.25.25h.75a1 1 0 110 2z"}))},warning:function(e){return react.createElement(T,{...e},react.createElement("path",{d:"M23.32 17.191L15.438 2.184C14.728.833 13.416 0 11.996 0c-1.42 0-2.733.833-3.443 2.184L.533 17.448a4.744 4.744 0 000 4.368C1.243 23.167 2.555 24 3.975 24h16.05C22.22 24 24 22.044 24 19.632c0-.904-.251-1.746-.68-2.44zm-9.622 1.46c0 1.033-.724 1.823-1.698 1.823s-1.698-.79-1.698-1.822v-.043c0-1.028.724-1.822 1.698-1.822s1.698.79 1.698 1.822v.043zm.039-12.285l-.84 8.06c-.057.581-.408.943-.897.943-.49 0-.84-.367-.896-.942l-.84-8.065c-.057-.624.25-1.095.779-1.095h1.91c.528.005.84.476.784 1.1z"}))},success:function(e){return react.createElement(T,{...e},react.createElement("path",{d:"M12 0a12 12 0 1012 12A12.014 12.014 0 0012 0zm6.927 8.2l-6.845 9.289a1.011 1.011 0 01-1.43.188l-4.888-3.908a1 1 0 111.25-1.562l4.076 3.261 6.227-8.451a1 1 0 111.61 1.183z"}))},error:function(e){return react.createElement(T,{...e},react.createElement("path",{d:"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z"}))},spinner:function(){return react.createElement("div",{className:"Toastify__spinner"})}};function C(t){const[,o]=(0,react.useReducer)(t=>t+1,0),[l,c]=(0,react.useState)([]),g=(0,react.useRef)(null),h=(0,react.useRef)(new Map).current,T=t=>-1!==l.indexOf(t),C=(0,react.useRef)({toastKey:1,displayedToast:0,count:0,queue:[],props:t,containerId:null,isToastActive:T,getToast:t=>h.get(t)}).current;function I(t){let{containerId:e}=t;const{limit:n}=C.props;!n||e&&C.containerId!==e||(C.count-=C.queue.length,C.queue=[])}function b(t){c(e=>null==t?[]:e.filter(e=>e!==t))}function _(){const{toastContent:t,toastProps:e,staleId:n}=C.queue.shift();O(t,e,n)}function L(t,n){let{delay:s,staleId:r,...i}=n;if(!f(t)||function(t){return!g.current||C.props.enableMultiContainer&&t.containerId!==C.props.containerId||h.has(t.toastId)&&null==t.updateId}(i))return;const{toastId:l,updateId:c,data:T}=i,{props:I}=C,L=()=>b(l),N=null==c;N&&C.count++;const M={...I,style:I.toastStyle,key:C.toastKey++,...i,toastId:l,updateId:c,data:T,closeToast:L,isIn:!1,className:m(i.className||I.toastClassName),bodyClassName:m(i.bodyClassName||I.bodyClassName),progressClassName:m(i.progressClassName||I.progressClassName),autoClose:!i.isLoading&&(R=i.autoClose,w=I.autoClose,!1===R||u(R)&&R>0?R:w),deleteToast(){const t=y(h.get(l),"removed");h.delete(l),v.emit(4,t);const e=C.queue.length;if(C.count=null==l?C.count-C.displayedToast:C.count-1,C.count<0&&(C.count=0),e>0){const t=null==l?C.props.limit:1;if(1===e||1===t)C.displayedToast++,_();else{const n=t>e?e:t;C.displayedToast=n;for(let t=0;t<n;t++)_()}}else o()}};var R,w;M.iconOut=function(t){let{theme:n,type:o,isLoading:s,icon:r}=t,i=null;const l={theme:n,type:o};return!1===r||(p(r)?i=r(l):(0,react.isValidElement)(r)?i=(0,react.cloneElement)(r,l):d(r)||u(r)?i=r:s?i=E.spinner():(t=>t in E)(o)&&(i=E[o](l))),i}(M),p(i.onOpen)&&(M.onOpen=i.onOpen),p(i.onClose)&&(M.onClose=i.onClose),M.closeButton=I.closeButton,!1===i.closeButton||f(i.closeButton)?M.closeButton=i.closeButton:!0===i.closeButton&&(M.closeButton=!f(I.closeButton)||I.closeButton);let x=t;(0,react.isValidElement)(t)&&!d(t.type)?x=(0,react.cloneElement)(t,{closeToast:L,toastProps:M,data:T}):p(t)&&(x=t({closeToast:L,toastProps:M,data:T})),I.limit&&I.limit>0&&C.count>I.limit&&N?C.queue.push({toastContent:x,toastProps:M,staleId:r}):u(s)?setTimeout(()=>{O(x,M,r)},s):O(x,M,r)}function O(t,e,n){const{toastId:o}=e;n&&h.delete(n);const s={content:t,props:e};h.set(o,s),c(t=>[...t,o].filter(t=>t!==n)),v.emit(4,y(s,null==s.props.updateId?"added":"updated"))}return (0,react.useEffect)(()=>(C.containerId=t.containerId,v.cancelEmit(3).on(0,L).on(1,t=>g.current&&b(t)).on(5,I).emit(2,C),()=>{h.clear(),v.emit(3,C)}),[]),(0,react.useEffect)(()=>{C.props=t,C.isToastActive=T,C.displayedToast=l.length}),{getToastToRender:function(e){const n=new Map,o=Array.from(h.values());return t.newestOnTop&&o.reverse(),o.forEach(t=>{const{position:e}=t.props;n.has(e)||n.set(e,[]),n.get(e).push(t)}),Array.from(n,t=>e(t[0],t[1]))},containerRef:g,isToastActive:T}}function I(t){return t.targetTouches&&t.targetTouches.length>=1?t.targetTouches[0].clientX:t.clientX}function b(t){return t.targetTouches&&t.targetTouches.length>=1?t.targetTouches[0].clientY:t.clientY}function _(t){const[o,a]=(0,react.useState)(!1),[r,l]=(0,react.useState)(!1),c=(0,react.useRef)(null),u=(0,react.useRef)({start:0,x:0,y:0,delta:0,removalDistance:0,canCloseOnClick:!0,canDrag:!1,boundingRect:null,didMove:!1}).current,d=(0,react.useRef)(t),{autoClose:m,pauseOnHover:f,closeToast:g,onClick:h,closeOnClick:y}=t;function v(e){if(t.draggable){"touchstart"===e.nativeEvent.type&&e.nativeEvent.preventDefault(),u.didMove=!1,document.addEventListener("mousemove",_),document.addEventListener("mouseup",L),document.addEventListener("touchmove",_),document.addEventListener("touchend",L);const n=c.current;u.canCloseOnClick=!0,u.canDrag=!0,u.boundingRect=n.getBoundingClientRect(),n.style.transition="",u.x=I(e.nativeEvent),u.y=b(e.nativeEvent),"x"===t.draggableDirection?(u.start=u.x,u.removalDistance=n.offsetWidth*(t.draggablePercent/100)):(u.start=u.y,u.removalDistance=n.offsetHeight*(80===t.draggablePercent?1.5*t.draggablePercent:t.draggablePercent/100))}}function T(e){if(u.boundingRect){const{top:n,bottom:o,left:s,right:a}=u.boundingRect;"touchend"!==e.nativeEvent.type&&t.pauseOnHover&&u.x>=s&&u.x<=a&&u.y>=n&&u.y<=o?C():E()}}function E(){a(!0)}function C(){a(!1)}function _(e){const n=c.current;u.canDrag&&n&&(u.didMove=!0,o&&C(),u.x=I(e),u.y=b(e),u.delta="x"===t.draggableDirection?u.x-u.start:u.y-u.start,u.start!==u.x&&(u.canCloseOnClick=!1),n.style.transform=`translate${t.draggableDirection}(${u.delta}px)`,n.style.opacity=""+(1-Math.abs(u.delta/u.removalDistance)))}function L(){document.removeEventListener("mousemove",_),document.removeEventListener("mouseup",L),document.removeEventListener("touchmove",_),document.removeEventListener("touchend",L);const e=c.current;if(u.canDrag&&u.didMove&&e){if(u.canDrag=!1,Math.abs(u.delta)>u.removalDistance)return l(!0),void t.closeToast();e.style.transition="transform 0.2s, opacity 0.2s",e.style.transform=`translate${t.draggableDirection}(0)`,e.style.opacity="1"}}(0,react.useEffect)(()=>{d.current=t}),(0,react.useEffect)(()=>(c.current&&c.current.addEventListener("d",E,{once:!0}),p(t.onOpen)&&t.onOpen((0,react.isValidElement)(t.children)&&t.children.props),()=>{const t=d.current;p(t.onClose)&&t.onClose((0,react.isValidElement)(t.children)&&t.children.props)}),[]),(0,react.useEffect)(()=>(t.pauseOnFocusLoss&&(document.hasFocus()||C(),window.addEventListener("focus",E),window.addEventListener("blur",C)),()=>{t.pauseOnFocusLoss&&(window.removeEventListener("focus",E),window.removeEventListener("blur",C))}),[t.pauseOnFocusLoss]);const O={onMouseDown:v,onTouchStart:v,onMouseUp:T,onTouchEnd:T};return m&&f&&(O.onMouseEnter=C,O.onMouseLeave=E),y&&(O.onClick=t=>{h&&h(t),u.canCloseOnClick&&g()}),{playToast:E,pauseToast:C,isRunning:o,preventExitTransition:r,toastRef:c,eventHandlers:O}}function L(e){let{closeToast:n,theme:o,ariaLabel:s="close"}=e;return react.createElement("button",{className:`Toastify__close-button Toastify__close-button--${o}`,type:"button",onClick:t=>{t.stopPropagation(),n(t)},"aria-label":s},react.createElement("svg",{"aria-hidden":"true",viewBox:"0 0 14 16"},react.createElement("path",{fillRule:"evenodd",d:"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z"})))}function O(e){let{delay:n,isRunning:o,closeToast:s,type:a="default",hide:r,className:i,style:l,controlledProgress:u,progress:d,rtl:m,isIn:f,theme:g}=e;const h=r||u&&0===d,y={...l,animationDuration:`${n}ms`,animationPlayState:o?"running":"paused",opacity:h?0:1};u&&(y.transform=`scaleX(${d})`);const v=clsx_m("Toastify__progress-bar",u?"Toastify__progress-bar--controlled":"Toastify__progress-bar--animated",`Toastify__progress-bar-theme--${g}`,`Toastify__progress-bar--${a}`,{"Toastify__progress-bar--rtl":m}),T=p(i)?i({rtl:m,type:a,defaultClassName:v}):clsx_m(v,i);return react.createElement("div",{role:"progressbar","aria-hidden":h?"true":"false","aria-label":"notification timer",className:T,style:y,[u&&d>=1?"onTransitionEnd":"onAnimationEnd"]:u&&d<1?null:()=>{f&&s()}})}const N=n=>{const{isRunning:o,preventExitTransition:s,toastRef:r,eventHandlers:i}=_(n),{closeButton:l,children:u,autoClose:d,onClick:m,type:f,hideProgressBar:g,closeToast:h,transition:y,position:v,className:T,style:E,bodyClassName:C,bodyStyle:I,progressClassName:b,progressStyle:N,updateId:M,role:R,progress:w,rtl:x,toastId:$,deleteToast:k,isIn:P,isLoading:B,iconOut:D,closeOnClick:A,theme:z}=n,F=clsx_m("Toastify__toast",`Toastify__toast-theme--${z}`,`Toastify__toast--${f}`,{"Toastify__toast--rtl":x},{"Toastify__toast--close-on-click":A}),H=p(T)?T({rtl:x,position:v,type:f,defaultClassName:F}):clsx_m(F,T),S=!!w||!d,q={closeToast:h,type:f,theme:z};let Q=null;return!1===l||(Q=p(l)?l(q):(0,react.isValidElement)(l)?(0,react.cloneElement)(l,q):L(q)),react.createElement(y,{isIn:P,done:k,position:v,preventExitTransition:s,nodeRef:r},react.createElement("div",{id:$,onClick:m,className:H,...i,style:E,ref:r},react.createElement("div",{...P&&{role:R},className:p(C)?C({type:f}):clsx_m("Toastify__toast-body",C),style:I},null!=D&&react.createElement("div",{className:clsx_m("Toastify__toast-icon",{"Toastify--animate-icon Toastify__zoom-enter":!B})},D),react.createElement("div",null,u)),Q,react.createElement(O,{...M&&!S?{key:`pb-${M}`}:{},rtl:x,theme:z,delay:d,isRunning:o,isIn:P,closeToast:h,hide:g,type:f,style:N,className:b,controlledProgress:S,progress:w||0})))},M=function(t,e){return void 0===e&&(e=!1),{enter:`Toastify--animate Toastify__${t}-enter`,exit:`Toastify--animate Toastify__${t}-exit`,appendPosition:e}},R=h(M("bounce",!0)),w=h(M("slide",!0)),x=h(M("zoom")),$=h(M("flip")),k=(0,react.forwardRef)((e,n)=>{const{getToastToRender:o,containerRef:a,isToastActive:r}=C(e),{className:i,style:l,rtl:u,containerId:d}=e;function f(t){const e=clsx_m("Toastify__toast-container",`Toastify__toast-container--${t}`,{"Toastify__toast-container--rtl":u});return p(i)?i({position:t,rtl:u,defaultClassName:e}):clsx_m(e,m(i))}return (0,react.useEffect)(()=>{n&&(n.current=a.current)},[]),react.createElement("div",{ref:a,className:"Toastify",id:d},o((e,n)=>{const o=n.length?{...l}:{...l,pointerEvents:"none"};return react.createElement("div",{className:f(e),style:o,key:`container-${e}`},n.map((e,o)=>{let{content:s,props:a}=e;return react.createElement(N,{...a,isIn:r(a.toastId),style:{...a.style,"--nth":o+1,"--len":n.length},key:`toast-${a.key}`},s)}))}))});k.displayName="ToastContainer",k.defaultProps={position:"top-right",transition:R,autoClose:5e3,closeButton:L,pauseOnHover:!0,pauseOnFocusLoss:!0,closeOnClick:!0,draggable:!0,draggablePercent:80,draggableDirection:"x",role:"alert",theme:"light"};let P,B=new Map,D=[],A=1;function z(){return""+A++}function F(t){return t&&(d(t.toastId)||u(t.toastId))?t.toastId:z()}function H(t,e){return B.size>0?v.emit(0,t,e):D.push({content:t,options:e}),e.toastId}function S(t,e){return{...e,type:e&&e.type||t,toastId:F(e)}}function q(t){return(e,n)=>H(e,S(t,n))}function Q(t,e){return H(t,S("default",e))}Q.loading=(t,e)=>H(t,S("default",{isLoading:!0,autoClose:!1,closeOnClick:!1,closeButton:!1,draggable:!1,...e})),Q.promise=function(t,e,n){let o,{pending:s,error:a,success:r}=e;s&&(o=d(s)?Q.loading(s,n):Q.loading(s.render,{...n,...s}));const i={isLoading:null,autoClose:null,closeOnClick:null,closeButton:null,draggable:null,delay:100},l=(t,e,s)=>{if(null==e)return void Q.dismiss(o);const a={type:t,...i,...n,data:s},r=d(e)?{render:e}:e;return o?Q.update(o,{...a,...r}):Q(r.render,{...a,...r}),s},c=p(t)?t():t;return c.then(t=>l("success",r,t)).catch(t=>l("error",a,t)),c},Q.success=q("success"),Q.info=q("info"),Q.error=q("error"),Q.warning=q("warning"),Q.warn=Q.warning,Q.dark=(t,e)=>H(t,S("default",{theme:"dark",...e})),Q.dismiss=t=>{B.size>0?v.emit(1,t):D=D.filter(e=>null!=t&&e.options.toastId!==t)},Q.clearWaitingQueue=function(t){return void 0===t&&(t={}),v.emit(5,t)},Q.isActive=t=>{let e=!1;return B.forEach(n=>{n.isToastActive&&n.isToastActive(t)&&(e=!0)}),e},Q.update=function(t,e){void 0===e&&(e={}),setTimeout(()=>{const n=function(t,e){let{containerId:n}=e;const o=B.get(n||P);return o&&o.getToast(t)}(t,e);if(n){const{props:o,content:s}=n,a={...o,...e,toastId:e.toastId||t,updateId:z()};a.toastId!==t&&(a.staleId=t);const r=a.render||s;delete a.render,H(r,a)}},0)},Q.done=t=>{Q.update(t,{progress:1})},Q.onChange=t=>(v.on(4,t),()=>{v.off(4,t)}),Q.POSITION={TOP_LEFT:"top-left",TOP_RIGHT:"top-right",TOP_CENTER:"top-center",BOTTOM_LEFT:"bottom-left",BOTTOM_RIGHT:"bottom-right",BOTTOM_CENTER:"bottom-center"},Q.TYPE={INFO:"info",SUCCESS:"success",WARNING:"warning",ERROR:"error",DEFAULT:"default"},v.on(2,t=>{P=t.containerId||t,B.set(P,t),D.forEach(t=>{v.emit(0,t.content,t.options)}),D=[]}).on(3,t=>{B.delete(t.containerId||t),0===B.size&&v.off(0).off(1).off(5)});
//# sourceMappingURL=react-toastify.esm.mjs.map


/***/ }),

/***/ 17692:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (/* binding */ _extends)
/* harmony export */ });
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };
  return _extends.apply(this, arguments);
}

/***/ }),

/***/ 51498:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": () => (/* binding */ _inheritsLoose)
});

;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return _setPrototypeOf(o, p);
}
;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  _setPrototypeOf(subClass, superClass);
}

/***/ }),

/***/ 71972:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (/* binding */ _objectWithoutPropertiesLoose)
/* harmony export */ });
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get javascript chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference async chunks
/******/ 		__webpack_require__.u = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return "" + chunkId + ".react-app.js";
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript)
/******/ 				scriptUrl = document.currentScript.src;
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) scriptUrl = scripts[scripts.length - 1].src
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		__webpack_require__.b = document.baseURI || self.location.href;
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			179: 0,
/******/ 			270: 0,
/******/ 			714: 0,
/******/ 			822: 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		// no on chunks loaded
/******/ 		
/******/ 		// no jsonp function
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";

// NAMESPACE OBJECT: ./node_modules/micromark/lib/constructs.js
var constructs_namespaceObject = {};
__webpack_require__.r(constructs_namespaceObject);
__webpack_require__.d(constructs_namespaceObject, {
  "attentionMarkers": () => (attentionMarkers),
  "contentInitial": () => (contentInitial),
  "disable": () => (disable),
  "document": () => (constructs_document),
  "flow": () => (constructs_flow),
  "flowInitial": () => (flowInitial),
  "insideSpan": () => (insideSpan),
  "string": () => (constructs_string),
  "text": () => (constructs_text)
});

// NAMESPACE OBJECT: ./node_modules/property-information/lib/util/types.js
var types_namespaceObject = {};
__webpack_require__.r(types_namespaceObject);
__webpack_require__.d(types_namespaceObject, {
  "boolean": () => (types_boolean),
  "booleanish": () => (booleanish),
  "commaOrSpaceSeparated": () => (commaOrSpaceSeparated),
  "commaSeparated": () => (commaSeparated),
  "number": () => (number),
  "overloadedBoolean": () => (overloadedBoolean),
  "spaceSeparated": () => (spaceSeparated)
});

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(89526);
// EXTERNAL MODULE: ./node_modules/react-dom/client.js
var client = __webpack_require__(24470);
;// CONCATENATED MODULE: ./node_modules/bail/index.js
/**
 * Throw a given error.
 *
 * @param {Error|null|undefined} [error]
 *   Maybe error.
 * @returns {asserts error is null|undefined}
 */
function bail(error) {
  if (error) {
    throw error
  }
}

// EXTERNAL MODULE: ./node_modules/is-buffer/index.js
var is_buffer = __webpack_require__(81246);
// EXTERNAL MODULE: ./node_modules/extend/index.js
var extend = __webpack_require__(6067);
;// CONCATENATED MODULE: ./node_modules/is-plain-obj/index.js
function isPlainObject(value) {
	if (Object.prototype.toString.call(value) !== '[object Object]') {
		return false;
	}

	const prototype = Object.getPrototypeOf(value);
	return prototype === null || prototype === Object.prototype;
}

;// CONCATENATED MODULE: ./node_modules/trough/index.js
/**
 * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback
 * @typedef {(...input: Array<any>) => any} Middleware
 *
 * @typedef {(...input: Array<any>) => void} Run
 *   Call all middleware.
 * @typedef {(fn: Middleware) => Pipeline} Use
 *   Add `fn` (middleware) to the list.
 * @typedef {{run: Run, use: Use}} Pipeline
 *   Middleware.
 */

/**
 * Create new middleware.
 *
 * @returns {Pipeline}
 */
function trough() {
  /** @type {Array<Middleware>} */
  const fns = []
  /** @type {Pipeline} */
  const pipeline = {run, use}

  return pipeline

  /** @type {Run} */
  function run(...values) {
    let middlewareIndex = -1
    /** @type {Callback} */
    const callback = values.pop()

    if (typeof callback !== 'function') {
      throw new TypeError('Expected function as last argument, not ' + callback)
    }

    next(null, ...values)

    /**
     * Run the next `fn`, or we’re done.
     *
     * @param {Error|null|undefined} error
     * @param {Array<any>} output
     */
    function next(error, ...output) {
      const fn = fns[++middlewareIndex]
      let index = -1

      if (error) {
        callback(error)
        return
      }

      // Copy non-nullish input into values.
      while (++index < values.length) {
        if (output[index] === null || output[index] === undefined) {
          output[index] = values[index]
        }
      }

      // Save the newly created `output` for the next call.
      values = output

      // Next or done.
      if (fn) {
        wrap(fn, next)(...output)
      } else {
        callback(null, ...output)
      }
    }
  }

  /** @type {Use} */
  function use(middelware) {
    if (typeof middelware !== 'function') {
      throw new TypeError(
        'Expected `middelware` to be a function, not ' + middelware
      )
    }

    fns.push(middelware)
    return pipeline
  }
}

/**
 * Wrap `middleware`.
 * Can be sync or async; return a promise, receive a callback, or return new
 * values and errors.
 *
 * @param {Middleware} middleware
 * @param {Callback} callback
 */
function wrap(middleware, callback) {
  /** @type {boolean} */
  let called

  return wrapped

  /**
   * Call `middleware`.
   * @this {any}
   * @param {Array<any>} parameters
   * @returns {void}
   */
  function wrapped(...parameters) {
    const fnExpectsCallback = middleware.length > parameters.length
    /** @type {any} */
    let result

    if (fnExpectsCallback) {
      parameters.push(done)
    }

    try {
      result = middleware.apply(this, parameters)
    } catch (error) {
      const exception = /** @type {Error} */ (error)

      // Well, this is quite the pickle.
      // `middleware` received a callback and called it synchronously, but that
      // threw an error.
      // The only thing left to do is to throw the thing instead.
      if (fnExpectsCallback && called) {
        throw exception
      }

      return done(exception)
    }

    if (!fnExpectsCallback) {
      if (result instanceof Promise) {
        result.then(then, done)
      } else if (result instanceof Error) {
        done(result)
      } else {
        then(result)
      }
    }
  }

  /**
   * Call `callback`, only once.
   * @type {Callback}
   */
  function done(error, ...output) {
    if (!called) {
      called = true
      callback(error, ...output)
    }
  }

  /**
   * Call `done` with one value.
   *
   * @param {any} [value]
   */
  function then(value) {
    done(null, value)
  }
}

;// CONCATENATED MODULE: ./node_modules/unist-util-stringify-position/index.js
/**
 * @typedef {import('unist').Point} Point
 * @typedef {import('unist').Node} Node
 * @typedef {import('unist').Position} Position
 * @typedef {object & {type: string, position?: Position|undefined}} NodeLike
 */

/**
 * Stringify one point, a position (start and end points), or a node’s
 * positional information.
 *
 * @param {Node|NodeLike|Position|Point|null} [value]
 * @returns {string}
 */
function stringifyPosition(value) {
  // Nothing.
  if (!value || typeof value !== 'object') {
    return ''
  }

  // Node.
  if ('position' in value || 'type' in value) {
    return position(value.position)
  }

  // Position.
  if ('start' in value || 'end' in value) {
    return position(value)
  }

  // Point.
  if ('line' in value || 'column' in value) {
    return point(value)
  }

  // ?
  return ''
}

/**
 * @param {Point|undefined} point
 * @returns {string}
 */
function point(point) {
  return index(point && point.line) + ':' + index(point && point.column)
}

/**
 * @param {Position|undefined} pos
 * @returns {string}
 */
function position(pos) {
  return point(pos && pos.start) + '-' + point(pos && pos.end)
}

/**
 * @param {number|undefined} value
 * @returns {number}
 */
function index(value) {
  return value && typeof value === 'number' ? value : 1
}

;// CONCATENATED MODULE: ./node_modules/vfile-message/index.js
/**
 * @typedef {import('unist').Node} Node
 * @typedef {import('unist').Position} Position
 * @typedef {import('unist').Point} Point
 * @typedef {object & {type: string, position?: Position|undefined}} NodeLike
 */



class VFileMessage extends Error {
  /**
   * Constructor of a message for `reason` at `place` from `origin`.
   * When an error is passed in as `reason`, copies the `stack`.
   *
   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.
   * @param {Node|NodeLike|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).
   * @param {string} [origin] Place in code the message originates from (`string`, optional).
   */
  constructor(reason, place, origin) {
    /** @type {[string|null, string|null]} */
    const parts = [null, null]
    /** @type {Position} */
    let position = {
      // @ts-expect-error: we always follows the structure of `position`.
      start: {line: null, column: null},
      // @ts-expect-error: "
      end: {line: null, column: null}
    }

    super()

    if (typeof place === 'string') {
      origin = place
      place = undefined
    }

    if (typeof origin === 'string') {
      const index = origin.indexOf(':')

      if (index === -1) {
        parts[1] = origin
      } else {
        parts[0] = origin.slice(0, index)
        parts[1] = origin.slice(index + 1)
      }
    }

    if (place) {
      // Node.
      if ('type' in place || 'position' in place) {
        if (place.position) {
          position = place.position
        }
      }
      // Position.
      else if ('start' in place || 'end' in place) {
        position = place
      }
      // Point.
      else if ('line' in place || 'column' in place) {
        position.start = place
      }
    }

    // Fields from `Error`
    this.name = stringifyPosition(place) || '1:1'
    this.message = typeof reason === 'object' ? reason.message : reason
    this.stack = typeof reason === 'object' ? reason.stack : ''

    /**
     * Reason for message.
     * @type {string}
     */
    this.reason = this.message
    /**
     * If true, marks associated file as no longer processable.
     * @type {boolean?}
     */
    // eslint-disable-next-line no-unused-expressions
    this.fatal
    /**
     * Starting line of error.
     * @type {number?}
     */
    this.line = position.start.line
    /**
     * Starting column of error.
     * @type {number?}
     */
    this.column = position.start.column
    /**
     * Namespace of warning.
     * @type {string?}
     */
    this.source = parts[0]
    /**
     * Category of message.
     * @type {string?}
     */
    this.ruleId = parts[1]
    /**
     * Full range information, when available.
     * Has start and end properties, both set to an object with line and column, set to number?.
     * @type {Position?}
     */
    this.position = position

    // The following fields are “well known”.
    // Not standard.
    // Feel free to add other non-standard fields to your messages.

    /* eslint-disable no-unused-expressions */
    /**
     * You can use this to specify the source value that’s being reported, which
     * is deemed incorrect.
     * @type {string?}
     */
    this.actual
    /**
     * You can use this to suggest values that should be used instead of
     * `actual`, one or more values that are deemed as acceptable.
     * @type {Array<string>?}
     */
    this.expected
    /**
     * You may add a file property with a path of a file (used throughout the VFile ecosystem).
     * @type {string?}
     */
    this.file
    /**
     * You may add a url property with a link to documentation for the message.
     * @type {string?}
     */
    this.url
    /**
     * You may add a note property with a long form description of the message (supported by vfile-reporter).
     * @type {string?}
     */
    this.note
    /* eslint-enable no-unused-expressions */
  }
}

VFileMessage.prototype.file = ''
VFileMessage.prototype.name = ''
VFileMessage.prototype.reason = ''
VFileMessage.prototype.message = ''
VFileMessage.prototype.stack = ''
VFileMessage.prototype.fatal = null
VFileMessage.prototype.column = null
VFileMessage.prototype.line = null
VFileMessage.prototype.source = null
VFileMessage.prototype.ruleId = null
VFileMessage.prototype.position = null

;// CONCATENATED MODULE: ./node_modules/vfile/lib/minpath.browser.js
// A derivative work based on:
// <https://github.com/browserify/path-browserify>.
// Which is licensed:
//
// MIT License
//
// Copyright (c) 2013 James Halliday
//
// Permission is hereby granted, free of charge, to any person obtaining a copy of
// this software and associated documentation files (the "Software"), to deal in
// the Software without restriction, including without limitation the rights to
// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
// the Software, and to permit persons to whom the Software is furnished to do so,
// subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
// A derivative work based on:
//
// Parts of that are extracted from Node’s internal `path` module:
// <https://github.com/nodejs/node/blob/master/lib/path.js>.
// Which is licensed:
//
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

const path = {basename, dirname, extname, join, sep: '/'}

/* eslint-disable max-depth, complexity */

/**
 * @param {string} path
 * @param {string} [ext]
 * @returns {string}
 */
function basename(path, ext) {
  if (ext !== undefined && typeof ext !== 'string') {
    throw new TypeError('"ext" argument must be a string')
  }

  assertPath(path)
  let start = 0
  let end = -1
  let index = path.length
  /** @type {boolean|undefined} */
  let seenNonSlash

  if (ext === undefined || ext.length === 0 || ext.length > path.length) {
    while (index--) {
      if (path.charCodeAt(index) === 47 /* `/` */) {
        // If we reached a path separator that was not part of a set of path
        // separators at the end of the string, stop now.
        if (seenNonSlash) {
          start = index + 1
          break
        }
      } else if (end < 0) {
        // We saw the first non-path separator, mark this as the end of our
        // path component.
        seenNonSlash = true
        end = index + 1
      }
    }

    return end < 0 ? '' : path.slice(start, end)
  }

  if (ext === path) {
    return ''
  }

  let firstNonSlashEnd = -1
  let extIndex = ext.length - 1

  while (index--) {
    if (path.charCodeAt(index) === 47 /* `/` */) {
      // If we reached a path separator that was not part of a set of path
      // separators at the end of the string, stop now.
      if (seenNonSlash) {
        start = index + 1
        break
      }
    } else {
      if (firstNonSlashEnd < 0) {
        // We saw the first non-path separator, remember this index in case
        // we need it if the extension ends up not matching.
        seenNonSlash = true
        firstNonSlashEnd = index + 1
      }

      if (extIndex > -1) {
        // Try to match the explicit extension.
        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {
          if (extIndex < 0) {
            // We matched the extension, so mark this as the end of our path
            // component
            end = index
          }
        } else {
          // Extension does not match, so our result is the entire path
          // component
          extIndex = -1
          end = firstNonSlashEnd
        }
      }
    }
  }

  if (start === end) {
    end = firstNonSlashEnd
  } else if (end < 0) {
    end = path.length
  }

  return path.slice(start, end)
}

/**
 * @param {string} path
 * @returns {string}
 */
function dirname(path) {
  assertPath(path)

  if (path.length === 0) {
    return '.'
  }

  let end = -1
  let index = path.length
  /** @type {boolean|undefined} */
  let unmatchedSlash

  // Prefix `--` is important to not run on `0`.
  while (--index) {
    if (path.charCodeAt(index) === 47 /* `/` */) {
      if (unmatchedSlash) {
        end = index
        break
      }
    } else if (!unmatchedSlash) {
      // We saw the first non-path separator
      unmatchedSlash = true
    }
  }

  return end < 0
    ? path.charCodeAt(0) === 47 /* `/` */
      ? '/'
      : '.'
    : end === 1 && path.charCodeAt(0) === 47 /* `/` */
    ? '//'
    : path.slice(0, end)
}

/**
 * @param {string} path
 * @returns {string}
 */
function extname(path) {
  assertPath(path)

  let index = path.length

  let end = -1
  let startPart = 0
  let startDot = -1
  // Track the state of characters (if any) we see before our first dot and
  // after any path separator we find.
  let preDotState = 0
  /** @type {boolean|undefined} */
  let unmatchedSlash

  while (index--) {
    const code = path.charCodeAt(index)

    if (code === 47 /* `/` */) {
      // If we reached a path separator that was not part of a set of path
      // separators at the end of the string, stop now.
      if (unmatchedSlash) {
        startPart = index + 1
        break
      }

      continue
    }

    if (end < 0) {
      // We saw the first non-path separator, mark this as the end of our
      // extension.
      unmatchedSlash = true
      end = index + 1
    }

    if (code === 46 /* `.` */) {
      // If this is our first dot, mark it as the start of our extension.
      if (startDot < 0) {
        startDot = index
      } else if (preDotState !== 1) {
        preDotState = 1
      }
    } else if (startDot > -1) {
      // We saw a non-dot and non-path separator before our dot, so we should
      // have a good chance at having a non-empty extension.
      preDotState = -1
    }
  }

  if (
    startDot < 0 ||
    end < 0 ||
    // We saw a non-dot character immediately before the dot.
    preDotState === 0 ||
    // The (right-most) trimmed path component is exactly `..`.
    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)
  ) {
    return ''
  }

  return path.slice(startDot, end)
}

/**
 * @param {Array<string>} segments
 * @returns {string}
 */
function join(...segments) {
  let index = -1
  /** @type {string|undefined} */
  let joined

  while (++index < segments.length) {
    assertPath(segments[index])

    if (segments[index]) {
      joined =
        joined === undefined ? segments[index] : joined + '/' + segments[index]
    }
  }

  return joined === undefined ? '.' : normalize(joined)
}

/**
 * Note: `normalize` is not exposed as `path.normalize`, so some code is
 * manually removed from it.
 *
 * @param {string} path
 * @returns {string}
 */
function normalize(path) {
  assertPath(path)

  const absolute = path.charCodeAt(0) === 47 /* `/` */

  // Normalize the path according to POSIX rules.
  let value = normalizeString(path, !absolute)

  if (value.length === 0 && !absolute) {
    value = '.'
  }

  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {
    value += '/'
  }

  return absolute ? '/' + value : value
}

/**
 * Resolve `.` and `..` elements in a path with directory names.
 *
 * @param {string} path
 * @param {boolean} allowAboveRoot
 * @returns {string}
 */
function normalizeString(path, allowAboveRoot) {
  let result = ''
  let lastSegmentLength = 0
  let lastSlash = -1
  let dots = 0
  let index = -1
  /** @type {number|undefined} */
  let code
  /** @type {number} */
  let lastSlashIndex

  while (++index <= path.length) {
    if (index < path.length) {
      code = path.charCodeAt(index)
    } else if (code === 47 /* `/` */) {
      break
    } else {
      code = 47 /* `/` */
    }

    if (code === 47 /* `/` */) {
      if (lastSlash === index - 1 || dots === 1) {
        // Empty.
      } else if (lastSlash !== index - 1 && dots === 2) {
        if (
          result.length < 2 ||
          lastSegmentLength !== 2 ||
          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||
          result.charCodeAt(result.length - 2) !== 46 /* `.` */
        ) {
          if (result.length > 2) {
            lastSlashIndex = result.lastIndexOf('/')

            if (lastSlashIndex !== result.length - 1) {
              if (lastSlashIndex < 0) {
                result = ''
                lastSegmentLength = 0
              } else {
                result = result.slice(0, lastSlashIndex)
                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')
              }

              lastSlash = index
              dots = 0
              continue
            }
          } else if (result.length > 0) {
            result = ''
            lastSegmentLength = 0
            lastSlash = index
            dots = 0
            continue
          }
        }

        if (allowAboveRoot) {
          result = result.length > 0 ? result + '/..' : '..'
          lastSegmentLength = 2
        }
      } else {
        if (result.length > 0) {
          result += '/' + path.slice(lastSlash + 1, index)
        } else {
          result = path.slice(lastSlash + 1, index)
        }

        lastSegmentLength = index - lastSlash - 1
      }

      lastSlash = index
      dots = 0
    } else if (code === 46 /* `.` */ && dots > -1) {
      dots++
    } else {
      dots = -1
    }
  }

  return result
}

/**
 * @param {string} path
 */
function assertPath(path) {
  if (typeof path !== 'string') {
    throw new TypeError(
      'Path must be a string. Received ' + JSON.stringify(path)
    )
  }
}

/* eslint-enable max-depth, complexity */

;// CONCATENATED MODULE: ./node_modules/vfile/lib/minproc.browser.js
// Somewhat based on:
// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.
// But I don’t think one tiny line of code can be copyrighted. 😅
const proc = {cwd}

function cwd() {
  return '/'
}

;// CONCATENATED MODULE: ./node_modules/vfile/lib/minurl.shared.js
/**
 * @typedef URL
 * @property {string} hash
 * @property {string} host
 * @property {string} hostname
 * @property {string} href
 * @property {string} origin
 * @property {string} password
 * @property {string} pathname
 * @property {string} port
 * @property {string} protocol
 * @property {string} search
 * @property {any} searchParams
 * @property {string} username
 * @property {() => string} toString
 * @property {() => string} toJSON
 */

/**
 * @param {unknown} fileURLOrPath
 * @returns {fileURLOrPath is URL}
 */
// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>
function isUrl(fileURLOrPath) {
  return (
    fileURLOrPath !== null &&
    typeof fileURLOrPath === 'object' &&
    // @ts-expect-error: indexable.
    fileURLOrPath.href &&
    // @ts-expect-error: indexable.
    fileURLOrPath.origin
  )
}

;// CONCATENATED MODULE: ./node_modules/vfile/lib/minurl.browser.js
/// <reference lib="dom" />



// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>

/**
 * @param {string|URL} path
 */
function urlToPath(path) {
  if (typeof path === 'string') {
    path = new URL(path)
  } else if (!isUrl(path)) {
    /** @type {NodeJS.ErrnoException} */
    const error = new TypeError(
      'The "path" argument must be of type string or an instance of URL. Received `' +
        path +
        '`'
    )
    error.code = 'ERR_INVALID_ARG_TYPE'
    throw error
  }

  if (path.protocol !== 'file:') {
    /** @type {NodeJS.ErrnoException} */
    const error = new TypeError('The URL must be of scheme file')
    error.code = 'ERR_INVALID_URL_SCHEME'
    throw error
  }

  return getPathFromURLPosix(path)
}

/**
 * @param {URL} url
 */
function getPathFromURLPosix(url) {
  if (url.hostname !== '') {
    /** @type {NodeJS.ErrnoException} */
    const error = new TypeError(
      'File URL host must be "localhost" or empty on darwin'
    )
    error.code = 'ERR_INVALID_FILE_URL_HOST'
    throw error
  }

  const pathname = url.pathname
  let index = -1

  while (++index < pathname.length) {
    if (
      pathname.charCodeAt(index) === 37 /* `%` */ &&
      pathname.charCodeAt(index + 1) === 50 /* `2` */
    ) {
      const third = pathname.charCodeAt(index + 2)
      if (third === 70 /* `F` */ || third === 102 /* `f` */) {
        /** @type {NodeJS.ErrnoException} */
        const error = new TypeError(
          'File URL path must not include encoded / characters'
        )
        error.code = 'ERR_INVALID_FILE_URL_PATH'
        throw error
      }
    }
  }

  return decodeURIComponent(pathname)
}



;// CONCATENATED MODULE: ./node_modules/vfile/lib/index.js
/**
 * @typedef {import('unist').Node} Node
 * @typedef {import('unist').Position} Position
 * @typedef {import('unist').Point} Point
 * @typedef {Record<string, unknown> & {type: string, position?: Position|undefined}} NodeLike
 * @typedef {import('./minurl.shared.js').URL} URL
 * @typedef {import('../index.js').Data} Data
 * @typedef {import('../index.js').Value} Value
 *
 * @typedef {'ascii'|'utf8'|'utf-8'|'utf16le'|'ucs2'|'ucs-2'|'base64'|'base64url'|'latin1'|'binary'|'hex'} BufferEncoding
 *   Encodings supported by the buffer class.
 *   This is a copy of the typing from Node, copied to prevent Node globals from
 *   being needed.
 *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>
 *
 * @typedef {Value|Options|VFile|URL} Compatible
 *   Things that can be passed to the constructor.
 *
 * @typedef VFileCoreOptions
 * @property {Value} [value]
 * @property {string} [cwd]
 * @property {Array<string>} [history]
 * @property {string|URL} [path]
 * @property {string} [basename]
 * @property {string} [stem]
 * @property {string} [extname]
 * @property {string} [dirname]
 * @property {Data} [data]
 *
 * @typedef Map
 *   Raw source map, see:
 *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.
 * @property {number} version
 * @property {Array<string>} sources
 * @property {Array<string>} names
 * @property {string|undefined} [sourceRoot]
 * @property {Array<string>|undefined} [sourcesContent]
 * @property {string} mappings
 * @property {string} file
 *
 * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options
 *   Configuration: a bunch of keys that will be shallow copied over to the new
 *   file.
 *
 * @typedef {Record<string, unknown>} ReporterSettings
 * @typedef {<T = ReporterSettings>(files: Array<VFile>, options: T) => string} Reporter
 */







// Order of setting (least specific to most), we need this because otherwise
// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a
// stem can be set.
const order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']

class VFile {
  /**
   * Create a new virtual file.
   *
   * If `options` is `string` or `Buffer`, it’s treated as `{value: options}`.
   * If `options` is a `URL`, it’s treated as `{path: options}`.
   * If `options` is a `VFile`, shallow copies its data over to the new file.
   * All fields in `options` are set on the newly created `VFile`.
   *
   * Path related fields are set in the following order (least specific to
   * most specific): `history`, `path`, `basename`, `stem`, `extname`,
   * `dirname`.
   *
   * It’s not possible to set either `dirname` or `extname` without setting
   * either `history`, `path`, `basename`, or `stem` as well.
   *
   * @param {Compatible} [value]
   */
  constructor(value) {
    /** @type {Options} */
    let options

    if (!value) {
      options = {}
    } else if (typeof value === 'string' || is_buffer(value)) {
      // @ts-expect-error Looks like a buffer.
      options = {value}
    } else if (isUrl(value)) {
      options = {path: value}
    } else {
      // @ts-expect-error Looks like file or options.
      options = value
    }

    /**
     * Place to store custom information (default: `{}`).
     * It’s OK to store custom data directly on the file but moving it to
     * `data` is recommended.
     * @type {Data}
     */
    this.data = {}

    /**
     * List of messages associated with the file.
     * @type {Array<VFileMessage>}
     */
    this.messages = []

    /**
     * List of filepaths the file moved between.
     * The first is the original path and the last is the current path.
     * @type {Array<string>}
     */
    this.history = []

    /**
     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).
     * @type {string}
     */
    this.cwd = proc.cwd()

    /* eslint-disable no-unused-expressions */
    /**
     * Raw value.
     * @type {Value}
     */
    this.value

    // The below are non-standard, they are “well-known”.
    // As in, used in several tools.

    /**
     * Whether a file was saved to disk.
     * This is used by vfile reporters.
     * @type {boolean}
     */
    this.stored

    /**
     * Sometimes files have a non-string, compiled, representation.
     * This can be stored in the `result` field.
     * One example is when turning markdown into React nodes.
     * This is used by unified to store non-string results.
     * @type {unknown}
     */
    this.result

    /**
     * Sometimes files have a source map associated with them.
     * This can be stored in the `map` field.
     * This should be a `Map` type, which is equivalent to the `RawSourceMap`
     * type from the `source-map` module.
     * @type {Map|undefined}
     */
    this.map
    /* eslint-enable no-unused-expressions */

    // Set path related properties in the correct order.
    let index = -1

    while (++index < order.length) {
      const prop = order[index]

      // Note: we specifically use `in` instead of `hasOwnProperty` to accept
      // `vfile`s too.
      if (prop in options && options[prop] !== undefined) {
        // @ts-expect-error: TS is confused by the different types for `history`.
        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]
      }
    }

    /** @type {string} */
    let prop

    // Set non-path related properties.
    for (prop in options) {
      // @ts-expect-error: fine to set other things.
      if (!order.includes(prop)) this[prop] = options[prop]
    }
  }

  /**
   * Get the full path (example: `'~/index.min.js'`).
   * @returns {string}
   */
  get path() {
    return this.history[this.history.length - 1]
  }

  /**
   * Set the full path (example: `'~/index.min.js'`).
   * Cannot be nullified.
   * You can set a file URL (a `URL` object with a `file:` protocol) which will
   * be turned into a path with `url.fileURLToPath`.
   * @param {string|URL} path
   */
  set path(path) {
    if (isUrl(path)) {
      path = urlToPath(path)
    }

    assertNonEmpty(path, 'path')

    if (this.path !== path) {
      this.history.push(path)
    }
  }

  /**
   * Get the parent path (example: `'~'`).
   */
  get dirname() {
    return typeof this.path === 'string' ? path.dirname(this.path) : undefined
  }

  /**
   * Set the parent path (example: `'~'`).
   * Cannot be set if there’s no `path` yet.
   */
  set dirname(dirname) {
    lib_assertPath(this.basename, 'dirname')
    this.path = path.join(dirname || '', this.basename)
  }

  /**
   * Get the basename (including extname) (example: `'index.min.js'`).
   */
  get basename() {
    return typeof this.path === 'string' ? path.basename(this.path) : undefined
  }

  /**
   * Set basename (including extname) (`'index.min.js'`).
   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\'`
   * on windows).
   * Cannot be nullified (use `file.path = file.dirname` instead).
   */
  set basename(basename) {
    assertNonEmpty(basename, 'basename')
    assertPart(basename, 'basename')
    this.path = path.join(this.dirname || '', basename)
  }

  /**
   * Get the extname (including dot) (example: `'.js'`).
   */
  get extname() {
    return typeof this.path === 'string' ? path.extname(this.path) : undefined
  }

  /**
   * Set the extname (including dot) (example: `'.js'`).
   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\'`
   * on windows).
   * Cannot be set if there’s no `path` yet.
   */
  set extname(extname) {
    assertPart(extname, 'extname')
    lib_assertPath(this.dirname, 'extname')

    if (extname) {
      if (extname.charCodeAt(0) !== 46 /* `.` */) {
        throw new Error('`extname` must start with `.`')
      }

      if (extname.includes('.', 1)) {
        throw new Error('`extname` cannot contain multiple dots')
      }
    }

    this.path = path.join(this.dirname, this.stem + (extname || ''))
  }

  /**
   * Get the stem (basename w/o extname) (example: `'index.min'`).
   */
  get stem() {
    return typeof this.path === 'string'
      ? path.basename(this.path, this.extname)
      : undefined
  }

  /**
   * Set the stem (basename w/o extname) (example: `'index.min'`).
   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\'`
   * on windows).
   * Cannot be nullified (use `file.path = file.dirname` instead).
   */
  set stem(stem) {
    assertNonEmpty(stem, 'stem')
    assertPart(stem, 'stem')
    this.path = path.join(this.dirname || '', stem + (this.extname || ''))
  }

  /**
   * Serialize the file.
   *
   * @param {BufferEncoding} [encoding='utf8']
   *   When `value` is a `Buffer`, `encoding` is a character encoding to
   *   understand it as (default: `'utf8'`).
   * @returns {string}
   *   Serialized file.
   */
  toString(encoding) {
    return (this.value || '').toString(encoding)
  }

  /**
   * Constructs a new `VFileMessage`, where `fatal` is set to `false`, and
   * associates it with the file by adding it to `vfile.messages` and setting
   * `message.file` to the current filepath.
   *
   * @param {string|Error} reason
   *   Human readable reason for the message, uses the stack and message of the error if given.
   * @param {Node|NodeLike|Position|Point} [place]
   *   Place where the message occurred in the file.
   * @param {string} [origin]
   *   Computer readable reason for the message
   * @returns {VFileMessage}
   *   Message.
   */
  message(reason, place, origin) {
    const message = new VFileMessage(reason, place, origin)

    if (this.path) {
      message.name = this.path + ':' + message.name
      message.file = this.path
    }

    message.fatal = false

    this.messages.push(message)

    return message
  }

  /**
   * Like `VFile#message()`, but associates an informational message where
   * `fatal` is set to `null`.
   *
   * @param {string|Error} reason
   *   Human readable reason for the message, uses the stack and message of the error if given.
   * @param {Node|NodeLike|Position|Point} [place]
   *   Place where the message occurred in the file.
   * @param {string} [origin]
   *   Computer readable reason for the message
   * @returns {VFileMessage}
   *   Message.
   */
  info(reason, place, origin) {
    const message = this.message(reason, place, origin)

    message.fatal = null

    return message
  }

  /**
   * Like `VFile#message()`, but associates a fatal message where `fatal` is
   * set to `true`, and then immediately throws it.
   *
   * > 👉 **Note**: a fatal error means that a file is no longer processable.
   *
   * @param {string|Error} reason
   *   Human readable reason for the message, uses the stack and message of the error if given.
   * @param {Node|NodeLike|Position|Point} [place]
   *   Place where the message occurred in the file.
   * @param {string} [origin]
   *   Computer readable reason for the message
   * @returns {never}
   *   Message.
   */
  fail(reason, place, origin) {
    const message = this.message(reason, place, origin)

    message.fatal = true

    throw message
  }
}

/**
 * Assert that `part` is not a path (as in, does not contain `path.sep`).
 *
 * @param {string|undefined} part
 * @param {string} name
 * @returns {void}
 */
function assertPart(part, name) {
  if (part && part.includes(path.sep)) {
    throw new Error(
      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'
    )
  }
}

/**
 * Assert that `part` is not empty.
 *
 * @param {string|undefined} part
 * @param {string} name
 * @returns {asserts part is string}
 */
function assertNonEmpty(part, name) {
  if (!part) {
    throw new Error('`' + name + '` cannot be empty')
  }
}

/**
 * Assert `path` exists.
 *
 * @param {string|undefined} path
 * @param {string} name
 * @returns {asserts path is string}
 */
function lib_assertPath(path, name) {
  if (!path) {
    throw new Error('Setting `' + name + '` requires `path` to be set too')
  }
}

;// CONCATENATED MODULE: ./node_modules/unified/lib/index.js
/**
 * @typedef {import('unist').Node} Node
 * @typedef {import('vfile').VFileCompatible} VFileCompatible
 * @typedef {import('vfile').VFileValue} VFileValue
 * @typedef {import('..').Processor} Processor
 * @typedef {import('..').Plugin} Plugin
 * @typedef {import('..').Preset} Preset
 * @typedef {import('..').Pluggable} Pluggable
 * @typedef {import('..').PluggableList} PluggableList
 * @typedef {import('..').Transformer} Transformer
 * @typedef {import('..').Parser} Parser
 * @typedef {import('..').Compiler} Compiler
 * @typedef {import('..').RunCallback} RunCallback
 * @typedef {import('..').ProcessCallback} ProcessCallback
 *
 * @typedef Context
 * @property {Node} tree
 * @property {VFile} file
 */








// Expose a frozen processor.
const unified = base().freeze()

const own = {}.hasOwnProperty

// Function to create the first processor.
/**
 * @returns {Processor}
 */
function base() {
  const transformers = trough()
  /** @type {Processor['attachers']} */
  const attachers = []
  /** @type {Record<string, unknown>} */
  let namespace = {}
  /** @type {boolean|undefined} */
  let frozen
  let freezeIndex = -1

  // Data management.
  // @ts-expect-error: overloads are handled.
  processor.data = data
  processor.Parser = undefined
  processor.Compiler = undefined

  // Lock.
  processor.freeze = freeze

  // Plugins.
  processor.attachers = attachers
  // @ts-expect-error: overloads are handled.
  processor.use = use

  // API.
  processor.parse = parse
  processor.stringify = stringify
  // @ts-expect-error: overloads are handled.
  processor.run = run
  processor.runSync = runSync
  // @ts-expect-error: overloads are handled.
  processor.process = process
  processor.processSync = processSync

  // Expose.
  return processor

  // Create a new processor based on the processor in the current scope.
  /** @type {Processor} */
  function processor() {
    const destination = base()
    let index = -1

    while (++index < attachers.length) {
      destination.use(...attachers[index])
    }

    destination.data(extend(true, {}, namespace))

    return destination
  }

  /**
   * @param {string|Record<string, unknown>} [key]
   * @param {unknown} [value]
   * @returns {unknown}
   */
  function data(key, value) {
    if (typeof key === 'string') {
      // Set `key`.
      if (arguments.length === 2) {
        assertUnfrozen('data', frozen)
        namespace[key] = value
        return processor
      }

      // Get `key`.
      return (own.call(namespace, key) && namespace[key]) || null
    }

    // Set space.
    if (key) {
      assertUnfrozen('data', frozen)
      namespace = key
      return processor
    }

    // Get space.
    return namespace
  }

  /** @type {Processor['freeze']} */
  function freeze() {
    if (frozen) {
      return processor
    }

    while (++freezeIndex < attachers.length) {
      const [attacher, ...options] = attachers[freezeIndex]

      if (options[0] === false) {
        continue
      }

      if (options[0] === true) {
        options[0] = undefined
      }

      /** @type {Transformer|void} */
      const transformer = attacher.call(processor, ...options)

      if (typeof transformer === 'function') {
        transformers.use(transformer)
      }
    }

    frozen = true
    freezeIndex = Number.POSITIVE_INFINITY

    return processor
  }

  /**
   * @param {Pluggable|null|undefined} [value]
   * @param {...unknown} options
   * @returns {Processor}
   */
  function use(value, ...options) {
    /** @type {Record<string, unknown>|undefined} */
    let settings

    assertUnfrozen('use', frozen)

    if (value === null || value === undefined) {
      // Empty.
    } else if (typeof value === 'function') {
      addPlugin(value, ...options)
    } else if (typeof value === 'object') {
      if (Array.isArray(value)) {
        addList(value)
      } else {
        addPreset(value)
      }
    } else {
      throw new TypeError('Expected usable value, not `' + value + '`')
    }

    if (settings) {
      namespace.settings = Object.assign(namespace.settings || {}, settings)
    }

    return processor

    /**
     * @param {import('..').Pluggable<unknown[]>} value
     * @returns {void}
     */
    function add(value) {
      if (typeof value === 'function') {
        addPlugin(value)
      } else if (typeof value === 'object') {
        if (Array.isArray(value)) {
          const [plugin, ...options] = value
          addPlugin(plugin, ...options)
        } else {
          addPreset(value)
        }
      } else {
        throw new TypeError('Expected usable value, not `' + value + '`')
      }
    }

    /**
     * @param {Preset} result
     * @returns {void}
     */
    function addPreset(result) {
      addList(result.plugins)

      if (result.settings) {
        settings = Object.assign(settings || {}, result.settings)
      }
    }

    /**
     * @param {PluggableList|null|undefined} [plugins]
     * @returns {void}
     */
    function addList(plugins) {
      let index = -1

      if (plugins === null || plugins === undefined) {
        // Empty.
      } else if (Array.isArray(plugins)) {
        while (++index < plugins.length) {
          const thing = plugins[index]
          add(thing)
        }
      } else {
        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')
      }
    }

    /**
     * @param {Plugin} plugin
     * @param {...unknown} [value]
     * @returns {void}
     */
    function addPlugin(plugin, value) {
      let index = -1
      /** @type {Processor['attachers'][number]|undefined} */
      let entry

      while (++index < attachers.length) {
        if (attachers[index][0] === plugin) {
          entry = attachers[index]
          break
        }
      }

      if (entry) {
        if (isPlainObject(entry[1]) && isPlainObject(value)) {
          value = extend(true, entry[1], value)
        }

        entry[1] = value
      } else {
        // @ts-expect-error: fine.
        attachers.push([...arguments])
      }
    }
  }

  /** @type {Processor['parse']} */
  function parse(doc) {
    processor.freeze()
    const file = vfile(doc)
    const Parser = processor.Parser
    assertParser('parse', Parser)

    if (newable(Parser, 'parse')) {
      // @ts-expect-error: `newable` checks this.
      return new Parser(String(file), file).parse()
    }

    // @ts-expect-error: `newable` checks this.
    return Parser(String(file), file) // eslint-disable-line new-cap
  }

  /** @type {Processor['stringify']} */
  function stringify(node, doc) {
    processor.freeze()
    const file = vfile(doc)
    const Compiler = processor.Compiler
    assertCompiler('stringify', Compiler)
    assertNode(node)

    if (newable(Compiler, 'compile')) {
      // @ts-expect-error: `newable` checks this.
      return new Compiler(node, file).compile()
    }

    // @ts-expect-error: `newable` checks this.
    return Compiler(node, file) // eslint-disable-line new-cap
  }

  /**
   * @param {Node} node
   * @param {VFileCompatible|RunCallback} [doc]
   * @param {RunCallback} [callback]
   * @returns {Promise<Node>|void}
   */
  function run(node, doc, callback) {
    assertNode(node)
    processor.freeze()

    if (!callback && typeof doc === 'function') {
      callback = doc
      doc = undefined
    }

    if (!callback) {
      return new Promise(executor)
    }

    executor(null, callback)

    /**
     * @param {null|((node: Node) => void)} resolve
     * @param {(error: Error) => void} reject
     * @returns {void}
     */
    function executor(resolve, reject) {
      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.
      transformers.run(node, vfile(doc), done)

      /**
       * @param {Error|null} error
       * @param {Node} tree
       * @param {VFile} file
       * @returns {void}
       */
      function done(error, tree, file) {
        tree = tree || node
        if (error) {
          reject(error)
        } else if (resolve) {
          resolve(tree)
        } else {
          // @ts-expect-error: `callback` is defined if `resolve` is not.
          callback(null, tree, file)
        }
      }
    }
  }

  /** @type {Processor['runSync']} */
  function runSync(node, file) {
    /** @type {Node|undefined} */
    let result
    /** @type {boolean|undefined} */
    let complete

    processor.run(node, file, done)

    assertDone('runSync', 'run', complete)

    // @ts-expect-error: we either bailed on an error or have a tree.
    return result

    /**
     * @param {Error|null} [error]
     * @param {Node} [tree]
     * @returns {void}
     */
    function done(error, tree) {
      bail(error)
      result = tree
      complete = true
    }
  }

  /**
   * @param {VFileCompatible} doc
   * @param {ProcessCallback} [callback]
   * @returns {Promise<VFile>|undefined}
   */
  function process(doc, callback) {
    processor.freeze()
    assertParser('process', processor.Parser)
    assertCompiler('process', processor.Compiler)

    if (!callback) {
      return new Promise(executor)
    }

    executor(null, callback)

    /**
     * @param {null|((file: VFile) => void)} resolve
     * @param {(error?: Error|null|undefined) => void} reject
     * @returns {void}
     */
    function executor(resolve, reject) {
      const file = vfile(doc)

      processor.run(processor.parse(file), file, (error, tree, file) => {
        if (error || !tree || !file) {
          done(error)
        } else {
          /** @type {unknown} */
          const result = processor.stringify(tree, file)

          if (result === undefined || result === null) {
            // Empty.
          } else if (looksLikeAVFileValue(result)) {
            file.value = result
          } else {
            file.result = result
          }

          done(error, file)
        }
      })

      /**
       * @param {Error|null|undefined} [error]
       * @param {VFile|undefined} [file]
       * @returns {void}
       */
      function done(error, file) {
        if (error || !file) {
          reject(error)
        } else if (resolve) {
          resolve(file)
        } else {
          // @ts-expect-error: `callback` is defined if `resolve` is not.
          callback(null, file)
        }
      }
    }
  }

  /** @type {Processor['processSync']} */
  function processSync(doc) {
    /** @type {boolean|undefined} */
    let complete

    processor.freeze()
    assertParser('processSync', processor.Parser)
    assertCompiler('processSync', processor.Compiler)

    const file = vfile(doc)

    processor.process(file, done)

    assertDone('processSync', 'process', complete)

    return file

    /**
     * @param {Error|null|undefined} [error]
     * @returns {void}
     */
    function done(error) {
      complete = true
      bail(error)
    }
  }
}

/**
 * Check if `value` is a constructor.
 *
 * @param {unknown} value
 * @param {string} name
 * @returns {boolean}
 */
function newable(value, name) {
  return (
    typeof value === 'function' &&
    // Prototypes do exist.
    // type-coverage:ignore-next-line
    value.prototype &&
    // A function with keys in its prototype is probably a constructor.
    // Classes’ prototype methods are not enumerable, so we check if some value
    // exists in the prototype.
    // type-coverage:ignore-next-line
    (keys(value.prototype) || name in value.prototype)
  )
}

/**
 * Check if `value` is an object with keys.
 *
 * @param {Record<string, unknown>} value
 * @returns {boolean}
 */
function keys(value) {
  /** @type {string} */
  let key

  for (key in value) {
    if (own.call(value, key)) {
      return true
    }
  }

  return false
}

/**
 * Assert a parser is available.
 *
 * @param {string} name
 * @param {unknown} value
 * @returns {asserts value is Parser}
 */
function assertParser(name, value) {
  if (typeof value !== 'function') {
    throw new TypeError('Cannot `' + name + '` without `Parser`')
  }
}

/**
 * Assert a compiler is available.
 *
 * @param {string} name
 * @param {unknown} value
 * @returns {asserts value is Compiler}
 */
function assertCompiler(name, value) {
  if (typeof value !== 'function') {
    throw new TypeError('Cannot `' + name + '` without `Compiler`')
  }
}

/**
 * Assert the processor is not frozen.
 *
 * @param {string} name
 * @param {unknown} frozen
 * @returns {asserts frozen is false}
 */
function assertUnfrozen(name, frozen) {
  if (frozen) {
    throw new Error(
      'Cannot call `' +
        name +
        '` on a frozen processor.\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'
    )
  }
}

/**
 * Assert `node` is a unist node.
 *
 * @param {unknown} node
 * @returns {asserts node is Node}
 */
function assertNode(node) {
  // `isPlainObj` unfortunately uses `any` instead of `unknown`.
  // type-coverage:ignore-next-line
  if (!isPlainObject(node) || typeof node.type !== 'string') {
    throw new TypeError('Expected node, got `' + node + '`')
    // Fine.
  }
}

/**
 * Assert that `complete` is `true`.
 *
 * @param {string} name
 * @param {string} asyncName
 * @param {unknown} complete
 * @returns {asserts complete is true}
 */
function assertDone(name, asyncName, complete) {
  if (!complete) {
    throw new Error(
      '`' + name + '` finished async. Use `' + asyncName + '` instead'
    )
  }
}

/**
 * @param {VFileCompatible} [value]
 * @returns {VFile}
 */
function vfile(value) {
  return looksLikeAVFile(value) ? value : new VFile(value)
}

/**
 * @param {VFileCompatible} [value]
 * @returns {value is VFile}
 */
function looksLikeAVFile(value) {
  return Boolean(
    value &&
      typeof value === 'object' &&
      'message' in value &&
      'messages' in value
  )
}

/**
 * @param {unknown} [value]
 * @returns {value is VFileValue}
 */
function looksLikeAVFileValue(value) {
  return typeof value === 'string' || is_buffer(value)
}

;// CONCATENATED MODULE: ./node_modules/mdast-util-to-string/index.js
/**
 * @typedef Options
 * @property {boolean} [includeImageAlt=true]
 */

/**
 * Get the text content of a node.
 * Prefer the node’s plain-text fields, otherwise serialize its children,
 * and if the given value is an array, serialize the nodes in it.
 *
 * @param {unknown} node
 * @param {Options} [options]
 * @returns {string}
 */
function mdast_util_to_string_toString(node, options) {
  var {includeImageAlt = true} = options || {}
  return one(node, includeImageAlt)
}

/**
 * @param {unknown} node
 * @param {boolean} includeImageAlt
 * @returns {string}
 */
function one(node, includeImageAlt) {
  return (
    (node &&
      typeof node === 'object' &&
      // @ts-ignore looks like a literal.
      (node.value ||
        // @ts-ignore looks like an image.
        (includeImageAlt ? node.alt : '') ||
        // @ts-ignore looks like a parent.
        ('children' in node && mdast_util_to_string_all(node.children, includeImageAlt)) ||
        (Array.isArray(node) && mdast_util_to_string_all(node, includeImageAlt)))) ||
    ''
  )
}

/**
 * @param {Array.<unknown>} values
 * @param {boolean} includeImageAlt
 * @returns {string}
 */
function mdast_util_to_string_all(values, includeImageAlt) {
  /** @type {Array.<string>} */
  var result = []
  var index = -1

  while (++index < values.length) {
    result[index] = one(values[index], includeImageAlt)
  }

  return result.join('')
}

;// CONCATENATED MODULE: ./node_modules/micromark-util-chunked/index.js
/**
 * Like `Array#splice`, but smarter for giant arrays.
 *
 * `Array#splice` takes all items to be inserted as individual argument which
 * causes a stack overflow in V8 when trying to insert 100k items for instance.
 *
 * Otherwise, this does not return the removed items, and takes `items` as an
 * array instead of rest parameters.
 *
 * @template {unknown} T
 * @param {T[]} list
 * @param {number} start
 * @param {number} remove
 * @param {T[]} items
 * @returns {void}
 */
function splice(list, start, remove, items) {
  const end = list.length
  let chunkStart = 0
  /** @type {unknown[]} */

  let parameters // Make start between zero and `end` (included).

  if (start < 0) {
    start = -start > end ? 0 : end + start
  } else {
    start = start > end ? end : start
  }

  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.

  if (items.length < 10000) {
    parameters = Array.from(items)
    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.
    ;[].splice.apply(list, parameters)
  } else {
    // Delete `remove` items starting from `start`
    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.

    while (chunkStart < items.length) {
      parameters = items.slice(chunkStart, chunkStart + 10000)
      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.
      ;[].splice.apply(list, parameters)
      chunkStart += 10000
      start += 10000
    }
  }
}
/**
 * Append `items` (an array) at the end of `list` (another array).
 * When `list` was empty, returns `items` instead.
 *
 * This prevents a potentially expensive operation when `list` is empty,
 * and adds items in batches to prevent V8 from hanging.
 *
 * @template {unknown} T
 * @param {T[]} list
 * @param {T[]} items
 * @returns {T[]}
 */

function push(list, items) {
  if (list.length > 0) {
    splice(list, list.length, 0, items)
    return list
  }

  return items
}

;// CONCATENATED MODULE: ./node_modules/micromark-util-combine-extensions/index.js
/**
 * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension
 * @typedef {import('micromark-util-types').Extension} Extension
 * @typedef {import('micromark-util-types').Construct} Construct
 * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension
 */



const micromark_util_combine_extensions_hasOwnProperty = {}.hasOwnProperty

/**
 * Combine several syntax extensions into one.
 *
 * @param {Extension[]} extensions List of syntax extensions.
 * @returns {NormalizedExtension} A single combined extension.
 */
function combineExtensions(extensions) {
  /** @type {NormalizedExtension} */
  const all = {}
  let index = -1

  while (++index < extensions.length) {
    syntaxExtension(all, extensions[index])
  }

  return all
}

/**
 * Merge `extension` into `all`.
 *
 * @param {NormalizedExtension} all Extension to merge into.
 * @param {Extension} extension Extension to merge.
 * @returns {void}
 */
function syntaxExtension(all, extension) {
  /** @type {string} */
  let hook

  for (hook in extension) {
    const maybe = micromark_util_combine_extensions_hasOwnProperty.call(all, hook) ? all[hook] : undefined
    const left = maybe || (all[hook] = {})
    const right = extension[hook]
    /** @type {string} */
    let code

    for (code in right) {
      if (!micromark_util_combine_extensions_hasOwnProperty.call(left, code)) left[code] = []
      const value = right[code]
      constructs(
        // @ts-expect-error Looks like a list.
        left[code],
        Array.isArray(value) ? value : value ? [value] : []
      )
    }
  }
}

/**
 * Merge `list` into `existing` (both lists of constructs).
 * Mutates `existing`.
 *
 * @param {unknown[]} existing
 * @param {unknown[]} list
 * @returns {void}
 */
function constructs(existing, list) {
  let index = -1
  /** @type {unknown[]} */
  const before = []

  while (++index < list.length) {
    // @ts-expect-error Looks like an object.
    ;(list[index].add === 'after' ? existing : before).push(list[index])
  }

  splice(existing, 0, 0, before)
}

/**
 * Combine several HTML extensions into one.
 *
 * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.
 * @returns {HtmlExtension} A single combined extension.
 */
function combineHtmlExtensions(htmlExtensions) {
  /** @type {HtmlExtension} */
  const handlers = {}
  let index = -1

  while (++index < htmlExtensions.length) {
    htmlExtension(handlers, htmlExtensions[index])
  }

  return handlers
}

/**
 * Merge `extension` into `all`.
 *
 * @param {HtmlExtension} all Extension to merge into.
 * @param {HtmlExtension} extension Extension to merge.
 * @returns {void}
 */
function htmlExtension(all, extension) {
  /** @type {string} */
  let hook

  for (hook in extension) {
    const maybe = micromark_util_combine_extensions_hasOwnProperty.call(all, hook) ? all[hook] : undefined
    const left = maybe || (all[hook] = {})
    const right = extension[hook]
    /** @type {string} */
    let type

    if (right) {
      for (type in right) {
        left[type] = right[type]
      }
    }
  }
}

;// CONCATENATED MODULE: ./node_modules/micromark-util-character/lib/unicode-punctuation-regex.js
// This module is generated by `script/`.
//
// CommonMark handles attention (emphasis, strong) markers based on what comes
// before or after them.
// One such difference is if those characters are Unicode punctuation.
// This script is generated from the Unicode data.
const unicodePunctuationRegex =
  /[!-/:-@[-`{-~\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u2E52\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]/

;// CONCATENATED MODULE: ./node_modules/micromark-util-character/index.js
/**
 * @typedef {import('micromark-util-types').Code} Code
 */

/**
 * Check whether the character code represents an ASCII alpha (`a` through `z`,
 * case insensitive).
 *
 * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.
 *
 * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)
 * to U+005A (`Z`).
 *
 * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)
 * to U+007A (`z`).
 */

const asciiAlpha = regexCheck(/[A-Za-z]/)
/**
 * Check whether the character code represents an ASCII digit (`0` through `9`).
 *
 * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to
 * U+0039 (`9`).
 */

const asciiDigit = regexCheck(/\d/)
/**
 * Check whether the character code represents an ASCII hex digit (`a` through
 * `f`, case insensitive, or `0` through `9`).
 *
 * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex
 * digit, or an ASCII lower hex digit.
 *
 * An **ASCII upper hex digit** is a character in the inclusive range U+0041
 * (`A`) to U+0046 (`F`).
 *
 * An **ASCII lower hex digit** is a character in the inclusive range U+0061
 * (`a`) to U+0066 (`f`).
 */

const asciiHexDigit = regexCheck(/[\dA-Fa-f]/)
/**
 * Check whether the character code represents an ASCII alphanumeric (`a`
 * through `z`, case insensitive, or `0` through `9`).
 *
 * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha
 * (see `asciiAlpha`).
 */

const asciiAlphanumeric = regexCheck(/[\dA-Za-z]/)
/**
 * Check whether the character code represents ASCII punctuation.
 *
 * An **ASCII punctuation** is a character in the inclusive ranges U+0021
 * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT
 * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT
 * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).
 */

const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)
/**
 * Check whether the character code represents an ASCII atext.
 *
 * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in
 * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),
 * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F
 * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E
 * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE
 * (`{`) to U+007E TILDE (`~`).
 *
 * See:
 * **\[RFC5322]**:
 * [Internet Message Format](https://tools.ietf.org/html/rfc5322).
 * P. Resnick.
 * IETF.
 */

const asciiAtext = regexCheck(/[#-'*+\--9=?A-Z^-~]/)
/**
 * Check whether a character code is an ASCII control character.
 *
 * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)
 * to U+001F (US), or U+007F (DEL).
 *
 * @param {Code} code
 * @returns {code is number}
 */

function asciiControl(code) {
  return (
    // Special whitespace codes (which have negative values), C0 and Control
    // character DEL
    code !== null && (code < 32 || code === 127)
  )
}
/**
 * Check whether a character code is a markdown line ending (see
 * `markdownLineEnding`) or markdown space (see `markdownSpace`).
 *
 * @param {Code} code
 * @returns {code is number}
 */

function markdownLineEndingOrSpace(code) {
  return code !== null && (code < 0 || code === 32)
}
/**
 * Check whether a character code is a markdown line ending.
 *
 * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN
 * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).
 *
 * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE
 * RETURN (CR) are replaced by these virtual characters depending on whether
 * they occurred together.
 *
 * @param {Code} code
 * @returns {code is number}
 */

function markdownLineEnding(code) {
  return code !== null && code < -2
}
/**
 * Check whether a character code is a markdown space.
 *
 * A **markdown space** is the concrete character U+0020 SPACE (SP) and the
 * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).
 *
 * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is
 * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL
 * SPACE (VS) characters, depending on the column at which the tab occurred.
 *
 * @param {Code} code
 * @returns {code is number}
 */

function markdownSpace(code) {
  return code === -2 || code === -1 || code === 32
}
/**
 * Check whether the character code represents Unicode whitespace.
 *
 * Note that this does handle micromark specific markdown whitespace characters.
 * See `markdownLineEndingOrSpace` to check that.
 *
 * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,
 * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),
 * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\[UNICODE]**).
 *
 * See:
 * **\[UNICODE]**:
 * [The Unicode Standard](https://www.unicode.org/versions/).
 * Unicode Consortium.
 */

const unicodeWhitespace = regexCheck(/\s/)
/**
 * Check whether the character code represents Unicode punctuation.
 *
 * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,
 * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`
 * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`
 * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII
 * punctuation (see `asciiPunctuation`).
 *
 * See:
 * **\[UNICODE]**:
 * [The Unicode Standard](https://www.unicode.org/versions/).
 * Unicode Consortium.
 */
// Size note: removing ASCII from the regex and using `asciiPunctuation` here
// In fact adds to the bundle size.

const unicodePunctuation = regexCheck(unicodePunctuationRegex)
/**
 * Create a code check from a regex.
 *
 * @param {RegExp} regex
 * @returns {(code: Code) => code is number}
 */

function regexCheck(regex) {
  return check
  /**
   * Check whether a code matches the bound regex.
   *
   * @param {Code} code Character code
   * @returns {code is number} Whether the character code matches the bound regex
   */

  function check(code) {
    return code !== null && regex.test(String.fromCharCode(code))
  }
}

;// CONCATENATED MODULE: ./node_modules/micromark-factory-space/index.js
/**
 * @typedef {import('micromark-util-types').Effects} Effects
 * @typedef {import('micromark-util-types').State} State
 */

/**
 * @param {Effects} effects
 * @param {State} ok
 * @param {string} type
 * @param {number} [max=Infinity]
 * @returns {State}
 */

function factorySpace(effects, ok, type, max) {
  const limit = max ? max - 1 : Number.POSITIVE_INFINITY
  let size = 0
  return start
  /** @type {State} */

  function start(code) {
    if (markdownSpace(code)) {
      effects.enter(type)
      return prefix(code)
    }

    return ok(code)
  }
  /** @type {State} */

  function prefix(code) {
    if (markdownSpace(code) && size++ < limit) {
      effects.consume(code)
      return prefix
    }

    effects.exit(type)
    return ok(code)
  }
}

;// CONCATENATED MODULE: ./node_modules/micromark/lib/initialize/content.js
/**
 * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct
 * @typedef {import('micromark-util-types').Initializer} Initializer
 * @typedef {import('micromark-util-types').Token} Token
 * @typedef {import('micromark-util-types').State} State
 */



/** @type {InitialConstruct} */
const content = {
  tokenize: initializeContent
}
/** @type {Initializer} */

function initializeContent(effects) {
  const contentStart = effects.attempt(
    this.parser.constructs.contentInitial,
    afterContentStartConstruct,
    paragraphInitial
  )
  /** @type {Token} */

  let previous
  return contentStart
  /** @type {State} */

  function afterContentStartConstruct(code) {
    if (code === null) {
      effects.consume(code)
      return
    }

    effects.enter('lineEnding')
    effects.consume(code)
    effects.exit('lineEnding')
    return factorySpace(effects, contentStart, 'linePrefix')
  }
  /** @type {State} */

  function paragraphInitial(code) {
    effects.enter('paragraph')
    return lineStart(code)
  }
  /** @type {State} */

  function lineStart(code) {
    const token = effects.enter('chunkText', {
      contentType: 'text',
      previous
    })

    if (previous) {
      previous.next = token
    }

    previous = token
    return data(code)
  }
  /** @type {State} */

  function data(code) {
    if (code === null) {
      effects.exit('chunkText')
      effects.exit('paragraph')
      effects.consume(code)
      return
    }

    if (markdownLineEnding(code)) {
      effects.consume(code)
      effects.exit('chunkText')
      return lineStart
    } // Data.

    effects.consume(code)
    return data
  }
}

;// CONCATENATED MODULE: ./node_modules/micromark/lib/initialize/document.js
/**
 * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct
 * @typedef {import('micromark-util-types').Initializer} Initializer
 * @typedef {import('micromark-util-types').Construct} Construct
 * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext
 * @typedef {import('micromark-util-types').Tokenizer} Tokenizer
 * @typedef {import('micromark-util-types').Token} Token
 * @typedef {import('micromark-util-types').State} State
 * @typedef {import('micromark-util-types').Point} Point
 */

/**
 * @typedef {Record<string, unknown>} StackState
 * @typedef {[Construct, StackState]} StackItem
 */



/** @type {InitialConstruct} */

const document_document = {
  tokenize: initializeDocument
}
/** @type {Construct} */

const containerConstruct = {
  tokenize: tokenizeContainer
}
/** @type {Initializer} */

function initializeDocument(effects) {
  const self = this
  /** @type {StackItem[]} */

  const stack = []
  let continued = 0
  /** @type {TokenizeContext|undefined} */

  let childFlow
  /** @type {Token|undefined} */

  let childToken
  /** @type {number} */

  let lineStartOffset
  return start
  /** @type {State} */

  function start(code) {
    // First we iterate through the open blocks, starting with the root
    // document, and descending through last children down to the last open
    // block.
    // Each block imposes a condition that the line must satisfy if the block is
    // to remain open.
    // For example, a block quote requires a `>` character.
    // A paragraph requires a non-blank line.
    // In this phase we may match all or just some of the open blocks.
    // But we cannot close unmatched blocks yet, because we may have a lazy
    // continuation line.
    if (continued < stack.length) {
      const item = stack[continued]
      self.containerState = item[1]
      return effects.attempt(
        item[0].continuation,
        documentContinue,
        checkNewContainers
      )(code)
    } // Done.

    return checkNewContainers(code)
  }
  /** @type {State} */

  function documentContinue(code) {
    continued++ // Note: this field is called `_closeFlow` but it also closes containers.
    // Perhaps a good idea to rename it but it’s already used in the wild by
    // extensions.

    if (self.containerState._closeFlow) {
      self.containerState._closeFlow = undefined

      if (childFlow) {
        closeFlow()
      } // Note: this algorithm for moving events around is similar to the
      // algorithm when dealing with lazy lines in `writeToChild`.

      const indexBeforeExits = self.events.length
      let indexBeforeFlow = indexBeforeExits
      /** @type {Point|undefined} */

      let point // Find the flow chunk.

      while (indexBeforeFlow--) {
        if (
          self.events[indexBeforeFlow][0] === 'exit' &&
          self.events[indexBeforeFlow][1].type === 'chunkFlow'
        ) {
          point = self.events[indexBeforeFlow][1].end
          break
        }
      }

      exitContainers(continued) // Fix positions.

      let index = indexBeforeExits

      while (index < self.events.length) {
        self.events[index][1].end = Object.assign({}, point)
        index++
      } // Inject the exits earlier (they’re still also at the end).

      splice(
        self.events,
        indexBeforeFlow + 1,
        0,
        self.events.slice(indexBeforeExits)
      ) // Discard the duplicate exits.

      self.events.length = index
      return checkNewContainers(code)
    }

    return start(code)
  }
  /** @type {State} */

  function checkNewContainers(code) {
    // Next, after consuming the continuation markers for existing blocks, we
    // look for new block starts (e.g. `>` for a block quote).
    // If we encounter a new block start, we close any blocks unmatched in
    // step 1 before creating the new block as a child of the last matched
    // block.
    if (continued === stack.length) {
      // No need to `check` whether there’s a container, of `exitContainers`
      // would be moot.
      // We can instead immediately `attempt` to parse one.
      if (!childFlow) {
        return documentContinued(code)
      } // If we have concrete content, such as block HTML or fenced code,
      // we can’t have containers “pierce” into them, so we can immediately
      // start.

      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {
        return flowStart(code)
      } // If we do have flow, it could still be a blank line,
      // but we’d be interrupting it w/ a new container if there’s a current
      // construct.

      self.interrupt = Boolean(
        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack
      )
    } // Check if there is a new container.

    self.containerState = {}
    return effects.check(
      containerConstruct,
      thereIsANewContainer,
      thereIsNoNewContainer
    )(code)
  }
  /** @type {State} */

  function thereIsANewContainer(code) {
    if (childFlow) closeFlow()
    exitContainers(continued)
    return documentContinued(code)
  }
  /** @type {State} */

  function thereIsNoNewContainer(code) {
    self.parser.lazy[self.now().line] = continued !== stack.length
    lineStartOffset = self.now().offset
    return flowStart(code)
  }
  /** @type {State} */

  function documentContinued(code) {
    // Try new containers.
    self.containerState = {}
    return effects.attempt(
      containerConstruct,
      containerContinue,
      flowStart
    )(code)
  }
  /** @type {State} */

  function containerContinue(code) {
    continued++
    stack.push([self.currentConstruct, self.containerState]) // Try another.

    return documentContinued(code)
  }
  /** @type {State} */

  function flowStart(code) {
    if (code === null) {
      if (childFlow) closeFlow()
      exitContainers(0)
      effects.consume(code)
      return
    }

    childFlow = childFlow || self.parser.flow(self.now())
    effects.enter('chunkFlow', {
      contentType: 'flow',
      previous: childToken,
      _tokenizer: childFlow
    })
    return flowContinue(code)
  }
  /** @type {State} */

  function flowContinue(code) {
    if (code === null) {
      writeToChild(effects.exit('chunkFlow'), true)
      exitContainers(0)
      effects.consume(code)
      return
    }

    if (markdownLineEnding(code)) {
      effects.consume(code)
      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.

      continued = 0
      self.interrupt = undefined
      return start
    }

    effects.consume(code)
    return flowContinue
  }
  /**
   * @param {Token} token
   * @param {boolean} [eof]
   * @returns {void}
   */

  function writeToChild(token, eof) {
    const stream = self.sliceStream(token)
    if (eof) stream.push(null)
    token.previous = childToken
    if (childToken) childToken.next = token
    childToken = token
    childFlow.defineSkip(token.start)
    childFlow.write(stream) // Alright, so we just added a lazy line:
    //
    // ```markdown
    // > a
    // b.
    //
    // Or:
    //
    // > ~~~c
    // d
    //
    // Or:
    //
    // > | e |
    // f
    // ```
    //
    // The construct in the second example (fenced code) does not accept lazy
    // lines, so it marked itself as done at the end of its first line, and
    // then the content construct parses `d`.
    // Most constructs in markdown match on the first line: if the first line
    // forms a construct, a non-lazy line can’t “unmake” it.
    //
    // The construct in the third example is potentially a GFM table, and
    // those are *weird*.
    // It *could* be a table, from the first line, if the following line
    // matches a condition.
    // In this case, that second line is lazy, which “unmakes” the first line
    // and turns the whole into one content block.
    //
    // We’ve now parsed the non-lazy and the lazy line, and can figure out
    // whether the lazy line started a new flow block.
    // If it did, we exit the current containers between the two flow blocks.

    if (self.parser.lazy[token.start.line]) {
      let index = childFlow.events.length

      while (index--) {
        if (
          // The token starts before the line ending…
          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…
          (!childFlow.events[index][1].end || // …or ends after it.
            childFlow.events[index][1].end.offset > lineStartOffset)
        ) {
          // Exit: there’s still something open, which means it’s a lazy line
          // part of something.
          return
        }
      } // Note: this algorithm for moving events around is similar to the
      // algorithm when closing flow in `documentContinue`.

      const indexBeforeExits = self.events.length
      let indexBeforeFlow = indexBeforeExits
      /** @type {boolean|undefined} */

      let seen
      /** @type {Point|undefined} */

      let point // Find the previous chunk (the one before the lazy line).

      while (indexBeforeFlow--) {
        if (
          self.events[indexBeforeFlow][0] === 'exit' &&
          self.events[indexBeforeFlow][1].type === 'chunkFlow'
        ) {
          if (seen) {
            point = self.events[indexBeforeFlow][1].end
            break
          }

          seen = true
        }
      }

      exitContainers(continued) // Fix positions.

      index = indexBeforeExits

      while (index < self.events.length) {
        self.events[index][1].end = Object.assign({}, point)
        index++
      } // Inject the exits earlier (they’re still also at the end).

      splice(
        self.events,
        indexBeforeFlow + 1,
        0,
        self.events.slice(indexBeforeExits)
      ) // Discard the duplicate exits.

      self.events.length = index
    }
  }
  /**
   * @param {number} size
   * @returns {void}
   */

  function exitContainers(size) {
    let index = stack.length // Exit open containers.

    while (index-- > size) {
      const entry = stack[index]
      self.containerState = entry[1]
      entry[0].exit.call(self, effects)
    }

    stack.length = size
  }

  function closeFlow() {
    childFlow.write([null])
    childToken = undefined
    childFlow = undefined
    self.containerState._closeFlow = undefined
  }
}
/** @type {Tokenizer} */

function tokenizeContainer(effects, ok, nok) {
  return factorySpace(
    effects,
    effects.attempt(this.parser.constructs.document, ok, nok),
    'linePrefix',
    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4
  )
}

;// CONCATENATED MODULE: ./node_modules/micromark-core-commonmark/lib/blank-line.js
/**
 * @typedef {import('micromark-util-types').Construct} Construct
 * @typedef {import('micromark-util-types').Tokenizer} Tokenizer
 * @typedef {import('micromark-util-types').State} State
 */



/** @type {Construct} */
const blankLine = {
  tokenize: tokenizeBlankLine,
  partial: true
}
/** @type {Tokenizer} */

function tokenizeBlankLine(effects, ok, nok) {
  return factorySpace(effects, afterWhitespace, 'linePrefix')
  /** @type {State} */

  function afterWhitespace(code) {
    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)
  }
}

;// CONCATENATED MODULE: ./node_modules/micromark-util-subtokenize/index.js
/**
 * @typedef {import('micromark-util-types').Token} Token
 * @typedef {import('micromark-util-types').Chunk} Chunk
 * @typedef {import('micromark-util-types').Event} Event
 */


/**
 * Tokenize subcontent.
 *
 * @param {Event[]} events
 * @returns {boolean}
 */
function subtokenize(events) {
  /** @type {Record<string, number>} */
  const jumps = {}
  let index = -1
  /** @type {Event} */

  let event
  /** @type {number|undefined} */

  let lineIndex
  /** @type {number} */

  let otherIndex
  /** @type {Event} */

  let otherEvent
  /** @type {Event[]} */

  let parameters
  /** @type {Event[]} */

  let subevents
  /** @type {boolean|undefined} */

  let more

  while (++index < events.length) {
    while (index in jumps) {
      index = jumps[index]
    }

    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text
    // is in the first content of a list item.

    if (
      index &&
      event[1].type === 'chunkFlow' &&
      events[index - 1][1].type === 'listItemPrefix'
    ) {
      subevents = event[1]._tokenizer.events
      otherIndex = 0

      if (
        otherIndex < subevents.length &&
        subevents[otherIndex][1].type === 'lineEndingBlank'
      ) {
        otherIndex += 2
      }

      if (
        otherIndex < subevents.length &&
        subevents[otherIndex][1].type === 'content'
      ) {
        while (++otherIndex < subevents.length) {
          if (subevents[otherIndex][1].type === 'content') {
            break
          }

          if (subevents[otherIndex][1].type === 'chunkText') {
            subevents[otherIndex][1]._isInFirstContentOfListItem = true
            otherIndex++
          }
        }
      }
    } // Enter.

    if (event[0] === 'enter') {
      if (event[1].contentType) {
        Object.assign(jumps, subcontent(events, index))
        index = jumps[index]
        more = true
      }
    } // Exit.
    else if (event[1]._container) {
      otherIndex = index
      lineIndex = undefined

      while (otherIndex--) {
        otherEvent = events[otherIndex]

        if (
          otherEvent[1].type === 'lineEnding' ||
          otherEvent[1].type === 'lineEndingBlank'
        ) {
          if (otherEvent[0] === 'enter') {
            if (lineIndex) {
              events[lineIndex][1].type = 'lineEndingBlank'
            }

            otherEvent[1].type = 'lineEnding'
            lineIndex = otherIndex
          }
        } else {
          break
        }
      }

      if (lineIndex) {
        // Fix position.
        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.

        parameters = events.slice(lineIndex, index)
        parameters.unshift(event)
        splice(events, lineIndex, index - lineIndex + 1, parameters)
      }
    }
  }

  return !more
}
/**
 * Tokenize embedded tokens.
 *
 * @param {Event[]} events
 * @param {number} eventIndex
 * @returns {Record<string, number>}
 */

function subcontent(events, eventIndex) {
  const token = events[eventIndex][1]
  const context = events[eventIndex][2]
  let startPosition = eventIndex - 1
  /** @type {number[]} */

  const startPositions = []
  const tokenizer =
    token._tokenizer || context.parser[token.contentType](token.start)
  const childEvents = tokenizer.events
  /** @type {[number, number][]} */

  const jumps = []
  /** @type {Record<string, number>} */

  const gaps = {}
  /** @type {Chunk[]} */

  let stream
  /** @type {Token|undefined} */

  let previous
  let index = -1
  /** @type {Token|undefined} */

  let current = token
  let adjust = 0
  let start = 0
  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the
  // subtokenizer.

  while (current) {
    // Find the position of the event for this token.
    while (events[++startPosition][1] !== current) {
      // Empty.
    }

    startPositions.push(startPosition)

    if (!current._tokenizer) {
      stream = context.sliceStream(current)

      if (!current.next) {
        stream.push(null)
      }

      if (previous) {
        tokenizer.defineSkip(current.start)
      }

      if (current._isInFirstContentOfListItem) {
        tokenizer._gfmTasklistFirstContentOfListItem = true
      }

      tokenizer.write(stream)

      if (current._isInFirstContentOfListItem) {
        tokenizer._gfmTasklistFirstContentOfListItem = undefined
      }
    } // Unravel the next token.

    previous = current
    current = current.next
  } // Now, loop back through all events (and linked tokens), to figure out which
  // parts belong where.

  current = token

  while (++index < childEvents.length) {
    if (
      // Find a void token that includes a break.
      childEvents[index][0] === 'exit' &&
      childEvents[index - 1][0] === 'enter' &&
      childEvents[index][1].type === childEvents[index - 1][1].type &&
      childEvents[index][1].start.line !== childEvents[index][1].end.line
    ) {
      start = index + 1
      breaks.push(start) // Help GC.

      current._tokenizer = undefined
      current.previous = undefined
      current = current.next
    }
  } // Help GC.

  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an
  // EOF), that’s perfect: the last point we found starts it.
  // If there isn’t then make sure any remaining content is added to it.

  if (current) {
    // Help GC.
    current._tokenizer = undefined
    current.previous = undefined
  } else {
    breaks.pop()
  } // Now splice the events from the subtokenizer into the current events,
  // moving back to front so that splice indices aren’t affected.

  index = breaks.length

  while (index--) {
    const slice = childEvents.slice(breaks[index], breaks[index + 1])
    const start = startPositions.pop()
    jumps.unshift([start, start + slice.length - 1])
    splice(events, start, 2, slice)
  }

  index = -1

  while (++index < jumps.length) {
    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]
    adjust += jumps[index][1] - jumps[index][0] - 1
  }

  return gaps
}

;// CONCATENATED MODULE: ./node_modules/micromark-core-commonmark/lib/content.js
/**
 * @typedef {import('micromark-util-types').Construct} Construct
 * @typedef {import('micromark-util-types').Resolver} Resolver
 * @typedef {import('micromark-util-types').Tokenizer} Tokenizer
 * @typedef {import('micromark-util-types').Token} Token
 * @typedef {import('micromark-util-types').State} State
 */




/**
 * No name because it must not be turned off.
 * @type {Construct}
 */
const content_content = {
  tokenize: tokenizeContent,
  resolve: resolveContent
}
/** @type {Construct} */

const continuationConstruct = {
  tokenize: tokenizeContinuation,
  partial: true
}
/**
 * Content is transparent: it’s parsed right now. That way, definitions are also
 * parsed right now: before text in paragraphs (specifically, media) are parsed.
 *
 * @type {Resolver}
 */

function resolveContent(events) {
  subtokenize(events)
  return events
}
/** @type {Tokenizer} */

function tokenizeContent(effects, ok) {
  /** @type {Token} */
  let previous
  return start
  /** @type {State} */

  function start(code) {
    effects.enter('content')
    previous = effects.enter('chunkContent', {
      contentType: 'content'
    })
    return data(code)
  }
  /** @type {State} */

  function data(code) {
    if (code === null) {
      return contentEnd(code)
    }

    if (markdownLineEnding(code)) {
      return effects.check(
        continuationConstruct,
        contentContinue,
        contentEnd
      )(code)
    } // Data.

    effects.consume(code)
    return data
  }
  /** @type {State} */

  function contentEnd(code) {
    effects.exit('chunkContent')
    effects.exit('content')
    return ok(code)
  }
  /** @type {State} */

  function contentContinue(code) {
    effects.consume(code)
    effects.exit('chunkContent')
    previous.next = effects.enter('chunkContent', {
      contentType: 'content',
      previous
    })
    previous = previous.next
    return data
  }
}
/** @type {Tokenizer} */

function tokenizeContinuation(effects, ok, nok) {
  const self = this
  return startLookahead
  /** @type {State} */

  function startLookahead(code) {
    effects.exit('chunkContent')
    effects.enter('lineEnding')
    effects.consume(code)
    effects.exit('lineEnding')
    return factorySpace(effects, prefixed, 'linePrefix')
  }
  /** @type {State} */

  function prefixed(code) {
    if (code === null || markdownLineEnding(code)) {
      return nok(code)
    }

    const tail = self.events[self.events.length - 1]

    if (
      !self.parser.constructs.disable.null.includes('codeIndented') &&
      tail &&
      tail[1].type === 'linePrefix' &&
      tail[2].sliceSerialize(tail[1], true).length >= 4
    ) {
      return ok(code)
    }

    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)
  }
}

;// CONCATENATED MODULE: ./node_modules/micromark/lib/initialize/flow.js
/**
 * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct
 * @typedef {import('micromark-util-types').Initializer} Initializer
 * @typedef {import('micromark-util-types').State} State
 */




/** @type {InitialConstruct} */
const flow = {
  tokenize: initializeFlow
}
/** @type {Initializer} */

function initializeFlow(effects) {
  const self = this
  const initial = effects.attempt(
    // Try to parse a blank line.
    blankLine,
    atBlankEnding, // Try to parse initial flow (essentially, only code).
    effects.attempt(
      this.parser.constructs.flowInitial,
      afterConstruct,
      factorySpace(
        effects,
        effects.attempt(
          this.parser.constructs.flow,
          afterConstruct,
          effects.attempt(content_content, afterConstruct)
        ),
        'linePrefix'
      )
    )
  )
  return initial
  /** @type {State} */

  function atBlankEnding(code) {
    if (code === null) {
      effects.consume(code)
      return
    }

    effects.enter('lineEndingBlank')
    effects.consume(code)
    effects.exit('lineEndingBlank')
    self.currentConstruct = undefined
    return initial
  }
  /** @type {State} */

  function afterConstruct(code) {
    if (code === null) {
      effects.consume(code)
      return
    }

    effects.enter('lineEnding')
    effects.consume(code)
    effects.exit('lineEnding')
    self.currentConstruct = undefined
    return initial
  }
}

;// CONCATENATED MODULE: ./node_modules/micromark/lib/initialize/text.js
/**
 * @typedef {import('micromark-util-types').Resolver} Resolver
 * @typedef {import('micromark-util-types').Initializer} Initializer
 * @typedef {import('micromark-util-types').Construct} Construct
 * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct
 * @typedef {import('micromark-util-types').State} State
 * @typedef {import('micromark-util-types').Code} Code
 */
const resolver = {
  resolveAll: createResolver()
}
const string = initializeFactory('string')
const text_text = initializeFactory('text')
/**
 * @param {'string'|'text'} field
 * @returns {InitialConstruct}
 */

function initializeFactory(field) {
  return {
    tokenize: initializeText,
    resolveAll: createResolver(
      field === 'text' ? resolveAllLineSuffixes : undefined
    )
  }
  /** @type {Initializer} */

  function initializeText(effects) {
    const self = this
    const constructs = this.parser.constructs[field]
    const text = effects.attempt(constructs, start, notText)
    return start
    /** @type {State} */

    function start(code) {
      return atBreak(code) ? text(code) : notText(code)
    }
    /** @type {State} */

    function notText(code) {
      if (code === null) {
        effects.consume(code)
        return
      }

      effects.enter('data')
      effects.consume(code)
      return data
    }
    /** @type {State} */

    function data(code) {
      if (atBreak(code)) {
        effects.exit('data')
        return text(code)
      } // Data.

      effects.consume(code)
      return data
    }
    /**
     * @param {Code} code
     * @returns {boolean}
     */

    function atBreak(code) {
      if (code === null) {
        return true
      }

      const list = constructs[code]
      let index = -1

      if (list) {
        while (++index < list.length) {
          const item = list[index]

          if (!item.previous || item.previous.call(self, self.previous)) {
            return true
          }
        }
      }

      return false
    }
  }
}
/**
 * @param {Resolver} [extraResolver]
 * @returns {Resolver}
 */

function createResolver(extraResolver) {
  return resolveAllText
  /** @type {Resolver} */

  function resolveAllText(events, context) {
    let index = -1
    /** @type {number|undefined} */

    let enter // A rather boring computation (to merge adjacent `data` events) which
    // improves mm performance by 29%.

    while (++index <= events.length) {
      if (enter === undefined) {
        if (events[index] && events[index][1].type === 'data') {
          enter = index
          index++
        }
      } else if (!events[index] || events[index][1].type !== 'data') {
        // Don’t do anything if there is one data token.
        if (index !== enter + 2) {
          events[enter][1].end = events[index - 1][1].end
          events.splice(enter + 2, index - enter - 2)
          index = enter + 2
        }

        enter = undefined
      }
    }

    return extraResolver ? extraResolver(events, context) : events
  }
}
/**
 * A rather ugly set of instructions which again looks at chunks in the input
 * stream.
 * The reason to do this here is that it is *much* faster to parse in reverse.
 * And that we can’t hook into `null` to split the line suffix before an EOF.
 * To do: figure out if we can make this into a clean utility, or even in core.
 * As it will be useful for GFMs literal autolink extension (and maybe even
 * tables?)
 *
 * @type {Resolver}
 */

function resolveAllLineSuffixes(events, context) {
  let eventIndex = 0 // Skip first.

  while (++eventIndex <= events.length) {
    if (
      (eventIndex === events.length ||
        events[eventIndex][1].type === 'lineEnding') &&
      events[eventIndex - 1][1].type === 'data'
    ) {
      const data = events[eventIndex - 1][1]
      const chunks = context.sliceStream(data)
      let index = chunks.length
      let bufferIndex = -1
      let size = 0
      /** @type {boolean|undefined} */

      let tabs

      while (index--) {
        const chunk = chunks[index]

        if (typeof chunk === 'string') {
          bufferIndex = chunk.length

          while (chunk.charCodeAt(bufferIndex - 1) === 32) {
            size++
            bufferIndex--
          }

          if (bufferIndex) break
          bufferIndex = -1
        } // Number
        else if (chunk === -2) {
          tabs = true
          size++
        } else if (chunk === -1) {
          // Empty
        } else {
          // Replacement character, exit.
          index++
          break
        }
      }

      if (size) {
        const token = {
          type:
            eventIndex === events.length || tabs || size < 2
              ? 'lineSuffix'
              : 'hardBreakTrailing',
          start: {
            line: data.end.line,
            column: data.end.column - size,
            offset: data.end.offset - size,
            _index: data.start._index + index,
            _bufferIndex: index
              ? bufferIndex
              : data.start._bufferIndex + bufferIndex
          },
          end: Object.assign({}, data.end)
        }
        data.end = Object.assign({}, token.start)

        if (data.start.offset === data.end.offset) {
          Object.assign(data, token)
        } else {
          events.splice(
            eventIndex,
            0,
            ['enter', token, context],
            ['exit', token, context]
          )
          eventIndex += 2
        }
      }

      eventIndex++
    }
  }

  return events
}

;// CONCATENATED MODULE: ./node_modules/micromark-util-resolve-all/index.js
/**
 * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext
 * @typedef {import('micromark-util-types').Event} Event
 * @typedef {import('micromark-util-types').Resolver} Resolver
 */

/**
 * Call all `resolveAll`s.
 *
 * @param {{resolveAll?: Resolver}[]} constructs
 * @param {Event[]} events
 * @param {TokenizeContext} context
 * @returns {Event[]}
 */
function resolveAll(constructs, events, context) {
  /** @type {Resolver[]} */
  const called = []
  let index = -1

  while (++index < constructs.length) {
    const resolve = constructs[index].resolveAll

    if (resolve && !called.includes(resolve)) {
      events = resolve(events, context)
      called.push(resolve)
    }
  }

  return events
}

;// CONCATENATED MODULE: ./node_modules/micromark/lib/create-tokenizer.js
/**
 * @typedef {import('micromark-util-types').Code} Code
 * @typedef {import('micromark-util-types').Chunk} Chunk
 * @typedef {import('micromark-util-types').Point} Point
 * @typedef {import('micromark-util-types').Token} Token
 * @typedef {import('micromark-util-types').Effects} Effects
 * @typedef {import('micromark-util-types').State} State
 * @typedef {import('micromark-util-types').Construct} Construct
 * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct
 * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord
 * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext
 * @typedef {import('micromark-util-types').ParseContext} ParseContext
 */

/**
 * @typedef Info
 * @property {() => void} restore
 * @property {number} from
 *
 * @callback ReturnHandle
 *   Handle a successful run.
 * @param {Construct} construct
 * @param {Info} info
 * @returns {void}
 */




/**
 * Create a tokenizer.
 * Tokenizers deal with one type of data (e.g., containers, flow, text).
 * The parser is the object dealing with it all.
 * `initialize` works like other constructs, except that only its `tokenize`
 * function is used, in which case it doesn’t receive an `ok` or `nok`.
 * `from` can be given to set the point before the first character, although
 * when further lines are indented, they must be set with `defineSkip`.
 *
 * @param {ParseContext} parser
 * @param {InitialConstruct} initialize
 * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]
 * @returns {TokenizeContext}
 */
function createTokenizer(parser, initialize, from) {
  /** @type {Point} */
  let point = Object.assign(
    from
      ? Object.assign({}, from)
      : {
          line: 1,
          column: 1,
          offset: 0
        },
    {
      _index: 0,
      _bufferIndex: -1
    }
  )
  /** @type {Record<string, number>} */

  const columnStart = {}
  /** @type {Construct[]} */

  const resolveAllConstructs = []
  /** @type {Chunk[]} */

  let chunks = []
  /** @type {Token[]} */

  let stack = []
  /** @type {boolean|undefined} */

  let consumed = true
  /**
   * Tools used for tokenizing.
   *
   * @type {Effects}
   */

  const effects = {
    consume,
    enter,
    exit,
    attempt: constructFactory(onsuccessfulconstruct),
    check: constructFactory(onsuccessfulcheck),
    interrupt: constructFactory(onsuccessfulcheck, {
      interrupt: true
    })
  }
  /**
   * State and tools for resolving and serializing.
   *
   * @type {TokenizeContext}
   */

  const context = {
    previous: null,
    code: null,
    containerState: {},
    events: [],
    parser,
    sliceStream,
    sliceSerialize,
    now,
    defineSkip,
    write
  }
  /**
   * The state function.
   *
   * @type {State|void}
   */

  let state = initialize.tokenize.call(context, effects)
  /**
   * Track which character we expect to be consumed, to catch bugs.
   *
   * @type {Code}
   */

  let expectedCode

  if (initialize.resolveAll) {
    resolveAllConstructs.push(initialize)
  }

  return context
  /** @type {TokenizeContext['write']} */

  function write(slice) {
    chunks = push(chunks, slice)
    main() // Exit if we’re not done, resolve might change stuff.

    if (chunks[chunks.length - 1] !== null) {
      return []
    }

    addResult(initialize, 0) // Otherwise, resolve, and exit.

    context.events = resolveAll(resolveAllConstructs, context.events, context)
    return context.events
  } //
  // Tools.
  //

  /** @type {TokenizeContext['sliceSerialize']} */

  function sliceSerialize(token, expandTabs) {
    return serializeChunks(sliceStream(token), expandTabs)
  }
  /** @type {TokenizeContext['sliceStream']} */

  function sliceStream(token) {
    return sliceChunks(chunks, token)
  }
  /** @type {TokenizeContext['now']} */

  function now() {
    return Object.assign({}, point)
  }
  /** @type {TokenizeContext['defineSkip']} */

  function defineSkip(value) {
    columnStart[value.line] = value.column
    accountForPotentialSkip()
  } //
  // State management.
  //

  /**
   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by
   * `consume`).
   * Here is where we walk through the chunks, which either include strings of
   * several characters, or numerical character codes.
   * The reason to do this in a loop instead of a call is so the stack can
   * drain.
   *
   * @returns {void}
   */

  function main() {
    /** @type {number} */
    let chunkIndex

    while (point._index < chunks.length) {
      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.

      if (typeof chunk === 'string') {
        chunkIndex = point._index

        if (point._bufferIndex < 0) {
          point._bufferIndex = 0
        }

        while (
          point._index === chunkIndex &&
          point._bufferIndex < chunk.length
        ) {
          go(chunk.charCodeAt(point._bufferIndex))
        }
      } else {
        go(chunk)
      }
    }
  }
  /**
   * Deal with one code.
   *
   * @param {Code} code
   * @returns {void}
   */

  function go(code) {
    consumed = undefined
    expectedCode = code
    state = state(code)
  }
  /** @type {Effects['consume']} */

  function consume(code) {
    if (markdownLineEnding(code)) {
      point.line++
      point.column = 1
      point.offset += code === -3 ? 2 : 1
      accountForPotentialSkip()
    } else if (code !== -1) {
      point.column++
      point.offset++
    } // Not in a string chunk.

    if (point._bufferIndex < 0) {
      point._index++
    } else {
      point._bufferIndex++ // At end of string chunk.
      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference
      // strings.

      if (point._bufferIndex === chunks[point._index].length) {
        point._bufferIndex = -1
        point._index++
      }
    } // Expose the previous character.

    context.previous = code // Mark as consumed.

    consumed = true
  }
  /** @type {Effects['enter']} */

  function enter(type, fields) {
    /** @type {Token} */
    // @ts-expect-error Patch instead of assign required fields to help GC.
    const token = fields || {}
    token.type = type
    token.start = now()
    context.events.push(['enter', token, context])
    stack.push(token)
    return token
  }
  /** @type {Effects['exit']} */

  function exit(type) {
    const token = stack.pop()
    token.end = now()
    context.events.push(['exit', token, context])
    return token
  }
  /**
   * Use results.
   *
   * @type {ReturnHandle}
   */

  function onsuccessfulconstruct(construct, info) {
    addResult(construct, info.from)
  }
  /**
   * Discard results.
   *
   * @type {ReturnHandle}
   */

  function onsuccessfulcheck(_, info) {
    info.restore()
  }
  /**
   * Factory to attempt/check/interrupt.
   *
   * @param {ReturnHandle} onreturn
   * @param {Record<string, unknown>} [fields]
   */

  function constructFactory(onreturn, fields) {
    return hook
    /**
     * Handle either an object mapping codes to constructs, a list of
     * constructs, or a single construct.
     *
     * @param {Construct|Construct[]|ConstructRecord} constructs
     * @param {State} returnState
     * @param {State} [bogusState]
     * @returns {State}
     */

    function hook(constructs, returnState, bogusState) {
      /** @type {Construct[]} */
      let listOfConstructs
      /** @type {number} */

      let constructIndex
      /** @type {Construct} */

      let currentConstruct
      /** @type {Info} */

      let info
      return Array.isArray(constructs)
        ? /* c8 ignore next 1 */
          handleListOfConstructs(constructs)
        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.
        ? handleListOfConstructs([constructs])
        : handleMapOfConstructs(constructs)
      /**
       * Handle a list of construct.
       *
       * @param {ConstructRecord} map
       * @returns {State}
       */

      function handleMapOfConstructs(map) {
        return start
        /** @type {State} */

        function start(code) {
          const def = code !== null && map[code]
          const all = code !== null && map.null
          const list = [
            // To do: add more extension tests.

            /* c8 ignore next 2 */
            ...(Array.isArray(def) ? def : def ? [def] : []),
            ...(Array.isArray(all) ? all : all ? [all] : [])
          ]
          return handleListOfConstructs(list)(code)
        }
      }
      /**
       * Handle a list of construct.
       *
       * @param {Construct[]} list
       * @returns {State}
       */

      function handleListOfConstructs(list) {
        listOfConstructs = list
        constructIndex = 0

        if (list.length === 0) {
          return bogusState
        }

        return handleConstruct(list[constructIndex])
      }
      /**
       * Handle a single construct.
       *
       * @param {Construct} construct
       * @returns {State}
       */

      function handleConstruct(construct) {
        return start
        /** @type {State} */

        function start(code) {
          // To do: not needed to store if there is no bogus state, probably?
          // Currently doesn’t work because `inspect` in document does a check
          // w/o a bogus, which doesn’t make sense. But it does seem to help perf
          // by not storing.
          info = store()
          currentConstruct = construct

          if (!construct.partial) {
            context.currentConstruct = construct
          }

          if (
            construct.name &&
            context.parser.constructs.disable.null.includes(construct.name)
          ) {
            return nok(code)
          }

          return construct.tokenize.call(
            // If we do have fields, create an object w/ `context` as its
            // prototype.
            // This allows a “live binding”, which is needed for `interrupt`.
            fields ? Object.assign(Object.create(context), fields) : context,
            effects,
            ok,
            nok
          )(code)
        }
      }
      /** @type {State} */

      function ok(code) {
        consumed = true
        onreturn(currentConstruct, info)
        return returnState
      }
      /** @type {State} */

      function nok(code) {
        consumed = true
        info.restore()

        if (++constructIndex < listOfConstructs.length) {
          return handleConstruct(listOfConstructs[constructIndex])
        }

        return bogusState
      }
    }
  }
  /**
   * @param {Construct} construct
   * @param {number} from
   * @returns {void}
   */

  function addResult(construct, from) {
    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {
      resolveAllConstructs.push(construct)
    }

    if (construct.resolve) {
      splice(
        context.events,
        from,
        context.events.length - from,
        construct.resolve(context.events.slice(from), context)
      )
    }

    if (construct.resolveTo) {
      context.events = construct.resolveTo(context.events, context)
    }
  }
  /**
   * Store state.
   *
   * @returns {Info}
   */

  function store() {
    const startPoint = now()
    const startPrevious = context.previous
    const startCurrentConstruct = context.currentConstruct
    const startEventsIndex = context.events.length
    const startStack = Array.from(stack)
    return {
      restore,
      from: startEventsIndex
    }
    /**
     * Restore state.
     *
     * @returns {void}
     */

    function restore() {
      point = startPoint
      context.previous = startPrevious
      context.currentConstruct = startCurrentConstruct
      context.events.length = startEventsIndex
      stack = startStack
      accountForPotentialSkip()
    }
  }
  /**
   * Move the current point a bit forward in the line when it’s on a column
   * skip.
   *
   * @returns {void}
   */

  function accountForPotentialSkip() {
    if (point.line in columnStart && point.column < 2) {
      point.column = columnStart[point.line]
      point.offset += columnStart[point.line] - 1
    }
  }
}
/**
 * Get the chunks from a slice of chunks in the range of a token.
 *
 * @param {Chunk[]} chunks
 * @param {Pick<Token, 'start'|'end'>} token
 * @returns {Chunk[]}
 */

function sliceChunks(chunks, token) {
  const startIndex = token.start._index
  const startBufferIndex = token.start._bufferIndex
  const endIndex = token.end._index
  const endBufferIndex = token.end._bufferIndex
  /** @type {Chunk[]} */

  let view

  if (startIndex === endIndex) {
    // @ts-expect-error `_bufferIndex` is used on string chunks.
    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]
  } else {
    view = chunks.slice(startIndex, endIndex)

    if (startBufferIndex > -1) {
      // @ts-expect-error `_bufferIndex` is used on string chunks.
      view[0] = view[0].slice(startBufferIndex)
    }

    if (endBufferIndex > 0) {
      // @ts-expect-error `_bufferIndex` is used on string chunks.
      view.push(chunks[endIndex].slice(0, endBufferIndex))
    }
  }

  return view
}
/**
 * Get the string value of a slice of chunks.
 *
 * @param {Chunk[]} chunks
 * @param {boolean} [expandTabs=false]
 * @returns {string}
 */

function serializeChunks(chunks, expandTabs) {
  let index = -1
  /** @type {string[]} */

  const result = []
  /** @type {boolean|undefined} */

  let atTab

  while (++index < chunks.length) {
    const chunk = chunks[index]
    /** @type {string} */

    let value

    if (typeof chunk === 'string') {
      value = chunk
    } else
      switch (chunk) {
        case -5: {
          value = '\r'
          break
        }

        case -4: {
          value = '\n'
          break
        }

        case -3: {
          value = '\r' + '\n'
          break
        }

        case -2: {
          value = expandTabs ? ' ' : '\t'
          break
        }

        case -1: {
          if (!expandTabs && atTab) continue
          value = ' '
          break
        }

        default: {
          // Currently only replacement character.
          value = String.fromCharCode(chunk)
        }
      }

    atTab = chunk === -2
    result.push(value)
  }

  return result.join('')
}

;// CONCATENATED MODULE: ./node_modules/micromark-core-commonmark/lib/thematic-break.js
/**
 * @typedef {import('micromark-util-types').Construct} Construct
 * @typedef {import('micromark-util-types').Tokenizer} Tokenizer
 * @typedef {import('micromark-util-types').State} State
 * @typedef {import('micromark-util-types').Code} Code
 */



/** @type {Construct} */
const thematicBreak = {
  name: 'thematicBreak',
  tokenize: tokenizeThematicBreak
}
/** @type {Tokenizer} */

function tokenizeThematicBreak(effects, ok, nok) {
  let size = 0
  /** @type {NonNullable<Code>} */

  let marker
  return start
  /** @type {State} */

  function start(code) {
    effects.enter('thematicBreak')
    marker = code
    return atBreak(code)
  }
  /** @type {State} */

  function atBreak(code) {
    if (code === marker) {
      effects.enter('thematicBreakSequence')
      return sequence(code)
    }

    if (markdownSpace(code)) {
      return factorySpace(effects, atBreak, 'whitespace')(code)
    }

    if (size < 3 || (code !== null && !markdownLineEnding(code))) {
      return nok(code)
    }

    effects.exit('thematicBreak')
    return ok(code)
  }
  /** @type {State} */

  function sequence(code) {
    if (code === marker) {
      effects.consume(code)
      size++
      return sequence
    }

    effects.exit('thematicBreakSequence')
    return atBreak(code)
  }
}

;// CONCATENATED MODULE: ./node_modules/micromark-core-commonmark/lib/list.js
/**
 * @typedef {import('micromark-util-types').Construct} Construct
 * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext
 * @typedef {import('micromark-util-types').Exiter} Exiter
 * @typedef {import('micromark-util-types').Tokenizer} Tokenizer
 * @typedef {import('micromark-util-types').State} State
 * @typedef {import('micromark-util-types').Code} Code
 */

/**
 * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState
 * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState
 */




/** @type {Construct} */

const list = {
  name: 'list',
  tokenize: tokenizeListStart,
  continuation: {
    tokenize: tokenizeListContinuation
  },
  exit: tokenizeListEnd
}
/** @type {Construct} */

const listItemPrefixWhitespaceConstruct = {
  tokenize: tokenizeListItemPrefixWhitespace,
  partial: true
}
/** @type {Construct} */

const indentConstruct = {
  tokenize: tokenizeIndent,
  partial: true
}
/**
 * @type {Tokenizer}
 * @this {TokenizeContextWithState}
 */

function tokenizeListStart(effects, ok, nok) {
  const self = this
  const tail = self.events[self.events.length - 1]
  let initialSize =
    tail && tail[1].type === 'linePrefix'
      ? tail[2].sliceSerialize(tail[1], true).length
      : 0
  let size = 0
  return start
  /** @type {State} */

  function start(code) {
    const kind =
      self.containerState.type ||
      (code === 42 || code === 43 || code === 45
        ? 'listUnordered'
        : 'listOrdered')

    if (
      kind === 'listUnordered'
        ? !self.containerState.marker || code === self.containerState.marker
        : asciiDigit(code)
    ) {
      if (!self.containerState.type) {
        self.containerState.type = kind
        effects.enter(kind, {
          _container: true
        })
      }

      if (kind === 'listUnordered') {
        effects.enter('listItemPrefix')
        return code === 42 || code === 45
          ? effects.check(thematicBreak, nok, atMarker)(code)
          : atMarker(code)
      }

      if (!self.interrupt || code === 49) {
        effects.enter('listItemPrefix')
        effects.enter('listItemValue')
        return inside(code)
      }
    }

    return nok(code)
  }
  /** @type {State} */

  function inside(code) {
    if (asciiDigit(code) && ++size < 10) {
      effects.consume(code)
      return inside
    }

    if (
      (!self.interrupt || size < 2) &&
      (self.containerState.marker
        ? code === self.containerState.marker
        : code === 41 || code === 46)
    ) {
      effects.exit('listItemValue')
      return atMarker(code)
    }

    return nok(code)
  }
  /**
   * @type {State}
   **/

  function atMarker(code) {
    effects.enter('listItemMarker')
    effects.consume(code)
    effects.exit('listItemMarker')
    self.containerState.marker = self.containerState.marker || code
    return effects.check(
      blankLine, // Can’t be empty when interrupting.
      self.interrupt ? nok : onBlank,
      effects.attempt(
        listItemPrefixWhitespaceConstruct,
        endOfPrefix,
        otherPrefix
      )
    )
  }
  /** @type {State} */

  function onBlank(code) {
    self.containerState.initialBlankLine = true
    initialSize++
    return endOfPrefix(code)
  }
  /** @type {State} */

  function otherPrefix(code) {
    if (markdownSpace(code)) {
      effects.enter('listItemPrefixWhitespace')
      effects.consume(code)
      effects.exit('listItemPrefixWhitespace')
      return endOfPrefix
    }

    return nok(code)
  }
  /** @type {State} */

  function endOfPrefix(code) {
    self.containerState.size =
      initialSize +
      self.sliceSerialize(effects.exit('listItemPrefix'), true).length
    return ok(code)
  }
}
/**
 * @type {Tokenizer}
 * @this {TokenizeContextWithState}
 */

function tokenizeListContinuation(effects, ok, nok) {
  const self = this
  self.containerState._closeFlow = undefined
  return effects.check(blankLine, onBlank, notBlank)
  /** @type {State} */

  function onBlank(code) {
    self.containerState.furtherBlankLines =
      self.containerState.furtherBlankLines ||
      self.containerState.initialBlankLine // We have a blank line.
    // Still, try to consume at most the items size.

    return factorySpace(
      effects,
      ok,
      'listItemIndent',
      self.containerState.size + 1
    )(code)
  }
  /** @type {State} */

  function notBlank(code) {
    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {
      self.containerState.furtherBlankLines = undefined
      self.containerState.initialBlankLine = undefined
      return notInCurrentItem(code)
    }

    self.containerState.furtherBlankLines = undefined
    self.containerState.initialBlankLine = undefined
    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)
  }
  /** @type {State} */

  function notInCurrentItem(code) {
    // While we do continue, we signal that the flow should be closed.
    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.

    self.interrupt = undefined
    return factorySpace(
      effects,
      effects.attempt(list, ok, nok),
      'linePrefix',
      self.parser.constructs.disable.null.includes('codeIndented')
        ? undefined
        : 4
    )(code)
  }
}
/**
 * @type {Tokenizer}
 * @this {TokenizeContextWithState}
 */

function tokenizeIndent(effects, ok, nok) {
  const self = this
  return factorySpace(
    effects,
    afterPrefix,
    'listItemIndent',
    self.containerState.size + 1
  )
  /** @type {State} */

  function afterPrefix(code) {
    const tail = self.events[self.events.length - 1]
    return tail &&
      tail[1].type === 'listItemIndent' &&
      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size
      ? ok(code)
      : nok(code)
  }
}
/**
 * @type {Exiter}
 * @this {TokenizeContextWithState}
 */

function tokenizeListEnd(effects) {
  effects.exit(this.containerState.type)
}
/**
 * @type {Tokenizer}
 * @this {TokenizeContextWithState}
 */

function tokenizeListItemPrefixWhitespace(effects, ok, nok) {
  const self = this
  return factorySpace(
    effects,
    afterPrefix,
    'listItemPrefixWhitespace',
    self.parser.constructs.disable.null.includes('codeIndented')
      ? undefined
      : 4 + 1
  )
  /** @type {State} */

  function afterPrefix(code) {
    const tail = self.events[self.events.length - 1]
    return !markdownSpace(code) &&
      tail &&
      tail[1].type === 'listItemPrefixWhitespace'
      ? ok(code)
      : nok(code)
  }
}

;// CONCATENATED MODULE: ./node_modules/micromark-core-commonmark/lib/block-quote.js
/**
 * @typedef {import('micromark-util-types').Construct} Construct
 * @typedef {import('micromark-util-types').Tokenizer} Tokenizer
 * @typedef {import('micromark-util-types').Exiter} Exiter
 * @typedef {import('micromark-util-types').State} State
 */



/** @type {Construct} */
const blockQuote = {
  name: 'blockQuote',
  tokenize: tokenizeBlockQuoteStart,
  continuation: {
    tokenize: tokenizeBlockQuoteContinuation
  },
  exit
}
/** @type {Tokenizer} */

function tokenizeBlockQuoteStart(effects, ok, nok) {
  const self = this
  return start
  /** @type {State} */

  function start(code) {
    if (code === 62) {
      const state = self.containerState

      if (!state.open) {
        effects.enter('blockQuote', {
          _container: true
        })
        state.open = true
      }

      effects.enter('blockQuotePrefix')
      effects.enter('blockQuoteMarker')
      effects.consume(code)
      effects.exit('blockQuoteMarker')
      return after
    }

    return nok(code)
  }
  /** @type {State} */

  function after(code) {
    if (markdownSpace(code)) {
      effects.enter('blockQuotePrefixWhitespace')
      effects.consume(code)
      effects.exit('blockQuotePrefixWhitespace')
      effects.exit('blockQuotePrefix')
      return ok
    }

    effects.exit('blockQuotePrefix')
    return ok(code)
  }
}
/** @type {Tokenizer} */

function tokenizeBlockQuoteContinuation(effects, ok, nok) {
  return factorySpace(
    effects,
    effects.attempt(blockQuote, ok, nok),
    'linePrefix',
    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4
  )
}
/** @type {Exiter} */

function exit(effects) {
  effects.exit('blockQuote')
}

;// CONCATENATED MODULE: ./node_modules/micromark-factory-destination/index.js
/**
 * @typedef {import('micromark-util-types').Effects} Effects
 * @typedef {import('micromark-util-types').State} State
 */


/**
 * @param {Effects} effects
 * @param {State} ok
 * @param {State} nok
 * @param {string} type
 * @param {string} literalType
 * @param {string} literalMarkerType
 * @param {string} rawType
 * @param {string} stringType
 * @param {number} [max=Infinity]
 * @returns {State}
 */
// eslint-disable-next-line max-params
function factoryDestination(
  effects,
  ok,
  nok,
  type,
  literalType,
  literalMarkerType,
  rawType,
  stringType,
  max
) {
  const limit = max || Number.POSITIVE_INFINITY
  let balance = 0
  return start
  /** @type {State} */

  function start(code) {
    if (code === 60) {
      effects.enter(type)
      effects.enter(literalType)
      effects.enter(literalMarkerType)
      effects.consume(code)
      effects.exit(literalMarkerType)
      return destinationEnclosedBefore
    }

    if (code === null || code === 41 || asciiControl(code)) {
      return nok(code)
    }

    effects.enter(type)
    effects.enter(rawType)
    effects.enter(stringType)
    effects.enter('chunkString', {
      contentType: 'string'
    })
    return destinationRaw(code)
  }
  /** @type {State} */

  function destinationEnclosedBefore(code) {
    if (code === 62) {
      effects.enter(literalMarkerType)
      effects.consume(code)
      effects.exit(literalMarkerType)
      effects.exit(literalType)
      effects.exit(type)
      return ok
    }

    effects.enter(stringType)
    effects.enter('chunkString', {
      contentType: 'string'
    })
    return destinationEnclosed(code)
  }
  /** @type {State} */

  function destinationEnclosed(code) {
    if (code === 62) {
      effects.exit('chunkString')
      effects.exit(stringType)
      return destinationEnclosedBefore(code)
    }

    if (code === null || code === 60 || markdownLineEnding(code)) {
      return nok(code)
    }

    effects.consume(code)
    return code === 92 ? destinationEnclosedEscape : destinationEnclosed
  }
  /** @type {State} */

  function destinationEnclosedEscape(code) {
    if (code === 60 || code === 62 || code === 92) {
      effects.consume(code)
      return destinationEnclosed
    }

    return destinationEnclosed(code)
  }
  /** @type {State} */

  function destinationRaw(code) {
    if (code === 40) {
      if (++balance > limit) return nok(code)
      effects.consume(code)
      return destinationRaw
    }

    if (code === 41) {
      if (!balance--) {
        effects.exit('chunkString')
        effects.exit(stringType)
        effects.exit(rawType)
        effects.exit(type)
        return ok(code)
      }

      effects.consume(code)
      return destinationRaw
    }

    if (code === null || markdownLineEndingOrSpace(code)) {
      if (balance) return nok(code)
      effects.exit('chunkString')
      effects.exit(stringType)
      effects.exit(rawType)
      effects.exit(type)
      return ok(code)
    }

    if (asciiControl(code)) return nok(code)
    effects.consume(code)
    return code === 92 ? destinationRawEscape : destinationRaw
  }
  /** @type {State} */

  function destinationRawEscape(code) {
    if (code === 40 || code === 41 || code === 92) {
      effects.consume(code)
      return destinationRaw
    }

    return destinationRaw(code)
  }
}

;// CONCATENATED MODULE: ./node_modules/micromark-factory-label/index.js
/**
 * @typedef {import('micromark-util-types').Effects} Effects
 * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext
 * @typedef {import('micromark-util-types').State} State
 */


/**
 * @this {TokenizeContext}
 * @param {Effects} effects
 * @param {State} ok
 * @param {State} nok
 * @param {string} type
 * @param {string} markerType
 * @param {string} stringType
 * @returns {State}
 */
// eslint-disable-next-line max-params
function factoryLabel(effects, ok, nok, type, markerType, stringType) {
  const self = this
  let size = 0
  /** @type {boolean} */

  let data
  return start
  /** @type {State} */

  function start(code) {
    effects.enter(type)
    effects.enter(markerType)
    effects.consume(code)
    effects.exit(markerType)
    effects.enter(stringType)
    return atBreak
  }
  /** @type {State} */

  function atBreak(code) {
    if (
      code === null ||
      code === 91 ||
      (code === 93 && !data) ||
      /* To do: remove in the future once we’ve switched from
       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,
       * which doesn’t need this */

      /* Hidden footnotes hook */

      /* c8 ignore next 3 */
      (code === 94 &&
        !size &&
        '_hiddenFootnoteSupport' in self.parser.constructs) ||
      size > 999
    ) {
      return nok(code)
    }

    if (code === 93) {
      effects.exit(stringType)
      effects.enter(markerType)
      effects.consume(code)
      effects.exit(markerType)
      effects.exit(type)
      return ok
    }

    if (markdownLineEnding(code)) {
      effects.enter('lineEnding')
      effects.consume(code)
      effects.exit('lineEnding')
      return atBreak
    }

    effects.enter('chunkString', {
      contentType: 'string'
    })
    return label(code)
  }
  /** @type {State} */

  function label(code) {
    if (
      code === null ||
      code === 91 ||
      code === 93 ||
      markdownLineEnding(code) ||
      size++ > 999
    ) {
      effects.exit('chunkString')
      return atBreak(code)
    }

    effects.consume(code)
    data = data || !markdownSpace(code)
    return code === 92 ? labelEscape : label
  }
  /** @type {State} */

  function labelEscape(code) {
    if (code === 91 || code === 92 || code === 93) {
      effects.consume(code)
      size++
      return label
    }

    return label(code)
  }
}

;// CONCATENATED MODULE: ./node_modules/micromark-factory-title/index.js
/**
 * @typedef {import('micromark-util-types').Effects} Effects
 * @typedef {import('micromark-util-types').State} State
 * @typedef {import('micromark-util-types').Code} Code
 */



/**
 * @param {Effects} effects
 * @param {State} ok
 * @param {State} nok
 * @param {string} type
 * @param {string} markerType
 * @param {string} stringType
 * @returns {State}
 */
// eslint-disable-next-line max-params
function factoryTitle(effects, ok, nok, type, markerType, stringType) {
  /** @type {NonNullable<Code>} */
  let marker
  return start
  /** @type {State} */

  function start(code) {
    effects.enter(type)
    effects.enter(markerType)
    effects.consume(code)
    effects.exit(markerType)
    marker = code === 40 ? 41 : code
    return atFirstTitleBreak
  }
  /** @type {State} */

  function atFirstTitleBreak(code) {
    if (code === marker) {
      effects.enter(markerType)
      effects.consume(code)
      effects.exit(markerType)
      effects.exit(type)
      return ok
    }

    effects.enter(stringType)
    return atTitleBreak(code)
  }
  /** @type {State} */

  function atTitleBreak(code) {
    if (code === marker) {
      effects.exit(stringType)
      return atFirstTitleBreak(marker)
    }

    if (code === null) {
      return nok(code)
    } // Note: blank lines can’t exist in content.

    if (markdownLineEnding(code)) {
      effects.enter('lineEnding')
      effects.consume(code)
      effects.exit('lineEnding')
      return factorySpace(effects, atTitleBreak, 'linePrefix')
    }

    effects.enter('chunkString', {
      contentType: 'string'
    })
    return title(code)
  }
  /** @type {State} */

  function title(code) {
    if (code === marker || code === null || markdownLineEnding(code)) {
      effects.exit('chunkString')
      return atTitleBreak(code)
    }

    effects.consume(code)
    return code === 92 ? titleEscape : title
  }
  /** @type {State} */

  function titleEscape(code) {
    if (code === marker || code === 92) {
      effects.consume(code)
      return title
    }

    return title(code)
  }
}

;// CONCATENATED MODULE: ./node_modules/micromark-factory-whitespace/index.js
/**
 * @typedef {import('micromark-util-types').Effects} Effects
 * @typedef {import('micromark-util-types').State} State
 */



/**
 * @param {Effects} effects
 * @param {State} ok
 */
function factoryWhitespace(effects, ok) {
  /** @type {boolean} */
  let seen
  return start
  /** @type {State} */

  function start(code) {
    if (markdownLineEnding(code)) {
      effects.enter('lineEnding')
      effects.consume(code)
      effects.exit('lineEnding')
      seen = true
      return start
    }

    if (markdownSpace(code)) {
      return factorySpace(
        effects,
        start,
        seen ? 'linePrefix' : 'lineSuffix'
      )(code)
    }

    return ok(code)
  }
}

;// CONCATENATED MODULE: ./node_modules/micromark-util-normalize-identifier/index.js
/**
 * Normalize an identifier (such as used in definitions).
 *
 * @param {string} value
 * @returns {string}
 */
function normalizeIdentifier(value) {
  return (
    value // Collapse Markdown whitespace.
      .replace(/[\t\n\r ]+/g, ' ') // Trim.
      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase
      // counterpart is uppercased will result in a different uppercase
      // character.
      // Hence, to get that form, we perform both lower- and uppercase.
      // Upper case makes sure keys will not interact with default prototypal
      // methods: no method is uppercase.
      .toLowerCase()
      .toUpperCase()
  )
}

;// CONCATENATED MODULE: ./node_modules/micromark-core-commonmark/lib/definition.js
/**
 * @typedef {import('micromark-util-types').Construct} Construct
 * @typedef {import('micromark-util-types').Tokenizer} Tokenizer
 * @typedef {import('micromark-util-types').State} State
 */








/** @type {Construct} */
const definition = {
  name: 'definition',
  tokenize: tokenizeDefinition
}
/** @type {Construct} */

const titleConstruct = {
  tokenize: tokenizeTitle,
  partial: true
}
/** @type {Tokenizer} */

function tokenizeDefinition(effects, ok, nok) {
  const self = this
  /** @type {string} */

  let identifier
  return start
  /** @type {State} */

  function start(code) {
    effects.enter('definition')
    return factoryLabel.call(
      self,
      effects,
      labelAfter,
      nok,
      'definitionLabel',
      'definitionLabelMarker',
      'definitionLabelString'
    )(code)
  }
  /** @type {State} */

  function labelAfter(code) {
    identifier = normalizeIdentifier(
      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)
    )

    if (code === 58) {
      effects.enter('definitionMarker')
      effects.consume(code)
      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.

      return factoryWhitespace(
        effects,
        factoryDestination(
          effects,
          effects.attempt(
            titleConstruct,
            factorySpace(effects, after, 'whitespace'),
            factorySpace(effects, after, 'whitespace')
          ),
          nok,
          'definitionDestination',
          'definitionDestinationLiteral',
          'definitionDestinationLiteralMarker',
          'definitionDestinationRaw',
          'definitionDestinationString'
        )
      )
    }

    return nok(code)
  }
  /** @type {State} */

  function after(code) {
    if (code === null || markdownLineEnding(code)) {
      effects.exit('definition')

      if (!self.parser.defined.includes(identifier)) {
        self.parser.defined.push(identifier)
      }

      return ok(code)
    }

    return nok(code)
  }
}
/** @type {Tokenizer} */

function tokenizeTitle(effects, ok, nok) {
  return start
  /** @type {State} */

  function start(code) {
    return markdownLineEndingOrSpace(code)
      ? factoryWhitespace(effects, before)(code)
      : nok(code)
  }
  /** @type {State} */

  function before(code) {
    if (code === 34 || code === 39 || code === 40) {
      return factoryTitle(
        effects,
        factorySpace(effects, after, 'whitespace'),
        nok,
        'definitionTitle',
        'definitionTitleMarker',
        'definitionTitleString'
      )(code)
    }

    return nok(code)
  }
  /** @type {State} */

  function after(code) {
    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)
  }
}

;// CONCATENATED MODULE: ./node_modules/micromark-core-commonmark/lib/code-indented.js
/**
 * @typedef {import('micromark-util-types').Construct} Construct
 * @typedef {import('micromark-util-types').Tokenizer} Tokenizer
 * @typedef {import('micromark-util-types').Resolver} Resolver
 * @typedef {import('micromark-util-types').Token} Token
 * @typedef {import('micromark-util-types').State} State
 */



/** @type {Construct} */
const codeIndented = {
  name: 'codeIndented',
  tokenize: tokenizeCodeIndented
}
/** @type {Construct} */

const indentedContent = {
  tokenize: tokenizeIndentedContent,
  partial: true
}
/** @type {Tokenizer} */

function tokenizeCodeIndented(effects, ok, nok) {
  const self = this
  return start
  /** @type {State} */

  function start(code) {
    effects.enter('codeIndented')
    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)
  }
  /** @type {State} */

  function afterStartPrefix(code) {
    const tail = self.events[self.events.length - 1]
    return tail &&
      tail[1].type === 'linePrefix' &&
      tail[2].sliceSerialize(tail[1], true).length >= 4
      ? afterPrefix(code)
      : nok(code)
  }
  /** @type {State} */

  function afterPrefix(code) {
    if (code === null) {
      return after(code)
    }

    if (markdownLineEnding(code)) {
      return effects.attempt(indentedContent, afterPrefix, after)(code)
    }

    effects.enter('codeFlowValue')
    return content(code)
  }
  /** @type {State} */

  function content(code) {
    if (code === null || markdownLineEnding(code)) {
      effects.exit('codeFlowValue')
      return afterPrefix(code)
    }

    effects.consume(code)
    return content
  }
  /** @type {State} */

  function after(code) {
    effects.exit('codeIndented')
    return ok(code)
  }
}
/** @type {Tokenizer} */

function tokenizeIndentedContent(effects, ok, nok) {
  const self = this
  return start
  /** @type {State} */

  function start(code) {
    // If this is a lazy line, it can’t be code.
    if (self.parser.lazy[self.now().line]) {
      return nok(code)
    }

    if (markdownLineEnding(code)) {
      effects.enter('lineEnding')
      effects.consume(code)
      effects.exit('lineEnding')
      return start
    }

    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)
  }
  /** @type {State} */

  function afterPrefix(code) {
    const tail = self.events[self.events.length - 1]
    return tail &&
      tail[1].type === 'linePrefix' &&
      tail[2].sliceSerialize(tail[1], true).length >= 4
      ? ok(code)
      : markdownLineEnding(code)
      ? start(code)
      : nok(code)
  }
}

;// CONCATENATED MODULE: ./node_modules/micromark-core-commonmark/lib/heading-atx.js
/**
 * @typedef {import('micromark-util-types').Construct} Construct
 * @typedef {import('micromark-util-types').Resolver} Resolver
 * @typedef {import('micromark-util-types').Tokenizer} Tokenizer
 * @typedef {import('micromark-util-types').Token} Token
 * @typedef {import('micromark-util-types').State} State
 */




/** @type {Construct} */
const headingAtx = {
  name: 'headingAtx',
  tokenize: tokenizeHeadingAtx,
  resolve: resolveHeadingAtx
}
/** @type {Resolver} */

function resolveHeadingAtx(events, context) {
  let contentEnd = events.length - 2
  let contentStart = 3
  /** @type {Token} */

  let content
  /** @type {Token} */

  let text // Prefix whitespace, part of the opening.

  if (events[contentStart][1].type === 'whitespace') {
    contentStart += 2
  } // Suffix whitespace, part of the closing.

  if (
    contentEnd - 2 > contentStart &&
    events[contentEnd][1].type === 'whitespace'
  ) {
    contentEnd -= 2
  }

  if (
    events[contentEnd][1].type === 'atxHeadingSequence' &&
    (contentStart === contentEnd - 1 ||
      (contentEnd - 4 > contentStart &&
        events[contentEnd - 2][1].type === 'whitespace'))
  ) {
    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4
  }

  if (contentEnd > contentStart) {
    content = {
      type: 'atxHeadingText',
      start: events[contentStart][1].start,
      end: events[contentEnd][1].end
    }
    text = {
      type: 'chunkText',
      start: events[contentStart][1].start,
      end: events[contentEnd][1].end,
      // @ts-expect-error Constants are fine to assign.
      contentType: 'text'
    }
    splice(events, contentStart, contentEnd - contentStart + 1, [
      ['enter', content, context],
      ['enter', text, context],
      ['exit', text, context],
      ['exit', content, context]
    ])
  }

  return events
}
/** @type {Tokenizer} */

function tokenizeHeadingAtx(effects, ok, nok) {
  const self = this
  let size = 0
  return start
  /** @type {State} */

  function start(code) {
    effects.enter('atxHeading')
    effects.enter('atxHeadingSequence')
    return fenceOpenInside(code)
  }
  /** @type {State} */

  function fenceOpenInside(code) {
    if (code === 35 && size++ < 6) {
      effects.consume(code)
      return fenceOpenInside
    }

    if (code === null || markdownLineEndingOrSpace(code)) {
      effects.exit('atxHeadingSequence')
      return self.interrupt ? ok(code) : headingBreak(code)
    }

    return nok(code)
  }
  /** @type {State} */

  function headingBreak(code) {
    if (code === 35) {
      effects.enter('atxHeadingSequence')
      return sequence(code)
    }

    if (code === null || markdownLineEnding(code)) {
      effects.exit('atxHeading')
      return ok(code)
    }

    if (markdownSpace(code)) {
      return factorySpace(effects, headingBreak, 'whitespace')(code)
    }

    effects.enter('atxHeadingText')
    return data(code)
  }
  /** @type {State} */

  function sequence(code) {
    if (code === 35) {
      effects.consume(code)
      return sequence
    }

    effects.exit('atxHeadingSequence')
    return headingBreak(code)
  }
  /** @type {State} */

  function data(code) {
    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {
      effects.exit('atxHeadingText')
      return headingBreak(code)
    }

    effects.consume(code)
    return data
  }
}

;// CONCATENATED MODULE: ./node_modules/micromark-core-commonmark/lib/setext-underline.js
/**
 * @typedef {import('micromark-util-types').Construct} Construct
 * @typedef {import('micromark-util-types').Resolver} Resolver
 * @typedef {import('micromark-util-types').Tokenizer} Tokenizer
 * @typedef {import('micromark-util-types').State} State
 * @typedef {import('micromark-util-types').Code} Code
 */



/** @type {Construct} */
const setextUnderline = {
  name: 'setextUnderline',
  tokenize: tokenizeSetextUnderline,
  resolveTo: resolveToSetextUnderline
}
/** @type {Resolver} */

function resolveToSetextUnderline(events, context) {
  let index = events.length
  /** @type {number|undefined} */

  let content
  /** @type {number|undefined} */

  let text
  /** @type {number|undefined} */

  let definition // Find the opening of the content.
  // It’ll always exist: we don’t tokenize if it isn’t there.

  while (index--) {
    if (events[index][0] === 'enter') {
      if (events[index][1].type === 'content') {
        content = index
        break
      }

      if (events[index][1].type === 'paragraph') {
        text = index
      }
    } // Exit
    else {
      if (events[index][1].type === 'content') {
        // Remove the content end (if needed we’ll add it later)
        events.splice(index, 1)
      }

      if (!definition && events[index][1].type === 'definition') {
        definition = index
      }
    }
  }

  const heading = {
    type: 'setextHeading',
    start: Object.assign({}, events[text][1].start),
    end: Object.assign({}, events[events.length - 1][1].end)
  } // Change the paragraph to setext heading text.

  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,
  // but we need move it.

  if (definition) {
    events.splice(text, 0, ['enter', heading, context])
    events.splice(definition + 1, 0, ['exit', events[content][1], context])
    events[content][1].end = Object.assign({}, events[definition][1].end)
  } else {
    events[content][1] = heading
  } // Add the heading exit at the end.

  events.push(['exit', heading, context])
  return events
}
/** @type {Tokenizer} */

function tokenizeSetextUnderline(effects, ok, nok) {
  const self = this
  let index = self.events.length
  /** @type {NonNullable<Code>} */

  let marker
  /** @type {boolean} */

  let paragraph // Find an opening.

  while (index--) {
    // Skip enter/exit of line ending, line prefix, and content.
    // We can now either have a definition or a paragraph.
    if (
      self.events[index][1].type !== 'lineEnding' &&
      self.events[index][1].type !== 'linePrefix' &&
      self.events[index][1].type !== 'content'
    ) {
      paragraph = self.events[index][1].type === 'paragraph'
      break
    }
  }

  return start
  /** @type {State} */

  function start(code) {
    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {
      effects.enter('setextHeadingLine')
      effects.enter('setextHeadingLineSequence')
      marker = code
      return closingSequence(code)
    }

    return nok(code)
  }
  /** @type {State} */

  function closingSequence(code) {
    if (code === marker) {
      effects.consume(code)
      return closingSequence
    }

    effects.exit('setextHeadingLineSequence')
    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)
  }
  /** @type {State} */

  function closingSequenceEnd(code) {
    if (code === null || markdownLineEnding(code)) {
      effects.exit('setextHeadingLine')
      return ok(code)
    }

    return nok(code)
  }
}

;// CONCATENATED MODULE: ./node_modules/micromark-util-html-tag-name/index.js
/**
 * List of lowercase HTML tag names which when parsing HTML (flow), result
 * in more relaxed rules (condition 6): because they are known blocks, the
 * HTML-like syntax doesn’t have to be strictly parsed.
 * For tag names not in this list, a more strict algorithm (condition 7) is used
 * to detect whether the HTML-like syntax is seen as HTML (flow) or not.
 *
 * This is copied from:
 * <https://spec.commonmark.org/0.30/#html-blocks>.
 */
const htmlBlockNames = [
  'address',
  'article',
  'aside',
  'base',
  'basefont',
  'blockquote',
  'body',
  'caption',
  'center',
  'col',
  'colgroup',
  'dd',
  'details',
  'dialog',
  'dir',
  'div',
  'dl',
  'dt',
  'fieldset',
  'figcaption',
  'figure',
  'footer',
  'form',
  'frame',
  'frameset',
  'h1',
  'h2',
  'h3',
  'h4',
  'h5',
  'h6',
  'head',
  'header',
  'hr',
  'html',
  'iframe',
  'legend',
  'li',
  'link',
  'main',
  'menu',
  'menuitem',
  'nav',
  'noframes',
  'ol',
  'optgroup',
  'option',
  'p',
  'param',
  'section',
  'summary',
  'table',
  'tbody',
  'td',
  'tfoot',
  'th',
  'thead',
  'title',
  'tr',
  'track',
  'ul'
]

/**
 * List of lowercase HTML tag names which when parsing HTML (flow), result in
 * HTML that can include lines w/o exiting, until a closing tag also in this
 * list is found (condition 1).
 *
 * This module is copied from:
 * <https://spec.commonmark.org/0.30/#html-blocks>.
 *
 * Note that `textarea` was added in `CommonMark@0.30`.
 */
const htmlRawNames = ['pre', 'script', 'style', 'textarea']

;// CONCATENATED MODULE: ./node_modules/micromark-core-commonmark/lib/html-flow.js
/**
 * @typedef {import('micromark-util-types').Construct} Construct
 * @typedef {import('micromark-util-types').Resolver} Resolver
 * @typedef {import('micromark-util-types').Tokenizer} Tokenizer
 * @typedef {import('micromark-util-types').State} State
 * @typedef {import('micromark-util-types').Code} Code
 */



/** @type {Construct} */

const htmlFlow = {
  name: 'htmlFlow',
  tokenize: tokenizeHtmlFlow,
  resolveTo: resolveToHtmlFlow,
  concrete: true
}
/** @type {Construct} */

const nextBlankConstruct = {
  tokenize: tokenizeNextBlank,
  partial: true
}
/** @type {Resolver} */

function resolveToHtmlFlow(events) {
  let index = events.length

  while (index--) {
    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {
      break
    }
  }

  if (index > 1 && events[index - 2][1].type === 'linePrefix') {
    // Add the prefix start to the HTML token.
    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.

    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.

    events.splice(index - 2, 2)
  }

  return events
}
/** @type {Tokenizer} */

function tokenizeHtmlFlow(effects, ok, nok) {
  const self = this
  /** @type {number} */

  let kind
  /** @type {boolean} */

  let startTag
  /** @type {string} */

  let buffer
  /** @type {number} */

  let index
  /** @type {Code} */

  let marker
  return start
  /** @type {State} */

  function start(code) {
    effects.enter('htmlFlow')
    effects.enter('htmlFlowData')
    effects.consume(code)
    return open
  }
  /** @type {State} */

  function open(code) {
    if (code === 33) {
      effects.consume(code)
      return declarationStart
    }

    if (code === 47) {
      effects.consume(code)
      return tagCloseStart
    }

    if (code === 63) {
      effects.consume(code)
      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`
      // right now, so we do need to search for `>`, similar to declarations.

      return self.interrupt ? ok : continuationDeclarationInside
    }

    if (asciiAlpha(code)) {
      effects.consume(code)
      buffer = String.fromCharCode(code)
      startTag = true
      return tagName
    }

    return nok(code)
  }
  /** @type {State} */

  function declarationStart(code) {
    if (code === 45) {
      effects.consume(code)
      kind = 2
      return commentOpenInside
    }

    if (code === 91) {
      effects.consume(code)
      kind = 5
      buffer = 'CDATA['
      index = 0
      return cdataOpenInside
    }

    if (asciiAlpha(code)) {
      effects.consume(code)
      kind = 4
      return self.interrupt ? ok : continuationDeclarationInside
    }

    return nok(code)
  }
  /** @type {State} */

  function commentOpenInside(code) {
    if (code === 45) {
      effects.consume(code)
      return self.interrupt ? ok : continuationDeclarationInside
    }

    return nok(code)
  }
  /** @type {State} */

  function cdataOpenInside(code) {
    if (code === buffer.charCodeAt(index++)) {
      effects.consume(code)
      return index === buffer.length
        ? self.interrupt
          ? ok
          : continuation
        : cdataOpenInside
    }

    return nok(code)
  }
  /** @type {State} */

  function tagCloseStart(code) {
    if (asciiAlpha(code)) {
      effects.consume(code)
      buffer = String.fromCharCode(code)
      return tagName
    }

    return nok(code)
  }
  /** @type {State} */

  function tagName(code) {
    if (
      code === null ||
      code === 47 ||
      code === 62 ||
      markdownLineEndingOrSpace(code)
    ) {
      if (
        code !== 47 &&
        startTag &&
        htmlRawNames.includes(buffer.toLowerCase())
      ) {
        kind = 1
        return self.interrupt ? ok(code) : continuation(code)
      }

      if (htmlBlockNames.includes(buffer.toLowerCase())) {
        kind = 6

        if (code === 47) {
          effects.consume(code)
          return basicSelfClosing
        }

        return self.interrupt ? ok(code) : continuation(code)
      }

      kind = 7 // Do not support complete HTML when interrupting

      return self.interrupt && !self.parser.lazy[self.now().line]
        ? nok(code)
        : startTag
        ? completeAttributeNameBefore(code)
        : completeClosingTagAfter(code)
    }

    if (code === 45 || asciiAlphanumeric(code)) {
      effects.consume(code)
      buffer += String.fromCharCode(code)
      return tagName
    }

    return nok(code)
  }
  /** @type {State} */

  function basicSelfClosing(code) {
    if (code === 62) {
      effects.consume(code)
      return self.interrupt ? ok : continuation
    }

    return nok(code)
  }
  /** @type {State} */

  function completeClosingTagAfter(code) {
    if (markdownSpace(code)) {
      effects.consume(code)
      return completeClosingTagAfter
    }

    return completeEnd(code)
  }
  /** @type {State} */

  function completeAttributeNameBefore(code) {
    if (code === 47) {
      effects.consume(code)
      return completeEnd
    }

    if (code === 58 || code === 95 || asciiAlpha(code)) {
      effects.consume(code)
      return completeAttributeName
    }

    if (markdownSpace(code)) {
      effects.consume(code)
      return completeAttributeNameBefore
    }

    return completeEnd(code)
  }
  /** @type {State} */

  function completeAttributeName(code) {
    if (
      code === 45 ||
      code === 46 ||
      code === 58 ||
      code === 95 ||
      asciiAlphanumeric(code)
    ) {
      effects.consume(code)
      return completeAttributeName
    }

    return completeAttributeNameAfter(code)
  }
  /** @type {State} */

  function completeAttributeNameAfter(code) {
    if (code === 61) {
      effects.consume(code)
      return completeAttributeValueBefore
    }

    if (markdownSpace(code)) {
      effects.consume(code)
      return completeAttributeNameAfter
    }

    return completeAttributeNameBefore(code)
  }
  /** @type {State} */

  function completeAttributeValueBefore(code) {
    if (
      code === null ||
      code === 60 ||
      code === 61 ||
      code === 62 ||
      code === 96
    ) {
      return nok(code)
    }

    if (code === 34 || code === 39) {
      effects.consume(code)
      marker = code
      return completeAttributeValueQuoted
    }

    if (markdownSpace(code)) {
      effects.consume(code)
      return completeAttributeValueBefore
    }

    marker = null
    return completeAttributeValueUnquoted(code)
  }
  /** @type {State} */

  function completeAttributeValueQuoted(code) {
    if (code === null || markdownLineEnding(code)) {
      return nok(code)
    }

    if (code === marker) {
      effects.consume(code)
      return completeAttributeValueQuotedAfter
    }

    effects.consume(code)
    return completeAttributeValueQuoted
  }
  /** @type {State} */

  function completeAttributeValueUnquoted(code) {
    if (
      code === null ||
      code === 34 ||
      code === 39 ||
      code === 60 ||
      code === 61 ||
      code === 62 ||
      code === 96 ||
      markdownLineEndingOrSpace(code)
    ) {
      return completeAttributeNameAfter(code)
    }

    effects.consume(code)
    return completeAttributeValueUnquoted
  }
  /** @type {State} */

  function completeAttributeValueQuotedAfter(code) {
    if (code === 47 || code === 62 || markdownSpace(code)) {
      return completeAttributeNameBefore(code)
    }

    return nok(code)
  }
  /** @type {State} */

  function completeEnd(code) {
    if (code === 62) {
      effects.consume(code)
      return completeAfter
    }

    return nok(code)
  }
  /** @type {State} */

  function completeAfter(code) {
    if (markdownSpace(code)) {
      effects.consume(code)
      return completeAfter
    }

    return code === null || markdownLineEnding(code)
      ? continuation(code)
      : nok(code)
  }
  /** @type {State} */

  function continuation(code) {
    if (code === 45 && kind === 2) {
      effects.consume(code)
      return continuationCommentInside
    }

    if (code === 60 && kind === 1) {
      effects.consume(code)
      return continuationRawTagOpen
    }

    if (code === 62 && kind === 4) {
      effects.consume(code)
      return continuationClose
    }

    if (code === 63 && kind === 3) {
      effects.consume(code)
      return continuationDeclarationInside
    }

    if (code === 93 && kind === 5) {
      effects.consume(code)
      return continuationCharacterDataInside
    }

    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {
      return effects.check(
        nextBlankConstruct,
        continuationClose,
        continuationAtLineEnding
      )(code)
    }

    if (code === null || markdownLineEnding(code)) {
      return continuationAtLineEnding(code)
    }

    effects.consume(code)
    return continuation
  }
  /** @type {State} */

  function continuationAtLineEnding(code) {
    effects.exit('htmlFlowData')
    return htmlContinueStart(code)
  }
  /** @type {State} */

  function htmlContinueStart(code) {
    if (code === null) {
      return done(code)
    }

    if (markdownLineEnding(code)) {
      return effects.attempt(
        {
          tokenize: htmlLineEnd,
          partial: true
        },
        htmlContinueStart,
        done
      )(code)
    }

    effects.enter('htmlFlowData')
    return continuation(code)
  }
  /** @type {Tokenizer} */

  function htmlLineEnd(effects, ok, nok) {
    return start
    /** @type {State} */

    function start(code) {
      effects.enter('lineEnding')
      effects.consume(code)
      effects.exit('lineEnding')
      return lineStart
    }
    /** @type {State} */

    function lineStart(code) {
      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)
    }
  }
  /** @type {State} */

  function continuationCommentInside(code) {
    if (code === 45) {
      effects.consume(code)
      return continuationDeclarationInside
    }

    return continuation(code)
  }
  /** @type {State} */

  function continuationRawTagOpen(code) {
    if (code === 47) {
      effects.consume(code)
      buffer = ''
      return continuationRawEndTag
    }

    return continuation(code)
  }
  /** @type {State} */

  function continuationRawEndTag(code) {
    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {
      effects.consume(code)
      return continuationClose
    }

    if (asciiAlpha(code) && buffer.length < 8) {
      effects.consume(code)
      buffer += String.fromCharCode(code)
      return continuationRawEndTag
    }

    return continuation(code)
  }
  /** @type {State} */

  function continuationCharacterDataInside(code) {
    if (code === 93) {
      effects.consume(code)
      return continuationDeclarationInside
    }

    return continuation(code)
  }
  /** @type {State} */

  function continuationDeclarationInside(code) {
    if (code === 62) {
      effects.consume(code)
      return continuationClose
    } // More dashes.

    if (code === 45 && kind === 2) {
      effects.consume(code)
      return continuationDeclarationInside
    }

    return continuation(code)
  }
  /** @type {State} */

  function continuationClose(code) {
    if (code === null || markdownLineEnding(code)) {
      effects.exit('htmlFlowData')
      return done(code)
    }

    effects.consume(code)
    return continuationClose
  }
  /** @type {State} */

  function done(code) {
    effects.exit('htmlFlow')
    return ok(code)
  }
}
/** @type {Tokenizer} */

function tokenizeNextBlank(effects, ok, nok) {
  return start
  /** @type {State} */

  function start(code) {
    effects.exit('htmlFlowData')
    effects.enter('lineEndingBlank')
    effects.consume(code)
    effects.exit('lineEndingBlank')
    return effects.attempt(blankLine, ok, nok)
  }
}

;// CONCATENATED MODULE: ./node_modules/micromark-core-commonmark/lib/code-fenced.js
/**
 * @typedef {import('micromark-util-types').Construct} Construct
 * @typedef {import('micromark-util-types').Tokenizer} Tokenizer
 * @typedef {import('micromark-util-types').State} State
 * @typedef {import('micromark-util-types').Code} Code
 */



/** @type {Construct} */
const codeFenced = {
  name: 'codeFenced',
  tokenize: tokenizeCodeFenced,
  concrete: true
}
/** @type {Tokenizer} */

function tokenizeCodeFenced(effects, ok, nok) {
  const self = this
  /** @type {Construct} */

  const closingFenceConstruct = {
    tokenize: tokenizeClosingFence,
    partial: true
  }
  /** @type {Construct} */

  const nonLazyLine = {
    tokenize: tokenizeNonLazyLine,
    partial: true
  }
  const tail = this.events[this.events.length - 1]
  const initialPrefix =
    tail && tail[1].type === 'linePrefix'
      ? tail[2].sliceSerialize(tail[1], true).length
      : 0
  let sizeOpen = 0
  /** @type {NonNullable<Code>} */

  let marker
  return start
  /** @type {State} */

  function start(code) {
    effects.enter('codeFenced')
    effects.enter('codeFencedFence')
    effects.enter('codeFencedFenceSequence')
    marker = code
    return sequenceOpen(code)
  }
  /** @type {State} */

  function sequenceOpen(code) {
    if (code === marker) {
      effects.consume(code)
      sizeOpen++
      return sequenceOpen
    }

    effects.exit('codeFencedFenceSequence')
    return sizeOpen < 3
      ? nok(code)
      : factorySpace(effects, infoOpen, 'whitespace')(code)
  }
  /** @type {State} */

  function infoOpen(code) {
    if (code === null || markdownLineEnding(code)) {
      return openAfter(code)
    }

    effects.enter('codeFencedFenceInfo')
    effects.enter('chunkString', {
      contentType: 'string'
    })
    return info(code)
  }
  /** @type {State} */

  function info(code) {
    if (code === null || markdownLineEndingOrSpace(code)) {
      effects.exit('chunkString')
      effects.exit('codeFencedFenceInfo')
      return factorySpace(effects, infoAfter, 'whitespace')(code)
    }

    if (code === 96 && code === marker) return nok(code)
    effects.consume(code)
    return info
  }
  /** @type {State} */

  function infoAfter(code) {
    if (code === null || markdownLineEnding(code)) {
      return openAfter(code)
    }

    effects.enter('codeFencedFenceMeta')
    effects.enter('chunkString', {
      contentType: 'string'
    })
    return meta(code)
  }
  /** @type {State} */

  function meta(code) {
    if (code === null || markdownLineEnding(code)) {
      effects.exit('chunkString')
      effects.exit('codeFencedFenceMeta')
      return openAfter(code)
    }

    if (code === 96 && code === marker) return nok(code)
    effects.consume(code)
    return meta
  }
  /** @type {State} */

  function openAfter(code) {
    effects.exit('codeFencedFence')
    return self.interrupt ? ok(code) : contentStart(code)
  }
  /** @type {State} */

  function contentStart(code) {
    if (code === null) {
      return after(code)
    }

    if (markdownLineEnding(code)) {
      return effects.attempt(
        nonLazyLine,
        effects.attempt(
          closingFenceConstruct,
          after,
          initialPrefix
            ? factorySpace(
                effects,
                contentStart,
                'linePrefix',
                initialPrefix + 1
              )
            : contentStart
        ),
        after
      )(code)
    }

    effects.enter('codeFlowValue')
    return contentContinue(code)
  }
  /** @type {State} */

  function contentContinue(code) {
    if (code === null || markdownLineEnding(code)) {
      effects.exit('codeFlowValue')
      return contentStart(code)
    }

    effects.consume(code)
    return contentContinue
  }
  /** @type {State} */

  function after(code) {
    effects.exit('codeFenced')
    return ok(code)
  }
  /** @type {Tokenizer} */

  function tokenizeNonLazyLine(effects, ok, nok) {
    const self = this
    return start
    /** @type {State} */

    function start(code) {
      effects.enter('lineEnding')
      effects.consume(code)
      effects.exit('lineEnding')
      return lineStart
    }
    /** @type {State} */

    function lineStart(code) {
      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)
    }
  }
  /** @type {Tokenizer} */

  function tokenizeClosingFence(effects, ok, nok) {
    let size = 0
    return factorySpace(
      effects,
      closingSequenceStart,
      'linePrefix',
      this.parser.constructs.disable.null.includes('codeIndented')
        ? undefined
        : 4
    )
    /** @type {State} */

    function closingSequenceStart(code) {
      effects.enter('codeFencedFence')
      effects.enter('codeFencedFenceSequence')
      return closingSequence(code)
    }
    /** @type {State} */

    function closingSequence(code) {
      if (code === marker) {
        effects.consume(code)
        size++
        return closingSequence
      }

      if (size < sizeOpen) return nok(code)
      effects.exit('codeFencedFenceSequence')
      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)
    }
    /** @type {State} */

    function closingSequenceEnd(code) {
      if (code === null || markdownLineEnding(code)) {
        effects.exit('codeFencedFence')
        return ok(code)
      }

      return nok(code)
    }
  }
}

;// CONCATENATED MODULE: ./node_modules/decode-named-character-reference/index.dom.js
/// <reference lib="dom" />

/* eslint-env browser */

const index_dom_element = document.createElement('i')

/**
 * @param {string} value
 * @returns {string|false}
 */
function decodeNamedCharacterReference(value) {
  const characterReference = '&' + value + ';'
  index_dom_element.innerHTML = characterReference
  const char = index_dom_element.textContent

  // Some named character references do not require the closing semicolon
  // (`&not`, for instance), which leads to situations where parsing the assumed
  // named reference of `&notit;` will result in the string `¬it;`.
  // When we encounter a trailing semicolon after parsing, and the character
  // reference to decode was not a semicolon (`&semi;`), we can assume that the
  // matching was not complete.
  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can
  // yield `null`.
  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {
    return false
  }

  // If the decoded string is equal to the input, the character reference was
  // not valid.
  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can
  // yield `null`.
  return char === characterReference ? false : char
}

;// CONCATENATED MODULE: ./node_modules/micromark-core-commonmark/lib/character-reference.js
/**
 * @typedef {import('micromark-util-types').Construct} Construct
 * @typedef {import('micromark-util-types').Tokenizer} Tokenizer
 * @typedef {import('micromark-util-types').Token} Token
 * @typedef {import('micromark-util-types').State} State
 * @typedef {import('micromark-util-types').Code} Code
 */



/** @type {Construct} */
const characterReference = {
  name: 'characterReference',
  tokenize: tokenizeCharacterReference
}
/** @type {Tokenizer} */

function tokenizeCharacterReference(effects, ok, nok) {
  const self = this
  let size = 0
  /** @type {number} */

  let max
  /** @type {(code: Code) => code is number} */

  let test
  return start
  /** @type {State} */

  function start(code) {
    effects.enter('characterReference')
    effects.enter('characterReferenceMarker')
    effects.consume(code)
    effects.exit('characterReferenceMarker')
    return open
  }
  /** @type {State} */

  function open(code) {
    if (code === 35) {
      effects.enter('characterReferenceMarkerNumeric')
      effects.consume(code)
      effects.exit('characterReferenceMarkerNumeric')
      return numeric
    }

    effects.enter('characterReferenceValue')
    max = 31
    test = asciiAlphanumeric
    return value(code)
  }
  /** @type {State} */

  function numeric(code) {
    if (code === 88 || code === 120) {
      effects.enter('characterReferenceMarkerHexadecimal')
      effects.consume(code)
      effects.exit('characterReferenceMarkerHexadecimal')
      effects.enter('characterReferenceValue')
      max = 6
      test = asciiHexDigit
      return value
    }

    effects.enter('characterReferenceValue')
    max = 7
    test = asciiDigit
    return value(code)
  }
  /** @type {State} */

  function value(code) {
    /** @type {Token} */
    let token

    if (code === 59 && size) {
      token = effects.exit('characterReferenceValue')

      if (
        test === asciiAlphanumeric &&
        !decodeNamedCharacterReference(self.sliceSerialize(token))
      ) {
        return nok(code)
      }

      effects.enter('characterReferenceMarker')
      effects.consume(code)
      effects.exit('characterReferenceMarker')
      effects.exit('characterReference')
      return ok
    }

    if (test(code) && size++ < max) {
      effects.consume(code)
      return value
    }

    return nok(code)
  }
}

;// CONCATENATED MODULE: ./node_modules/micromark-core-commonmark/lib/character-escape.js
/**
 * @typedef {import('micromark-util-types').Construct} Construct
 * @typedef {import('micromark-util-types').Tokenizer} Tokenizer
 * @typedef {import('micromark-util-types').State} State
 */


/** @type {Construct} */
const characterEscape = {
  name: 'characterEscape',
  tokenize: tokenizeCharacterEscape
}
/** @type {Tokenizer} */

function tokenizeCharacterEscape(effects, ok, nok) {
  return start
  /** @type {State} */

  function start(code) {
    effects.enter('characterEscape')
    effects.enter('escapeMarker')
    effects.consume(code)
    effects.exit('escapeMarker')
    return open
  }
  /** @type {State} */

  function open(code) {
    if (asciiPunctuation(code)) {
      effects.enter('characterEscapeValue')
      effects.consume(code)
      effects.exit('characterEscapeValue')
      effects.exit('characterEscape')
      return ok
    }

    return nok(code)
  }
}

;// CONCATENATED MODULE: ./node_modules/micromark-core-commonmark/lib/line-ending.js
/**
 * @typedef {import('micromark-util-types').Construct} Construct
 * @typedef {import('micromark-util-types').Tokenizer} Tokenizer
 * @typedef {import('micromark-util-types').State} State
 */



/** @type {Construct} */
const lineEnding = {
  name: 'lineEnding',
  tokenize: tokenizeLineEnding
}
/** @type {Tokenizer} */

function tokenizeLineEnding(effects, ok) {
  return start
  /** @type {State} */

  function start(code) {
    effects.enter('lineEnding')
    effects.consume(code)
    effects.exit('lineEnding')
    return factorySpace(effects, ok, 'linePrefix')
  }
}

;// CONCATENATED MODULE: ./node_modules/micromark-core-commonmark/lib/label-end.js
/**
 * @typedef {import('micromark-util-types').Construct} Construct
 * @typedef {import('micromark-util-types').Resolver} Resolver
 * @typedef {import('micromark-util-types').Tokenizer} Tokenizer
 * @typedef {import('micromark-util-types').Event} Event
 * @typedef {import('micromark-util-types').Token} Token
 * @typedef {import('micromark-util-types').State} State
 * @typedef {import('micromark-util-types').Code} Code
 */









/** @type {Construct} */
const labelEnd = {
  name: 'labelEnd',
  tokenize: tokenizeLabelEnd,
  resolveTo: resolveToLabelEnd,
  resolveAll: resolveAllLabelEnd
}
/** @type {Construct} */

const resourceConstruct = {
  tokenize: tokenizeResource
}
/** @type {Construct} */

const fullReferenceConstruct = {
  tokenize: tokenizeFullReference
}
/** @type {Construct} */

const collapsedReferenceConstruct = {
  tokenize: tokenizeCollapsedReference
}
/** @type {Resolver} */

function resolveAllLabelEnd(events) {
  let index = -1
  /** @type {Token} */

  let token

  while (++index < events.length) {
    token = events[index][1]

    if (
      token.type === 'labelImage' ||
      token.type === 'labelLink' ||
      token.type === 'labelEnd'
    ) {
      // Remove the marker.
      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)
      token.type = 'data'
      index++
    }
  }

  return events
}
/** @type {Resolver} */

function resolveToLabelEnd(events, context) {
  let index = events.length
  let offset = 0
  /** @type {Token} */

  let token
  /** @type {number|undefined} */

  let open
  /** @type {number|undefined} */

  let close
  /** @type {Event[]} */

  let media // Find an opening.

  while (index--) {
    token = events[index][1]

    if (open) {
      // If we see another link, or inactive link label, we’ve been here before.
      if (
        token.type === 'link' ||
        (token.type === 'labelLink' && token._inactive)
      ) {
        break
      } // Mark other link openings as inactive, as we can’t have links in
      // links.

      if (events[index][0] === 'enter' && token.type === 'labelLink') {
        token._inactive = true
      }
    } else if (close) {
      if (
        events[index][0] === 'enter' &&
        (token.type === 'labelImage' || token.type === 'labelLink') &&
        !token._balanced
      ) {
        open = index

        if (token.type !== 'labelLink') {
          offset = 2
          break
        }
      }
    } else if (token.type === 'labelEnd') {
      close = index
    }
  }

  const group = {
    type: events[open][1].type === 'labelLink' ? 'link' : 'image',
    start: Object.assign({}, events[open][1].start),
    end: Object.assign({}, events[events.length - 1][1].end)
  }
  const label = {
    type: 'label',
    start: Object.assign({}, events[open][1].start),
    end: Object.assign({}, events[close][1].end)
  }
  const text = {
    type: 'labelText',
    start: Object.assign({}, events[open + offset + 2][1].end),
    end: Object.assign({}, events[close - 2][1].start)
  }
  media = [
    ['enter', group, context],
    ['enter', label, context]
  ] // Opening marker.

  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.

  media = push(media, [['enter', text, context]]) // Between.

  media = push(
    media,
    resolveAll(
      context.parser.constructs.insideSpan.null,
      events.slice(open + offset + 4, close - 3),
      context
    )
  ) // Text close, marker close, label close.

  media = push(media, [
    ['exit', text, context],
    events[close - 2],
    events[close - 1],
    ['exit', label, context]
  ]) // Reference, resource, or so.

  media = push(media, events.slice(close + 1)) // Media close.

  media = push(media, [['exit', group, context]])
  splice(events, open, events.length, media)
  return events
}
/** @type {Tokenizer} */

function tokenizeLabelEnd(effects, ok, nok) {
  const self = this
  let index = self.events.length
  /** @type {Token} */

  let labelStart
  /** @type {boolean} */

  let defined // Find an opening.

  while (index--) {
    if (
      (self.events[index][1].type === 'labelImage' ||
        self.events[index][1].type === 'labelLink') &&
      !self.events[index][1]._balanced
    ) {
      labelStart = self.events[index][1]
      break
    }
  }

  return start
  /** @type {State} */

  function start(code) {
    if (!labelStart) {
      return nok(code)
    } // It’s a balanced bracket, but contains a link.

    if (labelStart._inactive) return balanced(code)
    defined = self.parser.defined.includes(
      normalizeIdentifier(
        self.sliceSerialize({
          start: labelStart.end,
          end: self.now()
        })
      )
    )
    effects.enter('labelEnd')
    effects.enter('labelMarker')
    effects.consume(code)
    effects.exit('labelMarker')
    effects.exit('labelEnd')
    return afterLabelEnd
  }
  /** @type {State} */

  function afterLabelEnd(code) {
    // Resource: `[asd](fgh)`.
    if (code === 40) {
      return effects.attempt(
        resourceConstruct,
        ok,
        defined ? ok : balanced
      )(code)
    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?

    if (code === 91) {
      return effects.attempt(
        fullReferenceConstruct,
        ok,
        defined
          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)
          : balanced
      )(code)
    } // Shortcut reference: `[asd]`?

    return defined ? ok(code) : balanced(code)
  }
  /** @type {State} */

  function balanced(code) {
    labelStart._balanced = true
    return nok(code)
  }
}
/** @type {Tokenizer} */

function tokenizeResource(effects, ok, nok) {
  return start
  /** @type {State} */

  function start(code) {
    effects.enter('resource')
    effects.enter('resourceMarker')
    effects.consume(code)
    effects.exit('resourceMarker')
    return factoryWhitespace(effects, open)
  }
  /** @type {State} */

  function open(code) {
    if (code === 41) {
      return end(code)
    }

    return factoryDestination(
      effects,
      destinationAfter,
      nok,
      'resourceDestination',
      'resourceDestinationLiteral',
      'resourceDestinationLiteralMarker',
      'resourceDestinationRaw',
      'resourceDestinationString',
      32
    )(code)
  }
  /** @type {State} */

  function destinationAfter(code) {
    return markdownLineEndingOrSpace(code)
      ? factoryWhitespace(effects, between)(code)
      : end(code)
  }
  /** @type {State} */

  function between(code) {
    if (code === 34 || code === 39 || code === 40) {
      return factoryTitle(
        effects,
        factoryWhitespace(effects, end),
        nok,
        'resourceTitle',
        'resourceTitleMarker',
        'resourceTitleString'
      )(code)
    }

    return end(code)
  }
  /** @type {State} */

  function end(code) {
    if (code === 41) {
      effects.enter('resourceMarker')
      effects.consume(code)
      effects.exit('resourceMarker')
      effects.exit('resource')
      return ok
    }

    return nok(code)
  }
}
/** @type {Tokenizer} */

function tokenizeFullReference(effects, ok, nok) {
  const self = this
  return start
  /** @type {State} */

  function start(code) {
    return factoryLabel.call(
      self,
      effects,
      afterLabel,
      nok,
      'reference',
      'referenceMarker',
      'referenceString'
    )(code)
  }
  /** @type {State} */

  function afterLabel(code) {
    return self.parser.defined.includes(
      normalizeIdentifier(
        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)
      )
    )
      ? ok(code)
      : nok(code)
  }
}
/** @type {Tokenizer} */

function tokenizeCollapsedReference(effects, ok, nok) {
  return start
  /** @type {State} */

  function start(code) {
    effects.enter('reference')
    effects.enter('referenceMarker')
    effects.consume(code)
    effects.exit('referenceMarker')
    return open
  }
  /** @type {State} */

  function open(code) {
    if (code === 93) {
      effects.enter('referenceMarker')
      effects.consume(code)
      effects.exit('referenceMarker')
      effects.exit('reference')
      return ok
    }

    return nok(code)
  }
}

;// CONCATENATED MODULE: ./node_modules/micromark-core-commonmark/lib/label-start-image.js
/**
 * @typedef {import('micromark-util-types').Construct} Construct
 * @typedef {import('micromark-util-types').Tokenizer} Tokenizer
 * @typedef {import('micromark-util-types').State} State
 */

/** @type {Construct} */

const labelStartImage = {
  name: 'labelStartImage',
  tokenize: tokenizeLabelStartImage,
  resolveAll: labelEnd.resolveAll
}
/** @type {Tokenizer} */

function tokenizeLabelStartImage(effects, ok, nok) {
  const self = this
  return start
  /** @type {State} */

  function start(code) {
    effects.enter('labelImage')
    effects.enter('labelImageMarker')
    effects.consume(code)
    effects.exit('labelImageMarker')
    return open
  }
  /** @type {State} */

  function open(code) {
    if (code === 91) {
      effects.enter('labelMarker')
      effects.consume(code)
      effects.exit('labelMarker')
      effects.exit('labelImage')
      return after
    }

    return nok(code)
  }
  /** @type {State} */

  function after(code) {
    /* To do: remove in the future once we’ve switched from
     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,
     * which doesn’t need this */

    /* Hidden footnotes hook */

    /* c8 ignore next 3 */
    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs
      ? nok(code)
      : ok(code)
  }
}

;// CONCATENATED MODULE: ./node_modules/micromark-util-classify-character/index.js
/**
 * @typedef {import('micromark-util-types').Code} Code
 */


/**
 * Classify whether a character code represents whitespace, punctuation, or
 * something else.
 *
 * Used for attention (emphasis, strong), whose sequences can open or close
 * based on the class of surrounding characters.
 *
 * Note that eof (`null`) is seen as whitespace.
 *
 * @param {Code} code
 * @returns {number|undefined}
 */
function classifyCharacter(code) {
  if (
    code === null ||
    markdownLineEndingOrSpace(code) ||
    unicodeWhitespace(code)
  ) {
    return 1
  }

  if (unicodePunctuation(code)) {
    return 2
  }
}

;// CONCATENATED MODULE: ./node_modules/micromark-core-commonmark/lib/attention.js
/**
 * @typedef {import('micromark-util-types').Construct} Construct
 * @typedef {import('micromark-util-types').Tokenizer} Tokenizer
 * @typedef {import('micromark-util-types').Resolver} Resolver
 * @typedef {import('micromark-util-types').State} State
 * @typedef {import('micromark-util-types').Token} Token
 * @typedef {import('micromark-util-types').Event} Event
 * @typedef {import('micromark-util-types').Code} Code
 * @typedef {import('micromark-util-types').Point} Point
 */




/** @type {Construct} */
const attention = {
  name: 'attention',
  tokenize: tokenizeAttention,
  resolveAll: resolveAllAttention
}
/**
 * Take all events and resolve attention to emphasis or strong.
 *
 * @type {Resolver}
 */

function resolveAllAttention(events, context) {
  let index = -1
  /** @type {number} */

  let open
  /** @type {Token} */

  let group
  /** @type {Token} */

  let text
  /** @type {Token} */

  let openingSequence
  /** @type {Token} */

  let closingSequence
  /** @type {number} */

  let use
  /** @type {Event[]} */

  let nextEvents
  /** @type {number} */

  let offset // Walk through all events.
  //
  // Note: performance of this is fine on an mb of normal markdown, but it’s
  // a bottleneck for malicious stuff.

  while (++index < events.length) {
    // Find a token that can close.
    if (
      events[index][0] === 'enter' &&
      events[index][1].type === 'attentionSequence' &&
      events[index][1]._close
    ) {
      open = index // Now walk back to find an opener.

      while (open--) {
        // Find a token that can open the closer.
        if (
          events[open][0] === 'exit' &&
          events[open][1].type === 'attentionSequence' &&
          events[open][1]._open && // If the markers are the same:
          context.sliceSerialize(events[open][1]).charCodeAt(0) ===
            context.sliceSerialize(events[index][1]).charCodeAt(0)
        ) {
          // If the opening can close or the closing can open,
          // and the close size *is not* a multiple of three,
          // but the sum of the opening and closing size *is* multiple of three,
          // then don’t match.
          if (
            (events[open][1]._close || events[index][1]._open) &&
            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&
            !(
              (events[open][1].end.offset -
                events[open][1].start.offset +
                events[index][1].end.offset -
                events[index][1].start.offset) %
              3
            )
          ) {
            continue
          } // Number of markers to use from the sequence.

          use =
            events[open][1].end.offset - events[open][1].start.offset > 1 &&
            events[index][1].end.offset - events[index][1].start.offset > 1
              ? 2
              : 1
          const start = Object.assign({}, events[open][1].end)
          const end = Object.assign({}, events[index][1].start)
          movePoint(start, -use)
          movePoint(end, use)
          openingSequence = {
            type: use > 1 ? 'strongSequence' : 'emphasisSequence',
            start,
            end: Object.assign({}, events[open][1].end)
          }
          closingSequence = {
            type: use > 1 ? 'strongSequence' : 'emphasisSequence',
            start: Object.assign({}, events[index][1].start),
            end
          }
          text = {
            type: use > 1 ? 'strongText' : 'emphasisText',
            start: Object.assign({}, events[open][1].end),
            end: Object.assign({}, events[index][1].start)
          }
          group = {
            type: use > 1 ? 'strong' : 'emphasis',
            start: Object.assign({}, openingSequence.start),
            end: Object.assign({}, closingSequence.end)
          }
          events[open][1].end = Object.assign({}, openingSequence.start)
          events[index][1].start = Object.assign({}, closingSequence.end)
          nextEvents = [] // If there are more markers in the opening, add them before.

          if (events[open][1].end.offset - events[open][1].start.offset) {
            nextEvents = push(nextEvents, [
              ['enter', events[open][1], context],
              ['exit', events[open][1], context]
            ])
          } // Opening.

          nextEvents = push(nextEvents, [
            ['enter', group, context],
            ['enter', openingSequence, context],
            ['exit', openingSequence, context],
            ['enter', text, context]
          ]) // Between.

          nextEvents = push(
            nextEvents,
            resolveAll(
              context.parser.constructs.insideSpan.null,
              events.slice(open + 1, index),
              context
            )
          ) // Closing.

          nextEvents = push(nextEvents, [
            ['exit', text, context],
            ['enter', closingSequence, context],
            ['exit', closingSequence, context],
            ['exit', group, context]
          ]) // If there are more markers in the closing, add them after.

          if (events[index][1].end.offset - events[index][1].start.offset) {
            offset = 2
            nextEvents = push(nextEvents, [
              ['enter', events[index][1], context],
              ['exit', events[index][1], context]
            ])
          } else {
            offset = 0
          }

          splice(events, open - 1, index - open + 3, nextEvents)
          index = open + nextEvents.length - offset - 2
          break
        }
      }
    }
  } // Remove remaining sequences.

  index = -1

  while (++index < events.length) {
    if (events[index][1].type === 'attentionSequence') {
      events[index][1].type = 'data'
    }
  }

  return events
}
/** @type {Tokenizer} */

function tokenizeAttention(effects, ok) {
  const attentionMarkers = this.parser.constructs.attentionMarkers.null
  const previous = this.previous
  const before = classifyCharacter(previous)
  /** @type {NonNullable<Code>} */

  let marker
  return start
  /** @type {State} */

  function start(code) {
    effects.enter('attentionSequence')
    marker = code
    return sequence(code)
  }
  /** @type {State} */

  function sequence(code) {
    if (code === marker) {
      effects.consume(code)
      return sequence
    }

    const token = effects.exit('attentionSequence')
    const after = classifyCharacter(code)
    const open =
      !after || (after === 2 && before) || attentionMarkers.includes(code)
    const close =
      !before || (before === 2 && after) || attentionMarkers.includes(previous)
    token._open = Boolean(marker === 42 ? open : open && (before || !close))
    token._close = Boolean(marker === 42 ? close : close && (after || !open))
    return ok(code)
  }
}
/**
 * Move a point a bit.
 *
 * Note: `move` only works inside lines! It’s not possible to move past other
 * chunks (replacement characters, tabs, or line endings).
 *
 * @param {Point} point
 * @param {number} offset
 * @returns {void}
 */

function movePoint(point, offset) {
  point.column += offset
  point.offset += offset
  point._bufferIndex += offset
}

;// CONCATENATED MODULE: ./node_modules/micromark-core-commonmark/lib/autolink.js
/**
 * @typedef {import('micromark-util-types').Construct} Construct
 * @typedef {import('micromark-util-types').Tokenizer} Tokenizer
 * @typedef {import('micromark-util-types').State} State
 */


/** @type {Construct} */
const autolink = {
  name: 'autolink',
  tokenize: tokenizeAutolink
}
/** @type {Tokenizer} */

function tokenizeAutolink(effects, ok, nok) {
  let size = 1
  return start
  /** @type {State} */

  function start(code) {
    effects.enter('autolink')
    effects.enter('autolinkMarker')
    effects.consume(code)
    effects.exit('autolinkMarker')
    effects.enter('autolinkProtocol')
    return open
  }
  /** @type {State} */

  function open(code) {
    if (asciiAlpha(code)) {
      effects.consume(code)
      return schemeOrEmailAtext
    }

    return asciiAtext(code) ? emailAtext(code) : nok(code)
  }
  /** @type {State} */

  function schemeOrEmailAtext(code) {
    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)
      ? schemeInsideOrEmailAtext(code)
      : emailAtext(code)
  }
  /** @type {State} */

  function schemeInsideOrEmailAtext(code) {
    if (code === 58) {
      effects.consume(code)
      return urlInside
    }

    if (
      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&
      size++ < 32
    ) {
      effects.consume(code)
      return schemeInsideOrEmailAtext
    }

    return emailAtext(code)
  }
  /** @type {State} */

  function urlInside(code) {
    if (code === 62) {
      effects.exit('autolinkProtocol')
      return end(code)
    }

    if (code === null || code === 32 || code === 60 || asciiControl(code)) {
      return nok(code)
    }

    effects.consume(code)
    return urlInside
  }
  /** @type {State} */

  function emailAtext(code) {
    if (code === 64) {
      effects.consume(code)
      size = 0
      return emailAtSignOrDot
    }

    if (asciiAtext(code)) {
      effects.consume(code)
      return emailAtext
    }

    return nok(code)
  }
  /** @type {State} */

  function emailAtSignOrDot(code) {
    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)
  }
  /** @type {State} */

  function emailLabel(code) {
    if (code === 46) {
      effects.consume(code)
      size = 0
      return emailAtSignOrDot
    }

    if (code === 62) {
      // Exit, then change the type.
      effects.exit('autolinkProtocol').type = 'autolinkEmail'
      return end(code)
    }

    return emailValue(code)
  }
  /** @type {State} */

  function emailValue(code) {
    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {
      effects.consume(code)
      return code === 45 ? emailValue : emailLabel
    }

    return nok(code)
  }
  /** @type {State} */

  function end(code) {
    effects.enter('autolinkMarker')
    effects.consume(code)
    effects.exit('autolinkMarker')
    effects.exit('autolink')
    return ok
  }
}

;// CONCATENATED MODULE: ./node_modules/micromark-core-commonmark/lib/html-text.js
/**
 * @typedef {import('micromark-util-types').Construct} Construct
 * @typedef {import('micromark-util-types').Tokenizer} Tokenizer
 * @typedef {import('micromark-util-types').State} State
 * @typedef {import('micromark-util-types').Code} Code
 */



/** @type {Construct} */
const htmlText = {
  name: 'htmlText',
  tokenize: tokenizeHtmlText
}
/** @type {Tokenizer} */

function tokenizeHtmlText(effects, ok, nok) {
  const self = this
  /** @type {NonNullable<Code>|undefined} */

  let marker
  /** @type {string} */

  let buffer
  /** @type {number} */

  let index
  /** @type {State} */

  let returnState
  return start
  /** @type {State} */

  function start(code) {
    effects.enter('htmlText')
    effects.enter('htmlTextData')
    effects.consume(code)
    return open
  }
  /** @type {State} */

  function open(code) {
    if (code === 33) {
      effects.consume(code)
      return declarationOpen
    }

    if (code === 47) {
      effects.consume(code)
      return tagCloseStart
    }

    if (code === 63) {
      effects.consume(code)
      return instruction
    }

    if (asciiAlpha(code)) {
      effects.consume(code)
      return tagOpen
    }

    return nok(code)
  }
  /** @type {State} */

  function declarationOpen(code) {
    if (code === 45) {
      effects.consume(code)
      return commentOpen
    }

    if (code === 91) {
      effects.consume(code)
      buffer = 'CDATA['
      index = 0
      return cdataOpen
    }

    if (asciiAlpha(code)) {
      effects.consume(code)
      return declaration
    }

    return nok(code)
  }
  /** @type {State} */

  function commentOpen(code) {
    if (code === 45) {
      effects.consume(code)
      return commentStart
    }

    return nok(code)
  }
  /** @type {State} */

  function commentStart(code) {
    if (code === null || code === 62) {
      return nok(code)
    }

    if (code === 45) {
      effects.consume(code)
      return commentStartDash
    }

    return comment(code)
  }
  /** @type {State} */

  function commentStartDash(code) {
    if (code === null || code === 62) {
      return nok(code)
    }

    return comment(code)
  }
  /** @type {State} */

  function comment(code) {
    if (code === null) {
      return nok(code)
    }

    if (code === 45) {
      effects.consume(code)
      return commentClose
    }

    if (markdownLineEnding(code)) {
      returnState = comment
      return atLineEnding(code)
    }

    effects.consume(code)
    return comment
  }
  /** @type {State} */

  function commentClose(code) {
    if (code === 45) {
      effects.consume(code)
      return end
    }

    return comment(code)
  }
  /** @type {State} */

  function cdataOpen(code) {
    if (code === buffer.charCodeAt(index++)) {
      effects.consume(code)
      return index === buffer.length ? cdata : cdataOpen
    }

    return nok(code)
  }
  /** @type {State} */

  function cdata(code) {
    if (code === null) {
      return nok(code)
    }

    if (code === 93) {
      effects.consume(code)
      return cdataClose
    }

    if (markdownLineEnding(code)) {
      returnState = cdata
      return atLineEnding(code)
    }

    effects.consume(code)
    return cdata
  }
  /** @type {State} */

  function cdataClose(code) {
    if (code === 93) {
      effects.consume(code)
      return cdataEnd
    }

    return cdata(code)
  }
  /** @type {State} */

  function cdataEnd(code) {
    if (code === 62) {
      return end(code)
    }

    if (code === 93) {
      effects.consume(code)
      return cdataEnd
    }

    return cdata(code)
  }
  /** @type {State} */

  function declaration(code) {
    if (code === null || code === 62) {
      return end(code)
    }

    if (markdownLineEnding(code)) {
      returnState = declaration
      return atLineEnding(code)
    }

    effects.consume(code)
    return declaration
  }
  /** @type {State} */

  function instruction(code) {
    if (code === null) {
      return nok(code)
    }

    if (code === 63) {
      effects.consume(code)
      return instructionClose
    }

    if (markdownLineEnding(code)) {
      returnState = instruction
      return atLineEnding(code)
    }

    effects.consume(code)
    return instruction
  }
  /** @type {State} */

  function instructionClose(code) {
    return code === 62 ? end(code) : instruction(code)
  }
  /** @type {State} */

  function tagCloseStart(code) {
    if (asciiAlpha(code)) {
      effects.consume(code)
      return tagClose
    }

    return nok(code)
  }
  /** @type {State} */

  function tagClose(code) {
    if (code === 45 || asciiAlphanumeric(code)) {
      effects.consume(code)
      return tagClose
    }

    return tagCloseBetween(code)
  }
  /** @type {State} */

  function tagCloseBetween(code) {
    if (markdownLineEnding(code)) {
      returnState = tagCloseBetween
      return atLineEnding(code)
    }

    if (markdownSpace(code)) {
      effects.consume(code)
      return tagCloseBetween
    }

    return end(code)
  }
  /** @type {State} */

  function tagOpen(code) {
    if (code === 45 || asciiAlphanumeric(code)) {
      effects.consume(code)
      return tagOpen
    }

    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {
      return tagOpenBetween(code)
    }

    return nok(code)
  }
  /** @type {State} */

  function tagOpenBetween(code) {
    if (code === 47) {
      effects.consume(code)
      return end
    }

    if (code === 58 || code === 95 || asciiAlpha(code)) {
      effects.consume(code)
      return tagOpenAttributeName
    }

    if (markdownLineEnding(code)) {
      returnState = tagOpenBetween
      return atLineEnding(code)
    }

    if (markdownSpace(code)) {
      effects.consume(code)
      return tagOpenBetween
    }

    return end(code)
  }
  /** @type {State} */

  function tagOpenAttributeName(code) {
    if (
      code === 45 ||
      code === 46 ||
      code === 58 ||
      code === 95 ||
      asciiAlphanumeric(code)
    ) {
      effects.consume(code)
      return tagOpenAttributeName
    }

    return tagOpenAttributeNameAfter(code)
  }
  /** @type {State} */

  function tagOpenAttributeNameAfter(code) {
    if (code === 61) {
      effects.consume(code)
      return tagOpenAttributeValueBefore
    }

    if (markdownLineEnding(code)) {
      returnState = tagOpenAttributeNameAfter
      return atLineEnding(code)
    }

    if (markdownSpace(code)) {
      effects.consume(code)
      return tagOpenAttributeNameAfter
    }

    return tagOpenBetween(code)
  }
  /** @type {State} */

  function tagOpenAttributeValueBefore(code) {
    if (
      code === null ||
      code === 60 ||
      code === 61 ||
      code === 62 ||
      code === 96
    ) {
      return nok(code)
    }

    if (code === 34 || code === 39) {
      effects.consume(code)
      marker = code
      return tagOpenAttributeValueQuoted
    }

    if (markdownLineEnding(code)) {
      returnState = tagOpenAttributeValueBefore
      return atLineEnding(code)
    }

    if (markdownSpace(code)) {
      effects.consume(code)
      return tagOpenAttributeValueBefore
    }

    effects.consume(code)
    marker = undefined
    return tagOpenAttributeValueUnquoted
  }
  /** @type {State} */

  function tagOpenAttributeValueQuoted(code) {
    if (code === marker) {
      effects.consume(code)
      return tagOpenAttributeValueQuotedAfter
    }

    if (code === null) {
      return nok(code)
    }

    if (markdownLineEnding(code)) {
      returnState = tagOpenAttributeValueQuoted
      return atLineEnding(code)
    }

    effects.consume(code)
    return tagOpenAttributeValueQuoted
  }
  /** @type {State} */

  function tagOpenAttributeValueQuotedAfter(code) {
    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {
      return tagOpenBetween(code)
    }

    return nok(code)
  }
  /** @type {State} */

  function tagOpenAttributeValueUnquoted(code) {
    if (
      code === null ||
      code === 34 ||
      code === 39 ||
      code === 60 ||
      code === 61 ||
      code === 96
    ) {
      return nok(code)
    }

    if (code === 62 || markdownLineEndingOrSpace(code)) {
      return tagOpenBetween(code)
    }

    effects.consume(code)
    return tagOpenAttributeValueUnquoted
  } // We can’t have blank lines in content, so no need to worry about empty
  // tokens.

  /** @type {State} */

  function atLineEnding(code) {
    effects.exit('htmlTextData')
    effects.enter('lineEnding')
    effects.consume(code)
    effects.exit('lineEnding')
    return factorySpace(
      effects,
      afterPrefix,
      'linePrefix',
      self.parser.constructs.disable.null.includes('codeIndented')
        ? undefined
        : 4
    )
  }
  /** @type {State} */

  function afterPrefix(code) {
    effects.enter('htmlTextData')
    return returnState(code)
  }
  /** @type {State} */

  function end(code) {
    if (code === 62) {
      effects.consume(code)
      effects.exit('htmlTextData')
      effects.exit('htmlText')
      return ok
    }

    return nok(code)
  }
}

;// CONCATENATED MODULE: ./node_modules/micromark-core-commonmark/lib/label-start-link.js
/**
 * @typedef {import('micromark-util-types').Construct} Construct
 * @typedef {import('micromark-util-types').Tokenizer} Tokenizer
 * @typedef {import('micromark-util-types').State} State
 */

/** @type {Construct} */

const labelStartLink = {
  name: 'labelStartLink',
  tokenize: tokenizeLabelStartLink,
  resolveAll: labelEnd.resolveAll
}
/** @type {Tokenizer} */

function tokenizeLabelStartLink(effects, ok, nok) {
  const self = this
  return start
  /** @type {State} */

  function start(code) {
    effects.enter('labelLink')
    effects.enter('labelMarker')
    effects.consume(code)
    effects.exit('labelMarker')
    effects.exit('labelLink')
    return after
  }
  /** @type {State} */

  function after(code) {
    /* To do: remove in the future once we’ve switched from
     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,
     * which doesn’t need this */

    /* Hidden footnotes hook. */

    /* c8 ignore next 3 */
    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs
      ? nok(code)
      : ok(code)
  }
}

;// CONCATENATED MODULE: ./node_modules/micromark-core-commonmark/lib/hard-break-escape.js
/**
 * @typedef {import('micromark-util-types').Construct} Construct
 * @typedef {import('micromark-util-types').Tokenizer} Tokenizer
 * @typedef {import('micromark-util-types').State} State
 */


/** @type {Construct} */
const hardBreakEscape = {
  name: 'hardBreakEscape',
  tokenize: tokenizeHardBreakEscape
}
/** @type {Tokenizer} */

function tokenizeHardBreakEscape(effects, ok, nok) {
  return start
  /** @type {State} */

  function start(code) {
    effects.enter('hardBreakEscape')
    effects.enter('escapeMarker')
    effects.consume(code)
    return open
  }
  /** @type {State} */

  function open(code) {
    if (markdownLineEnding(code)) {
      effects.exit('escapeMarker')
      effects.exit('hardBreakEscape')
      return ok(code)
    }

    return nok(code)
  }
}

;// CONCATENATED MODULE: ./node_modules/micromark-core-commonmark/lib/code-text.js
/**
 * @typedef {import('micromark-util-types').Construct} Construct
 * @typedef {import('micromark-util-types').Resolver} Resolver
 * @typedef {import('micromark-util-types').Tokenizer} Tokenizer
 * @typedef {import('micromark-util-types').Previous} Previous
 * @typedef {import('micromark-util-types').Token} Token
 * @typedef {import('micromark-util-types').State} State
 */


/** @type {Construct} */
const codeText = {
  name: 'codeText',
  tokenize: tokenizeCodeText,
  resolve: resolveCodeText,
  previous
}
/** @type {Resolver} */

function resolveCodeText(events) {
  let tailExitIndex = events.length - 4
  let headEnterIndex = 3
  /** @type {number} */

  let index
  /** @type {number|undefined} */

  let enter // If we start and end with an EOL or a space.

  if (
    (events[headEnterIndex][1].type === 'lineEnding' ||
      events[headEnterIndex][1].type === 'space') &&
    (events[tailExitIndex][1].type === 'lineEnding' ||
      events[tailExitIndex][1].type === 'space')
  ) {
    index = headEnterIndex // And we have data.

    while (++index < tailExitIndex) {
      if (events[index][1].type === 'codeTextData') {
        // Then we have padding.
        events[headEnterIndex][1].type = 'codeTextPadding'
        events[tailExitIndex][1].type = 'codeTextPadding'
        headEnterIndex += 2
        tailExitIndex -= 2
        break
      }
    }
  } // Merge adjacent spaces and data.

  index = headEnterIndex - 1
  tailExitIndex++

  while (++index <= tailExitIndex) {
    if (enter === undefined) {
      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {
        enter = index
      }
    } else if (
      index === tailExitIndex ||
      events[index][1].type === 'lineEnding'
    ) {
      events[enter][1].type = 'codeTextData'

      if (index !== enter + 2) {
        events[enter][1].end = events[index - 1][1].end
        events.splice(enter + 2, index - enter - 2)
        tailExitIndex -= index - enter - 2
        index = enter + 2
      }

      enter = undefined
    }
  }

  return events
}
/** @type {Previous} */

function previous(code) {
  // If there is a previous code, there will always be a tail.
  return (
    code !== 96 ||
    this.events[this.events.length - 1][1].type === 'characterEscape'
  )
}
/** @type {Tokenizer} */

function tokenizeCodeText(effects, ok, nok) {
  const self = this
  let sizeOpen = 0
  /** @type {number} */

  let size
  /** @type {Token} */

  let token
  return start
  /** @type {State} */

  function start(code) {
    effects.enter('codeText')
    effects.enter('codeTextSequence')
    return openingSequence(code)
  }
  /** @type {State} */

  function openingSequence(code) {
    if (code === 96) {
      effects.consume(code)
      sizeOpen++
      return openingSequence
    }

    effects.exit('codeTextSequence')
    return gap(code)
  }
  /** @type {State} */

  function gap(code) {
    // EOF.
    if (code === null) {
      return nok(code)
    } // Closing fence?
    // Could also be data.

    if (code === 96) {
      token = effects.enter('codeTextSequence')
      size = 0
      return closingSequence(code)
    } // Tabs don’t work, and virtual spaces don’t make sense.

    if (code === 32) {
      effects.enter('space')
      effects.consume(code)
      effects.exit('space')
      return gap
    }

    if (markdownLineEnding(code)) {
      effects.enter('lineEnding')
      effects.consume(code)
      effects.exit('lineEnding')
      return gap
    } // Data.

    effects.enter('codeTextData')
    return data(code)
  } // In code.

  /** @type {State} */

  function data(code) {
    if (
      code === null ||
      code === 32 ||
      code === 96 ||
      markdownLineEnding(code)
    ) {
      effects.exit('codeTextData')
      return gap(code)
    }

    effects.consume(code)
    return data
  } // Closing fence.

  /** @type {State} */

  function closingSequence(code) {
    // More.
    if (code === 96) {
      effects.consume(code)
      size++
      return closingSequence
    } // Done!

    if (size === sizeOpen) {
      effects.exit('codeTextSequence')
      effects.exit('codeText')
      return ok(code)
    } // More or less accents: mark as data.

    token.type = 'codeTextData'
    return data(code)
  }
}

;// CONCATENATED MODULE: ./node_modules/micromark/lib/constructs.js
/**
 * @typedef {import('micromark-util-types').Extension} Extension
 */


/** @type {Extension['document']} */

const constructs_document = {
  [42]: list,
  [43]: list,
  [45]: list,
  [48]: list,
  [49]: list,
  [50]: list,
  [51]: list,
  [52]: list,
  [53]: list,
  [54]: list,
  [55]: list,
  [56]: list,
  [57]: list,
  [62]: blockQuote
}
/** @type {Extension['contentInitial']} */

const contentInitial = {
  [91]: definition
}
/** @type {Extension['flowInitial']} */

const flowInitial = {
  [-2]: codeIndented,
  [-1]: codeIndented,
  [32]: codeIndented
}
/** @type {Extension['flow']} */

const constructs_flow = {
  [35]: headingAtx,
  [42]: thematicBreak,
  [45]: [setextUnderline, thematicBreak],
  [60]: htmlFlow,
  [61]: setextUnderline,
  [95]: thematicBreak,
  [96]: codeFenced,
  [126]: codeFenced
}
/** @type {Extension['string']} */

const constructs_string = {
  [38]: characterReference,
  [92]: characterEscape
}
/** @type {Extension['text']} */

const constructs_text = {
  [-5]: lineEnding,
  [-4]: lineEnding,
  [-3]: lineEnding,
  [33]: labelStartImage,
  [38]: characterReference,
  [42]: attention,
  [60]: [autolink, htmlText],
  [91]: labelStartLink,
  [92]: [hardBreakEscape, characterEscape],
  [93]: labelEnd,
  [95]: attention,
  [96]: codeText
}
/** @type {Extension['insideSpan']} */

const insideSpan = {
  null: [attention, resolver]
}
/** @type {Extension['attentionMarkers']} */

const attentionMarkers = {
  null: [42, 95]
}
/** @type {Extension['disable']} */

const disable = {
  null: []
}

;// CONCATENATED MODULE: ./node_modules/micromark/lib/parse.js
/**
 * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct
 * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension
 * @typedef {import('micromark-util-types').ParseOptions} ParseOptions
 * @typedef {import('micromark-util-types').ParseContext} ParseContext
 * @typedef {import('micromark-util-types').Create} Create
 */







/**
 * @param {ParseOptions} [options]
 * @returns {ParseContext}
 */

function parse(options = {}) {
  /** @type {FullNormalizedExtension} */
  // @ts-expect-error `defaultConstructs` is full, so the result will be too.
  const constructs = combineExtensions(
    // @ts-expect-error Same as above.
    [constructs_namespaceObject].concat(options.extensions || [])
  )
  /** @type {ParseContext} */

  const parser = {
    defined: [],
    lazy: {},
    constructs,
    content: create(content),
    document: create(document_document),
    flow: create(flow),
    string: create(string),
    text: create(text_text)
  }
  return parser
  /**
   * @param {InitialConstruct} initial
   */

  function create(initial) {
    return creator
    /** @type {Create} */

    function creator(from) {
      return createTokenizer(parser, initial, from)
    }
  }
}

;// CONCATENATED MODULE: ./node_modules/micromark/lib/preprocess.js
/**
 * @typedef {import('micromark-util-types').Encoding} Encoding
 * @typedef {import('micromark-util-types').Value} Value
 * @typedef {import('micromark-util-types').Chunk} Chunk
 * @typedef {import('micromark-util-types').Code} Code
 */

/**
 * @callback Preprocessor
 * @param {Value} value
 * @param {Encoding} [encoding]
 * @param {boolean} [end=false]
 * @returns {Chunk[]}
 */
const search = /[\0\t\n\r]/g
/**
 * @returns {Preprocessor}
 */

function preprocess() {
  let column = 1
  let buffer = ''
  /** @type {boolean|undefined} */

  let start = true
  /** @type {boolean|undefined} */

  let atCarriageReturn
  return preprocessor
  /** @type {Preprocessor} */

  function preprocessor(value, encoding, end) {
    /** @type {Chunk[]} */
    const chunks = []
    /** @type {RegExpMatchArray|null} */

    let match
    /** @type {number} */

    let next
    /** @type {number} */

    let startPosition
    /** @type {number} */

    let endPosition
    /** @type {Code} */

    let code // @ts-expect-error `Buffer` does allow an encoding.

    value = buffer + value.toString(encoding)
    startPosition = 0
    buffer = ''

    if (start) {
      if (value.charCodeAt(0) === 65279) {
        startPosition++
      }

      start = undefined
    }

    while (startPosition < value.length) {
      search.lastIndex = startPosition
      match = search.exec(value)
      endPosition =
        match && match.index !== undefined ? match.index : value.length
      code = value.charCodeAt(endPosition)

      if (!match) {
        buffer = value.slice(startPosition)
        break
      }

      if (code === 10 && startPosition === endPosition && atCarriageReturn) {
        chunks.push(-3)
        atCarriageReturn = undefined
      } else {
        if (atCarriageReturn) {
          chunks.push(-5)
          atCarriageReturn = undefined
        }

        if (startPosition < endPosition) {
          chunks.push(value.slice(startPosition, endPosition))
          column += endPosition - startPosition
        }

        switch (code) {
          case 0: {
            chunks.push(65533)
            column++
            break
          }

          case 9: {
            next = Math.ceil(column / 4) * 4
            chunks.push(-2)

            while (column++ < next) chunks.push(-1)

            break
          }

          case 10: {
            chunks.push(-4)
            column = 1
            break
          }

          default: {
            atCarriageReturn = true
            column = 1
          }
        }
      }

      startPosition = endPosition + 1
    }

    if (end) {
      if (atCarriageReturn) chunks.push(-5)
      if (buffer) chunks.push(buffer)
      chunks.push(null)
    }

    return chunks
  }
}

;// CONCATENATED MODULE: ./node_modules/micromark/lib/postprocess.js
/**
 * @typedef {import('micromark-util-types').Event} Event
 */

/**
 * @param {Event[]} events
 * @returns {Event[]}
 */

function postprocess(events) {
  while (!subtokenize(events)) {
    // Empty
  }

  return events
}

;// CONCATENATED MODULE: ./node_modules/micromark-util-decode-numeric-character-reference/index.js
/**
 * Turn the number (in string form as either hexa- or plain decimal) coming from
 * a numeric character reference into a character.
 *
 * @param {string} value
 *   Value to decode.
 * @param {number} base
 *   Numeric base.
 * @returns {string}
 */
function decodeNumericCharacterReference(value, base) {
  const code = Number.parseInt(value, base)

  if (
    // C0 except for HT, LF, FF, CR, space
    code < 9 ||
    code === 11 ||
    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.
    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.
    (code > 55295 && code < 57344) || // Noncharacters.
    (code > 64975 && code < 65008) ||
    (code & 65535) === 65535 ||
    (code & 65535) === 65534 || // Out of range
    code > 1114111
  ) {
    return '\uFFFD'
  }

  return String.fromCharCode(code)
}

;// CONCATENATED MODULE: ./node_modules/micromark-util-decode-string/index.js


const characterEscapeOrReference =
  /\\([!-/:-@[-`{-~])|&(#(?:\d{1,7}|x[\da-f]{1,6})|[\da-z]{1,31});/gi
/**
 * Utility to decode markdown strings (which occur in places such as fenced
 * code info strings, destinations, labels, and titles).
 * The “string” content type allows character escapes and -references.
 * This decodes those.
 *
 * @param {string} value
 * @returns {string}
 */

function decodeString(value) {
  return value.replace(characterEscapeOrReference, decode)
}
/**
 * @param {string} $0
 * @param {string} $1
 * @param {string} $2
 * @returns {string}
 */

function decode($0, $1, $2) {
  if ($1) {
    // Escape.
    return $1
  } // Reference.

  const head = $2.charCodeAt(0)

  if (head === 35) {
    const head = $2.charCodeAt(1)
    const hex = head === 120 || head === 88
    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)
  }

  return decodeNamedCharacterReference($2) || $0
}

;// CONCATENATED MODULE: ./node_modules/mdast-util-from-markdown/lib/index.js
/**
 * @typedef {import('micromark-util-types').Encoding} Encoding
 * @typedef {import('micromark-util-types').Event} Event
 * @typedef {import('micromark-util-types').ParseOptions} ParseOptions
 * @typedef {import('micromark-util-types').Token} Token
 * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext
 * @typedef {import('micromark-util-types').Value} Value
 * @typedef {import('unist').Parent} UnistParent
 * @typedef {import('unist').Point} Point
 * @typedef {import('mdast').PhrasingContent} PhrasingContent
 * @typedef {import('mdast').Content} Content
 * @typedef {Root|Content} Node
 * @typedef {Extract<Node, UnistParent>} Parent
 * @typedef {import('mdast').Break} Break
 * @typedef {import('mdast').Blockquote} Blockquote
 * @typedef {import('mdast').Code} Code
 * @typedef {import('mdast').Definition} Definition
 * @typedef {import('mdast').Emphasis} Emphasis
 * @typedef {import('mdast').Heading} Heading
 * @typedef {import('mdast').HTML} HTML
 * @typedef {import('mdast').Image} Image
 * @typedef {import('mdast').ImageReference} ImageReference
 * @typedef {import('mdast').InlineCode} InlineCode
 * @typedef {import('mdast').Link} Link
 * @typedef {import('mdast').LinkReference} LinkReference
 * @typedef {import('mdast').List} List
 * @typedef {import('mdast').ListItem} ListItem
 * @typedef {import('mdast').Paragraph} Paragraph
 * @typedef {import('mdast').Root} Root
 * @typedef {import('mdast').Strong} Strong
 * @typedef {import('mdast').Text} Text
 * @typedef {import('mdast').ThematicBreak} ThematicBreak
 *
 * @typedef {UnistParent & {type: 'fragment', children: Array<PhrasingContent>}} Fragment
 */

/**
 * @typedef _CompileDataFields
 * @property {boolean|undefined} expectingFirstListItemValue
 * @property {boolean|undefined} flowCodeInside
 * @property {boolean|undefined} setextHeadingSlurpLineEnding
 * @property {boolean|undefined} atHardBreak
 * @property {'collapsed'|'full'} referenceType
 * @property {boolean|undefined} inReference
 * @property {'characterReferenceMarkerHexadecimal'|'characterReferenceMarkerNumeric'} characterReferenceType
 *
 * @typedef {Record<string, unknown> & Partial<_CompileDataFields>} CompileData
 *
 * @typedef {(tree: Root) => Root|void} Transform
 * @typedef {(this: CompileContext, token: Token) => void} Handle
 * @typedef {Record<string, Handle>} Handles
 *   Token types mapping to handles
 * @typedef {Record<string, Record<string, unknown>|Array<unknown>> & {canContainEols: Array<string>, transforms: Array<Transform>, enter: Handles, exit: Handles}} NormalizedExtension
 * @typedef {Partial<NormalizedExtension>} Extension
 *   An mdast extension changes how markdown tokens are turned into mdast.
 *
 * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token|undefined, right: Token) => void} OnEnterError
 * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token, right: Token) => void} OnExitError
 *
 * @typedef CompileContext
 *   mdast compiler context
 * @property {Array<Node | Fragment>} stack
 * @property {Array<[Token, OnEnterError|undefined]>} tokenStack
 * @property {(key: string, value?: unknown) => void} setData
 *   Set data into the key-value store.
 * @property {<K extends string>(key: K) => CompileData[K]} getData
 *   Get data from the key-value store.
 * @property {(this: CompileContext) => void} buffer
 *   Capture some of the output data.
 * @property {(this: CompileContext) => string} resume
 *   Stop capturing and access the output data.
 * @property {<N extends Node>(this: CompileContext, node: N, token: Token, onError?: OnEnterError) => N} enter
 *   Enter a token.
 * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit
 *   Exit a token.
 * @property {TokenizeContext['sliceSerialize']} sliceSerialize
 *   Get the string value of a token.
 * @property {NormalizedExtension} config
 *   Configuration.
 *
 * @typedef {{mdastExtensions?: Array<Extension|Array<Extension>>}} FromMarkdownOptions
 * @typedef {ParseOptions & FromMarkdownOptions} Options
 */









const lib_own = {}.hasOwnProperty
/**
 * @param value Markdown to parse (`string` or `Buffer`).
 * @param [encoding] Character encoding to understand `value` as when it’s a `Buffer` (`string`, default: `'utf8'`).
 * @param [options] Configuration
 */

const fromMarkdown =
  /**
   * @type {(
   *   ((value: Value, encoding: Encoding, options?: Options) => Root) &
   *   ((value: Value, options?: Options) => Root)
   * )}
   */

  /**
   * @param {Value} value
   * @param {Encoding} [encoding]
   * @param {Options} [options]
   * @returns {Root}
   */
  function (value, encoding, options) {
    if (typeof encoding !== 'string') {
      options = encoding
      encoding = undefined
    }

    return compiler(options)(
      postprocess(
        parse(options).document().write(preprocess()(value, encoding, true))
      )
    )
  }
/**
 * Note this compiler only understand complete buffering, not streaming.
 *
 * @param {Options} [options]
 */

function compiler(options = {}) {
  /** @type {NormalizedExtension} */
  // @ts-expect-error: our base has all required fields, so the result will too.
  const config = configure(
    {
      transforms: [],
      canContainEols: [
        'emphasis',
        'fragment',
        'heading',
        'paragraph',
        'strong'
      ],
      enter: {
        autolink: opener(link),
        autolinkProtocol: onenterdata,
        autolinkEmail: onenterdata,
        atxHeading: opener(heading),
        blockQuote: opener(blockQuote),
        characterEscape: onenterdata,
        characterReference: onenterdata,
        codeFenced: opener(codeFlow),
        codeFencedFenceInfo: buffer,
        codeFencedFenceMeta: buffer,
        codeIndented: opener(codeFlow, buffer),
        codeText: opener(codeText, buffer),
        codeTextData: onenterdata,
        data: onenterdata,
        codeFlowValue: onenterdata,
        definition: opener(definition),
        definitionDestinationString: buffer,
        definitionLabelString: buffer,
        definitionTitleString: buffer,
        emphasis: opener(emphasis),
        hardBreakEscape: opener(hardBreak),
        hardBreakTrailing: opener(hardBreak),
        htmlFlow: opener(html, buffer),
        htmlFlowData: onenterdata,
        htmlText: opener(html, buffer),
        htmlTextData: onenterdata,
        image: opener(image),
        label: buffer,
        link: opener(link),
        listItem: opener(listItem),
        listItemValue: onenterlistitemvalue,
        listOrdered: opener(list, onenterlistordered),
        listUnordered: opener(list),
        paragraph: opener(paragraph),
        reference: onenterreference,
        referenceString: buffer,
        resourceDestinationString: buffer,
        resourceTitleString: buffer,
        setextHeading: opener(heading),
        strong: opener(strong),
        thematicBreak: opener(thematicBreak)
      },
      exit: {
        atxHeading: closer(),
        atxHeadingSequence: onexitatxheadingsequence,
        autolink: closer(),
        autolinkEmail: onexitautolinkemail,
        autolinkProtocol: onexitautolinkprotocol,
        blockQuote: closer(),
        characterEscapeValue: onexitdata,
        characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,
        characterReferenceMarkerNumeric: onexitcharacterreferencemarker,
        characterReferenceValue: onexitcharacterreferencevalue,
        codeFenced: closer(onexitcodefenced),
        codeFencedFence: onexitcodefencedfence,
        codeFencedFenceInfo: onexitcodefencedfenceinfo,
        codeFencedFenceMeta: onexitcodefencedfencemeta,
        codeFlowValue: onexitdata,
        codeIndented: closer(onexitcodeindented),
        codeText: closer(onexitcodetext),
        codeTextData: onexitdata,
        data: onexitdata,
        definition: closer(),
        definitionDestinationString: onexitdefinitiondestinationstring,
        definitionLabelString: onexitdefinitionlabelstring,
        definitionTitleString: onexitdefinitiontitlestring,
        emphasis: closer(),
        hardBreakEscape: closer(onexithardbreak),
        hardBreakTrailing: closer(onexithardbreak),
        htmlFlow: closer(onexithtmlflow),
        htmlFlowData: onexitdata,
        htmlText: closer(onexithtmltext),
        htmlTextData: onexitdata,
        image: closer(onexitimage),
        label: onexitlabel,
        labelText: onexitlabeltext,
        lineEnding: onexitlineending,
        link: closer(onexitlink),
        listItem: closer(),
        listOrdered: closer(),
        listUnordered: closer(),
        paragraph: closer(),
        referenceString: onexitreferencestring,
        resourceDestinationString: onexitresourcedestinationstring,
        resourceTitleString: onexitresourcetitlestring,
        resource: onexitresource,
        setextHeading: closer(onexitsetextheading),
        setextHeadingLineSequence: onexitsetextheadinglinesequence,
        setextHeadingText: onexitsetextheadingtext,
        strong: closer(),
        thematicBreak: closer()
      }
    },
    options.mdastExtensions || []
  )
  /** @type {CompileData} */

  const data = {}
  return compile
  /**
   * @param {Array<Event>} events
   * @returns {Root}
   */

  function compile(events) {
    /** @type {Root} */
    let tree = {
      type: 'root',
      children: []
    }
    /** @type {CompileContext['stack']} */

    const stack = [tree]
    /** @type {CompileContext['tokenStack']} */

    const tokenStack = []
    /** @type {Array<number>} */

    const listStack = []
    /** @type {Omit<CompileContext, 'sliceSerialize'>} */

    const context = {
      stack,
      tokenStack,
      config,
      enter,
      exit,
      buffer,
      resume,
      setData,
      getData
    }
    let index = -1

    while (++index < events.length) {
      // We preprocess lists to add `listItem` tokens, and to infer whether
      // items the list itself are spread out.
      if (
        events[index][1].type === 'listOrdered' ||
        events[index][1].type === 'listUnordered'
      ) {
        if (events[index][0] === 'enter') {
          listStack.push(index)
        } else {
          const tail = listStack.pop()
          index = prepareList(events, tail, index)
        }
      }
    }

    index = -1

    while (++index < events.length) {
      const handler = config[events[index][0]]

      if (lib_own.call(handler, events[index][1].type)) {
        handler[events[index][1].type].call(
          Object.assign(
            {
              sliceSerialize: events[index][2].sliceSerialize
            },
            context
          ),
          events[index][1]
        )
      }
    }

    if (tokenStack.length > 0) {
      const tail = tokenStack[tokenStack.length - 1]
      const handler = tail[1] || defaultOnError
      handler.call(context, undefined, tail[0])
    } // Figure out `root` position.

    tree.position = {
      start: point(
        events.length > 0
          ? events[0][1].start
          : {
              line: 1,
              column: 1,
              offset: 0
            }
      ),
      end: point(
        events.length > 0
          ? events[events.length - 2][1].end
          : {
              line: 1,
              column: 1,
              offset: 0
            }
      )
    }
    index = -1

    while (++index < config.transforms.length) {
      tree = config.transforms[index](tree) || tree
    }

    return tree
  }
  /**
   * @param {Array<Event>} events
   * @param {number} start
   * @param {number} length
   * @returns {number}
   */

  function prepareList(events, start, length) {
    let index = start - 1
    let containerBalance = -1
    let listSpread = false
    /** @type {Token|undefined} */

    let listItem
    /** @type {number|undefined} */

    let lineIndex
    /** @type {number|undefined} */

    let firstBlankLineIndex
    /** @type {boolean|undefined} */

    let atMarker

    while (++index <= length) {
      const event = events[index]

      if (
        event[1].type === 'listUnordered' ||
        event[1].type === 'listOrdered' ||
        event[1].type === 'blockQuote'
      ) {
        if (event[0] === 'enter') {
          containerBalance++
        } else {
          containerBalance--
        }

        atMarker = undefined
      } else if (event[1].type === 'lineEndingBlank') {
        if (event[0] === 'enter') {
          if (
            listItem &&
            !atMarker &&
            !containerBalance &&
            !firstBlankLineIndex
          ) {
            firstBlankLineIndex = index
          }

          atMarker = undefined
        }
      } else if (
        event[1].type === 'linePrefix' ||
        event[1].type === 'listItemValue' ||
        event[1].type === 'listItemMarker' ||
        event[1].type === 'listItemPrefix' ||
        event[1].type === 'listItemPrefixWhitespace'
      ) {
        // Empty.
      } else {
        atMarker = undefined
      }

      if (
        (!containerBalance &&
          event[0] === 'enter' &&
          event[1].type === 'listItemPrefix') ||
        (containerBalance === -1 &&
          event[0] === 'exit' &&
          (event[1].type === 'listUnordered' ||
            event[1].type === 'listOrdered'))
      ) {
        if (listItem) {
          let tailIndex = index
          lineIndex = undefined

          while (tailIndex--) {
            const tailEvent = events[tailIndex]

            if (
              tailEvent[1].type === 'lineEnding' ||
              tailEvent[1].type === 'lineEndingBlank'
            ) {
              if (tailEvent[0] === 'exit') continue

              if (lineIndex) {
                events[lineIndex][1].type = 'lineEndingBlank'
                listSpread = true
              }

              tailEvent[1].type = 'lineEnding'
              lineIndex = tailIndex
            } else if (
              tailEvent[1].type === 'linePrefix' ||
              tailEvent[1].type === 'blockQuotePrefix' ||
              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||
              tailEvent[1].type === 'blockQuoteMarker' ||
              tailEvent[1].type === 'listItemIndent'
            ) {
              // Empty
            } else {
              break
            }
          }

          if (
            firstBlankLineIndex &&
            (!lineIndex || firstBlankLineIndex < lineIndex)
          ) {
            // @ts-expect-error Patched.
            listItem._spread = true
          } // Fix position.

          listItem.end = Object.assign(
            {},
            lineIndex ? events[lineIndex][1].start : event[1].end
          )
          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])
          index++
          length++
        } // Create a new list item.

        if (event[1].type === 'listItemPrefix') {
          listItem = {
            type: 'listItem',
            // @ts-expect-error Patched
            _spread: false,
            start: Object.assign({}, event[1].start)
          } // @ts-expect-error: `listItem` is most definitely defined, TS...

          events.splice(index, 0, ['enter', listItem, event[2]])
          index++
          length++
          firstBlankLineIndex = undefined
          atMarker = true
        }
      }
    } // @ts-expect-error Patched.

    events[start][1]._spread = listSpread
    return length
  }
  /**
   * @type {CompileContext['setData']}
   * @param [value]
   */

  function setData(key, value) {
    data[key] = value
  }
  /**
   * @type {CompileContext['getData']}
   * @template {string} K
   * @param {K} key
   * @returns {CompileData[K]}
   */

  function getData(key) {
    return data[key]
  }
  /**
   * @param {Point} d
   * @returns {Point}
   */

  function point(d) {
    return {
      line: d.line,
      column: d.column,
      offset: d.offset
    }
  }
  /**
   * @param {(token: Token) => Node} create
   * @param {Handle} [and]
   * @returns {Handle}
   */

  function opener(create, and) {
    return open
    /**
     * @this {CompileContext}
     * @param {Token} token
     * @returns {void}
     */

    function open(token) {
      enter.call(this, create(token), token)
      if (and) and.call(this, token)
    }
  }
  /** @type {CompileContext['buffer']} */

  function buffer() {
    this.stack.push({
      type: 'fragment',
      children: []
    })
  }
  /**
   * @type {CompileContext['enter']}
   * @template {Node} N
   * @this {CompileContext}
   * @param {N} node
   * @param {Token} token
   * @param {OnEnterError} [errorHandler]
   * @returns {N}
   */

  function enter(node, token, errorHandler) {
    const parent = this.stack[this.stack.length - 1]
    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.
    parent.children.push(node)
    this.stack.push(node)
    this.tokenStack.push([token, errorHandler]) // @ts-expect-error: `end` will be patched later.

    node.position = {
      start: point(token.start)
    }
    return node
  }
  /**
   * @param {Handle} [and]
   * @returns {Handle}
   */

  function closer(and) {
    return close
    /**
     * @this {CompileContext}
     * @param {Token} token
     * @returns {void}
     */

    function close(token) {
      if (and) and.call(this, token)
      exit.call(this, token)
    }
  }
  /**
   * @type {CompileContext['exit']}
   * @this {CompileContext}
   * @param {Token} token
   * @param {OnExitError} [onExitError]
   * @returns {Node}
   */

  function exit(token, onExitError) {
    const node = this.stack.pop()
    const open = this.tokenStack.pop()

    if (!open) {
      throw new Error(
        'Cannot close `' +
          token.type +
          '` (' +
          stringifyPosition({
            start: token.start,
            end: token.end
          }) +
          '): it’s not open'
      )
    } else if (open[0].type !== token.type) {
      if (onExitError) {
        onExitError.call(this, token, open[0])
      } else {
        const handler = open[1] || defaultOnError
        handler.call(this, token, open[0])
      }
    }

    node.position.end = point(token.end)
    return node
  }
  /**
   * @this {CompileContext}
   * @returns {string}
   */

  function resume() {
    return mdast_util_to_string_toString(this.stack.pop())
  } //
  // Handlers.
  //

  /** @type {Handle} */

  function onenterlistordered() {
    setData('expectingFirstListItemValue', true)
  }
  /** @type {Handle} */

  function onenterlistitemvalue(token) {
    if (getData('expectingFirstListItemValue')) {
      const ancestor =
        /** @type {List} */
        this.stack[this.stack.length - 2]
      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)
      setData('expectingFirstListItemValue')
    }
  }
  /** @type {Handle} */

  function onexitcodefencedfenceinfo() {
    const data = this.resume()
    const node =
      /** @type {Code} */
      this.stack[this.stack.length - 1]
    node.lang = data
  }
  /** @type {Handle} */

  function onexitcodefencedfencemeta() {
    const data = this.resume()
    const node =
      /** @type {Code} */
      this.stack[this.stack.length - 1]
    node.meta = data
  }
  /** @type {Handle} */

  function onexitcodefencedfence() {
    // Exit if this is the closing fence.
    if (getData('flowCodeInside')) return
    this.buffer()
    setData('flowCodeInside', true)
  }
  /** @type {Handle} */

  function onexitcodefenced() {
    const data = this.resume()
    const node =
      /** @type {Code} */
      this.stack[this.stack.length - 1]
    node.value = data.replace(/^(\r?\n|\r)|(\r?\n|\r)$/g, '')
    setData('flowCodeInside')
  }
  /** @type {Handle} */

  function onexitcodeindented() {
    const data = this.resume()
    const node =
      /** @type {Code} */
      this.stack[this.stack.length - 1]
    node.value = data.replace(/(\r?\n|\r)$/g, '')
  }
  /** @type {Handle} */

  function onexitdefinitionlabelstring(token) {
    // Discard label, use the source content instead.
    const label = this.resume()
    const node =
      /** @type {Definition} */
      this.stack[this.stack.length - 1]
    node.label = label
    node.identifier = normalizeIdentifier(
      this.sliceSerialize(token)
    ).toLowerCase()
  }
  /** @type {Handle} */

  function onexitdefinitiontitlestring() {
    const data = this.resume()
    const node =
      /** @type {Definition} */
      this.stack[this.stack.length - 1]
    node.title = data
  }
  /** @type {Handle} */

  function onexitdefinitiondestinationstring() {
    const data = this.resume()
    const node =
      /** @type {Definition} */
      this.stack[this.stack.length - 1]
    node.url = data
  }
  /** @type {Handle} */

  function onexitatxheadingsequence(token) {
    const node =
      /** @type {Heading} */
      this.stack[this.stack.length - 1]

    if (!node.depth) {
      const depth = this.sliceSerialize(token).length
      node.depth = depth
    }
  }
  /** @type {Handle} */

  function onexitsetextheadingtext() {
    setData('setextHeadingSlurpLineEnding', true)
  }
  /** @type {Handle} */

  function onexitsetextheadinglinesequence(token) {
    const node =
      /** @type {Heading} */
      this.stack[this.stack.length - 1]
    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2
  }
  /** @type {Handle} */

  function onexitsetextheading() {
    setData('setextHeadingSlurpLineEnding')
  }
  /** @type {Handle} */

  function onenterdata(token) {
    const parent =
      /** @type {Parent} */
      this.stack[this.stack.length - 1]
    /** @type {Node} */

    let tail = parent.children[parent.children.length - 1]

    if (!tail || tail.type !== 'text') {
      // Add a new text node.
      tail = text() // @ts-expect-error: we’ll add `end` later.

      tail.position = {
        start: point(token.start)
      } // @ts-expect-error: Assume `parent` accepts `text`.

      parent.children.push(tail)
    }

    this.stack.push(tail)
  }
  /** @type {Handle} */

  function onexitdata(token) {
    const tail = this.stack.pop()
    tail.value += this.sliceSerialize(token)
    tail.position.end = point(token.end)
  }
  /** @type {Handle} */

  function onexitlineending(token) {
    const context = this.stack[this.stack.length - 1]

    // If we’re at a hard break, include the line ending in there.
    if (getData('atHardBreak')) {
      const tail = context.children[context.children.length - 1]
      tail.position.end = point(token.end)
      setData('atHardBreak')
      return
    }

    if (
      !getData('setextHeadingSlurpLineEnding') &&
      config.canContainEols.includes(context.type)
    ) {
      onenterdata.call(this, token)
      onexitdata.call(this, token)
    }
  }
  /** @type {Handle} */

  function onexithardbreak() {
    setData('atHardBreak', true)
  }
  /** @type {Handle} */

  function onexithtmlflow() {
    const data = this.resume()
    const node =
      /** @type {HTML} */
      this.stack[this.stack.length - 1]
    node.value = data
  }
  /** @type {Handle} */

  function onexithtmltext() {
    const data = this.resume()
    const node =
      /** @type {HTML} */
      this.stack[this.stack.length - 1]
    node.value = data
  }
  /** @type {Handle} */

  function onexitcodetext() {
    const data = this.resume()
    const node =
      /** @type {InlineCode} */
      this.stack[this.stack.length - 1]
    node.value = data
  }
  /** @type {Handle} */

  function onexitlink() {
    const context =
      /** @type {Link & {identifier: string, label: string}} */
      this.stack[this.stack.length - 1] // To do: clean.

    if (getData('inReference')) {
      context.type += 'Reference' // @ts-expect-error: mutate.

      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.

      delete context.url
      delete context.title
    } else {
      // @ts-expect-error: mutate.
      delete context.identifier // @ts-expect-error: mutate.

      delete context.label
    }

    setData('referenceType')
  }
  /** @type {Handle} */

  function onexitimage() {
    const context =
      /** @type {Image & {identifier: string, label: string}} */
      this.stack[this.stack.length - 1] // To do: clean.

    if (getData('inReference')) {
      context.type += 'Reference' // @ts-expect-error: mutate.

      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.

      delete context.url
      delete context.title
    } else {
      // @ts-expect-error: mutate.
      delete context.identifier // @ts-expect-error: mutate.

      delete context.label
    }

    setData('referenceType')
  }
  /** @type {Handle} */

  function onexitlabeltext(token) {
    const ancestor =
      /** @type {(Link|Image) & {identifier: string, label: string}} */
      this.stack[this.stack.length - 2]
    const string = this.sliceSerialize(token)
    ancestor.label = decodeString(string)
    ancestor.identifier = normalizeIdentifier(string).toLowerCase()
  }
  /** @type {Handle} */

  function onexitlabel() {
    const fragment =
      /** @type {Fragment} */
      this.stack[this.stack.length - 1]
    const value = this.resume()
    const node =
      /** @type {(Link|Image) & {identifier: string, label: string}} */
      this.stack[this.stack.length - 1] // Assume a reference.

    setData('inReference', true)

    if (node.type === 'link') {
      // @ts-expect-error: Assume static phrasing content.
      node.children = fragment.children
    } else {
      node.alt = value
    }
  }
  /** @type {Handle} */

  function onexitresourcedestinationstring() {
    const data = this.resume()
    const node =
      /** @type {Link|Image} */
      this.stack[this.stack.length - 1]
    node.url = data
  }
  /** @type {Handle} */

  function onexitresourcetitlestring() {
    const data = this.resume()
    const node =
      /** @type {Link|Image} */
      this.stack[this.stack.length - 1]
    node.title = data
  }
  /** @type {Handle} */

  function onexitresource() {
    setData('inReference')
  }
  /** @type {Handle} */

  function onenterreference() {
    setData('referenceType', 'collapsed')
  }
  /** @type {Handle} */

  function onexitreferencestring(token) {
    const label = this.resume()
    const node =
      /** @type {LinkReference|ImageReference} */
      this.stack[this.stack.length - 1]
    node.label = label
    node.identifier = normalizeIdentifier(
      this.sliceSerialize(token)
    ).toLowerCase()
    setData('referenceType', 'full')
  }
  /** @type {Handle} */

  function onexitcharacterreferencemarker(token) {
    setData('characterReferenceType', token.type)
  }
  /** @type {Handle} */

  function onexitcharacterreferencevalue(token) {
    const data = this.sliceSerialize(token)
    const type = getData('characterReferenceType')
    /** @type {string} */

    let value

    if (type) {
      value = decodeNumericCharacterReference(
        data,
        type === 'characterReferenceMarkerNumeric' ? 10 : 16
      )
      setData('characterReferenceType')
    } else {
      // @ts-expect-error `decodeNamedCharacterReference` can return false for
      // invalid named character references, but everything we’ve tokenized is
      // valid.
      value = decodeNamedCharacterReference(data)
    }

    const tail = this.stack.pop()
    tail.value += value
    tail.position.end = point(token.end)
  }
  /** @type {Handle} */

  function onexitautolinkprotocol(token) {
    onexitdata.call(this, token)
    const node =
      /** @type {Link} */
      this.stack[this.stack.length - 1]
    node.url = this.sliceSerialize(token)
  }
  /** @type {Handle} */

  function onexitautolinkemail(token) {
    onexitdata.call(this, token)
    const node =
      /** @type {Link} */
      this.stack[this.stack.length - 1]
    node.url = 'mailto:' + this.sliceSerialize(token)
  } //
  // Creaters.
  //

  /** @returns {Blockquote} */

  function blockQuote() {
    return {
      type: 'blockquote',
      children: []
    }
  }
  /** @returns {Code} */

  function codeFlow() {
    return {
      type: 'code',
      lang: null,
      meta: null,
      value: ''
    }
  }
  /** @returns {InlineCode} */

  function codeText() {
    return {
      type: 'inlineCode',
      value: ''
    }
  }
  /** @returns {Definition} */

  function definition() {
    return {
      type: 'definition',
      identifier: '',
      label: null,
      title: null,
      url: ''
    }
  }
  /** @returns {Emphasis} */

  function emphasis() {
    return {
      type: 'emphasis',
      children: []
    }
  }
  /** @returns {Heading} */

  function heading() {
    // @ts-expect-error `depth` will be set later.
    return {
      type: 'heading',
      depth: undefined,
      children: []
    }
  }
  /** @returns {Break} */

  function hardBreak() {
    return {
      type: 'break'
    }
  }
  /** @returns {HTML} */

  function html() {
    return {
      type: 'html',
      value: ''
    }
  }
  /** @returns {Image} */

  function image() {
    return {
      type: 'image',
      title: null,
      url: '',
      alt: null
    }
  }
  /** @returns {Link} */

  function link() {
    return {
      type: 'link',
      title: null,
      url: '',
      children: []
    }
  }
  /**
   * @param {Token} token
   * @returns {List}
   */

  function list(token) {
    return {
      type: 'list',
      ordered: token.type === 'listOrdered',
      start: null,
      // @ts-expect-error Patched.
      spread: token._spread,
      children: []
    }
  }
  /**
   * @param {Token} token
   * @returns {ListItem}
   */

  function listItem(token) {
    return {
      type: 'listItem',
      // @ts-expect-error Patched.
      spread: token._spread,
      checked: null,
      children: []
    }
  }
  /** @returns {Paragraph} */

  function paragraph() {
    return {
      type: 'paragraph',
      children: []
    }
  }
  /** @returns {Strong} */

  function strong() {
    return {
      type: 'strong',
      children: []
    }
  }
  /** @returns {Text} */

  function text() {
    return {
      type: 'text',
      value: ''
    }
  }
  /** @returns {ThematicBreak} */

  function thematicBreak() {
    return {
      type: 'thematicBreak'
    }
  }
}
/**
 * @param {Extension} combined
 * @param {Array<Extension|Array<Extension>>} extensions
 * @returns {Extension}
 */

function configure(combined, extensions) {
  let index = -1

  while (++index < extensions.length) {
    const value = extensions[index]

    if (Array.isArray(value)) {
      configure(combined, value)
    } else {
      extension(combined, value)
    }
  }

  return combined
}
/**
 * @param {Extension} combined
 * @param {Extension} extension
 * @returns {void}
 */

function extension(combined, extension) {
  /** @type {string} */
  let key

  for (key in extension) {
    if (lib_own.call(extension, key)) {
      const list = key === 'canContainEols' || key === 'transforms'
      const maybe = lib_own.call(combined, key) ? combined[key] : undefined
      /* c8 ignore next */

      const left = maybe || (combined[key] = list ? [] : {})
      const right = extension[key]

      if (right) {
        if (list) {
          // @ts-expect-error: `left` is an array.
          combined[key] = [...left, ...right]
        } else {
          Object.assign(left, right)
        }
      }
    }
  }
}
/** @type {OnEnterError} */

function defaultOnError(left, right) {
  if (left) {
    throw new Error(
      'Cannot close `' +
        left.type +
        '` (' +
        stringifyPosition({
          start: left.start,
          end: left.end
        }) +
        '): a different token (`' +
        right.type +
        '`, ' +
        stringifyPosition({
          start: right.start,
          end: right.end
        }) +
        ') is open'
    )
  } else {
    throw new Error(
      'Cannot close document, a token (`' +
        right.type +
        '`, ' +
        stringifyPosition({
          start: right.start,
          end: right.end
        }) +
        ') is still open'
    )
  }
}

;// CONCATENATED MODULE: ./node_modules/remark-parse/lib/index.js
/**
 * @typedef {import('mdast').Root} Root
 * @typedef {import('mdast-util-from-markdown').Options} Options
 */



/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */
function remarkParse(options) {
  /** @type {import('unified').ParserFunction<Root>} */
  const parser = (doc) => {
    // Assume options.
    const settings = /** @type {Options} */ (this.data('settings'))

    return fromMarkdown(
      doc,
      Object.assign({}, settings, options, {
        // Note: these options are not in the readme.
        // The goal is for them to be set by plugins on `data` instead of being
        // passed by users.
        extensions: this.data('micromarkExtensions') || [],
        mdastExtensions: this.data('fromMarkdownExtensions') || []
      })
    )
  }

  Object.assign(this, {Parser: parser})
}

;// CONCATENATED MODULE: ./node_modules/remark-parse/index.js


/* harmony default export */ var remark_parse = (remarkParse);

;// CONCATENATED MODULE: ./node_modules/unist-builder/index.js
/**
 * @typedef {import('unist').Node} Node
 * @typedef {import('unist').Parent} Parent
 * @typedef {import('unist').Literal} Literal
 * @typedef {Object.<string, unknown>} Props
 * @typedef {Array.<Node>|string} ChildrenOrValue
 *
 * @typedef {(<T extends string, P extends Record<string, unknown>, C extends Node[]>(type: T, props: P, children: C) => {type: T, children: C} & P)} BuildParentWithProps
 * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P, value: string) => {type: T, value: string} & P)} BuildLiteralWithProps
 * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P) => {type: T} & P)} BuildVoidWithProps
 * @typedef {(<T extends string, C extends Node[]>(type: T, children: C) => {type: T, children: C})} BuildParent
 * @typedef {(<T extends string>(type: T, value: string) => {type: T, value: string})} BuildLiteral
 * @typedef {(<T extends string>(type: T) => {type: T})} BuildVoid
 */

var u = /**
 * @type {BuildVoid & BuildVoidWithProps & BuildLiteral & BuildLiteralWithProps & BuildParent & BuildParentWithProps}
 */ (
  /**
   * @param {string} type Type of node
   * @param {Props|ChildrenOrValue} [props] Additional properties for node (or `children` or `value`)
   * @param {ChildrenOrValue} [value] `children` or `value` of node
   * @returns {Node}
   */
  function (type, props, value) {
    /** @type {Node} */
    var node = {type: String(type)}

    if (
      (value === undefined || value === null) &&
      (typeof props === 'string' || Array.isArray(props))
    ) {
      value = props
    } else {
      Object.assign(node, props)
    }

    if (Array.isArray(value)) {
      node.children = value
    } else if (value !== undefined && value !== null) {
      node.value = String(value)
    }

    return node
  }
)

;// CONCATENATED MODULE: ./node_modules/unist-util-is/index.js
/**
 * @typedef {import('unist').Node} Node
 * @typedef {import('unist').Parent} Parent
 *
 * @typedef {string} Type
 * @typedef {Object<string, unknown>} Props
 *
 * @typedef {null|undefined|Type|Props|TestFunctionAnything|Array.<Type|Props|TestFunctionAnything>} Test
 */

/**
 * Check if a node passes a test
 *
 * @callback TestFunctionAnything
 * @param {Node} node
 * @param {number|null|undefined} [index]
 * @param {Parent|null|undefined} [parent]
 * @returns {boolean|void}
 */

/**
 * Check if a node passes a certain node test
 *
 * @template {Node} X
 * @callback TestFunctionPredicate
 * @param {Node} node
 * @param {number|null|undefined} [index]
 * @param {Parent|null|undefined} [parent]
 * @returns {node is X}
 */

/**
 * @callback AssertAnything
 * @param {unknown} [node]
 * @param {number|null|undefined} [index]
 * @param {Parent|null|undefined} [parent]
 * @returns {boolean}
 */

/**
 * Check if a node passes a certain node test
 *
 * @template {Node} Y
 * @callback AssertPredicate
 * @param {unknown} [node]
 * @param {number|null|undefined} [index]
 * @param {Parent|null|undefined} [parent]
 * @returns {node is Y}
 */

const is =
  /**
   * Check if a node passes a test.
   * When a `parent` node is known the `index` of node should also be given.
   *
   * @type {(
   *   (<T extends Node>(node: unknown, test: T['type']|Partial<T>|TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|TestFunctionPredicate<T>>, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => node is T) &
   *   ((node?: unknown, test?: Test, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => boolean)
   * )}
   */
  (
    /**
     * Check if a node passes a test.
     * When a `parent` node is known the `index` of node should also be given.
     *
     * @param {unknown} [node] Node to check
     * @param {Test} [test]
     * When nullish, checks if `node` is a `Node`.
     * When `string`, works like passing `function (node) {return node.type === test}`.
     * When `function` checks if function passed the node is true.
     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.
     * When `array`, checks any one of the subtests pass.
     * @param {number|null|undefined} [index] Position of `node` in `parent`
     * @param {Parent|null|undefined} [parent] Parent of `node`
     * @param {unknown} [context] Context object to invoke `test` with
     * @returns {boolean} Whether test passed and `node` is a `Node` (object with `type` set to non-empty `string`).
     */
    // eslint-disable-next-line max-params
    function is(node, test, index, parent, context) {
      const check = convert(test)

      if (
        index !== undefined &&
        index !== null &&
        (typeof index !== 'number' ||
          index < 0 ||
          index === Number.POSITIVE_INFINITY)
      ) {
        throw new Error('Expected positive finite index')
      }

      if (
        parent !== undefined &&
        parent !== null &&
        (!is(parent) || !parent.children)
      ) {
        throw new Error('Expected parent node')
      }

      if (
        (parent === undefined || parent === null) !==
        (index === undefined || index === null)
      ) {
        throw new Error('Expected both parent and index')
      }

      // @ts-expect-error Looks like a node.
      return node && node.type && typeof node.type === 'string'
        ? Boolean(check.call(context, node, index, parent))
        : false
    }
  )

const convert =
  /**
   * @type {(
   *   (<T extends Node>(test: T['type']|Partial<T>|TestFunctionPredicate<T>) => AssertPredicate<T>) &
   *   ((test?: Test) => AssertAnything)
   * )}
   */
  (
    /**
     * Generate an assertion from a check.
     * @param {Test} [test]
     * When nullish, checks if `node` is a `Node`.
     * When `string`, works like passing `function (node) {return node.type === test}`.
     * When `function` checks if function passed the node is true.
     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.
     * When `array`, checks any one of the subtests pass.
     * @returns {AssertAnything}
     */
    function (test) {
      if (test === undefined || test === null) {
        return ok
      }

      if (typeof test === 'string') {
        return typeFactory(test)
      }

      if (typeof test === 'object') {
        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)
      }

      if (typeof test === 'function') {
        return castFactory(test)
      }

      throw new Error('Expected function, string, or object as test')
    }
  )
/**
 * @param {Array.<Type|Props|TestFunctionAnything>} tests
 * @returns {AssertAnything}
 */
function anyFactory(tests) {
  /** @type {Array.<AssertAnything>} */
  const checks = []
  let index = -1

  while (++index < tests.length) {
    checks[index] = convert(tests[index])
  }

  return castFactory(any)

  /**
   * @this {unknown}
   * @param {unknown[]} parameters
   * @returns {boolean}
   */
  function any(...parameters) {
    let index = -1

    while (++index < checks.length) {
      if (checks[index].call(this, ...parameters)) return true
    }

    return false
  }
}

/**
 * Utility to assert each property in `test` is represented in `node`, and each
 * values are strictly equal.
 *
 * @param {Props} check
 * @returns {AssertAnything}
 */
function propsFactory(check) {
  return castFactory(all)

  /**
   * @param {Node} node
   * @returns {boolean}
   */
  function all(node) {
    /** @type {string} */
    let key

    for (key in check) {
      // @ts-expect-error: hush, it sure works as an index.
      if (node[key] !== check[key]) return false
    }

    return true
  }
}

/**
 * Utility to convert a string into a function which checks a given node’s type
 * for said string.
 *
 * @param {Type} check
 * @returns {AssertAnything}
 */
function typeFactory(check) {
  return castFactory(type)

  /**
   * @param {Node} node
   */
  function type(node) {
    return node && node.type === check
  }
}

/**
 * Utility to convert a string into a function which checks a given node’s type
 * for said string.
 * @param {TestFunctionAnything} check
 * @returns {AssertAnything}
 */
function castFactory(check) {
  return assertion

  /**
   * @this {unknown}
   * @param {Array.<unknown>} parameters
   * @returns {boolean}
   */
  function assertion(...parameters) {
    // @ts-expect-error: spreading is fine.
    return Boolean(check.call(this, ...parameters))
  }
}

// Utility to return true.
function ok() {
  return true
}

;// CONCATENATED MODULE: ./node_modules/unist-util-visit-parents/color.browser.js
/**
 * @param {string} d
 * @returns {string}
 */
function color(d) {
  return d
}

;// CONCATENATED MODULE: ./node_modules/unist-util-visit-parents/index.js
/**
 * @typedef {import('unist').Node} Node
 * @typedef {import('unist').Parent} Parent
 * @typedef {import('unist-util-is').Test} Test
 * @typedef {import('./complex-types').Action} Action
 * @typedef {import('./complex-types').Index} Index
 * @typedef {import('./complex-types').ActionTuple} ActionTuple
 * @typedef {import('./complex-types').VisitorResult} VisitorResult
 * @typedef {import('./complex-types').Visitor} Visitor
 */




/**
 * Continue traversing as normal
 */
const CONTINUE = true
/**
 * Do not traverse this node’s children
 */
const SKIP = 'skip'
/**
 * Stop traversing immediately
 */
const EXIT = false

/**
 * Visit children of tree which pass a test
 *
 * @param tree Abstract syntax tree to walk
 * @param test Test node, optional
 * @param visitor Function to run for each node
 * @param reverse Visit the tree in reverse order, defaults to false
 */
const visitParents =
  /**
   * @type {(
   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &
   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types').BuildVisitor<Tree>, reverse?: boolean) => void)
   * )}
   */
  (
    /**
     * @param {Node} tree
     * @param {Test} test
     * @param {import('./complex-types').Visitor<Node>} visitor
     * @param {boolean} [reverse]
     */
    function (tree, test, visitor, reverse) {
      if (typeof test === 'function' && typeof visitor !== 'function') {
        reverse = visitor
        // @ts-expect-error no visitor given, so `visitor` is test.
        visitor = test
        test = null
      }

      const is = convert(test)
      const step = reverse ? -1 : 1

      factory(tree, null, [])()

      /**
       * @param {Node} node
       * @param {number?} index
       * @param {Array.<Parent>} parents
       */
      function factory(node, index, parents) {
        /** @type {Object.<string, unknown>} */
        // @ts-expect-error: hush
        const value = typeof node === 'object' && node !== null ? node : {}
        /** @type {string|undefined} */
        let name

        if (typeof value.type === 'string') {
          name =
            typeof value.tagName === 'string'
              ? value.tagName
              : typeof value.name === 'string'
              ? value.name
              : undefined

          Object.defineProperty(visit, 'name', {
            value:
              'node (' +
              color(value.type + (name ? '<' + name + '>' : '')) +
              ')'
          })
        }

        return visit

        function visit() {
          /** @type {ActionTuple} */
          let result = []
          /** @type {ActionTuple} */
          let subresult
          /** @type {number} */
          let offset
          /** @type {Array.<Parent>} */
          let grandparents

          if (!test || is(node, index, parents[parents.length - 1] || null)) {
            result = toResult(visitor(node, parents))

            if (result[0] === EXIT) {
              return result
            }
          }

          // @ts-expect-error looks like a parent.
          if (node.children && result[0] !== SKIP) {
            // @ts-expect-error looks like a parent.
            offset = (reverse ? node.children.length : -1) + step
            // @ts-expect-error looks like a parent.
            grandparents = parents.concat(node)

            // @ts-expect-error looks like a parent.
            while (offset > -1 && offset < node.children.length) {
              // @ts-expect-error looks like a parent.
              subresult = factory(node.children[offset], offset, grandparents)()

              if (subresult[0] === EXIT) {
                return subresult
              }

              offset =
                typeof subresult[1] === 'number' ? subresult[1] : offset + step
            }
          }

          return result
        }
      }
    }
  )

/**
 * @param {VisitorResult} value
 * @returns {ActionTuple}
 */
function toResult(value) {
  if (Array.isArray(value)) {
    return value
  }

  if (typeof value === 'number') {
    return [CONTINUE, value]
  }

  return [value]
}

;// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/node_modules/unist-util-visit/index.js
/**
 * @typedef {import('unist').Node} Node
 * @typedef {import('unist').Parent} Parent
 * @typedef {import('unist-util-is').Test} Test
 * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult
 * @typedef {import('./complex-types').Visitor} Visitor
 */





/**
 * Visit children of tree which pass a test
 *
 * @param tree Abstract syntax tree to walk
 * @param test Test, optional
 * @param visitor Function to run for each node
 * @param reverse Fisit the tree in reverse, defaults to false
 */
const visit =
  /**
   * @type {(
   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &
   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types').BuildVisitor<Tree>, reverse?: boolean) => void)
   * )}
   */
  (
    /**
     * @param {Node} tree
     * @param {Test} test
     * @param {import('./complex-types').Visitor} visitor
     * @param {boolean} [reverse]
     */
    function (tree, test, visitor, reverse) {
      if (typeof test === 'function' && typeof visitor !== 'function') {
        reverse = visitor
        visitor = test
        test = null
      }

      visitParents(tree, test, overload, reverse)

      /**
       * @param {Node} node
       * @param {Array.<Parent>} parents
       */
      function overload(node, parents) {
        const parent = parents[parents.length - 1]
        return visitor(
          node,
          parent ? parent.children.indexOf(node) : null,
          parent
        )
      }
    }
  )

;// CONCATENATED MODULE: ./node_modules/unist-util-position/index.js
/**
 * @typedef {import('unist').Position} Position
 * @typedef {import('unist').Node} Node
 * @typedef {Record<string, unknown> & {type: string, position?: PositionLike|undefined}} NodeLike
 * @typedef {import('unist').Point} Point
 *
 * @typedef {Partial<Point>} PointLike
 *
 * @typedef PositionLike
 * @property {PointLike} [start]
 * @property {PointLike} [end]
 */

const pointStart = unist_util_position_point('start')
const pointEnd = unist_util_position_point('end')

/**
 * Get the positional info of `node`.
 *
 * @param {NodeLike|Node} [node]
 * @returns {Position}
 */
function unist_util_position_position(node) {
  return {start: pointStart(node), end: pointEnd(node)}
}

/**
 * Get the positional info of `node`.
 *
 * @param {'start'|'end'} type
 */
function unist_util_position_point(type) {
  return point

  /**
   * Get the positional info of `node`.
   *
   * @param {NodeLike|Node} [node]
   * @returns {Point}
   */
  function point(node) {
    const point = (node && node.position && node.position[type]) || {}

    return {
      line: point.line || null,
      column: point.column || null,
      offset: point.offset > -1 ? point.offset : null
    }
  }
}

;// CONCATENATED MODULE: ./node_modules/unist-util-generated/index.js
/**
 * @typedef {Object} PointLike
 * @property {number} [line]
 * @property {number} [column]
 * @property {number} [offset]
 *
 * @typedef {Object} PositionLike
 * @property {PointLike} [start]
 * @property {PointLike} [end]
 *
 * @typedef {Object} NodeLike
 * @property {PositionLike} [position]
 */

/**
 * Check if `node` is *generated*.
 *
 * @param {NodeLike} [node]
 * @returns {boolean}
 */
function generated(node) {
  return (
    !node ||
    !node.position ||
    !node.position.start ||
    !node.position.start.line ||
    !node.position.start.column ||
    !node.position.end ||
    !node.position.end.line ||
    !node.position.end.column
  )
}

;// CONCATENATED MODULE: ./node_modules/mdast-util-definitions/node_modules/unist-util-visit-parents/color.browser.js
/**
 * @param {string} d
 * @returns {string}
 */
function color_browser_color(d) {
  return d
}

;// CONCATENATED MODULE: ./node_modules/mdast-util-definitions/node_modules/unist-util-visit-parents/index.js
/**
 * @typedef {import('unist').Node} Node
 * @typedef {import('unist').Parent} Parent
 * @typedef {import('unist-util-is').Test} Test
 */

/**
 * @typedef {CONTINUE|SKIP|EXIT} Action Union of the action types
 * @typedef {number} Index Move to the sibling at index next (after node itself is completely traversed). Useful if mutating the tree, such as removing the node the visitor is currently on, or any of its previous siblings (or next siblings, in case of reverse) Results less than 0 or greater than or equal to children.length stop traversing the parent
 * @typedef {[(Action|null|undefined|void)?, (Index|null|undefined)?]} ActionTuple List with one or two values, the first an action, the second an index.
 * @typedef {null|undefined|Action|Index|ActionTuple|void} VisitorResult Any value that can be returned from a visitor
 */

/**
 * Invoked when a node (matching test, if given) is found.
 * Visitors are free to transform node.
 * They can also transform the parent of node (the last of ancestors).
 * Replacing node itself, if `SKIP` is not returned, still causes its descendants to be visited.
 * If adding or removing previous siblings (or next siblings, in case of reverse) of node,
 * visitor should return a new index (number) to specify the sibling to traverse after node is traversed.
 * Adding or removing next siblings of node (or previous siblings, in case of reverse)
 * is handled as expected without needing to return a new index.
 * Removing the children property of an ancestor still results in them being traversed.
 *
 * @template {Node} V
 * @callback Visitor
 * @param {V} node Found node
 * @param {Array.<Parent>} ancestors Ancestors of node
 * @returns {VisitorResult}
 */




/**
 * Continue traversing as normal
 */
const unist_util_visit_parents_CONTINUE = true
/**
 * Do not traverse this node’s children
 */
const unist_util_visit_parents_SKIP = 'skip'
/**
 * Stop traversing immediately
 */
const unist_util_visit_parents_EXIT = false

const unist_util_visit_parents_visitParents =
  /**
   * @type {(
   *   (<T extends Node>(tree: Node, test: T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>>, visitor: Visitor<T>, reverse?: boolean) => void) &
   *   ((tree: Node, test: Test, visitor: Visitor<Node>, reverse?: boolean) => void) &
   *   ((tree: Node, visitor: Visitor<Node>, reverse?: boolean) => void)
   * )}
   */
  (
    /**
     * Visit children of tree which pass a test
     *
     * @param {Node} tree Abstract syntax tree to walk
     * @param {Test} test test Test node
     * @param {Visitor<Node>} visitor Function to run for each node
     * @param {boolean} [reverse] Fisit the tree in reverse, defaults to false
     */
    function (tree, test, visitor, reverse) {
      if (typeof test === 'function' && typeof visitor !== 'function') {
        reverse = visitor
        // @ts-ignore no visitor given, so `visitor` is test.
        visitor = test
        test = null
      }

      var is = convert(test)
      var step = reverse ? -1 : 1

      factory(tree, null, [])()

      /**
       * @param {Node} node
       * @param {number?} index
       * @param {Array.<Parent>} parents
       */
      function factory(node, index, parents) {
        /** @type {Object.<string, unknown>} */
        var value = typeof node === 'object' && node !== null ? node : {}
        /** @type {string} */
        var name

        if (typeof value.type === 'string') {
          name =
            typeof value.tagName === 'string'
              ? value.tagName
              : typeof value.name === 'string'
              ? value.name
              : undefined

          Object.defineProperty(visit, 'name', {
            value:
              'node (' +
              color_browser_color(value.type + (name ? '<' + name + '>' : '')) +
              ')'
          })
        }

        return visit

        function visit() {
          /** @type {ActionTuple} */
          var result = []
          /** @type {ActionTuple} */
          var subresult
          /** @type {number} */
          var offset
          /** @type {Array.<Parent>} */
          var grandparents

          if (!test || is(node, index, parents[parents.length - 1] || null)) {
            result = unist_util_visit_parents_toResult(visitor(node, parents))

            if (result[0] === unist_util_visit_parents_EXIT) {
              return result
            }
          }

          if (node.children && result[0] !== unist_util_visit_parents_SKIP) {
            // @ts-ignore looks like a parent.
            offset = (reverse ? node.children.length : -1) + step
            // @ts-ignore looks like a parent.
            grandparents = parents.concat(node)

            // @ts-ignore looks like a parent.
            while (offset > -1 && offset < node.children.length) {
              subresult = factory(node.children[offset], offset, grandparents)()

              if (subresult[0] === unist_util_visit_parents_EXIT) {
                return subresult
              }

              offset =
                typeof subresult[1] === 'number' ? subresult[1] : offset + step
            }
          }

          return result
        }
      }
    }
  )

/**
 * @param {VisitorResult} value
 * @returns {ActionTuple}
 */
function unist_util_visit_parents_toResult(value) {
  if (Array.isArray(value)) {
    return value
  }

  if (typeof value === 'number') {
    return [unist_util_visit_parents_CONTINUE, value]
  }

  return [value]
}

;// CONCATENATED MODULE: ./node_modules/mdast-util-definitions/node_modules/unist-util-visit/index.js
/**
 * @typedef {import('unist').Node} Node
 * @typedef {import('unist').Parent} Parent
 * @typedef {import('unist-util-is').Test} Test
 * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult
 */

/**
 * Invoked when a node (matching test, if given) is found.
 * Visitors are free to transform node.
 * They can also transform the parent of node (the last of ancestors).
 * Replacing node itself, if `SKIP` is not returned, still causes its descendants to be visited.
 * If adding or removing previous siblings (or next siblings, in case of reverse) of node,
 * visitor should return a new index (number) to specify the sibling to traverse after node is traversed.
 * Adding or removing next siblings of node (or previous siblings, in case of reverse)
 * is handled as expected without needing to return a new index.
 * Removing the children property of an ancestor still results in them being traversed.
 *
 * @template {Node} V
 * @callback Visitor
 * @param {V} node Found node
 * @param {number|null} index Position of `node` in `parent`
 * @param {Parent|null} parent Parent of `node`
 * @returns {VisitorResult}
 */





const unist_util_visit_visit =
  /**
   * @type {(
   *   (<T extends Node>(tree: Node, test: T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>>, visitor: Visitor<T>, reverse?: boolean) => void) &
   *   ((tree: Node, test: Test, visitor: Visitor<Node>, reverse?: boolean) => void) &
   *   ((tree: Node, visitor: Visitor<Node>, reverse?: boolean) => void)
   * )}
   */
  (
    /**
     * Visit children of tree which pass a test
     *
     * @param {Node} tree Abstract syntax tree to walk
     * @param {Test} test test Test node
     * @param {Visitor<Node>} visitor Function to run for each node
     * @param {boolean} [reverse] Fisit the tree in reverse, defaults to false
     */
    function (tree, test, visitor, reverse) {
      if (typeof test === 'function' && typeof visitor !== 'function') {
        reverse = visitor
        visitor = test
        test = null
      }

      unist_util_visit_parents_visitParents(tree, test, overload, reverse)

      /**
       * @param {Node} node
       * @param {Array.<Parent>} parents
       */
      function overload(node, parents) {
        var parent = parents[parents.length - 1]
        return visitor(
          node,
          parent ? parent.children.indexOf(node) : null,
          parent
        )
      }
    }
  )

;// CONCATENATED MODULE: ./node_modules/mdast-util-definitions/index.js
/**
 * @typedef {import('mdast').Root|import('mdast').Content} Node
 * @typedef {import('mdast').Definition} Definition
 * @typedef {import('unist-util-visit').Visitor<Definition>} DefinitionVisitor
 */



const mdast_util_definitions_own = {}.hasOwnProperty

/**
 *
 * @param {Node} node
 */
function definitions(node) {
  /** @type {Object.<string, Definition>} */
  const cache = Object.create(null)

  if (!node || !node.type) {
    throw new Error('mdast-util-definitions expected node')
  }

  unist_util_visit_visit(node, 'definition', ondefinition)

  return getDefinition

  /** @type {DefinitionVisitor} */
  function ondefinition(definition) {
    const id = clean(definition.identifier)
    if (id && !mdast_util_definitions_own.call(cache, id)) {
      cache[id] = definition
    }
  }

  /**
   * Get a node from the bound definition-cache.
   *
   * @param {string} identifier
   * @returns {Definition|null}
   */
  function getDefinition(identifier) {
    const id = clean(identifier)
    return id && mdast_util_definitions_own.call(cache, id) ? cache[id] : null
  }
}

/**
 * @param {string} [value]
 * @returns {string}
 */
function clean(value) {
  return String(value || '').toUpperCase()
}

;// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/traverse.js
/**
 * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode
 * @typedef {import('./index.js').H} H
 * @typedef {import('./index.js').Handler} Handler
 * @typedef {import('./index.js').Content} Content
 */



const traverse_own = {}.hasOwnProperty

/**
 * Transform an unknown node.
 * @type {Handler}
 * @param {MdastNode} node
 */
function unknown(h, node) {
  const data = node.data || {}

  if (
    'value' in node &&
    !(
      traverse_own.call(data, 'hName') ||
      traverse_own.call(data, 'hProperties') ||
      traverse_own.call(data, 'hChildren')
    )
  ) {
    return h.augment(node, u('text', node.value))
  }

  return h(node, 'div', traverse_all(h, node))
}

/**
 * @type {Handler}
 * @param {MdastNode} node
 */
function traverse_one(h, node, parent) {
  const type = node && node.type
  /** @type {Handler} */
  let fn

  // Fail on non-nodes.
  if (!type) {
    throw new Error('Expected node, got `' + node + '`')
  }

  if (traverse_own.call(h.handlers, type)) {
    fn = h.handlers[type]
  } else if (h.passThrough && h.passThrough.includes(type)) {
    fn = returnNode
  } else {
    fn = h.unknownHandler
  }

  return (typeof fn === 'function' ? fn : unknown)(h, node, parent)
}

/**
 * @type {Handler}
 * @param {MdastNode} node
 */
function returnNode(h, node) {
  // @ts-expect-error: Pass through custom node.
  return 'children' in node ? {...node, children: traverse_all(h, node)} : node
}

/**
 * @param {H} h
 * @param {MdastNode} parent
 */
function traverse_all(h, parent) {
  /** @type {Array<Content>} */
  const values = []

  if ('children' in parent) {
    const nodes = parent.children
    let index = -1

    while (++index < nodes.length) {
      const result = traverse_one(h, nodes[index], parent)

      if (result) {
        if (index && nodes[index - 1].type === 'break') {
          if (!Array.isArray(result) && result.type === 'text') {
            result.value = result.value.replace(/^\s+/, '')
          }

          if (!Array.isArray(result) && result.type === 'element') {
            const head = result.children[0]

            if (head && head.type === 'text') {
              head.value = head.value.replace(/^\s+/, '')
            }
          }
        }

        if (Array.isArray(result)) {
          values.push(...result)
        } else {
          values.push(result)
        }
      }
    }
  }

  return values
}

;// CONCATENATED MODULE: ./node_modules/micromark-util-encode/index.js
const characterReferences = {'"': 'quot', '&': 'amp', '<': 'lt', '>': 'gt'}

/**
 * Encode only the dangerous HTML characters.
 *
 * This ensures that certain characters which have special meaning in HTML are
 * dealt with.
 * Technically, we can skip `>` and `"` in many cases, but CM includes them.
 *
 * @param {string} value
 * @returns {string}
 */
function encode(value) {
  return value.replace(/["&<>]/g, replace)

  /**
   * @param {string} value
   * @returns {string}
   */
  function replace(value) {
    // @ts-expect-error Hush, it’s fine.
    return '&' + characterReferences[value] + ';'
  }
}

;// CONCATENATED MODULE: ./node_modules/micromark-util-sanitize-uri/index.js



/**
 * Make a value safe for injection as a URL.
 *
 * This encodes unsafe characters with percent-encoding and skips already
 * encoded sequences (see `normalizeUri` below).
 * Further unsafe characters are encoded as character references (see
 * `micromark-util-encode`).
 *
 * Then, a regex of allowed protocols can be given, in which case the URL is
 * sanitized.
 * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`,
 * or `/^https?$/i` for `img[src]`.
 * If the URL includes an unknown protocol (one not matched by `protocol`, such
 * as a dangerous example, `javascript:`), the value is ignored.
 *
 * @param {string|undefined} url
 * @param {RegExp} [protocol]
 * @returns {string}
 */
function sanitizeUri(url, protocol) {
  const value = encode(normalizeUri(url || ''))

  if (!protocol) {
    return value
  }

  const colon = value.indexOf(':')
  const questionMark = value.indexOf('?')
  const numberSign = value.indexOf('#')
  const slash = value.indexOf('/')

  if (
    // If there is no protocol, it’s relative.
    colon < 0 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.
    (slash > -1 && colon > slash) ||
    (questionMark > -1 && colon > questionMark) ||
    (numberSign > -1 && colon > numberSign) || // It is a protocol, it should be allowed.
    protocol.test(value.slice(0, colon))
  ) {
    return value
  }

  return ''
}
/**
 * Normalize a URL (such as used in definitions).
 *
 * Encode unsafe characters with percent-encoding, skipping already encoded
 * sequences.
 *
 * @param {string} value
 * @returns {string}
 */

function normalizeUri(value) {
  /** @type {string[]} */
  const result = []
  let index = -1
  let start = 0
  let skip = 0

  while (++index < value.length) {
    const code = value.charCodeAt(index)
    /** @type {string} */

    let replace = '' // A correct percent encoded value.

    if (
      code === 37 &&
      asciiAlphanumeric(value.charCodeAt(index + 1)) &&
      asciiAlphanumeric(value.charCodeAt(index + 2))
    ) {
      skip = 2
    } // ASCII.
    else if (code < 128) {
      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {
        replace = String.fromCharCode(code)
      }
    } // Astral.
    else if (code > 55295 && code < 57344) {
      const next = value.charCodeAt(index + 1) // A correct surrogate pair.

      if (code < 56320 && next > 56319 && next < 57344) {
        replace = String.fromCharCode(code, next)
        skip = 1
      } // Lone surrogate.
      else {
        replace = '\uFFFD'
      }
    } // Unicode.
    else {
      replace = String.fromCharCode(code)
    }

    if (replace) {
      result.push(value.slice(start, index), encodeURIComponent(replace))
      start = index + skip + 1
      replace = ''
    }

    if (skip) {
      index += skip
      skip = 0
    }
  }

  return result.join('') + value.slice(start)
}

;// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/wrap.js
/**
 * @typedef {import('./index.js').Content} Content
 */



/**
 * Wrap `nodes` with line feeds between each entry.
 * Optionally adds line feeds at the start and end.
 *
 * @param {Array<Content>} nodes
 * @param {boolean} [loose=false]
 * @returns {Array<Content>}
 */
function wrap_wrap(nodes, loose) {
  /** @type {Array<Content>} */
  const result = []
  let index = -1

  if (loose) {
    result.push(u('text', '\n'))
  }

  while (++index < nodes.length) {
    if (index) result.push(u('text', '\n'))
    result.push(nodes[index])
  }

  if (loose && nodes.length > 0) {
    result.push(u('text', '\n'))
  }

  return result
}

;// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/footer.js
/**
 * @typedef {import('mdast').BlockContent} BlockContent
 * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition
 * @typedef {import('hast').Element} Element
 * @typedef {import('hast').ElementContent} ElementContent
 * @typedef {import('./index.js').H} H
 */






/**
 * @param {H} h
 */
function footer(h) {
  let index = -1
  /** @type {Array<ElementContent>} */
  const listItems = []

  while (++index < h.footnoteOrder.length) {
    const def = h.footnoteById[h.footnoteOrder[index].toUpperCase()]

    if (!def) {
      continue
    }

    const content = traverse_all(h, def)
    const id = String(def.identifier)
    const safeId = sanitizeUri(id.toLowerCase())
    let referenceIndex = 0
    /** @type {Array<ElementContent>} */
    const backReferences = []

    while (++referenceIndex <= h.footnoteCounts[id]) {
      /** @type {Element} */
      const backReference = {
        type: 'element',
        tagName: 'a',
        properties: {
          href:
            '#' +
            h.clobberPrefix +
            'fnref-' +
            safeId +
            (referenceIndex > 1 ? '-' + referenceIndex : ''),
          dataFootnoteBackref: true,
          className: ['data-footnote-backref'],
          ariaLabel: h.footnoteBackLabel
        },
        children: [{type: 'text', value: '↩'}]
      }

      if (referenceIndex > 1) {
        backReference.children.push({
          type: 'element',
          tagName: 'sup',
          children: [{type: 'text', value: String(referenceIndex)}]
        })
      }

      if (backReferences.length > 0) {
        backReferences.push({type: 'text', value: ' '})
      }

      backReferences.push(backReference)
    }

    const tail = content[content.length - 1]

    if (tail && tail.type === 'element' && tail.tagName === 'p') {
      const tailTail = tail.children[tail.children.length - 1]
      if (tailTail && tailTail.type === 'text') {
        tailTail.value += ' '
      } else {
        tail.children.push({type: 'text', value: ' '})
      }

      tail.children.push(...backReferences)
    } else {
      content.push(...backReferences)
    }

    /** @type {Element} */
    const listItem = {
      type: 'element',
      tagName: 'li',
      properties: {id: h.clobberPrefix + 'fn-' + safeId},
      children: wrap_wrap(content, true)
    }

    if (def.position) {
      listItem.position = def.position
    }

    listItems.push(listItem)
  }

  if (listItems.length === 0) {
    return null
  }

  return {
    type: 'element',
    tagName: 'section',
    properties: {dataFootnotes: true, className: ['footnotes']},
    children: [
      {
        type: 'element',
        tagName: 'h2',
        properties: {id: 'footnote-label', className: ['sr-only']},
        children: [u('text', h.footnoteLabel)]
      },
      {type: 'text', value: '\n'},
      {
        type: 'element',
        tagName: 'ol',
        properties: {},
        children: wrap_wrap(listItems, true)
      },
      {type: 'text', value: '\n'}
    ]
  }
}

;// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/handlers/blockquote.js
/**
 * @typedef {import('mdast').Blockquote} Blockquote
 * @typedef {import('../index.js').Handler} Handler
 */




/**
 * @type {Handler}
 * @param {Blockquote} node
 */
function blockquote(h, node) {
  return h(node, 'blockquote', wrap_wrap(traverse_all(h, node), true))
}

;// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/handlers/break.js
/**
 * @typedef {import('hast').Element} Element
 * @typedef {import('hast').Text} Text
 * @typedef {import('mdast').Break} Break
 * @typedef {import('../index.js').Handler} Handler
 */



/**
 * @type {Handler}
 * @param {Break} node
 * @returns {Array<Element|Text>}
 */
function hardBreak(h, node) {
  return [h(node, 'br'), u('text', '\n')]
}

;// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/handlers/code.js
/**
 * @typedef {import('mdast').Code} Code
 * @typedef {import('hast').Element} Element
 * @typedef {import('hast').Properties} Properties
 * @typedef {import('../index.js').Handler} Handler
 */



/**
 * @type {Handler}
 * @param {Code} node
 */
function code(h, node) {
  const value = node.value ? node.value + '\n' : ''
  // To do: next major, use `node.lang` w/o regex, the splitting’s been going
  // on for years in remark now.
  const lang = node.lang && node.lang.match(/^[^ \t]+(?=[ \t]|$)/)
  /** @type {Properties} */
  const props = {}

  if (lang) {
    props.className = ['language-' + lang]
  }

  const code = h(node, 'code', props, [u('text', value)])

  if (node.meta) {
    code.data = {meta: node.meta}
  }

  return h(node.position, 'pre', [code])
}

;// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/handlers/delete.js
/**
 * @typedef {import('mdast').Delete} Delete
 * @typedef {import('../index.js').Handler} Handler
 */



/**
 * @type {Handler}
 * @param {Delete} node
 */
function strikethrough(h, node) {
  return h(node, 'del', traverse_all(h, node))
}

;// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/handlers/emphasis.js
/**
 * @typedef {import('mdast').Emphasis} Emphasis
 * @typedef {import('../index.js').Handler} Handler
 */



/**
 * @type {Handler}
 * @param {Emphasis} node
 */
function emphasis(h, node) {
  return h(node, 'em', traverse_all(h, node))
}

;// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js
/**
 * @typedef {import('mdast').FootnoteReference} FootnoteReference
 * @typedef {import('../index.js').Handler} Handler
 */




/**
 * @type {Handler}
 * @param {FootnoteReference} node
 */
function footnoteReference(h, node) {
  const id = String(node.identifier)
  const safeId = sanitizeUri(id.toLowerCase())
  const index = h.footnoteOrder.indexOf(id)
  /** @type {number} */
  let counter

  if (index === -1) {
    h.footnoteOrder.push(id)
    h.footnoteCounts[id] = 1
    counter = h.footnoteOrder.length
  } else {
    h.footnoteCounts[id]++
    counter = index + 1
  }

  const reuseCounter = h.footnoteCounts[id]

  return h(node, 'sup', [
    h(
      node.position,
      'a',
      {
        href: '#' + h.clobberPrefix + 'fn-' + safeId,
        id:
          h.clobberPrefix +
          'fnref-' +
          safeId +
          (reuseCounter > 1 ? '-' + reuseCounter : ''),
        dataFootnoteRef: true,
        ariaDescribedBy: 'footnote-label'
      },
      [u('text', String(counter))]
    )
  ])
}

;// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/handlers/footnote.js
/**
 * @typedef {import('mdast').Footnote} Footnote
 * @typedef {import('../index.js').Handler} Handler
 *
 * @todo
 *   `footnote` (or “inline note”) are a pandoc footnotes feature (`^[a note]`)
 *   that does not exist in GFM.
 *   We still have support for it, so that things remain working with
 *   `micromark-extension-footnote` and `mdast-util-footnote`, but in the future
 *   we might be able to remove it?
 */



/**
 * @type {Handler}
 * @param {Footnote} node
 */
function footnote(h, node) {
  const footnoteById = h.footnoteById
  let no = 1

  while (no in footnoteById) no++

  const identifier = String(no)

  footnoteById[identifier] = {
    type: 'footnoteDefinition',
    identifier,
    children: [{type: 'paragraph', children: node.children}],
    position: node.position
  }

  return footnoteReference(h, {
    type: 'footnoteReference',
    identifier,
    position: node.position
  })
}

;// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/handlers/heading.js
/**
 * @typedef {import('mdast').Heading} Heading
 * @typedef {import('../index.js').Handler} Handler
 */



/**
 * @type {Handler}
 * @param {Heading} node
 */
function heading(h, node) {
  return h(node, 'h' + node.depth, traverse_all(h, node))
}

;// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/handlers/html.js
/**
 * @typedef {import('mdast').HTML} HTML
 * @typedef {import('../index.js').Handler} Handler
 */



/**
 * Return either a `raw` node in dangerous mode, otherwise nothing.
 *
 * @type {Handler}
 * @param {HTML} node
 */
function html(h, node) {
  return h.dangerous ? h.augment(node, u('raw', node.value)) : null
}

// EXTERNAL MODULE: ./node_modules/mdurl/encode.js
var mdurl_encode = __webpack_require__(62628);
;// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/revert.js
/**
 * @typedef {import('mdast').LinkReference} LinkReference
 * @typedef {import('mdast').ImageReference} ImageReference
 * @typedef {import('./index.js').Handler} Handler
 * @typedef {import('./index.js').Content} Content
 */




/**
 * Return the content of a reference without definition as plain text.
 *
 * @type {Handler}
 * @param {ImageReference|LinkReference} node
 * @returns {Content|Array<Content>}
 */
function revert(h, node) {
  const subtype = node.referenceType
  let suffix = ']'

  if (subtype === 'collapsed') {
    suffix += '[]'
  } else if (subtype === 'full') {
    suffix += '[' + (node.label || node.identifier) + ']'
  }

  if (node.type === 'imageReference') {
    return u('text', '![' + node.alt + suffix)
  }

  const contents = traverse_all(h, node)
  const head = contents[0]

  if (head && head.type === 'text') {
    head.value = '[' + head.value
  } else {
    contents.unshift(u('text', '['))
  }

  const tail = contents[contents.length - 1]

  if (tail && tail.type === 'text') {
    tail.value += suffix
  } else {
    contents.push(u('text', suffix))
  }

  return contents
}

;// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/handlers/image-reference.js
/**
 * @typedef {import('mdast').ImageReference} ImageReference
 * @typedef {import('hast').Properties} Properties
 * @typedef {import('../index.js').Handler} Handler
 */




/**
 * @type {Handler}
 * @param {ImageReference} node
 */
function imageReference(h, node) {
  const def = h.definition(node.identifier)

  if (!def) {
    return revert(h, node)
  }

  /** @type {Properties} */
  const props = {src: mdurl_encode(def.url || ''), alt: node.alt}

  if (def.title !== null && def.title !== undefined) {
    props.title = def.title
  }

  return h(node, 'img', props)
}

;// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/handlers/image.js
/**
 * @typedef {import('mdast').Image} Image
 * @typedef {import('hast').Properties} Properties
 * @typedef {import('../index.js').Handler} Handler
 */



/**
 * @type {Handler}
 * @param {Image} node
 */
function image_image(h, node) {
  /** @type {Properties} */
  const props = {src: mdurl_encode(node.url), alt: node.alt}

  if (node.title !== null && node.title !== undefined) {
    props.title = node.title
  }

  return h(node, 'img', props)
}

;// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/handlers/inline-code.js
/**
 * @typedef {import('mdast').InlineCode} InlineCode
 * @typedef {import('../index.js').Handler} Handler
 */



/**
 * @type {Handler}
 * @param {InlineCode} node
 */
function inlineCode(h, node) {
  return h(node, 'code', [u('text', node.value.replace(/\r?\n|\r/g, ' '))])
}

;// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/handlers/link-reference.js
/**
 * @typedef {import('mdast').LinkReference} LinkReference
 * @typedef {import('hast').Properties} Properties
 * @typedef {import('../index.js').Handler} Handler
 */





/**
 * @type {Handler}
 * @param {LinkReference} node
 */
function linkReference(h, node) {
  const def = h.definition(node.identifier)

  if (!def) {
    return revert(h, node)
  }

  /** @type {Properties} */
  const props = {href: mdurl_encode(def.url || '')}

  if (def.title !== null && def.title !== undefined) {
    props.title = def.title
  }

  return h(node, 'a', props, traverse_all(h, node))
}

;// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/handlers/link.js
/**
 * @typedef {import('mdast').Link} Link
 * @typedef {import('hast').Properties} Properties
 * @typedef {import('../index.js').Handler} Handler
 */




/**
 * @type {Handler}
 * @param {Link} node
 */
function link_link(h, node) {
  /** @type {Properties} */
  const props = {href: mdurl_encode(node.url)}

  if (node.title !== null && node.title !== undefined) {
    props.title = node.title
  }

  return h(node, 'a', props, traverse_all(h, node))
}

;// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/handlers/list-item.js
/**
 * @typedef {import('mdast').ListItem} ListItem
 * @typedef {import('mdast').List} List
 * @typedef {import('hast').Properties} Properties
 * @typedef {import('hast').Element} Element
 * @typedef {import('../index.js').Handler} Handler
 * @typedef {import('../index.js').Content} Content
 */




/**
 * @type {Handler}
 * @param {ListItem} node
 * @param {List} parent
 */
function listItem(h, node, parent) {
  const result = traverse_all(h, node)
  const loose = parent ? listLoose(parent) : listItemLoose(node)
  /** @type {Properties} */
  const props = {}
  /** @type {Array<Content>} */
  const wrapped = []

  if (typeof node.checked === 'boolean') {
    /** @type {Element} */
    let paragraph

    if (
      result[0] &&
      result[0].type === 'element' &&
      result[0].tagName === 'p'
    ) {
      paragraph = result[0]
    } else {
      paragraph = h(null, 'p', [])
      result.unshift(paragraph)
    }

    if (paragraph.children.length > 0) {
      paragraph.children.unshift(u('text', ' '))
    }

    paragraph.children.unshift(
      h(null, 'input', {
        type: 'checkbox',
        checked: node.checked,
        disabled: true
      })
    )

    // According to github-markdown-css, this class hides bullet.
    // See: <https://github.com/sindresorhus/github-markdown-css>.
    props.className = ['task-list-item']
  }

  let index = -1

  while (++index < result.length) {
    const child = result[index]

    // Add eols before nodes, except if this is a loose, first paragraph.
    if (
      loose ||
      index !== 0 ||
      child.type !== 'element' ||
      child.tagName !== 'p'
    ) {
      wrapped.push(u('text', '\n'))
    }

    if (child.type === 'element' && child.tagName === 'p' && !loose) {
      wrapped.push(...child.children)
    } else {
      wrapped.push(child)
    }
  }

  const tail = result[result.length - 1]

  // Add a final eol.
  if (tail && (loose || !('tagName' in tail) || tail.tagName !== 'p')) {
    wrapped.push(u('text', '\n'))
  }

  return h(node, 'li', props, wrapped)
}

/**
 * @param {List} node
 * @return {Boolean}
 */
function listLoose(node) {
  let loose = node.spread
  const children = node.children
  let index = -1

  while (!loose && ++index < children.length) {
    loose = listItemLoose(children[index])
  }

  return Boolean(loose)
}

/**
 * @param {ListItem} node
 * @return {Boolean}
 */
function listItemLoose(node) {
  const spread = node.spread

  return spread === undefined || spread === null
    ? node.children.length > 1
    : spread
}

;// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/handlers/list.js
/**
 * @typedef {import('mdast').List} List
 * @typedef {import('hast').Element} Element
 * @typedef {import('hast').Properties} Properties
 * @typedef {import('../index.js').Handler} Handler
 */




/**
 * @type {Handler}
 * @param {List} node
 * @returns {Element}
 */
function list_list(h, node) {
  /** @type {Properties} */
  const props = {}
  const name = node.ordered ? 'ol' : 'ul'
  const items = traverse_all(h, node)
  let index = -1

  if (typeof node.start === 'number' && node.start !== 1) {
    props.start = node.start
  }

  // Like GitHub, add a class for custom styling.
  while (++index < items.length) {
    const item = items[index]

    if (
      item.type === 'element' &&
      item.tagName === 'li' &&
      item.properties &&
      Array.isArray(item.properties.className) &&
      item.properties.className.includes('task-list-item')
    ) {
      props.className = ['contains-task-list']
      break
    }
  }

  return h(node, name, props, wrap_wrap(items, true))
}

;// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/handlers/paragraph.js
/**
 * @typedef {import('mdast').Paragraph} Paragraph
 * @typedef {import('../index.js').Handler} Handler
 */



/**
 * @type {Handler}
 * @param {Paragraph} node
 */
function paragraph(h, node) {
  return h(node, 'p', traverse_all(h, node))
}

;// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/handlers/root.js
/**
 * @typedef {import('mdast').Root} Root
 * @typedef {import('../index.js').Handler} Handler
 */





/**
 * @type {Handler}
 * @param {Root} node
 */
function root(h, node) {
  // @ts-expect-error `root`s are also fine.
  return h.augment(node, u('root', wrap_wrap(traverse_all(h, node))))
}

;// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/handlers/strong.js
/**
 * @typedef {import('mdast').Strong} Strong
 * @typedef {import('../index.js').Handler} Handler
 */



/**
 * @type {Handler}
 * @param {Strong} node
 */
function strong(h, node) {
  return h(node, 'strong', traverse_all(h, node))
}

;// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/handlers/table.js
/**
 * @typedef {import('mdast').Table} Table
 * @typedef {import('mdast').TableCell} TableCell
 * @typedef {import('hast').Element} Element
 * @typedef {import('../index.js').Handler} Handler
 * @typedef {import('../index.js').Content} Content
 */





/**
 * @type {Handler}
 * @param {Table} node
 */
function table(h, node) {
  const rows = node.children
  let index = -1
  const align = node.align || []
  /** @type {Array<Element>} */
  const result = []

  while (++index < rows.length) {
    const row = rows[index].children
    const name = index === 0 ? 'th' : 'td'
    /** @type {Array<Content>} */
    const out = []
    let cellIndex = -1
    const length = node.align ? align.length : row.length

    while (++cellIndex < length) {
      const cell = row[cellIndex]
      out.push(
        h(cell, name, {align: align[cellIndex]}, cell ? traverse_all(h, cell) : [])
      )
    }

    result[index] = h(rows[index], 'tr', wrap_wrap(out, true))
  }

  return h(
    node,
    'table',
    wrap_wrap(
      [h(result[0].position, 'thead', wrap_wrap([result[0]], true))].concat(
        result[1]
          ? h(
              {
                start: pointStart(result[1]),
                end: pointEnd(result[result.length - 1])
              },
              'tbody',
              wrap_wrap(result.slice(1), true)
            )
          : []
      ),
      true
    )
  )
}

;// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/handlers/text.js
/**
 * @typedef {import('mdast').Text} Text
 * @typedef {import('../index.js').Handler} Handler
 */



/**
 * @type {Handler}
 * @param {Text} node
 */
function handlers_text_text(h, node) {
  return h.augment(
    node,
    u('text', String(node.value).replace(/[ \t]*(\r?\n|\r)[ \t]*/g, '$1'))
  )
}

;// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js
/**
 * @typedef {import('mdast').ThematicBreak} ThematicBreak
 * @typedef {import('hast').Element} Element
 * @typedef {import('../index.js').Handler} Handler
 */

/**
 * @type {Handler}
 * @param {ThematicBreak} [node]
 * @returns {Element}
 */
function thematic_break_thematicBreak(h, node) {
  return h(node, 'hr')
}

;// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/handlers/index.js























const handlers = {
  blockquote: blockquote,
  break: hardBreak,
  code: code,
  delete: strikethrough,
  emphasis: emphasis,
  footnoteReference: footnoteReference,
  footnote: footnote,
  heading: heading,
  html: html,
  imageReference: imageReference,
  image: image_image,
  inlineCode: inlineCode,
  linkReference: linkReference,
  link: link_link,
  listItem: listItem,
  list: list_list,
  paragraph: paragraph,
  root: root,
  strong: strong,
  table: table,
  text: handlers_text_text,
  thematicBreak: thematic_break_thematicBreak,
  toml: ignore,
  yaml: ignore,
  definition: ignore,
  footnoteDefinition: ignore
}

// Return nothing for nodes that are ignored.
function ignore() {
  return null
}

;// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/index.js
/**
 * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode
 * @typedef {import('hast').Root|import('hast').Parent['children'][number]} HastNode
 * @typedef {import('mdast').Parent} Parent
 * @typedef {import('mdast').Definition} Definition
 * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition
 * @typedef {import('hast').Properties} Properties
 * @typedef {import('hast').Text} Text
 * @typedef {import('hast').Comment} Comment
 * @typedef {import('hast').Element} Element
 * @typedef {import('hast').Root} Root
 * @typedef {import('hast').ElementContent} Content
 * @typedef {import('unist-util-position').PositionLike} PositionLike
 *
 * @typedef EmbeddedHastFields
 * @property {string} [hName] Defines the tag name of an element
 * @property {Properties} [hProperties] Defines the properties of an element
 * @property {Array<Content>} [hChildren] Defines the (hast) children of an element
 *
 * @typedef {Record<string, unknown> & EmbeddedHastFields} Data unist data with embedded hast fields
 *
 * @typedef {MdastNode & {data?: Data}} NodeWithData unist node with embedded hast data
 *
 * @callback Handler
 * @param {H} h Handle context
 * @param {any} node mdast node to handle
 * @param {Parent|null} parent Parent of `node`
 * @returns {Content|Array<Content>|null|undefined} hast node
 *
 * @callback HFunctionProps
 * @param {MdastNode|PositionLike|null|undefined} node mdast node or unist position
 * @param {string} tagName HTML tag name
 * @param {Properties} props Properties
 * @param {Array<Content>?} [children] hast content
 * @returns {Element}
 *
 * @callback HFunctionNoProps
 * @param {MdastNode|PositionLike|null|undefined} node mdast node or unist position
 * @param {string} tagName HTML tag name
 * @param {Array<Content>?} [children] hast content
 * @returns {Element}
 *
 * @typedef HFields
 * @property {boolean} dangerous Whether HTML is allowed
 * @property {string} clobberPrefix Prefix to use to prevent DOM clobbering
 * @property {string} footnoteLabel Label to use to introduce the footnote section
 * @property {string} footnoteBackLabel Label to use to go back to a footnote call from the footnote section
 * @property {(identifier: string) => Definition|null} definition Definition cache
 * @property {Record<string, FootnoteDefinition>} footnoteById Footnote cache
 * @property {Array<string>} footnoteOrder Order in which footnotes occur
 * @property {Record<string, number>} footnoteCounts Counts the same footnote was used
 * @property {Handlers} handlers Applied handlers
 * @property {Handler} unknownHandler Handler for any none not in `passThrough` or otherwise handled
 * @property {(left: NodeWithData|PositionLike|null|undefined, right: Content) => Content} augment Like `h` but lower-level and usable on non-elements.
 * @property {Array<string>} passThrough List of node types to pass through untouched (except for their children).
 *
 * @typedef Options
 * @property {boolean} [allowDangerousHtml=false]
 *   Whether to allow `html` nodes and inject them as `raw` HTML
 * @property {string} [clobberPrefix='user-content-']
 *   Prefix to use before the `id` attribute to prevent it from *clobbering*.
 *   attributes.
 *   DOM clobbering is this:
 *
 *   ```html
 *   <p id=x></p>
 *   <script>alert(x)</script>
 *   ```
 *
 *   Elements by their ID are made available in browsers on the `window` object.
 *   Using a prefix prevents this from being a problem.
 * @property {string} [footnoteLabel='Footnotes']
 *   Label to use for the footnotes section.
 *   Affects screen reader users.
 *   Change it if you’re authoring in a different language.
 * @property {string} [footnoteBackLabel='Back to content']
 *   Label to use from backreferences back to their footnote call.
 *   Affects screen reader users.
 *   Change it if you’re authoring in a different language.
 * @property {Handlers} [handlers]
 *   Object mapping mdast nodes to functions handling them
 * @property {Array<string>} [passThrough]
 *   List of custom mdast node types to pass through (keep) in hast
 * @property {Handler} [unknownHandler]
 *   Handler for all unknown nodes.
 *
 * @typedef {Record<string, Handler>} Handlers
 *   Map of node types to handlers
 * @typedef {HFunctionProps & HFunctionNoProps & HFields} H
 *   Handle context
 */










const mdast_util_to_hast_lib_own = {}.hasOwnProperty

/**
 * Factory to transform.
 * @param {MdastNode} tree mdast node
 * @param {Options} [options] Configuration
 * @returns {H} `h` function
 */
function factory(tree, options) {
  const settings = options || {}
  const dangerous = settings.allowDangerousHtml || false
  /** @type {Record<string, FootnoteDefinition>} */
  const footnoteById = {}

  h.dangerous = dangerous
  h.clobberPrefix =
    settings.clobberPrefix === undefined || settings.clobberPrefix === null
      ? 'user-content-'
      : settings.clobberPrefix
  h.footnoteLabel = settings.footnoteLabel || 'Footnotes'
  h.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'
  h.definition = definitions(tree)
  h.footnoteById = footnoteById
  /** @type {Array<string>} */
  h.footnoteOrder = []
  /** @type {Record<string, number>} */
  h.footnoteCounts = {}
  h.augment = augment
  h.handlers = {...handlers, ...settings.handlers}
  h.unknownHandler = settings.unknownHandler
  h.passThrough = settings.passThrough

  visit(tree, 'footnoteDefinition', (definition) => {
    const id = String(definition.identifier).toUpperCase()

    // Mimick CM behavior of link definitions.
    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.
    if (!mdast_util_to_hast_lib_own.call(footnoteById, id)) {
      footnoteById[id] = definition
    }
  })

  // @ts-expect-error Hush, it’s fine!
  return h

  /**
   * Finalise the created `right`, a hast node, from `left`, an mdast node.
   * @param {(NodeWithData|PositionLike)?} left
   * @param {Content} right
   * @returns {Content}
   */
  function augment(left, right) {
    // Handle `data.hName`, `data.hProperties, `data.hChildren`.
    if (left && 'data' in left && left.data) {
      /** @type {Data} */
      const data = left.data

      if (data.hName) {
        if (right.type !== 'element') {
          right = {
            type: 'element',
            tagName: '',
            properties: {},
            children: []
          }
        }

        right.tagName = data.hName
      }

      if (right.type === 'element' && data.hProperties) {
        right.properties = {...right.properties, ...data.hProperties}
      }

      if ('children' in right && right.children && data.hChildren) {
        right.children = data.hChildren
      }
    }

    if (left) {
      const ctx = 'type' in left ? left : {position: left}

      if (!generated(ctx)) {
        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}
      }
    }

    return right
  }

  /**
   * Create an element for `node`.
   *
   * @type {HFunctionProps}
   */
  function h(node, tagName, props, children) {
    if (Array.isArray(props)) {
      children = props
      props = {}
    }

    // @ts-expect-error augmenting an element yields an element.
    return augment(node, {
      type: 'element',
      tagName,
      properties: props || {},
      children: children || []
    })
  }
}

/**
 * Transform `tree` (an mdast node) to a hast node.
 *
 * @param {MdastNode} tree mdast node
 * @param {Options} [options] Configuration
 * @returns {HastNode|null|undefined} hast node
 */
function toHast(tree, options) {
  const h = factory(tree, options)
  const node = traverse_one(h, tree, null)
  const foot = footer(h)

  if (foot) {
    // @ts-expect-error If there’s a footer, there were definitions, meaning block
    // content.
    // So assume `node` is a parent node.
    node.children.push(u('text', '\n'), foot)
  }

  return Array.isArray(node) ? {type: 'root', children: node} : node
}



;// CONCATENATED MODULE: ./node_modules/remark-rehype/lib/index.js
/**
 * @typedef {import('hast').Root} HastRoot
 * @typedef {import('mdast').Root} MdastRoot
 * @typedef {import('mdast-util-to-hast').Options} Options
 * @typedef {import('unified').Processor<any, any, any, any>} Processor
 *
 * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree
 */



// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(

/**
 * Plugin that turns markdown into HTML to support rehype.
 *
 * *   If a destination processor is given, that processor runs with a new HTML
 *     (hast) tree (bridge-mode).
 *     As the given processor runs with a hast tree, and rehype plugins support
 *     hast, that means rehype plugins can be used with the given processor.
 *     The hast tree is discarded in the end.
 *     It’s highly unlikely that you want to do this.
 * *   The common case is to not pass a destination processor, in which case the
 *     current processor continues running with a new HTML (hast) tree
 *     (mutate-mode).
 *     As the current processor continues with a hast tree, and rehype plugins
 *     support hast, that means rehype plugins can be used after
 *     `remark-rehype`.
 *     It’s likely that this is what you want to do.
 *
 * @param destination
 *   Optional unified processor.
 * @param options
 *   Options passed to `mdast-util-to-hast`.
 */
const remarkRehype =
  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */
  (
    function (destination, options) {
      return destination && 'run' in destination
        ? bridge(destination, options)
        : mutate(destination || options)
    }
  )

/* harmony default export */ var lib = (remarkRehype);

/**
 * Bridge-mode.
 * Runs the destination with the new hast tree.
 *
 * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}
 */
function bridge(destination, options) {
  return (node, file, next) => {
    destination.run(toHast(node, options), file, (error) => {
      next(error)
    })
  }
}

/**
 * Mutate-mode.
 * Further plugins run on the hast tree.
 *
 * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}
 */
function mutate(options) {
  // @ts-expect-error: assume a corresponding node is returned by `toHast`.
  return (node) => toHast(node, options)
}

;// CONCATENATED MODULE: ./node_modules/hast-util-is-element/index.js
/**
 * @typedef {import('unist').Node} Node
 * @typedef {import('unist').Parent} Parent
 * @typedef {import('hast').Element} Element
 *
 * @typedef {string} TagName
 * @typedef {null|undefined|TagName|TestFunctionAnything|Array.<TagName|TestFunctionAnything>} Test
 */

/**
 * @template {Element} T
 * @typedef {null|undefined|T['tagName']|TestFunctionPredicate<T>|Array.<T['tagName']|TestFunctionPredicate<T>>} PredicateTest
 */

/**
 * Check if an element passes a test
 *
 * @callback TestFunctionAnything
 * @param {Element} element
 * @param {number|null|undefined} [index]
 * @param {Parent|null|undefined} [parent]
 * @returns {boolean|void}
 */

/**
 * Check if an element passes a certain node test
 *
 * @template {Element} X
 * @callback TestFunctionPredicate
 * @param {Element} element
 * @param {number|null|undefined} [index]
 * @param {Parent|null|undefined} [parent]
 * @returns {element is X}
 */

/**
 * Check if a node is an element and passes a certain node test
 *
 * @callback AssertAnything
 * @param {unknown} [node]
 * @param {number|null|undefined} [index]
 * @param {Parent|null|undefined} [parent]
 * @returns {boolean}
 */

/**
 * Check if a node is an element and passes a certain node test
 *
 * @template {Element} Y
 * @callback AssertPredicate
 * @param {unknown} [node]
 * @param {number|null|undefined} [index]
 * @param {Parent|null|undefined} [parent]
 * @returns {node is Y}
 */

// Check if `node` is an `element` and whether it passes the given test.
const isElement =
  /**
   * Check if a node is an element and passes a test.
   * When a `parent` node is known the `index` of node should also be given.
   *
   * @type {(
   *   (() => false) &
   *   (<T extends Element = Element>(node: unknown, test?: PredicateTest<T>, index?: number, parent?: Parent, context?: unknown) => node is T) &
   *   ((node: unknown, test: Test, index?: number, parent?: Parent, context?: unknown) => boolean)
   * )}
   */
  (
    /**
     * Check if a node passes a test.
     * When a `parent` node is known the `index` of node should also be given.
     *
     * @param {unknown} [node] Node to check
     * @param {Test} [test] When nullish, checks if `node` is a `Node`.
     * When `string`, works like passing `function (node) {return node.type === test}`.
     * When `function` checks if function passed the node is true.
     * When `array`, checks any one of the subtests pass.
     * @param {number} [index] Position of `node` in `parent`
     * @param {Parent} [parent] Parent of `node`
     * @param {unknown} [context] Context object to invoke `test` with
     * @returns {boolean} Whether test passed and `node` is an `Element` (object with `type` set to `element` and `tagName` set to a non-empty string).
     */
    // eslint-disable-next-line max-params
    function (node, test, index, parent, context) {
      const check = convertElement(test)

      if (
        index !== undefined &&
        index !== null &&
        (typeof index !== 'number' ||
          index < 0 ||
          index === Number.POSITIVE_INFINITY)
      ) {
        throw new Error('Expected positive finite index for child node')
      }

      if (
        parent !== undefined &&
        parent !== null &&
        (!parent.type || !parent.children)
      ) {
        throw new Error('Expected parent node')
      }

      // @ts-expect-error Looks like a node.
      if (!node || !node.type || typeof node.type !== 'string') {
        return false
      }

      if (
        (parent === undefined || parent === null) !==
        (index === undefined || index === null)
      ) {
        throw new Error('Expected both parent and index')
      }

      return check.call(context, node, index, parent)
    }
  )

const convertElement =
  /**
   * @type {(
   *   (<T extends Element>(test: T['tagName']|TestFunctionPredicate<T>) => AssertPredicate<T>) &
   *   ((test?: Test) => AssertAnything)
   * )}
   */
  (
    /**
     * Generate an assertion from a check.
     * @param {Test} [test]
     * When nullish, checks if `node` is a `Node`.
     * When `string`, works like passing `function (node) {return node.type === test}`.
     * When `function` checks if function passed the node is true.
     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.
     * When `array`, checks any one of the subtests pass.
     * @returns {AssertAnything}
     */
    function (test) {
      if (test === undefined || test === null) {
        return hast_util_is_element_element
      }

      if (typeof test === 'string') {
        return tagNameFactory(test)
      }

      if (typeof test === 'object') {
        return hast_util_is_element_anyFactory(test)
      }

      if (typeof test === 'function') {
        return hast_util_is_element_castFactory(test)
      }

      throw new Error('Expected function, string, or array as test')
    }
  )

/**
 * @param {Array.<TagName|TestFunctionAnything>} tests
 * @returns {AssertAnything}
 */
function hast_util_is_element_anyFactory(tests) {
  /** @type {Array.<AssertAnything>} */
  const checks = []
  let index = -1

  while (++index < tests.length) {
    checks[index] = convertElement(tests[index])
  }

  return hast_util_is_element_castFactory(any)

  /**
   * @this {unknown}
   * @param {unknown[]} parameters
   * @returns {boolean}
   */
  function any(...parameters) {
    let index = -1

    while (++index < checks.length) {
      if (checks[index].call(this, ...parameters)) {
        return true
      }
    }

    return false
  }
}

/**
 * Utility to convert a string into a function which checks a given node’s tag
 * name for said string.
 *
 * @param {TagName} check
 * @returns {AssertAnything}
 */
function tagNameFactory(check) {
  return tagName

  /**
   * @param {unknown} node
   * @returns {boolean}
   */
  function tagName(node) {
    return hast_util_is_element_element(node) && node.tagName === check
  }
}

/**
 * @param {TestFunctionAnything} check
 * @returns {AssertAnything}
 */
function hast_util_is_element_castFactory(check) {
  return assertion

  /**
   * @this {unknown}
   * @param {unknown} node
   * @param {Array.<unknown>} parameters
   * @returns {boolean}
   */
  function assertion(node, ...parameters) {
    // @ts-expect-error: fine.
    return hast_util_is_element_element(node) && Boolean(check.call(this, node, ...parameters))
  }
}

/**
 * Utility to return true if this is an element.
 * @param {unknown} node
 * @returns {node is Element}
 */
function hast_util_is_element_element(node) {
  return Boolean(
    node &&
      typeof node === 'object' &&
      // @ts-expect-error Looks like a node.
      node.type === 'element' &&
      // @ts-expect-error Looks like an element.
      typeof node.tagName === 'string'
  )
}

;// CONCATENATED MODULE: ./node_modules/hast-util-embedded/index.js
/**
 * @typedef {import('hast').Element & {tagName: 'audio'|'canvas'|'embed'|'iframe'|'img'|'math'|'object'|'picture'|'svg'|'video'}} Embedded
 * @typedef {import('hast-util-is-element').AssertPredicate<Embedded>} AssertEmbedded
 */



/**
 * Check if a node is an embedded element.
 * @type {AssertEmbedded}
 */
// @ts-ignore Sure, the assertion matches.
const embedded = convertElement([
  'audio',
  'canvas',
  'embed',
  'iframe',
  'img',
  'math',
  'object',
  'picture',
  'svg',
  'video'
])

;// CONCATENATED MODULE: ./node_modules/hast-util-whitespace/index.js
/**
 * @param {unknown} thing
 * @returns {boolean}
 */
function whitespace(thing) {
  /** @type {string} */
  var value =
    // @ts-ignore looks like a node.
    thing && typeof thing === 'object' && thing.type === 'text'
      ? // @ts-ignore looks like a text.
        thing.value || ''
      : thing

  // HTML whitespace expression.
  // See <https://html.spec.whatwg.org/#space-character>.
  return typeof value === 'string' && value.replace(/[ \t\n\f\r]/g, '') === ''
}

;// CONCATENATED MODULE: ./node_modules/rehype-minify-whitespace/block.js
// See: <https://html.spec.whatwg.org/#the-css-user-agent-style-sheet-and-presentational-hints>
const blocks = [
  'address', // Flow content.
  'article', // Sections and headings.
  'aside', // Sections and headings.
  'blockquote', // Flow content.
  'body', // Page.
  'br', // Contribute whitespace intrinsically.
  'caption', // Similar to block.
  'center', // Flow content, legacy.
  'col', // Similar to block.
  'colgroup', // Similar to block.
  'dd', // Lists.
  'dialog', // Flow content.
  'dir', // Lists, legacy.
  'div', // Flow content.
  'dl', // Lists.
  'dt', // Lists.
  'figcaption', // Flow content.
  'figure', // Flow content.
  'footer', // Flow content.
  'form', // Flow content.
  'h1', // Sections and headings.
  'h2', // Sections and headings.
  'h3', // Sections and headings.
  'h4', // Sections and headings.
  'h5', // Sections and headings.
  'h6', // Sections and headings.
  'head', // Page.
  'header', // Flow content.
  'hgroup', // Sections and headings.
  'hr', // Flow content.
  'html', // Page.
  'legend', // Flow content.
  'li', // Block-like.
  'li', // Similar to block.
  'listing', // Flow content, legacy
  'main', // Flow content.
  'menu', // Lists.
  'nav', // Sections and headings.
  'ol', // Lists.
  'optgroup', // Similar to block.
  'option', // Similar to block.
  'p', // Flow content.
  'plaintext', // Flow content, legacy
  'pre', // Flow content.
  'section', // Sections and headings.
  'summary', // Similar to block.
  'table', // Similar to block.
  'tbody', // Similar to block.
  'td', // Block-like.
  'td', // Similar to block.
  'tfoot', // Similar to block.
  'th', // Block-like.
  'th', // Similar to block.
  'thead', // Similar to block.
  'tr', // Similar to block.
  'ul', // Lists.
  'wbr', // Contribute whitespace intrinsically.
  'xmp' // Flow content, legacy
]

;// CONCATENATED MODULE: ./node_modules/rehype-minify-whitespace/content.js
const rehype_minify_whitespace_content_content = [
  // Form.
  'button',
  'input',
  'select',
  'textarea'
]

;// CONCATENATED MODULE: ./node_modules/rehype-minify-whitespace/skippable.js
const skippable = [
  'area',
  'base',
  'basefont',
  'dialog',
  'datalist',
  'head',
  'link',
  'meta',
  'noembed',
  'noframes',
  'param',
  'rp',
  'script',
  'source',
  'style',
  'template',
  'track',
  'title'
]

;// CONCATENATED MODULE: ./node_modules/rehype-minify-whitespace/index.js
/**
 * rehype plugin to minify whitespace between elements.
 *
 * ## What is this?
 *
 * This package is a plugin that can minify the whitespace between elements.
 *
 * ## When should I use this?
 *
 * You can use this plugin when you want to improve the size of HTML documents.
 *
 * ## API
 *
 * ### `unified().use(rehypeMinifyWhitespace[, options])`
 *
 * Minify whitespace.
 *
 * ##### `options`
 *
 * Configuration (optional).
 *
 * ##### `options.newlines`
 *
 * Whether to collapse runs of whitespace that include line endings to one
 * line ending (`boolean`, default: `false`).
 * The default is to collapse everything to one space.
 *
 * @example
 *   <h1>Heading</h1>
 *   <p><strong>This</strong> and <em>that</em></p>
 */

/**
 * @typedef {import('hast').Root} Root
 * @typedef {import('hast').Element} Element
 * @typedef {import('hast').Text} Text
 * @typedef {Root|Root['children'][number]} Node
 *
 * @typedef Options
 * @property {boolean} [newlines=false]
 *   If `newlines: true`, collapses whitespace containing newlines to `'\n'`
 *   instead of `' '`.
 *   The default is to collapse to a single space.
 *
 * @typedef {'pre'|'nowrap'|'pre-wrap'|'normal'} Whitespace
 *
 * @typedef Context
 * @property {ReturnType<collapseFactory>} collapse
 * @property {Whitespace} whitespace
 * @property {boolean} [before]
 * @property {boolean} [after]
 *
 * @typedef Result
 * @property {boolean} remove
 * @property {boolean} ignore
 * @property {boolean} stripAtStart
 */









const ignorableNode = convert(['doctype', 'comment'])

/**
 * Minify whitespace.
 *
 * @type {import('unified').Plugin<[Options?]|Array<void>, Root>}
 */
function rehypeMinifyWhitespace(options = {}) {
  const collapse = collapseFactory(
    options.newlines ? replaceNewlines : replaceWhitespace
  )

  return (tree) => {
    minify(tree, {collapse, whitespace: 'normal'})
  }
}

/**
 * @param {Node} node
 * @param {Context} context
 * @returns {Result}
 */
function minify(node, context) {
  if ('children' in node) {
    const settings = Object.assign({}, context)

    if (node.type === 'root' || blocklike(node)) {
      settings.before = true
      settings.after = true
    }

    settings.whitespace = inferWhiteSpace(node, context)

    return rehype_minify_whitespace_all(node, settings)
  }

  if (node.type === 'text') {
    if (context.whitespace === 'normal') {
      return minifyText(node, context)
    }

    // Naïve collapse, but no trimming:
    if (context.whitespace === 'nowrap') {
      node.value = context.collapse(node.value)
    }

    // The `pre-wrap` or `pre` whitespace settings are neither collapsed nor
    // trimmed.
  }

  return {remove: false, ignore: ignorableNode(node), stripAtStart: false}
}

/**
 * @param {Text} node
 * @param {Context} context
 * @returns {Result}
 */
function minifyText(node, context) {
  const value = context.collapse(node.value)
  const result = {remove: false, ignore: false, stripAtStart: false}
  let start = 0
  let end = value.length

  if (context.before && removable(value.charAt(0))) {
    start++
  }

  if (start !== end && removable(value.charAt(end - 1))) {
    if (context.after) {
      end--
    } else {
      result.stripAtStart = true
    }
  }

  if (start === end) {
    result.remove = true
  } else {
    node.value = value.slice(start, end)
  }

  return result
}

/**
 * @param {Root|Element} parent
 * @param {Context} context
 * @returns {Result}
 */
function rehype_minify_whitespace_all(parent, context) {
  let before = context.before
  const after = context.after
  const children = parent.children
  let length = children.length
  let index = -1

  while (++index < length) {
    const result = minify(
      children[index],
      Object.assign({}, context, {
        before,
        after: collapsableAfter(children, index, after)
      })
    )

    if (result.remove) {
      children.splice(index, 1)
      index--
      length--
    } else if (!result.ignore) {
      before = result.stripAtStart
    }

    // If this element, such as a `<select>` or `<img>`, contributes content
    // somehow, allow whitespace again.
    if (rehype_minify_whitespace_content(children[index])) {
      before = false
    }
  }

  return {remove: false, ignore: false, stripAtStart: Boolean(before || after)}
}

/**
 * @param {Array<Node>} nodes
 * @param {number} index
 * @param {boolean|undefined} [after]
 * @returns {boolean|undefined}
 */
function collapsableAfter(nodes, index, after) {
  while (++index < nodes.length) {
    const node = nodes[index]
    let result = inferBoundary(node)

    if (result === undefined && 'children' in node && !rehype_minify_whitespace_skippable(node)) {
      result = collapsableAfter(node.children, -1)
    }

    if (typeof result === 'boolean') {
      return result
    }
  }

  return after
}

/**
 * Infer two types of boundaries:
 *
 * 1. `true` — boundary for which whitespace around it does not contribute
 *    anything
 * 2. `false` — boundary for which whitespace around it *does* contribute
 *
 * No result (`undefined`) is returned if it is unknown.
 *
 * @param {Node} node
 * @returns {boolean|undefined}
 */
function inferBoundary(node) {
  if (node.type === 'element') {
    if (rehype_minify_whitespace_content(node)) {
      return false
    }

    if (blocklike(node)) {
      return true
    }

    // Unknown: either depends on siblings if embedded or metadata, or on
    // children.
  } else if (node.type === 'text') {
    if (!whitespace(node)) {
      return false
    }
  } else if (!ignorableNode(node)) {
    return false
  }
}

/**
 * Infer whether a node is skippable.
 *
 * @param {Node} node
 * @returns {boolean}
 */
function rehype_minify_whitespace_content(node) {
  return embedded(node) || isElement(node, rehype_minify_whitespace_content_content)
}

/**
 * See: <https://html.spec.whatwg.org/#the-css-user-agent-style-sheet-and-presentational-hints>
 *
 * @param {Element} node
 * @returns {boolean}
 */
function blocklike(node) {
  return isElement(node, blocks)
}

/**
 * @param {Element|Root} node
 * @returns {boolean}
 */
function rehype_minify_whitespace_skippable(node) {
  return (
    Boolean(
      'properties' in node && node.properties && node.properties.hidden
    ) ||
    ignorableNode(node) ||
    isElement(node, skippable)
  )
}

/**
 * @param {string} character
 * @returns {boolean}
 */
function removable(character) {
  return character === ' ' || character === '\n'
}

/**
 * @param {string} value
 * @returns {string}
 */
function replaceNewlines(value) {
  const match = /\r?\n|\r/.exec(value)
  return match ? match[0] : ' '
}

/**
 * @returns {string}
 */
function replaceWhitespace() {
  return ' '
}

/**
 * @param {(value: string) => string} replace
 */
function collapseFactory(replace) {
  return collapse

  /**
   * @param {string} value
   * @returns {string}
   */
  function collapse(value) {
    return String(value).replace(/[\t\n\v\f\r ]+/g, replace)
  }
}

/**
 * We don’t need to support void elements here (so `nobr wbr` -> `normal` is
 * ignored).
 *
 * @param {Root|Element} node
 * @param {Context} context
 * @returns {Whitespace}
 */
function inferWhiteSpace(node, context) {
  if ('tagName' in node && node.properties) {
    switch (node.tagName) {
      // Whitespace in script/style, while not displayed by CSS as significant,
      // could have some meaning in JS/CSS, so we can’t touch them.
      case 'listing':
      case 'plaintext':
      case 'script':
      case 'style':
      case 'xmp':
        return 'pre'
      case 'nobr':
        return 'nowrap'
      case 'pre':
        return node.properties.wrap ? 'pre-wrap' : 'pre'
      case 'td':
      case 'th':
        return node.properties.noWrap ? 'nowrap' : context.whitespace
      case 'textarea':
        return 'pre-wrap'
      default:
    }
  }

  return context.whitespace
}

;// CONCATENATED MODULE: ./node_modules/hast-util-has-property/index.js
var hast_util_has_property_own = {}.hasOwnProperty

/**
 * Check if `node` has a set `name` property.
 *
 * @param {unknown} node
 * @param {string} name
 * @returns {boolean}
 */
function hasProperty(node, name) {
  /** @type {unknown} */
  var value =
    name &&
    node &&
    typeof node === 'object' &&
    // @ts-ignore Looks like a node.
    node.type === 'element' &&
    // @ts-ignore Looks like an element.
    node.properties &&
    // @ts-ignore Looks like an element.
    hast_util_has_property_own.call(node.properties, name) &&
    // @ts-ignore Looks like an element.
    node.properties[name]

  return value !== null && value !== undefined && value !== false
}

;// CONCATENATED MODULE: ./node_modules/hast-util-is-body-ok-link/index.js
/**
 * @fileoverview
 *   Check if a `link` element is “Body OK”.
 * @longdescription
 *   ## Use
 *
 *   ```js
 *   import {h} from 'hastscript'
 *   import {isBodyOkLink} from 'hast-util-is-body-ok-link'
 *
 *   isBodyOkLink(h('link', {itemProp: 'foo'})) //=> true
 *   isBodyOkLink(h('link', {rel: ['stylesheet'], href: 'index.css'})) //=> true
 *   isBodyOkLink(h('link', {rel: ['author'], href: 'index.css'})) //=> false
 *   ```
 *
 *   ## API
 *
 *   ### `isBodyOkLink(node)`
 *
 *   * Return `true` for `link` elements with an `itemProp`
 *   * Return `true` for `link` elements with a `rel` list where one or more
 *     entries are `pingback`, `prefetch`, or `stylesheet`.
 */




const hast_util_is_body_ok_link_list = new Set(['pingback', 'prefetch', 'stylesheet'])

/**
 * @typedef {import('hast').Root} Root
 * @typedef {Root|Root['children'][number]} Node
 */

/**
 * Check if a `link` element is “Body OK”.
 *
 * @param {Node} node
 * @returns {boolean}
 */
function isBodyOkLink(node) {
  if (!isElement(node, 'link')) {
    return false
  }

  if (hasProperty(node, 'itemProp')) {
    return true
  }

  const props = node.properties || {}
  const rel = props.rel || []
  let index = -1

  if (!Array.isArray(rel) || rel.length === 0) {
    return false
  }

  while (++index < rel.length) {
    if (!hast_util_is_body_ok_link_list.has(String(rel[index]))) {
      return false
    }
  }

  return true
}

;// CONCATENATED MODULE: ./node_modules/hast-util-phrasing/index.js





const basic = convertElement([
  'a',
  'abbr',
  // `area` is in fact only phrasing if it is inside a `map` element.
  // However, since `area`s are required to be inside a `map` element, and it’s
  // a rather involved check, it’s ignored here for now.
  'area',
  'b',
  'bdi',
  'bdo',
  'br',
  'button',
  'cite',
  'code',
  'data',
  'datalist',
  'del',
  'dfn',
  'em',
  'i',
  'input',
  'ins',
  'kbd',
  'keygen',
  'label',
  'map',
  'mark',
  'meter',
  'noscript',
  'output',
  'progress',
  'q',
  'ruby',
  's',
  'samp',
  'script',
  'select',
  'small',
  'span',
  'strong',
  'sub',
  'sup',
  'template',
  'textarea',
  'time',
  'u',
  'var',
  'wbr'
])

const meta = convertElement('meta')

/**
 * @param {unknown} node
 * @returns {boolean}
 */
function phrasing(node) {
  return Boolean(
    // @ts-expect-error Looks like a node.
    (node && node.type === 'text') ||
      basic(node) ||
      embedded(node) ||
      // @ts-expect-error Looks like a node.
      isBodyOkLink(node) ||
      (meta(node) && hasProperty(node, 'itemProp'))
  )
}

;// CONCATENATED MODULE: ./node_modules/html-whitespace-sensitive-tag-names/index.js
/**
 * @fileoverview
 *   List of whitespace sensitive HTML tag names
 * @longdescription
 *   ## Use
 *
 *   ```js
 *   import {whitespaceSensitiveTagNames} from 'html-whitespace-sensitive-tag-names'
 *
 *   whitespaceSensitiveTagNames
 *   //=> ['pre', 'script', 'style', 'textarea']
 *   ```
 *
 *   ## API
 *
 *   ### `whitespaceSensitiveTagNames`
 *
 *   List of whitespace sensitive HTML tag names (`string[]`).
 */

const whitespaceSensitiveTagNames = [
  'pre',
  'script',
  'style',
  'textarea'
]

;// CONCATENATED MODULE: ./node_modules/rehype-format/index.js
/**
 * @typedef {import('hast').Root} Root
 * @typedef {Root['children'][number]} Child
 * @typedef {import('hast').Element} Element
 * @typedef {Root|Child} Node
 *
 * @typedef Options
 *   Configuration.
 * @property {number|string} [indent=2]
 *   Indentation per level (`number`, `string`, default: `2`).
 *   When number, uses that amount of spaces.
 *   When `string`, uses that per indentation level.
 * @property {boolean} [indentInitial=true]
 *   Whether to indent the first level (`boolean`, default: `true`).
 *   This is usually the `<html>`, thus not indenting `head` and `body`.
 * @property {Array<string>} [blanks=[]]
 *   List of tag names to join with a blank line (`Array<string>`, default:
 *   `[]`).
 *   These tags, when next to each other, are joined by a blank line (`\n\n`).
 *   For example, when `['head', 'body']` is given, a blank line is added
 *   between these two.
 */









const rehype_format_minify = rehypeMinifyWhitespace({newlines: true})

/**
 * Format whitespace in HTML.
 *
 * @type {import('unified').Plugin<[Options?] | Array<void>, Root>}
 */
function rehypeFormat(options = {}) {
  let indent = options.indent || 2
  let indentInitial = options.indentInitial

  if (typeof indent === 'number') {
    indent = ' '.repeat(indent)
  }

  // Default to indenting the initial level.
  if (indentInitial === null || indentInitial === undefined) {
    indentInitial = true
  }

  return (tree) => {
    /** @type {boolean|undefined} */
    let head

    // @ts-expect-error: fine, it’s a sync transformer.
    rehype_format_minify(tree)

    // eslint-disable-next-line complexity
    visitParents(tree, (node, parents) => {
      let index = -1

      if (!('children' in node)) {
        return
      }

      if (isElement(node, 'head')) {
        head = true
      }

      if (head && isElement(node, 'body')) {
        head = undefined
      }

      if (isElement(node, whitespaceSensitiveTagNames)) {
        return SKIP
      }

      const children = node.children
      let level = parents.length

      // Don’t indent content of whitespace-sensitive nodes / inlines.
      if (children.length === 0 || !padding(node, head)) {
        return
      }

      if (!indentInitial) {
        level--
      }

      /** @type {boolean|undefined} */
      let eol

      // Indent newlines in `text`.
      while (++index < children.length) {
        const child = children[index]

        if (child.type === 'text' || child.type === 'comment') {
          if (child.value.includes('\n')) {
            eol = true
          }

          child.value = child.value.replace(
            / *\n/g,
            '$&' + String(indent).repeat(level)
          )
        }
      }

      /** @type {Array<Child>} */
      const result = []
      /** @type {Child|undefined} */
      let previous

      index = -1

      while (++index < children.length) {
        const child = children[index]

        if (padding(child, head) || (eol && !index)) {
          addBreak(result, level, child)
          eol = true
        }

        previous = child
        result.push(child)
      }

      if (previous && (eol || padding(previous, head))) {
        // Ignore trailing whitespace (if that already existed), as we’ll add
        // properly indented whitespace.
        if (whitespace(previous)) {
          result.pop()
          previous = result[result.length - 1]
        }

        addBreak(result, level - 1)
      }

      node.children = result
    })
  }

  /**
   * @param {Array<Child>} list
   * @param {number} level
   * @param {Child} [next]
   * @returns {void}
   */
  function addBreak(list, level, next) {
    const tail = list[list.length - 1]
    const previous = whitespace(tail) ? list[list.length - 2] : tail
    const replace =
      (blank(previous) && blank(next) ? '\n\n' : '\n') +
      String(indent).repeat(Math.max(level, 0))

    if (tail && tail.type === 'text') {
      tail.value = whitespace(tail) ? replace : tail.value + replace
    } else {
      list.push({type: 'text', value: replace})
    }
  }

  /**
   * @param {Node|undefined} node
   * @returns {boolean}
   */
  function blank(node) {
    return Boolean(
      node &&
        node.type === 'element' &&
        options.blanks &&
        options.blanks.length > 0 &&
        options.blanks.includes(node.tagName)
    )
  }
}

/**
 * @param {Node} node
 * @param {boolean|undefined} head
 * @returns {boolean}
 */
function padding(node, head) {
  return (
    node.type === 'root' ||
    (node.type === 'element'
      ? head || isElement(node, 'script') || embedded(node) || !phrasing(node)
      : false)
  )
}

;// CONCATENATED MODULE: ./node_modules/property-information/lib/util/schema.js
/**
 * @typedef {import('./info.js').Info} Info
 * @typedef {Record<string, Info>} Properties
 * @typedef {Record<string, string>} Normal
 */

class Schema {
  /**
   * @constructor
   * @param {Properties} property
   * @param {Normal} normal
   * @param {string} [space]
   */
  constructor(property, normal, space) {
    this.property = property
    this.normal = normal
    if (space) {
      this.space = space
    }
  }
}

/** @type {Properties} */
Schema.prototype.property = {}
/** @type {Normal} */
Schema.prototype.normal = {}
/** @type {string|null} */
Schema.prototype.space = null

;// CONCATENATED MODULE: ./node_modules/property-information/lib/util/merge.js
/**
 * @typedef {import('./schema.js').Properties} Properties
 * @typedef {import('./schema.js').Normal} Normal
 */



/**
 * @param {Schema[]} definitions
 * @param {string} [space]
 * @returns {Schema}
 */
function merge(definitions, space) {
  /** @type {Properties} */
  const property = {}
  /** @type {Normal} */
  const normal = {}
  let index = -1

  while (++index < definitions.length) {
    Object.assign(property, definitions[index].property)
    Object.assign(normal, definitions[index].normal)
  }

  return new Schema(property, normal, space)
}

;// CONCATENATED MODULE: ./node_modules/property-information/lib/normalize.js
/**
 * @param {string} value
 * @returns {string}
 */
function normalize_normalize(value) {
  return value.toLowerCase()
}

;// CONCATENATED MODULE: ./node_modules/property-information/lib/util/info.js
class Info {
  /**
   * @constructor
   * @param {string} property
   * @param {string} attribute
   */
  constructor(property, attribute) {
    /** @type {string} */
    this.property = property
    /** @type {string} */
    this.attribute = attribute
  }
}

/** @type {string|null} */
Info.prototype.space = null
Info.prototype.boolean = false
Info.prototype.booleanish = false
Info.prototype.overloadedBoolean = false
Info.prototype.number = false
Info.prototype.commaSeparated = false
Info.prototype.spaceSeparated = false
Info.prototype.commaOrSpaceSeparated = false
Info.prototype.mustUseProperty = false
Info.prototype.defined = false

;// CONCATENATED MODULE: ./node_modules/property-information/lib/util/types.js
let powers = 0

const types_boolean = increment()
const booleanish = increment()
const overloadedBoolean = increment()
const number = increment()
const spaceSeparated = increment()
const commaSeparated = increment()
const commaOrSpaceSeparated = increment()

function increment() {
  return 2 ** ++powers
}

;// CONCATENATED MODULE: ./node_modules/property-information/lib/util/defined-info.js



/** @type {Array<keyof types>} */
// @ts-expect-error: hush.
const checks = Object.keys(types_namespaceObject)

class DefinedInfo extends Info {
  /**
   * @constructor
   * @param {string} property
   * @param {string} attribute
   * @param {number|null} [mask]
   * @param {string} [space]
   */
  constructor(property, attribute, mask, space) {
    let index = -1

    super(property, attribute)

    mark(this, 'space', space)

    if (typeof mask === 'number') {
      while (++index < checks.length) {
        const check = checks[index]
        mark(this, checks[index], (mask & types_namespaceObject[check]) === types_namespaceObject[check])
      }
    }
  }
}

DefinedInfo.prototype.defined = true

/**
 * @param {DefinedInfo} values
 * @param {string} key
 * @param {unknown} value
 */
function mark(values, key, value) {
  if (value) {
    // @ts-expect-error: assume `value` matches the expected value of `key`.
    values[key] = value
  }
}

;// CONCATENATED MODULE: ./node_modules/property-information/lib/util/create.js
/**
 * @typedef {import('./schema.js').Properties} Properties
 * @typedef {import('./schema.js').Normal} Normal
 *
 * @typedef {Record<string, string>} Attributes
 *
 * @typedef {Object} Definition
 * @property {Record<string, number|null>} properties
 * @property {(attributes: Attributes, property: string) => string} transform
 * @property {string} [space]
 * @property {Attributes} [attributes]
 * @property {Array<string>} [mustUseProperty]
 */





const create_own = {}.hasOwnProperty

/**
 * @param {Definition} definition
 * @returns {Schema}
 */
function create(definition) {
  /** @type {Properties} */
  const property = {}
  /** @type {Normal} */
  const normal = {}
  /** @type {string} */
  let prop

  for (prop in definition.properties) {
    if (create_own.call(definition.properties, prop)) {
      const value = definition.properties[prop]
      const info = new DefinedInfo(
        prop,
        definition.transform(definition.attributes || {}, prop),
        value,
        definition.space
      )

      if (
        definition.mustUseProperty &&
        definition.mustUseProperty.includes(prop)
      ) {
        info.mustUseProperty = true
      }

      property[prop] = info

      normal[normalize_normalize(prop)] = prop
      normal[normalize_normalize(info.attribute)] = prop
    }
  }

  return new Schema(property, normal, definition.space)
}

;// CONCATENATED MODULE: ./node_modules/property-information/lib/xlink.js


const xlink = create({
  space: 'xlink',
  transform(_, prop) {
    return 'xlink:' + prop.slice(5).toLowerCase()
  },
  properties: {
    xLinkActuate: null,
    xLinkArcRole: null,
    xLinkHref: null,
    xLinkRole: null,
    xLinkShow: null,
    xLinkTitle: null,
    xLinkType: null
  }
})

;// CONCATENATED MODULE: ./node_modules/property-information/lib/xml.js


const xml = create({
  space: 'xml',
  transform(_, prop) {
    return 'xml:' + prop.slice(3).toLowerCase()
  },
  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}
})

;// CONCATENATED MODULE: ./node_modules/property-information/lib/util/case-sensitive-transform.js
/**
 * @param {Record<string, string>} attributes
 * @param {string} attribute
 * @returns {string}
 */
function caseSensitiveTransform(attributes, attribute) {
  return attribute in attributes ? attributes[attribute] : attribute
}

;// CONCATENATED MODULE: ./node_modules/property-information/lib/util/case-insensitive-transform.js


/**
 * @param {Record<string, string>} attributes
 * @param {string} property
 * @returns {string}
 */
function caseInsensitiveTransform(attributes, property) {
  return caseSensitiveTransform(attributes, property.toLowerCase())
}

;// CONCATENATED MODULE: ./node_modules/property-information/lib/xmlns.js



const xmlns = create({
  space: 'xmlns',
  attributes: {xmlnsxlink: 'xmlns:xlink'},
  transform: caseInsensitiveTransform,
  properties: {xmlns: null, xmlnsXLink: null}
})

;// CONCATENATED MODULE: ./node_modules/property-information/lib/aria.js



const aria = create({
  transform(_, prop) {
    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()
  },
  properties: {
    ariaActiveDescendant: null,
    ariaAtomic: booleanish,
    ariaAutoComplete: null,
    ariaBusy: booleanish,
    ariaChecked: booleanish,
    ariaColCount: number,
    ariaColIndex: number,
    ariaColSpan: number,
    ariaControls: spaceSeparated,
    ariaCurrent: null,
    ariaDescribedBy: spaceSeparated,
    ariaDetails: null,
    ariaDisabled: booleanish,
    ariaDropEffect: spaceSeparated,
    ariaErrorMessage: null,
    ariaExpanded: booleanish,
    ariaFlowTo: spaceSeparated,
    ariaGrabbed: booleanish,
    ariaHasPopup: null,
    ariaHidden: booleanish,
    ariaInvalid: null,
    ariaKeyShortcuts: null,
    ariaLabel: null,
    ariaLabelledBy: spaceSeparated,
    ariaLevel: number,
    ariaLive: null,
    ariaModal: booleanish,
    ariaMultiLine: booleanish,
    ariaMultiSelectable: booleanish,
    ariaOrientation: null,
    ariaOwns: spaceSeparated,
    ariaPlaceholder: null,
    ariaPosInSet: number,
    ariaPressed: booleanish,
    ariaReadOnly: booleanish,
    ariaRelevant: null,
    ariaRequired: booleanish,
    ariaRoleDescription: spaceSeparated,
    ariaRowCount: number,
    ariaRowIndex: number,
    ariaRowSpan: number,
    ariaSelected: booleanish,
    ariaSetSize: number,
    ariaSort: null,
    ariaValueMax: number,
    ariaValueMin: number,
    ariaValueNow: number,
    ariaValueText: null,
    role: null
  }
})

;// CONCATENATED MODULE: ./node_modules/property-information/lib/html.js




const html_html = create({
  space: 'html',
  attributes: {
    acceptcharset: 'accept-charset',
    classname: 'class',
    htmlfor: 'for',
    httpequiv: 'http-equiv'
  },
  transform: caseInsensitiveTransform,
  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],
  properties: {
    // Standard Properties.
    abbr: null,
    accept: commaSeparated,
    acceptCharset: spaceSeparated,
    accessKey: spaceSeparated,
    action: null,
    allow: null,
    allowFullScreen: types_boolean,
    allowPaymentRequest: types_boolean,
    allowUserMedia: types_boolean,
    alt: null,
    as: null,
    async: types_boolean,
    autoCapitalize: null,
    autoComplete: spaceSeparated,
    autoFocus: types_boolean,
    autoPlay: types_boolean,
    capture: types_boolean,
    charSet: null,
    checked: types_boolean,
    cite: null,
    className: spaceSeparated,
    cols: number,
    colSpan: null,
    content: null,
    contentEditable: booleanish,
    controls: types_boolean,
    controlsList: spaceSeparated,
    coords: number | commaSeparated,
    crossOrigin: null,
    data: null,
    dateTime: null,
    decoding: null,
    default: types_boolean,
    defer: types_boolean,
    dir: null,
    dirName: null,
    disabled: types_boolean,
    download: overloadedBoolean,
    draggable: booleanish,
    encType: null,
    enterKeyHint: null,
    form: null,
    formAction: null,
    formEncType: null,
    formMethod: null,
    formNoValidate: types_boolean,
    formTarget: null,
    headers: spaceSeparated,
    height: number,
    hidden: types_boolean,
    high: number,
    href: null,
    hrefLang: null,
    htmlFor: spaceSeparated,
    httpEquiv: spaceSeparated,
    id: null,
    imageSizes: null,
    imageSrcSet: null,
    inputMode: null,
    integrity: null,
    is: null,
    isMap: types_boolean,
    itemId: null,
    itemProp: spaceSeparated,
    itemRef: spaceSeparated,
    itemScope: types_boolean,
    itemType: spaceSeparated,
    kind: null,
    label: null,
    lang: null,
    language: null,
    list: null,
    loading: null,
    loop: types_boolean,
    low: number,
    manifest: null,
    max: null,
    maxLength: number,
    media: null,
    method: null,
    min: null,
    minLength: number,
    multiple: types_boolean,
    muted: types_boolean,
    name: null,
    nonce: null,
    noModule: types_boolean,
    noValidate: types_boolean,
    onAbort: null,
    onAfterPrint: null,
    onAuxClick: null,
    onBeforePrint: null,
    onBeforeUnload: null,
    onBlur: null,
    onCancel: null,
    onCanPlay: null,
    onCanPlayThrough: null,
    onChange: null,
    onClick: null,
    onClose: null,
    onContextLost: null,
    onContextMenu: null,
    onContextRestored: null,
    onCopy: null,
    onCueChange: null,
    onCut: null,
    onDblClick: null,
    onDrag: null,
    onDragEnd: null,
    onDragEnter: null,
    onDragExit: null,
    onDragLeave: null,
    onDragOver: null,
    onDragStart: null,
    onDrop: null,
    onDurationChange: null,
    onEmptied: null,
    onEnded: null,
    onError: null,
    onFocus: null,
    onFormData: null,
    onHashChange: null,
    onInput: null,
    onInvalid: null,
    onKeyDown: null,
    onKeyPress: null,
    onKeyUp: null,
    onLanguageChange: null,
    onLoad: null,
    onLoadedData: null,
    onLoadedMetadata: null,
    onLoadEnd: null,
    onLoadStart: null,
    onMessage: null,
    onMessageError: null,
    onMouseDown: null,
    onMouseEnter: null,
    onMouseLeave: null,
    onMouseMove: null,
    onMouseOut: null,
    onMouseOver: null,
    onMouseUp: null,
    onOffline: null,
    onOnline: null,
    onPageHide: null,
    onPageShow: null,
    onPaste: null,
    onPause: null,
    onPlay: null,
    onPlaying: null,
    onPopState: null,
    onProgress: null,
    onRateChange: null,
    onRejectionHandled: null,
    onReset: null,
    onResize: null,
    onScroll: null,
    onSecurityPolicyViolation: null,
    onSeeked: null,
    onSeeking: null,
    onSelect: null,
    onSlotChange: null,
    onStalled: null,
    onStorage: null,
    onSubmit: null,
    onSuspend: null,
    onTimeUpdate: null,
    onToggle: null,
    onUnhandledRejection: null,
    onUnload: null,
    onVolumeChange: null,
    onWaiting: null,
    onWheel: null,
    open: types_boolean,
    optimum: number,
    pattern: null,
    ping: spaceSeparated,
    placeholder: null,
    playsInline: types_boolean,
    poster: null,
    preload: null,
    readOnly: types_boolean,
    referrerPolicy: null,
    rel: spaceSeparated,
    required: types_boolean,
    reversed: types_boolean,
    rows: number,
    rowSpan: number,
    sandbox: spaceSeparated,
    scope: null,
    scoped: types_boolean,
    seamless: types_boolean,
    selected: types_boolean,
    shape: null,
    size: number,
    sizes: null,
    slot: null,
    span: number,
    spellCheck: booleanish,
    src: null,
    srcDoc: null,
    srcLang: null,
    srcSet: null,
    start: number,
    step: null,
    style: null,
    tabIndex: number,
    target: null,
    title: null,
    translate: null,
    type: null,
    typeMustMatch: types_boolean,
    useMap: null,
    value: booleanish,
    width: number,
    wrap: null,

    // Legacy.
    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis
    align: null, // Several. Use CSS `text-align` instead,
    aLink: null, // `<body>`. Use CSS `a:active {color}` instead
    archive: spaceSeparated, // `<object>`. List of URIs to archives
    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`
    background: null, // `<body>`. Use CSS `background-image` instead
    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead
    border: number, // `<table>`. Use CSS `border-width` instead,
    borderColor: null, // `<table>`. Use CSS `border-color` instead,
    bottomMargin: number, // `<body>`
    cellPadding: null, // `<table>`
    cellSpacing: null, // `<table>`
    char: null, // Several table elements. When `align=char`, sets the character to align on
    charOff: null, // Several table elements. When `char`, offsets the alignment
    classId: null, // `<object>`
    clear: null, // `<br>`. Use CSS `clear` instead
    code: null, // `<object>`
    codeBase: null, // `<object>`
    codeType: null, // `<object>`
    color: null, // `<font>` and `<hr>`. Use CSS instead
    compact: types_boolean, // Lists. Use CSS to reduce space between items instead
    declare: types_boolean, // `<object>`
    event: null, // `<script>`
    face: null, // `<font>`. Use CSS instead
    frame: null, // `<table>`
    frameBorder: null, // `<iframe>`. Use CSS `border` instead
    hSpace: number, // `<img>` and `<object>`
    leftMargin: number, // `<body>`
    link: null, // `<body>`. Use CSS `a:link {color: *}` instead
    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`
    lowSrc: null, // `<img>`. Use a `<picture>`
    marginHeight: number, // `<body>`
    marginWidth: number, // `<body>`
    noResize: types_boolean, // `<frame>`
    noHref: types_boolean, // `<area>`. Use no href instead of an explicit `nohref`
    noShade: types_boolean, // `<hr>`. Use background-color and height instead of borders
    noWrap: types_boolean, // `<td>` and `<th>`
    object: null, // `<applet>`
    profile: null, // `<head>`
    prompt: null, // `<isindex>`
    rev: null, // `<link>`
    rightMargin: number, // `<body>`
    rules: null, // `<table>`
    scheme: null, // `<meta>`
    scrolling: booleanish, // `<frame>`. Use overflow in the child context
    standby: null, // `<object>`
    summary: null, // `<table>`
    text: null, // `<body>`. Use CSS `color` instead
    topMargin: number, // `<body>`
    valueType: null, // `<param>`
    version: null, // `<html>`. Use a doctype.
    vAlign: null, // Several. Use CSS `vertical-align` instead
    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead
    vSpace: number, // `<img>` and `<object>`

    // Non-standard Properties.
    allowTransparency: null,
    autoCorrect: null,
    autoSave: null,
    disablePictureInPicture: types_boolean,
    disableRemotePlayback: types_boolean,
    prefix: null,
    property: null,
    results: number,
    security: null,
    unselectable: null
  }
})

;// CONCATENATED MODULE: ./node_modules/property-information/lib/svg.js




const svg = create({
  space: 'svg',
  attributes: {
    accentHeight: 'accent-height',
    alignmentBaseline: 'alignment-baseline',
    arabicForm: 'arabic-form',
    baselineShift: 'baseline-shift',
    capHeight: 'cap-height',
    className: 'class',
    clipPath: 'clip-path',
    clipRule: 'clip-rule',
    colorInterpolation: 'color-interpolation',
    colorInterpolationFilters: 'color-interpolation-filters',
    colorProfile: 'color-profile',
    colorRendering: 'color-rendering',
    crossOrigin: 'crossorigin',
    dataType: 'datatype',
    dominantBaseline: 'dominant-baseline',
    enableBackground: 'enable-background',
    fillOpacity: 'fill-opacity',
    fillRule: 'fill-rule',
    floodColor: 'flood-color',
    floodOpacity: 'flood-opacity',
    fontFamily: 'font-family',
    fontSize: 'font-size',
    fontSizeAdjust: 'font-size-adjust',
    fontStretch: 'font-stretch',
    fontStyle: 'font-style',
    fontVariant: 'font-variant',
    fontWeight: 'font-weight',
    glyphName: 'glyph-name',
    glyphOrientationHorizontal: 'glyph-orientation-horizontal',
    glyphOrientationVertical: 'glyph-orientation-vertical',
    hrefLang: 'hreflang',
    horizAdvX: 'horiz-adv-x',
    horizOriginX: 'horiz-origin-x',
    horizOriginY: 'horiz-origin-y',
    imageRendering: 'image-rendering',
    letterSpacing: 'letter-spacing',
    lightingColor: 'lighting-color',
    markerEnd: 'marker-end',
    markerMid: 'marker-mid',
    markerStart: 'marker-start',
    navDown: 'nav-down',
    navDownLeft: 'nav-down-left',
    navDownRight: 'nav-down-right',
    navLeft: 'nav-left',
    navNext: 'nav-next',
    navPrev: 'nav-prev',
    navRight: 'nav-right',
    navUp: 'nav-up',
    navUpLeft: 'nav-up-left',
    navUpRight: 'nav-up-right',
    onAbort: 'onabort',
    onActivate: 'onactivate',
    onAfterPrint: 'onafterprint',
    onBeforePrint: 'onbeforeprint',
    onBegin: 'onbegin',
    onCancel: 'oncancel',
    onCanPlay: 'oncanplay',
    onCanPlayThrough: 'oncanplaythrough',
    onChange: 'onchange',
    onClick: 'onclick',
    onClose: 'onclose',
    onCopy: 'oncopy',
    onCueChange: 'oncuechange',
    onCut: 'oncut',
    onDblClick: 'ondblclick',
    onDrag: 'ondrag',
    onDragEnd: 'ondragend',
    onDragEnter: 'ondragenter',
    onDragExit: 'ondragexit',
    onDragLeave: 'ondragleave',
    onDragOver: 'ondragover',
    onDragStart: 'ondragstart',
    onDrop: 'ondrop',
    onDurationChange: 'ondurationchange',
    onEmptied: 'onemptied',
    onEnd: 'onend',
    onEnded: 'onended',
    onError: 'onerror',
    onFocus: 'onfocus',
    onFocusIn: 'onfocusin',
    onFocusOut: 'onfocusout',
    onHashChange: 'onhashchange',
    onInput: 'oninput',
    onInvalid: 'oninvalid',
    onKeyDown: 'onkeydown',
    onKeyPress: 'onkeypress',
    onKeyUp: 'onkeyup',
    onLoad: 'onload',
    onLoadedData: 'onloadeddata',
    onLoadedMetadata: 'onloadedmetadata',
    onLoadStart: 'onloadstart',
    onMessage: 'onmessage',
    onMouseDown: 'onmousedown',
    onMouseEnter: 'onmouseenter',
    onMouseLeave: 'onmouseleave',
    onMouseMove: 'onmousemove',
    onMouseOut: 'onmouseout',
    onMouseOver: 'onmouseover',
    onMouseUp: 'onmouseup',
    onMouseWheel: 'onmousewheel',
    onOffline: 'onoffline',
    onOnline: 'ononline',
    onPageHide: 'onpagehide',
    onPageShow: 'onpageshow',
    onPaste: 'onpaste',
    onPause: 'onpause',
    onPlay: 'onplay',
    onPlaying: 'onplaying',
    onPopState: 'onpopstate',
    onProgress: 'onprogress',
    onRateChange: 'onratechange',
    onRepeat: 'onrepeat',
    onReset: 'onreset',
    onResize: 'onresize',
    onScroll: 'onscroll',
    onSeeked: 'onseeked',
    onSeeking: 'onseeking',
    onSelect: 'onselect',
    onShow: 'onshow',
    onStalled: 'onstalled',
    onStorage: 'onstorage',
    onSubmit: 'onsubmit',
    onSuspend: 'onsuspend',
    onTimeUpdate: 'ontimeupdate',
    onToggle: 'ontoggle',
    onUnload: 'onunload',
    onVolumeChange: 'onvolumechange',
    onWaiting: 'onwaiting',
    onZoom: 'onzoom',
    overlinePosition: 'overline-position',
    overlineThickness: 'overline-thickness',
    paintOrder: 'paint-order',
    panose1: 'panose-1',
    pointerEvents: 'pointer-events',
    referrerPolicy: 'referrerpolicy',
    renderingIntent: 'rendering-intent',
    shapeRendering: 'shape-rendering',
    stopColor: 'stop-color',
    stopOpacity: 'stop-opacity',
    strikethroughPosition: 'strikethrough-position',
    strikethroughThickness: 'strikethrough-thickness',
    strokeDashArray: 'stroke-dasharray',
    strokeDashOffset: 'stroke-dashoffset',
    strokeLineCap: 'stroke-linecap',
    strokeLineJoin: 'stroke-linejoin',
    strokeMiterLimit: 'stroke-miterlimit',
    strokeOpacity: 'stroke-opacity',
    strokeWidth: 'stroke-width',
    tabIndex: 'tabindex',
    textAnchor: 'text-anchor',
    textDecoration: 'text-decoration',
    textRendering: 'text-rendering',
    typeOf: 'typeof',
    underlinePosition: 'underline-position',
    underlineThickness: 'underline-thickness',
    unicodeBidi: 'unicode-bidi',
    unicodeRange: 'unicode-range',
    unitsPerEm: 'units-per-em',
    vAlphabetic: 'v-alphabetic',
    vHanging: 'v-hanging',
    vIdeographic: 'v-ideographic',
    vMathematical: 'v-mathematical',
    vectorEffect: 'vector-effect',
    vertAdvY: 'vert-adv-y',
    vertOriginX: 'vert-origin-x',
    vertOriginY: 'vert-origin-y',
    wordSpacing: 'word-spacing',
    writingMode: 'writing-mode',
    xHeight: 'x-height',
    // These were camelcased in Tiny. Now lowercased in SVG 2
    playbackOrder: 'playbackorder',
    timelineBegin: 'timelinebegin'
  },
  transform: caseSensitiveTransform,
  properties: {
    about: commaOrSpaceSeparated,
    accentHeight: number,
    accumulate: null,
    additive: null,
    alignmentBaseline: null,
    alphabetic: number,
    amplitude: number,
    arabicForm: null,
    ascent: number,
    attributeName: null,
    attributeType: null,
    azimuth: number,
    bandwidth: null,
    baselineShift: null,
    baseFrequency: null,
    baseProfile: null,
    bbox: null,
    begin: null,
    bias: number,
    by: null,
    calcMode: null,
    capHeight: number,
    className: spaceSeparated,
    clip: null,
    clipPath: null,
    clipPathUnits: null,
    clipRule: null,
    color: null,
    colorInterpolation: null,
    colorInterpolationFilters: null,
    colorProfile: null,
    colorRendering: null,
    content: null,
    contentScriptType: null,
    contentStyleType: null,
    crossOrigin: null,
    cursor: null,
    cx: null,
    cy: null,
    d: null,
    dataType: null,
    defaultAction: null,
    descent: number,
    diffuseConstant: number,
    direction: null,
    display: null,
    dur: null,
    divisor: number,
    dominantBaseline: null,
    download: types_boolean,
    dx: null,
    dy: null,
    edgeMode: null,
    editable: null,
    elevation: number,
    enableBackground: null,
    end: null,
    event: null,
    exponent: number,
    externalResourcesRequired: null,
    fill: null,
    fillOpacity: number,
    fillRule: null,
    filter: null,
    filterRes: null,
    filterUnits: null,
    floodColor: null,
    floodOpacity: null,
    focusable: null,
    focusHighlight: null,
    fontFamily: null,
    fontSize: null,
    fontSizeAdjust: null,
    fontStretch: null,
    fontStyle: null,
    fontVariant: null,
    fontWeight: null,
    format: null,
    fr: null,
    from: null,
    fx: null,
    fy: null,
    g1: commaSeparated,
    g2: commaSeparated,
    glyphName: commaSeparated,
    glyphOrientationHorizontal: null,
    glyphOrientationVertical: null,
    glyphRef: null,
    gradientTransform: null,
    gradientUnits: null,
    handler: null,
    hanging: number,
    hatchContentUnits: null,
    hatchUnits: null,
    height: null,
    href: null,
    hrefLang: null,
    horizAdvX: number,
    horizOriginX: number,
    horizOriginY: number,
    id: null,
    ideographic: number,
    imageRendering: null,
    initialVisibility: null,
    in: null,
    in2: null,
    intercept: number,
    k: number,
    k1: number,
    k2: number,
    k3: number,
    k4: number,
    kernelMatrix: commaOrSpaceSeparated,
    kernelUnitLength: null,
    keyPoints: null, // SEMI_COLON_SEPARATED
    keySplines: null, // SEMI_COLON_SEPARATED
    keyTimes: null, // SEMI_COLON_SEPARATED
    kerning: null,
    lang: null,
    lengthAdjust: null,
    letterSpacing: null,
    lightingColor: null,
    limitingConeAngle: number,
    local: null,
    markerEnd: null,
    markerMid: null,
    markerStart: null,
    markerHeight: null,
    markerUnits: null,
    markerWidth: null,
    mask: null,
    maskContentUnits: null,
    maskUnits: null,
    mathematical: null,
    max: null,
    media: null,
    mediaCharacterEncoding: null,
    mediaContentEncodings: null,
    mediaSize: number,
    mediaTime: null,
    method: null,
    min: null,
    mode: null,
    name: null,
    navDown: null,
    navDownLeft: null,
    navDownRight: null,
    navLeft: null,
    navNext: null,
    navPrev: null,
    navRight: null,
    navUp: null,
    navUpLeft: null,
    navUpRight: null,
    numOctaves: null,
    observer: null,
    offset: null,
    onAbort: null,
    onActivate: null,
    onAfterPrint: null,
    onBeforePrint: null,
    onBegin: null,
    onCancel: null,
    onCanPlay: null,
    onCanPlayThrough: null,
    onChange: null,
    onClick: null,
    onClose: null,
    onCopy: null,
    onCueChange: null,
    onCut: null,
    onDblClick: null,
    onDrag: null,
    onDragEnd: null,
    onDragEnter: null,
    onDragExit: null,
    onDragLeave: null,
    onDragOver: null,
    onDragStart: null,
    onDrop: null,
    onDurationChange: null,
    onEmptied: null,
    onEnd: null,
    onEnded: null,
    onError: null,
    onFocus: null,
    onFocusIn: null,
    onFocusOut: null,
    onHashChange: null,
    onInput: null,
    onInvalid: null,
    onKeyDown: null,
    onKeyPress: null,
    onKeyUp: null,
    onLoad: null,
    onLoadedData: null,
    onLoadedMetadata: null,
    onLoadStart: null,
    onMessage: null,
    onMouseDown: null,
    onMouseEnter: null,
    onMouseLeave: null,
    onMouseMove: null,
    onMouseOut: null,
    onMouseOver: null,
    onMouseUp: null,
    onMouseWheel: null,
    onOffline: null,
    onOnline: null,
    onPageHide: null,
    onPageShow: null,
    onPaste: null,
    onPause: null,
    onPlay: null,
    onPlaying: null,
    onPopState: null,
    onProgress: null,
    onRateChange: null,
    onRepeat: null,
    onReset: null,
    onResize: null,
    onScroll: null,
    onSeeked: null,
    onSeeking: null,
    onSelect: null,
    onShow: null,
    onStalled: null,
    onStorage: null,
    onSubmit: null,
    onSuspend: null,
    onTimeUpdate: null,
    onToggle: null,
    onUnload: null,
    onVolumeChange: null,
    onWaiting: null,
    onZoom: null,
    opacity: null,
    operator: null,
    order: null,
    orient: null,
    orientation: null,
    origin: null,
    overflow: null,
    overlay: null,
    overlinePosition: number,
    overlineThickness: number,
    paintOrder: null,
    panose1: null,
    path: null,
    pathLength: number,
    patternContentUnits: null,
    patternTransform: null,
    patternUnits: null,
    phase: null,
    ping: spaceSeparated,
    pitch: null,
    playbackOrder: null,
    pointerEvents: null,
    points: null,
    pointsAtX: number,
    pointsAtY: number,
    pointsAtZ: number,
    preserveAlpha: null,
    preserveAspectRatio: null,
    primitiveUnits: null,
    propagate: null,
    property: commaOrSpaceSeparated,
    r: null,
    radius: null,
    referrerPolicy: null,
    refX: null,
    refY: null,
    rel: commaOrSpaceSeparated,
    rev: commaOrSpaceSeparated,
    renderingIntent: null,
    repeatCount: null,
    repeatDur: null,
    requiredExtensions: commaOrSpaceSeparated,
    requiredFeatures: commaOrSpaceSeparated,
    requiredFonts: commaOrSpaceSeparated,
    requiredFormats: commaOrSpaceSeparated,
    resource: null,
    restart: null,
    result: null,
    rotate: null,
    rx: null,
    ry: null,
    scale: null,
    seed: null,
    shapeRendering: null,
    side: null,
    slope: null,
    snapshotTime: null,
    specularConstant: number,
    specularExponent: number,
    spreadMethod: null,
    spacing: null,
    startOffset: null,
    stdDeviation: null,
    stemh: null,
    stemv: null,
    stitchTiles: null,
    stopColor: null,
    stopOpacity: null,
    strikethroughPosition: number,
    strikethroughThickness: number,
    string: null,
    stroke: null,
    strokeDashArray: commaOrSpaceSeparated,
    strokeDashOffset: null,
    strokeLineCap: null,
    strokeLineJoin: null,
    strokeMiterLimit: number,
    strokeOpacity: number,
    strokeWidth: null,
    style: null,
    surfaceScale: number,
    syncBehavior: null,
    syncBehaviorDefault: null,
    syncMaster: null,
    syncTolerance: null,
    syncToleranceDefault: null,
    systemLanguage: commaOrSpaceSeparated,
    tabIndex: number,
    tableValues: null,
    target: null,
    targetX: number,
    targetY: number,
    textAnchor: null,
    textDecoration: null,
    textRendering: null,
    textLength: null,
    timelineBegin: null,
    title: null,
    transformBehavior: null,
    type: null,
    typeOf: commaOrSpaceSeparated,
    to: null,
    transform: null,
    u1: null,
    u2: null,
    underlinePosition: number,
    underlineThickness: number,
    unicode: null,
    unicodeBidi: null,
    unicodeRange: null,
    unitsPerEm: number,
    values: null,
    vAlphabetic: number,
    vMathematical: number,
    vectorEffect: null,
    vHanging: number,
    vIdeographic: number,
    version: null,
    vertAdvY: number,
    vertOriginX: number,
    vertOriginY: number,
    viewBox: null,
    viewTarget: null,
    visibility: null,
    width: null,
    widths: null,
    wordSpacing: null,
    writingMode: null,
    x: null,
    x1: null,
    x2: null,
    xChannelSelector: null,
    xHeight: number,
    y: null,
    y1: null,
    y2: null,
    yChannelSelector: null,
    z: null,
    zoomAndPan: null
  }
})

;// CONCATENATED MODULE: ./node_modules/property-information/index.js
/**
 * @typedef {import('./lib/util/info.js').Info} Info
 * @typedef {import('./lib/util/schema.js').Schema} Schema
 */












const property_information_html = merge([xml, xlink, xmlns, aria, html_html], 'html')
const property_information_svg = merge([xml, xlink, xmlns, aria, svg], 'svg')

;// CONCATENATED MODULE: ./node_modules/html-void-elements/index.js
/**
 * List of HTML void tag names.
 *
 * @type {Array<string>}
 */
const htmlVoidElements = [
  'area',
  'base',
  'basefont',
  'bgsound',
  'br',
  'col',
  'command',
  'embed',
  'frame',
  'hr',
  'image',
  'img',
  'input',
  'isindex',
  'keygen',
  'link',
  'menuitem',
  'meta',
  'nextid',
  'param',
  'source',
  'track',
  'wbr'
]

;// CONCATENATED MODULE: ./node_modules/hast-util-to-html/lib/omission/util/comment.js
/**
 * @typedef {import('../../types.js').Comment} Comment
 */



/** @type {import('unist-util-is').AssertPredicate<Comment>} */
// @ts-ignore
const comment = convert('comment')

;// CONCATENATED MODULE: ./node_modules/hast-util-to-html/lib/omission/util/siblings.js
/**
 * @typedef {import('../../types.js').Parent} Parent
 * @typedef {import('../../types.js').Child} Child
 */



const siblingAfter = siblings(1)
const siblingBefore = siblings(-1)

/**
 * Factory to check siblings in a direction.
 *
 * @param {number} increment
 */
function siblings(increment) {
  return sibling

  /**
   * Find applicable siblings in a direction.
   *
   * @param {Parent} parent
   * @param {number} index
   * @param {boolean} [includeWhitespace=false]
   * @returns {Child}
   */
  function sibling(parent, index, includeWhitespace) {
    const siblings = parent && parent.children
    let offset = index + increment
    let next = siblings && siblings[offset]

    if (!includeWhitespace) {
      while (next && whitespace(next)) {
        offset += increment
        next = siblings[offset]
      }
    }

    return next
  }
}

;// CONCATENATED MODULE: ./node_modules/hast-util-to-html/lib/omission/util/whitespace-start.js
/**
 * @typedef {import('../../types.js').Node} Node
 * @typedef {import('../../types.js').Text} Text
 */




/** @type {import('unist-util-is').AssertPredicate<Text>} */
// @ts-ignore
const isText = convert('text')

/**
 * Check if `node` starts with whitespace.
 *
 * @param {Node} node
 * @returns {boolean}
 */
function whitespaceStart(node) {
  return isText(node) && whitespace(node.value.charAt(0))
}

;// CONCATENATED MODULE: ./node_modules/hast-util-to-html/lib/omission/omission.js
/**
 * @typedef {import('../types.js').OmitHandle} OmitHandle
 */

const omission_own = {}.hasOwnProperty

/**
 * Factory to check if a given node can have a tag omitted.
 *
 * @param {Object.<string, OmitHandle>} handlers
 * @returns {OmitHandle}
 */
function omission(handlers) {
  return omit

  /**
   * Check if a given node can have a tag omitted.
   *
   * @type {OmitHandle}
   */
  function omit(node, index, parent) {
    return (
      omission_own.call(handlers, node.tagName) &&
      handlers[node.tagName](node, index, parent)
    )
  }
}

;// CONCATENATED MODULE: ./node_modules/hast-util-to-html/lib/omission/closing.js
/**
 * @typedef {import('../types.js').OmitHandle} OmitHandle
 */







const closing = omission({
  html: closing_html,
  head: headOrColgroupOrCaption,
  body,
  p,
  li,
  dt,
  dd,
  rt: rubyElement,
  rp: rubyElement,
  optgroup,
  option: closing_option,
  menuitem,
  colgroup: headOrColgroupOrCaption,
  caption: headOrColgroupOrCaption,
  thead,
  tbody,
  tfoot,
  tr,
  td: cells,
  th: cells
})

/**
 * Macro for `</head>`, `</colgroup>`, and `</caption>`.
 *
 * @type {OmitHandle}
 */
function headOrColgroupOrCaption(_, index, parent) {
  const next = siblingAfter(parent, index, true)
  return !next || (!comment(next) && !whitespaceStart(next))
}

/**
 * Whether to omit `</html>`.
 *
 * @type {OmitHandle}
 */
function closing_html(_, index, parent) {
  const next = siblingAfter(parent, index)
  return !next || !comment(next)
}

/**
 * Whether to omit `</body>`.
 *
 * @type {OmitHandle}
 */
function body(_, index, parent) {
  const next = siblingAfter(parent, index)
  return !next || !comment(next)
}

/**
 * Whether to omit `</p>`.
 *
 * @type {OmitHandle}
 */
function p(_, index, parent) {
  const next = siblingAfter(parent, index)
  return next
    ? isElement(next, [
        'address',
        'article',
        'aside',
        'blockquote',
        'details',
        'div',
        'dl',
        'fieldset',
        'figcaption',
        'figure',
        'footer',
        'form',
        'h1',
        'h2',
        'h3',
        'h4',
        'h5',
        'h6',
        'header',
        'hgroup',
        'hr',
        'main',
        'menu',
        'nav',
        'ol',
        'p',
        'pre',
        'section',
        'table',
        'ul'
      ])
    : !parent ||
        // Confusing parent.
        !isElement(parent, [
          'a',
          'audio',
          'del',
          'ins',
          'map',
          'noscript',
          'video'
        ])
}

/**
 * Whether to omit `</li>`.
 *
 * @type {OmitHandle}
 */
function li(_, index, parent) {
  const next = siblingAfter(parent, index)
  return !next || isElement(next, 'li')
}

/**
 * Whether to omit `</dt>`.
 *
 * @type {OmitHandle}
 */
function dt(_, index, parent) {
  const next = siblingAfter(parent, index)
  return next && isElement(next, ['dt', 'dd'])
}

/**
 * Whether to omit `</dd>`.
 *
 * @type {OmitHandle}
 */
function dd(_, index, parent) {
  const next = siblingAfter(parent, index)
  return !next || isElement(next, ['dt', 'dd'])
}

/**
 * Whether to omit `</rt>` or `</rp>`.
 *
 * @type {OmitHandle}
 */
function rubyElement(_, index, parent) {
  const next = siblingAfter(parent, index)
  return !next || isElement(next, ['rp', 'rt'])
}

/**
 * Whether to omit `</optgroup>`.
 *
 * @type {OmitHandle}
 */
function optgroup(_, index, parent) {
  const next = siblingAfter(parent, index)
  return !next || isElement(next, 'optgroup')
}

/**
 * Whether to omit `</option>`.
 *
 * @type {OmitHandle}
 */
function closing_option(_, index, parent) {
  const next = siblingAfter(parent, index)
  return !next || isElement(next, ['option', 'optgroup'])
}

/**
 * Whether to omit `</menuitem>`.
 *
 * @type {OmitHandle}
 */
function menuitem(_, index, parent) {
  const next = siblingAfter(parent, index)
  return !next || isElement(next, ['menuitem', 'hr', 'menu'])
}

/**
 * Whether to omit `</thead>`.
 *
 * @type {OmitHandle}
 */
function thead(_, index, parent) {
  const next = siblingAfter(parent, index)
  return next && isElement(next, ['tbody', 'tfoot'])
}

/**
 * Whether to omit `</tbody>`.
 *
 * @type {OmitHandle}
 */
function tbody(_, index, parent) {
  const next = siblingAfter(parent, index)
  return !next || isElement(next, ['tbody', 'tfoot'])
}

/**
 * Whether to omit `</tfoot>`.
 *
 * @type {OmitHandle}
 */
function tfoot(_, index, parent) {
  return !siblingAfter(parent, index)
}

/**
 * Whether to omit `</tr>`.
 *
 * @type {OmitHandle}
 */
function tr(_, index, parent) {
  const next = siblingAfter(parent, index)
  return !next || isElement(next, 'tr')
}

/**
 * Whether to omit `</td>` or `</th>`.
 *
 * @type {OmitHandle}
 */
function cells(_, index, parent) {
  const next = siblingAfter(parent, index)
  return !next || isElement(next, ['td', 'th'])
}

;// CONCATENATED MODULE: ./node_modules/hast-util-to-html/lib/omission/opening.js
/**
 * @typedef {import('../types.js').OmitHandle} OmitHandle
 * @typedef {import('../types.js').Child} Child
 */








const opening = omission({
  html: opening_html,
  head,
  body: opening_body,
  colgroup,
  tbody: opening_tbody
})

/**
 * Whether to omit `<html>`.
 *
 * @type {OmitHandle}
 */
function opening_html(node) {
  const head = siblingAfter(node, -1)
  return !head || !comment(head)
}

/**
 * Whether to omit `<head>`.
 *
 * @type {OmitHandle}
 */
function head(node) {
  const children = node.children
  /** @type {Array.<string>} */
  const seen = []
  let index = -1
  /** @type {Child} */
  let child

  while (++index < children.length) {
    child = children[index]
    if (isElement(child, ['title', 'base'])) {
      if (seen.includes(child.tagName)) return false
      seen.push(child.tagName)
    }
  }

  return children.length > 0
}

/**
 * Whether to omit `<body>`.
 *
 * @type {OmitHandle}
 */
function opening_body(node) {
  const head = siblingAfter(node, -1, true)

  return (
    !head ||
    (!comment(head) &&
      !whitespaceStart(head) &&
      !isElement(head, ['meta', 'link', 'script', 'style', 'template']))
  )
}

/**
 * Whether to omit `<colgroup>`.
 * The spec describes some logic for the opening tag, but it’s easier to
 * implement in the closing tag, to the same effect, so we handle it there
 * instead.
 *
 * @type {OmitHandle}
 */
function colgroup(node, index, parent) {
  const previous = siblingBefore(parent, index)
  const head = siblingAfter(node, -1, true)

  // Previous colgroup was already omitted.
  if (
    isElement(previous, 'colgroup') &&
    closing(previous, parent.children.indexOf(previous), parent)
  ) {
    return false
  }

  return head && isElement(head, 'col')
}

/**
 * Whether to omit `<tbody>`.
 *
 * @type {OmitHandle}
 */
function opening_tbody(node, index, parent) {
  const previous = siblingBefore(parent, index)
  const head = siblingAfter(node, -1)

  // Previous table section was already omitted.
  if (
    isElement(previous, ['thead', 'tbody']) &&
    closing(previous, parent.children.indexOf(previous), parent)
  ) {
    return false
  }

  return head && isElement(head, 'tr')
}

;// CONCATENATED MODULE: ./node_modules/hast-util-to-html/lib/omission/index.js
/**
 * @typedef {import('../types.js').Omission} Omission
 */




/** @type {Omission} */
const omission_omission = {opening: opening, closing: closing}

;// CONCATENATED MODULE: ./node_modules/property-information/lib/find.js
/**
 * @typedef {import('./util/schema.js').Schema} Schema
 */





const valid = /^data[-\w.:]+$/i
const dash = /-[a-z]/g
const cap = /[A-Z]/g

/**
 * @param {Schema} schema
 * @param {string} value
 * @returns {Info}
 */
function find(schema, value) {
  const normal = normalize_normalize(value)
  let prop = value
  let Type = Info

  if (normal in schema.normal) {
    return schema.property[schema.normal[normal]]
  }

  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {
    // Attribute or property.
    if (value.charAt(4) === '-') {
      // Turn it into a property.
      const rest = value.slice(5).replace(dash, camelcase)
      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)
    } else {
      // Turn it into an attribute.
      const rest = value.slice(4)

      if (!dash.test(rest)) {
        let dashes = rest.replace(cap, kebab)

        if (dashes.charAt(0) !== '-') {
          dashes = '-' + dashes
        }

        value = 'data' + dashes
      }
    }

    Type = DefinedInfo
  }

  return new Type(prop, value)
}

/**
 * @param {string} $0
 * @returns {string}
 */
function kebab($0) {
  return '-' + $0.toLowerCase()
}

/**
 * @param {string} $0
 * @returns {string}
 */
function camelcase($0) {
  return $0.charAt(1).toUpperCase()
}

;// CONCATENATED MODULE: ./node_modules/space-separated-tokens/index.js
/**
 * Parse space separated tokens to an array of strings.
 *
 * @param {string} value Space separated tokens
 * @returns {Array.<string>} Tokens
 */
function space_separated_tokens_parse(value) {
  const input = String(value || '').trim()
  return input ? input.split(/[ \t\n\r\f]+/g) : []
}

/**
 * Serialize an array of strings as space separated tokens.
 *
 * @param {Array.<string|number>} values Tokens
 * @returns {string} Space separated tokens
 */
function stringify(values) {
  return values.join(' ').trim()
}

;// CONCATENATED MODULE: ./node_modules/comma-separated-tokens/index.js
/**
 * @typedef {Object} StringifyOptions
 * @property {boolean} [padLeft=true] Whether to pad a space before a token (`boolean`, default: `true`).
 * @property {boolean} [padRight=false] Whether to pad a space after a token (`boolean`, default: `false`).
 */

/**
 * Parse comma separated tokens to an array.
 *
 * @param {string} value
 * @returns {Array.<string>}
 */
function comma_separated_tokens_parse(value) {
  /** @type {Array.<string>} */
  var tokens = []
  var input = String(value || '')
  var index = input.indexOf(',')
  var start = 0
  /** @type {boolean} */
  var end
  /** @type {string} */
  var token

  while (!end) {
    if (index === -1) {
      index = input.length
      end = true
    }

    token = input.slice(start, index).trim()

    if (token || !end) {
      tokens.push(token)
    }

    start = index + 1
    index = input.indexOf(',', start)
  }

  return tokens
}

/**
 * Serialize an array of strings to comma separated tokens.
 *
 * @param {Array.<string|number>} values
 * @param {StringifyOptions} [options]
 * @returns {string}
 */
function comma_separated_tokens_stringify(values, options) {
  var settings = options || {}

  // Ensure the last empty entry is seen.
  if (values[values.length - 1] === '') {
    values = values.concat('')
  }

  return values
    .join(
      (settings.padRight ? ' ' : '') +
        ',' +
        (settings.padLeft === false ? '' : ' ')
    )
    .trim()
}

;// CONCATENATED MODULE: ./node_modules/stringify-entities/lib/core.js
/**
 * @typedef CoreOptions
 * @property {Array<string>} [subset=[]]
 *   Whether to only escape the given subset of characters.
 * @property {boolean} [escapeOnly=false]
 *   Whether to only escape possibly dangerous characters.
 *   Those characters are `"`, `&`, `'`, `<`, `>`, and `` ` ``.
 *
 * @typedef FormatOptions
 * @property {(code: number, next: number, options: CoreWithFormatOptions) => string} format
 *   Format strategy.
 *
 * @typedef {CoreOptions & FormatOptions & import('./util/format-smart.js').FormatSmartOptions} CoreWithFormatOptions
 */

/**
 * Encode certain characters in `value`.
 *
 * @param {string} value
 * @param {CoreWithFormatOptions} options
 * @returns {string}
 */
function core_core(value, options) {
  value = value.replace(
    options.subset ? charactersToExpression(options.subset) : /["&'<>`]/g,
    basic
  )

  if (options.subset || options.escapeOnly) {
    return value
  }

  return (
    value
      // Surrogate pairs.
      .replace(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g, surrogate)
      // BMP control characters (C0 except for LF, CR, SP; DEL; and some more
      // non-ASCII ones).
      .replace(
        // eslint-disable-next-line no-control-regex, unicorn/no-hex-escape
        /[\x01-\t\v\f\x0E-\x1F\x7F\x81\x8D\x8F\x90\x9D\xA0-\uFFFF]/g,
        basic
      )
  )

  /**
   * @param {string} pair
   * @param {number} index
   * @param {string} all
   */
  function surrogate(pair, index, all) {
    return options.format(
      (pair.charCodeAt(0) - 0xd800) * 0x400 +
        pair.charCodeAt(1) -
        0xdc00 +
        0x10000,
      all.charCodeAt(index + 2),
      options
    )
  }

  /**
   * @param {string} character
   * @param {number} index
   * @param {string} all
   */
  function basic(character, index, all) {
    return options.format(
      character.charCodeAt(0),
      all.charCodeAt(index + 1),
      options
    )
  }
}

/**
 * @param {Array<string>} subset
 * @returns {RegExp}
 */
function charactersToExpression(subset) {
  /** @type {Array<string>} */
  const groups = []
  let index = -1

  while (++index < subset.length) {
    groups.push(subset[index].replace(/[|\\{}()[\]^$+*?.]/g, '\\$&'))
  }

  return new RegExp('(?:' + groups.join('|') + ')', 'g')
}

;// CONCATENATED MODULE: ./node_modules/stringify-entities/lib/util/to-hexadecimal.js
/**
 * Configurable ways to encode characters as hexadecimal references.
 *
 * @param {number} code
 * @param {number} next
 * @param {boolean|undefined} omit
 * @returns {string}
 */
function toHexadecimal(code, next, omit) {
  const value = '&#x' + code.toString(16).toUpperCase()
  return omit && next && !/[\dA-Fa-f]/.test(String.fromCharCode(next))
    ? value
    : value + ';'
}

;// CONCATENATED MODULE: ./node_modules/stringify-entities/lib/util/to-decimal.js
/**
 * Configurable ways to encode characters as decimal references.
 *
 * @param {number} code
 * @param {number} next
 * @param {boolean|undefined} omit
 * @returns {string}
 */
function toDecimal(code, next, omit) {
  const value = '&#' + String(code)
  return omit && next && !/\d/.test(String.fromCharCode(next))
    ? value
    : value + ';'
}

;// CONCATENATED MODULE: ./node_modules/character-entities-legacy/index.js
/**
 * List of legacy HTML named character references that don’t need a trailing semicolon.
 *
 * @type {Array<string>}
 */
const characterEntitiesLegacy = [
  'AElig',
  'AMP',
  'Aacute',
  'Acirc',
  'Agrave',
  'Aring',
  'Atilde',
  'Auml',
  'COPY',
  'Ccedil',
  'ETH',
  'Eacute',
  'Ecirc',
  'Egrave',
  'Euml',
  'GT',
  'Iacute',
  'Icirc',
  'Igrave',
  'Iuml',
  'LT',
  'Ntilde',
  'Oacute',
  'Ocirc',
  'Ograve',
  'Oslash',
  'Otilde',
  'Ouml',
  'QUOT',
  'REG',
  'THORN',
  'Uacute',
  'Ucirc',
  'Ugrave',
  'Uuml',
  'Yacute',
  'aacute',
  'acirc',
  'acute',
  'aelig',
  'agrave',
  'amp',
  'aring',
  'atilde',
  'auml',
  'brvbar',
  'ccedil',
  'cedil',
  'cent',
  'copy',
  'curren',
  'deg',
  'divide',
  'eacute',
  'ecirc',
  'egrave',
  'eth',
  'euml',
  'frac12',
  'frac14',
  'frac34',
  'gt',
  'iacute',
  'icirc',
  'iexcl',
  'igrave',
  'iquest',
  'iuml',
  'laquo',
  'lt',
  'macr',
  'micro',
  'middot',
  'nbsp',
  'not',
  'ntilde',
  'oacute',
  'ocirc',
  'ograve',
  'ordf',
  'ordm',
  'oslash',
  'otilde',
  'ouml',
  'para',
  'plusmn',
  'pound',
  'quot',
  'raquo',
  'reg',
  'sect',
  'shy',
  'sup1',
  'sup2',
  'sup3',
  'szlig',
  'thorn',
  'times',
  'uacute',
  'ucirc',
  'ugrave',
  'uml',
  'uuml',
  'yacute',
  'yen',
  'yuml'
]

;// CONCATENATED MODULE: ./node_modules/character-entities-html4/index.js
/**
 * Map of named character references from HTML 4.
 *
 * @type {Record<string, string>}
 */
const characterEntitiesHtml4 = {
  nbsp: ' ',
  iexcl: '¡',
  cent: '¢',
  pound: '£',
  curren: '¤',
  yen: '¥',
  brvbar: '¦',
  sect: '§',
  uml: '¨',
  copy: '©',
  ordf: 'ª',
  laquo: '«',
  not: '¬',
  shy: '­',
  reg: '®',
  macr: '¯',
  deg: '°',
  plusmn: '±',
  sup2: '²',
  sup3: '³',
  acute: '´',
  micro: 'µ',
  para: '¶',
  middot: '·',
  cedil: '¸',
  sup1: '¹',
  ordm: 'º',
  raquo: '»',
  frac14: '¼',
  frac12: '½',
  frac34: '¾',
  iquest: '¿',
  Agrave: 'À',
  Aacute: 'Á',
  Acirc: 'Â',
  Atilde: 'Ã',
  Auml: 'Ä',
  Aring: 'Å',
  AElig: 'Æ',
  Ccedil: 'Ç',
  Egrave: 'È',
  Eacute: 'É',
  Ecirc: 'Ê',
  Euml: 'Ë',
  Igrave: 'Ì',
  Iacute: 'Í',
  Icirc: 'Î',
  Iuml: 'Ï',
  ETH: 'Ð',
  Ntilde: 'Ñ',
  Ograve: 'Ò',
  Oacute: 'Ó',
  Ocirc: 'Ô',
  Otilde: 'Õ',
  Ouml: 'Ö',
  times: '×',
  Oslash: 'Ø',
  Ugrave: 'Ù',
  Uacute: 'Ú',
  Ucirc: 'Û',
  Uuml: 'Ü',
  Yacute: 'Ý',
  THORN: 'Þ',
  szlig: 'ß',
  agrave: 'à',
  aacute: 'á',
  acirc: 'â',
  atilde: 'ã',
  auml: 'ä',
  aring: 'å',
  aelig: 'æ',
  ccedil: 'ç',
  egrave: 'è',
  eacute: 'é',
  ecirc: 'ê',
  euml: 'ë',
  igrave: 'ì',
  iacute: 'í',
  icirc: 'î',
  iuml: 'ï',
  eth: 'ð',
  ntilde: 'ñ',
  ograve: 'ò',
  oacute: 'ó',
  ocirc: 'ô',
  otilde: 'õ',
  ouml: 'ö',
  divide: '÷',
  oslash: 'ø',
  ugrave: 'ù',
  uacute: 'ú',
  ucirc: 'û',
  uuml: 'ü',
  yacute: 'ý',
  thorn: 'þ',
  yuml: 'ÿ',
  fnof: 'ƒ',
  Alpha: 'Α',
  Beta: 'Β',
  Gamma: 'Γ',
  Delta: 'Δ',
  Epsilon: 'Ε',
  Zeta: 'Ζ',
  Eta: 'Η',
  Theta: 'Θ',
  Iota: 'Ι',
  Kappa: 'Κ',
  Lambda: 'Λ',
  Mu: 'Μ',
  Nu: 'Ν',
  Xi: 'Ξ',
  Omicron: 'Ο',
  Pi: 'Π',
  Rho: 'Ρ',
  Sigma: 'Σ',
  Tau: 'Τ',
  Upsilon: 'Υ',
  Phi: 'Φ',
  Chi: 'Χ',
  Psi: 'Ψ',
  Omega: 'Ω',
  alpha: 'α',
  beta: 'β',
  gamma: 'γ',
  delta: 'δ',
  epsilon: 'ε',
  zeta: 'ζ',
  eta: 'η',
  theta: 'θ',
  iota: 'ι',
  kappa: 'κ',
  lambda: 'λ',
  mu: 'μ',
  nu: 'ν',
  xi: 'ξ',
  omicron: 'ο',
  pi: 'π',
  rho: 'ρ',
  sigmaf: 'ς',
  sigma: 'σ',
  tau: 'τ',
  upsilon: 'υ',
  phi: 'φ',
  chi: 'χ',
  psi: 'ψ',
  omega: 'ω',
  thetasym: 'ϑ',
  upsih: 'ϒ',
  piv: 'ϖ',
  bull: '•',
  hellip: '…',
  prime: '′',
  Prime: '″',
  oline: '‾',
  frasl: '⁄',
  weierp: '℘',
  image: 'ℑ',
  real: 'ℜ',
  trade: '™',
  alefsym: 'ℵ',
  larr: '←',
  uarr: '↑',
  rarr: '→',
  darr: '↓',
  harr: '↔',
  crarr: '↵',
  lArr: '⇐',
  uArr: '⇑',
  rArr: '⇒',
  dArr: '⇓',
  hArr: '⇔',
  forall: '∀',
  part: '∂',
  exist: '∃',
  empty: '∅',
  nabla: '∇',
  isin: '∈',
  notin: '∉',
  ni: '∋',
  prod: '∏',
  sum: '∑',
  minus: '−',
  lowast: '∗',
  radic: '√',
  prop: '∝',
  infin: '∞',
  ang: '∠',
  and: '∧',
  or: '∨',
  cap: '∩',
  cup: '∪',
  int: '∫',
  there4: '∴',
  sim: '∼',
  cong: '≅',
  asymp: '≈',
  ne: '≠',
  equiv: '≡',
  le: '≤',
  ge: '≥',
  sub: '⊂',
  sup: '⊃',
  nsub: '⊄',
  sube: '⊆',
  supe: '⊇',
  oplus: '⊕',
  otimes: '⊗',
  perp: '⊥',
  sdot: '⋅',
  lceil: '⌈',
  rceil: '⌉',
  lfloor: '⌊',
  rfloor: '⌋',
  lang: '〈',
  rang: '〉',
  loz: '◊',
  spades: '♠',
  clubs: '♣',
  hearts: '♥',
  diams: '♦',
  quot: '"',
  amp: '&',
  lt: '<',
  gt: '>',
  OElig: 'Œ',
  oelig: 'œ',
  Scaron: 'Š',
  scaron: 'š',
  Yuml: 'Ÿ',
  circ: 'ˆ',
  tilde: '˜',
  ensp: ' ',
  emsp: ' ',
  thinsp: ' ',
  zwnj: '‌',
  zwj: '‍',
  lrm: '‎',
  rlm: '‏',
  ndash: '–',
  mdash: '—',
  lsquo: '‘',
  rsquo: '’',
  sbquo: '‚',
  ldquo: '“',
  rdquo: '”',
  bdquo: '„',
  dagger: '†',
  Dagger: '‡',
  permil: '‰',
  lsaquo: '‹',
  rsaquo: '›',
  euro: '€'
}

;// CONCATENATED MODULE: ./node_modules/stringify-entities/lib/constant/dangerous.js
/**
 * List of legacy (that don’t need a trailing `;`) named references which could,
 * depending on what follows them, turn into a different meaning
 *
 * @type {Array<string>}
 */
const dangerous = [
  'cent',
  'copy',
  'divide',
  'gt',
  'lt',
  'not',
  'para',
  'times'
]

;// CONCATENATED MODULE: ./node_modules/stringify-entities/lib/util/to-named.js




const to_named_own = {}.hasOwnProperty

/**
 * `characterEntitiesHtml4` but inverted.
 *
 * @type {Record<string, string>}
 */
const characters = {}

/** @type {string} */
let key

for (key in characterEntitiesHtml4) {
  if (to_named_own.call(characterEntitiesHtml4, key)) {
    characters[characterEntitiesHtml4[key]] = key
  }
}

/**
 * Configurable ways to encode characters as named references.
 *
 * @param {number} code
 * @param {number} next
 * @param {boolean|undefined} omit
 * @param {boolean|undefined} attribute
 * @returns {string}
 */
function toNamed(code, next, omit, attribute) {
  const character = String.fromCharCode(code)

  if (to_named_own.call(characters, character)) {
    const name = characters[character]
    const value = '&' + name

    if (
      omit &&
      characterEntitiesLegacy.includes(name) &&
      !dangerous.includes(name) &&
      (!attribute ||
        (next &&
          next !== 61 /* `=` */ &&
          /[^\da-z]/i.test(String.fromCharCode(next))))
    ) {
      return value
    }

    return value + ';'
  }

  return ''
}

;// CONCATENATED MODULE: ./node_modules/stringify-entities/lib/util/format-smart.js
/**
 * @typedef FormatSmartOptions
 * @property {boolean} [useNamedReferences=false]
 *   Prefer named character references (`&amp;`) where possible.
 * @property {boolean} [useShortestReferences=false]
 *   Prefer the shortest possible reference, if that results in less bytes.
 *   **Note**: `useNamedReferences` can be omitted when using `useShortestReferences`.
 * @property {boolean} [omitOptionalSemicolons=false]
 *   Whether to omit semicolons when possible.
 *   **Note**: This creates what HTML calls “parse errors” but is otherwise still valid HTML — don’t use this except when building a minifier.
 *   Omitting semicolons is possible for certain named and numeric references in some cases.
 * @property {boolean} [attribute=false]
 *   Create character references which don’t fail in attributes.
 *   **Note**: `attribute` only applies when operating dangerously with
 *   `omitOptionalSemicolons: true`.
 */





/**
 * Configurable ways to encode a character yielding pretty or small results.
 *
 * @param {number} code
 * @param {number} next
 * @param {FormatSmartOptions} options
 * @returns {string}
 */
function formatSmart(code, next, options) {
  let numeric = toHexadecimal(code, next, options.omitOptionalSemicolons)
  /** @type {string|undefined} */
  let named

  if (options.useNamedReferences || options.useShortestReferences) {
    named = toNamed(
      code,
      next,
      options.omitOptionalSemicolons,
      options.attribute
    )
  }

  // Use the shortest numeric reference when requested.
  // A simple algorithm would use decimal for all code points under 100, as
  // those are shorter than hexadecimal:
  //
  // * `&#99;` vs `&#x63;` (decimal shorter)
  // * `&#100;` vs `&#x64;` (equal)
  //
  // However, because we take `next` into consideration when `omit` is used,
  // And it would be possible that decimals are shorter on bigger values as
  // well if `next` is hexadecimal but not decimal, we instead compare both.
  if (
    (options.useShortestReferences || !named) &&
    options.useShortestReferences
  ) {
    const decimal = toDecimal(code, next, options.omitOptionalSemicolons)

    if (decimal.length < numeric.length) {
      numeric = decimal
    }
  }

  return named &&
    (!options.useShortestReferences || named.length < numeric.length)
    ? named
    : numeric
}

;// CONCATENATED MODULE: ./node_modules/stringify-entities/lib/index.js
/**
 * @typedef {import('./core.js').CoreOptions & import('./util/format-smart.js').FormatSmartOptions} Options
 * @typedef {import('./core.js').CoreOptions} LightOptions
 */





/**
 * Encode special characters in `value`.
 *
 * @param {string} value
 *   Value to encode.
 * @param {Options} [options]
 *   Configuration.
 * @returns {string}
 *   Encoded value.
 */
function stringifyEntities(value, options) {
  return core_core(value, Object.assign({format: formatSmart}, options))
}

/**
 * Encode special characters in `value` as hexadecimals.
 *
 * @param {string} value
 *   Value to encode.
 * @param {LightOptions} [options]
 *   Configuration.
 * @returns {string}
 *   Encoded value.
 */
function stringifyEntitiesLight(value, options) {
  return core(value, Object.assign({format: formatBasic}, options))
}

;// CONCATENATED MODULE: ./node_modules/ccount/index.js
/**
 * Count how often a character (or substring) is used in a string.
 *
 * @param {string} value
 *   Value to search in.
 * @param {string} character
 *   Character (or substring) to look for.
 * @return {number}
 *   Number of times `character` occurred in `value`.
 */
function ccount(value, character) {
  const source = String(value)

  if (typeof character !== 'string') {
    throw new TypeError('Expected character')
  }

  let count = 0
  let index = source.indexOf(character)

  while (index !== -1) {
    count++
    index = source.indexOf(character, index + character.length)
  }

  return count
}

;// CONCATENATED MODULE: ./node_modules/hast-util-to-html/lib/constants.js
// Maps of subsets.
// Each value is a matrix of tuples.
// The first value causes parse errors, the second is valid.
// Of both values, the first value is unsafe, and the second is safe.
const constants = {
  // See: <https://html.spec.whatwg.org/#attribute-name-state>.
  name: [
    ['\t\n\f\r &/=>'.split(''), '\t\n\f\r "&\'/=>`'.split('')],
    ['\0\t\n\f\r "&\'/<=>'.split(''), '\0\t\n\f\r "&\'/<=>`'.split('')]
  ],
  // See: <https://html.spec.whatwg.org/#attribute-value-(unquoted)-state>.
  unquoted: [
    ['\t\n\f\r &>'.split(''), '\0\t\n\f\r "&\'<=>`'.split('')],
    ['\0\t\n\f\r "&\'<=>`'.split(''), '\0\t\n\f\r "&\'<=>`'.split('')]
  ],
  // See: <https://html.spec.whatwg.org/#attribute-value-(single-quoted)-state>.
  single: [
    ["&'".split(''), '"&\'`'.split('')],
    ["\0&'".split(''), '\0"&\'`'.split('')]
  ],
  // See: <https://html.spec.whatwg.org/#attribute-value-(double-quoted)-state>.
  double: [
    ['"&'.split(''), '"&\'`'.split('')],
    ['\0"&'.split(''), '\0"&\'`'.split('')]
  ]
}

;// CONCATENATED MODULE: ./node_modules/hast-util-to-html/lib/comment.js
/**
 * @typedef {import('./types.js').Handle} Handle
 * @typedef {import('./types.js').Comment} Comment
 */



/**
 * @type {Handle}
 * @param {Comment} node
 */
function comment_comment(ctx, node) {
  // See: <https://html.spec.whatwg.org/multipage/syntax.html#comments>
  return ctx.bogusComments
    ? '<?' +
        stringifyEntities(
          node.value,
          Object.assign({}, ctx.entities, {subset: ['>']})
        ) +
        '>'
    : '<!--' + node.value.replace(/^>|^->|<!--|-->|--!>|<!-$/g, encode) + '-->'

  /**
   * @param {string} $0
   */
  function encode($0) {
    return stringifyEntities(
      $0,
      Object.assign({}, ctx.entities, {subset: ['<', '>']})
    )
  }
}

;// CONCATENATED MODULE: ./node_modules/hast-util-to-html/lib/doctype.js
/**
 * @typedef {import('./types.js').Handle} Handle
 */

/**
 * @type {Handle}
 */
function doctype(ctx) {
  return (
    '<!' +
    (ctx.upperDoctype ? 'DOCTYPE' : 'doctype') +
    (ctx.tightDoctype ? '' : ' ') +
    'html>'
  )
}

;// CONCATENATED MODULE: ./node_modules/hast-util-to-html/lib/text.js
/**
 * @typedef {import('./types.js').Handle} Handle
 * @typedef {import('./types.js').Text} Text
 */



/**
 * @type {Handle}
 * @param {Text} node
 */
function lib_text_text(ctx, node, _, parent) {
  // Check if content of `node` should be escaped.
  return parent &&
    parent.type === 'element' &&
    // @ts-expect-error: hush.
    (parent.tagName === 'script' || parent.tagName === 'style')
    ? node.value
    : stringifyEntities(
        node.value,
        Object.assign({}, ctx.entities, {subset: ['<', '&']})
      )
}

;// CONCATENATED MODULE: ./node_modules/hast-util-to-html/lib/raw.js
/**
 * @typedef {import('./types.js').Handle} Handle
 * @typedef {import('./types.js').Raw} Raw
 */



/**
 * @type {Handle}
 * @param {Raw} node
 */
function raw(ctx, node, index, parent) {
  // @ts-ignore Hush.
  return ctx.dangerous ? node.value : lib_text_text(ctx, node, index, parent)
}

;// CONCATENATED MODULE: ./node_modules/hast-util-to-html/lib/tree.js
/**
 * @typedef {import('./types.js').Handle} Handle
 * @typedef {import('./types.js').Element} Element
 * @typedef {import('./types.js').Context} Context
 * @typedef {import('./types.js').Properties} Properties
 * @typedef {import('./types.js').PropertyValue} PropertyValue
 * @typedef {import('./types.js').Parent} Parent
 */












/**
 * @type {Object.<string, Handle>}
 */
const tree_handlers = {
  comment: comment_comment,
  doctype: doctype,
  element: tree_element,
  // @ts-ignore `raw` is nonstandard
  raw: raw,
  // @ts-ignore `root` is a parent.
  root: tree_all,
  text: lib_text_text
}

const tree_own = {}.hasOwnProperty

/**
 * @type {Handle}
 */
function tree_one(ctx, node, index, parent) {
  if (!node || !node.type) {
    throw new Error('Expected node, not `' + node + '`')
  }

  if (!tree_own.call(tree_handlers, node.type)) {
    throw new Error('Cannot compile unknown node `' + node.type + '`')
  }

  return tree_handlers[node.type](ctx, node, index, parent)
}

/**
 * Serialize all children of `parent`.
 *
 * @type {Handle}
 * @param {Parent} parent
 */
function tree_all(ctx, parent) {
  /** @type {Array.<string>} */
  const results = []
  const children = (parent && parent.children) || []
  let index = -1

  while (++index < children.length) {
    results[index] = tree_one(ctx, children[index], index, parent)
  }

  return results.join('')
}

/**
 * @type {Handle}
 * @param {Element} node
 */
// eslint-disable-next-line complexity
function tree_element(ctx, node, index, parent) {
  const schema = ctx.schema
  const omit = schema.space === 'svg' ? undefined : ctx.omit
  let selfClosing =
    schema.space === 'svg'
      ? ctx.closeEmpty
      : ctx.voids.includes(node.tagName.toLowerCase())
  /** @type {Array.<string>} */
  const parts = []
  /** @type {string} */
  let last

  if (schema.space === 'html' && node.tagName === 'svg') {
    ctx.schema = property_information_svg
  }

  const attrs = serializeAttributes(ctx, node.properties)

  const content = tree_all(
    ctx,
    schema.space === 'html' && node.tagName === 'template' ? node.content : node
  )

  ctx.schema = schema

  // If the node is categorised as void, but it has children, remove the
  // categorisation.
  // This enables for example `menuitem`s, which are void in W3C HTML but not
  // void in WHATWG HTML, to be stringified properly.
  if (content) selfClosing = false

  if (attrs || !omit || !omit.opening(node, index, parent)) {
    parts.push('<', node.tagName, attrs ? ' ' + attrs : '')

    if (selfClosing && (schema.space === 'svg' || ctx.close)) {
      last = attrs.charAt(attrs.length - 1)
      if (
        !ctx.tightClose ||
        last === '/' ||
        (last && last !== '"' && last !== "'")
      ) {
        parts.push(' ')
      }

      parts.push('/')
    }

    parts.push('>')
  }

  parts.push(content)

  if (!selfClosing && (!omit || !omit.closing(node, index, parent))) {
    parts.push('</' + node.tagName + '>')
  }

  return parts.join('')
}

/**
 * @param {Context} ctx
 * @param {Properties} props
 * @returns {string}
 */
function serializeAttributes(ctx, props) {
  /** @type {Array.<string>} */
  const values = []
  let index = -1
  /** @type {string} */
  let key
  /** @type {string} */
  let value
  /** @type {string} */
  let last

  for (key in props) {
    if (props[key] !== undefined && props[key] !== null) {
      value = serializeAttribute(ctx, key, props[key])
      if (value) values.push(value)
    }
  }

  while (++index < values.length) {
    last = ctx.tight ? values[index].charAt(values[index].length - 1) : null

    // In tight mode, don’t add a space after quoted attributes.
    if (index !== values.length - 1 && last !== '"' && last !== "'") {
      values[index] += ' '
    }
  }

  return values.join('')
}

/**
 * @param {Context} ctx
 * @param {string} key
 * @param {PropertyValue} value
 * @returns {string}
 */
// eslint-disable-next-line complexity
function serializeAttribute(ctx, key, value) {
  const info = find(ctx.schema, key)
  let quote = ctx.quote
  /** @type {string} */
  let result

  if (info.overloadedBoolean && (value === info.attribute || value === '')) {
    value = true
  } else if (
    info.boolean ||
    (info.overloadedBoolean && typeof value !== 'string')
  ) {
    value = Boolean(value)
  }

  if (
    value === undefined ||
    value === null ||
    value === false ||
    (typeof value === 'number' && Number.isNaN(value))
  ) {
    return ''
  }

  const name = stringifyEntities(
    info.attribute,
    Object.assign({}, ctx.entities, {
      // Always encode without parse errors in non-HTML.
      subset:
        constants.name[ctx.schema.space === 'html' ? ctx.valid : 1][ctx.safe]
    })
  )

  // No value.
  // There is currently only one boolean property in SVG: `[download]` on
  // `<a>`.
  // This property does not seem to work in browsers (FF, Sa, Ch), so I can’t
  // test if dropping the value works.
  // But I assume that it should:
  //
  // ```html
  // <!doctype html>
  // <svg viewBox="0 0 100 100">
  //   <a href=https://example.com download>
  //     <circle cx=50 cy=40 r=35 />
  //   </a>
  // </svg>
  // ```
  //
  // See: <https://github.com/wooorm/property-information/blob/main/lib/svg.js>
  if (value === true) return name

  value =
    typeof value === 'object' && 'length' in value
      ? // `spaces` doesn’t accept a second argument, but it’s given here just to
        // keep the code cleaner.
        (info.commaSeparated ? comma_separated_tokens_stringify : stringify)(value, {
          padLeft: !ctx.tightLists
        })
      : String(value)

  if (ctx.collapseEmpty && !value) return name

  // Check unquoted value.
  if (ctx.unquoted) {
    result = stringifyEntities(
      value,
      Object.assign({}, ctx.entities, {
        subset: constants.unquoted[ctx.valid][ctx.safe],
        attribute: true
      })
    )
  }

  // If we don’t want unquoted, or if `value` contains character references when
  // unquoted…
  if (result !== value) {
    // If the alternative is less common than `quote`, switch.
    if (ctx.smart && ccount(value, quote) > ccount(value, ctx.alternative)) {
      quote = ctx.alternative
    }

    result =
      quote +
      stringifyEntities(
        value,
        Object.assign({}, ctx.entities, {
          // Always encode without parse errors in non-HTML.
          subset: (quote === "'" ? constants.single : constants.double)[
            ctx.schema.space === 'html' ? ctx.valid : 1
          ][ctx.safe],
          attribute: true
        })
      ) +
      quote
  }

  // Don’t add a `=` for unquoted empties.
  return name + (result ? '=' + result : result)
}

;// CONCATENATED MODULE: ./node_modules/hast-util-to-html/lib/index.js
/**
 * @typedef {import('./types.js').Node} Node
 * @typedef {import('./types.js').Options} Options
 * @typedef {import('./types.js').Context} Context
 * @typedef {import('./types.js').Quote} Quote
 */






/**
 * @param {Node|Array.<Node>} node
 * @param {Options} [options]
 * @returns {string}
 */
function toHtml(node, options = {}) {
  const quote = options.quote || '"'
  /** @type {Quote} */
  const alternative = quote === '"' ? "'" : '"'

  if (quote !== '"' && quote !== "'") {
    throw new Error('Invalid quote `' + quote + '`, expected `\'` or `"`')
  }

  /** @type {Context} */
  const context = {
    valid: options.allowParseErrors ? 0 : 1,
    safe: options.allowDangerousCharacters ? 0 : 1,
    schema: options.space === 'svg' ? property_information_svg : property_information_html,
    omit: options.omitOptionalTags ? omission_omission : undefined,
    quote,
    alternative,
    smart: options.quoteSmart,
    unquoted: options.preferUnquoted,
    tight: options.tightAttributes,
    upperDoctype: options.upperDoctype,
    tightDoctype: options.tightDoctype,
    bogusComments: options.bogusComments,
    tightLists: options.tightCommaSeparatedLists,
    tightClose: options.tightSelfClosing,
    collapseEmpty: options.collapseEmptyAttributes,
    dangerous: options.allowDangerousHtml,
    voids: options.voids || htmlVoidElements.concat(),
    entities: options.entities || {},
    close: options.closeSelfClosing,
    closeEmpty: options.closeEmptyElements
  }

  return tree_one(
    context,
    // @ts-ignore Assume `node` does not contain a root.
    Array.isArray(node) ? {type: 'root', children: node} : node,
    null,
    null
  )
}

;// CONCATENATED MODULE: ./node_modules/rehype-stringify/lib/index.js
/**
 * @typedef {import('hast').Root} Root
 * @typedef {Root|Root['children'][number]} Node
 * @typedef {import('hast-util-to-html').Options} Options
 */



/** @type {import('unified').Plugin<[Options?]|Array<void>, Node, string>} */
function rehypeStringify(config) {
  const processorSettings = /** @type {Options} */ (this.data('settings'))
  const settings = Object.assign({}, processorSettings, config)

  Object.assign(this, {Compiler: compiler})

  /**
   * @type {import('unified').CompilerFunction<Node, string>}
   */
  function compiler(tree) {
    return toHtml(tree, settings)
  }
}

// EXTERNAL MODULE: ./node_modules/parse5/lib/parser/index.js
var lib_parser = __webpack_require__(14298);
;// CONCATENATED MODULE: ./node_modules/hast-util-parse-selector/index.js
/**
 * @typedef {import('hast').Properties} Properties
 * @typedef {import('hast').Element} Element
 */

var hast_util_parse_selector_search = /[#.]/g

/**
 * Create a hast element from a simple CSS selector.
 *
 * @param selector A simple CSS selector.
 *   Can contain a tag-name (`foo`), classes (`.bar`), and an ID (`#baz`).
 *   Multiple classes are allowed.
 *   Uses the last ID if multiple IDs are found.
 * @param [defaultTagName='div'] Tag name to use if `selector` does not specify one.
 */
const parseSelector =
  /**
   * @type {(
   *  <Selector extends string, DefaultTagName extends string = 'div'>(selector?: Selector, defaultTagName?: DefaultTagName) => Element & {tagName: import('./extract.js').ExtractTagName<Selector, DefaultTagName>}
   * )}
   */
  (
    /**
     * @param {string} [selector]
     * @param {string} [defaultTagName='div']
     * @returns {Element}
     */
    function (selector, defaultTagName = 'div') {
      var value = selector || ''
      /** @type {Properties} */
      var props = {}
      var start = 0
      /** @type {string} */
      var subvalue
      /** @type {string} */
      var previous
      /** @type {RegExpMatchArray} */
      var match

      while (start < value.length) {
        hast_util_parse_selector_search.lastIndex = start
        match = hast_util_parse_selector_search.exec(value)
        subvalue = value.slice(start, match ? match.index : value.length)

        if (subvalue) {
          if (!previous) {
            defaultTagName = subvalue
          } else if (previous === '#') {
            props.id = subvalue
          } else if (Array.isArray(props.className)) {
            props.className.push(subvalue)
          } else {
            props.className = [subvalue]
          }

          start += subvalue.length
        }

        if (match) {
          previous = match[0]
          start++
        }
      }

      return {
        type: 'element',
        tagName: defaultTagName,
        properties: props,
        children: []
      }
    }
  )

;// CONCATENATED MODULE: ./node_modules/hastscript/lib/core.js
/**
 * @typedef {import('hast').Root} Root
 * @typedef {import('hast').Element} Element
 * @typedef {import('hast').Properties} Properties
 * @typedef {Root['children'][number]} Child
 * @typedef {Child|Root} Node
 * @typedef {import('property-information').Info} Info
 * @typedef {import('property-information').Schema} Schema
 *
 * @typedef {Root|Element} HResult
 * @typedef {string|number} HStyleValue
 * @typedef {Object.<string, HStyleValue>} HStyle
 * @typedef {string|number|boolean|null|undefined} HPrimitiveValue
 * @typedef {Array.<string|number>} HArrayValue
 * @typedef {HPrimitiveValue|HArrayValue} HPropertyValue
 * @typedef {{[property: string]: HPropertyValue|HStyle}} HProperties
 *
 * @typedef {string|number|null|undefined} HPrimitiveChild
 * @typedef {Array.<Node|HPrimitiveChild>} HArrayChild
 * @typedef {Node|HPrimitiveChild|HArrayChild} HChild
 */






const buttonTypes = new Set(['menu', 'submit', 'reset', 'button'])

const core_own = {}.hasOwnProperty

/**
 * @param {Schema} schema
 * @param {string} defaultTagName
 * @param {Array.<string>} [caseSensitive]
 */
function lib_core_core(schema, defaultTagName, caseSensitive) {
  const adjust = caseSensitive && createAdjustMap(caseSensitive)

  const h =
    /**
     * @type {{
     *   (): Root
     *   (selector: null|undefined, ...children: HChild[]): Root
     *   (selector: string, properties?: HProperties, ...children: HChild[]): Element
     *   (selector: string, ...children: HChild[]): Element
     * }}
     */
    (
      /**
       * Hyperscript compatible DSL for creating virtual hast trees.
       *
       * @param {string|null} [selector]
       * @param {HProperties|HChild} [properties]
       * @param {HChild[]} children
       * @returns {HResult}
       */
      function (selector, properties, ...children) {
        let index = -1
        /** @type {HResult} */
        let node

        if (selector === undefined || selector === null) {
          node = {type: 'root', children: []}
          // @ts-expect-error Properties are not supported for roots.
          children.unshift(properties)
        } else {
          node = parseSelector(selector, defaultTagName)
          // Normalize the name.
          node.tagName = node.tagName.toLowerCase()
          if (adjust && core_own.call(adjust, node.tagName)) {
            node.tagName = adjust[node.tagName]
          }

          // Handle props.
          if (isProperties(properties, node.tagName)) {
            /** @type {string} */
            let key

            for (key in properties) {
              if (core_own.call(properties, key)) {
                // @ts-expect-error `node.properties` is set.
                addProperty(schema, node.properties, key, properties[key])
              }
            }
          } else {
            children.unshift(properties)
          }
        }

        // Handle children.
        while (++index < children.length) {
          addChild(node.children, children[index])
        }

        if (node.type === 'element' && node.tagName === 'template') {
          node.content = {type: 'root', children: node.children}
          node.children = []
        }

        return node
      }
    )

  return h
}

/**
 * @param {HProperties|HChild} value
 * @param {string} name
 * @returns {value is HProperties}
 */
function isProperties(value, name) {
  if (
    value === null ||
    value === undefined ||
    typeof value !== 'object' ||
    Array.isArray(value)
  ) {
    return false
  }

  if (name === 'input' || !value.type || typeof value.type !== 'string') {
    return true
  }

  if ('children' in value && Array.isArray(value.children)) {
    return false
  }

  if (name === 'button') {
    return buttonTypes.has(value.type.toLowerCase())
  }

  return !('value' in value)
}

/**
 * @param {Schema} schema
 * @param {Properties} properties
 * @param {string} key
 * @param {HStyle|HPropertyValue} value
 * @returns {void}
 */
function addProperty(schema, properties, key, value) {
  const info = find(schema, key)
  let index = -1
  /** @type {HPropertyValue} */
  let result

  // Ignore nullish and NaN values.
  if (value === undefined || value === null) return

  if (typeof value === 'number') {
    // Ignore NaN.
    if (Number.isNaN(value)) return

    result = value
  }
  // Booleans.
  else if (typeof value === 'boolean') {
    result = value
  }
  // Handle list values.
  else if (typeof value === 'string') {
    if (info.spaceSeparated) {
      result = space_separated_tokens_parse(value)
    } else if (info.commaSeparated) {
      result = comma_separated_tokens_parse(value)
    } else if (info.commaOrSpaceSeparated) {
      result = space_separated_tokens_parse(comma_separated_tokens_parse(value).join(' '))
    } else {
      result = parsePrimitive(info, info.property, value)
    }
  } else if (Array.isArray(value)) {
    result = value.concat()
  } else {
    result = info.property === 'style' ? style(value) : String(value)
  }

  if (Array.isArray(result)) {
    /** @type {Array.<string|number>} */
    const finalResult = []

    while (++index < result.length) {
      // @ts-expect-error Assume no booleans in array.
      finalResult[index] = parsePrimitive(info, info.property, result[index])
    }

    result = finalResult
  }

  // Class names (which can be added both on the `selector` and here).
  if (info.property === 'className' && Array.isArray(properties.className)) {
    // @ts-expect-error Assume no booleans in `className`.
    result = properties.className.concat(result)
  }

  properties[info.property] = result
}

/**
 * @param {Array.<Child>} nodes
 * @param {HChild} value
 * @returns {void}
 */
function addChild(nodes, value) {
  let index = -1

  if (value === undefined || value === null) {
    // Empty.
  } else if (typeof value === 'string' || typeof value === 'number') {
    nodes.push({type: 'text', value: String(value)})
  } else if (Array.isArray(value)) {
    while (++index < value.length) {
      addChild(nodes, value[index])
    }
  } else if (typeof value === 'object' && 'type' in value) {
    if (value.type === 'root') {
      addChild(nodes, value.children)
    } else {
      nodes.push(value)
    }
  } else {
    throw new Error('Expected node, nodes, or string, got `' + value + '`')
  }
}

/**
 * Parse a single primitives.
 *
 * @param {Info} info
 * @param {string} name
 * @param {HPrimitiveValue} value
 * @returns {HPrimitiveValue}
 */
function parsePrimitive(info, name, value) {
  if (typeof value === 'string') {
    if (info.number && value && !Number.isNaN(Number(value))) {
      return Number(value)
    }

    if (
      (info.boolean || info.overloadedBoolean) &&
      (value === '' || normalize_normalize(value) === normalize_normalize(name))
    ) {
      return true
    }
  }

  return value
}

/**
 * @param {HStyle} value
 * @returns {string}
 */
function style(value) {
  /** @type {Array.<string>} */
  const result = []
  /** @type {string} */
  let key

  for (key in value) {
    if (core_own.call(value, key)) {
      result.push([key, value[key]].join(': '))
    }
  }

  return result.join('; ')
}

/**
 * @param {Array.<string>} values
 * @returns {Object.<string, string>}
 */
function createAdjustMap(values) {
  /** @type {Object.<string, string>} */
  const result = {}
  let index = -1

  while (++index < values.length) {
    result[values[index].toLowerCase()] = values[index]
  }

  return result
}

;// CONCATENATED MODULE: ./node_modules/hastscript/lib/svg-case-sensitive-tag-names.js
const svgCaseSensitiveTagNames = [
  'altGlyph',
  'altGlyphDef',
  'altGlyphItem',
  'animateColor',
  'animateMotion',
  'animateTransform',
  'clipPath',
  'feBlend',
  'feColorMatrix',
  'feComponentTransfer',
  'feComposite',
  'feConvolveMatrix',
  'feDiffuseLighting',
  'feDisplacementMap',
  'feDistantLight',
  'feDropShadow',
  'feFlood',
  'feFuncA',
  'feFuncB',
  'feFuncG',
  'feFuncR',
  'feGaussianBlur',
  'feImage',
  'feMerge',
  'feMergeNode',
  'feMorphology',
  'feOffset',
  'fePointLight',
  'feSpecularLighting',
  'feSpotLight',
  'feTile',
  'feTurbulence',
  'foreignObject',
  'glyphRef',
  'linearGradient',
  'radialGradient',
  'solidColor',
  'textArea',
  'textPath'
]

;// CONCATENATED MODULE: ./node_modules/hastscript/lib/svg.js
/**
 * @typedef {import('./core.js').HChild} Child Acceptable child value
 * @typedef {import('./core.js').HProperties} Properties Acceptable properties value.
 *
 * @typedef {import('./jsx-classic').Element} s.JSX.Element
 * @typedef {import('./jsx-classic').IntrinsicAttributes} s.JSX.IntrinsicAttributes
 * @typedef {import('./jsx-classic').IntrinsicElements} s.JSX.IntrinsicElements
 * @typedef {import('./jsx-classic').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute
 */





const s = lib_core_core(property_information_svg, 'g', svgCaseSensitiveTagNames)

;// CONCATENATED MODULE: ./node_modules/hastscript/lib/html.js
/**
 * @typedef {import('./core.js').HChild} Child Acceptable child value
 * @typedef {import('./core.js').HProperties} Properties Acceptable properties value.
 *
 * @typedef {import('./jsx-classic').Element} h.JSX.Element
 * @typedef {import('./jsx-classic').IntrinsicAttributes} h.JSX.IntrinsicAttributes
 * @typedef {import('./jsx-classic').IntrinsicElements} h.JSX.IntrinsicElements
 * @typedef {import('./jsx-classic').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute
 */




const h = lib_core_core(property_information_html, 'div')

;// CONCATENATED MODULE: ./node_modules/vfile-location/index.js
/**
 * @typedef {import('unist').Point} Point
 * @typedef {import('vfile').VFile} VFile
 *
 * @typedef {Pick<Point, 'line'|'column'>} PositionalPoint
 * @typedef {Required<Point>} FullPoint
 * @typedef {NonNullable<Point['offset']>} Offset
 */

/**
 * Get transform functions for the given `document`.
 *
 * @param {string|Uint8Array|VFile} file
 */
function vfile_location_location(file) {
  var value = String(file)
  /** @type {Array.<number>} */
  var indices = []
  var search = /\r?\n|\r/g

  while (search.test(value)) {
    indices.push(search.lastIndex)
  }

  indices.push(value.length + 1)

  return {toPoint, toOffset}

  /**
   * Get the line and column-based `point` for `offset` in the bound indices.
   * Returns a point with `undefined` values when given invalid or out of bounds
   * input.
   *
   * @param {Offset} offset
   * @returns {FullPoint}
   */
  function toPoint(offset) {
    var index = -1

    if (offset > -1 && offset < indices[indices.length - 1]) {
      while (++index < indices.length) {
        if (indices[index] > offset) {
          return {
            line: index + 1,
            column: offset - (indices[index - 1] || 0) + 1,
            offset
          }
        }
      }
    }

    return {line: undefined, column: undefined, offset: undefined}
  }

  /**
   * Get the `offset` for a line and column-based `point` in the bound indices.
   * Returns `-1` when given invalid or out of bounds input.
   *
   * @param {PositionalPoint} point
   * @returns {Offset}
   */
  function toOffset(point) {
    var line = point && point.line
    var column = point && point.column
    /** @type {number} */
    var offset

    if (
      typeof line === 'number' &&
      typeof column === 'number' &&
      !Number.isNaN(line) &&
      !Number.isNaN(column) &&
      line - 1 in indices
    ) {
      offset = (indices[line - 2] || 0) + column - 1 || 0
    }

    return offset > -1 && offset < indices[indices.length - 1] ? offset : -1
  }
}

;// CONCATENATED MODULE: ./node_modules/web-namespaces/index.js
/**
 * Map of web namespaces.
 *
 * @type {Record<string, string>}
 */
const webNamespaces = {
  html: 'http://www.w3.org/1999/xhtml',
  mathml: 'http://www.w3.org/1998/Math/MathML',
  svg: 'http://www.w3.org/2000/svg',
  xlink: 'http://www.w3.org/1999/xlink',
  xml: 'http://www.w3.org/XML/1998/namespace',
  xmlns: 'http://www.w3.org/2000/xmlns/'
}

;// CONCATENATED MODULE: ./node_modules/hast-util-from-parse5/lib/index.js
/**
 * @typedef {import('vfile').VFile} VFile
 * @typedef {import('property-information').Schema} Schema
 * @typedef {import('unist').Position} Position
 * @typedef {import('unist').Point} Point
 * @typedef {import('hast').Parent} Parent
 * @typedef {import('hast').Element} Element
 * @typedef {import('hast').Root} Root
 * @typedef {import('hast').Text} Text
 * @typedef {import('hast').Comment} Comment
 * @typedef {import('hast').DocType} Doctype
 * @typedef {Parent['children'][number]} Child
 * @typedef {Element['children'][number]} ElementChild
 * @typedef {Child|Root} Node
 * @typedef {import('parse5').Document} P5Document
 * @typedef {import('parse5').DocumentType} P5Doctype
 * @typedef {import('parse5').CommentNode} P5Comment
 * @typedef {import('parse5').TextNode} P5Text
 * @typedef {import('parse5').Element} P5Element
 * @typedef {import('parse5').ElementLocation} P5ElementLocation
 * @typedef {import('parse5').Location} P5Location
 * @typedef {import('parse5').Attribute} P5Attribute
 * @typedef {import('parse5').Node} P5Node
 *
 * @typedef {'html'|'svg'} Space
 *
 * @callback Handler
 * @param {Context} ctx
 * @param {P5Node} node
 * @param {Array.<Child>} [children]
 * @returns {Node}
 *
 * @typedef Options
 * @property {Space} [space='html'] Whether the root of the tree is in the `'html'` or `'svg'` space. If an element in with the SVG namespace is found in `ast`, `fromParse5` automatically switches to the SVG space when entering the element, and switches back when leaving
 * @property {VFile} [file] `VFile`, used to add positional information to nodes. If given, the file should have the original HTML source as its contents
 * @property {boolean} [verbose=false] Whether to add extra positional information about starting tags, closing tags, and attributes to elements. Note: not used without `file`
 *
 * @typedef Context
 * @property {Schema} schema
 * @property {VFile|undefined} file
 * @property {boolean|undefined} verbose
 * @property {boolean} location
 */






const hast_util_from_parse5_lib_own = {}.hasOwnProperty

// Handlers.
const map = {
  '#document': lib_root,
  '#document-fragment': lib_root,
  '#text': lib_text,
  '#comment': lib_comment,
  '#documentType': lib_doctype
}

/**
 * Transform Parse5’s AST to a hast tree.
 *
 * @param {P5Node} ast
 * @param {Options|VFile} [options]
 */
function fromParse5(ast, options = {}) {
  /** @type {Options} */
  let settings
  /** @type {VFile|undefined} */
  let file

  if (isFile(options)) {
    file = options
    settings = {}
  } else {
    file = options.file
    settings = options
  }

  return transform(
    {
      schema: settings.space === 'svg' ? property_information_svg : property_information_html,
      file,
      verbose: settings.verbose,
      location: false
    },
    ast
  )
}

/**
 * Transform children.
 *
 * @param {Context} ctx
 * @param {P5Node} ast
 * @returns {Node}
 */
function transform(ctx, ast) {
  const schema = ctx.schema
  /** @type {Handler} */
  // @ts-expect-error: index is fine.
  const fn = hast_util_from_parse5_lib_own.call(map, ast.nodeName) ? map[ast.nodeName] : lib_element
  /** @type {Array.<Child>|undefined} */
  let children

  // Element.
  if ('tagName' in ast) {
    ctx.schema = ast.namespaceURI === webNamespaces.svg ? property_information_svg : property_information_html
  }

  if ('childNodes' in ast) {
    children = nodes(ctx, ast.childNodes)
  }

  const result = fn(ctx, ast, children)

  if ('sourceCodeLocation' in ast && ast.sourceCodeLocation && ctx.file) {
    // @ts-expect-error It’s fine.
    const position = createLocation(ctx, result, ast.sourceCodeLocation)

    if (position) {
      ctx.location = true
      result.position = position
    }
  }

  ctx.schema = schema

  return result
}

/**
 * Transform children.
 *
 * @param {Context} ctx
 * @param {Array.<P5Node>} children
 * @returns {Array.<Child>}
 */
function nodes(ctx, children) {
  let index = -1
  /** @type {Array.<Child>} */
  const result = []

  while (++index < children.length) {
    // @ts-expect-error Assume no roots in children.
    result[index] = transform(ctx, children[index])
  }

  return result
}

/**
 * Transform a document.
 * Stores `ast.quirksMode` in `node.data.quirksMode`.
 *
 * @type {Handler}
 * @param {P5Document} ast
 * @param {Array.<Child>} children
 * @returns {Root}
 */
function lib_root(ctx, ast, children) {
  /** @type {Root} */
  const result = {
    type: 'root',
    children,
    data: {quirksMode: ast.mode === 'quirks' || ast.mode === 'limited-quirks'}
  }

  if (ctx.file && ctx.location) {
    const doc = String(ctx.file)
    const loc = vfile_location_location(doc)
    result.position = {
      start: loc.toPoint(0),
      end: loc.toPoint(doc.length)
    }
  }

  return result
}

/**
 * Transform a doctype.
 *
 * @type {Handler}
 * @returns {Doctype}
 */
function lib_doctype() {
  // @ts-expect-error Types are out of date.
  return {type: 'doctype'}
}

/**
 * Transform a text.
 *
 * @type {Handler}
 * @param {P5Text} ast
 * @returns {Text}
 */
function lib_text(_, ast) {
  return {type: 'text', value: ast.value}
}

/**
 * Transform a comment.
 *
 * @type {Handler}
 * @param {P5Comment} ast
 * @returns {Comment}
 */
function lib_comment(_, ast) {
  return {type: 'comment', value: ast.data}
}

/**
 * Transform an element.
 *
 * @type {Handler}
 * @param {P5Element} ast
 * @param {Array.<ElementChild>} children
 * @returns {Element}
 */
function lib_element(ctx, ast, children) {
  const fn = ctx.schema.space === 'svg' ? s : h
  let index = -1
  /** @type {Object.<string, string>} */
  const props = {}

  while (++index < ast.attrs.length) {
    const attribute = ast.attrs[index]
    props[(attribute.prefix ? attribute.prefix + ':' : '') + attribute.name] =
      attribute.value
  }

  const result = fn(ast.tagName, props, children)

  if (result.tagName === 'template' && 'content' in ast) {
    const pos = ast.sourceCodeLocation
    const startTag = pos && pos.startTag && lib_position(pos.startTag)
    const endTag = pos && pos.endTag && lib_position(pos.endTag)

    /** @type {Root} */
    // @ts-expect-error Types are wrong.
    const content = transform(ctx, ast.content)

    if (startTag && endTag && ctx.file) {
      content.position = {start: startTag.end, end: endTag.start}
    }

    result.content = content
  }

  return result
}

/**
 * Create clean positional information.
 *
 * @param {Context} ctx
 * @param {Node} node
 * @param {P5ElementLocation} location
 * @returns {Position|null}
 */
function createLocation(ctx, node, location) {
  const result = lib_position(location)

  if (node.type === 'element') {
    const tail = node.children[node.children.length - 1]

    // Bug for unclosed with children.
    // See: <https://github.com/inikulin/parse5/issues/109>.
    if (
      result &&
      !location.endTag &&
      tail &&
      tail.position &&
      tail.position.end
    ) {
      result.end = Object.assign({}, tail.position.end)
    }

    if (ctx.verbose) {
      /** @type {Object.<string, Position|null>} */
      const props = {}
      /** @type {string} */
      let key

      for (key in location.attrs) {
        if (hast_util_from_parse5_lib_own.call(location.attrs, key)) {
          props[find(ctx.schema, key).property] = lib_position(location.attrs[key])
        }
      }

      node.data = {
        position: {
          opening: lib_position(location.startTag),
          closing: location.endTag ? lib_position(location.endTag) : null,
          properties: props
        }
      }
    }
  }

  return result
}

/**
 * @param {P5Location} loc
 * @returns {Position|null}
 */
function lib_position(loc) {
  const start = lib_point({
    line: loc.startLine,
    column: loc.startCol,
    offset: loc.startOffset
  })
  const end = lib_point({
    line: loc.endLine,
    column: loc.endCol,
    offset: loc.endOffset
  })
  // @ts-expect-error `null` is fine.
  return start || end ? {start, end} : null
}

/**
 * @param {Point} point
 * @returns {Point|null}
 */
function lib_point(point) {
  return point.line && point.column ? point : null
}

/**
 * @param {VFile|Options} value
 * @returns {value is VFile}
 */
function isFile(value) {
  return 'messages' in value
}

;// CONCATENATED MODULE: ./node_modules/rehype-parse/lib/errors.js
const errors = {
  abandonedHeadElementChild: {
    reason: 'Unexpected metadata element after head',
    description:
      'Unexpected element after head. Expected the element before `</head>`',
    url: false
  },
  abruptClosingOfEmptyComment: {
    reason: 'Unexpected abruptly closed empty comment',
    description: 'Unexpected `>` or `->`. Expected `-->` to close comments'
  },
  abruptDoctypePublicIdentifier: {
    reason: 'Unexpected abruptly closed public identifier',
    description:
      'Unexpected `>`. Expected a closing `"` or `\'` after the public identifier'
  },
  abruptDoctypeSystemIdentifier: {
    reason: 'Unexpected abruptly closed system identifier',
    description:
      'Unexpected `>`. Expected a closing `"` or `\'` after the identifier identifier'
  },
  absenceOfDigitsInNumericCharacterReference: {
    reason: 'Unexpected non-digit at start of numeric character reference',
    description:
      'Unexpected `%c`. Expected `[0-9]` for decimal references or `[0-9a-fA-F]` for hexadecimal references'
  },
  cdataInHtmlContent: {
    reason: 'Unexpected CDATA section in HTML',
    description:
      'Unexpected `<![CDATA[` in HTML. Remove it, use a comment, or encode special characters instead'
  },
  characterReferenceOutsideUnicodeRange: {
    reason: 'Unexpected too big numeric character reference',
    description:
      'Unexpectedly high character reference. Expected character references to be at most hexadecimal 10ffff (or decimal 1114111)'
  },
  closingOfElementWithOpenChildElements: {
    reason: 'Unexpected closing tag with open child elements',
    description:
      'Unexpectedly closing tag. Expected other tags to be closed first',
    url: false
  },
  controlCharacterInInputStream: {
    reason: 'Unexpected control character',
    description:
      'Unexpected control character `%x`. Expected a non-control code point, 0x00, or ASCII whitespace'
  },
  controlCharacterReference: {
    reason: 'Unexpected control character reference',
    description:
      'Unexpectedly control character in reference. Expected a non-control code point, 0x00, or ASCII whitespace'
  },
  disallowedContentInNoscriptInHead: {
    reason: 'Disallowed content inside `<noscript>` in `<head>`',
    description:
      'Unexpected text character `%c`. Only use text in `<noscript>`s in `<body>`',
    url: false
  },
  duplicateAttribute: {
    reason: 'Unexpected duplicate attribute',
    description:
      'Unexpectedly double attribute. Expected attributes to occur only once'
  },
  endTagWithAttributes: {
    reason: 'Unexpected attribute on closing tag',
    description: 'Unexpected attribute. Expected `>` instead'
  },
  endTagWithTrailingSolidus: {
    reason: 'Unexpected slash at end of closing tag',
    description: 'Unexpected `%c-1`. Expected `>` instead'
  },
  endTagWithoutMatchingOpenElement: {
    reason: 'Unexpected unopened end tag',
    description: 'Unexpected end tag. Expected no end tag or another end tag',
    url: false
  },
  eofBeforeTagName: {
    reason: 'Unexpected end of file',
    description: 'Unexpected end of file. Expected tag name instead'
  },
  eofInCdata: {
    reason: 'Unexpected end of file in CDATA',
    description: 'Unexpected end of file. Expected `]]>` to close the CDATA'
  },
  eofInComment: {
    reason: 'Unexpected end of file in comment',
    description: 'Unexpected end of file. Expected `-->` to close the comment'
  },
  eofInDoctype: {
    reason: 'Unexpected end of file in doctype',
    description:
      'Unexpected end of file. Expected a valid doctype (such as `<!doctype html>`)'
  },
  eofInElementThatCanContainOnlyText: {
    reason: 'Unexpected end of file in element that can only contain text',
    description: 'Unexpected end of file. Expected text or a closing tag',
    url: false
  },
  eofInScriptHtmlCommentLikeText: {
    reason: 'Unexpected end of file in comment inside script',
    description: 'Unexpected end of file. Expected `-->` to close the comment'
  },
  eofInTag: {
    reason: 'Unexpected end of file in tag',
    description: 'Unexpected end of file. Expected `>` to close the tag'
  },
  incorrectlyClosedComment: {
    reason: 'Incorrectly closed comment',
    description: 'Unexpected `%c-1`. Expected `-->` to close the comment'
  },
  incorrectlyOpenedComment: {
    reason: 'Incorrectly opened comment',
    description: 'Unexpected `%c`. Expected `<!--` to open the comment'
  },
  invalidCharacterSequenceAfterDoctypeName: {
    reason: 'Invalid sequence after doctype name',
    description: 'Unexpected sequence at `%c`. Expected `public` or `system`'
  },
  invalidFirstCharacterOfTagName: {
    reason: 'Invalid first character in tag name',
    description: 'Unexpected `%c`. Expected an ASCII letter instead'
  },
  misplacedDoctype: {
    reason: 'Misplaced doctype',
    description: 'Unexpected doctype. Expected doctype before head',
    url: false
  },
  misplacedStartTagForHeadElement: {
    reason: 'Misplaced `<head>` start tag',
    description:
      'Unexpected start tag `<head>`. Expected `<head>` directly after doctype',
    url: false
  },
  missingAttributeValue: {
    reason: 'Missing attribute value',
    description:
      'Unexpected `%c-1`. Expected an attribute value or no `%c-1` instead'
  },
  missingDoctype: {
    reason: 'Missing doctype before other content',
    description: 'Expected a `<!doctype html>` before anything else',
    url: false
  },
  missingDoctypeName: {
    reason: 'Missing doctype name',
    description: 'Unexpected doctype end at `%c`. Expected `html` instead'
  },
  missingDoctypePublicIdentifier: {
    reason: 'Missing public identifier in doctype',
    description: 'Unexpected `%c`. Expected identifier for `public` instead'
  },
  missingDoctypeSystemIdentifier: {
    reason: 'Missing system identifier in doctype',
    description:
      'Unexpected `%c`. Expected identifier for `system` instead (suggested: `"about:legacy-compat"`)'
  },
  missingEndTagName: {
    reason: 'Missing name in end tag',
    description: 'Unexpected `%c`. Expected an ASCII letter instead'
  },
  missingQuoteBeforeDoctypePublicIdentifier: {
    reason: 'Missing quote before public identifier in doctype',
    description: 'Unexpected `%c`. Expected `"` or `\'` instead'
  },
  missingQuoteBeforeDoctypeSystemIdentifier: {
    reason: 'Missing quote before system identifier in doctype',
    description: 'Unexpected `%c`. Expected `"` or `\'` instead'
  },
  missingSemicolonAfterCharacterReference: {
    reason: 'Missing semicolon after character reference',
    description: 'Unexpected `%c`. Expected `;` instead'
  },
  missingWhitespaceAfterDoctypePublicKeyword: {
    reason: 'Missing whitespace after public identifier in doctype',
    description: 'Unexpected `%c`. Expected ASCII whitespace instead'
  },
  missingWhitespaceAfterDoctypeSystemKeyword: {
    reason: 'Missing whitespace after system identifier in doctype',
    description: 'Unexpected `%c`. Expected ASCII whitespace instead'
  },
  missingWhitespaceBeforeDoctypeName: {
    reason: 'Missing whitespace before doctype name',
    description: 'Unexpected `%c`. Expected ASCII whitespace instead'
  },
  missingWhitespaceBetweenAttributes: {
    reason: 'Missing whitespace between attributes',
    description: 'Unexpected `%c`. Expected ASCII whitespace instead'
  },
  missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers: {
    reason:
      'Missing whitespace between public and system identifiers in doctype',
    description: 'Unexpected `%c`. Expected ASCII whitespace instead'
  },
  nestedComment: {
    reason: 'Unexpected nested comment',
    description: 'Unexpected `<!--`. Expected `-->`'
  },
  nestedNoscriptInHead: {
    reason: 'Unexpected nested `<noscript>` in `<head>`',
    description:
      'Unexpected `<noscript>`. Expected a closing tag or a meta element',
    url: false
  },
  nonConformingDoctype: {
    reason: 'Unexpected non-conforming doctype declaration',
    description:
      'Expected `<!doctype html>` or `<!doctype html system "about:legacy-compat">`',
    url: false
  },
  nonVoidHtmlElementStartTagWithTrailingSolidus: {
    reason: 'Unexpected trailing slash on start tag of non-void element',
    description: 'Unexpected `/`. Expected `>` instead'
  },
  noncharacterCharacterReference: {
    reason:
      'Unexpected noncharacter code point referenced by character reference',
    description: 'Unexpected code point. Do not use noncharacters in HTML'
  },
  noncharacterInInputStream: {
    reason: 'Unexpected noncharacter character',
    description: 'Unexpected code point `%x`. Do not use noncharacters in HTML'
  },
  nullCharacterReference: {
    reason: 'Unexpected NULL character referenced by character reference',
    description: 'Unexpected code point. Do not use NULL characters in HTML'
  },
  openElementsLeftAfterEof: {
    reason: 'Unexpected end of file',
    description: 'Unexpected end of file. Expected closing tag instead',
    url: false
  },
  surrogateCharacterReference: {
    reason: 'Unexpected surrogate character referenced by character reference',
    description:
      'Unexpected code point. Do not use lone surrogate characters in HTML'
  },
  surrogateInInputStream: {
    reason: 'Unexpected surrogate character',
    description:
      'Unexpected code point `%x`. Do not use lone surrogate characters in HTML'
  },
  unexpectedCharacterAfterDoctypeSystemIdentifier: {
    reason: 'Invalid character after system identifier in doctype',
    description: 'Unexpected character at `%c`. Expected `>`'
  },
  unexpectedCharacterInAttributeName: {
    reason: 'Unexpected character in attribute name',
    description:
      'Unexpected `%c`. Expected whitespace, `/`, `>`, `=`, or probably an ASCII letter'
  },
  unexpectedCharacterInUnquotedAttributeValue: {
    reason: 'Unexpected character in unquoted attribute value',
    description: 'Unexpected `%c`. Quote the attribute value to include it'
  },
  unexpectedEqualsSignBeforeAttributeName: {
    reason: 'Unexpected equals sign before attribute name',
    description: 'Unexpected `%c`. Add an attribute name before it'
  },
  unexpectedNullCharacter: {
    reason: 'Unexpected NULL character',
    description:
      'Unexpected code point `%x`. Do not use NULL characters in HTML'
  },
  unexpectedQuestionMarkInsteadOfTagName: {
    reason: 'Unexpected question mark instead of tag name',
    description: 'Unexpected `%c`. Expected an ASCII letter instead'
  },
  unexpectedSolidusInTag: {
    reason: 'Unexpected slash in tag',
    description:
      'Unexpected `%c-1`. Expected it followed by `>` or in a quoted attribute value'
  },
  unknownNamedCharacterReference: {
    reason: 'Unexpected unknown named character reference',
    description:
      'Unexpected character reference. Expected known named character references'
  }
}

;// CONCATENATED MODULE: ./node_modules/rehype-parse/lib/index.js
/**
 * @typedef {import('hast').Root} Root
 * @typedef {Pick<import('hast-util-from-parse5').Options, 'space' | 'verbose'>} FromParse5Options
 *
 * @typedef {keyof errors} ErrorCode
 * @typedef {0|1|2|boolean|null|undefined} ErrorSeverity
 * @typedef {Partial<Record<ErrorCode, ErrorSeverity>>} ErrorFields
 *
 * @typedef ParseFields
 * @property {boolean|undefined} [fragment=false]
 *   Specify whether to parse a fragment, instead of a complete document.
 *   In document mode, unopened `html`, `head`, and `body` elements are opened
 *   in just the right places.
 * @property {boolean|undefined} [emitParseErrors=false]
 *   > ⚠️ Parse errors are currently being added to HTML.
 *   > Not all errors emitted by parse5 (or rehype-parse) are specced yet.
 *   > Some documentation may still be missing.
 *
 *   Emit parse errors while parsing on the vfile.
 *   Setting this to `true` starts emitting HTML parse errors.
 *
 *   Specific rules can be turned off by setting them to `false` (or `0`).
 *   The default, when `emitParseErrors: true`, is `true` (or `1`), and means
 *   that rules emit as warnings.
 *   Rules can also be configured with `2`, to turn them into fatal errors.
 *
 * @typedef {FromParse5Options & ParseFields & ErrorFields} Options
 */

// @ts-expect-error: remove when typed




const lib_base = 'https://html.spec.whatwg.org/multipage/parsing.html#parse-error-'

const fatalities = {2: true, 1: false, 0: null}

/** @type {import('unified').Plugin<[Options?] | Array<void>, string, Root>} */
function rehypeParse(options) {
  const processorSettings = /** @type {Options} */ (this.data('settings'))
  const settings = Object.assign({}, processorSettings, options)

  Object.assign(this, {Parser: parser})

  /** @type {import('unified').ParserFunction<Root>} */
  function parser(doc, file) {
    const fn = settings.fragment ? 'parseFragment' : 'parse'
    const onParseError = settings.emitParseErrors ? onerror : null
    const parse5 = new lib_parser({
      sourceCodeLocationInfo: true,
      onParseError,
      scriptingEnabled: false
    })

    // @ts-expect-error: `parse5` returns document or fragment, which are always
    // mapped to roots.
    return fromParse5(parse5[fn](doc), {
      space: settings.space,
      file,
      verbose: settings.verbose
    })

    /**
     * @param {{code: string, startLine: number, startCol: number, startOffset: number, endLine: number, endCol: number, endOffset: number}} error
     */
    function onerror(error) {
      const code = error.code
      const name = lib_camelcase(code)
      const setting = settings[name]
      const config = setting === undefined || setting === null ? true : setting
      const level = typeof config === 'number' ? config : config ? 1 : 0
      const start = {
        line: error.startLine,
        column: error.startCol,
        offset: error.startOffset
      }
      const end = {
        line: error.endLine,
        column: error.endCol,
        offset: error.endOffset
      }
      if (level) {
        /* c8 ignore next */
        const info = errors[name] || {reason: '', description: '', url: ''}
        const message = file.message(format(info.reason), {start, end})
        message.source = 'parse-error'
        message.ruleId = code
        message.fatal = fatalities[level]
        message.note = format(info.description)
        message.url = 'url' in info && info.url === false ? null : lib_base + code
      }

      /**
       * @param {string} value
       * @returns {string}
       */
      function format(value) {
        return value
          .replace(/%c(?:-(\d+))?/g, (_, /** @type {string} */ $1) => {
            const offset = $1 ? -Number.parseInt($1, 10) : 0
            const char = doc.charAt(error.startOffset + offset)
            return char === '`' ? '` ` `' : char
          })
          .replace(
            /%x/g,
            () =>
              '0x' +
              doc.charCodeAt(error.startOffset).toString(16).toUpperCase()
          )
      }
    }
  }
}

/**
 * @param {string} value
 * @returns {ErrorCode}
 */
function lib_camelcase(value) {
  // @ts-expect-error: this returns a valid error code.
  return value.replace(/-[a-z]/g, ($0) => $0.charAt(1).toUpperCase())
}

;// CONCATENATED MODULE: ./node_modules/property-information/lib/hast-to-react.js
const hastToReact = {
  classId: 'classID',
  dataType: 'datatype',
  itemId: 'itemID',
  strokeDashArray: 'strokeDasharray',
  strokeDashOffset: 'strokeDashoffset',
  strokeLineCap: 'strokeLinecap',
  strokeLineJoin: 'strokeLinejoin',
  strokeMiterLimit: 'strokeMiterlimit',
  typeOf: 'typeof',
  xLinkActuate: 'xlinkActuate',
  xLinkArcRole: 'xlinkArcrole',
  xLinkHref: 'xlinkHref',
  xLinkRole: 'xlinkRole',
  xLinkShow: 'xlinkShow',
  xLinkTitle: 'xlinkTitle',
  xLinkType: 'xlinkType',
  xmlnsXLink: 'xmlnsXlink'
}

// EXTERNAL MODULE: ./node_modules/style-to-object/index.js
var style_to_object = __webpack_require__(34848);
;// CONCATENATED MODULE: ./node_modules/hast-to-hyperscript/index.js
/**
 * @typedef {import('hast').Element} Element
 * @typedef {import('hast').Root} Root
 * @typedef {import('hast').Text} Text
 *
 * @typedef {import('unist-util-is').AssertPredicate<Element>} AssertElement
 * @typedef {import('unist-util-is').AssertPredicate<Text>} AssertText
 * @typedef {import('unist-util-is').AssertPredicate<Root>} AssertRoot
 *
 * @callback CreateElementLike
 * @param {string} name
 * @param {any} attributes
 * @param {Array.<string|any>} [children]
 * @returns {any}
 *
 * @typedef Context
 * @property {html|svg} schema
 * @property {string|null} prefix
 * @property {number} key
 * @property {boolean} react
 * @property {boolean} vue
 * @property {boolean} vdom
 * @property {boolean} hyperscript
 *
 * @typedef Options
 * @property {string|null} [prefix]
 * @property {'html'|'svg'} [space]
 */








const ns = /** @type {Record<string, string>} */ (webNamespaces)
const toReact = /** @type {Record<string, string>} */ (hastToReact)

const hast_to_hyperscript_own = {}.hasOwnProperty

/** @type {AssertRoot} */
// @ts-expect-error it’s correct.
const hast_to_hyperscript_root = convert('root')
/** @type {AssertElement} */
// @ts-expect-error it’s correct.
const hast_to_hyperscript_element = convert('element')
/** @type {AssertText} */
// @ts-expect-error it’s correct.
const hast_to_hyperscript_text = convert('text')

/**
 * @template {CreateElementLike} H
 * @param {H} h
 * @param {Element|Root} tree
 * @param {string|boolean|Options} [options]
 * @returns {ReturnType<H>}
 */
function toH(h, tree, options) {
  if (typeof h !== 'function') {
    throw new TypeError('h is not a function')
  }

  const r = hast_to_hyperscript_react(h)
  const v = vue(h)
  const vd = vdom(h)
  /** @type {string|boolean|null|undefined} */
  let prefix
  /** @type {Element} */
  let node

  if (typeof options === 'string' || typeof options === 'boolean') {
    prefix = options
    options = {}
  } else {
    if (!options) options = {}
    prefix = options.prefix
  }

  if (hast_to_hyperscript_root(tree)) {
    // @ts-expect-error Allow `doctypes` in there, we’ll filter them out later.
    node =
      tree.children.length === 1 && hast_to_hyperscript_element(tree.children[0])
        ? tree.children[0]
        : {
            type: 'element',
            tagName: 'div',
            properties: {},
            children: tree.children
          }
  } else if (hast_to_hyperscript_element(tree)) {
    node = tree
  } else {
    throw new Error(
      // @ts-expect-error runtime.
      'Expected root or element, not `' + ((tree && tree.type) || tree) + '`'
    )
  }

  return hast_to_hyperscript_transform(h, node, {
    schema: options.space === 'svg' ? property_information_svg : property_information_html,
    prefix:
      prefix === undefined || prefix === null
        ? r || v || vd
          ? 'h-'
          : null
        : typeof prefix === 'string'
        ? prefix
        : prefix
        ? 'h-'
        : null,
    key: 0,
    react: r,
    vue: v,
    vdom: vd,
    hyperscript: hyperscript(h)
  })
}

/**
 * Transform a hast node through a hyperscript interface to *anything*!
 *
 * @template {CreateElementLike} H
 * @param {H} h
 * @param {Element} node
 * @param {Context} ctx
 */
function hast_to_hyperscript_transform(h, node, ctx) {
  const parentSchema = ctx.schema
  let schema = parentSchema
  let name = node.tagName
  /** @type {Record<string, unknown>} */
  const attributes = {}
  /** @type {Array.<ReturnType<H>|string>} */
  const nodes = []
  let index = -1
  /** @type {string} */
  let key

  if (parentSchema.space === 'html' && name.toLowerCase() === 'svg') {
    schema = property_information_svg
    ctx.schema = schema
  }

  for (key in node.properties) {
    if (node.properties && hast_to_hyperscript_own.call(node.properties, key)) {
      addAttribute(attributes, key, node.properties[key], ctx, name)
    }
  }

  if (ctx.vdom) {
    if (schema.space === 'html') {
      name = name.toUpperCase()
    } else if (schema.space) {
      attributes.namespace = ns[schema.space]
    }
  }

  if (ctx.prefix) {
    ctx.key++
    attributes.key = ctx.prefix + ctx.key
  }

  if (node.children) {
    while (++index < node.children.length) {
      const value = node.children[index]

      if (hast_to_hyperscript_element(value)) {
        nodes.push(hast_to_hyperscript_transform(h, value, ctx))
      } else if (hast_to_hyperscript_text(value)) {
        nodes.push(value.value)
      }
    }
  }

  // Restore parent schema.
  ctx.schema = parentSchema

  // Ensure no React warnings are triggered for void elements having children
  // passed in.
  return nodes.length > 0
    ? h.call(node, name, attributes, nodes)
    : h.call(node, name, attributes)
}

/**
 * @param {Record<string, unknown>} props
 * @param {string} prop
 * @param {unknown} value
 * @param {Context} ctx
 * @param {string} name
 */
// eslint-disable-next-line complexity, max-params
function addAttribute(props, prop, value, ctx, name) {
  const info = find(ctx.schema, prop)
  /** @type {string|undefined} */
  let subprop

  // Ignore nullish and `NaN` values.
  // Ignore `false` and falsey known booleans for hyperlike DSLs.
  if (
    value === undefined ||
    value === null ||
    (typeof value === 'number' && Number.isNaN(value)) ||
    (value === false && (ctx.vue || ctx.vdom || ctx.hyperscript)) ||
    (!value && info.boolean && (ctx.vue || ctx.vdom || ctx.hyperscript))
  ) {
    return
  }

  if (Array.isArray(value)) {
    // Accept `array`.
    // Most props are space-separated.
    value = info.commaSeparated ? comma_separated_tokens_stringify(value) : stringify(value)
  }

  // Treat `true` and truthy known booleans.
  if (info.boolean && ctx.hyperscript) {
    value = ''
  }

  // VDOM, Vue, and React accept `style` as object.
  if (
    info.property === 'style' &&
    typeof value === 'string' &&
    (ctx.react || ctx.vue || ctx.vdom)
  ) {
    value = parseStyle(value, name)
  }

  if (ctx.vue) {
    if (info.property !== 'style') subprop = 'attrs'
  } else if (!info.mustUseProperty) {
    if (ctx.vdom) {
      if (info.property !== 'style') subprop = 'attributes'
    } else if (ctx.hyperscript) {
      subprop = 'attrs'
    }
  }

  if (subprop) {
    props[subprop] = Object.assign(props[subprop] || {}, {
      [info.attribute]: value
    })
  } else if (info.space && ctx.react) {
    props[toReact[info.property] || info.property] = value
  } else {
    props[info.attribute] = value
  }
}

/**
 * Check if `h` is `react.createElement`.
 *
 * @param {CreateElementLike} h
 * @returns {boolean}
 */
function hast_to_hyperscript_react(h) {
  /** @type {unknown} */
  const node = h('div', {})
  return Boolean(
    node &&
      // @ts-expect-error Looks like a React node.
      ('_owner' in node || '_store' in node) &&
      // @ts-expect-error Looks like a React node.
      (node.key === undefined || node.key === null)
  )
}

/**
 * Check if `h` is `hyperscript`.
 *
 * @param {CreateElementLike} h
 * @returns {boolean}
 */
function hyperscript(h) {
  return 'context' in h && 'cleanup' in h
}

/**
 * Check if `h` is `virtual-dom/h`.
 *
 * @param {CreateElementLike} h
 * @returns {boolean}
 */
function vdom(h) {
  /** @type {unknown} */
  const node = h('div', {})
  // @ts-expect-error Looks like a vnode.
  return node.type === 'VirtualNode'
}

/**
 * Check if `h` is Vue.
 *
 * @param {CreateElementLike} h
 * @returns {boolean}
 */
function vue(h) {
  /** @type {unknown} */
  const node = h('div', {})
  // @ts-expect-error Looks like a Vue node.
  return Boolean(node && node.context && node.context._isVue)
}

/**
 * @param {string} value
 * @param {string} tagName
 * @returns {Record<string, string>}
 */
function parseStyle(value, tagName) {
  /** @type {Record<string, string>} */
  const result = {}

  try {
    style_to_object(value, (name, value) => {
      if (name.slice(0, 4) === '-ms-') name = 'ms-' + name.slice(4)

      result[
        name.replace(
          /-([a-z])/g,
          /**
           * @param {string} _
           * @param {string} $1
           * @returns {string}
           */ (_, $1) => $1.toUpperCase()
        )
      ] = value
    })
  } catch (error) {
    error.message =
      tagName + '[style]' + error.message.slice('undefined'.length)
    throw error
  }

  return result
}

// EXTERNAL MODULE: ./node_modules/@mapbox/hast-util-table-cell-style/index.js
var hast_util_table_cell_style = __webpack_require__(54986);
;// CONCATENATED MODULE: ./node_modules/rehype-react/lib/index.js
/**
 * @typedef {import('hast').Root} Root
 * @typedef {import('hast').Element} Element
 * @typedef {import('react').ReactNode} ReactNode
 * @typedef {import('react').ReactElement<unknown>} ReactElement
 *
 * @callback CreateElementLike
 * @param {any} name
 * @param {any} props
 * @param {...ReactNode} children
 * @returns {ReactNode}
 *
 * @typedef SharedOptions
 * @property {CreateElementLike} createElement
 *   How to create elements or components.
 *   You should typically pass `React.createElement`.
 * @property {((props: any) => ReactNode)|undefined} [Fragment]
 *   Create fragments instead of an outer `<div>` if available.
 *   You should typically pass `React.Fragment`.
 * @property {string|undefined} [prefix='h-']
 *   React key prefix
 *
 * @typedef {SharedOptions & (import("./complex-types").ComponentsWithNodeOptions|import("./complex-types").ComponentsWithoutNodeOptions)} Options
 */


// @ts-expect-error: hush.



const rehype_react_lib_own = {}.hasOwnProperty
const tableElements = new Set([
  'table',
  'thead',
  'tbody',
  'tfoot',
  'tr',
  'th',
  'td'
])

/**
 * @type {import('unified').Plugin<[Options], Root, ReactElement>}
 */
function rehypeReact(options) {
  if (!options || typeof options.createElement !== 'function') {
    throw new TypeError('createElement is not a function')
  }

  const createElement = options.createElement

  Object.assign(this, {Compiler: compiler})

  /** @type {import('unified').CompilerFunction<Root, ReactNode>} */
  function compiler(node) {
    /** @type {ReactNode} */
    // @ts-expect-error: assume `name` is a known element.
    let result = toH(h, hast_util_table_cell_style(node), options.prefix)

    if (node.type === 'root') {
      // Invert <https://github.com/syntax-tree/hast-to-hyperscript/blob/d227372/index.js#L46-L56>.
      result =
        result &&
        typeof result === 'object' &&
        'type' in result &&
        'props' in result &&
        result.type === 'div' &&
        (node.children.length !== 1 || node.children[0].type !== 'element')
          ? // `children` does exist.
            // type-coverage:ignore-next-line
            result.props.children
          : [result]

      return createElement(options.Fragment || 'div', {}, result)
    }

    return result
  }

  /**
   * @param {keyof JSX.IntrinsicElements} name
   * @param {Record<string, unknown>} props
   * @param {Array<ReactNode>} [children]
   * @returns {ReactNode}
   */
  function h(name, props, children) {
    // Currently, a warning is triggered by react for *any* white space in
    // tables.
    // So we remove the pretty lines for now.
    // See: <https://github.com/facebook/react/pull/7081>.
    // See: <https://github.com/facebook/react/pull/7515>.
    // See: <https://github.com/remarkjs/remark-react/issues/64>.
    if (children && tableElements.has(name)) {
      children = children.filter((child) => !whitespace(child))
    }

    if (options.components && rehype_react_lib_own.call(options.components, name)) {
      const component = options.components[name]

      if (options.passNode && typeof component === 'function') {
        // @ts-expect-error: `toH` passes the current node.
        // type-coverage:ignore-next-line
        props = Object.assign({node: this}, props)
      }

      return createElement(component, props, children)
    }

    return createElement(name, props, children)
  }
}

;// CONCATENATED MODULE: ./node_modules/hast-util-raw/node_modules/unist-util-visit/index.js
/**
 * @typedef {import('unist').Node} Node
 * @typedef {import('unist').Parent} Parent
 * @typedef {import('unist-util-is').Test} Test
 * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult
 * @typedef {import('./complex-types').Visitor} Visitor
 */





/**
 * Visit children of tree which pass a test
 *
 * @param tree Abstract syntax tree to walk
 * @param test Test, optional
 * @param visitor Function to run for each node
 * @param reverse Fisit the tree in reverse, defaults to false
 */
const node_modules_unist_util_visit_visit =
  /**
   * @type {(
   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &
   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types').BuildVisitor<Tree>, reverse?: boolean) => void)
   * )}
   */
  (
    /**
     * @param {Node} tree
     * @param {Test} test
     * @param {import('./complex-types').Visitor} visitor
     * @param {boolean} [reverse]
     */
    function (tree, test, visitor, reverse) {
      if (typeof test === 'function' && typeof visitor !== 'function') {
        reverse = visitor
        visitor = test
        test = null
      }

      visitParents(tree, test, overload, reverse)

      /**
       * @param {Node} node
       * @param {Array.<Parent>} parents
       */
      function overload(node, parents) {
        const parent = parents[parents.length - 1]
        return visitor(
          node,
          parent ? parent.children.indexOf(node) : null,
          parent
        )
      }
    }
  )

;// CONCATENATED MODULE: ./node_modules/zwitch/index.js
var zwitch_own = {}.hasOwnProperty

/**
 * @callback Handler
 * @param {...unknown} value
 * @return {unknown}
 *
 * @typedef {Record<string, Handler>} Handlers
 *
 * @typedef {Object} Options
 * @property {Handler} [unknown]
 * @property {Handler} [invalid]
 * @property {Handlers} [handlers]
 */

/**
 * Handle values based on a property.
 *
 * @param {string} key
 * @param {Options} [options]
 */
function zwitch(key, options) {
  var settings = options || {}

  /**
   * Handle one value.
   * Based on the bound `key`, a respective handler will be called.
   * If `value` is not an object, or doesn’t have a `key` property, the special
   * “invalid” handler will be called.
   * If `value` has an unknown `key`, the special “unknown” handler will be
   * called.
   *
   * All arguments, and the context object, are passed through to the handler,
   * and it’s result is returned.
   *
   * @param {...unknown} [value]
   * @this {unknown}
   * @returns {unknown}
   * @property {Handler} invalid
   * @property {Handler} unknown
   * @property {Handlers} handlers
   */
  function one(value) {
    var fn = one.invalid
    var handlers = one.handlers

    if (value && zwitch_own.call(value, key)) {
      fn = zwitch_own.call(handlers, value[key]) ? handlers[value[key]] : one.unknown
    }

    if (fn) {
      return fn.apply(this, arguments)
    }
  }

  one.handlers = settings.handlers || {}
  one.invalid = settings.invalid
  one.unknown = settings.unknown

  return one
}

;// CONCATENATED MODULE: ./node_modules/hast-util-to-parse5/lib/index.js
/**
 * @typedef {import('parse5').Node} P5Node
 * @typedef {import('parse5').Document} P5Document
 * @typedef {import('parse5').DocumentFragment} P5Fragment
 * @typedef {import('parse5').DocumentType} P5Doctype
 * @typedef {import('parse5').CommentNode} P5Comment
 * @typedef {import('parse5').TextNode} P5Text
 * @typedef {import('parse5').Element} P5Element
 * @typedef {import('parse5').Attribute} P5Attribute
 * @typedef {import('parse5').ParentNode} P5Parent
 * @typedef {Exclude<P5Node, P5Document|P5Fragment>} P5Child
 * @typedef {import('property-information').Schema} Schema
 * @typedef {import('property-information').Info} Info
 * @typedef {'html'|'svg'} Space
 * @typedef {import('hast').Parent} Parent
 * @typedef {import('hast').Root} Root
 * @typedef {import('hast').DocType} Doctype
 * @typedef {import('hast').Element} Element
 * @typedef {import('hast').Text} Text
 * @typedef {import('hast').Comment} Comment
 * @typedef {Parent['children'][number]} Child
 * @typedef {Child|Root} Node
 *
 * @callback Handle
 * @param {Node} node
 * @param {Schema} schema
 * @returns {P5Node}
 */






var hast_util_to_parse5_lib_own = {}.hasOwnProperty

var lib_one = zwitch('type', {handlers: {root: hast_util_to_parse5_lib_root, element: hast_util_to_parse5_lib_element, text: hast_util_to_parse5_lib_text, comment: hast_util_to_parse5_lib_comment, doctype: hast_util_to_parse5_lib_doctype}})

/**
 * Transform a tree from hast to Parse5’s AST.
 *
 * @param {Node} tree
 * @param {Space} [space='html']
 * @returns {P5Node}
 */
function toParse5(tree, space) {
  // @ts-ignore Types are wrong.
  return lib_one(tree, space === 'svg' ? property_information_svg : property_information_html)
}

/**
 * @type {Handle}
 * @param {Root} node
 * @returns {P5Document}
 */
function hast_util_to_parse5_lib_root(node, schema) {
  /** @type {P5Document} */
  var p5 = {
    nodeName: '#document',
    mode: (node.data || {}).quirksMode ? 'quirks' : 'no-quirks',
    childNodes: []
  }
  // @ts-ignore Assume correct children.
  p5.childNodes = lib_all(node.children, p5, schema)
  return patch(node, p5)
}

/**
 * @type {Handle}
 * @param {Root} node
 * @returns {P5Fragment}
 */
function fragment(node, schema) {
  /** @type {P5Fragment} */
  var p5 = {nodeName: '#document-fragment', childNodes: []}
  // @ts-ignore Assume correct children.
  p5.childNodes = lib_all(node.children, p5, schema)
  return patch(node, p5)
}

/**
 * @type {Handle}
 * @param {Doctype} node
 * @returns {P5Doctype}
 */
function hast_util_to_parse5_lib_doctype(node) {
  return patch(node, {
    nodeName: '#documentType',
    name: 'html',
    publicId: '',
    systemId: '',
    parentNode: undefined
  })
}

/**
 * @type {Handle}
 * @param {Text} node
 * @returns {P5Text}
 */
function hast_util_to_parse5_lib_text(node) {
  return patch(node, {
    nodeName: '#text',
    value: node.value,
    parentNode: undefined
  })
}

/**
 * @type {Handle}
 * @param {Comment} node
 * @returns {P5Comment}
 */
function hast_util_to_parse5_lib_comment(node) {
  return patch(node, {
    nodeName: '#comment',
    data: node.value,
    parentNode: undefined
  })
}

/**
 * @type {Handle}
 * @param {Element} node
 * @returns {P5Element}
 */
function hast_util_to_parse5_lib_element(node, schema) {
  /** @type {Space} */
  // @ts-ignore Assume space.
  var space = schema.space
  return toH(h, Object.assign({}, node, {children: []}), {space})

  /**
   * @param {string} name
   * @param {Object.<string, string|boolean|number>} attrs
   */
  function h(name, attrs) {
    /** @type {Array.<P5Attribute>} */
    var values = []
    /** @type {Info} */
    var info
    /** @type {P5Attribute} */
    var value
    /** @type {string} */
    var key
    /** @type {number} */
    var index
    /** @type {P5Element} */
    var p5

    for (key in attrs) {
      if (!hast_util_to_parse5_lib_own.call(attrs, key) || attrs[key] === false) {
        continue
      }

      info = find(schema, key)

      if (info.boolean && !attrs[key]) {
        continue
      }

      value = {name: key, value: attrs[key] === true ? '' : String(attrs[key])}

      if (info.space && info.space !== 'html' && info.space !== 'svg') {
        index = key.indexOf(':')

        if (index < 0) {
          value.prefix = ''
        } else {
          value.name = key.slice(index + 1)
          value.prefix = key.slice(0, index)
        }

        value.namespace = webNamespaces[info.space]
      }

      values.push(value)
    }

    if (schema.space === 'html' && node.tagName === 'svg') schema = property_information_svg

    p5 = patch(node, {
      nodeName: name,
      tagName: name,
      attrs: values,
      namespaceURI: webNamespaces[schema.space],
      childNodes: [],
      parentNode: undefined
    })

    // @ts-ignore Assume correct children.
    p5.childNodes = lib_all(node.children, p5, schema)

    // @ts-ignore Types are wrong.
    if (name === 'template') p5.content = fragment(node.content, schema)

    return p5
  }
}

/**
 * @param {Array.<Child>} children
 * @param {P5Parent} p5
 * @param {Schema} schema
 * @returns {Array.<P5Child>}
 */
function lib_all(children, p5, schema) {
  var index = -1
  /** @type {Array.<P5Child>} */
  var result = []
  /** @type {P5Child} */
  var child

  if (children) {
    while (++index < children.length) {
      // @ts-ignore Assume child.
      child = lib_one(children[index], schema)

      // @ts-ignore types are wrong.
      child.parentNode = p5

      result.push(child)
    }
  }

  return result
}

/**
 * Patch specific properties.
 *
 * @template {P5Node} T
 * @param {Node} node
 * @param {T} p5
 * @returns {T}
 */
function patch(node, p5) {
  var position = node.position

  if (position && position.start && position.end) {
    // @ts-ignore Types are wrong.
    p5.sourceCodeLocation = {
      startLine: position.start.line,
      startCol: position.start.column,
      startOffset: position.start.offset,
      endLine: position.end.line,
      endCol: position.end.column,
      endOffset: position.end.offset
    }
  }

  return p5
}

;// CONCATENATED MODULE: ./node_modules/hast-util-raw/lib/index.js
/**
 * @typedef {import('vfile').VFile} VFile
 * @typedef {import('parse5').Document} P5Document
 * @typedef {import('parse5').DocumentFragment} P5Fragment
 * @typedef {Omit<import('parse5').Element, 'parentNode'>} P5Element
 * @typedef {import('parse5').Attribute} P5Attribute
 * @typedef {Omit<import('parse5').Location, 'startOffset' | 'endOffset'> & {startOffset: number|undefined, endOffset: number|undefined}} P5Location
 * @typedef {import('parse5').ParserOptions} P5ParserOptions
 * @typedef {import('hast').Root} Root
 * @typedef {import('hast').DocType} Doctype
 * @typedef {import('hast').Element} Element
 * @typedef {import('hast').Text} Text
 * @typedef {import('hast').Comment} Comment
 * @typedef {import('hast').Content} Content
 * @typedef {Root|Content} Node
 * @typedef {import('../complex-types').Raw} Raw
 *
 * @typedef {Omit<Comment, 'value'> & {value: {stitch: Node}}} Stitch
 *
 * @typedef Options
 * @property {Array.<string>} [passThrough]
 *   List of custom hast node types to pass through (keep) in hast.
 *   If the passed through nodes have children, those children are expected to
 *   be hast and will be handled.
 *
 * @typedef HiddenTokenizer
 * @property {Array.<HiddenLocationTracker>} __mixins
 *   Way too simple, but works for us.
 * @property {HiddenPreprocessor} preprocessor
 * @property {(value: string) => void} write
 * @property {() => number} _consume
 * @property {Array.<HiddenToken>} tokenQueue
 * @property {string} state
 * @property {string} returnState
 * @property {number} charRefCode
 * @property {Array.<number>} tempBuff
 * @property {Function} _flushCodePointsConsumedAsCharacterReference
 * @property {string} lastStartTagName
 * @property {number} consumedAfterSnapshot
 * @property {boolean} active
 * @property {HiddenToken|undefined} currentCharacterToken
 * @property {HiddenToken|undefined} currentToken
 * @property {unknown} currentAttr
 * @property {Function} NAMED_CHARACTER_REFERENCE_STATE
 * @property {Function} NUMERIC_CHARACTER_REFERENCE_END_STATE
 *
 * @typedef {Object.<string, unknown> & {location: P5Location}} HiddenToken
 *
 * @typedef HiddenPreprocessor
 * @property {string|undefined} html
 * @property {number} pos
 * @property {number} lastGapPos
 * @property {number} lastCharPos
 * @property {Array.<number>} gapStack
 * @property {boolean} skipNextNewLine
 * @property {boolean} lastChunkWritten
 * @property {boolean} endOfChunkHit
 *
 * @typedef HiddenLocationTracker
 * @property {P5Location|undefined} currentAttrLocation
 * @property {P5Location} ctLoc
 * @property {HiddenPosTracker} posTracker
 *
 * @typedef HiddenPosTracker
 * @property {boolean} isEol
 * @property {number} lineStartPos
 * @property {number} droppedBufferSize
 * @property {number} offset
 * @property {number} col
 * @property {number} line
 */

// @ts-expect-error: untyped.









const inTemplateMode = 'IN_TEMPLATE_MODE'
const dataState = 'DATA_STATE'
const characterToken = 'CHARACTER_TOKEN'
const startTagToken = 'START_TAG_TOKEN'
const endTagToken = 'END_TAG_TOKEN'
const commentToken = 'COMMENT_TOKEN'
const doctypeToken = 'DOCTYPE_TOKEN'

/** @type {P5ParserOptions} */
const parseOptions = {sourceCodeLocationInfo: true, scriptingEnabled: false}

/**
 * Given a hast tree and an optional vfile (for positional info), return a new
 * parsed-again hast tree.
 *
 * @param tree
 *   Original hast tree.
 * @param file
 *   Virtual file for positional info, optional.
 * @param options
 *   Configuration.
 */
const lib_raw =
  /**
   * @type {(
   *   ((tree: Node, file: VFile|undefined, options?: Options) => Node) &
   *   ((tree: Node, options?: Options) => Node)
   * )}
   */
  (
    /**
     * @param {Node} tree
     * @param {VFile} [file]
     * @param {Options} [options]
     */
    function (tree, file, options) {
      let index = -1
      const parser = new lib_parser(parseOptions)
      const one = zwitch('type', {
        // @ts-expect-error: hush.
        handlers: {root, element, text, comment, doctype, raw: handleRaw},
        // @ts-expect-error: hush.
        unknown: lib_unknown
      })
      /** @type {boolean|undefined} */
      let stitches
      /** @type {HiddenTokenizer|undefined} */
      let tokenizer
      /** @type {HiddenPreprocessor|undefined} */
      let preprocessor
      /** @type {HiddenPosTracker|undefined} */
      let posTracker
      /** @type {HiddenLocationTracker|undefined} */
      let locationTracker

      if (isOptions(file)) {
        options = file
        file = undefined
      }

      if (options && options.passThrough) {
        while (++index < options.passThrough.length) {
          // @ts-expect-error: hush.
          one.handlers[options.passThrough[index]] = stitch
        }
      }

      const result = fromParse5(
        documentMode(tree) ? document() : fragment(),
        file
      )

      if (stitches) {
        node_modules_unist_util_visit_visit(result, 'comment', (node, index, parent) => {
          const stitch = /** @type {Stitch} */ (/** @type {unknown} */ (node))
          if (stitch.value.stitch && parent !== null && index !== null) {
            // @ts-expect-error: assume the stitch is allowed.
            parent.children[index] = stitch.value.stitch
            return index
          }
        })
      }

      // Unpack if possible and when not given a `root`.
      if (
        tree.type !== 'root' &&
        result.type === 'root' &&
        result.children.length === 1
      ) {
        return result.children[0]
      }

      return result

      /**
       * @returns {P5Fragment}
       */
      function fragment() {
        /** @type {P5Element} */
        const context = {
          nodeName: 'template',
          tagName: 'template',
          attrs: [],
          namespaceURI: webNamespaces.html,
          childNodes: []
        }
        /** @type {P5Element} */
        const mock = {
          nodeName: 'documentmock',
          tagName: 'documentmock',
          attrs: [],
          namespaceURI: webNamespaces.html,
          childNodes: []
        }
        /** @type {P5Fragment} */
        const doc = {nodeName: '#document-fragment', childNodes: []}

        parser._bootstrap(mock, context)
        parser._pushTmplInsertionMode(inTemplateMode)
        parser._initTokenizerForFragmentParsing()
        parser._insertFakeRootElement()
        parser._resetInsertionMode()
        parser._findFormInFragmentContext()

        tokenizer = parser.tokenizer
        /* c8 ignore next */
        if (!tokenizer) throw new Error('Expected `tokenizer`')
        preprocessor = tokenizer.preprocessor
        locationTracker = tokenizer.__mixins[0]
        posTracker = locationTracker.posTracker

        one(tree)

        parser._adoptNodes(mock.childNodes[0], doc)

        return doc
      }

      /**
       * @returns {P5Document}
       */
      function document() {
        /** @type {P5Document} */
        const doc = parser.treeAdapter.createDocument()

        parser._bootstrap(doc, undefined)
        tokenizer = parser.tokenizer
        /* c8 ignore next */
        if (!tokenizer) throw new Error('Expected `tokenizer`')
        preprocessor = tokenizer.preprocessor
        locationTracker = tokenizer.__mixins[0]
        posTracker = locationTracker.posTracker

        one(tree)

        return doc
      }

      /**
       * @param {Content[]} nodes
       * @returns {void}
       */
      function all(nodes) {
        let index = -1

        /* istanbul ignore else - invalid nodes, see rehypejs/rehype-raw#7. */
        if (nodes) {
          while (++index < nodes.length) {
            one(nodes[index])
          }
        }
      }

      /**
       * @param {Root} node
       * @returns {void}
       */
      function root(node) {
        all(node.children)
      }

      /**
       * @param {Element} node
       * @returns {void}
       */
      function element(node) {
        resetTokenizer()
        parser._processToken(startTag(node), webNamespaces.html)

        all(node.children)

        if (!htmlVoidElements.includes(node.tagName)) {
          resetTokenizer()
          parser._processToken(endTag(node))
        }
      }

      /**
       * @param {Text} node
       * @returns {void}
       */
      function text(node) {
        resetTokenizer()
        parser._processToken({
          type: characterToken,
          chars: node.value,
          location: createParse5Location(node)
        })
      }

      /**
       * @param {Doctype} node
       * @returns {void}
       */
      function doctype(node) {
        resetTokenizer()
        parser._processToken({
          type: doctypeToken,
          name: 'html',
          forceQuirks: false,
          publicId: '',
          systemId: '',
          location: createParse5Location(node)
        })
      }

      /**
       * @param {Comment|Stitch} node
       * @returns {void}
       */
      function comment(node) {
        resetTokenizer()
        parser._processToken({
          type: commentToken,
          data: node.value,
          location: createParse5Location(node)
        })
      }

      /**
       * @param {Raw} node
       * @returns {void}
       */
      function handleRaw(node) {
        const start = pointStart(node)
        const line = start.line || 1
        const column = start.column || 1
        const offset = start.offset || 0

        /* c8 ignore next 4 */
        if (!preprocessor) throw new Error('Expected `preprocessor`')
        if (!tokenizer) throw new Error('Expected `tokenizer`')
        if (!posTracker) throw new Error('Expected `posTracker`')
        if (!locationTracker) throw new Error('Expected `locationTracker`')

        // Reset preprocessor:
        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/tokenizer/preprocessor.js>.
        preprocessor.html = undefined
        preprocessor.pos = -1
        preprocessor.lastGapPos = -1
        preprocessor.lastCharPos = -1
        preprocessor.gapStack = []
        preprocessor.skipNextNewLine = false
        preprocessor.lastChunkWritten = false
        preprocessor.endOfChunkHit = false

        // Reset preprocessor mixin:
        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/extensions/position-tracking/preprocessor-mixin.js>.
        posTracker.isEol = false
        posTracker.lineStartPos = -column + 1 // Looks weird, but ensures we get correct positional info.
        posTracker.droppedBufferSize = offset
        posTracker.offset = 0
        posTracker.col = 1
        posTracker.line = line

        // Reset location tracker:
        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/extensions/location-info/tokenizer-mixin.js>.
        locationTracker.currentAttrLocation = undefined
        locationTracker.ctLoc = createParse5Location(node)

        // See the code for `parse` and `parseFragment`:
        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/parser/index.js#L371>.
        tokenizer.write(node.value)
        parser._runParsingLoop(null)

        // Character references hang, so if we ended there, we need to flush
        // those too.
        // We reset the preprocessor as if the document ends here.
        // Then one single call to the relevant state does the trick, parse5
        // consumes the whole token.
        if (
          tokenizer.state === 'NAMED_CHARACTER_REFERENCE_STATE' ||
          tokenizer.state === 'NUMERIC_CHARACTER_REFERENCE_END_STATE'
        ) {
          preprocessor.lastChunkWritten = true
          tokenizer[tokenizer.state](tokenizer._consume())
        }

        // Process final characters if they’re still there after hibernating.
        // Similar to:
        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/extensions/location-info/tokenizer-mixin.js#L95>.
        const token = tokenizer.currentCharacterToken

        if (token) {
          token.location.endLine = posTracker.line
          token.location.endCol = posTracker.col + 1
          token.location.endOffset = posTracker.offset + 1
          parser._processToken(token)
        }
      }

      /**
       * @param {Node} node
       */
      function stitch(node) {
        stitches = true

        /** @type {Node} */
        let clone

        // Recurse, because to somewhat handle `[<x>]</x>` (where `[]` denotes the
        // passed through node).
        if ('children' in node) {
          clone = {
            ...node,
            children: lib_raw(
              {type: 'root', children: node.children},
              file,
              options
              // @ts-expect-error Assume a given parent yields a parent.
            ).children
          }
        } else {
          clone = {...node}
        }

        // Hack: `value` is supposed to be a string, but as none of the tools
        // (`parse5` or `hast-util-from-parse5`) looks at it, we can pass nodes
        // through.
        comment({type: 'comment', value: {stitch: clone}})
      }

      function resetTokenizer() {
        /* c8 ignore next */
        if (!tokenizer) throw new Error('Expected `tokenizer`')

        // Reset tokenizer:
        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/tokenizer/index.js#L218-L234>.
        // Especially putting it back in the `data` state is useful: some elements,
        // like textareas and iframes, change the state.
        // See GH-7.
        // But also if broken HTML is in `raw`, and then a correct element is given.
        // See GH-11.
        tokenizer.tokenQueue = []
        tokenizer.state = dataState
        tokenizer.returnState = ''
        tokenizer.charRefCode = -1
        tokenizer.tempBuff = []
        tokenizer.lastStartTagName = ''
        tokenizer.consumedAfterSnapshot = -1
        tokenizer.active = false
        tokenizer.currentCharacterToken = undefined
        tokenizer.currentToken = undefined
        tokenizer.currentAttr = undefined
      }
    }
  )
/**
 * @param {Element} node
 * @returns {HiddenToken}
 */
function startTag(node) {
  /** @type {P5Location} */
  const location = Object.assign(createParse5Location(node))
  // @ts-expect-error extra positional info.
  location.startTag = Object.assign({}, location)

  // Untyped token.
  return {
    type: startTagToken,
    tagName: node.tagName,
    selfClosing: false,
    attrs: attributes(node),
    location
  }
}

/**
 * @param {Element} node
 * @returns {Array.<P5Attribute>}
 */
function attributes(node) {
  return toParse5({
    tagName: node.tagName,
    type: 'element',
    properties: node.properties,
    children: []
    // @ts-expect-error Assume element.
  }).attrs
}

/**
 * @param {Element} node
 * @returns {HiddenToken}
 */
function endTag(node) {
  /** @type {P5Location} */
  const location = Object.assign(createParse5Location(node))
  // @ts-expect-error extra positional info.
  location.startTag = Object.assign({}, location)

  // Untyped token.
  return {
    type: endTagToken,
    tagName: node.tagName,
    attrs: [],
    location
  }
}

/**
 * @param {Node} node
 */
function lib_unknown(node) {
  throw new Error('Cannot compile `' + node.type + '` node')
}

/**
 * @param {Node} node
 * @returns {boolean}
 */
function documentMode(node) {
  const head = node.type === 'root' ? node.children[0] : node
  return Boolean(
    head &&
      (head.type === 'doctype' ||
        (head.type === 'element' && head.tagName === 'html'))
  )
}

/**
 * @param {Node|Stitch} node
 * @returns {P5Location}
 */
function createParse5Location(node) {
  const start = pointStart(node)
  const end = pointEnd(node)

  return {
    startLine: start.line,
    startCol: start.column,
    startOffset: start.offset,
    endLine: end.line,
    endCol: end.column,
    endOffset: end.offset
  }
}

/**
 * @param {VFile|Options|undefined} value
 * @return {value is Options}
 */
function isOptions(value) {
  return Boolean(value && !('message' in value && 'messages' in value))
}

;// CONCATENATED MODULE: ./node_modules/rehype-raw/index.js
/**
 * @typedef {import('hast').Root} Root
 * @typedef {import('hast-util-raw').Options} Options
 * @typedef {import('hast-util-raw')} DoNotTouchAsThisImportIncludesRawInTree
 */



/**
 * Plugin to parse the tree again (and raw nodes).
 * Keeping positional info OK.  🙌
 *
 * @type {import('unified').Plugin<[Options?] | Array<void>, Root>}
 */
function rehypeRaw(options = {}) {
  return (tree, file) => {
    // Assume that when a root was given, it’s also returned.
    const result = /** @type {Root} */ (lib_raw(tree, file, options))
    return result
  }
}

// EXTERNAL MODULE: ./src/main/client/ts/templates/TemplateInterface.tsx
var TemplateInterface = __webpack_require__(59793);
;// CONCATENATED MODULE: ./src/main/client/ts/Rehype.ts
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, "_invoke", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == typeof value && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, "_invoke", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, "throw" === methodName && delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method) || "return" !== methodName && (context.method = "throw", context.arg = new TypeError("The iterator does not provide a '" + methodName + "' method")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }
function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }










var Rehype_text = "# Hello world!\n\n<sidebar>\n\n<div><board-display variantname=\"2PC\" pgn4='".concat("[StartFen4 \"2PC\"]\n[Variant \"FFA\"]\n[RuleVariants \"EnPassant Play4Mate Teammate=1\"]\n[CurrentMove \"0\"]\n[TimeControl \"1|5\"]".replace(/'/g, "&#39;").replace(/\n/g, " "), "'></board-display></div>\n\n<div><composites-display composites='{\"barePieceRule\":18,\"chess960\":72}'></composites-display></div>\n\n</sidebar>\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam tincidunt diam nec elit lacinia porta. Nunc at odio dapibus, auctor lacus id, laoreet ipsum. Etiam commodo, dolor molestie aliquam varius, purus justo hendrerit lectus, ut congue eros tortor eu elit. Donec augue risus, pharetra sit amet ex rutrum, placerat bibendum purus. Etiam vulputate ex ex, in dignissim nibh ornare in. Suspendisse nisl nisl, malesuada nec urna quis, elementum euismod nibh. Donec dignissim et leo nec faucibus.\n\nDonec id mauris ipsum. Vestibulum tortor nulla, iaculis vitae mauris ut, congue convallis nisi. Nam varius in sem nec aliquet. Proin dapibus nec dui porttitor congue. Nullam facilisis risus egestas, dictum tortor blandit, tempus massa. Integer ac enim mollis, mattis turpis eu, sagittis urna. Etiam dignissim dignissim imperdiet. Nulla maximus nunc nulla, ac faucibus arcu hendrerit non. Suspendisse at dignissim mi, ut facilisis est. Nulla ultrices est bibendum, iaculis orci ultricies, congue justo.\n\nAliquam erat volutpat. Ut viverra tincidunt condimentum. Suspendisse faucibus arcu id nibh cursus porttitor. Donec vitae neque vel neque aliquet pellentesque. Nam eleifend, augue nec rutrum viverra, est urna pharetra magna, scelerisque lobortis lorem ante id metus. In posuere metus quis nibh laoreet, quis bibendum sapien suscipit. Fusce imperdiet dolor sed pharetra sollicitudin. Integer placerat nunc porttitor lobortis suscipit.\n\n<div><game-controller variantname=\"2PC\" pgn4='").concat("[StartFen4 \"2PC\"]\n[Variant \"FFA\"]\n[RuleVariants \"EnPassant Play4Mate Teammate=1\"]\n[CurrentMove \"0\"]\n[TimeControl \"1|5\"]".replace(/'/g, "&#39;").replace(/\n/g, " "), "'></board-display></div>\n\n");
function useProcessor(text) {
  var _useState = (0,react.useState)(() => /*#__PURE__*/(0,react.createElement)(react.Fragment)),
    _useState2 = _slicedToArray(_useState, 2),
    Content = _useState2[0],
    setContent = _useState2[1];
  (0,react.useEffect)(() => {
    void _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return unified().use(remark_parse).use(lib, {
              allowDangerousHtml: true
            }).use(rehypeRaw).use(rehypeFormat).use(rehypeStringify).process(text).then(file => {
              void unified().use(rehypeParse, {
                fragment: true
              }).use(rehypeReact, {
                createElement: react.createElement,
                Fragment: react.Fragment,
                components: _objectSpread({}, TemplateInterface.templates)
              }).process(file.value).then(file => {
                setContent(file.result);
              });
            });
          case 2:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }))();
  }, [text]);
  return Content !== null && Content !== void 0 ? Content : null;
}
function MarkdownParse() {
  return useProcessor(Rehype_text);
}
// EXTERNAL MODULE: ./node_modules/react-toastify/dist/react-toastify.esm.mjs + 1 modules
var react_toastify_esm = __webpack_require__(58510);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js
var injectStylesIntoStyleTag = __webpack_require__(75701);
var injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(injectStylesIntoStyleTag);
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./src/main/client/scss/Global.scss
var Global = __webpack_require__(48002);
;// CONCATENATED MODULE: ./src/main/client/scss/Global.scss

            

var options = {};

options.insert = "head";
options.singleton = false;

var update = injectStylesIntoStyleTag_default()(Global/* default */.Z, options);



/* harmony default export */ var scss_Global = (Global/* default.locals */.Z.locals || {});
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./src/main/client/scss/Normalize.scss
var Normalize = __webpack_require__(49472);
;// CONCATENATED MODULE: ./src/main/client/scss/Normalize.scss

            

var Normalize_options = {};

Normalize_options.insert = "head";
Normalize_options.singleton = false;

var Normalize_update = injectStylesIntoStyleTag_default()(Normalize/* default */.Z, Normalize_options);



/* harmony default export */ var scss_Normalize = (Normalize/* default.locals */.Z.locals || {});
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./src/main/client/scss/vendor/ChessGlyph.scss
var ChessGlyph = __webpack_require__(83284);
;// CONCATENATED MODULE: ./src/main/client/scss/vendor/ChessGlyph.scss

            

var ChessGlyph_options = {};

ChessGlyph_options.insert = "head";
ChessGlyph_options.singleton = false;

var ChessGlyph_update = injectStylesIntoStyleTag_default()(ChessGlyph/* default */.Z, ChessGlyph_options);



/* harmony default export */ var vendor_ChessGlyph = (ChessGlyph/* default.locals */.Z.locals || {});
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/react-tooltip/dist/react-tooltip.css
var react_tooltip = __webpack_require__(95626);
;// CONCATENATED MODULE: ./node_modules/react-tooltip/dist/react-tooltip.css

            

var react_tooltip_options = {};

react_tooltip_options.insert = "head";
react_tooltip_options.singleton = false;

var react_tooltip_update = injectStylesIntoStyleTag_default()(react_tooltip/* default */.Z, react_tooltip_options);



/* harmony default export */ var dist_react_tooltip = (react_tooltip/* default.locals */.Z.locals || {});
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/react-toastify/dist/ReactToastify.css
var ReactToastify = __webpack_require__(35982);
;// CONCATENATED MODULE: ./node_modules/react-toastify/dist/ReactToastify.css

            

var ReactToastify_options = {};

ReactToastify_options.insert = "head";
ReactToastify_options.singleton = false;

var ReactToastify_update = injectStylesIntoStyleTag_default()(ReactToastify/* default */.Z, ReactToastify_options);



/* harmony default export */ var dist_ReactToastify = (ReactToastify/* default.locals */.Z.locals || {});
// EXTERNAL MODULE: ./src/main/client/ts/components/BoardComponents/GameDisplay/GameDisplayPiece.tsx + 5 modules
var GameDisplayPiece = __webpack_require__(15246);
;// CONCATENATED MODULE: ./src/main/client/ts/hooks/usePersistedStorage.ts
function usePersistedStorage_slicedToArray(arr, i) { return usePersistedStorage_arrayWithHoles(arr) || usePersistedStorage_iterableToArrayLimit(arr, i) || usePersistedStorage_unsupportedIterableToArray(arr, i) || usePersistedStorage_nonIterableRest(); }
function usePersistedStorage_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function usePersistedStorage_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return usePersistedStorage_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return usePersistedStorage_arrayLikeToArray(o, minLen); }
function usePersistedStorage_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function usePersistedStorage_iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function usePersistedStorage_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var usePersistedStorage = parameters => {
  var _useState = (0,react.useState)(parameters.initialValue),
    _useState2 = usePersistedStorage_slicedToArray(_useState, 2),
    persistedState = _useState2[0],
    setPersistedState = _useState2[1];
  (0,react.useEffect)(() => {
    var suppliedState = localStorage.getItem(parameters.localStorageTag);
    setPersistedState(suppliedState ? parameters.validateValue(suppliedState) : parameters.initialValue);
  }, [parameters]);
  (0,react.useEffect)(() => {
    localStorage.setItem(parameters.localStorageTag, parameters.stringifyValue(persistedState));
  }, [parameters, persistedState]);
  var handleOnChange = (0,react.useCallback)(e => {
    if (e.key === parameters.localStorageTag) {
      parameters.onStorageChanged();
      setPersistedState(e.newValue ? parameters.validateValue(e.newValue) : parameters.initialValue);
    }
  }, [parameters]);
  (0,react.useEffect)(() => {
    window.addEventListener("storage", handleOnChange);
    return () => {
      window.removeEventListener("storage", handleOnChange);
    };
  }, [handleOnChange]);
  return (0,react.useMemo)(() => {
    var verifyFunctionType = value => typeof value === "function";
    var updateValue = value => {
      var updated = verifyFunctionType(value) ? value(persistedState) : value;
      if (updated !== persistedState) {
        setPersistedState(updated);
        window.localStorage.setItem(parameters.localStorageTag, parameters.stringifyValue(updated));
      }
    };
    return [persistedState, updateValue];
  }, [parameters, persistedState]);
};
// EXTERNAL MODULE: ./src/main/client/ts/services/PersistedStorage/PieceThemeContext.ts
var PieceThemeContext = __webpack_require__(68409);
// EXTERNAL MODULE: ./node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js + 2 modules
var redux_toolkit_esm = __webpack_require__(96057);
// EXTERNAL MODULE: ./src/main/client/ts/logic/index/GameBoardSlice.ts + 1 modules
var GameBoardSlice = __webpack_require__(28150);
// EXTERNAL MODULE: ./src/main/client/ts/redux/SidebarEditor/SidebarEditorSlice.ts
var SidebarEditorSlice = __webpack_require__(72241);
// EXTERNAL MODULE: ./src/main/client/ts/redux/WorkerSync/VariantNameSlice.ts
var VariantNameSlice = __webpack_require__(50272);
// EXTERNAL MODULE: ./node_modules/@redux-saga/symbols/dist/redux-saga-symbols.esm.js
var redux_saga_symbols_esm = __webpack_require__(4548);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(17692);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(71972);
// EXTERNAL MODULE: ./node_modules/@redux-saga/is/dist/redux-saga-is.esm.js
var redux_saga_is_esm = __webpack_require__(53597);
// EXTERNAL MODULE: ./node_modules/@redux-saga/core/dist/io-c3792963.js + 1 modules
var io_c3792963 = __webpack_require__(75789);
// EXTERNAL MODULE: ./node_modules/redux/es/redux.js + 2 modules
var redux = __webpack_require__(20118);
;// CONCATENATED MODULE: ./node_modules/@redux-saga/deferred/dist/redux-saga-deferred.esm.js
function deferred() {
  var def = {};
  def.promise = new Promise(function (resolve, reject) {
    def.resolve = resolve;
    def.reject = reject;
  });
  return def;
}
function arrayOfDeferred(length) {
  var arr = [];

  for (var i = 0; i < length; i++) {
    arr.push(deferred());
  }

  return arr;
}

/* harmony default export */ var redux_saga_deferred_esm = (deferred);


;// CONCATENATED MODULE: ./node_modules/@redux-saga/core/dist/redux-saga-core.esm.js











var queue = [];
/**
  Variable to hold a counting semaphore
  - Incrementing adds a lock and puts the scheduler in a `suspended` state (if it's not
    already suspended)
  - Decrementing releases a lock. Zero locks puts the scheduler in a `released` state. This
    triggers flushing the queued tasks.
**/

var semaphore = 0;
/**
  Executes a task 'atomically'. Tasks scheduled during this execution will be queued
  and flushed after this task has finished (assuming the scheduler endup in a released
  state).
**/

function exec(task) {
  try {
    suspend();
    task();
  } finally {
    release();
  }
}
/**
  Executes or queues a task depending on the state of the scheduler (`suspended` or `released`)
**/


function asap(task) {
  queue.push(task);

  if (!semaphore) {
    suspend();
    flush();
  }
}
/**
 * Puts the scheduler in a `suspended` state and executes a task immediately.
 */

function immediately(task) {
  try {
    suspend();
    return task();
  } finally {
    flush();
  }
}
/**
  Puts the scheduler in a `suspended` state. Scheduled tasks will be queued until the
  scheduler is released.
**/

function suspend() {
  semaphore++;
}
/**
  Puts the scheduler in a `released` state.
**/


function release() {
  semaphore--;
}
/**
  Releases the current lock. Executes all queued tasks if the scheduler is in the released state.
**/


function flush() {
  release();
  var task;

  while (!semaphore && (task = queue.shift()) !== undefined) {
    exec(task);
  }
}

var array = function array(patterns) {
  return function (input) {
    return patterns.some(function (p) {
      return matcher(p)(input);
    });
  };
};
var predicate = function predicate(_predicate) {
  return function (input) {
    return _predicate(input);
  };
};
var redux_saga_core_esm_string = function string(pattern) {
  return function (input) {
    return input.type === String(pattern);
  };
};
var symbol = function symbol(pattern) {
  return function (input) {
    return input.type === pattern;
  };
};
var wildcard = function wildcard() {
  return io_c3792963.k;
};
function matcher(pattern) {
  // prettier-ignore
  var matcherCreator = pattern === '*' ? wildcard : (0,redux_saga_is_esm/* string */.Z_)(pattern) ? redux_saga_core_esm_string : (0,redux_saga_is_esm/* array */.IX)(pattern) ? array : (0,redux_saga_is_esm/* stringableFunc */.eR)(pattern) ? redux_saga_core_esm_string : (0,redux_saga_is_esm/* func */.Yl)(pattern) ? predicate : (0,redux_saga_is_esm/* symbol */.NA)(pattern) ? symbol : null;

  if (matcherCreator === null) {
    throw new Error("invalid pattern: " + pattern);
  }

  return matcherCreator(pattern);
}

var END = {
  type: redux_saga_symbols_esm/* CHANNEL_END_TYPE */.sZ
};
var isEnd = function isEnd(a) {
  return a && a.type === redux_saga_symbols_esm/* CHANNEL_END_TYPE */.sZ;
};
var CLOSED_CHANNEL_WITH_TAKERS = 'Cannot have a closed channel with pending takers';
var INVALID_BUFFER = 'invalid buffer passed to channel factory function';
var UNDEFINED_INPUT_ERROR = "Saga or channel was provided with an undefined action\nHints:\n  - check that your Action Creator returns a non-undefined value\n  - if the Saga was started using runSaga, check that your subscribe source provides the action to its listeners";
function channel(buffer$1) {
  if (buffer$1 === void 0) {
    buffer$1 = (0,io_c3792963.e)();
  }

  var closed = false;
  var takers = [];

  if (false) {}

  function checkForbiddenStates() {
    if (closed && takers.length) {
      throw (0,io_c3792963.i)(CLOSED_CHANNEL_WITH_TAKERS);
    }

    if (takers.length && !buffer$1.isEmpty()) {
      throw (0,io_c3792963.i)('Cannot have pending takers with non empty buffer');
    }
  }

  function put(input) {
    if (false) {}

    if (closed) {
      return;
    }

    if (takers.length === 0) {
      return buffer$1.put(input);
    }

    var cb = takers.shift();
    cb(input);
  }

  function take(cb) {
    if (false) {}

    if (closed && buffer$1.isEmpty()) {
      cb(END);
    } else if (!buffer$1.isEmpty()) {
      cb(buffer$1.take());
    } else {
      takers.push(cb);

      cb.cancel = function () {
        (0,io_c3792963.r)(takers, cb);
      };
    }
  }

  function flush(cb) {
    if (false) {}

    if (closed && buffer$1.isEmpty()) {
      cb(END);
      return;
    }

    cb(buffer$1.flush());
  }

  function close() {
    if (false) {}

    if (closed) {
      return;
    }

    closed = true;
    var arr = takers;
    takers = [];

    for (var i = 0, len = arr.length; i < len; i++) {
      var taker = arr[i];
      taker(END);
    }
  }

  return {
    take: take,
    put: put,
    flush: flush,
    close: close
  };
}
function eventChannel(subscribe, buffer) {
  if (buffer === void 0) {
    buffer = none();
  }

  var closed = false;
  var unsubscribe;
  var chan = channel(buffer);

  var close = function close() {
    if (closed) {
      return;
    }

    closed = true;

    if (func(unsubscribe)) {
      unsubscribe();
    }

    chan.close();
  };

  unsubscribe = subscribe(function (input) {
    if (isEnd(input)) {
      close();
      return;
    }

    chan.put(input);
  });

  if (false) {}

  unsubscribe = once(unsubscribe);

  if (closed) {
    unsubscribe();
  }

  return {
    take: chan.take,
    flush: chan.flush,
    close: close
  };
}
function multicastChannel() {
  var _ref;

  var closed = false;
  var currentTakers = [];
  var nextTakers = currentTakers;

  function checkForbiddenStates() {
    if (closed && nextTakers.length) {
      throw (0,io_c3792963.i)(CLOSED_CHANNEL_WITH_TAKERS);
    }
  }

  var ensureCanMutateNextTakers = function ensureCanMutateNextTakers() {
    if (nextTakers !== currentTakers) {
      return;
    }

    nextTakers = currentTakers.slice();
  };

  var close = function close() {
    if (false) {}

    closed = true;
    var takers = currentTakers = nextTakers;
    nextTakers = [];
    takers.forEach(function (taker) {
      taker(END);
    });
  };

  return _ref = {}, _ref[redux_saga_symbols_esm/* MULTICAST */.AS] = true, _ref.put = function put(input) {
    if (false) {}

    if (closed) {
      return;
    }

    if (isEnd(input)) {
      close();
      return;
    }

    var takers = currentTakers = nextTakers;

    for (var i = 0, len = takers.length; i < len; i++) {
      var taker = takers[i];

      if (taker[redux_saga_symbols_esm/* MATCH */.uq](input)) {
        taker.cancel();
        taker(input);
      }
    }
  }, _ref.take = function take(cb, matcher) {
    if (matcher === void 0) {
      matcher = wildcard;
    }

    if (false) {}

    if (closed) {
      cb(END);
      return;
    }

    cb[redux_saga_symbols_esm/* MATCH */.uq] = matcher;
    ensureCanMutateNextTakers();
    nextTakers.push(cb);
    cb.cancel = (0,io_c3792963.o)(function () {
      ensureCanMutateNextTakers();
      (0,io_c3792963.r)(nextTakers, cb);
    });
  }, _ref.close = close, _ref;
}
function stdChannel() {
  var chan = multicastChannel();
  var put = chan.put;

  chan.put = function (input) {
    if (input[redux_saga_symbols_esm/* SAGA_ACTION */.Nm]) {
      put(input);
      return;
    }

    asap(function () {
      put(input);
    });
  };

  return chan;
}

var RUNNING = 0;
var CANCELLED = 1;
var ABORTED = 2;
var DONE = 3;

function resolvePromise(promise, cb) {
  var cancelPromise = promise[redux_saga_symbols_esm/* CANCEL */.n1];

  if ((0,redux_saga_is_esm/* func */.Yl)(cancelPromise)) {
    cb.cancel = cancelPromise;
  }

  promise.then(cb, function (error) {
    cb(error, true);
  });
}

var current = 0;
var nextSagaId = (function () {
  return ++current;
});

var _effectRunnerMap;

function getIteratorMetaInfo(iterator, fn) {
  if (iterator.isSagaIterator) {
    return {
      name: iterator.meta.name
    };
  }

  return (0,io_c3792963.j)(fn);
}

function createTaskIterator(_ref) {
  var context = _ref.context,
      fn = _ref.fn,
      args = _ref.args;

  // catch synchronous failures; see #152 and #441
  try {
    var result = fn.apply(context, args); // i.e. a generator function returns an iterator

    if ((0,redux_saga_is_esm/* iterator */.hZ)(result)) {
      return result;
    }

    var resolved = false;

    var next = function next(arg) {
      if (!resolved) {
        resolved = true; // Only promises returned from fork will be interpreted. See #1573

        return {
          value: result,
          done: !(0,redux_saga_is_esm/* promise */.MC)(result)
        };
      } else {
        return {
          value: arg,
          done: true
        };
      }
    };

    return (0,io_c3792963.q)(next);
  } catch (err) {
    // do not bubble up synchronous failures for detached forks
    // instead create a failed task. See #152 and #441
    return (0,io_c3792963.q)(function () {
      throw err;
    });
  }
}

function runPutEffect(env, _ref2, cb) {
  var channel = _ref2.channel,
      action = _ref2.action,
      resolve = _ref2.resolve;

  /**
   Schedule the put in case another saga is holding a lock.
   The put will be executed atomically. ie nested puts will execute after
   this put has terminated.
   **/
  asap(function () {
    var result;

    try {
      result = (channel ? channel.put : env.dispatch)(action);
    } catch (error) {
      cb(error, true);
      return;
    }

    if (resolve && (0,redux_saga_is_esm/* promise */.MC)(result)) {
      resolvePromise(result, cb);
    } else {
      cb(result);
    }
  }); // Put effects are non cancellables
}

function runTakeEffect(env, _ref3, cb) {
  var _ref3$channel = _ref3.channel,
      channel = _ref3$channel === void 0 ? env.channel : _ref3$channel,
      pattern = _ref3.pattern,
      maybe = _ref3.maybe;

  var takeCb = function takeCb(input) {
    if (input instanceof Error) {
      cb(input, true);
      return;
    }

    if (isEnd(input) && !maybe) {
      cb(redux_saga_symbols_esm/* TERMINATE */.EO);
      return;
    }

    cb(input);
  };

  try {
    channel.take(takeCb, (0,redux_saga_is_esm/* notUndef */.d5)(pattern) ? matcher(pattern) : null);
  } catch (err) {
    cb(err, true);
    return;
  }

  cb.cancel = takeCb.cancel;
}

function runCallEffect(env, _ref4, cb, _ref5) {
  var context = _ref4.context,
      fn = _ref4.fn,
      args = _ref4.args;
  var task = _ref5.task;

  // catch synchronous failures; see #152
  try {
    var result = fn.apply(context, args);

    if ((0,redux_saga_is_esm/* promise */.MC)(result)) {
      resolvePromise(result, cb);
      return;
    }

    if ((0,redux_saga_is_esm/* iterator */.hZ)(result)) {
      // resolve iterator
      redux_saga_core_esm_proc(env, result, task.context, current, (0,io_c3792963.j)(fn),
      /* isRoot */
      false, cb);
      return;
    }

    cb(result);
  } catch (error) {
    cb(error, true);
  }
}

function runCPSEffect(env, _ref6, cb) {
  var context = _ref6.context,
      fn = _ref6.fn,
      args = _ref6.args;

  // CPS (ie node style functions) can define their own cancellation logic
  // by setting cancel field on the cb
  // catch synchronous failures; see #152
  try {
    var cpsCb = function cpsCb(err, res) {
      if ((0,redux_saga_is_esm/* undef */.sR)(err)) {
        cb(res);
      } else {
        cb(err, true);
      }
    };

    fn.apply(context, args.concat(cpsCb));

    if (cpsCb.cancel) {
      cb.cancel = cpsCb.cancel;
    }
  } catch (error) {
    cb(error, true);
  }
}

function runForkEffect(env, _ref7, cb, _ref8) {
  var context = _ref7.context,
      fn = _ref7.fn,
      args = _ref7.args,
      detached = _ref7.detached;
  var parent = _ref8.task;
  var taskIterator = createTaskIterator({
    context: context,
    fn: fn,
    args: args
  });
  var meta = getIteratorMetaInfo(taskIterator, fn);
  immediately(function () {
    var child = redux_saga_core_esm_proc(env, taskIterator, parent.context, current, meta, detached, undefined);

    if (detached) {
      cb(child);
    } else {
      if (child.isRunning()) {
        parent.queue.addTask(child);
        cb(child);
      } else if (child.isAborted()) {
        parent.queue.abort(child.error());
      } else {
        cb(child);
      }
    }
  }); // Fork effects are non cancellables
}

function runJoinEffect(env, taskOrTasks, cb, _ref9) {
  var task = _ref9.task;

  var joinSingleTask = function joinSingleTask(taskToJoin, cb) {
    if (taskToJoin.isRunning()) {
      var joiner = {
        task: task,
        cb: cb
      };

      cb.cancel = function () {
        if (taskToJoin.isRunning()) (0,io_c3792963.r)(taskToJoin.joiners, joiner);
      };

      taskToJoin.joiners.push(joiner);
    } else {
      if (taskToJoin.isAborted()) {
        cb(taskToJoin.error(), true);
      } else {
        cb(taskToJoin.result());
      }
    }
  };

  if ((0,redux_saga_is_esm/* array */.IX)(taskOrTasks)) {
    if (taskOrTasks.length === 0) {
      cb([]);
      return;
    }

    var childCallbacks = (0,io_c3792963.l)(taskOrTasks, cb);
    taskOrTasks.forEach(function (t, i) {
      joinSingleTask(t, childCallbacks[i]);
    });
  } else {
    joinSingleTask(taskOrTasks, cb);
  }
}

function cancelSingleTask(taskToCancel) {
  if (taskToCancel.isRunning()) {
    taskToCancel.cancel();
  }
}

function runCancelEffect(env, taskOrTasks, cb, _ref10) {
  var task = _ref10.task;

  if (taskOrTasks === redux_saga_symbols_esm/* SELF_CANCELLATION */.sC) {
    cancelSingleTask(task);
  } else if ((0,redux_saga_is_esm/* array */.IX)(taskOrTasks)) {
    taskOrTasks.forEach(cancelSingleTask);
  } else {
    cancelSingleTask(taskOrTasks);
  }

  cb(); // cancel effects are non cancellables
}

function runAllEffect(env, effects, cb, _ref11) {
  var digestEffect = _ref11.digestEffect;
  var effectId = current;
  var keys = Object.keys(effects);

  if (keys.length === 0) {
    cb((0,redux_saga_is_esm/* array */.IX)(effects) ? [] : {});
    return;
  }

  var childCallbacks = (0,io_c3792963.l)(effects, cb);
  keys.forEach(function (key) {
    digestEffect(effects[key], effectId, childCallbacks[key], key);
  });
}

function runRaceEffect(env, effects, cb, _ref12) {
  var digestEffect = _ref12.digestEffect;
  var effectId = current;
  var keys = Object.keys(effects);
  var response = (0,redux_saga_is_esm/* array */.IX)(effects) ? (0,io_c3792963.m)(keys.length) : {};
  var childCbs = {};
  var completed = false;
  keys.forEach(function (key) {
    var chCbAtKey = function chCbAtKey(res, isErr) {
      if (completed) {
        return;
      }

      if (isErr || (0,io_c3792963.s)(res)) {
        // Race Auto cancellation
        cb.cancel();
        cb(res, isErr);
      } else {
        cb.cancel();
        completed = true;
        response[key] = res;
        cb(response);
      }
    };

    chCbAtKey.cancel = io_c3792963.t;
    childCbs[key] = chCbAtKey;
  });

  cb.cancel = function () {
    // prevents unnecessary cancellation
    if (!completed) {
      completed = true;
      keys.forEach(function (key) {
        return childCbs[key].cancel();
      });
    }
  };

  keys.forEach(function (key) {
    if (completed) {
      return;
    }

    digestEffect(effects[key], effectId, childCbs[key], key);
  });
}

function runSelectEffect(env, _ref13, cb) {
  var selector = _ref13.selector,
      args = _ref13.args;

  try {
    var state = selector.apply(void 0, [env.getState()].concat(args));
    cb(state);
  } catch (error) {
    cb(error, true);
  }
}

function runChannelEffect(env, _ref14, cb) {
  var pattern = _ref14.pattern,
      buffer = _ref14.buffer;
  var chan = channel(buffer);
  var match = matcher(pattern);

  var taker = function taker(action) {
    if (!isEnd(action)) {
      env.channel.take(taker, match);
    }

    chan.put(action);
  };

  var close = chan.close;

  chan.close = function () {
    taker.cancel();
    close();
  };

  env.channel.take(taker, match);
  cb(chan);
}

function runCancelledEffect(env, data, cb, _ref15) {
  var task = _ref15.task;
  cb(task.isCancelled());
}

function runFlushEffect(env, channel, cb) {
  channel.flush(cb);
}

function runGetContextEffect(env, prop, cb, _ref16) {
  var task = _ref16.task;
  cb(task.context[prop]);
}

function runSetContextEffect(env, props, cb, _ref17) {
  var task = _ref17.task;
  (0,io_c3792963.p)(task.context, props);
  cb();
}

var effectRunnerMap = (_effectRunnerMap = {}, _effectRunnerMap[io_c3792963.T] = runTakeEffect, _effectRunnerMap[io_c3792963.P] = runPutEffect, _effectRunnerMap[io_c3792963.A] = runAllEffect, _effectRunnerMap[io_c3792963.R] = runRaceEffect, _effectRunnerMap[io_c3792963.C] = runCallEffect, _effectRunnerMap[io_c3792963.a] = runCPSEffect, _effectRunnerMap[io_c3792963.F] = runForkEffect, _effectRunnerMap[io_c3792963.J] = runJoinEffect, _effectRunnerMap[io_c3792963.b] = runCancelEffect, _effectRunnerMap[io_c3792963.S] = runSelectEffect, _effectRunnerMap[io_c3792963.d] = runChannelEffect, _effectRunnerMap[io_c3792963.f] = runCancelledEffect, _effectRunnerMap[io_c3792963.g] = runFlushEffect, _effectRunnerMap[io_c3792963.G] = runGetContextEffect, _effectRunnerMap[io_c3792963.h] = runSetContextEffect, _effectRunnerMap);

/**
 Used to track a parent task and its forks
 In the fork model, forked tasks are attached by default to their parent
 We model this using the concept of Parent task && main Task
 main task is the main flow of the current Generator, the parent tasks is the
 aggregation of the main tasks + all its forked tasks.
 Thus the whole model represents an execution tree with multiple branches (vs the
 linear execution tree in sequential (non parallel) programming)

 A parent tasks has the following semantics
 - It completes if all its forks either complete or all cancelled
 - If it's cancelled, all forks are cancelled as well
 - It aborts if any uncaught error bubbles up from forks
 - If it completes, the return value is the one returned by the main task
 **/

function forkQueue(mainTask, onAbort, cont) {
  var tasks = [];
  var result;
  var completed = false;
  addTask(mainTask);

  var getTasks = function getTasks() {
    return tasks;
  };

  function abort(err) {
    onAbort();
    cancelAll();
    cont(err, true);
  }

  function addTask(task) {
    tasks.push(task);

    task.cont = function (res, isErr) {
      if (completed) {
        return;
      }

      (0,io_c3792963.r)(tasks, task);
      task.cont = io_c3792963.t;

      if (isErr) {
        abort(res);
      } else {
        if (task === mainTask) {
          result = res;
        }

        if (!tasks.length) {
          completed = true;
          cont(result);
        }
      }
    };
  }

  function cancelAll() {
    if (completed) {
      return;
    }

    completed = true;
    tasks.forEach(function (t) {
      t.cont = io_c3792963.t;
      t.cancel();
    });
    tasks = [];
  }

  return {
    addTask: addTask,
    cancelAll: cancelAll,
    abort: abort,
    getTasks: getTasks
  };
}

// there can be only a single saga error created at any given moment

function formatLocation(fileName, lineNumber) {
  return fileName + "?" + lineNumber;
}

function effectLocationAsString(effect) {
  var location = (0,io_c3792963.v)(effect);

  if (location) {
    var code = location.code,
        fileName = location.fileName,
        lineNumber = location.lineNumber;
    var source = code + "  " + formatLocation(fileName, lineNumber);
    return source;
  }

  return '';
}

function sagaLocationAsString(sagaMeta) {
  var name = sagaMeta.name,
      location = sagaMeta.location;

  if (location) {
    return name + "  " + formatLocation(location.fileName, location.lineNumber);
  }

  return name;
}

function cancelledTasksAsString(sagaStack) {
  var cancelledTasks = (0,io_c3792963.u)(function (i) {
    return i.cancelledTasks;
  }, sagaStack);

  if (!cancelledTasks.length) {
    return '';
  }

  return ['Tasks cancelled due to error:'].concat(cancelledTasks).join('\n');
}

var crashedEffect = null;
var sagaStack = [];
var addSagaFrame = function addSagaFrame(frame) {
  frame.crashedEffect = crashedEffect;
  sagaStack.push(frame);
};
var clear = function clear() {
  crashedEffect = null;
  sagaStack.length = 0;
}; // this sets crashed effect for the soon-to-be-reported saga frame
// this slightly streatches the singleton nature of this module into wrong direction
// as it's even less obvious what's the data flow here, but it is what it is for now

var setCrashedEffect = function setCrashedEffect(effect) {
  crashedEffect = effect;
};
/**
  @returns {string}

  @example
  The above error occurred in task errorInPutSaga {pathToFile}
  when executing effect put({type: 'REDUCER_ACTION_ERROR_IN_PUT'}) {pathToFile}
      created by fetchSaga {pathToFile}
      created by rootSaga {pathToFile}
*/

var redux_saga_core_esm_toString = function toString() {
  var firstSaga = sagaStack[0],
      otherSagas = sagaStack.slice(1);
  var crashedEffectLocation = firstSaga.crashedEffect ? effectLocationAsString(firstSaga.crashedEffect) : null;
  var errorMessage = "The above error occurred in task " + sagaLocationAsString(firstSaga.meta) + (crashedEffectLocation ? " \n when executing effect " + crashedEffectLocation : '');
  return [errorMessage].concat(otherSagas.map(function (s) {
    return "    created by " + sagaLocationAsString(s.meta);
  }), [cancelledTasksAsString(sagaStack)]).join('\n');
};

function newTask(env, mainTask, parentContext, parentEffectId, meta, isRoot, cont) {
  var _task;

  if (cont === void 0) {
    cont = io_c3792963.t;
  }

  var status = RUNNING;
  var taskResult;
  var taskError;
  var deferredEnd = null;
  var cancelledDueToErrorTasks = [];
  var context = Object.create(parentContext);
  var queue = forkQueue(mainTask, function onAbort() {
    cancelledDueToErrorTasks.push.apply(cancelledDueToErrorTasks, queue.getTasks().map(function (t) {
      return t.meta.name;
    }));
  }, end);
  /**
   This may be called by a parent generator to trigger/propagate cancellation
   cancel all pending tasks (including the main task), then end the current task.
    Cancellation propagates down to the whole execution tree held by this Parent task
   It's also propagated to all joiners of this task and their execution tree/joiners
    Cancellation is noop for terminated/Cancelled tasks tasks
   **/

  function cancel() {
    if (status === RUNNING) {
      // Setting status to CANCELLED does not necessarily mean that the task/iterators are stopped
      // effects in the iterator's finally block will still be executed
      status = CANCELLED;
      queue.cancelAll(); // Ending with a TASK_CANCEL will propagate the Cancellation to all joiners

      end(redux_saga_symbols_esm/* TASK_CANCEL */.Wd, false);
    }
  }

  function end(result, isErr) {
    if (!isErr) {
      // The status here may be RUNNING or CANCELLED
      // If the status is CANCELLED, then we do not need to change it here
      if (result === redux_saga_symbols_esm/* TASK_CANCEL */.Wd) {
        status = CANCELLED;
      } else if (status !== CANCELLED) {
        status = DONE;
      }

      taskResult = result;
      deferredEnd && deferredEnd.resolve(result);
    } else {
      status = ABORTED;
      addSagaFrame({
        meta: meta,
        cancelledTasks: cancelledDueToErrorTasks
      });

      if (task.isRoot) {
        var sagaStack = redux_saga_core_esm_toString(); // we've dumped the saga stack to string and are passing it to user's code
        // we know that it won't be needed anymore and we need to clear it

        clear();
        env.onError(result, {
          sagaStack: sagaStack
        });
      }

      taskError = result;
      deferredEnd && deferredEnd.reject(result);
    }

    task.cont(result, isErr);
    task.joiners.forEach(function (joiner) {
      joiner.cb(result, isErr);
    });
    task.joiners = null;
  }

  function setContext(props) {
    if (false) {}

    (0,io_c3792963.p)(context, props);
  }

  function toPromise() {
    if (deferredEnd) {
      return deferredEnd.promise;
    }

    deferredEnd = redux_saga_deferred_esm();

    if (status === ABORTED) {
      deferredEnd.reject(taskError);
    } else if (status !== RUNNING) {
      deferredEnd.resolve(taskResult);
    }

    return deferredEnd.promise;
  }

  var task = (_task = {}, _task[redux_saga_symbols_esm/* TASK */.Cs] = true, _task.id = parentEffectId, _task.meta = meta, _task.isRoot = isRoot, _task.context = context, _task.joiners = [], _task.queue = queue, _task.cancel = cancel, _task.cont = cont, _task.end = end, _task.setContext = setContext, _task.toPromise = toPromise, _task.isRunning = function isRunning() {
    return status === RUNNING;
  }, _task.isCancelled = function isCancelled() {
    return status === CANCELLED || status === RUNNING && mainTask.status === CANCELLED;
  }, _task.isAborted = function isAborted() {
    return status === ABORTED;
  }, _task.result = function result() {
    return taskResult;
  }, _task.error = function error() {
    return taskError;
  }, _task);
  return task;
}

function redux_saga_core_esm_proc(env, iterator$1, parentContext, parentEffectId, meta, isRoot, cont) {
  if (false) {}

  var finalRunEffect = env.finalizeRunEffect(runEffect);
  /**
    Tracks the current effect cancellation
    Each time the generator progresses. calling runEffect will set a new value
    on it. It allows propagating cancellation to child effects
  **/

  next.cancel = io_c3792963.t;
  /** Creates a main task to track the main flow */

  var mainTask = {
    meta: meta,
    cancel: cancelMain,
    status: RUNNING
  };
  /**
   Creates a new task descriptor for this generator.
   A task is the aggregation of it's mainTask and all it's forked tasks.
   **/

  var task = newTask(env, mainTask, parentContext, parentEffectId, meta, isRoot, cont);
  var executingContext = {
    task: task,
    digestEffect: digestEffect
  };
  /**
    cancellation of the main task. We'll simply resume the Generator with a TASK_CANCEL
  **/

  function cancelMain() {
    if (mainTask.status === RUNNING) {
      mainTask.status = CANCELLED;
      next(redux_saga_symbols_esm/* TASK_CANCEL */.Wd);
    }
  }
  /**
    attaches cancellation logic to this task's continuation
    this will permit cancellation to propagate down the call chain
  **/


  if (cont) {
    cont.cancel = task.cancel;
  } // kicks up the generator


  next(); // then return the task descriptor to the caller

  return task;
  /**
   * This is the generator driver
   * It's a recursive async/continuation function which calls itself
   * until the generator terminates or throws
   * @param {internal commands(TASK_CANCEL | TERMINATE) | any} arg - value, generator will be resumed with.
   * @param {boolean} isErr - the flag shows if effect finished with an error
   *
   * receives either (command | effect result, false) or (any thrown thing, true)
   */

  function next(arg, isErr) {
    try {
      var result;

      if (isErr) {
        result = iterator$1.throw(arg); // user handled the error, we can clear bookkept values

        clear();
      } else if ((0,io_c3792963.y)(arg)) {
        /**
          getting TASK_CANCEL automatically cancels the main task
          We can get this value here
           - By cancelling the parent task manually
          - By joining a Cancelled task
        **/
        mainTask.status = CANCELLED;
        /**
          Cancels the current effect; this will propagate the cancellation down to any called tasks
        **/

        next.cancel();
        /**
          If this Generator has a `return` method then invokes it
          This will jump to the finally block
        **/

        result = (0,redux_saga_is_esm/* func */.Yl)(iterator$1.return) ? iterator$1.return(redux_saga_symbols_esm/* TASK_CANCEL */.Wd) : {
          done: true,
          value: redux_saga_symbols_esm/* TASK_CANCEL */.Wd
        };
      } else if ((0,io_c3792963.z)(arg)) {
        // We get TERMINATE flag, i.e. by taking from a channel that ended using `take` (and not `takem` used to trap End of channels)
        result = (0,redux_saga_is_esm/* func */.Yl)(iterator$1.return) ? iterator$1.return() : {
          done: true
        };
      } else {
        result = iterator$1.next(arg);
      }

      if (!result.done) {
        digestEffect(result.value, parentEffectId, next);
      } else {
        /**
          This Generator has ended, terminate the main task and notify the fork queue
        **/
        if (mainTask.status !== CANCELLED) {
          mainTask.status = DONE;
        }

        mainTask.cont(result.value);
      }
    } catch (error) {
      if (mainTask.status === CANCELLED) {
        throw error;
      }

      mainTask.status = ABORTED;
      mainTask.cont(error, true);
    }
  }

  function runEffect(effect, effectId, currCb) {
    /**
      each effect runner must attach its own logic of cancellation to the provided callback
      it allows this generator to propagate cancellation downward.
       ATTENTION! effect runners must setup the cancel logic by setting cb.cancel = [cancelMethod]
      And the setup must occur before calling the callback
       This is a sort of inversion of control: called async functions are responsible
      of completing the flow by calling the provided continuation; while caller functions
      are responsible for aborting the current flow by calling the attached cancel function
       Library users can attach their own cancellation logic to promises by defining a
      promise[CANCEL] method in their returned promises
      ATTENTION! calling cancel must have no effect on an already completed or cancelled effect
    **/
    if ((0,redux_saga_is_esm/* promise */.MC)(effect)) {
      resolvePromise(effect, currCb);
    } else if ((0,redux_saga_is_esm/* iterator */.hZ)(effect)) {
      // resolve iterator
      redux_saga_core_esm_proc(env, effect, task.context, effectId, meta,
      /* isRoot */
      false, currCb);
    } else if (effect && effect[redux_saga_symbols_esm.IO]) {
      var effectRunner = effectRunnerMap[effect.type];
      effectRunner(env, effect.payload, currCb, executingContext);
    } else {
      // anything else returned as is
      currCb(effect);
    }
  }

  function digestEffect(effect, parentEffectId, cb, label) {
    if (label === void 0) {
      label = '';
    }

    var effectId = nextSagaId();
    env.sagaMonitor && env.sagaMonitor.effectTriggered({
      effectId: effectId,
      parentEffectId: parentEffectId,
      label: label,
      effect: effect
    });
    /**
      completion callback and cancel callback are mutually exclusive
      We can't cancel an already completed effect
      And We can't complete an already cancelled effectId
    **/

    var effectSettled; // Completion callback passed to the appropriate effect runner

    function currCb(res, isErr) {
      if (effectSettled) {
        return;
      }

      effectSettled = true;
      cb.cancel = io_c3792963.t; // defensive measure

      if (env.sagaMonitor) {
        if (isErr) {
          env.sagaMonitor.effectRejected(effectId, res);
        } else {
          env.sagaMonitor.effectResolved(effectId, res);
        }
      }

      if (isErr) {
        setCrashedEffect(effect);
      }

      cb(res, isErr);
    } // tracks down the current cancel


    currCb.cancel = io_c3792963.t; // setup cancellation logic on the parent cb

    cb.cancel = function () {
      // prevents cancelling an already completed effect
      if (effectSettled) {
        return;
      }

      effectSettled = true;
      currCb.cancel(); // propagates cancel downward

      currCb.cancel = io_c3792963.t; // defensive measure

      env.sagaMonitor && env.sagaMonitor.effectCancelled(effectId);
    };

    finalRunEffect(effect, effectId, currCb);
  }
}

var RUN_SAGA_SIGNATURE = 'runSaga(options, saga, ...args)';
var NON_GENERATOR_ERR = RUN_SAGA_SIGNATURE + ": saga argument must be a Generator function!";
function runSaga(_ref, saga) {
  var _ref$channel = _ref.channel,
      channel = _ref$channel === void 0 ? stdChannel() : _ref$channel,
      dispatch = _ref.dispatch,
      getState = _ref.getState,
      _ref$context = _ref.context,
      context = _ref$context === void 0 ? {} : _ref$context,
      sagaMonitor = _ref.sagaMonitor,
      effectMiddlewares = _ref.effectMiddlewares,
      _ref$onError = _ref.onError,
      onError = _ref$onError === void 0 ? io_c3792963.B : _ref$onError;

  if (false) {}

  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    args[_key - 2] = arguments[_key];
  }

  var iterator$1 = saga.apply(void 0, args);

  if (false) {}

  var effectId = nextSagaId();

  if (sagaMonitor) {
    // monitors are expected to have a certain interface, let's fill-in any missing ones
    sagaMonitor.rootSagaStarted = sagaMonitor.rootSagaStarted || io_c3792963.t;
    sagaMonitor.effectTriggered = sagaMonitor.effectTriggered || io_c3792963.t;
    sagaMonitor.effectResolved = sagaMonitor.effectResolved || io_c3792963.t;
    sagaMonitor.effectRejected = sagaMonitor.effectRejected || io_c3792963.t;
    sagaMonitor.effectCancelled = sagaMonitor.effectCancelled || io_c3792963.t;
    sagaMonitor.actionDispatched = sagaMonitor.actionDispatched || io_c3792963.t;
    sagaMonitor.rootSagaStarted({
      effectId: effectId,
      saga: saga,
      args: args
    });
  }

  if (false) { var MIDDLEWARE_TYPE_ERROR; }

  var finalizeRunEffect;

  if (effectMiddlewares) {
    var middleware = redux/* compose.apply */.qC.apply(void 0, effectMiddlewares);

    finalizeRunEffect = function finalizeRunEffect(runEffect) {
      return function (effect, effectId, currCb) {
        var plainRunEffect = function plainRunEffect(eff) {
          return runEffect(eff, effectId, currCb);
        };

        return middleware(plainRunEffect)(effect);
      };
    };
  } else {
    finalizeRunEffect = io_c3792963.E;
  }

  var env = {
    channel: channel,
    dispatch: (0,io_c3792963.D)(dispatch),
    getState: getState,
    sagaMonitor: sagaMonitor,
    onError: onError,
    finalizeRunEffect: finalizeRunEffect
  };
  return immediately(function () {
    var task = redux_saga_core_esm_proc(env, iterator$1, context, effectId, (0,io_c3792963.j)(saga),
    /* isRoot */
    true, undefined);

    if (sagaMonitor) {
      sagaMonitor.effectResolved(effectId, task);
    }

    return task;
  });
}

function sagaMiddlewareFactory(_temp) {
  var _ref = _temp === void 0 ? {} : _temp,
      _ref$context = _ref.context,
      context = _ref$context === void 0 ? {} : _ref$context,
      _ref$channel = _ref.channel,
      channel = _ref$channel === void 0 ? stdChannel() : _ref$channel,
      sagaMonitor = _ref.sagaMonitor,
      options = (0,objectWithoutPropertiesLoose/* default */.Z)(_ref, ["context", "channel", "sagaMonitor"]);

  var boundRunSaga;

  if (false) {}

  function sagaMiddleware(_ref2) {
    var getState = _ref2.getState,
        dispatch = _ref2.dispatch;
    boundRunSaga = runSaga.bind(null, (0,esm_extends/* default */.Z)({}, options, {
      context: context,
      channel: channel,
      dispatch: dispatch,
      getState: getState,
      sagaMonitor: sagaMonitor
    }));
    return function (next) {
      return function (action) {
        if (sagaMonitor && sagaMonitor.actionDispatched) {
          sagaMonitor.actionDispatched(action);
        }

        var result = next(action); // hit reducers

        channel.put(action);
        return result;
      };
    };
  }

  sagaMiddleware.run = function () {
    if (false) {}

    return boundRunSaga.apply(void 0, arguments);
  };

  sagaMiddleware.setContext = function (props) {
    if (false) {}

    (0,io_c3792963.p)(context, props);
  };

  return sagaMiddleware;
}

/* harmony default export */ var redux_saga_core_esm = (sagaMiddlewareFactory);


// EXTERNAL MODULE: ./node_modules/@redux-saga/core/dist/redux-saga-effects.esm.js
var redux_saga_effects_esm = __webpack_require__(10742);
// EXTERNAL MODULE: ./src/main/client/ts/redux/WorkerSync/WorkerSaga.ts
var WorkerSaga = __webpack_require__(34972);
;// CONCATENATED MODULE: ./src/main/client/ts/redux/store.ts
function store_regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ store_regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, "_invoke", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == typeof value && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, "_invoke", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, "throw" === methodName && delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method) || "return" !== methodName && (context.method = "throw", context.arg = new TypeError("The iterator does not provide a '" + methodName + "' method")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }
var _marked = /*#__PURE__*/store_regeneratorRuntime().mark(rootSaga);







var sagaMiddleware = redux_saga_core_esm();
function rootSaga() {
  return store_regeneratorRuntime().wrap(function rootSaga$(_context) {
    while (1) switch (_context.prev = _context.next) {
      case 0:
        _context.next = 2;
        return (0,redux_saga_effects_esm/* all */.$6)([WorkerSaga/* watchWorkerConstruct */.wD(), WorkerSaga/* watchWorkerChanges */.d9(), WorkerSaga/* trackLegalMovesChanges */.Ui(), WorkerSaga/* watchCurrentMoveChanges */.UO(), WorkerSaga/* trackDeleteMoveRequests */.Tj(), WorkerSaga/* trackFogOfWarPerspective */.Yz()]);
      case 2:
      case "end":
        return _context.stop();
    }
  }, _marked);
}
var store = (0,redux_toolkit_esm/* configureStore */.xC)({
  reducer: {
    gameBoards: GameBoardSlice/* default */.ZP,
    sidebarEditors: SidebarEditorSlice/* default */.ZP,
    variantNames: VariantNameSlice/* default */.ZP
  },
  devTools: "production" !== "production",
  middleware: getDefaultMiddleware => getDefaultMiddleware({
    serializableCheck: {
      ignoredActionPaths: ["meta.arg", "meta.baseQueryMeta", "payload.worker"]
    }
  }).prepend(sagaMiddleware)
});
sagaMiddleware.run(rootSaga);
// EXTERNAL MODULE: ./node_modules/react-redux/es/index.js + 13 modules
var es = __webpack_require__(12384);
// EXTERNAL MODULE: ./node_modules/react-modal/lib/index.js
var react_modal_lib = __webpack_require__(34823);
var lib_default = /*#__PURE__*/__webpack_require__.n(react_modal_lib);
// EXTERNAL MODULE: ./src/main/client/ts/baseTypes.ts
var baseTypes = __webpack_require__(18027);
;// CONCATENATED MODULE: ./src/main/client/ts/Main.tsx
function Main_slicedToArray(arr, i) { return Main_arrayWithHoles(arr) || Main_iterableToArrayLimit(arr, i) || Main_unsupportedIterableToArray(arr, i) || Main_nonIterableRest(); }
function Main_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function Main_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return Main_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Main_arrayLikeToArray(o, minLen); }
function Main_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function Main_iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function Main_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
















var themeContextSettings = {
  initialValue: (0,PieceThemeContext/* initBaseUserContext */.Vh)(),
  localStorageTag: "userTheme",
  validateValue: PieceThemeContext/* validateUserContext */.mJ,
  stringifyValue: object => JSON.stringify(object),
  onStorageChanged: () => {
    (0,GameDisplayPiece/* resetNamesEnum */.s1)();
    (0,GameDisplayPiece/* initImagesList */.Vq)();
  }
};
var Main = () => {
  var _usePersistedStorage = usePersistedStorage(themeContextSettings),
    _usePersistedStorage2 = Main_slicedToArray(_usePersistedStorage, 2),
    themeContext = _usePersistedStorage2[0],
    setThemeContext = _usePersistedStorage2[1];
  return /*#__PURE__*/react.createElement("div", {
    id: "main"
  }, /*#__PURE__*/react.createElement(react_toastify_esm/* ToastContainer */.Ix, null), /*#__PURE__*/react.createElement(PieceThemeContext/* UserContext.Provider */.St.Provider, {
    value: themeContext
  }, /*#__PURE__*/react.createElement(MarkdownParse, null)));
};
var mountPoint = document.getElementById("react-mountpoint");
(0,baseTypes/* assertNonUndefined */.lM)(mountPoint);
lib_default().setAppElement(mountPoint);
(0,client/* createRoot */.s)(mountPoint).render( /*#__PURE__*/react.createElement(es/* Provider */.zt, {
  store: store
}, /*#__PURE__*/react.createElement(Main, null)));
})();

/******/ })()
;
//# sourceMappingURL=react-app.js.map