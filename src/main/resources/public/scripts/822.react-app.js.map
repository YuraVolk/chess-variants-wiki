{"version":3,"file":"822.react-app.js","mappings":"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,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAChnppkB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EACxrpC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,G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AC,CAACjwB,WAAW,CAAC,CAAC;AACpE;AAEO,SAAS26B,UAAUA,CAACC,MAAc,EAAU;EAClD,IAAI3iC,IAAI,GAAG,CAAC;EACZ,KAAK,IAAIvyB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGk1D,MAAM,CAACx9D,MAAM,EAAEsI,CAAC,EAAE,EAAE;IACvC,IAAMm1D,IAAI,GAAGD,MAAM,CAAC1B,UAAU,CAACxzD,CAAC,CAAC;IACjCuyB,IAAI,GAAG,CAACA,IAAI,IAAI,CAAC,IAAIA,IAAI,GAAG4iC,IAAI;IAChC5iC,IAAI,IAAI,CAAC;EACV;EAEA,OAAOA,IAAI;AACZ;;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://spring-react-app/./src/main/client/fonts/chessGlyphIndex.ts","webpack://spring-react-app/./src/main/client/ts/baseTypes.ts","webpack://spring-react-app/./src/main/client/ts/interfaces/Colors.ts","webpack://spring-react-app/./src/main/client/ts/logic/BaseInterfaces.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/Board/BoardMoveValidator.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/MoveTree/MoveTreeValidator.ts","webpack://spring-react-app/./src/main/client/ts/logic/index/GameBoardWorker.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/PieceControl/PieceControlBuilder.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/Board/Board.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/Board/BoardInterface.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/FENData/FENOptions/FENOptions.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/FENData/FENData.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/FENData/FENDataInterface.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/FENData/FENOptions/FENOptionsTags.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/FENData/FENOptions/FENOptionsTagsInterface.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/GameInformation/GameData.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/GameInformation/GameUnits/GameUnits.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/GameInformation/GameUnits/PieceString.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/MoveTree/MoveNotationStringifier.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/MoveTree/MoveTree.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/MoveTree/MoveTreeInterface.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/PieceControl/PieceControl.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/PieceControl/PieceControlDeclarations.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/PieceControl/PieceControlInterface.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRule.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/AllowPassing.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/AlternativeTeams.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/BarePieceRule.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/Blindfold.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/CaptureTheKing.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/Chess960.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/Crazyhouse.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/DuckChess.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/FogOfWar.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/ForcedCapture.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/GameMetadataRules.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/Ghostboard.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/ParadigmChess30.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/PiecesFaceCenter.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/SeirawanSetup.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/SelfCheck.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/SetupChess.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/Taboo.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardVariantModules/EngineMoveGeneration/Algorithms/ComfuterEvaluation.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardVariantModules/EngineMoveGeneration/Algorithms/ComfuterEvaluationExtensions.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardVariantModules/EngineMoveGeneration/Algorithms/MixedAlgorithms.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardVariantModules/EngineMoveGeneration/Algorithms/RandomEvaluation.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardVariantModules/EngineMoveGeneration/Algorithms/RandomEvaluationExtensions.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardVariantModules/EngineMoveGeneration/BotInterface.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardVariantModules/InsufficientMaterial/InsufficientMaterialChecker.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardVariantModules/InsufficientMaterial/InsufficientMaterialConstructor.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardVariantModules/InsufficientMaterial/PieceMedianCounter.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardVariantModules/InsufficientMaterial/StateSerializer.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardVariantModules/InsufficientMaterial/Utilities.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/FENDataDecorators/Atomic.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/FENDataDecorators/DeadKingWalking.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/FENDataDecorators/EnPassant.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/FENDataDecorators/FatalCapture.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/FENDataDecorators/FiftyMoveRule.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/FENDataDecorators/Giveaway.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/FENDataDecorators/KingOfTheHill.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/FENDataDecorators/NCheck.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/FENDataDecorators/OppositeMultiplier.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/FENDataDecorators/OppositeSideCastling.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/FENDataDecorators/PiecesGoToBanks.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/FENDataDecorators/PlayForMate.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/FENDataDecorators/PointsForMate.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/FENDataDecorators/StalemateOptions.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/FENDataDecorators/Takeover.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/FENDataDecorators/ThreefoldRepetition.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/PieceControlDecorators/AnyCapture.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/PieceControlDecorators/PromoteTo.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/PieceControlDecorators/PromotionRank.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/PieceControlDecorators/RoyalsCannotCapture.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/PieceControlDecorators/Sideways.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/PieceControlDecorators/Stonewall.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/PieceControlDecorators/Torpedo.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleInterface.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleSetup.ts","webpack://spring-react-app/./src/main/client/ts/logic/utils/Tags/Moves/SerializePGNMoves.ts","webpack://spring-react-app/./src/main/client/ts/logic/utils/Tags/TagLogic/GameMetadataTags.ts","webpack://spring-react-app/./src/main/client/ts/logic/utils/Tags/TagLogic/VariantRulesTag.ts","webpack://spring-react-app/./src/main/client/ts/logic/utils/Tags/TagInterface.ts","webpack://spring-react-app/./src/main/client/ts/logic/utils/Tags/InputOutputProcessing.ts","webpack://spring-react-app/./src/main/client/ts/logic/utils/Tags/Moves/ParsePGNMoves.ts","webpack://spring-react-app/./src/main/client/ts/logic/utils/Tags/TagLogic/FENDataTag.ts","webpack://spring-react-app/./src/main/client/ts/logic/utils/Tags/Utils.ts","webpack://spring-react-app/./src/main/client/ts/utils/ArrayUtils.ts","webpack://spring-react-app/./src/main/client/ts/utils/NumberUtils.ts","webpack://spring-react-app/./src/main/client/ts/utils/ObjectUtils.ts","webpack://spring-react-app/./src/main/client/ts/utils/StringFormatUtils.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/ sync \\.ts$"],"sourcesContent":["export const chessGlyphIndex = {\n\tdoubleBackwardArrow: \"!\",\n\tdownloadIcon: '\"',\n\tendBackwardArrow: \"#\",\n\tforwardDoubleArrow: \"α\",\n\tuserSearch: \"$\",\n\tuserConnection: \"%\",\n\tnotAllowed: \"&\",\n\tclock: \"'\",\n\textraInformation: \"(\",\n\tauthorshipNotice: \")\",\n\tdraw: \"+\",\n\tbackwardArrow: \",\",\n\tuserInformation: \"-\",\n\tsmallBackwardArrow: \"/\",\n\tleaderBoard: \";\",\n\tequal: \"=\",\n\tdownwardArrow: \"<\",\n\tupperArrow: \">\",\n\tendForwardArrow: \"@\",\n\turlAttached: \"A\",\n\tcrossMark: \"B\",\n\trightOutwardsArrow: \"C\",\n\thashtag: \"D\",\n\tnewspaper: \"E\",\n\ttwitter: \"F\",\n\tcheckMark: \"G\",\n\tcamera: \"H\",\n\talternativeLine: \"I\",\n\tplay: \"J\",\n\tpause: \"K\",\n\treload: \"L\",\n\tworld: \"M\",\n\tpoints: \"N\",\n\tmedal: \"O\",\n\tsoundOff: \"P\",\n\tcircleCrossMark: \"Q\",\n\tsteadyEvaluation: \"R\",\n\tfacebook: \"S\",\n\tcircle: \"T\",\n\tsoundOn: \"U\",\n\tplus: \"V\",\n\topenEye: \"W\",\n\tcopyToClipboard: \"X\",\n\twavingFlag: \"Y\",\n\teditText: \"Z\",\n\tfullArrowLeft: \"[\",\n\tfullArrowRight: \"]\",\n\tsmallArrowForward: \"\\\\\",\n\tgoBackArrow: \"_\",\n\tyoutube: \"`\",\n\tcalendar: \"a\",\n\tuser: \"b\",\n\tchat: \"c\",\n\tlock: \"d\",\n\tbox: \"e\",\n\tcircularArrows: \"f\",\n\tlightBulb: \"g\",\n\tbriefcase: \"h\",\n\tboard: \"i\",\n\tknightArrows: \"j\",\n\tnewMessage: \"k\",\n\tdrawing: \"l\",\n\ttwoUsers: \"m\",\n\ttwoUsers2: \"n\",\n\topeningBook: \"o\",\n\tdisclaimer: \"p\",\n\tringingBell: \"q\",\n\tlist: \"r\",\n\trookAndPawn: \"s\",\n\thamburgerList: \"t\",\n\tmail: \"u\",\n\tuserExtraInformation: \"v\",\n\thouse: \"w\",\n\tsheetAndPencil: \"x\",\n\topenMail: \"y\",\n\tchatBox: \"z\",\n\tfullArrowDown: \"{\",\n\tsmallArrowUp: \"|\",\n\tfullArrowUp: \"}\",\n\tarrowIntoBox: \"¡\",\n\tkey: \"¢\",\n\tfile: \"£\",\n\tbooks: \"¤\",\n\tsharing: \"¥\",\n\tuserNotAllowed: \"¦\",\n\tuserCrossMark: \"§\",\n\tquestionMark: \"©\",\n\tboardWithCircle: \"«\",\n\tgooglePlus: \"®\",\n\treset: \"°\",\n\treddit: \"±\",\n\topenBook: \"´\",\n\tuserPlus: \"¶\",\n\tcog: \"·\",\n\tpin: \"»\",\n\tsuitcase: \"¼\",\n\tmark: \"½\",\n\tcake: \"¾\",\n\topenLink: \"¿\",\n\tbishopStroke: \"Ä\",\n\tlinkedin: \"Å\",\n\tknight: \"Ç\",\n\tthreeCheck: \"Ë\",\n\tchess960rapid: \"Ñ\",\n\tconnection: \"Õ\",\n\tquotes: \"Ö\",\n\texit: \"×\",\n\tcrossedBinoculars: \"Þ\",\n\tleaderBoardReversed: \"ß\",\n\tbishopFull: \"ä\",\n\tprinter: \"å\",\n\tverticalEvaluation: \"ç\",\n\tt: \"ë\",\n\tpawn: \"í\",\n\ttwoPawns: \"î\",\n\tunrated: \"ð\",\n\telite: \"ñ\",\n\tbug: \"õ\",\n\tcpu: \"ö\",\n\tforwardArrowCircle: \"÷\",\n\tsquareCrossMark: \"ü\",\n\tandroid: \"þ\",\n\ttwoUsersPlus: \"ÿ\",\n\tcrossedArrows: \"Đ\",\n\tking: \"Ā\",\n\tkingFull: \"ā\",\n\tbishop: \"Ă\",\n\ttwoFullRooks: \"ă\",\n\tkingStrokes: \"Ą\",\n\tfullKnight2: \"ą\",\n\tchess960: \"Č\",\n\tleaderBoardAscent: \"č\",\n\tcrazyhouse: \"Ď\",\n\tchecklist: \"ď\",\n\ttarget: \"đ\",\n\tpawnAndHalfRook: \"Ē\",\n\thalfRookAndPawn: \"ē\",\n\tknightStrokes: \"Ė\",\n\tpawnLogo: \"Ę\",\n\tqueenFull: \"ę\",\n\texchange: \"Ě\",\n\tuserNext: \"Ğ\",\n\tuserPrevious: \"Ġ\",\n\tcompass: \"ġ\",\n\tpawnStrokes: \"Ģ\",\n\trookStrokes: \"ģ\",\n\tscreenDisplays: \"Ħ\",\n\tkingOfTheHill: \"Ī\",\n\tantichess: \"ī\",\n\tqueen: \"Į\",\n\tthreePawns: \"į\",\n\tqueenStrokes: \"Ķ\",\n\trookSmallStrokes: \"Ļ\",\n\trookSmall: \"Ľ\",\n\tbishopPair: \"Ł\",\n\trookPair: \"Ņ\",\n\tknightPair: \"Ň\",\n\ttwoUsersSearch: \"Ŋ\",\n\tshield: \"ŋ\",\n\tkingSmall: \"Ō\",\n\tbishopSmall: \"Ő\",\n\tknightSmall: \"Ŗ\",\n\tuserNoConnection: \"Ř\",\n\tuserStream: \"v\",\n\tqueenAlternative: \"Ş\",\n\tpawnAlternative: \"Š\",\n\tthreePawnsAlternative: \"Ţ\",\n\ttwoPawnsAlternative: \"Ť\",\n\trookAlternative: \"Ŧ\",\n\tknightPairFull: \"Ż\",\n\tbishopPairFull: \"Ž\",\n\taddBoard: \"ˆ\",\n\tdiamond: \"Ͱ\",\n\tscales: \"ͱ\",\n\tpawn3d: \"Ͳ\",\n\tuserShieldPlus: \"ͳ\",\n\tgold: \"Ͷ\",\n\tellipsis: \"Ώ\",\n\tanalysis: \"Δ\",\n\tarchive: \"Θ\",\n\tarrowBottomIntoBox: \"Ξ\",\n\tdisclaimerEditor: \"Σ\",\n\tsendTrophy: \"Υ\",\n\taddCheckMark: \"Φ\",\n\tcheckMarkSquare: \"Ψ\",\n\tsquareStaircase: \"ά\",\n\tarrowsUpBottom: \"έ\",\n\tstar: \"ή\",\n\tverticalDash: \"ί\",\n\tshieldCheckMark: \"β\",\n\ttop3: \"ε\",\n\taddImage: \"ζ\",\n\tchessStream: \"η\",\n\tremoveTrophy: \"κ\",\n\timportantMail: \"λ\",\n\tarrowLeave: \"μ\",\n\tdonut: \"ν\",\n\tcomputerAnalysis: \"ξ\",\n\tcheckMarkSquareSmall: \"ο\",\n\tdiagonalExpandArrows: \"π\",\n\tleaderBoardHorizontal: \"ρ\",\n\tcheckMarkAsCircle: \"χ\",\n\tarrowFromBox: \"ϊ\",\n\tboxArrowBottom: \"ό\",\n\tboxArrowLeft: \"ύ\",\n\tboxArrowRight: \"ώ\",\n\tfourArrowsCentral: \"Ϙ\",\n\tclashingSwords: \"τ\",\n\tratingOffset: \"υ\",\n\tsmilingFace: \"ς\",\n\tfileCabinet: \"σ\",\n\teditClock: \"ϙ\",\n\tuserShield: \"Ϛ\",\n\thomeFilled: \"ϛ\",\n\tpaymentCard: \"Ϝ\",\n\tfourArrowsOutwards: \"ϝ\",\n\tpuzzle: \"Ϟ\",\n\taddPhoto: \"ϟ\",\n\tarrowWallLeft: \"Ϡ\",\n\tarrowWallRight: \"ϡ\",\n\tboardConfiguration: \"Ϸ\",\n\tfourBlocks: \"ϸ\",\n\tsandglass: \"Ϻ\",\n\tcrown: \"ϻ\",\n\tcloudUpload: \"Ẹ\",\n\twebChatBox: \"ẹ\",\n\tpuzzleRush: \"Ẻ\",\n\tknightHops: \"ẻ\",\n\tinstagram: \"ἀ\",\n\tsquarePlus: \"ἁ\",\n\tsquareMinus: \"ἂ\",\n\tsquareEqual: \"ἃ\",\n\tsquare: \"ἄ\",\n\tfireFull: \"ἅ\",\n\tpawnRecycle: \"ἆ\",\n\tnoEngine: \"ἇ\",\n\tgoogle: \"Ἀ\",\n\tfourPlayer: \"Ἁ\",\n\tpieceMeal: \"Ἂ\",\n\tarrowBoldUp: \"Ἃ\",\n\tarrowBoldDown: \"Ἄ\",\n\tblunder: \"Ἅ\",\n\tmistake: \"Ἆ\",\n\tvideoChatBox: \"Ἇ\",\n\tbonesCrossed: \"ἐ\",\n\tdisplays: \"ἑ\",\n\tarrowEnter: \"ἒ\",\n\tnewspaperHalf: \"ἓ\",\n\tbookmark: \"ἔ\",\n\tpuzzleLarge: \"ἕ\",\n\tmovePawn: \"Ἐ\",\n\tpawn3dLarge: \"Ἑ\",\n\tsun: \"Ἒ\",\n\trapid: \"Ἓ\",\n\tblitz: \"Ἔ\",\n\tbullet: \"Ἕ\",\n\tmortarboard: \"ἠ\",\n\tlaptop: \"ἡ\",\n\tresetWidth: \"ἢ\",\n\tpawnConnection: \"ἣ\",\n\tcopyToClipboardFromText: \"ἤ\",\n\tfire: \"ἥ\",\n\tcrownSmall: \"ἦ\",\n\torderedList: \"ἧ\",\n\tchess960daily: \"Ἠ\",\n\tarrowWallBottom: \"Ἡ\",\n\tpawn3dBold: \"Ἢ\",\n\tplusInCircle: \"Ἣ\",\n\tlightCorner: \"Ἤ\",\n\tdarkCorner: \"Ἥ\",\n\tsteepCurve: \"Ἦ\",\n\theart: \"Ἧ\",\n\tcheckMarkThin: \"ἰ\",\n\tconnectionDiagonal: \"ἱ\",\n\tdiadem: \"ἲ\",\n\tplusMinus: \"ἳ\",\n\trecycling: \"ἴ\",\n\tmetrics: \"ἵ\",\n\ttop1: \"ἶ\",\n\tengineCheckMark: \"ἷ\",\n\twikipedia: \"Ἰ\",\n\ttournament: \"Ἱ\",\n\thouseConfiguration: \"Ἲ\",\n\tcomputerHindsight: \"Ἳ\",\n\tcomputerCheckMark: \"Ἴ\",\n\tlightDarkTheme: \"Ἵ\",\n\twhistlingBell: \"Ἶ\",\n\tcrossMarkCompact: \"Ἷ\",\n\teyeCrossed: \"ὀ\",\n\tfide: \"ὁ\",\n\tfavorite: \"ὂ\",\n\ttShirtPawn: \"ὃ\",\n\taddSmile: \"ὄ\",\n\tlibrary: \"ὅ\",\n\tdiscord: \"Ὀ\",\n\tanalysisCheckMark: \"Ὁ\",\n\tversusComputer: \"Ὂ\",\n\tdollarSign: \"Ὃ\",\n\tbestMove: \"Ὄ\",\n\tgift: \"Ὅ\",\n\tevaluationLinear: \"ὐ\",\n\tevaluationThrowaway: \"ὑ\",\n\tevaluationEqual: \"ὒ\",\n\tevaluationDead: \"ὓ\",\n\tevaluationSharp: \"ὔ\",\n\tevaluationPerplexing: \"ὕ\",\n\tevaluationSmooth: \"ὖ\",\n\tlibraryAdd: \"ὗ\",\n\tselfPartner: \"Ὑ\",\n\tfourPlayerConfiguration: \"Ὓ\",\n\tlistDownFlow: \"Ὕ\",\n\tpuzzleBattle: \"Ὗ\",\n\thyperbullet: \"ὠ\",\n\tgameLink: \"ὡ\",\n\tgameStudy: \"ὢ\",\n\tevaluationCrazy: \"ὣ\",\n\tengine: \"ὤ\",\n\tcrossedSwordsInCircle: \"ὥ\",\n\thallmark: \"ὦ\",\n\tlike: \"ὧ\",\n\tboardTwoPlayers: \"Ὠ\",\n\tfourPlayerChess: \"Ὡ\",\n\tvariants: \"Ὢ\",\n\tcloudUploadCompact: \"Ὣ\",\n\tclockIncrement: \"Ὤ\",\n\tvideoCamera: \"Ὥ\",\n\tinaccuracy: \"Ὧ\",\n\tbot: \"ὰ\",\n\ttorpedo: \"ά\",\n\tvk: \"ὲ\",\n\tblindfold: \"έ\",\n\tcustomSettings: \"ή\",\n\tcaptureAnything: \"ὶ\",\n\tpawnSideways: \"ί\",\n\tnoCastling: \"ὸ\",\n\tfogOfWar: \"ό\",\n\tautomate: \"ὺ\",\n\tatomic: \"ύ\",\n\tpawnCounterfeit: \"ὼ\",\n\telephant: \"ώ\",\n\tfullBlock: \"ᾀ\",\n\tfourFullBlocks: \"ᾁ\",\n\tnineFullBlocks: \"ᾂ\",\n\tnineFullBlocksCrossed: \"ᾃ\",\n\thamburgerMenuCompact: \"ᾄ\",\n\tlistCompact: \"ᾅ\",\n\tgeoMark: \"ᾆ\",\n\tcrossedDonut: \"ᾇ\",\n\thandshake: \"ᾈ\",\n\tverified: \"ᾉ\",\n\tsandglassRunningOut: \"ᾊ\",\n\trapidLowOnTime: \"ᾋ\",\n\ttourneyBanner: \"ᾌ\",\n\tnoCloud: \"ᾍ\",\n\tfork: \"ᾎ\",\n\tdonutTarget: \"ᾏ\",\n\tnewCalendarDay: \"ᾐ\",\n\tcornerInfiltration: \"ᾑ\",\n\thastTagCompact: \"ᾒ\",\n\tchatterbox: \"ᾓ\",\n\tcircleStar: \"ᾔ\",\n\ttargetPractice: \"ᾕ\",\n\tpawnPromotion: \"ᾖ\",\n\tflagProgression: \"ᾗ\",\n\tpawnDoubleAttack: \"ᾘ\",\n\tkingAndRook: \"ᾙ\",\n\tspecialMedal: \"ᾚ\",\n\tpawnBanner: \"ᾛ\",\n\tuserSquare: \"ᾜ\",\n\tverifiedCandidate: \"ᾝ\",\n\tsaveFile: \"ᾞ\",\n\tduck: \"ᾟ\",\n\taddBanner: \"ᾠ\",\n\tqrCode: \"ᾡ\",\n\tnoAnalysis: \"ᾢ\",\n\tdualPawn: \"ᾣ\",\n\tgameEscape: \"ᾤ\",\n\ttournamentCup: \"ᾥ\",\n\tnoExchanges: \"ᾦ\",\n\ttikTok: \"ᾰ\",\n\tpieChart: \"ᾱ\",\n\tsearch: \"–\",\n\tbinoculars: \"—\",\n\tlargeBoard: \"’\",\n\texclamation: \"†\",\n\ttournamentCupIcon: \"‡\",\n\ttrashBin: \"•\",\n\tarrowForwardBoldCompact: \"…\",\n\tgiftDiamond: \"‹\",\n\tfilter: \"›\",\n\tnoChat: \"⁄\",\n\tnewSheet: \"€\",\n\txml: \"∞\",\n\tblockUser: \"∫\",\n\tfacebookLike: \"≤\",\n\tfacebookDislike: \"≥\",\n\tapple: \"◊\",\n\tphone: \"\"\n} as const;\n","// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FunctionType = (...args: any[]) => any;\nexport const verifyFunctionType = (func: unknown): func is FunctionType => typeof func === \"function\";\n\nexport type Length<T extends unknown[]> = T extends { length: infer L } ? L : never;\nexport type Tuple<T, N extends number> = N extends N ? (number extends N ? T[] : _TupleOf<T, N, []>) : never;\ntype _TupleOf<T, N extends number, R extends unknown[]> = R[\"length\"] extends N ? R : _TupleOf<T, N, [T, ...R]>;\n\nexport type Add<A extends number, B extends number> = Length<[...Tuple<unknown, A>, ...Tuple<unknown, B>]>;\nexport const createTuple = <T, L extends number>(val: T, length: L) => Array.from<L, T>({ length }).fill(val);\nexport const createTupleFromCallback = <T, L extends number>(val: (v: unknown, k: number) => T, length: L): Tuple<T, L> =>\n\tArray.from({ length }, val);\nexport const verifyTupleType = <T, L extends number>(arr: T[], length: L): arr is Tuple<T, L> => arr.length === length;\n\nexport type ImplementInterface<T, U> = Pick<T, Exclude<keyof T, keyof U>> & U;\n\nexport function assertNonUndefined<T>(data: T): asserts data is NonNullable<T> {\n\tif (data == null) throw new Error(\"Expected the data above to be anything but null or undefined\");\n}\n\nexport function throwOnNever(arg: never): never {\n\tconsole.dir(arg);\n\tthrow new TypeError(`Unexpected argument that is supposed to be of type never`);\n}\n\nexport function importAll(r: __WebpackModuleApi.RequireContext) {\n\tr.keys().forEach(r);\n}\n\nexport function getEnumKeys<T extends Record<PropertyKey, unknown>>(object: Record<keyof T, unknown>): Array<keyof T> {\n\tconst resultingArray: Array<keyof T> = [];\n\tlet key: keyof T;\n\tfor (key in object) resultingArray.push(key);\n\treturn resultingArray;\n}\n\ntype ArrayKeys<T extends unknown[] | readonly unknown[]> = Exclude<Partial<T>[\"length\"], T[\"length\"]> extends never | undefined\n\t? number\n\t: Exclude<Partial<T>[\"length\"], T[\"length\"]>;\n\ndeclare global {\n\tinterface Array<T> {\n\t\tindexOf(searchElement: T, fromIndex?: number): ArrayKeys<this> | -1;\n\t\tlastIndexOf(searchElement: T, fromIndex?: number): ArrayKeys<this> | -1;\n\t\tevery<S extends T>(predicate: (value: T, index: ArrayKeys<this>, array: T[]) => value is S): this is { [K in keyof this]: S };\n\t\tevery(predicate: (value: T, index: ArrayKeys<this>, array: T[]) => unknown, thisArg?: T[]): boolean;\n\t\tsome(predicate: (value: T, index: ArrayKeys<this>, array: T[]) => unknown, thisArg?: T[]): boolean;\n\t\tforEach(callbackfn: (value: T, index: ArrayKeys<this>, array: T[]) => void, thisArg?: T[]): void;\n\t\tmap<U>(callbackfn: (value: T, index: ArrayKeys<this>, array: T[]) => U): { [K in keyof this]: U };\n\t\tfilter<S extends T>(predicate: (value: T, index: ArrayKeys<this>, array: T[]) => value is S, thisArg?: T[]): S[];\n\t\tfilter(predicate: (value: T, index: ArrayKeys<this>, array: T[]) => unknown, thisArg?: T[]): T[];\n\t\treduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: ArrayKeys<this>, array: T[]) => T): T;\n\t\treduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: ArrayKeys<this>, array: T[]) => T, initialValue: T): T;\n\t\treduce<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: ArrayKeys<this>, array: T[]) => U, initialValue: U): U;\n\t\treduceRight(callbackfn: (previousValue: T, currentValue: T, currentIndex: ArrayKeys<this>, array: T[]) => T): T;\n\t\treduceRight(callbackfn: (previousValue: T, currentValue: T, currentIndex: ArrayKeys<this>, array: T[]) => T, initialValue: T): T;\n\t\treduceRight<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: ArrayKeys<this>, array: T[]) => U, initialValue: U): U;\n\t}\n\n\tinterface ReadonlyArray<T> {\n\t\tindexOf(searchElement: T, fromIndex?: number): ArrayKeys<this> | -1;\n\t\tlastIndexOf(searchElement: T, fromIndex?: number): ArrayKeys<this> | -1;\n\t\tevery<S extends T>(\n\t\t\tpredicate: (value: T, index: ArrayKeys<this>, array: readonly T[]) => value is S,\n\t\t\tthisArg?: T[]\n\t\t): this is { readonly [K in keyof this]: S };\n\t\tevery(predicate: (value: T, index: ArrayKeys<this>, array: readonly T[]) => unknown, thisArg?: T[]): boolean;\n\t\tsome(predicate: (value: T, index: ArrayKeys<this>, array: readonly T[]) => unknown, thisArg?: T[]): boolean;\n\t\tforEach(callbackfn: (value: T, index: ArrayKeys<this>, array: readonly T[]) => void, thisArg?: T[]): void;\n\t\tmap<U>(callbackfn: (value: T, index: ArrayKeys<this>, array: readonly T[]) => U, thisArg?: T[]): U[];\n\t\tfilter<S extends T>(predicate: (value: T, index: ArrayKeys<this>, array: readonly T[]) => value is S, thisArg?: T[]): S[];\n\t\tfilter(predicate: (value: T, index: ArrayKeys<this>, array: readonly T[]) => unknown, thisArg?: T[]): T[];\n\t\treduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: ArrayKeys<this>, array: readonly T[]) => T): T;\n\t\treduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: ArrayKeys<this>, array: readonly T[]) => T, initialValue: T): T;\n\t\treduce<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: ArrayKeys<this>, array: readonly T[]) => U, initialValue: U): U;\n\t\treduceRight(callbackfn: (previousValue: T, currentValue: T, currentIndex: ArrayKeys<this>, array: readonly T[]) => T): T;\n\t\treduceRight(\n\t\t\tcallbackfn: (previousValue: T, currentValue: T, currentIndex: ArrayKeys<this>, array: readonly T[]) => T,\n\t\t\tinitialValue: T\n\t\t): T;\n\t\treduceRight<U>(\n\t\t\tcallbackfn: (previousValue: U, currentValue: T, currentIndex: ArrayKeys<this>, array: readonly T[]) => U,\n\t\t\tinitialValue: U\n\t\t): U;\n\t}\n\n\tinterface ArrayConstructor {\n\t\tfrom<L extends number, T>(arrayLike: { readonly length: L }): Tuple<T, L>;\n\t\tfrom<T, U, L extends number>(iterable: { readonly length: L }, mapfn: (v: T, k: number) => U, thisArg?: T[]): Tuple<U, L>;\n\t}\n}\n","import { throwOnNever, verifyTupleType } from \"../baseTypes\";\n\ndeclare const HexColor: unique symbol;\nexport type HexColor = string & { _: typeof HexColor };\nconst hexColorRegex = /^#(?:[0-9a-fA-F]{3}){1,2}$/;\nexport const createHexColor = (color: string): HexColor => {\n\tif (hexColorRegex.test(color)) {\n\t\treturn color as HexColor;\n\t} else throw new TypeError(\"The supplied hex color is not a hex color: \" + color);\n};\nexport const verifyHexColor = (color: IndexedColor): color is HexColor => typeof color === \"string\";\nexport const validateHexColor = (color: unknown): color is HexColor => {\n\tif (typeof color === \"string\") {\n\t\ttry {\n\t\t\tcreateHexColor(color);\n\t\t\treturn true;\n\t\t} catch {\n\t\t\treturn false;\n\t\t}\n\t} else return false;\n};\n\ndeclare const RGBColor: unique symbol;\nexport type RGBColorValue = number & { _: typeof RGBColor };\nexport const createRGBColor = (color: number): RGBColorValue => {\n\tif (color >= 0 || color <= 255) {\n\t\treturn color as RGBColorValue;\n\t} else throw new TypeError(`The supplied RGB color value is not an RGB color value: ${color}`);\n};\nexport type RGBColor = [RGBColorValue, RGBColorValue, RGBColorValue];\nexport const wrapRGBColor = (color: RGBColor): string => `rgb(${color.join(\",\")})`;\nexport const verifyRGBColor = (color: IndexedColor): color is RGBColor => Array.isArray(color);\nexport const validateRGBColor = (color: unknown): color is RGBColor => {\n\tif (Array.isArray(color) && verifyTupleType(color, 3) && color.every<number>((c): c is number => typeof c === \"number\")) {\n\t\ttry {\n\t\t\tcolor.forEach((c) => createRGBColor(c));\n\t\t\treturn true;\n\t\t} catch {\n\t\t\treturn false;\n\t\t}\n\t} else return false;\n};\n\ndeclare const HSLColor: unique symbol;\nexport interface HSLColor {\n\thue: number;\n\tsaturation: number;\n\tlightness: number;\n\t_: typeof HSLColor;\n}\nexport const createHSLColor = (color: { hue: number; saturation: number; lightness: number }): HSLColor => {\n\tif (\n\t\t(color.hue >= 0 || color.hue <= 359) &&\n\t\t(color.saturation >= 0 || color.saturation <= 100) &&\n\t\t(color.lightness >= 0 || color.lightness <= 100)\n\t) {\n\t\treturn color as HSLColor;\n\t} else throw new TypeError(`The supplied HSL value is not an HSL color: \" + color`);\n};\nexport const wrapHSLColor = (color: HSLColor): string => `hsl(${color.hue},${color.saturation}%,${color.lightness}%)`;\nexport const verifyHSLColor = (color: IndexedColor): color is HSLColor => typeof color === \"object\";\nexport const validateHSLColor = (color: unknown): color is HSLColor => {\n\tconst verifyNumberRecord = <K extends PropertyKey>(obj: Record<K, unknown>): obj is Record<K, number> => {\n\t\tfor (const key in obj) {\n\t\t\tif (!Object.prototype.hasOwnProperty.call(obj, key)) continue;\n\t\t\tif (typeof obj[key] !== \"number\") return false;\n\t\t}\n\n\t\treturn true;\n\t};\n\n\tif (typeof color === \"object\" && color && \"hue\" in color && \"saturation\" in color && \"lightness\" in color && verifyNumberRecord(color)) {\n\t\ttry {\n\t\t\tcreateHSLColor(color);\n\t\t\treturn true;\n\t\t} catch {\n\t\t\treturn false;\n\t\t}\n\t} else return false;\n};\n\nexport type IndexedColor = HexColor | RGBColor | HSLColor;\nexport const wrapIndexedColor = (color: IndexedColor): string => {\n\tif (verifyHexColor(color)) {\n\t\treturn color;\n\t} else if (verifyRGBColor(color)) {\n\t\treturn wrapRGBColor(color);\n\t} else if (verifyHSLColor(color)) {\n\t\treturn wrapHSLColor(color);\n\t} else {\n\t\treturn throwOnNever(color);\n\t}\n};\nexport const validateIndexedColor = (color: unknown): color is IndexedColor => {\n\treturn validateHexColor(color) || validateRGBColor(color) || validateHSLColor(color);\n};\n","import { NumericColor } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport { createTupleFromCallback, Tuple } from \"../baseTypes\";\nimport { boardDimension } from \"./movegen/GameInformation/GameData\";\n\nexport interface Cloneable<T> {\n\tcreateClone(): T;\n}\n\nexport interface Memento<S> {\n\tcreateSnapshot(): S;\n\tloadSnapshot(snapshot: S): void;\n}\n\nexport type BoardSquares<T> = Tuple<Tuple<T, typeof boardDimension>, typeof boardDimension>;\nexport const initializeBoardSquares = <T>(baseValue: (v: unknown, k: number) => T): BoardSquares<T> =>\n\tcreateTupleFromCallback(() => createTupleFromCallback(baseValue, boardDimension), boardDimension);\n\nexport const isVerticalPlacement = (color: NumericColor): color is 0 | 2 => color % 2 === 0;\nexport function getVerticalPlacementModulus(num: number): 0 | 1 {\n\tconst result = num % 2;\n\tif (result !== 0 && result !== 1) throw new Error(`Invalid number passed: ${num}`);\n\treturn result;\n}\nexport function getHorizontalPlacementModulus(num: number): 0 | 1 {\n\tconst result = num % 2 ^ 1;\n\tif (result !== 0 && result !== 1) throw new Error(`Invalid number passed: ${num}`);\n\treturn result;\n}\n","import {\n\tcompareMoves,\n\tMove,\n\tMoveComponent,\n\tSpecialMove,\n\tverifyDroppingMove,\n\tverifyInternalMove,\n\tverifyStandardMove\n} from \"../MoveTree/MoveTreeInterface\";\nimport type { Board } from \"./Board\";\n\nexport interface SpecialMoveSettings {\n\thasEnPassant: boolean;\n}\n\nexport function validateBoardMove(board: Board, move: Move): SpecialMoveSettings | false {\n\tlet startingMoves: MoveComponent[];\n\tconst firstMove = move[0];\n\tif (verifyStandardMove(firstMove)) {\n\t\tstartingMoves = board.getLegalMoves(firstMove.startCoordinates[0], firstMove.startCoordinates[1]);\n\t} else if (verifyDroppingMove(firstMove)) {\n\t\tstartingMoves = board.getDroppingMoves(firstMove.piece);\n\t} else if (verifyInternalMove(firstMove)) {\n\t\tstartingMoves = board.getAllowedInternalMoves();\n\t} else throw new Error(`Unexpected move signature encountered: ${JSON.stringify(move)}`);\n\n\tconst specialMoveSettings: SpecialMoveSettings = {\n\t\thasEnPassant: false\n\t};\n\tif (board.variantData.duckChess && move.length === 1) return false;\n\tfor (const moveComponent of move) {\n\t\tconst move = startingMoves.find((legalMove) => compareMoves(legalMove, moveComponent));\n\t\tif (!move) return false;\n\t\tif (verifyStandardMove(move) && move.specialType === SpecialMove.EnPassant) {\n\t\t\tspecialMoveSettings.hasEnPassant = true;\n\t\t}\n\n\t\tif (move.nextChainedMoves) {\n\t\t\tstartingMoves = move.nextChainedMoves;\n\t\t}\n\t}\n\n\treturn specialMoveSettings;\n}\n","import { assertNonUndefined, createTuple } from \"@client/ts/baseTypes\";\nimport { findLastIndex } from \"@utils/ArrayUtils\";\nimport type { Board } from \"../Board/Board\";\nimport { SpecialMoveSettings, validateBoardMove } from \"../Board/BoardMoveValidator\";\nimport { colors, getPlayerNameFromColor, totalPlayers, VariantType } from \"../GameInformation/GameData\";\nimport { createPieceFromData } from \"../GameInformation/GameUnits/PieceString\";\nimport { assertValidMove, createMoveTree, MoveTreeInterface, verifyValidMove } from \"./MoveTree\";\nimport { createBaseMoveWrapper, MoveWrapper, SpecialMove, verifyStandardMove } from \"./MoveTreeInterface\";\n\nexport function validateMoveTree(board: Board, moves: MoveTreeInterface): MoveTreeInterface {\n\tconst clonedBoard = board.createClone();\n\tclonedBoard.moves = createMoveTree(clonedBoard.createSnapshot());\n\tclonedBoard.pregenerateAttacks();\n\n\tconst dimension = Math.max(...clonedBoard.data.fenOptions.tag(\"dim\"));\n\tfunction traverse(\n\t\tcurrent: MoveWrapper[],\n\t\tcurrentFullMove = 0,\n\t\tcurrentTimeOnClocks = createTuple(board.gameData.timeControl.baseTime, totalPlayers)\n\t): MoveWrapper[] {\n\t\tconst moves: MoveWrapper[] = [];\n\n\t\tlet previousSideToMove = -1;\n\t\tfor (let i = 0; i < current.length; i++) {\n\t\t\tconst moveWrapper = current[i];\n\n\t\t\tconst { moveData, path, alternativeLines } = moveWrapper;\n\t\t\tconst newMoveWrapper = createBaseMoveWrapper(\n\t\t\t\t{ moveData, path: path.slice() },\n\t\t\t\t{\n\t\t\t\t\tcomment: moveWrapper.comment\n\t\t\t\t}\n\t\t\t);\n\t\t\tlet validationResult: SpecialMoveSettings | undefined;\n\t\t\ttry {\n\t\t\t\tif ((validationResult = validateBoardMove(clonedBoard, moveData) || undefined)) {\n\t\t\t\t\tnewMoveWrapper.moveData = moveData;\n\t\t\t\t} else break;\n\t\t\t} catch {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tlet firstStandardMoveSet = false;\n\t\t\tfor (const moveComponent of moveData) {\n\t\t\t\tif (verifyStandardMove(moveComponent)) {\n\t\t\t\t\tif (moveComponent.promotion) {\n\t\t\t\t\t\tmoveComponent.promotion = moveComponent.promotion.map((p) => {\n\t\t\t\t\t\t\tif (p.isWall()) return p;\n\t\t\t\t\t\t\treturn createPieceFromData(clonedBoard.data.sideToMove, p.piece);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!firstStandardMoveSet) {\n\t\t\t\t\t\tnewMoveWrapper.metadata.movingPiece =\n\t\t\t\t\t\t\tclonedBoard.board[moveComponent.startCoordinates[0]][moveComponent.startCoordinates[1]];\n\t\t\t\t\t\tfirstStandardMoveSet = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (validationResult.hasEnPassant) {\n\t\t\t\t\t\tmoveComponent.specialType = SpecialMove.EnPassant;\n\t\t\t\t\t\tvalidationResult.hasEnPassant = false;\n\t\t\t\t\t\tnewMoveWrapper.metadata.isCapture = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (clonedBoard.data.getCapturedPieces(moveComponent).length > 0) newMoveWrapper.metadata.isCapture = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (i === 0 || findLastIndex(clonedBoard.data.fenOptions.tag(\"dead\"), (b) => !b) === previousSideToMove) {\n\t\t\t\tnewMoveWrapper.metadata.currentFullMove = ++currentFullMove;\n\t\t\t}\n\t\t\tnewMoveWrapper.metadata.currentSideToMove = previousSideToMove = clonedBoard.data.sideToMove;\n\t\t\tconst results = clonedBoard.makeMove(moveData);\n\t\t\tfor (let i = 0; i < totalPlayers; i++) {\n\t\t\t\tif (results.checkmates[i]) {\n\t\t\t\t\tnewMoveWrapper.metadata.checkmates++;\n\t\t\t\t} else if (results.checks[i]) {\n\t\t\t\t\tnewMoveWrapper.metadata.checks++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const line of alternativeLines) {\n\t\t\t\tnewMoveWrapper.alternativeLines.push(traverse(line, currentFullMove, [...currentTimeOnClocks]));\n\t\t\t}\n\n\t\t\tif (moveWrapper.metadata.playerClock) {\n\t\t\t\tcurrentTimeOnClocks[previousSideToMove] -= moveWrapper.metadata.playerClock;\n\t\t\t}\n\t\t\tnewMoveWrapper.metadata = { ...moveWrapper.metadata };\n\t\t\tnewMoveWrapper.metadata.playerClock = currentTimeOnClocks[previousSideToMove];\n\t\t\tconst currentMove = clonedBoard.moves.getMove(newMoveWrapper.path);\n\t\t\tassertValidMove(currentMove);\n\t\t\tcurrentMove.metadata = newMoveWrapper.metadata;\n\t\t\tcurrentMove.comment = moveWrapper.comment;\n\t\t\tclonedBoard.moves.stringifyMove(currentMove, dimension);\n\t\t}\n\n\t\treturn moves;\n\t}\n\n\ttraverse(moves.moves);\n\treturn clonedBoard.moves;\n}\n\nexport function changeGameTermination(board: Board) {\n\tconst currentMove = board.moves.getMove([board.moves.moves.length - 1]);\n\tconst snapshot = board.moves.getBoardSnapshot(verifyValidMove(currentMove) ? currentMove : -1);\n\tassertNonUndefined(snapshot);\n\n\tif (snapshot.boardSnapshot.data.gameOver) {\n\t\tboard.gameData.termination = snapshot.boardSnapshot.data.gameOver;\n\t\tif (board.gameData.result) return;\n\t\tif (board.isTwoPlayer || board.gameType.type === VariantType.Teams) {\n\t\t\tconst currentSnapshot = board.createSnapshot();\n\t\t\tboard.loadSnapshot(snapshot.boardSnapshot);\n\t\t\tboard.gameData.result = board.data.getCurrentResult();\n\t\t\tboard.loadSnapshot(currentSnapshot);\n\t\t} else {\n\t\t\tconst currentResults: string[] = [];\n\t\t\tconst dead = board.data.fenOptions.tag(\"dead\"),\n\t\t\t\tresigned = board.data.fenOptions.tag(\"resigned\"),\n\t\t\t\twb = board.data.fenOptions.tag(\"wb\"),\n\t\t\t\tpoints = snapshot.boardSnapshot.data.points;\n\t\t\tfor (const color of colors) {\n\t\t\t\tif (dead[color] || resigned[color]) continue;\n\t\t\t\tcurrentResults.push(`${getPlayerNameFromColor(color, wb)}: ${points[color]}`);\n\t\t\t}\n\t\t\tboard.gameData.result = currentResults.join(\" – \");\n\t\t}\n\t}\n}\n","import \"reflect-metadata\";\nimport { Board } from \"@moveGeneration/Board/Board\";\nimport { totalPlayers } from \"@moveGeneration/GameInformation/GameData\";\nimport type { PieceStringObject } from \"@moveGeneration/GameInformation/GameUnits/PieceString\";\nimport { PieceString } from \"@moveGeneration/GameInformation/GameUnits/PieceString\";\nimport type { InternalMove, StripPieceStringObjects } from \"@moveGeneration/MoveTree/MoveTreeInterface\";\nimport {\n\tMoveWrapper,\n\tProcessSafeMoveWrapper,\n\tMove,\n\tMoveData,\n\tverifyStandardMove,\n\tMoveComponent,\n\tverifyDroppingMove,\n\tMoveTreeSnapshot,\n\tverifyRequiredMove\n} from \"@moveGeneration/MoveTree/MoveTreeInterface\";\nimport { decorateClassWithVariants, VariantRulePublicProperties } from \"@moveGeneration/VariantRules/VariantRule\";\nimport type { VariantDataRules } from \"@moveGeneration/VariantRules/VariantRuleInterface\";\nimport { compareArrays } from \"@utils/ArrayUtils\";\nimport type { NumericColor } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport { serializeBoard } from \"../utils/Tags/InputOutputProcessing\";\nimport { assertNonUndefined, createTuple, FunctionType, Tuple } from \"@client/ts/baseTypes\";\nimport type { GameBoardObjectSetProperties } from \"./GameBoardSlice\";\nimport { stringifyCoordinate } from \"@moveGeneration/Board/BoardInterface\";\nimport { changeGameTermination, validateMoveTree } from \"@moveGeneration/MoveTree/MoveTreeValidator\";\nimport { assertValidMove } from \"@moveGeneration/MoveTree/MoveTree\";\nimport { InsufficientMaterialConstructor } from \"@moveGeneration/VariantRules/VariantRuleDefinitions/BoardVariantModules/InsufficientMaterial/InsufficientMaterialConstructor\";\nimport { InsufficientMaterialChecker } from \"@moveGeneration/VariantRules/VariantRuleDefinitions/BoardVariantModules/InsufficientMaterial/InsufficientMaterialChecker\";\nimport * as StateSerializer from \"@moveGeneration/VariantRules/VariantRuleDefinitions/BoardVariantModules/InsufficientMaterial/StateSerializer\";\nimport { deserializeInsufficientMaterialState } from \"@moveGeneration/VariantRules/VariantRuleDefinitions/BoardVariantModules/InsufficientMaterial/StateSerializer\";\n\nexport const requiredDispatches: Array<keyof RequestManager> = [];\nexport const initialDispatches: Array<keyof RequestManager> = [];\nexport const dispatchSyncRecord: Partial<Record<keyof RequestManager, keyof GameBoardObjectSetProperties>> = {};\n\nfunction withWorkerResult() {\n\treturn function (_: RequestManager, propertyKey: string, descriptor: TypedPropertyDescriptor<FunctionType>) {\n\t\tconst originalMethod = descriptor.value;\n\t\tassertNonUndefined(originalMethod);\n\t\tdescriptor.value = function (...args: unknown[]) {\n\t\t\tpostMessage([propertyKey, originalMethod.apply(this, args)]);\n\t\t};\n\t};\n}\n\nfunction workerDataSync(type: \"required\" | \"initial\", gameObjectPropertySync: keyof GameBoardObjectSetProperties) {\n\treturn function (_: RequestManager, propertyKey: keyof RequestManager) {\n\t\tif (type === \"required\") {\n\t\t\tinitialDispatches.push(propertyKey);\n\t\t\trequiredDispatches.push(propertyKey);\n\t\t} else {\n\t\t\tinitialDispatches.push(propertyKey);\n\t\t}\n\t\tdispatchSyncRecord[propertyKey] = gameObjectPropertySync;\n\t};\n}\n\nclass RequestManager {\n\tprivate board!: Board;\n\tprivate initiallyAliveColors: NumericColor[] = [];\n\tprivate internalMoves: InternalMove[] = [];\n\tprivate legalMoves = new Map<string, MoveData[]>();\n\tprivate fogOfWarPerspective: NumericColor | false = false;\n\n\tprivate stripPieceStrings<T>(object: T): StripPieceStringObjects<T> {\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-return\n\t\treturn JSON.parse(JSON.stringify(object));\n\t}\n\n\tprivate generateInitiallyAliveColors() {\n\t\treturn this.board.data.fenOptions\n\t\t\t.tag(\"dead\")\n\t\t\t.map((d) => !d)\n\t\t\t.reduce<NumericColor[]>((p, n, i) => {\n\t\t\t\tif (n) {\n\t\t\t\t\treturn [...p, i];\n\t\t\t\t} else return p;\n\t\t\t}, []);\n\t}\n\n\tprivate generateCurrentMoves() {\n\t\t(this.internalMoves = this.board.getAllowedInternalMoves()), (this.legalMoves = new Map());\n\t\tfor (const piece of this.board.getPlayerPieces()[this.board.data.sideToMove]) {\n\t\t\tthis.legalMoves.set(stringifyCoordinate(piece), this.board.getLegalMoves(piece[0], piece[1]));\n\t\t}\n\t}\n\n\tconstruct(_variantName: string, pgn4: string) {\n\t\tthis.board = new Board(pgn4);\n\t\tthis.board = decorateClassWithVariants(this.board, Board, this.board.variantRules.boardDecorators);\n\t\tthis.generateInitiallyAliveColors();\n\n\t\tconst insufficientMaterialModule = new InsufficientMaterialConstructor(this.board, (state) => {\n\t\t\tthis.board.insufficientMaterialChecker = new InsufficientMaterialChecker(state, this.board);\n\t\t\tthis.board.moves = validateMoveTree(this.board, this.board.moves);\n\t\t\tthis.board.moves.currentMove = [-1];\n\t\t\tchangeGameTermination(this.board);\n\t\t\tthis.generateCurrentMoves();\n\n\t\t\tpostMessage([\"construct\", StateSerializer.serializeInsufficientMaterialState(state)]);\n\t\t});\n\t\tinsufficientMaterialModule.generateInsufficientMaterialState();\n\t\treturn StateSerializer.serializeInsufficientMaterialState(insufficientMaterialModule.state);\n\t}\n\n\t@withWorkerResult()\n\tconstructWithGeneratedData(pgn4: string, insufficientMaterialState: StateSerializer.SerializedInsufficientMaterialState) {\n\t\tthis.board = new Board(pgn4);\n\t\tthis.board = decorateClassWithVariants(this.board, Board, this.board.variantRules.boardDecorators);\n\t\tthis.generateInitiallyAliveColors();\n\n\t\tthis.board.insufficientMaterialChecker = new InsufficientMaterialChecker(\n\t\t\tdeserializeInsufficientMaterialState(insufficientMaterialState),\n\t\t\tthis.board\n\t\t);\n\t\tthis.board.moves = validateMoveTree(this.board, this.board.moves);\n\t\tthis.board.moves.currentMove = [-1];\n\t\tchangeGameTermination(this.board);\n\t\tthis.generateCurrentMoves();\n\t}\n\n\t@workerDataSync(\"required\", \"publicFENSettings\")\n\t@withWorkerResult()\n\tgetFENSettings() {\n\t\tconst board = this.board;\n\t\tconst royalCount = createTuple(0, totalPlayers);\n\t\tlet isCustomRoyals = false;\n\t\tfor (const row of this.board.board) {\n\t\t\tfor (const square of row) {\n\t\t\t\tif (square.isPiece() && square.piece === \"K\" && ++royalCount[square.color] > 1) {\n\t\t\t\t\tisCustomRoyals = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (isCustomRoyals) break;\n\t\t}\n\n\t\tconst points: Tuple<number, typeof totalPlayers> = [...board.data.points];\n\t\treturn {\n\t\t\tsideToMove: board.data.sideToMove,\n\t\t\tpoints,\n\t\t\tisCustomRoyals,\n\t\t\tfenOptions: board.data.fenOptions.createSerializedState()\n\t\t};\n\t}\n\n\t@workerDataSync(\"initial\", \"initiallyAliveColors\")\n\t@withWorkerResult()\n\tgetInitiallyAliveColors() {\n\t\treturn this.initiallyAliveColors;\n\t}\n\n\t@workerDataSync(\"required\", \"moveTree\")\n\t@withWorkerResult()\n\tgetMoveTree() {\n\t\tconst traverse = (moves: MoveWrapper[], fullMoveCounter = 0): ProcessSafeMoveWrapper[] => {\n\t\t\tconst results: ProcessSafeMoveWrapper[] = [];\n\n\t\t\tfor (const moveWrapper of moves) {\n\t\t\t\tconst resultingWrapper: ProcessSafeMoveWrapper = {\n\t\t\t\t\talternativeLines: [],\n\t\t\t\t\tcomment: moveWrapper.comment,\n\t\t\t\t\tpath: moveWrapper.path.slice(),\n\t\t\t\t\tcachedNames: { ...moveWrapper.cachedNames },\n\t\t\t\t\tmetadata: {\n\t\t\t\t\t\tcurrentSideToMove: moveWrapper.metadata.currentSideToMove,\n\t\t\t\t\t\tplayerClock: moveWrapper.metadata.playerClock,\n\t\t\t\t\t\thighlightedArrows: moveWrapper.metadata.highlightedArrows,\n\t\t\t\t\t\thighlightedSquares: moveWrapper.metadata.highlightedSquares\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (moveWrapper.metadata.currentFullMove) resultingWrapper.metadata.currentFullMove = moveWrapper.metadata.currentFullMove;\n\n\t\t\t\tfor (const alternativeLine of moveWrapper.alternativeLines) {\n\t\t\t\t\tresultingWrapper.alternativeLines.push(traverse(alternativeLine, fullMoveCounter - 1));\n\t\t\t\t}\n\n\t\t\t\tresults.push(resultingWrapper);\n\t\t\t}\n\n\t\t\treturn results;\n\t\t};\n\n\t\treturn traverse(this.board.moves.moves);\n\t}\n\n\t@withWorkerResult()\n\tloadSnapshotByPath(path: number[]) {\n\t\tlet snapshot: MoveTreeSnapshot;\n\t\tif (compareArrays(path, [-1])) {\n\t\t\tconst preliminarySnapshot = this.board.moves.getBoardSnapshot(-1);\n\t\t\tassertNonUndefined(preliminarySnapshot);\n\t\t\tsnapshot = preliminarySnapshot;\n\t\t} else {\n\t\t\tconst currentMove = this.board.moves.getMove(path);\n\t\t\tassertValidMove(currentMove);\n\t\t\tconst preliminarySnapshot = this.board.moves.getBoardSnapshot(currentMove);\n\t\t\tif (!preliminarySnapshot) return false;\n\t\t\tsnapshot = preliminarySnapshot;\n\t\t}\n\n\t\tthis.board.loadSnapshot(snapshot.boardSnapshot);\n\t\tthis.board.moves.currentMove = [...path];\n\t\tthis.generateCurrentMoves();\n\n\t\treturn true;\n\t}\n\n\tprivate verifyNextChainedMovesAreDeleted(\n\t\tmove: Partial<StripPieceStringObjects<MoveComponent>>\n\t): move is StripPieceStringObjects<MoveComponent> & { nextChainedMoves: never } {\n\t\treturn !(\"nextChainedMoves\" in move);\n\t}\n\n\tprivate convertStrippedMoveToNormal(move: StripPieceStringObjects<Move>): Move {\n\t\tconst newMove: MoveComponent[] = [];\n\t\tfor (const moveComponent of move) {\n\t\t\tdelete moveComponent.nextChainedMoves;\n\t\t\tif (!this.verifyNextChainedMovesAreDeleted(moveComponent)) throw new Error(\"Could not delete nextChainedMoves in move component\");\n\n\t\t\tif (verifyStandardMove(moveComponent)) {\n\t\t\t\tnewMove.push({ ...moveComponent, promotion: moveComponent.promotion?.map((p) => PieceString.fromObjectToClass(p)) });\n\t\t\t} else if (verifyDroppingMove(moveComponent)) {\n\t\t\t\tnewMove.push({ ...moveComponent, piece: PieceString.fromObjectToClass(moveComponent.piece) });\n\t\t\t} else newMove.push(moveComponent);\n\t\t}\n\n\t\tif (!verifyRequiredMove(newMove)) throw new Error(\"Supplied move object had 0 move components\");\n\t\treturn newMove;\n\t}\n\n\t@withWorkerResult()\n\tmakeMove(passedMove: StripPieceStringObjects<Move>) {\n\t\tconst board = this.board,\n\t\t\tmove = this.convertStrippedMoveToNormal(passedMove);\n\t\tboard.moves.augmentMoveWithMetadata({\n\t\t\tmove,\n\t\t\tboard,\n\t\t\tmakeMoveFunction: () => {\n\t\t\t\treturn board.makeMove(move);\n\t\t\t}\n\t\t});\n\n\t\tthis.generateCurrentMoves();\n\t}\n\n\t@workerDataSync(\"required\", \"serializedPGN\")\n\t@withWorkerResult()\n\tserializeBoardToPGN() {\n\t\treturn serializeBoard(this.board);\n\t}\n\n\t@withWorkerResult()\n\tgetDroppingMoves(pieceString: PieceStringObject) {\n\t\tif (this.board.data.gameOver) return [];\n\t\treturn this.stripPieceStrings(this.board.getDroppingMoves(PieceString.fromObjectToClass(pieceString)));\n\t}\n\n\t@withWorkerResult()\n\tgetLegalMoves(i: number, j: number) {\n\t\tif (this.board.data.gameOver) return [];\n\t\treturn this.stripPieceStrings(this.legalMoves.get(stringifyCoordinate([i, j])) ?? this.board.getLegalMoves(i, j));\n\t}\n\n\t@workerDataSync(\"required\", \"allowedInternalMoves\")\n\t@withWorkerResult()\n\tgetInternalMoves() {\n\t\tif (this.board.data.gameOver) return [];\n\t\treturn this.stripPieceStrings(this.internalMoves);\n\t}\n\n\t@workerDataSync(\"initial\", \"variantDataRules\")\n\t@withWorkerResult()\n\tgetVariantData() {\n\t\treturn this.stripPieceStrings(this.board.variantData);\n\t}\n\n\t@workerDataSync(\"required\", \"boardSquares\")\n\t@withWorkerResult()\n\tgetBoard() {\n\t\treturn this.board.board.map((r) => r.map((p) => p.toObject()));\n\t}\n\n\t@workerDataSync(\"required\", \"gameData\")\n\t@withWorkerResult()\n\tgetGameData() {\n\t\tconst newGameData = { ...this.board.gameData };\n\t\tif (typeof newGameData.date === \"object\") {\n\t\t\tnewGameData.date = newGameData.date.toUTCString();\n\t\t}\n\t\treturn newGameData;\n\t}\n\n\t@workerDataSync(\"required\", \"currentMove\")\n\t@withWorkerResult()\n\tgetCurrentMove() {\n\t\treturn this.board.moves.currentMove;\n\t}\n\n\t@workerDataSync(\"initial\", \"variantRules\")\n\t@withWorkerResult()\n\tgetVariantRules() {\n\t\tconst resultingRules: Array<VariantRulePublicProperties<keyof VariantDataRules>> = [];\n\t\tfor (const variantRule of this.board.variantRules) {\n\t\t\tresultingRules.push(variantRule.getPublicProperties());\n\t\t}\n\n\t\treturn resultingRules;\n\t}\n\n\t@workerDataSync(\"initial\", \"variantType\")\n\t@withWorkerResult()\n\tgetVariantType() {\n\t\treturn this.board.gameType.type;\n\t}\n\n\t@withWorkerResult()\n\tdeleteMove(path: number[]) {\n\t\tif (this.board.moves.moves.length !== 0) this.board.moves.deleteMove(path);\n\t}\n\n\t@withWorkerResult()\n\tplayPreferredBotMove() {\n\t\tif (this.board.data.getRealPlayers() <= 1) return;\n\t\tconst legalMoves: MoveComponent[] = [];\n\t\tfor (const piece of this.board.getPlayerPieces()[this.board.data.sideToMove]) {\n\t\t\tlegalMoves.push(...(this.legalMoves.get(stringifyCoordinate(piece)) ?? this.board.getLegalMoves(piece[0], piece[1])));\n\t\t}\n\t\t// TODO Pick strongest piece\n\t\tlegalMoves.push(...this.board.preGeneratedAttacks[this.board.data.sideToMove].pieceDrops.piece);\n\t\tlegalMoves.push(...this.board.preGeneratedAttacks[this.board.data.sideToMove].pieceDrops.pawn);\n\t\tlegalMoves.push(...this.internalMoves);\n\n\t\tconst algorithm = this.board.data.fenOptions.getDefaultZombieAlgorithm(this.board.data.sideToMove);\n\t\tconst moves = algorithm.evaluate(legalMoves, this.board);\n\t\treturn this.stripPieceStrings(algorithm.pickPreferredMove(moves));\n\t}\n\n\t@withWorkerResult()\n\tchangeFogPerspective() {\n\t\tif (!this.board.variantData.fogOfWar || this.board.data.getRealPlayers() <= 1) return this.fogOfWarPerspective;\n\t\tif (this.fogOfWarPerspective === false) {\n\t\t\tthis.fogOfWarPerspective = this.board.data.sideToMove;\n\t\t} else {\n\t\t\tconst newPerspective = this.board.data.nextTurn(this.fogOfWarPerspective);\n\t\t\tif (newPerspective === this.board.data.sideToMove) {\n\t\t\t\tthis.fogOfWarPerspective = false;\n\t\t\t} else this.fogOfWarPerspective = newPerspective;\n\t\t}\n\n\t\treturn this.fogOfWarPerspective;\n\t}\n\n\t@workerDataSync(\"required\", \"squareVisibility\")\n\t@withWorkerResult()\n\tgetSquareVisibility() {\n\t\tif (this.fogOfWarPerspective === false) {\n\t\t\treturn this.board.getSquareVisibility();\n\t\t} else {\n\t\t\tconst sideToMove = this.board.data.sideToMove;\n\t\t\tthis.board.data.sideToMove = this.fogOfWarPerspective;\n\t\t\tconst squareVisibility = this.board.getSquareVisibility();\n\t\t\tthis.board.data.sideToMove = sideToMove;\n\t\t\treturn squareVisibility;\n\t\t}\n\t}\n}\n\nexport type BoardWorkerRequest = keyof RequestManager;\nexport interface BoardWorkerRequestBody<K extends BoardWorkerRequest> {\n\trequestName: K;\n\tparameters: BoardWorkerArguments<K>;\n}\nexport type PublicFENSettings = ReturnType<RequestManager[\"getFENSettings\"]>;\nexport type BoardWorkerReturnType<K extends BoardWorkerRequest> = [K, ReturnType<RequestManager[K]>];\nexport type BoardWorkerArguments<K extends BoardWorkerRequest> = Parameters<RequestManager[K]>;\n\nconst requestManager = new RequestManager();\nself.onmessage = <K extends BoardWorkerRequest>(e: MessageEvent<BoardWorkerRequestBody<K>>) => {\n\tif (!(e.data.requestName in RequestManager.prototype)) return;\n\tconst method: FunctionType = RequestManager.prototype[e.data.requestName];\n\tmethod.apply(requestManager, e.data.parameters);\n};\n","import { createTuple } from \"@client/ts/baseTypes\";\nimport type { PlayerBooleanTuple } from \"@moveGeneration/Board/Board\";\nimport { totalPlayers } from \"@moveGeneration/GameInformation/GameData\";\nimport type { NumericColor } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport { initializeBoardSquares } from \"../../BaseInterfaces\";\nimport type { FENData } from \"../FENData/FENData\";\nimport { emptyPieceString, PieceString } from \"../GameInformation/GameUnits/PieceString\";\nimport { decorateClassWithVariants, VariantRule } from \"../VariantRules/VariantRule\";\nimport type { VariantDataRules } from \"../VariantRules/VariantRuleInterface\";\nimport { copyVariantRules } from \"../VariantRules/VariantRuleSetup\";\nimport { PieceControl } from \"./PieceControl\";\nimport { PieceLetter, pieceControlConfigSettings, ControlConfiguration } from \"./PieceControlInterface\";\n\nexport class PieceControlConfigurator {\n\tprivate readonly _control: PieceControl;\n\tprivate readonly _isConfigured: ControlConfiguration;\n\tconstructor(control: PieceControl) {\n\t\tthis._control = control;\n\t\tthis._isConfigured = {\n\t\t\tcoordinates: [0, 0],\n\t\t\tboard: initializeBoardSquares(() => emptyPieceString),\n\t\t\timmunePieces: createTuple(false, totalPlayers),\n\t\t\tcolor: 0\n\t\t};\n\t}\n\n\tsetCoordinates(x: number, y: number) {\n\t\tthis._isConfigured.coordinates = [x, y];\n\t\treturn this;\n\t}\n\tsetBaseImmunePieces(immune: PlayerBooleanTuple) {\n\t\tthis._isConfigured.immunePieces = immune;\n\t\treturn this;\n\t}\n\tsetColor(color: NumericColor) {\n\t\tthis._isConfigured.color = color;\n\t\treturn this;\n\t}\n\tsetBoard(board: PieceString[][]) {\n\t\tthis._isConfigured.board = board;\n\t\treturn this;\n\t}\n\n\tconstructPieceControl(): PieceControl {\n\t\tthis._control.configure(this._isConfigured);\n\t\treturn this._control;\n\t}\n}\n\nexport class PieceControlBuilder {\n\tprivate readonly _generalConfig: {\n\t\tfenData?: FENData;\n\t\tvariantRules?: Array<VariantRule<typeof PieceControl, keyof VariantDataRules>>;\n\t};\n\tconstructor() {\n\t\tthis._generalConfig = {};\n\t}\n\n\tsetFENData(fenData: FENData) {\n\t\tthis._generalConfig.fenData = fenData;\n\t}\n\tsetVariantRules<T extends VariantRule<typeof PieceControl, keyof VariantDataRules>>(rules: T[]) {\n\t\tthis._generalConfig.variantRules = rules;\n\t}\n\tcreatePieceControlWrap(letter: PieceLetter): () => PieceControlConfigurator {\n\t\tconst information = pieceControlConfigSettings[letter];\n\t\tconst control = new information.construct();\n\t\tif (!this._generalConfig.fenData || !this._generalConfig.variantRules) throw new Error(\"PieceControl builder setup is not complete\");\n\t\tcontrol.setFENData(this._generalConfig.fenData);\n\n\t\tconst decoratedControl = decorateClassWithVariants<typeof PieceControl>(\n\t\t\tcontrol,\n\t\t\tPieceControl,\n\t\t\tcopyVariantRules(this._generalConfig.variantRules)\n\t\t);\n\n\t\treturn () => {\n\t\t\treturn new PieceControlConfigurator(decoratedControl);\n\t\t};\n\t}\n}\n","import { assertNonUndefined, createTuple, createTupleFromCallback, Tuple } from \"../../../baseTypes\";\nimport { BoardSquares, Cloneable, initializeBoardSquares, Memento } from \"../../BaseInterfaces\";\nimport { createMoveTree, MoveTreeInterface } from \"../MoveTree/MoveTree\";\nimport {\n\tcreateBaseMoveWrapper,\n\tDroppingMove,\n\tInternalMove,\n\tInternalMoveSignature,\n\tMove,\n\tMoveData,\n\tSpecialMove\n} from \"../MoveTree/MoveTreeInterface\";\nimport { FENData } from \"../FENData/FENData\";\nimport type { PostMoveResults } from \"../FENData/FENDataInterface\";\nimport { boardDimension, colors, GameData, totalPlayers } from \"../GameInformation/GameData\";\nimport { NumericColor, Coordinate, nonPlayablePieces } from \"../GameInformation/GameUnits/GameUnits\";\nimport { createPieceFromData, deadColorIndex, pawnPieceString, PieceString, wallPieceString } from \"../GameInformation/GameUnits/PieceString\";\nimport { PieceControlConfigurator, PieceControlBuilder } from \"../PieceControl/PieceControlBuilder\";\nimport { initPieceControlDeclarations } from \"../PieceControl/PieceControlDeclarations\";\nimport { AttackType, pieceControlConfigSettings, PieceControlGeneratedMove, PieceLetter } from \"../PieceControl/PieceControlInterface\";\nimport { decorateClassWithVariants } from \"../VariantRules/VariantRule\";\nimport { copyVariantRules, validateVariantRules, VariantRuleParsingTypes } from \"../VariantRules/VariantRuleSetup\";\nimport {\n\tDisplaySettings,\n\tcreateGameTypeSettings,\n\tcreateComplexMoveLegalityTracker,\n\tBoardSnapshot,\n\tcreateBasePreGeneratedAttacks,\n\tcompareCoordinates,\n\tstringifyCoordinate,\n\tSpecialMoveGenerationSettings\n} from \"./BoardInterface\";\nimport type { VariantDataRules, VariantHandlerTarget } from \"../VariantRules/VariantRuleInterface\";\nimport { copyClass } from \"@client/ts/utils/ObjectUtils\";\nimport { parsePGN4 } from \"../../utils/Tags/InputOutputProcessing\";\nimport { InsufficientMaterialChecker } from \"@moveGeneration/VariantRules/VariantRuleDefinitions/BoardVariantModules/InsufficientMaterial/InsufficientMaterialChecker\";\n\ninitPieceControlDeclarations();\n\nexport const baseImmunes = createTuple(false, totalPlayers);\nexport type PlayerBooleanTuple = typeof baseImmunes;\n\nexport class Board implements VariantHandlerTarget<Board>, Cloneable<Board>, Memento<BoardSnapshot> {\n\treadonly controls: Record<PieceLetter, () => PieceControlConfigurator> = {};\n\tdata: FENData;\n\tmoves: MoveTreeInterface;\n\tpreGeneratedAttacks = createTupleFromCallback(createBasePreGeneratedAttacks, totalPlayers);\n\tboard: BoardSquares<PieceString>;\n\tisComplexSetup = createComplexMoveLegalityTracker();\n\treadonly gameData: GameData;\n\treadonly gameType = createGameTypeSettings();\n\treadonly variantRules: VariantRuleParsingTypes;\n\treadonly variantData: VariantDataRules;\n\treadonly isTwoPlayer: boolean;\n\tinsufficientMaterialChecker?: InsufficientMaterialChecker;\n\n\t__baseClass: Board;\n\tinitDecoratorSettings() {\n\t\t/* no-op */\n\t}\n\n\t/*---------------------------------- INITIALIZATION -----------------------------------------*/\n\tconstructor(pgn4: string) {\n\t\tthis.__baseClass = this;\n\n\t\tconst parsingResults = parsePGN4(pgn4);\n\t\tthis.gameType.type = parsingResults.gameType;\n\t\tthis.variantRules = parsingResults.variantRules;\n\t\tthis.gameData = parsingResults.gameData;\n\t\tthis.board = parsingResults.board;\n\t\tthis.data = parsingResults.fenData;\n\t\tthis.data.injectBoard(this);\n\t\tthis.data = decorateClassWithVariants<typeof FENData>(this.data, FENData, this.variantRules.fenDataDecorators);\n\t\tthis.variantData = parsingResults.variantRuleData;\n\t\tthis.variantRules = validateVariantRules(this);\n\t\tthis.isTwoPlayer = this.data.getRealPlayers() === 2;\n\t\tthis.initPieceControls(parsingResults.pieceSet);\n\n\t\tthis.moves = createMoveTree(this.createSnapshot());\n\t\tthis.moves.moves = parsingResults.moves;\n\t\tthis.pregenerateAttacks();\n\t}\n\n\tinitPieceControls(pieces: Set<PieceLetter>) {\n\t\tif (pieces.size === 0) return;\n\n\t\tconst builder = new PieceControlBuilder();\n\t\tbuilder.setFENData(this.data);\n\t\tbuilder.setVariantRules(this.variantRules.pieceControlDecorators);\n\n\t\tfor (const piece of pieces) {\n\t\t\tconst pieceControlConfigurator = builder.createPieceControlWrap(piece);\n\t\t\tthis.controls[piece] = pieceControlConfigurator;\n\t\t}\n\t}\n\n\tgetSquareVisibility(): BoardSquares<DisplaySettings[]> {\n\t\treturn initializeBoardSquares(() => []);\n\t}\n\n\tcreateSnapshot(): BoardSnapshot {\n\t\treturn {\n\t\t\tdata: this.data.createSnapshot(),\n\t\t\tboard: this.board.map((a) => [...a]),\n\t\t\tisComplexSetup: Object.assign({}, this.isComplexSetup)\n\t\t};\n\t}\n\n\tloadSnapshot(snapshot: BoardSnapshot) {\n\t\tthis.isComplexSetup = { ...snapshot.isComplexSetup };\n\t\tthis.data.loadSnapshot(snapshot.data);\n\t\tthis.board = snapshot.board.map((row) => [...row]);\n\t\tthis.pregenerateAttacks();\n\t\tthis.runComplexLegalityEvaluationChecks();\n\t}\n\n\tcreateClone(): Board {\n\t\tlet targetObject = copyClass(this.__baseClass, Board);\n\t\ttargetObject.board = this.board.map((a) => [...a]); // PieceStrings are immutable\n\t\ttargetObject.isComplexSetup = Object.assign({}, this.isComplexSetup);\n\t\ttargetObject.preGeneratedAttacks = createTupleFromCallback(createBasePreGeneratedAttacks, totalPlayers);\n\t\ttargetObject.data = this.data.createClone();\n\t\ttargetObject = decorateClassWithVariants<typeof Board>(\n\t\t\ttargetObject,\n\t\t\tBoard,\n\t\t\tcopyVariantRules(this.__baseClass.variantRules.boardDecorators)\n\t\t);\n\t\ttargetObject.data.injectBoard(targetObject);\n\t\ttargetObject.data = decorateClassWithVariants<typeof FENData>(\n\t\t\ttargetObject.data,\n\t\t\tFENData,\n\t\t\tcopyVariantRules(this.__baseClass.variantRules.fenDataDecorators)\n\t\t);\n\t\tconst presumedPieceLetters = new Set<PieceLetter>();\n\t\tlet letter: PieceLetter;\n\t\tfor (letter in this.controls) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(this.controls, letter)) {\n\t\t\t\tpresumedPieceLetters.add(letter);\n\t\t\t}\n\t\t}\n\t\ttargetObject.initPieceControls(presumedPieceLetters);\n\t\ttargetObject.pregenerateAttacks();\n\n\t\treturn targetObject;\n\t}\n\n\t/*---------------------------------- INITIALIZATION -----------------------------------------*/\n\t/*-------------------------------------------------------------------------------------------*/\n\t/*------------------------------------- UTILITIES -------------------------------------------*/\n\n\tisKingInCheck(baseColor: NumericColor, fenRoyal = this.data.fenOptions.tag(\"royal\")): boolean {\n\t\tconst royal = fenRoyal[baseColor];\n\t\tif (!royal || this.data.fenOptions.tag(\"dead\")[baseColor]) return false;\n\t\tconst coordinates = royal;\n\t\treturn !!(\n\t\t\tthis.preGeneratedAttacks[baseColor].slidingPieces[coordinates[0]][coordinates[1]] ||\n\t\t\tthis.preGeneratedAttacks[baseColor].hoppingPieces[coordinates[0]][coordinates[1]]\n\t\t);\n\t}\n\n\tgetPlayerPieces(): Tuple<Coordinate[], typeof totalPlayers> {\n\t\tconst playerPieces: Tuple<Coordinate[], typeof totalPlayers> = [[], [], [], []];\n\n\t\tfor (let i = 0; i < boardDimension; i++) {\n\t\t\tfor (let j = 0; j < boardDimension; j++) {\n\t\t\t\tconst square = this.board[i][j];\n\t\t\t\tif (square.isEmpty()) continue;\n\t\t\t\tconst color = square.color;\n\t\t\t\tif (color !== deadColorIndex) playerPieces[color].push([i, j]);\n\t\t\t}\n\t\t}\n\n\t\treturn playerPieces;\n\t}\n\n\tgetCheckmatesAndStalemates() {\n\t\tconst dead = this.data.fenOptions.tag(\"dead\"),\n\t\t\troyal = this.data.fenOptions.tag(\"royal\");\n\n\t\tconst kingChecks = createTuple(false, totalPlayers);\n\t\tconst legalMoves = createTuple(false, totalPlayers);\n\t\tconst playerPieces = this.getPlayerPieces();\n\t\tlegalMoves[this.data.sideToMove] = true;\n\n\t\tfor (const color of colors) {\n\t\t\tif (dead[color]) continue;\n\t\t\tconst playerArmy = playerPieces[color];\n\t\t\tif (this.isKingInCheck(color)) {\n\t\t\t\tkingChecks[color] = true;\n\t\t\t}\n\t\t\tfor (const piece of playerArmy) {\n\t\t\t\tif (this.getLegalMoves(piece[0], piece[1], color).length) {\n\t\t\t\t\tlegalMoves[color] = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!legalMoves[color]) {\n\t\t\t\tif (this.preGeneratedAttacks[color].pieceDrops.pawn.length || this.preGeneratedAttacks[color].pieceDrops.piece.length) {\n\t\t\t\t\tlegalMoves[color] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst kingCaptures = royal.map((r, i) =>\n\t\t\t!dead[i] && r ? this.board[r[0]][r[1]].isEmpty() || this.board[r[0]][r[1]].color !== i : false\n\t\t);\n\t\treturn {\n\t\t\tcheckmates: legalMoves.map((move, i) => kingCaptures[i] || (!move && kingChecks[i])),\n\t\t\tstalemates: legalMoves.map((move, i) => !move && !kingChecks[i]),\n\t\t\tchecks: kingChecks\n\t\t};\n\t}\n\n\tprivate runComplexLegalityEvaluationChecks(): void {\n\t\tif (this.isComplexSetup.hasComplexRules) return;\n\t\tfor (let i = 0; i < boardDimension; i++) {\n\t\t\tfor (let j = 0; j < boardDimension; j++) {\n\t\t\t\tconst square = this.board[i][j];\n\t\t\t\tif (square.isPiece() && pieceControlConfigSettings[square.piece].moveGenerationSettings.isComplex) {\n\t\t\t\t\tthis.isComplexSetup.hasComplexPieces = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tgetCurrentChecks(sideToMove = this.data.sideToMove) {\n\t\tconst dead = this.data.fenOptions.tag(\"dead\"),\n\t\t\tresigned = this.data.fenOptions.tag(\"resigned\"),\n\t\t\troyal = this.data.fenOptions.tag(\"royal\");\n\n\t\tconst playerRoyals = royal.map((r, i) => (r && !dead[i] && !resigned[i] ? r : null));\n\t\tconst attackingCoordinates = createTupleFromCallback<string[], typeof totalPlayers>(() => [], totalPlayers);\n\t\tfor (const [startingCoordinate, attackList] of this.preGeneratedAttacks[sideToMove].pieceMovements) {\n\t\t\tfor (const attack of attackList) {\n\t\t\t\tfor (const color of colors) {\n\t\t\t\t\tif (color === sideToMove) continue;\n\t\t\t\t\tconst royal = playerRoyals[color];\n\t\t\t\t\tif (royal && compareCoordinates(royal, attack.move)) {\n\t\t\t\t\t\tattackingCoordinates[color].push(startingCoordinate);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn attackingCoordinates;\n\t}\n\n\t/*------------------------------------- UTILITIES -------------------------------------------*/\n\t/*-------------------------------------------------------------------------------------------*/\n\t/*---------------------------------------- API ----------------------------------------------*/\n\n\tmakeMove(move: Move, ignoreNextMoves = false): PostMoveResults {\n\t\tlet returnValues!: PostMoveResults;\n\t\tconst sideToMove = this.data.sideToMove,\n\t\t\tpregeneratedAttacks = this.preGeneratedAttacks;\n\n\t\tfor (let i = 0; i < move.length; i++) {\n\t\t\tif (i === move.length - 1) {\n\t\t\t\treturnValues = this.data.affectOptions(move[i], {\n\t\t\t\t\tignoreCheckmateChecks: ignoreNextMoves,\n\t\t\t\t\tignoreNextTurn: false\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.data.affectOptions(move[i], {\n\t\t\t\t\tignoreCheckmateChecks: ignoreNextMoves,\n\t\t\t\t\tignoreNextTurn: true\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tthis.runComplexLegalityEvaluationChecks();\n\t\tif (ignoreNextMoves) return returnValues;\n\n\t\tconst path = this.moves.currentMove.slice();\n\t\tpath[path.length - 1]++;\n\t\tthis.moves.currentMove = this.moves.setNewMove({\n\t\t\tmove: createBaseMoveWrapper({ path, moveData: move }),\n\t\t\tsnapshot: {\n\t\t\t\tboardSnapshot: this.createSnapshot(),\n\t\t\t\tpregeneratedAttacks: pregeneratedAttacks[sideToMove]\n\t\t\t},\n\t\t\tfenDataString: this.moves.constructPreliminaryHashString(this)\n\t\t});\n\t\tif (this.data.gameOver || this.data.getRealPlayers() === 1) return returnValues;\n\t\tif (returnValues.checkmates[this.data.sideToMove]) {\n\t\t\treturnValues = this.makeMove([{ type: InternalMoveSignature.TeamsCheckmate }], true);\n\t\t} else if (returnValues.stalemates[this.data.sideToMove]) {\n\t\t\treturnValues = this.makeMove([{ type: InternalMoveSignature.Stalemate }]);\n\t\t}\n\n\t\treturn returnValues;\n\t}\n\n\tpregenerateAttacks(exclusiveSideToMoveGeneration: NumericColor | false = false): void {\n\t\tconst royal = this.data.fenOptions.tag(\"royal\");\n\n\t\tthis.preGeneratedAttacks = createTupleFromCallback(createBasePreGeneratedAttacks, totalPlayers);\n\t\tthis.getPlayerPieces().forEach((army, armyColor) => {\n\t\t\tif (exclusiveSideToMoveGeneration !== false && exclusiveSideToMoveGeneration !== armyColor) return;\n\t\t\tconst preGeneratedAttacks = this.preGeneratedAttacks[armyColor];\n\t\t\tfor (const coordinate of army) {\n\t\t\t\tconst square = this.board[coordinate[0]][coordinate[1]];\n\t\t\t\tif (!square.isPiece()) continue;\n\t\t\t\tconst color = square.color;\n\t\t\t\tconst letter = square.piece;\n\t\t\t\tconst controlBuilder = this.controls[letter]().setColor(color).setCoordinates(coordinate[0], coordinate[1]).setBoard(this.board);\n\t\t\t\tconst setting = pieceControlConfigSettings[square.piece];\n\t\t\t\tconst resultingMoves: PieceControlGeneratedMove[] = [];\n\n\t\t\t\tlet control = controlBuilder.setBaseImmunePieces(this.gameType.getBaseColors(color)).constructPieceControl();\n\t\t\t\tresultingMoves.push(...control.getPseudoLegalMoves());\n\n\t\t\t\tcontrol = controlBuilder.setBaseImmunePieces(baseImmunes).constructPieceControl();\n\t\t\t\tif (setting.moveGenerationSettings.isJumping) {\n\t\t\t\t\tconst attacks = control.rayGenJumpingAttacks();\n\t\t\t\t\tfor (const { move: attack } of attacks) {\n\t\t\t\t\t\tfor (const color of colors) {\n\t\t\t\t\t\t\tif (color === armyColor) continue;\n\t\t\t\t\t\t\tconst preGeneratedAttacks = this.preGeneratedAttacks[color];\n\t\t\t\t\t\t\tpreGeneratedAttacks.hoppingPieces[attack[0]][attack[1]]++;\n\t\t\t\t\t\t\tpreGeneratedAttacks.hoppingPieceLines.push([coordinate, attack]);\n\t\t\t\t\t\t\tconst l = preGeneratedAttacks.attackingColors[attack[0]][attack[1]];\n\t\t\t\t\t\t\tif (~l && preGeneratedAttacks.attackingColors[attack[0]][attack[1]] !== color + 1) {\n\t\t\t\t\t\t\t\tpreGeneratedAttacks.attackingColors[attack[0]][attack[1]] = l === 0 ? 1 + color : -1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (setting.moveGenerationSettings.isSliding) {\n\t\t\t\t\tconst attacks = control.rayGenSlidingAttacks();\n\t\t\t\t\tfor (const attack of attacks) {\n\t\t\t\t\t\tfor (const color of colors) {\n\t\t\t\t\t\t\tif (color === armyColor) continue;\n\t\t\t\t\t\t\tconst preGeneratedAttacks = this.preGeneratedAttacks[color];\n\n\t\t\t\t\t\t\tfor (const { move: subAttack } of attack) {\n\t\t\t\t\t\t\t\tpreGeneratedAttacks.slidingPieces[subAttack[0]][subAttack[1]]++;\n\t\t\t\t\t\t\t\tconst l = preGeneratedAttacks.attackingColors[subAttack[0]][subAttack[1]];\n\t\t\t\t\t\t\t\tif (~l && preGeneratedAttacks.attackingColors[subAttack[0]][subAttack[1]] !== color + 1) {\n\t\t\t\t\t\t\t\t\tpreGeneratedAttacks.attackingColors[subAttack[0]][subAttack[1]] = l === 0 ? 1 + color : -1;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (attack.length !== 0) {\n\t\t\t\t\t\t\t\tpreGeneratedAttacks.slidingPiecesLines.push([coordinate, attack.map((m) => m.move)]);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconst coordinateArray: Coordinate[] = [];\n\t\t\t\t\t\t\t\tpreGeneratedAttacks.slidingPiecesLines.push([coordinate, coordinateArray]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst rayGen = control.rayGenSlidingAttacks(AttackType.RayTraceLimited);\n\t\t\t\t\tfor (const attack of rayGen) {\n\t\t\t\t\t\tfor (const color of colors) {\n\t\t\t\t\t\t\tif (color === armyColor) continue;\n\t\t\t\t\t\t\tconst preGeneratedAttacks = this.preGeneratedAttacks[color];\n\n\t\t\t\t\t\t\tif (attack.length !== 0) {\n\t\t\t\t\t\t\t\tlet isRoyalOnLine = false;\n\t\t\t\t\t\t\t\tconst resultingAttack: Coordinate[] = [];\n\t\t\t\t\t\t\t\tfor (const { move } of attack) {\n\t\t\t\t\t\t\t\t\tresultingAttack.push(move);\n\t\t\t\t\t\t\t\t\tif (isRoyalOnLine) {\n\t\t\t\t\t\t\t\t\t\tpreGeneratedAttacks.slidingPieces[move[0]][move[1]]++;\n\t\t\t\t\t\t\t\t\t} else if (compareCoordinates(royal[color] ?? [-1, -1], move)) {\n\t\t\t\t\t\t\t\t\t\tisRoyalOnLine = true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tpreGeneratedAttacks.slidingPiecesRayTracing.push([coordinate, attack.map((m) => m.move)]);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpreGeneratedAttacks.slidingPiecesLines.push([coordinate, []]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tpreGeneratedAttacks.pieceMovements.set(stringifyCoordinate(coordinate), resultingMoves);\n\t\t\t}\n\n\t\t\tpreGeneratedAttacks.pieceDrops.piece = this.getDroppingMoves(createPieceFromData(armyColor, nonPlayablePieces.wall));\n\t\t\tpreGeneratedAttacks.pieceDrops.pawn = this.getDroppingMoves(createPieceFromData(armyColor, pawnPieceString.piece));\n\t\t});\n\t}\n\n\tisSetupComplex() {\n\t\treturn this.isComplexSetup.hasComplexPieces || this.isComplexSetup.hasComplexRules || this.data.isComplexEvaluation();\n\t}\n\n\tisTheMoveLegal(color: NumericColor, moveData: MoveData, isSeirawanDrop = false): boolean {\n\t\tconst royals = this.data.fenOptions.tag(\"royal\");\n\t\tconst {\n\t\t\tstartCoordinates: [pieceI, pieceJ],\n\t\t\tendCoordinates: [attackI, attackJ]\n\t\t} = moveData;\n\t\tconst royal = royals[color];\n\t\tif (!this.board[attackI][attackJ].isEmpty() && royal && attackI === royal[0] && attackJ === royal[1]) return false;\n\n\t\tif (this.isSetupComplex()) {\n\t\t\tconst snapshot = this.createSnapshot();\n\t\t\tconst moveArray: Move = [\n\t\t\t\t{\n\t\t\t\t\tstartCoordinates: [pieceI, pieceJ],\n\t\t\t\t\tendCoordinates: [attackI, attackJ]\n\t\t\t\t}\n\t\t\t];\n\t\t\tif (isSeirawanDrop) moveArray.push({ piece: wallPieceString, endCoordinates: [pieceI, pieceJ] });\n\t\t\tconst { checks, checkmates } = this.makeMove(moveArray, true);\n\n\t\t\tlet isKingInCheck = checks[color] || checkmates[color];\n\t\t\tif (!isKingInCheck) {\n\t\t\t\tthis.pregenerateAttacks(color);\n\t\t\t\tisKingInCheck = this.isKingInCheck(color);\n\t\t\t}\n\t\t\tthis.loadSnapshot(snapshot);\n\t\t\treturn !isKingInCheck;\n\t\t} else {\n\t\t\tconst [royalI, royalJ] = royal ?? [null, null];\n\t\t\tconst preGeneratedAttacks = this.preGeneratedAttacks[color];\n\t\t\tif (royalI === null) return true;\n\t\t\tconst isRoyalMove = royalI === pieceI && royalJ === pieceJ;\n\t\t\tconst attackers = preGeneratedAttacks.hoppingPieces[royalI][royalJ] + preGeneratedAttacks.slidingPieces[royalI][royalJ];\n\t\t\tconst targetSafety = preGeneratedAttacks.slidingPieces[attackI][attackJ] + preGeneratedAttacks.hoppingPieces[attackI][attackJ] === 0;\n\t\t\tconst legalitySettings: { canKingCapture: number | undefined } = {\n\t\t\t\tcanKingCapture: undefined\n\t\t\t};\n\n\t\t\tfor (const kingCaptureColor of colors) {\n\t\t\t\tconst royal = royals[kingCaptureColor];\n\t\t\t\tif (kingCaptureColor !== color && royal && royal[0] === attackI && royal[1] === attackJ) {\n\t\t\t\t\tconst royalDefendedSquare = preGeneratedAttacks.attackingColors[royal[1]][royal[0]];\n\t\t\t\t\tif (\n\t\t\t\t\t\t(royalDefendedSquare === kingCaptureColor + 1 || royalDefendedSquare === 0) &&\n\t\t\t\t\t\t(isRoyalMove || preGeneratedAttacks.attackingColors[royalI][royalJ] === kingCaptureColor + 1)\n\t\t\t\t\t) {\n\t\t\t\t\t\tlegalitySettings.canKingCapture = kingCaptureColor + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!this.gameType.isFFA() && legalitySettings.canKingCapture !== undefined) return true;\n\n\t\t\tfor (const [attackingPiece, attackLine] of preGeneratedAttacks.slidingPiecesRayTracing) {\n\t\t\t\tlet isPieceUnderAttack = false,\n\t\t\t\t\tisRoyalUnderAttack = false,\n\t\t\t\t\tisTheTargetSquarePinListed = false;\n\t\t\t\tfor (const [attackedX, attackedY] of attackLine) {\n\t\t\t\t\tif (!isPieceUnderAttack && attackedX === pieceI && attackedY === pieceJ) isPieceUnderAttack = true;\n\t\t\t\t\telse if (!isTheTargetSquarePinListed && !isRoyalUnderAttack && attackedX === attackI && attackedY === attackJ)\n\t\t\t\t\t\tisTheTargetSquarePinListed = true;\n\t\t\t\t\tif (!isRoyalUnderAttack && attackedX === royalI && attackedY === royalJ) isRoyalUnderAttack = true;\n\n\t\t\t\t\tif (isRoyalMove) {\n\t\t\t\t\t\tif (isRoyalUnderAttack && attackedX === attackI && attackedY === attackJ) {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tlegalitySettings.canKingCapture &&\n\t\t\t\t\t\t\t\tlegalitySettings.canKingCapture > 0 &&\n\t\t\t\t\t\t\t\tthis.board[attackedX][attackedY].color + 1 === legalitySettings.canKingCapture\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tisPieceUnderAttack &&\n\t\t\t\t\t\t\tisRoyalUnderAttack &&\n\t\t\t\t\t\t\t!compareCoordinates(attackingPiece, moveData.endCoordinates) &&\n\t\t\t\t\t\t\t!isTheTargetSquarePinListed\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tlegalitySettings.canKingCapture &&\n\t\t\t\t\t\t\t\tlegalitySettings.canKingCapture > 0 &&\n\t\t\t\t\t\t\t\tthis.board[attackedX][attackedY].color + 1 === legalitySettings.canKingCapture\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (attackers > 1) {\n\t\t\t\treturn isRoyalMove ? targetSafety || Boolean(legalitySettings.canKingCapture) : Boolean(legalitySettings.canKingCapture);\n\t\t\t} else if (attackers === 1) {\n\t\t\t\tif (!isRoyalMove) {\n\t\t\t\t\tif (preGeneratedAttacks.hoppingPieces[royalI][royalJ] === 1) {\n\t\t\t\t\t\tfor (const [attackingPiece, attackCoordinates] of preGeneratedAttacks.hoppingPieceLines) {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tattackCoordinates[0] === royalI &&\n\t\t\t\t\t\t\t\tattackCoordinates[1] === royalJ &&\n\t\t\t\t\t\t\t\tattackingPiece[0] === attackI &&\n\t\t\t\t\t\t\t\tattackingPiece[1] === attackJ\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn Boolean(legalitySettings.canKingCapture);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (const [attackingPiece, attackLine] of preGeneratedAttacks.slidingPiecesLines) {\n\t\t\t\t\t\t\tlet isRoyalUnderAttack = false,\n\t\t\t\t\t\t\t\tisTheTargetSquareBlocked = false;\n\t\t\t\t\t\t\tfor (const [attackedX, attackedY] of attackLine) {\n\t\t\t\t\t\t\t\tif (!isRoyalUnderAttack && attackedX === royalI && attackedY === royalJ) isRoyalUnderAttack = true;\n\t\t\t\t\t\t\t\telse if (!isTheTargetSquareBlocked && !isRoyalUnderAttack && attackedX === attackI && attackedY === attackJ)\n\t\t\t\t\t\t\t\t\tisTheTargetSquareBlocked = true;\n\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tisRoyalUnderAttack &&\n\t\t\t\t\t\t\t\t\t!compareCoordinates(attackingPiece, moveData.endCoordinates) &&\n\t\t\t\t\t\t\t\t\t!isTheTargetSquareBlocked\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\tlegalitySettings.canKingCapture &&\n\t\t\t\t\t\t\t\t\t\tlegalitySettings.canKingCapture > 0 &&\n\t\t\t\t\t\t\t\t\t\tthis.board[attackedX][attackedY].color + 1 === legalitySettings.canKingCapture\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\treturn Boolean(legalitySettings.canKingCapture);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn targetSafety || Boolean(legalitySettings.canKingCapture);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn isRoyalMove ? targetSafety || Boolean(legalitySettings.canKingCapture) : true;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getCastlingMoves(parameters: SpecialMoveGenerationSettings) {\n\t\tconst { i, j, baseColor } = parameters;\n\t\tconst specialMoves: MoveData[] = [];\n\t\tconst royal = this.data.fenOptions.tag(\"royal\")[baseColor];\n\n\t\tif (royal && royal[0] === i && royal[1] === j) {\n\t\t\tif (this.data.fenOptions.isKingsideCastlingAvailable(baseColor, this)) {\n\t\t\t\tspecialMoves.push({\n\t\t\t\t\tstartCoordinates: [i, j],\n\t\t\t\t\tendCoordinates: this.data.fenOptions.getKingsideCastlingEndCoordinate(baseColor),\n\t\t\t\t\tspecialType: SpecialMove.CastlingKingside\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (this.data.fenOptions.isQueensideCastlingAvailable(baseColor, this)) {\n\t\t\t\tspecialMoves.push({\n\t\t\t\t\tstartCoordinates: [i, j],\n\t\t\t\t\tendCoordinates: this.data.fenOptions.getQueensideCastlingEndCoordinate(baseColor),\n\t\t\t\t\tspecialType: SpecialMove.CastlingQueenside\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn specialMoves;\n\t}\n\n\tprivate getEnPassantMoves(parameters: SpecialMoveGenerationSettings) {\n\t\tconst { i, j, baseColor, pieceLetter } = parameters;\n\t\tconst specialMoves: MoveData[] = [];\n\t\tif (pieceControlConfigSettings[pieceLetter].moveGenerationSettings.isPawn) {\n\t\t\tconst enPassantCaptures = this.data.fenOptions.getAvailableEnPassantCaptures(baseColor);\n\t\t\tconst pawnAttacks = this.controls[pieceLetter]()\n\t\t\t\t.setBaseImmunePieces(this.gameType.getBaseColors(baseColor))\n\t\t\t\t.setBoard(this.board)\n\t\t\t\t.setCoordinates(i, j)\n\t\t\t\t.setColor(baseColor)\n\t\t\t\t.constructPieceControl()\n\t\t\t\t.rayGenJumpingAttacks();\n\t\t\tif (enPassantCaptures.length !== 0) {\n\t\t\t\tfor (const attack of pawnAttacks) {\n\t\t\t\t\tfor (const enP of enPassantCaptures) {\n\t\t\t\t\t\tif (compareCoordinates(attack.move, enP)) {\n\t\t\t\t\t\t\tconst snapshot = this.createSnapshot();\n\t\t\t\t\t\t\tconst move: [MoveData] = [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tstartCoordinates: [i, j],\n\t\t\t\t\t\t\t\t\tendCoordinates: attack.move,\n\t\t\t\t\t\t\t\t\tspecialType: SpecialMove.EnPassant,\n\t\t\t\t\t\t\t\t\tisIrreversible: attack.irreversible\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t];\n\n\t\t\t\t\t\t\tthis.makeMove(move, true);\n\t\t\t\t\t\t\tthis.pregenerateAttacks();\n\t\t\t\t\t\t\tif (!this.isKingInCheck(baseColor)) specialMoves.push(move[0]);\n\t\t\t\t\t\t\tthis.loadSnapshot(snapshot);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn specialMoves;\n\t}\n\n\tprivate getSpecialMoves(parameters: SpecialMoveGenerationSettings) {\n\t\treturn [...this.getCastlingMoves(parameters), ...this.getEnPassantMoves(parameters)];\n\t}\n\n\tgetLegalMoves(i: number, j: number, baseColor = this.data.sideToMove, isSeirawanDrop = false): MoveData[] {\n\t\tconst pieceString = this.board[i]?.[j],\n\t\t\troyal = this.data.fenOptions.tag(\"royal\")[baseColor];\n\t\tif (pieceString.isPiece()) {\n\t\t\tconst color = pieceString.color;\n\t\t\tif (color !== baseColor) return [];\n\t\t\tconst pseudoLegalMoves = this.preGeneratedAttacks[color].pieceMovements.get(stringifyCoordinate([i, j]));\n\t\t\tassertNonUndefined(pseudoLegalMoves);\n\n\t\t\tconst specialMoves = this.getSpecialMoves({ i, j, baseColor, pieceLetter: pieceString.piece });\n\t\t\treturn [\n\t\t\t\t...pseudoLegalMoves\n\t\t\t\t\t.map((generatedMove) => {\n\t\t\t\t\t\tconst moveData: MoveData = {\n\t\t\t\t\t\t\tstartCoordinates: [i, j],\n\t\t\t\t\t\t\tendCoordinates: generatedMove.move,\n\t\t\t\t\t\t\tisIrreversible: generatedMove.irreversible\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (generatedMove.move[2]) {\n\t\t\t\t\t\t\tmoveData.promotion = generatedMove.move[2].split(\"\").map((piece) => createPieceFromData(color, piece));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn moveData;\n\t\t\t\t\t})\n\t\t\t\t\t.filter((m) => {\n\t\t\t\t\t\tconst capturedPieces = this.data.getCapturedPieces(m);\n\t\t\t\t\t\tconst isKingCapture = royal && capturedPieces.find((c) => royal[0] === c[0] && royal[1] === c[1]);\n\t\t\t\t\t\treturn this.isTheMoveLegal(color, m, isSeirawanDrop) && !isKingCapture;\n\t\t\t\t\t}),\n\t\t\t\t...specialMoves\n\t\t\t];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tgetDroppingMoves(_piece: PieceString, _sideToMove = this.data.sideToMove): DroppingMove[] {\n\t\treturn [];\n\t}\n\n\tgetAllowedInternalMoves(sideToMove = this.data.sideToMove): InternalMove[] {\n\t\tconst currentMoves = [InternalMoveSignature.DrawByAgreement];\n\n\t\tconst currentSnapshot = this.createSnapshot();\n\t\tthis.makeMove([{ type: InternalMoveSignature.Resign }], true);\n\t\tconst maximum = Math.max(...this.data.points);\n\t\tconst pointIndexes = this.data.points.reduce<number[]>((p, n, i) => (n === maximum ? [...p, i] : p), []);\n\t\tthis.loadSnapshot(currentSnapshot);\n\t\tif (pointIndexes.length === 1 && pointIndexes[0] === sideToMove) {\n\t\t\tcurrentMoves.push(InternalMoveSignature.ClaimWin);\n\t\t} else {\n\t\t\tcurrentMoves.push(InternalMoveSignature.Resign, InternalMoveSignature.Timeout);\n\t\t}\n\n\t\treturn currentMoves.map((type) => ({ type }));\n\t}\n\n\t/*---------------------------------------- API ----------------------------------------------*/\n}\n","import { createTupleFromCallback, Tuple, verifyTupleType } from \"../../../baseTypes\";\nimport { BoardSquares, initializeBoardSquares } from \"../../BaseInterfaces\";\nimport type { FENDataSnapshot } from \"../FENData/FENDataInterface\";\nimport { totalPlayers, VariantType } from \"../GameInformation/GameData\";\nimport { Coordinate, NumericColor, verifyNumericColor } from \"../GameInformation/GameUnits/GameUnits\";\nimport type { PieceString } from \"../GameInformation/GameUnits/PieceString\";\nimport type { DroppingMove } from \"../MoveTree/MoveTreeInterface\";\nimport type { PieceControlGeneratedMove, PieceLetter } from \"../PieceControl/PieceControlInterface\";\nimport type { Board, PlayerBooleanTuple } from \"./Board\";\n\nexport const enum DisplaySettings {\n\tHighlighted,\n\tFogged,\n\tGhosted,\n\tBlindfolded,\n\tPieceFacesCenter\n}\n\nexport interface BoardSnapshot {\n\tdata: FENDataSnapshot;\n\tboard: BoardSquares<PieceString>;\n\tisComplexSetup: Board[\"isComplexSetup\"];\n}\n\nexport interface PreGeneratedAttacks {\n\thoppingPieces: BoardSquares<number>;\n\tslidingPieces: BoardSquares<number>;\n\thoppingPieceLines: Array<[Coordinate, Coordinate]>;\n\tslidingPiecesLines: Array<readonly [startCoordinate: Coordinate, destinations: Coordinate[]]>;\n\tslidingPiecesRayTracing: Array<readonly [startCoordinate: Coordinate, destinations: Coordinate[]]>;\n\tattackingColors: BoardSquares<number>;\n\tvariantRuleCache: {\n\t\thasCaptures?: boolean;\n\t};\n\tpieceMovements: Map<string, PieceControlGeneratedMove[]>;\n\tpieceDrops: {\n\t\tpawn: DroppingMove[];\n\t\tpiece: DroppingMove[];\n\t};\n}\n\nexport interface SpecialMoveGenerationSettings {\n\ti: number;\n\tj: number;\n\tbaseColor: NumericColor;\n\tpieceLetter: PieceLetter;\n}\n\nconst baseTeams: Tuple<boolean, typeof totalPlayers> = [true, false, true, false];\nexport const stringifyCoordinate = (coordinate: Coordinate) => `${coordinate[0]}:${coordinate[1]}`;\nexport const unstringifyCoordinate = (coordinate: string): Coordinate => {\n\tconst result = coordinate.split(\":\").map((v) => Number(v));\n\tif (verifyTupleType(result, 2) && result.every((n) => !Number.isNaN(n))) {\n\t\treturn result;\n\t} else throw new Error(`Unexpected stringified coordinate: ${coordinate}`);\n};\nexport const createGameTypeSettings = () => ({\n\ttype: VariantType.FFA,\n\tteamSettings: {\n\t\tfirstTeamColors: baseTeams.map((e) => e),\n\t\tsecondTeamColors: baseTeams.map((e) => !e)\n\t},\n\tgetBaseColors(color: NumericColor): PlayerBooleanTuple {\n\t\tif (this.isFFA()) {\n\t\t\treturn createTupleFromCallback((_, i) => i === color, totalPlayers);\n\t\t} else {\n\t\t\treturn this.teamSettings.firstTeamColors[color] ? this.teamSettings.firstTeamColors : this.teamSettings.secondTeamColors;\n\t\t}\n\t},\n\tisFFA() {\n\t\treturn this.type === VariantType.FFA || this.type === VariantType.Solo;\n\t},\n\tisSameTeam(colorA: NumericColor, colorB: NumericColor) {\n\t\tif (colorA === colorB) return true;\n\t\tif (this.isFFA()) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn this.teamSettings.firstTeamColors[colorA]\n\t\t\t\t? this.teamSettings.firstTeamColors[colorA] && this.teamSettings.firstTeamColors[colorA]\n\t\t\t\t: this.teamSettings.secondTeamColors[colorA] && this.teamSettings.secondTeamColors[colorB];\n\t\t}\n\t},\n\tgetTeammateColor(color: NumericColor): NumericColor {\n\t\tif (this.isFFA()) return color;\n\t\tconst teammateIndex = this.teamSettings.firstTeamColors[color]\n\t\t\t? this.teamSettings.firstTeamColors.map((b, i) => b && i !== color).indexOf(true)\n\t\t\t: this.teamSettings.secondTeamColors.map((b, i) => b && i !== color).indexOf(true);\n\t\treturn verifyNumericColor(teammateIndex) ? teammateIndex : color;\n\t}\n});\n\nexport const createComplexMoveLegalityTracker = () => ({\n\thasComplexPieces: false,\n\thasComplexRules: false\n});\n\nexport const createBasePreGeneratedAttacks = (): PreGeneratedAttacks => {\n\treturn {\n\t\thoppingPieces: initializeBoardSquares(() => 0),\n\t\tslidingPieces: initializeBoardSquares(() => 0),\n\t\thoppingPieceLines: [],\n\t\tslidingPiecesLines: [],\n\t\tslidingPiecesRayTracing: [],\n\t\tattackingColors: initializeBoardSquares(() => 0),\n\t\tpieceMovements: new Map<string, PieceControlGeneratedMove[]>(),\n\t\tpieceDrops: {\n\t\t\tpawn: [],\n\t\t\tpiece: []\n\t\t},\n\t\tvariantRuleCache: {}\n\t};\n};\n\nexport const compareCoordinates = (coordinate1: Coordinate, coordinate2: Coordinate): boolean =>\n\tcoordinate1[0] === coordinate2[0] && coordinate1[1] === coordinate2[1];\n","import { Tuple, createTupleFromCallback, assertNonUndefined } from \"@client/ts/baseTypes\";\nimport {\n\tCloneable,\n\tgetHorizontalPlacementModulus,\n\tgetVerticalPlacementModulus,\n\tisVerticalPlacement,\n\tMemento\n} from \"@client/ts/logic/BaseInterfaces\";\nimport type { NumericColor, Coordinate } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport {\n\tbotAlgorithms,\n\tZombieMoveGenerationAlgorithm,\n\tZombieType\n} from \"@moveGeneration/VariantRules/VariantRuleDefinitions/BoardVariantModules/EngineMoveGeneration/BotInterface\";\nimport { copyClass } from \"@utils/ObjectUtils\";\nimport type { Board } from \"../../Board/Board\";\nimport { totalPlayers } from \"../../GameInformation/GameData\";\nimport {\n\tcreateFENOptionsTags,\n\tcreateFENOptionsTagsSnapshot,\n\tDynamicFENOptionTag,\n\tFENOptionsSerializedState,\n\tFENOptionsTags,\n\tFENOptionsTagsSnapshot\n} from \"./FENOptionsTagsInterface\";\n\ninterface CastlingData {\n\tendCoordinates: number;\n\tpieceCoordinates: number;\n\tpieceEndCoordinates: number;\n\tcheckSquares: number[];\n}\n\nexport interface FENOptionsSnapshot {\n\ttagsSnapshot: FENOptionsTagsSnapshot;\n}\n\nexport class FENOptions implements Cloneable<FENOptions>, Memento<FENOptionsSnapshot> {\n\tstatic loadSerializedState(state: FENOptionsSerializedState) {\n\t\tconst newTags = createFENOptionsTags();\n\t\tlet key: keyof FENOptionsTags;\n\t\tfor (key in newTags) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(newTags, key)) {\n\t\t\t\tnewTags[key].value = state[key] as never;\n\t\t\t}\n\t\t}\n\n\t\treturn newTags;\n\t}\n\n\ttags = createFENOptionsTags();\n\tprivate castlingKingsideData: Tuple<CastlingData, typeof totalPlayers> = createTupleFromCallback(\n\t\t() => ({ endCoordinates: -1, pieceCoordinates: -1, pieceEndCoordinates: -1, checkSquares: [] }),\n\t\ttotalPlayers\n\t);\n\tprivate castlingQueensideData: Tuple<CastlingData, typeof totalPlayers> = createTupleFromCallback(\n\t\t() => ({ endCoordinates: -1, pieceCoordinates: -1, pieceEndCoordinates: -1, checkSquares: [] }),\n\t\ttotalPlayers\n\t);\n\n\tcreateSnapshot(): FENOptionsSnapshot {\n\t\treturn {\n\t\t\ttagsSnapshot: createFENOptionsTagsSnapshot(this.tags)\n\t\t};\n\t}\n\n\tprivate loadTagSnapshot<V extends FENOptionsTagsSnapshot[keyof FENOptionsTagsSnapshot]>(value: V, tag: DynamicFENOptionTag<V>) {\n\t\ttag.loadSnapshot(value);\n\t}\n\tloadSnapshot(snapshot: FENOptionsSnapshot): void {\n\t\tlet key: keyof FENOptionsTagsSnapshot;\n\t\tfor (key in snapshot.tagsSnapshot) {\n\t\t\tif (!Object.prototype.hasOwnProperty.call(snapshot.tagsSnapshot, key)) continue;\n\t\t\tthis.loadTagSnapshot(snapshot.tagsSnapshot[key], this.tags[key]);\n\t\t}\n\t}\n\n\tprivate verifyKeyTag(key: keyof FENOptionsTags, snapshot: FENOptionsTagsSnapshot): key is keyof FENOptionsTagsSnapshot {\n\t\treturn key in snapshot;\n\t}\n\tcreateClone(): FENOptions {\n\t\tconst newOptions = copyClass(this, FENOptions);\n\t\tconst snapshot = this.createSnapshot();\n\t\tnewOptions.tags = createFENOptionsTags();\n\t\tnewOptions.loadSnapshot(snapshot);\n\n\t\tlet key: keyof FENOptionsTags;\n\t\tfor (key in this.tags) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(this.tags, key) && !this.verifyKeyTag(key, snapshot.tagsSnapshot)) {\n\t\t\t\tnewOptions.tags[key].value = this.tags[key].value;\n\t\t\t}\n\t\t}\n\n\t\treturn newOptions;\n\t}\n\n\ttag<K extends keyof FENOptionsTags>(key: K): FENOptionsTags[K][\"value\"] {\n\t\treturn this.tags[key].value;\n\t}\n\tsetTag<K extends keyof FENOptionsTags>(key: K, value: FENOptionsTags[K][\"value\"]): void {\n\t\tthis.tags[key].value = value;\n\t}\n\n\tcreateSerializedState() {\n\t\tconst serializedState: Partial<FENOptionsSerializedState> = {};\n\t\tlet fenTag: keyof FENOptionsTags;\n\t\tfor (fenTag in this.tags) {\n\t\t\tif (!Object.prototype.hasOwnProperty.call(this.tags, fenTag)) continue;\n\t\t\tconst tag = this.tags[fenTag];\n\t\t\tserializedState[fenTag] = tag.createSnapshot() as never;\n\t\t}\n\n\t\treturn serializedState as FENOptionsSerializedState;\n\t}\n\n\tgenerateCastling(board: Board) {\n\t\tlet [dimensionRY, dimensionBG] = this.tag(\"dim\");\n\t\tif (!this.tag(\"noCorners\")) {\n\t\t\tif (dimensionRY > 8) dimensionRY = 8;\n\t\t\tif (dimensionBG > 8) dimensionBG = 8;\n\t\t}\n\n\t\tconst dimensions: [number, number, number, number] = [dimensionRY, dimensionBG, dimensionRY, dimensionBG];\n\t\tconst royalRanks = this.tag(\"royal\").map((r, i) => (r ? r[getHorizontalPlacementModulus(i)] : r));\n\t\tconst royalCoordinates = this.tag(\"royal\").map((r, i) => (r ? r[getHorizontalPlacementModulus(i)] : r));\n\t\tconst kingsideCastlePieceCoordinate: number[] = [];\n\t\tconst queensideCastlePieceCoordinate: number[] = [];\n\n\t\tconst boardSquares = board.board;\n\t\tfor (let i = 0; i < this.tag(\"royal\").length; i++) {\n\t\t\tconst royalCoordinateI = royalCoordinates[i];\n\t\t\tconst royalRanksI = royalRanks[i];\n\t\t\tif (royalCoordinateI === null || royalRanksI === null) {\n\t\t\t\tkingsideCastlePieceCoordinate.push(-1);\n\t\t\t\tqueensideCastlePieceCoordinate.push(-1);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst condition = i % 2 === 0;\n\t\t\tfor (let j = royalCoordinateI; j < 14; j++) {\n\t\t\t\tconst pieceString = boardSquares[condition ? royalRanksI : j][condition ? j : royalRanksI];\n\t\t\t\tif (!pieceString.isEmpty() && pieceString.piece === this.tag(\"castleWith\")) {\n\t\t\t\t\tkingsideCastlePieceCoordinate.push(j);\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (j === 13) {\n\t\t\t\t\tkingsideCastlePieceCoordinate.push(-1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (let j = royalCoordinateI; j > -1; j--) {\n\t\t\t\tconst pieceString = boardSquares[condition ? royalRanksI : j][condition ? j : royalRanksI];\n\t\t\t\tif (!pieceString.isEmpty() && pieceString.piece === this.tag(\"castleWith\")) {\n\t\t\t\t\tqueensideCastlePieceCoordinate.push(j);\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (j === 0) {\n\t\t\t\t\tqueensideCastlePieceCoordinate.push(-1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (let i = 0; i < this.tag(\"royal\").length; i++) {\n\t\t\tconst royalCoordinate = royalCoordinates[i];\n\t\t\tif (royalCoordinate === null) continue;\n\n\t\t\tconst d = dimensions[i] - 6 < 1 ? 1 : dimensions[i] - 6;\n\n\t\t\tif (kingsideCastlePieceCoordinate[i] === -1) {\n\t\t\t\tthis.tag(\"castleKingside\")[i] = false;\n\t\t\t} else {\n\t\t\t\tconst kArr = [...Array(kingsideCastlePieceCoordinate[i] - royalCoordinate - 1).keys()];\n\t\t\t\tconst endCoordinates = royalCoordinate + d;\n\t\t\t\tconst castlingData = {\n\t\t\t\t\tendCoordinates,\n\t\t\t\t\tcheckSquares: kArr.map((j) => j + royalCoordinate + 1),\n\t\t\t\t\tpieceCoordinates: kingsideCastlePieceCoordinate[i],\n\t\t\t\t\tpieceEndCoordinates: endCoordinates - 1\n\t\t\t\t};\n\t\t\t\tif (royalCoordinate <= 6) {\n\t\t\t\t\tthis.castlingQueensideData[i] = castlingData;\n\t\t\t\t} else {\n\t\t\t\t\tthis.castlingKingsideData[i] = castlingData;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (queensideCastlePieceCoordinate[i] === -1) {\n\t\t\t\tthis.tags.castleQueenside.value[i] = false;\n\t\t\t} else {\n\t\t\t\tconst qArr = [...Array(royalCoordinate - queensideCastlePieceCoordinate[i] - 1).keys()];\n\t\t\t\tconst endCoordinates = royalCoordinate - d;\n\t\t\t\tconst castlingData = {\n\t\t\t\t\tendCoordinates,\n\t\t\t\t\tcheckSquares: royalCoordinate <= 6 ? qArr.map((j) => j + royalCoordinate - 2) : qArr.map((j) => j + royalCoordinate - 3),\n\t\t\t\t\tpieceCoordinates: queensideCastlePieceCoordinate[i],\n\t\t\t\t\tpieceEndCoordinates: endCoordinates + 1\n\t\t\t\t};\n\t\t\t\tif (royalCoordinate <= 6) {\n\t\t\t\t\tthis.castlingKingsideData[i] = castlingData;\n\t\t\t\t} else {\n\t\t\t\t\tthis.castlingQueensideData[i] = castlingData;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate isCastlingAvailable(player: NumericColor, board: Board, checks: number[]): boolean {\n\t\tconst royal = this.tag(\"royal\")[player];\n\t\tif (royal === null) return false;\n\n\t\tconst royalCoordinate = royal[getVerticalPlacementModulus(player)];\n\t\tconst squares = board.board;\n\n\t\tfor (const checkSquare of checks) {\n\t\t\tconst coordinateA = isVerticalPlacement(player) ? royalCoordinate : checkSquare;\n\t\t\tconst coordinateB = isVerticalPlacement(player) ? checkSquare : royalCoordinate;\n\t\t\tif (\n\t\t\t\t!squares[coordinateA][coordinateB].isEmpty() ||\n\t\t\t\tboard.preGeneratedAttacks[player].hoppingPieces[coordinateA][coordinateB] > 0 ||\n\t\t\t\tboard.preGeneratedAttacks[player].slidingPieces[coordinateA][coordinateB] > 0\n\t\t\t)\n\t\t\t\treturn false;\n\t\t}\n\n\t\tif (board.isKingInCheck(player)) return false;\n\n\t\treturn true;\n\t}\n\n\tisKingsideCastlingAvailable(player: NumericColor, board: Board): boolean {\n\t\tif (!this.tag(\"castleKingside\")[player]) return false;\n\t\tif (this.castlingKingsideData[player].endCoordinates === -1) {\n\t\t\tthis.generateCastling(board);\n\t\t}\n\n\t\treturn this.isCastlingAvailable(player, board, this.castlingKingsideData[player].checkSquares);\n\t}\n\n\tisQueensideCastlingAvailable(player: NumericColor, board: Board): boolean {\n\t\tif (!this.tag(\"castleQueenside\")[player]) return false;\n\t\tif (this.castlingQueensideData[player].endCoordinates === -1) {\n\t\t\tthis.generateCastling(board);\n\t\t}\n\n\t\treturn this.isCastlingAvailable(player, board, this.castlingQueensideData[player].checkSquares);\n\t}\n\n\tprivate getCastlingEndCoordinate(player: NumericColor, coordinates: number | undefined): [number, number] {\n\t\tconst royalCoordinate = this.tag(\"royal\")[player]?.[getVerticalPlacementModulus(player)];\n\t\tassertNonUndefined(coordinates);\n\t\tassertNonUndefined(royalCoordinate);\n\t\tconst coordinateA = isVerticalPlacement(player) ? royalCoordinate : coordinates;\n\t\tconst coordinateB = isVerticalPlacement(player) ? coordinates : royalCoordinate;\n\t\treturn [coordinateA, coordinateB];\n\t}\n\n\tgetKingsideCastlingEndCoordinate(player: NumericColor): [number, number] {\n\t\treturn this.getCastlingEndCoordinate(player, this.castlingKingsideData[player].endCoordinates);\n\t}\n\tgetQueensideCastlingEndCoordinate(player: NumericColor): [number, number] {\n\t\treturn this.getCastlingEndCoordinate(player, this.castlingQueensideData[player].endCoordinates);\n\t}\n\tgetKingsideCastlingPieceEndCoordinate(player: NumericColor): [number, number] {\n\t\treturn this.getCastlingEndCoordinate(player, this.castlingKingsideData[player].pieceEndCoordinates);\n\t}\n\tgetQueensideCastlingPieceEndCoordinate(player: NumericColor): [number, number] {\n\t\treturn this.getCastlingEndCoordinate(player, this.castlingQueensideData[player].pieceEndCoordinates);\n\t}\n\tgetKingsideCastlingTandemPiece(player: NumericColor) {\n\t\treturn this.castlingKingsideData[player].pieceCoordinates;\n\t}\n\tgetQueensideCastlingTandemPiece(player: NumericColor) {\n\t\treturn this.castlingQueensideData[player].pieceCoordinates;\n\t}\n\n\tgetAvailableEnPassantCaptures(baseColor: NumericColor): Coordinate[] {\n\t\tconst coordinates: Coordinate[] = [];\n\t\tthis.tag(\"enPassant\").forEach((enPassant, i) => {\n\t\t\tif (i === baseColor) return;\n\t\t\tif (enPassant) coordinates.push(enPassant[0]);\n\t\t});\n\n\t\treturn coordinates.map((e) => [...e]);\n\t}\n\n\tgetDefaultZombieAlgorithm(baseColor: NumericColor): ZombieMoveGenerationAlgorithm {\n\t\tconst algorithm = botAlgorithms.get(this.tag(\"resigned\")[baseColor] ? this.tag(\"zombieType\")[baseColor] : ZombieType.F_Checker);\n\t\tassertNonUndefined(algorithm);\n\t\treturn algorithm;\n\t}\n}\n","import { Cloneable, isVerticalPlacement, Memento } from \"../../BaseInterfaces\";\nimport type { Board, PlayerBooleanTuple } from \"../Board/Board\";\nimport {\n\tcreateDefaultArmyDeathSettings,\n\tcreateDefaultFENEffectSettings,\n\tFENDataSnapshot,\n\tgetNeighboringSideToMove,\n\tPostMoveResults\n} from \"./FENDataInterface\";\nimport {\n\tDroppingMove,\n\tInternalMove,\n\tInternalMoveSignature,\n\tMoveComponent,\n\tMoveData,\n\tSpecialMove,\n\tverifyDroppingMove,\n\tverifyInternalMove,\n\tverifyStandardMove\n} from \"../MoveTree/MoveTreeInterface\";\nimport { Tuple, createTuple, throwOnNever } from \"../../../baseTypes\";\nimport {\n\tcolors,\n\tDrawnResult,\n\tGeneralTermination,\n\tgetPlayerNameFromColor,\n\tResult,\n\tTermination,\n\ttotalPlayers,\n\tverifyDrawingTermination,\n\tverifyWinningTermination\n} from \"../GameInformation/GameData\";\nimport { PieceString, createPieceFromData, emptyPieceString, deadColorIndex } from \"../GameInformation/GameUnits/PieceString\";\nimport { pieceControlConfigSettings } from \"@moveGeneration/PieceControl/PieceControlInterface\";\nimport { compareCoordinates } from \"../Board/BoardInterface\";\nimport { Coordinate, nonPlayablePieces, NumericColor, verifyNumericColor } from \"../GameInformation/GameUnits/GameUnits\";\nimport type { VariantHandlerTarget } from \"../VariantRules/VariantRuleInterface\";\nimport { FENOptions } from \"./FENOptions/FENOptions\";\n\nconst defaultPointsForMate = 20;\nclass FENData implements VariantHandlerTarget<FENData>, Cloneable<FENData>, Memento<FENDataSnapshot> {\n\tpoints: [number, number, number, number];\n\tsideToMove: NumericColor;\n\tfenOptions: FENOptions;\n\tplyCount: number;\n\tboard!: Board;\n\tprivate privateGameOver: Termination | false = false;\n\n\t__baseClass: FENData;\n\tinitDecoratorSettings() {\n\t\t/* no-op */\n\t}\n\n\tconstructor() {\n\t\tthis.points = [0, 0, 0, 0];\n\t\tthis.sideToMove = 0;\n\t\tthis.fenOptions = new FENOptions();\n\t\tthis.plyCount = 0;\n\t\tthis.__baseClass = this;\n\t}\n\n\tget gameOver() {\n\t\treturn this.privateGameOver;\n\t}\n\n\tset gameOver(gameOver: Termination | false) {\n\t\tif (gameOver === false || this.privateGameOver === false) {\n\t\t\tthis.privateGameOver = gameOver;\n\t\t}\n\t}\n\n\tinjectBoard(board: Board) {\n\t\tthis.board = board;\n\t\tthis.fenOptions.generateCastling(board);\n\t}\n\n\tcreateClone(): FENData {\n\t\tconst newFENData = new FENData();\n\t\tnewFENData.fenOptions = this.fenOptions.createClone();\n\t\tnewFENData.points = [...this.points];\n\t\tnewFENData.sideToMove = this.sideToMove;\n\t\tnewFENData.plyCount = this.plyCount;\n\t\treturn newFENData;\n\t}\n\n\tcreateSnapshot(): FENDataSnapshot {\n\t\treturn {\n\t\t\tpoints: [...this.points],\n\t\t\tsideToMove: this.sideToMove,\n\t\t\tfenOptionsSnapshot: this.fenOptions.createSnapshot(),\n\t\t\tplyCount: this.plyCount,\n\t\t\tgameOver: this.gameOver\n\t\t};\n\t}\n\n\tloadSnapshot(snapshot: FENDataSnapshot): void {\n\t\tthis.fenOptions.loadSnapshot(snapshot.fenOptionsSnapshot);\n\t\tthis.points = [...snapshot.points];\n\t\tthis.sideToMove = snapshot.sideToMove;\n\t\tthis.plyCount = snapshot.plyCount;\n\t\tthis.privateGameOver = snapshot.gameOver;\n\t}\n\n\tgetCapturedPieces(moveData: MoveData): Coordinate[] {\n\t\tconst pieceString = this.board.board[moveData.endCoordinates[0]][moveData.endCoordinates[1]];\n\t\treturn pieceString.isEmpty() || pieceString.isDead() ? [] : [[...moveData.endCoordinates]];\n\t}\n\n\tprivate getCastlingPieceEndCoordinates(coordinates: Coordinate, color: NumericColor): [Coordinate, Coordinate] {\n\t\treturn [\n\t\t\tisVerticalPlacement(color)\n\t\t\t\t? [coordinates[0], this.fenOptions.getKingsideCastlingTandemPiece(color)]\n\t\t\t\t: [this.fenOptions.getKingsideCastlingTandemPiece(color), coordinates[1]],\n\t\t\tisVerticalPlacement(color)\n\t\t\t\t? [coordinates[0], this.fenOptions.getQueensideCastlingTandemPiece(color)]\n\t\t\t\t: [this.fenOptions.getQueensideCastlingTandemPiece(color), coordinates[1]]\n\t\t];\n\t}\n\n\tprocessStandardMove(moveData: MoveData): { endPiece: PieceString[] } {\n\t\tconst {\n\t\t\tstartCoordinates: [startI, startJ],\n\t\t\tendCoordinates: [endI, endJ],\n\t\t\tpromotion\n\t\t} = moveData;\n\t\tconst endPiece = this.board.board[endI][endJ];\n\n\t\tconst piece = promotion?.[0] ?? this.board.board[startI][startJ];\n\t\tconst capturedPieces = this.getCapturedPieces(moveData);\n\t\tthis.board.board[endI][endJ] = piece;\n\t\tthis.board.board[startI][startJ] = emptyPieceString;\n\t\tfor (const coordinate of capturedPieces) {\n\t\t\tif (compareCoordinates(coordinate, moveData.startCoordinates)) {\n\t\t\t\tthis.board.board[endI][endJ] = emptyPieceString;\n\t\t\t} else if (!compareCoordinates(coordinate, moveData.endCoordinates)) {\n\t\t\t\tthis.board.board[coordinate[0]][coordinate[1]] = emptyPieceString;\n\t\t\t}\n\t\t}\n\n\t\tconst [kingsidePiece, queensidePiece] = this.getCastlingPieceEndCoordinates(moveData.startCoordinates, this.sideToMove);\n\t\tif (\"specialType\" in moveData) {\n\t\t\tconst type = moveData.specialType;\n\n\t\t\tswitch (type) {\n\t\t\t\tcase SpecialMove.CastlingKingside: {\n\t\t\t\t\tconst secondKPiece = isVerticalPlacement(this.sideToMove)\n\t\t\t\t\t\t? this.board.board[startI][this.fenOptions.getKingsideCastlingTandemPiece(this.sideToMove)]\n\t\t\t\t\t\t: this.board.board[this.fenOptions.getKingsideCastlingTandemPiece(this.sideToMove)][startJ];\n\t\t\t\t\tconst [kI, kJ] = this.fenOptions.getKingsideCastlingPieceEndCoordinate(this.sideToMove);\n\n\t\t\t\t\tthis.board.board[kI][kJ] = secondKPiece;\n\t\t\t\t\tthis.board.board[kingsidePiece[0]][kingsidePiece[1]] = emptyPieceString;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase SpecialMove.CastlingQueenside: {\n\t\t\t\t\tconst secondQPiece = isVerticalPlacement(this.sideToMove)\n\t\t\t\t\t\t? this.board.board[startI][this.fenOptions.getQueensideCastlingTandemPiece(this.sideToMove)]\n\t\t\t\t\t\t: this.board.board[this.fenOptions.getQueensideCastlingTandemPiece(this.sideToMove)][startJ];\n\t\t\t\t\tconst [qI, qJ] = this.fenOptions.getQueensideCastlingPieceEndCoordinate(this.sideToMove);\n\t\t\t\t\tthis.board.board[qI][qJ] = secondQPiece;\n\t\t\t\t\tthis.board.board[queensidePiece[0]][queensidePiece[1]] = emptyPieceString;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tif (type === undefined || !(type in SpecialMove)) {\n\t\t\t\t\t\tconsole.error(`Unknown special move constant: ${String(type)}`);\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst castleKingside = this.fenOptions.tag(\"castleKingside\"),\n\t\t\tcastleQueenside = this.fenOptions.tag(\"castleQueenside\"),\n\t\t\troyal = this.fenOptions.tag(\"royal\");\n\t\tthis.fenOptions.setTag(\n\t\t\t\"royal\",\n\t\t\tthis.fenOptions.tag(\"royal\").map((r, i): Coordinate | null => {\n\t\t\t\tif (r) {\n\t\t\t\t\tif (r[0] === startI && r[1] === startJ) {\n\t\t\t\t\t\tcastleKingside[i] = false;\n\t\t\t\t\t\tcastleQueenside[i] = false;\n\t\t\t\t\t\treturn [endI, endJ];\n\t\t\t\t\t} else return [...r];\n\t\t\t\t} else return null;\n\t\t\t})\n\t\t);\n\n\t\tfor (const color of colors) {\n\t\t\tconst royalPiece = royal[color];\n\t\t\tif (!royalPiece) continue;\n\t\t\tif (compareCoordinates(royalPiece, moveData.startCoordinates)) {\n\t\t\t\tcastleKingside[color] = false;\n\t\t\t\tcastleQueenside[color] = false;\n\t\t\t\tbreak;\n\t\t\t} else if (compareCoordinates(kingsidePiece, moveData.startCoordinates)) {\n\t\t\t\tcastleKingside[color] = false;\n\t\t\t\tbreak;\n\t\t\t} else if (compareCoordinates(queensidePiece, moveData.startCoordinates)) {\n\t\t\t\tcastleQueenside[color] = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn { endPiece: endPiece.isEmpty() ? [] : [endPiece] };\n\t}\n\n\tprotected spreadPointsBetweenPlayersEvenly() {\n\t\tconst resigned = this.fenOptions.tag(\"resigned\"),\n\t\t\tdead = this.fenOptions.tag(\"dead\");\n\t\tconst realPlayers = resigned.reduce((p, n, i) => p + Number(n || dead[i]), 0);\n\t\tconst individualPoints = Math.ceil(this.obtainPointsForMate() / realPlayers);\n\t\tfor (const color of colors) {\n\t\t\tif (!dead[color]) {\n\t\t\t\tthis.assignPoints(color, individualPoints);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate branchBetweenResignationMoves(\n\t\tmove: InternalMoveSignature.Resign | InternalMoveSignature.Timeout | InternalMoveSignature.ClaimWin,\n\t\tsideToMove: NumericColor\n\t) {\n\t\tconst playerName = getPlayerNameFromColor(sideToMove).toUpperCase();\n\t\tswitch (move) {\n\t\t\tcase InternalMoveSignature.Resign:\n\t\t\t\tthis.gameOver = `${playerName} RESIGNED!`;\n\t\t\t\tbreak;\n\t\t\tcase InternalMoveSignature.Timeout:\n\t\t\t\tthis.gameOver = `${playerName} FORFEITS ON TIME!`;\n\t\t\t\tbreak;\n\t\t\tcase InternalMoveSignature.ClaimWin:\n\t\t\t\tthis.gameOver = `${playerName} CLAIMED THE WIN!`;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrowOnNever(move);\n\t\t}\n\t}\n\n\tprocessInternalMove(internalMove: InternalMove): { stalemates: PlayerBooleanTuple } {\n\t\tconst resigned = this.fenOptions.tag(\"resigned\"),\n\t\t\tdead = this.fenOptions.tag(\"dead\");\n\t\tconst stalemates = createTuple(false, totalPlayers);\n\t\tconst insufficientMaterial = this.board.insufficientMaterialChecker?.checkCurrentState(this.board).every((b, i) => {\n\t\t\tif (i === this.sideToMove) {\n\t\t\t\treturn b;\n\t\t\t} else {\n\t\t\t\treturn b || dead[i];\n\t\t\t}\n\t\t});\n\n\t\tswitch (internalMove.type) {\n\t\t\tcase InternalMoveSignature.Stalemate:\n\t\t\t\tdead[this.sideToMove] = true;\n\t\t\t\tstalemates[this.sideToMove] = true;\n\t\t\t\tbreak;\n\t\t\tcase InternalMoveSignature.Resign:\n\t\t\tcase InternalMoveSignature.Timeout:\n\t\t\t\tif (insufficientMaterial) {\n\t\t\t\t\tthis.assignGeneralTermination(\"Timeout vs Insufficient Material\");\n\t\t\t\t}\n\t\t\t// * Fallthrough\n\t\t\tcase InternalMoveSignature.ClaimWin: {\n\t\t\t\tresigned[this.sideToMove] = true;\n\t\t\t\tthis.turnPiecesDead(this.sideToMove, { ...createDefaultArmyDeathSettings(), excludeRoyals: true, doNotSetDead: true });\n\t\t\t\tconst deadPlayers = dead.map((d, i) => d || resigned[i]).filter(Boolean);\n\n\t\t\t\tlet isResignationOver = deadPlayers.length === totalPlayers - 1;\n\t\t\t\tif (insufficientMaterial) {\n\t\t\t\t\tthis.spreadPointsBetweenPlayersEvenly();\n\t\t\t\t} else if (deadPlayers.length === totalPlayers - 1) {\n\t\t\t\t\tconst alivePlayer = deadPlayers.findIndex((d) => !d);\n\t\t\t\t\tif (verifyNumericColor(alivePlayer)) {\n\t\t\t\t\t\tthis.assignPoints(\n\t\t\t\t\t\t\talivePlayer,\n\t\t\t\t\t\t\tthis.countTotalPointsOnBoard().reduce((p, n, i) => p + (i === alivePlayer ? n : 0), 0)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tisResignationOver = true;\n\t\t\t\t\t}\n\t\t\t\t} else if (!this.board.gameType.isFFA()) {\n\t\t\t\t\tisResignationOver = true;\n\t\t\t\t}\n\n\t\t\t\tif (isResignationOver) {\n\t\t\t\t\tthis.branchBetweenResignationMoves(internalMove.type, this.sideToMove);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase InternalMoveSignature.DrawByAgreement:\n\t\t\t\tthis.gameOver = \"½-½ AGREED.\";\n\t\t\t\tbreak;\n\t\t\tcase InternalMoveSignature.Pass:\n\t\t\t\tbreak;\n\t\t\tcase InternalMoveSignature.TeamsCheckmate: {\n\t\t\t\tthis.gameOver = `CHECKMATE • ${this.getCurrentResult()}`;\n\t\t\t\tthis.turnPiecesDead(this.sideToMove);\n\t\t\t\tthis.turnPiecesDead(this.board.gameType.getTeammateColor(this.sideToMove));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\tthrowOnNever(internalMove.type);\n\t\t}\n\n\t\treturn { stalemates };\n\t}\n\n\tprivate processDroppingMove(move: DroppingMove) {\n\t\tconst bank = this.fenOptions.tag(\"bank\"),\n\t\t\tareBanksEnabled = this.fenOptions.tag(\"areBanksEnabled\"),\n\t\t\tsetupComplete = this.fenOptions.tag(\"setupComplete\");\n\t\tif (!this.board.variantData.duckChess && !areBanksEnabled[this.sideToMove]) return;\n\t\tconst playerBank = bank[this.sideToMove];\n\t\tconst pieceStringReference = [...playerBank.keys()].find((pieceString) => pieceString.piece === move.piece.piece);\n\t\tif (!pieceStringReference && !this.board.variantData.duckChess && move.piece.piece !== nonPlayablePieces.duck) return;\n\t\tconst safeReference = pieceStringReference ?? move.piece;\n\n\t\tthis.board.board[move.endCoordinates[0]][move.endCoordinates[1]] = move.piece;\n\n\t\tif (!setupComplete[this.sideToMove]) return;\n\t\tconst bankPieceCount = playerBank.get(safeReference);\n\t\tif (bankPieceCount == 1) {\n\t\t\tplayerBank.delete(safeReference);\n\t\t} else if (bankPieceCount) {\n\t\t\tplayerBank.set(safeReference, bankPieceCount - 1);\n\t\t}\n\t}\n\n\tturnPiecesDead(color: NumericColor, settings = createDefaultArmyDeathSettings()) {\n\t\tconst royal = this.fenOptions.tag(\"royal\"),\n\t\t\tdead = this.fenOptions.tag(\"dead\");\n\t\tconst royalPiece = royal[color];\n\t\tif (!settings.doNotSetDead) {\n\t\t\tdead[color] = true;\n\t\t\troyal[color] = null;\n\t\t}\n\n\t\tfor (const coordinate of this.board.getPlayerPieces()[color]) {\n\t\t\tif (settings.excludeRoyals && royalPiece && compareCoordinates(coordinate, royalPiece)) continue;\n\t\t\tconst piece = this.board.board[coordinate[0]][coordinate[1]].piece;\n\t\t\tif (settings.onlyPawns && !pieceControlConfigSettings[piece].moveGenerationSettings.isPawn) continue;\n\t\t\tthis.board.board[coordinate[0]][coordinate[1]] = createPieceFromData(\n\t\t\t\tdeadColorIndex,\n\t\t\t\tthis.board.board[coordinate[0]][coordinate[1]].piece\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate getKingCaptures() {\n\t\tconst kingCaptures = createTuple(false, totalPlayers);\n\t\tfor (const color of colors) {\n\t\t\tconst royalCoordinate = this.fenOptions.tag(\"royal\")[color];\n\t\t\tif (!royalCoordinate) continue;\n\t\t\tconst pieceString = this.board.board[royalCoordinate[0]][royalCoordinate[1]];\n\t\t\tif (pieceString.isEmpty() || pieceString.color !== color) {\n\t\t\t\tkingCaptures[color] = true;\n\t\t\t}\n\t\t}\n\n\t\treturn kingCaptures;\n\t}\n\n\tprivate processPointsForChecks(currentChecks: Tuple<Set<string>, typeof totalPlayers>) {\n\t\tconst sideToMove = this.sideToMove;\n\t\tconst updatedChecks = this.board.getCurrentChecks(),\n\t\t\tplayerChecks = createTuple(false, totalPlayers);\n\t\tfor (const color of colors) {\n\t\t\tfor (const coordinate of updatedChecks[color]) {\n\t\t\t\tif (!currentChecks[color].has(coordinate)) {\n\t\t\t\t\tplayerChecks[color] = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst checkedPlayers = playerChecks.filter(Boolean).length;\n\t\tif (checkedPlayers === 2) {\n\t\t\tthis.assignPoints(sideToMove, 1);\n\t\t} else if (checkedPlayers === 3) {\n\t\t\tthis.assignPoints(sideToMove, 5);\n\t\t}\n\t}\n\n\taffectOptions(move: MoveComponent, settings = createDefaultFENEffectSettings()): PostMoveResults {\n\t\tlet moveStalemates: PlayerBooleanTuple | undefined;\n\t\tlet endSquare: PieceString[] | undefined;\n\t\tconst currentChecks = this.board.getCurrentChecks().map((arr) => new Set(arr));\n\n\t\tif (verifyInternalMove(move)) {\n\t\t\tmoveStalemates = this.processInternalMove(move).stalemates;\n\t\t} else if (verifyStandardMove(move)) {\n\t\t\tendSquare = this.processStandardMove(move).endPiece;\n\t\t} else if (verifyDroppingMove(move)) {\n\t\t\tthis.processDroppingMove(move);\n\t\t}\n\n\t\tif (!settings.ignoreCheckmateChecks) this.board.pregenerateAttacks();\n\t\tconst { checkmates, stalemates, checks } = settings.ignoreCheckmateChecks\n\t\t\t? {\n\t\t\t\t\tcheckmates: createTuple(false, totalPlayers),\n\t\t\t\t\tchecks: createTuple(false, totalPlayers),\n\t\t\t\t\tstalemates: createTuple(false, totalPlayers)\n\t\t\t  }\n\t\t\t: this.board.getCheckmatesAndStalemates();\n\t\tif (moveStalemates) {\n\t\t\tfor (let i = 0; i < totalPlayers; i++) {\n\t\t\t\tif (moveStalemates[i]) {\n\t\t\t\t\tstalemates[i] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst totalMateSum = checkmates.reduce((p, n) => (n ? p + this.obtainPointsForMate() : p), 0);\n\t\tconst boardAlternations = {\n\t\t\tpointDistribution: {\n\t\t\t\tcheckmatePoints: checkmates.map((_, i) => (i === this.sideToMove ? totalMateSum : 0)),\n\t\t\t\tpieceCapturingPoints: createTuple(0, totalPlayers)\n\t\t\t}\n\t\t};\n\n\t\tif (endSquare) {\n\t\t\tfor (const piece of endSquare) {\n\t\t\t\tboardAlternations.pointDistribution.pieceCapturingPoints[this.sideToMove] = this.getPointsForPiece(piece);\n\t\t\t}\n\t\t}\n\n\t\tconst kingCaptures = this.getKingCaptures();\n\t\tconst dead = this.fenOptions.tag(\"dead\"),\n\t\t\tresigned = this.fenOptions.tag(\"resigned\");\n\t\tif (this.board.gameType.isFFA()) {\n\t\t\tfor (const color of colors) {\n\t\t\t\tif (dead[color] || resigned[color]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (checkmates[color] || (color === this.sideToMove && stalemates[color])) {\n\t\t\t\t\tthis.turnPiecesDead(color);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthis.assignPoints(\n\t\t\t\t\tcolor,\n\t\t\t\t\tboardAlternations.pointDistribution.checkmatePoints[color] + boardAlternations.pointDistribution.pieceCapturingPoints[color]\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tfor (const color of colors) {\n\t\t\t\tif (kingCaptures[color]) {\n\t\t\t\t\tthis.turnPiecesDead(color);\n\t\t\t\t\tthis.assignGeneralTermination(\"King Captured\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconst realPlayers = this.getRealPlayers();\n\t\tconst isOver = this.board.gameType.isFFA() ? realPlayers === 1 : realPlayers !== totalPlayers;\n\t\tif (isOver) this.assignGeneralTermination(\"Checkmate\");\n\n\t\tif (!settings.ignoreNextTurn && !isOver) {\n\t\t\tthis.processPointsForChecks(currentChecks);\n\n\t\t\tconst insufficientPieces = this.board.insufficientMaterialChecker?.checkCurrentState(this.board);\n\t\t\tif (!this.gameOver && insufficientPieces?.every((insufficient, i) => dead[i] || insufficient)) {\n\t\t\t\tthis.gameOver = `INSUFFICIENT MATERIAL • ${this.getCurrentResult()}`;\n\t\t\t\tthis.spreadPointsBetweenPlayersEvenly();\n\t\t\t}\n\t\t\tif (this.getRealPlayers() > 1) {\n\t\t\t\tthis.sideToMove = this.nextTurn();\n\t\t\t}\n\t\t}\n\n\t\treturn { checkmates, stalemates, checks };\n\t}\n\n\tgetRealPlayers() {\n\t\tconst dead = this.fenOptions.tag(\"dead\"),\n\t\t\tresigned = this.fenOptions.tag(\"resigned\");\n\n\t\tlet totalPlayers = 0;\n\t\tfor (const color of colors) {\n\t\t\tif (resigned[color] || dead[color]) continue;\n\t\t\ttotalPlayers++;\n\t\t}\n\t\treturn totalPlayers;\n\t}\n\n\tnextTurn(player: NumericColor = this.sideToMove): NumericColor {\n\t\tif (this.getRealPlayers() <= 1) throw new Error(\"Next turn called while the game is terminated\");\n\t\treturn getNeighboringSideToMove(player, this.fenOptions.tag(\"dead\"));\n\t}\n\n\tpreviousTurn(player: NumericColor = this.sideToMove): NumericColor {\n\t\tconst dead = this.fenOptions.tag(\"dead\");\n\n\t\tif (this.getRealPlayers() <= 1) throw new Error(\"Previous turn called while the game is terminated\");\n\t\tlet sideToMove: number = player;\n\t\tdo {\n\t\t\tsideToMove = sideToMove === 0 ? totalPlayers - 1 : sideToMove - 1;\n\t\t} while (dead[sideToMove]);\n\n\t\tif (verifyNumericColor(sideToMove)) {\n\t\t\treturn sideToMove;\n\t\t} else throw new Error(`Unexpected numeric color: ${sideToMove}`);\n\t}\n\n\tisComplexEvaluation() {\n\t\treturn false;\n\t}\n\n\tobtainPointsForMate() {\n\t\treturn defaultPointsForMate;\n\t}\n\n\tassignPoints(sideToMove: NumericColor, points: number) {\n\t\tif (points > 0) {\n\t\t\tthis.points[sideToMove] += points;\n\t\t}\n\t}\n\n\tgetPointsForPiece(pieceString: PieceString) {\n\t\tif (pieceString.isPiece() && this.board.gameType.isFFA()) {\n\t\t\treturn pieceControlConfigSettings[pieceString.piece].points.singlesPoints;\n\t\t} else return 0;\n\t}\n\n\tcountTotalPointsOnBoard(): Tuple<number, typeof totalPlayers> {\n\t\tconst royal = this.fenOptions.tag(\"royal\"),\n\t\t\tresigned = this.fenOptions.tag(\"resigned\"),\n\t\t\tzombieImmune = this.fenOptions.tag(\"zombieImmune\");\n\n\t\tconst resultingPoints: Tuple<number, typeof totalPlayers> = [0, 0, 0, 0];\n\t\tthis.board.getPlayerPieces().forEach((army, color) => {\n\t\t\tif (zombieImmune[color]) return;\n\n\t\t\tconst royalPiece = royal[color];\n\t\t\tfor (const coordinate of army) {\n\t\t\t\tif (royalPiece && compareCoordinates(coordinate, royalPiece)) {\n\t\t\t\t\tresultingPoints[color] += this.obtainPointsForMate();\n\t\t\t\t} else if (resigned[color]) {\n\t\t\t\t\tconst piece = this.board.board[coordinate[0]][coordinate[1]].piece;\n\t\t\t\t\tresultingPoints[color] += pieceControlConfigSettings[piece].points.singlesPoints;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn resultingPoints;\n\t}\n\n\tgetCurrentResult(): Result {\n\t\tif (this.board.gameType.isFFA()) {\n\t\t\tconst dead = this.fenOptions.tag(\"dead\"),\n\t\t\t\tresigned = this.fenOptions.tag(\"resigned\");\n\n\t\t\tif (!this.board.isTwoPlayer) throw new Error(\"Result can only get called for 2P and teams\");\n\t\t\tconst max = Math.max(...this.points);\n\t\t\tlet firstAlivePlayer: NumericColor | undefined, maximumIndex: NumericColor | undefined;\n\t\t\tfor (const color of colors) {\n\t\t\t\tif (dead[color] || resigned[color]) continue;\n\t\t\t\tif (this.points[color] === max) {\n\t\t\t\t\tif (maximumIndex === undefined) {\n\t\t\t\t\t\tmaximumIndex = color;\n\t\t\t\t\t} else return \"½-½\";\n\t\t\t\t}\n\t\t\t\tif (firstAlivePlayer === undefined) firstAlivePlayer = color;\n\t\t\t}\n\n\t\t\treturn firstAlivePlayer === maximumIndex ? \"1-0\" : \"0-1\";\n\t\t} else {\n\t\t\tlet result: Result = \"½-½\";\n\t\t\tfor (const color of colors) {\n\t\t\t\tif (this.points[color] > 0) {\n\t\t\t\t\tresult = this.board.gameType.teamSettings.firstTeamColors[color] ? \"1-0\" : \"0-1\";\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tassignGeneralTermination(generalTermination: GeneralTermination | DrawnResult, sideToMove?: NumericColor): void {\n\t\tif (this.board.gameType.isFFA() && !this.board.isTwoPlayer) {\n\t\t\tif (sideToMove !== undefined) {\n\t\t\t\tswitch (generalTermination) {\n\t\t\t\t\tcase \"Stalemate\":\n\t\t\t\t\t\tthis.gameOver = `${getPlayerNameFromColor(sideToMove).toUpperCase()} STALEMATED!`;\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (verifyWinningTermination(generalTermination)) {\n\t\t\t\tthis.gameOver = `${generalTermination.toUpperCase()}!`;\n\t\t\t} else if (verifyDrawingTermination(generalTermination)) {\n\t\t\t\tthis.gameOver = `${generalTermination.toUpperCase()}`;\n\t\t\t} else {\n\t\t\t\tthrowOnNever(generalTermination);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.gameOver = `${generalTermination.toUpperCase()} • ${this.getCurrentResult()}`;\n\t\t}\n\t}\n}\n\nexport { FENData, FENOptions };\n","import type { PlayerBooleanTuple } from \"@moveGeneration/Board/Board\";\nimport { NumericColor, verifyNumericColor } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport { Termination, totalPlayers } from \"../GameInformation/GameData\";\nimport type { FENOptionsSnapshot } from \"./FENOptions/FENOptions\";\n\nexport interface FENDataSnapshot {\n\tpoints: [number, number, number, number];\n\tsideToMove: NumericColor;\n\tfenOptionsSnapshot: FENOptionsSnapshot;\n\tplyCount: number;\n\tgameOver: Termination | false;\n}\n\nexport interface PostMoveResults {\n\tchecks: [boolean, boolean, boolean, boolean];\n\tcheckmates: [boolean, boolean, boolean, boolean];\n\tstalemates: [boolean, boolean, boolean, boolean];\n}\n\nexport interface FENEffectSettings {\n\tignoreCheckmateChecks: boolean;\n\tignoreNextTurn: boolean;\n}\n\nexport const createDefaultFENEffectSettings = (): FENEffectSettings => ({\n\tignoreCheckmateChecks: false,\n\tignoreNextTurn: false\n});\n\nexport interface ArmyDeathSettings {\n\texcludeRoyals: boolean;\n\tonlyPawns: boolean;\n\tdoNotSetDead: boolean;\n}\n\nexport const createDefaultArmyDeathSettings = (): ArmyDeathSettings => ({\n\texcludeRoyals: false,\n\tonlyPawns: false,\n\tdoNotSetDead: false\n});\n\nexport function getNeighboringSideToMove(player: NumericColor, dead: PlayerBooleanTuple) {\n\tlet sideToMove: number = player;\n\tdo {\n\t\tsideToMove = sideToMove === totalPlayers - 1 ? 0 : sideToMove + 1;\n\t} while (dead[sideToMove]);\n\n\tif (verifyNumericColor(sideToMove)) {\n\t\treturn sideToMove;\n\t} else throw new Error(`Unexpected numeric color: ${sideToMove}`);\n}\n","import { createTuple, createTupleFromCallback, Tuple, verifyTupleType } from \"@client/ts/baseTypes\";\nimport { compareArrays } from \"@client/ts/utils/ArrayUtils\";\nimport type { PlayerBooleanTuple } from \"../../Board/Board\";\nimport { stringifyCoordinate, unstringifyCoordinate } from \"../../Board/BoardInterface\";\nimport { boardDimension, colors, convertCoordinateToPGN4, totalPlayers } from \"../../GameInformation/GameData\";\nimport { Coordinate, verifyNumericColor } from \"../../GameInformation/GameUnits/GameUnits\";\nimport { createPieceFromString, PieceString } from \"../../GameInformation/GameUnits/PieceString\";\nimport { PieceLetter, verifyPieceLetter } from \"../../PieceControl/PieceControlInterface\";\nimport type { DynamicFENOptionTag, FENOptionsTags, StaticFENOptionTag } from \"./FENOptionsTagsInterface\";\nimport {\n\tverifyZombieType,\n\tZombieType\n} from \"@moveGeneration/VariantRules/VariantRuleDefinitions/BoardVariantModules/EngineMoveGeneration/BotInterface\";\nimport { PGN4_SYNTAX } from \"@client/ts/logic/utils/Tags/Moves/ParsePGNMoves\";\nimport { parseEnPassantCoordinates, parseSingleCoordinate } from \"@client/ts/logic/utils/Tags/Utils\";\nimport { verifyObjectType } from \"@client/ts/utils/ObjectUtils\";\n\ntype ExtractTagsByType<T> = {\n\t[K in keyof FENOptionsTags]: FENOptionsTags[K] extends StaticFENOptionTag<T> ? K : never;\n}[keyof FENOptionsTags];\ntype ExtractTagKeysByType<T> = keyof Pick<FENOptionsTags, ExtractTagsByType<T>>;\n\nconst verifyParameterType = <T>(param: unknown, type: string): param is Tuple<T, typeof totalPlayers> => {\n\treturn Array.isArray(param) && verifyTupleType(param, totalPlayers) && param.every((v) => typeof v === type);\n};\n\ninterface TagFactoryParameters<K extends keyof FENOptionsTags> {\n\tkey: K;\n\tdefaultValue: FENOptionsTags[K][\"value\"];\n}\ninterface DynamicTagFactoryParameters<K extends keyof FENOptionsTags> extends TagFactoryParameters<K> {\n\tisStatic: false;\n}\ninterface StaticTagFactoryParameters<K extends keyof FENOptionsTags> extends TagFactoryParameters<K> {\n\tisStatic: true;\n}\ntype OverloadTagFactoryParameters<K extends keyof FENOptionsTags> = DynamicTagFactoryParameters<K> | StaticTagFactoryParameters<K>;\n\ntype FactoryGeneratedObject<K extends keyof FENOptionsTags> = StaticFENOptionTag<FENOptionsTags[K][\"value\"]> &\n\tPartial<DynamicFENOptionTag<FENOptionsTags[K][\"value\"]>>;\n\ntype BooleanTupleTag = ExtractTagKeysByType<PlayerBooleanTuple>;\nexport function createBooleanTupleTag(parameters: DynamicTagFactoryParameters<BooleanTupleTag>): DynamicFENOptionTag<PlayerBooleanTuple>;\nexport function createBooleanTupleTag(parameters: StaticTagFactoryParameters<BooleanTupleTag>): StaticFENOptionTag<PlayerBooleanTuple>;\nexport function createBooleanTupleTag(parameters: OverloadTagFactoryParameters<BooleanTupleTag>) {\n\tconst { defaultValue, key, isStatic } = parameters;\n\tconst resultingObject: FactoryGeneratedObject<BooleanTupleTag> = {\n\t\tvalue: [...defaultValue],\n\t\tparse(value): PlayerBooleanTuple {\n\t\t\tif (verifyParameterType<boolean>(value, \"boolean\")) {\n\t\t\t\treturn value;\n\t\t\t} else return this.createSnapshot();\n\t\t},\n\t\tserialize() {\n\t\t\tif (key === \"castleKingside\" || key === \"castleQueenside\" || key === \"dead\" || key === \"areBanksEnabled\") return;\n\t\t\tif (!compareArrays(this.value, defaultValue)) {\n\t\t\t\treturn `'${key}':(${this.value.join(\",\")})`;\n\t\t\t} else return;\n\t\t},\n\t\tcreateSnapshot() {\n\t\t\treturn [...this.value];\n\t\t},\n\t\tloadSnapshot(snapshot) {\n\t\t\tconst tuple: PlayerBooleanTuple = [...snapshot];\n\t\t\tthis.value = tuple;\n\t\t}\n\t};\n\n\tif (isStatic) delete resultingObject.loadSnapshot;\n\treturn resultingObject;\n}\n\nconst defaultPawnBaseRank = 2;\nexport const createPawnBaseRankTag = (): FENOptionsTags[\"pawnBaseRank\"] => ({\n\tvalue: defaultPawnBaseRank,\n\tparse(value) {\n\t\treturn typeof value === \"number\" && value > 0 && value <= boardDimension ? value : this.value;\n\t},\n\tserialize() {\n\t\treturn this.value === defaultPawnBaseRank ? undefined : `'pawnBaseRank':${this.value}`;\n\t},\n\tcreateSnapshot() {\n\t\treturn this.value;\n\t}\n});\n\nexport const createEnPassantTag = (): FENOptionsTags[\"enPassant\"] => ({\n\tvalue: createTuple(null, totalPlayers),\n\tparse(input) {\n\t\tif (verifyParameterType<string>(input, \"string\")) {\n\t\t\treturn input.map((v) => parseEnPassantCoordinates(v) ?? null);\n\t\t} else return this.createSnapshot();\n\t},\n\tserialize() {\n\t\tif (this.value.some((v) => !v)) {\n\t\t\treturn `'enPassant':(${this.value\n\t\t\t\t.map((enP) => (enP ? `'${convertCoordinateToPGN4(enP[0])}:${convertCoordinateToPGN4(enP[1])}'` : \"''\"))\n\t\t\t\t.join(\",\")})`;\n\t\t} else return;\n\t},\n\tcreateSnapshot() {\n\t\treturn this.value.map((enP) => (enP ? [[...enP[0]], [...enP[1]]] : enP));\n\t},\n\tloadSnapshot(snapshot) {\n\t\tthis.value = snapshot.map((enP) => (enP ? [[...enP[0]], [...enP[1]]] : enP));\n\t}\n});\n\nconst defaultCastleWith = \"R\";\nexport const createCastleWithTag = (): FENOptionsTags[\"castleWith\"] => ({\n\tvalue: defaultCastleWith,\n\tparse(input) {\n\t\treturn typeof input === \"string\" ? input : this.value;\n\t},\n\tserialize() {\n\t\treturn this.value === defaultCastleWith ? undefined : `'castleWith':${this.value}`;\n\t},\n\tcreateSnapshot() {\n\t\treturn this.value;\n\t}\n});\n\nconst defaultBoxOffset = 0;\nexport const createBoxOffsetTag = (): FENOptionsTags[\"boxOffset\"] => ({\n\tvalue: defaultBoxOffset,\n\tparse(input) {\n\t\treturn typeof input === \"number\" && verifyNumericColor(input) ? input : this.value;\n\t},\n\tserialize() {\n\t\treturn this.value === defaultBoxOffset ? undefined : `'boxOffset':${this.value}`;\n\t},\n\tcreateSnapshot() {\n\t\treturn this.value;\n\t}\n});\n\ntype BooleanTag = ExtractTagsByType<boolean>;\nexport function createBooleanTag(parameters: DynamicTagFactoryParameters<BooleanTag>): DynamicFENOptionTag<boolean>;\nexport function createBooleanTag(parameters: StaticTagFactoryParameters<BooleanTag>): StaticFENOptionTag<boolean>;\nexport function createBooleanTag(parameters: OverloadTagFactoryParameters<BooleanTag>) {\n\tconst { defaultValue, key, isStatic } = parameters;\n\tconst result: FactoryGeneratedObject<BooleanTag> = {\n\t\tvalue: defaultValue,\n\t\tparse(input) {\n\t\t\treturn typeof input === \"boolean\" ? input : this.createSnapshot();\n\t\t},\n\t\tserialize() {\n\t\t\treturn this.value === defaultValue ? undefined : `'${key}':${String(this.value)}`;\n\t\t},\n\t\tcreateSnapshot() {\n\t\t\treturn this.value;\n\t\t},\n\t\tloadSnapshot(snapshot) {\n\t\t\tthis.value = snapshot;\n\t\t}\n\t};\n\n\tif (isStatic) delete result.loadSnapshot;\n\treturn result;\n}\n\nconst defaultDimension: [number, number] = [14, 14];\nexport const createDimensionTag = (): FENOptionsTags[\"dim\"] => ({\n\tvalue: [...defaultDimension],\n\tparse(baseInput) {\n\t\tif (typeof baseInput !== \"string\") return this.createSnapshot();\n\t\tconst input = baseInput.split(\"x\");\n\t\treturn Array.isArray(input) &&\n\t\t\tverifyTupleType(input, 2) &&\n\t\t\tinput.every((i) => {\n\t\t\t\tconst v = Number(i);\n\t\t\t\treturn !isNaN(v) && v >= 2 && v <= 14 && v % 2 === 0;\n\t\t\t})\n\t\t\t? input.map((v) => Number(v)).reverse()\n\t\t\t: this.createSnapshot();\n\t},\n\tserialize() {\n\t\tif (compareArrays(this.value, defaultDimension)) return;\n\t\treturn `'dim':'${this.value.join(\"x\")}'`;\n\t},\n\tcreateSnapshot() {\n\t\treturn [...this.value];\n\t}\n});\n\nconst defaultZombies = createTuple(ZombieType.Rando, totalPlayers);\nexport const createZombiesTag = (): FENOptionsTags[\"zombieType\"] => ({\n\tvalue: [...defaultZombies],\n\tparse(input) {\n\t\tif (Array.isArray(input) && verifyTupleType(input, totalPlayers) && input.every<string>((v): v is string => typeof v === \"string\")) {\n\t\t\tconst newZombies = this.createSnapshot();\n\t\t\tfor (const color of colors) {\n\t\t\t\tconst zombieType = input[color];\n\t\t\t\tif (verifyZombieType(zombieType)) newZombies[color] = zombieType;\n\t\t\t}\n\n\t\t\treturn newZombies;\n\t\t} else return this.createSnapshot();\n\t},\n\tserialize() {\n\t\tif (compareArrays(this.value, defaultZombies)) return;\n\t\treturn `'zombieType':(${this.value.map((t, i) => (t === defaultZombies[i] ? \"''\" : `'${t}'`)).join(\",\")})`;\n\t},\n\tcreateSnapshot() {\n\t\treturn [...this.value];\n\t}\n});\n\nexport const createRoyalTag = (): FENOptionsTags[\"royal\"] => ({\n\tvalue: createTuple(null, totalPlayers),\n\tparse(input) {\n\t\tif (verifyParameterType<string>(input, \"string\")) {\n\t\t\treturn input.map((c) => parseSingleCoordinate(c) ?? null);\n\t\t} else return this.createSnapshot();\n\t},\n\tserialize() {\n\t\treturn `'royal':(${this.value.map((r) => (r ? `'${convertCoordinateToPGN4(r)}'` : \"''\")).join(\",\")})`;\n\t},\n\tcreateSnapshot() {\n\t\treturn this.value.map((c) => (c ? [...c] : c));\n\t},\n\tloadSnapshot(snapshot) {\n\t\tthis.value = snapshot.map((c) => (c ? [...c] : c));\n\t}\n});\n\nexport const createLivesTag = (): FENOptionsTags[\"lives\"] => ({\n\tvalue: createTuple(null, totalPlayers),\n\tparse(input) {\n\t\tif (verifyParameterType<number>(input, \"number\")) {\n\t\t\treturn input;\n\t\t} else return this.createSnapshot();\n\t},\n\tserialize() {\n\t\tif (this.value.some((v) => v !== null)) {\n\t\t\treturn `'lives':(${this.value.map((l) => (l ? String(l) : \"1\")).join(\",\")})`;\n\t\t} else return;\n\t},\n\tcreateSnapshot() {\n\t\treturn [...this.value];\n\t},\n\tloadSnapshot(snapshot) {\n\t\tthis.value = [...snapshot];\n\t}\n});\n\nexport const createBankTag = (): FENOptionsTags[\"bank\"] => ({\n\tvalue: createTupleFromCallback(() => new Map<PieceString, number>(), totalPlayers),\n\tparse(input) {\n\t\tconst defaultBanks = createTupleFromCallback(() => new Map<PieceString, number>(), totalPlayers);\n\t\tif (verifyParameterType<string>(input, \"string\")) {\n\t\t\tfor (const color of colors) {\n\t\t\t\tfor (const pieceDefinition of input[color].split(\",\")) {\n\t\t\t\t\tconst [piece, count = 1] = pieceDefinition.split(\"x\").map((e, i) => (i === 1 ? Number(e) : e));\n\t\t\t\t\tif (typeof piece !== \"string\" || typeof count !== \"number\") continue;\n\t\t\t\t\tif (!/^(?:r|b|y|g).$/.test(piece)) continue;\n\t\t\t\t\tconst pieceLetter = piece.charAt(1);\n\t\t\t\t\tif (verifyPieceLetter(pieceLetter)) {\n\t\t\t\t\t\tdefaultBanks[color].set(createPieceFromString(piece), count);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn defaultBanks;\n\t},\n\tserialize() {\n\t\tif (this.value.some((b) => b.size !== 0)) {\n\t\t\treturn `'bank':(${this.value\n\t\t\t\t.map((bank) => {\n\t\t\t\t\tconst resultingStrings: string[] = [];\n\t\t\t\t\tfor (const [piece, count] of bank) {\n\t\t\t\t\t\tif (count === 1) {\n\t\t\t\t\t\t\tresultingStrings.push(piece.value);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresultingStrings.push(`${piece.value}x${count}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn `'${resultingStrings.join(\",\")}'`;\n\t\t\t\t})\n\t\t\t\t.join(\",\")})`;\n\t\t} else return;\n\t},\n\tcreateSnapshot() {\n\t\treturn this.value.map((m) => [...m.entries()].map(([pieceString, count]) => [pieceString.toObject(), count]));\n\t},\n\tloadSnapshot(snapshot) {\n\t\tthis.value = snapshot.map(\n\t\t\t(v) => new Map(v.map(([pieceStringObject, count]) => [PieceString.fromObjectToClass(pieceStringObject), count]))\n\t\t);\n\t}\n});\n\nexport const createPromotedFromTag = (): FENOptionsTags[\"promotedFrom\"] => ({\n\tvalue: new Map(),\n\tparse(input) {\n\t\tconst promotedFromMap = new Map<Coordinate, PieceLetter>();\n\t\tif (!verifyObjectType(input)) return promotedFromMap;\n\t\tfor (const key in input) {\n\t\t\tif (!Object.prototype.hasOwnProperty.call(promotedFromMap, key)) continue;\n\t\t\tconst parsedCoordinate = parseSingleCoordinate(key);\n\t\t\tconst pieceLetter = input[key];\n\t\t\tif (!parsedCoordinate || typeof pieceLetter !== \"string\" || !verifyPieceLetter(pieceLetter)) continue;\n\n\t\t\tpromotedFromMap.set(parsedCoordinate, pieceLetter);\n\t\t}\n\n\t\treturn promotedFromMap;\n\t},\n\tserialize() {\n\t\tif (this.value.size === 0) return;\n\t\tconst promotedFromStrings: string[] = [];\n\t\tfor (const [coordinate, piece] of this.value) {\n\t\t\tpromotedFromStrings.push(`'${convertCoordinateToPGN4(coordinate)}':'${piece}'`);\n\t\t}\n\n\t\treturn `'promotedFrom':{${promotedFromStrings.join(\",\")}}`;\n\t},\n\tcreateSnapshot() {\n\t\tconst newMap: Array<[Coordinate, PieceLetter]> = [];\n\t\tfor (const [coordinate, pieceLetter] of this.value.entries()) {\n\t\t\tnewMap.push([[...coordinate], pieceLetter]);\n\t\t}\n\n\t\treturn newMap;\n\t},\n\tloadSnapshot(snapshot) {\n\t\tthis.value.clear();\n\t\tfor (const [coordinate, pieceLetter] of snapshot) {\n\t\t\tthis.value.set([...coordinate], pieceLetter);\n\t\t}\n\t}\n});\n\nexport const createSetupPointsTag = (): FENOptionsTags[\"setupPoints\"] => ({\n\tvalue: null,\n\tparse(input) {\n\t\tif (verifyParameterType<number>(input, \"number\")) {\n\t\t\treturn input;\n\t\t} else return this.createSnapshot();\n\t},\n\tserialize() {\n\t\tif (this.value) {\n\t\t\treturn `'setupPoints':(${this.value.join(\",\")})`;\n\t\t} else return;\n\t},\n\tcreateSnapshot() {\n\t\treturn this.value ? [...this.value] : this.value;\n\t},\n\tloadSnapshot(snapshot) {\n\t\tthis.value = snapshot ? [...snapshot] : snapshot;\n\t}\n});\n\nexport const createSeirawanDropsTag = (): FENOptionsTags[\"seirawanDrops\"] => ({\n\tvalue: createTupleFromCallback(() => new Set<string>(), totalPlayers),\n\tparse(input) {\n\t\tconst defaultValue = createTupleFromCallback(() => new Set<string>(), totalPlayers);\n\t\tif (\n\t\t\tArray.isArray(input) &&\n\t\t\t(verifyTupleType(input, totalPlayers) || verifyTupleType(input, totalPlayers + 1)) &&\n\t\t\tinput.every<unknown[]>((v): v is unknown[] => Array.isArray(v))\n\t\t) {\n\t\t\tfor (const color of colors) {\n\t\t\t\tconst seirawanDropsArray = input[color];\n\t\t\t\tif (!seirawanDropsArray.every<string>((v): v is string => typeof v === \"string\")) continue;\n\n\t\t\t\tfor (const pieceDefinition of seirawanDropsArray) {\n\t\t\t\t\tif (!PGN4_SYNTAX.COORDINATE_REGEX.test(pieceDefinition)) continue;\n\t\t\t\t\tconst coordinate = parseSingleCoordinate(pieceDefinition);\n\t\t\t\t\tif (coordinate) {\n\t\t\t\t\t\tdefaultValue[color].add(stringifyCoordinate(coordinate));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn defaultValue;\n\t},\n\tserialize() {\n\t\tif (this.value.every((m) => m.size === 0)) return;\n\t\treturn `'seirawanDrops':(${this.value\n\t\t\t.map((coordinates) => {\n\t\t\t\treturn `(${[...coordinates].map((coord) => `'${convertCoordinateToPGN4(unstringifyCoordinate(coord))}'`).join(\",\")})`;\n\t\t\t})\n\t\t\t.join(\",\")})`;\n\t},\n\tcreateSnapshot() {\n\t\treturn this.value.map((s) => [...s.values()]);\n\t},\n\tloadSnapshot(snapshot) {\n\t\tthis.value = snapshot.map((s) => new Set(s));\n\t}\n});\n","import { createTuple, Tuple } from \"@client/ts/baseTypes\";\nimport type { Coordinate, NumericColor } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport type { ZombieType } from \"@moveGeneration/VariantRules/VariantRuleDefinitions/BoardVariantModules/EngineMoveGeneration/BotInterface\";\nimport type { Memento } from \"../../../BaseInterfaces\";\nimport type { PlayerBooleanTuple } from \"../../Board/Board\";\nimport { totalPlayers } from \"../../GameInformation/GameData\";\nimport type { PieceString, PieceStringObject } from \"../../GameInformation/GameUnits/PieceString\";\nimport type { PieceLetter } from \"../../PieceControl/PieceControlInterface\";\nimport * as Tags from \"./FENOptionsTags\";\n\nexport interface StaticFENOptionTag<T, S = T> {\n\tvalue: T;\n\tparse(value: unknown): T;\n\tserialize(): string | undefined;\n\tcreateSnapshot(): S;\n}\nexport type DynamicFENOptionTag<T, S = T> = StaticFENOptionTag<T, S> & Memento<S>;\nexport const verifyDynamicFENOptionKey = (\n\tfenTag: StaticFENOptionTag<unknown> | DynamicFENOptionTag<unknown>,\n\tkey: keyof FENOptionsTags\n): key is keyof FENOptionsTagsSnapshot => \"loadSnapshot\" in fenTag;\nexport const verifyDynamicTag = (fenTag: StaticFENOptionTag<unknown> | DynamicFENOptionTag<unknown>): fenTag is DynamicFENOptionTag<unknown> =>\n\t\"loadSnapshot\" in fenTag;\n\nexport interface FENOptionsTags {\n\tdead: DynamicFENOptionTag<PlayerBooleanTuple>;\n\tresigned: DynamicFENOptionTag<PlayerBooleanTuple>;\n\n\tpawnBaseRank: StaticFENOptionTag<number>;\n\tenPassant: DynamicFENOptionTag<Tuple<[Coordinate, Coordinate] | null, typeof totalPlayers>>;\n\n\tcastleKingside: DynamicFENOptionTag<PlayerBooleanTuple>;\n\tcastleQueenside: DynamicFENOptionTag<PlayerBooleanTuple>;\n\tcastleWith: StaticFENOptionTag<string>;\n\n\tboxOffset: StaticFENOptionTag<NumericColor>;\n\twb: StaticFENOptionTag<boolean>;\n\tdim: StaticFENOptionTag<[number, number]>;\n\tnoCorners: StaticFENOptionTag<boolean>;\n\n\tzombieType: StaticFENOptionTag<Tuple<ZombieType, typeof totalPlayers>>;\n\tzombieImmune: StaticFENOptionTag<PlayerBooleanTuple>;\n\n\troyal: DynamicFENOptionTag<Tuple<Coordinate | null, typeof totalPlayers>>;\n\tlives: DynamicFENOptionTag<Tuple<number | null, typeof totalPlayers>>;\n\n\tbank: DynamicFENOptionTag<\n\t\tTuple<Map<PieceString, number>, typeof totalPlayers>,\n\t\tTuple<Array<[PieceStringObject, number]>, typeof totalPlayers>\n\t>;\n\tpromotedFrom: DynamicFENOptionTag<Map<Coordinate, PieceLetter>, Array<[Coordinate, PieceLetter]>>;\n\tsetupPoints: DynamicFENOptionTag<Tuple<number, typeof totalPlayers> | null>;\n\tsetupComplete: DynamicFENOptionTag<PlayerBooleanTuple>;\n\tseirawanDrops: DynamicFENOptionTag<Tuple<Set<string>, typeof totalPlayers>, Tuple<string[], typeof totalPlayers>>;\n\tareBanksEnabled: DynamicFENOptionTag<PlayerBooleanTuple>;\n}\n\ntype FENOptionsDynamicTags = Pick<\n\tFENOptionsTags,\n\t{\n\t\t[K in keyof FENOptionsTags]: FENOptionsTags[K] extends DynamicFENOptionTag<FENOptionsTags[K][\"value\"]> ? K : never;\n\t}[keyof FENOptionsTags]\n>;\nexport type FENOptionsTagsSnapshot = {\n\t[K in keyof FENOptionsDynamicTags]: ReturnType<FENOptionsTags[K][\"createSnapshot\"]>;\n};\nexport type FENOptionsSerializedState = {\n\t[K in keyof FENOptionsTags]: ReturnType<FENOptionsTags[K][\"createSnapshot\"]>;\n};\n\nexport function createFENOptionsTags(): FENOptionsTags {\n\treturn {\n\t\tdead: Tags.createBooleanTupleTag({ key: \"dead\", defaultValue: createTuple(false, totalPlayers), isStatic: false }),\n\t\tresigned: Tags.createBooleanTupleTag({ key: \"resigned\", defaultValue: createTuple(false, totalPlayers), isStatic: false }),\n\n\t\tpawnBaseRank: Tags.createPawnBaseRankTag(),\n\t\tenPassant: Tags.createEnPassantTag(),\n\n\t\tboxOffset: Tags.createBoxOffsetTag(),\n\t\twb: Tags.createBooleanTag({ key: \"wb\", defaultValue: false, isStatic: true }),\n\t\tdim: Tags.createDimensionTag(),\n\t\tnoCorners: Tags.createBooleanTag({ key: \"noCorners\", defaultValue: false, isStatic: true }),\n\n\t\tcastleKingside: Tags.createBooleanTupleTag({ key: \"castleKingside\", defaultValue: createTuple(true, totalPlayers), isStatic: false }),\n\t\tcastleQueenside: Tags.createBooleanTupleTag({ key: \"castleQueenside\", defaultValue: createTuple(true, totalPlayers), isStatic: false }),\n\t\tcastleWith: Tags.createCastleWithTag(),\n\n\t\tzombieType: Tags.createZombiesTag(),\n\t\tzombieImmune: Tags.createBooleanTupleTag({ key: \"zombieImmune\", defaultValue: createTuple(false, totalPlayers), isStatic: false }),\n\n\t\troyal: Tags.createRoyalTag(),\n\t\tlives: Tags.createLivesTag(),\n\n\t\tbank: Tags.createBankTag(),\n\t\tpromotedFrom: Tags.createPromotedFromTag(),\n\t\tsetupPoints: Tags.createSetupPointsTag(),\n\t\tsetupComplete: Tags.createBooleanTupleTag({ key: \"setupComplete\", defaultValue: createTuple(true, totalPlayers), isStatic: false }),\n\t\tseirawanDrops: Tags.createSeirawanDropsTag(),\n\t\tareBanksEnabled: Tags.createBooleanTupleTag({ key: \"areBanksEnabled\", defaultValue: createTuple(false, totalPlayers), isStatic: false })\n\t};\n}\n\nexport function createFENOptionsTagsSnapshot(tags: FENOptionsTags): FENOptionsTagsSnapshot {\n\tconst resultingTags: Partial<FENOptionsTagsSnapshot> = {};\n\tlet fenTag: keyof FENOptionsTags;\n\tfor (fenTag in tags) {\n\t\tif (!Object.prototype.hasOwnProperty.call(tags, fenTag)) continue;\n\t\tconst tag = tags[fenTag];\n\t\tif (!verifyDynamicFENOptionKey(tag, fenTag) || !verifyDynamicTag(tag)) continue;\n\t\tresultingTags[fenTag] = tag.createSnapshot() as never;\n\t}\n\n\treturn resultingTags as FENOptionsTagsSnapshot;\n}\n","import { throwOnNever, Tuple } from \"@client/ts/baseTypes\";\nimport { truncateNumber } from \"@utils/NumberUtils\";\nimport type { Coordinate, NumericColor } from \"./GameUnits/GameUnits\";\n\nexport type PlayerName = \"Red\" | \"Blue\" | \"Yellow\" | \"Green\" | \"White\" | \"Black\";\nexport type IndividualTermination = \"Won the Race\" | \"Checkmated\" | \"Stalemated\" | \"Forfeits on Time\" | \"Resigned\" | \"Claimed the Win\";\nexport type GeneralTermination = \"King of the Hill\" | \"King Captured\" | \"Checkmate\" | \"Stalemate\";\nexport type Result = \"1-0\" | \"0-1\" | \"½-½\";\nexport type DrawnResult = \"Threefold Repetition\" | \"Insufficient Material\" | \"Timeout vs Insufficient Material\" | \"50-move Rule\";\nexport type Termination =\n\t| `${Uppercase<PlayerName>} ${Uppercase<IndividualTermination>}!`\n\t| `${Uppercase<GeneralTermination | DrawnResult>} • ${Result}`\n\t| `${Uppercase<GeneralTermination>}!`\n\t| `${Uppercase<DrawnResult>}`\n\t| \"½-½ AGREED.\";\nexport const validateComprehensiveUnionArray =\n\t<T>() =>\n\t<U extends readonly T[]>(arr: U & ([T] extends [U[number]] ? unknown : never)) =>\n\t\tarr;\n\nexport interface TimeControl {\n\tbaseTime: number;\n\tincrement: number;\n\tisDelay: boolean;\n}\n\nexport const playerNames = validateComprehensiveUnionArray<PlayerName>()([\"Red\", \"Blue\", \"Yellow\", \"Green\", \"White\", \"Black\"] as const);\nconst individualTerminations = validateComprehensiveUnionArray<IndividualTermination>()([\n\t\"Won the Race\",\n\t\"Checkmated\",\n\t\"Stalemated\",\n\t\"Forfeits on Time\",\n\t\"Claimed the Win\",\n\t\"Resigned\"\n] as const);\nconst generalWinningTerminations = validateComprehensiveUnionArray<GeneralTermination>()([\n\t\"Checkmate\",\n\t\"King Captured\",\n\t\"King of the Hill\",\n\t\"Stalemate\"\n] as const);\nexport const verifyWinningTermination = (termination: string): termination is GeneralTermination => {\n\tconst generalWins: readonly string[] = generalWinningTerminations;\n\treturn generalWins.includes(termination);\n};\nconst generalDrawingTerminations = validateComprehensiveUnionArray<DrawnResult>()([\n\t\"50-move Rule\",\n\t\"Insufficient Material\",\n\t\"Threefold Repetition\",\n\t\"Timeout vs Insufficient Material\"\n] as const);\nexport const verifyDrawingTermination = (termination: string): termination is DrawnResult => {\n\tconst generalDraws: readonly string[] = generalDrawingTerminations;\n\treturn generalDraws.includes(termination);\n};\nconst generalTerminations = validateComprehensiveUnionArray<GeneralTermination | DrawnResult>()([\n\t...generalWinningTerminations,\n\t...generalDrawingTerminations\n] as const);\nconst results = validateComprehensiveUnionArray<Result>()([\"0-1\", \"1-0\", \"½-½\"]);\n\nexport interface GamePlayerData {\n\telo?: number;\n\tname?: string;\n}\nexport interface GameData {\n\tgameNumber: number | undefined;\n\ttimeControl: TimeControl;\n\tplayers: Tuple<GamePlayerData, typeof totalPlayers>;\n\tsite: string | undefined;\n\tdate: Date | string | undefined;\n\tresult: string | undefined;\n\ttermination: Termination | undefined;\n}\n\nexport const validateTerminationString = (termination: string): termination is Termination => {\n\tconst capitalizedTermination = termination.toUpperCase();\n\tif (\n\t\tplayerNames.some((str) => capitalizedTermination.startsWith(str.toUpperCase())) &&\n\t\tindividualTerminations.some((str) => capitalizedTermination.endsWith(str.toUpperCase() + \"!\"))\n\t) {\n\t\treturn true;\n\t} else if (\n\t\t/.*?\\s•\\s.*/.test(capitalizedTermination) &&\n\t\tgeneralTerminations.some((str) => capitalizedTermination.startsWith(str.toUpperCase())) &&\n\t\tresults.some((str) => capitalizedTermination.endsWith(str.toUpperCase()))\n\t) {\n\t\treturn true;\n\t} else if (capitalizedTermination === \"½-½ AGREED.\") {\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\nexport const stringifyTimeControl = (timeControl: TimeControl): string => {\n\tconst noIncrement = timeControl.increment === 0;\n\tlet timeControlString = \"\";\n\tif (timeControl.baseTime < 60) {\n\t\ttimeControlString += noIncrement ? `${timeControl.baseTime * 60} sec` : `${timeControl.baseTime * 60}s`;\n\t} else if (timeControl.baseTime > 60 && noIncrement) {\n\t\ttimeControlString += `${truncateNumber(timeControl.baseTime / 60, 1)} min`;\n\t} else {\n\t\ttimeControlString += truncateNumber(timeControl.baseTime / 60, 1);\n\t}\n\n\tif (!noIncrement) {\n\t\ttimeControlString += \"|\";\n\t\ttimeControlString += timeControl.increment;\n\t}\n\tif (timeControl.isDelay) {\n\t\ttimeControlString += \"D\";\n\t}\n\n\treturn timeControlString;\n};\nexport const obtainTimeControlType = (timeControl: TimeControl): TimeControlType => {\n\tconst { baseTime, increment, isDelay } = timeControl;\n\tif (isDelay) {\n\t\tconst formula = baseTime / 40 + increment;\n\t\tif (formula > 11.5) {\n\t\t\treturn TimeControlType.Rapid;\n\t\t} else if (formula <= 1.375) {\n\t\t\treturn TimeControlType.Hyperbullet;\n\t\t} else if (formula <= 4.5) {\n\t\t\treturn TimeControlType.Bullet;\n\t\t} else {\n\t\t\treturn TimeControlType.Blitz;\n\t\t}\n\t} else {\n\t\tconst formula = baseTime / 60 + increment;\n\t\tif (formula > 7.5) {\n\t\t\treturn TimeControlType.Rapid;\n\t\t} else if (formula <= 0.5) {\n\t\t\treturn TimeControlType.Hyperbullet;\n\t\t} else if (formula <= 3) {\n\t\t\treturn TimeControlType.Bullet;\n\t\t} else {\n\t\t\treturn TimeControlType.Blitz;\n\t\t}\n\t}\n};\n\nexport const convertCoordinateToPGN4 = (coordinate: Coordinate, dimension = boardDimension): string => {\n\tif (dimension === boardDimension) {\n\t\treturn `${String.fromCharCode(coordinate[1] + 97)}${boardDimension - coordinate[0]}`;\n\t} else {\n\t\tconst alternation = (boardDimension - dimension) / 2;\n\t\treturn `${String.fromCharCode(coordinate[1] - alternation + 97)}${boardDimension - coordinate[0] - alternation}`;\n\t}\n};\nexport const convertCoordinateToPGN4Array = (coordinate: Coordinate, dimension = boardDimension): [string, number] => {\n\tif (dimension === boardDimension) {\n\t\treturn [String.fromCharCode(coordinate[1] + 97), boardDimension - coordinate[0]];\n\t} else {\n\t\tconst alternation = (boardDimension - dimension) / 2;\n\t\treturn [String.fromCharCode(coordinate[1] - alternation + 97), boardDimension - coordinate[0] - alternation];\n\t}\n};\n\nexport const getOppositePlacedColor = (color: NumericColor) => {\n\tswitch (color) {\n\t\tcase 0:\n\t\t\treturn 2;\n\t\tcase 1:\n\t\t\treturn 3;\n\t\tcase 2:\n\t\t\treturn 0;\n\t\tcase 3:\n\t\t\treturn 1;\n\t\tdefault:\n\t\t\treturn throwOnNever(color);\n\t}\n};\nexport const getPlayerNameFromColor = (color: NumericColor, wb = false): PlayerName => {\n\tswitch (color) {\n\t\tcase 0:\n\t\t\treturn wb ? \"White\" : \"Red\";\n\t\tcase 1:\n\t\t\treturn \"Blue\";\n\t\tcase 2:\n\t\t\treturn wb ? \"Black\" : \"Yellow\";\n\t\tcase 3:\n\t\t\treturn \"Green\";\n\t\tdefault:\n\t\t\treturn throwOnNever(color);\n\t}\n};\n\ninterface NumericColorAugmentationSettings {\n\twb: boolean;\n}\nexport const createDefaultNumericColorAdjustment = (): NumericColorAugmentationSettings => ({\n\twb: false\n});\n\nexport enum TimeControlType {\n\tHyperbullet = \"Hyperbullet\",\n\tBullet = \"Bullet\",\n\tBlitz = \"Blitz\",\n\tRapid = \"Rapid\"\n}\nexport enum VariantType {\n\tFFA = \"FFA\",\n\tTeams = \"Teams\",\n\tSolo = \"Solo\"\n}\n\nexport const totalPlayers = 4;\nexport const boardDimension = 14;\nexport const colors: readonly NumericColor[] = [0, 1, 2, 3];\n","import type { PlayerName } from \"../GameData\";\n\nexport type Coordinate = [i: number, j: number] | [i: number, j: number, promotion: string];\nexport type NumericColor = 0 | 1 | 2 | 3;\nexport const verifyNumericColor = (num: number): num is NumericColor => num >= 0 && num < 4;\nexport const nonPlayablePieces = {\n\twall: \"X\",\n\ttransparentWall: \"x\",\n\tduck: \"Θ\"\n} as const;\n\nexport const colorEnum = {\n\tr: 0,\n\tb: 1,\n\ty: 2,\n\tg: 3\n} as const;\nexport const verifyColorEnumValue = (value: string): value is keyof typeof colorEnum => value in colorEnum;\n\nexport const playerEnum: Record<PlayerName, NumericColor> = {\n\tRed: 0,\n\tBlue: 1,\n\tYellow: 2,\n\tGreen: 3,\n\tWhite: 0,\n\tBlack: 2\n} as const;\nexport const verifyPlayerEnumValue = (player: string): player is PlayerName => player in playerEnum;\n\nexport const stringColorEnum = {\n\t[0]: \"r\",\n\t[1]: \"b\",\n\t[2]: \"y\",\n\t[3]: \"g\",\n\t[4]: \"d\"\n} as const;\nexport type ColorEnum = (typeof stringColorEnum)[keyof typeof stringColorEnum];\n","import {\n\tduckLetter,\n\temptyLetter,\n\tpawnPieceLetter,\n\tPieceLetter,\n\tverifyPieceLetter,\n\twallPieceLetter\n} from \"@moveGeneration/PieceControl/PieceControlInterface\";\nimport { colorEnum, nonPlayablePieces, NumericColor, stringColorEnum } from \"./GameUnits\";\n\nexport const deadColorIndex = 4;\ninterface PieceStringInterface {\n\treadonly value: string;\n\tisDead(): boolean;\n\tisEmpty(): boolean;\n\tisWall(): boolean;\n\tisPiece(): boolean;\n\tgetStringifiedColor(): keyof typeof colorEnum;\n\treadonly color: NumericColor | typeof deadColorIndex;\n\treadonly piece: PieceLetter;\n}\n\ninterface EmptyPieceStringInterface extends PieceStringInterface {\n\tisDead(): false;\n\tisEmpty(): true;\n\tisWall(): false;\n\tisPiece(): false;\n\treadonly color: never;\n\treadonly piece: never;\n}\nexport type EmptyPieceString = PieceString & EmptyPieceStringInterface;\n\ninterface WallPieceStringInterface extends PieceStringInterface {\n\tisDead(): true;\n\tisEmpty(): false;\n\tisWall(): true;\n\tisPiece(): false;\n\treadonly color: typeof deadColorIndex;\n\treadonly piece: PieceLetter & (typeof nonPlayablePieces)[keyof typeof nonPlayablePieces];\n}\nexport type WallPieceString = PieceString & WallPieceStringInterface;\n\ninterface DeadPieceStringInterface extends PieceStringInterface {\n\tisDead(): true;\n\tisEmpty(): false;\n\tisWall(): false;\n\tisPiece(): true;\n\treadonly color: typeof deadColorIndex;\n}\nexport type DeadPieceString = PieceString & DeadPieceStringInterface;\n\ninterface ActivePieceStringInterface extends PieceStringInterface {\n\tisDead(): false;\n\tisEmpty(): false;\n\tisWall(): false;\n\tisPiece(): true;\n\treadonly color: NumericColor;\n}\nexport type ActivePieceString = PieceString & ActivePieceStringInterface;\n\nexport interface PieceStringObject {\n\treadonly _color: NumericColor | typeof deadColorIndex;\n\treadonly _piece: PieceLetter;\n\treadonly value: string;\n}\n\nexport class PieceString implements PieceStringInterface {\n\tstatic comparePieceStrings(pieceString1: PieceString, pieceString2: PieceString) {\n\t\treturn pieceString1._piece === pieceString2._piece && pieceString1._color === pieceString2._color;\n\t}\n\n\tstatic comparePieceStringObjects(pieceString1: PieceStringObject, pieceString2: PieceStringObject) {\n\t\treturn pieceString1._piece === pieceString2._piece && pieceString1._color === pieceString2._color;\n\t}\n\n\tstatic fromObjectToClass(object: PieceStringObject) {\n\t\treturn new PieceString(object._color, object._piece);\n\t}\n\n\treadonly value: string;\n\tconstructor(private readonly _color: NumericColor | typeof deadColorIndex, private readonly _piece: PieceLetter) {\n\t\tthis.value = _piece.length ? (/[xXΘ]/.test(_piece) ? _piece : stringColorEnum[_color] + _piece) : \"\";\n\t}\n\n\tisDead(): this is DeadPieceStringInterface {\n\t\treturn this._color === deadColorIndex && !this.isWall();\n\t}\n\tisEmpty(): this is EmptyPieceStringInterface {\n\t\treturn this._piece.length === 0;\n\t}\n\tisWall(): this is WallPieceStringInterface {\n\t\treturn this.value.length === 1;\n\t}\n\tisPiece(): this is ActivePieceStringInterface {\n\t\treturn this.value.length === 2 && this._color !== deadColorIndex;\n\t}\n\n\tget piece() {\n\t\tif (this.isEmpty()) throw new TypeError(\"Accessing a piece string piece value while the piece string is empty.\");\n\t\treturn this._piece;\n\t}\n\n\tget color() {\n\t\tif (this.isEmpty()) throw new TypeError(\"Accessing a piece string color value while the piece string is empty.\");\n\t\treturn this._color;\n\t}\n\n\tgetStringifiedColor(): keyof typeof colorEnum {\n\t\treturn this.value.charAt(0) as keyof typeof colorEnum;\n\t}\n\n\ttoObject(): PieceStringObject {\n\t\treturn {\n\t\t\t_piece: this._piece,\n\t\t\t_color: this._color,\n\t\t\tvalue: this.value\n\t\t};\n\t}\n}\n\nexport const createPieceFromData = (color: NumericColor | typeof deadColorIndex, piece: string) => {\n\tif (verifyPieceLetter(piece)) {\n\t\treturn new PieceString(color, piece);\n\t}\n\tthrow new Error(\"Wrong color signature for the piece provided\");\n};\nexport const createPieceFromString = (piece: string) => {\n\tconst verifyColorEnum = (p: string): p is keyof typeof colorEnum => p in colorEnum;\n\n\tif (piece.length === 1 && verifyPieceLetter(piece)) {\n\t\treturn new PieceString(deadColorIndex, piece);\n\t} else {\n\t\tconst color = piece.charAt(0);\n\t\tconst pieceLetter = piece.charAt(1);\n\t\tif (!verifyPieceLetter(pieceLetter)) throw new Error(\"Wrong signature for the piece provided\");\n\t\tif (color === \"d\") {\n\t\t\treturn new PieceString(deadColorIndex, pieceLetter);\n\t\t} else {\n\t\t\tif (verifyColorEnum(color)) {\n\t\t\t\treturn new PieceString(colorEnum[color], pieceLetter);\n\t\t\t} else throw new Error(\"Wrong color signature for the piece provided\");\n\t\t}\n\t}\n};\n\nconst testEmptyPieceString = new PieceString(0, emptyLetter);\nif (!testEmptyPieceString.isEmpty()) throw new Error(\"Empty piece string is not isEmpty\");\nexport const emptyPieceString: EmptyPieceString = testEmptyPieceString;\n\nconst testWallPieceString = new PieceString(deadColorIndex, wallPieceLetter);\nif (!testWallPieceString.isWall()) throw new Error(\"Wall piece string is not isWall\");\nexport const wallPieceString: WallPieceString = testWallPieceString;\n\nconst testActivePieceString = new PieceString(0, pawnPieceLetter);\nif (!testActivePieceString.isPiece()) throw new Error(\"Active piece string is not isActive\");\nexport const pawnPieceString: ActivePieceString = testActivePieceString;\n\nconst testDuckPieceString = new PieceString(deadColorIndex, duckLetter);\nif (!testDuckPieceString.isWall()) throw new Error(\"Wall piece string is not isWall\");\nexport const duckPieceString: ActivePieceString = testActivePieceString;\n","import { throwOnNever } from \"@client/ts/baseTypes\";\nimport type { Coordinate } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport { compareArrays } from \"../../../utils/ArrayUtils\";\nimport { isVerticalPlacement } from \"../../BaseInterfaces\";\nimport { unstringifyCoordinate } from \"../Board/BoardInterface\";\nimport { convertCoordinateToPGN4Array, convertCoordinateToPGN4 } from \"../GameInformation/GameData\";\nimport { deadColorIndex, pawnPieceString } from \"../GameInformation/GameUnits/PieceString\";\nimport {\n\tMoveData,\n\tMoveTreeSnapshot,\n\tMoveWrapper,\n\tMoveWrapperMetadata,\n\tSpecialMove,\n\tverifyDroppingMove,\n\tverifyInternalMove,\n\tverifyStandardMove\n} from \"./MoveTreeInterface\";\n\nexport type MoveNotationStringify = (moveWrapper: MoveWrapper, snapshot: MoveTreeSnapshot, dimension: number) => string;\n\nfunction generateCastlingString(moveData: MoveData): string {\n\tswitch (moveData.specialType) {\n\t\tcase SpecialMove.CastlingKingside:\n\t\t\treturn \"O-O\";\n\t\tcase SpecialMove.CastlingQueenside:\n\t\t\treturn \"O-O-O\";\n\t\tdefault:\n\t\t\treturn \"\";\n\t}\n}\n\nfunction extractPiece(metadata: MoveWrapperMetadata): string {\n\treturn metadata.movingPiece.piece !== pawnPieceString.piece ? metadata.movingPiece.piece : \"\";\n}\n\nfunction obtainAmbiguousOrthogonality(parameters: {\n\tmoveMetadata: MoveWrapperMetadata;\n\tmove: MoveData;\n\tsnapshot: MoveTreeSnapshot;\n\tisCapture: boolean;\n}) {\n\tconst {\n\t\tmoveMetadata,\n\t\tmove,\n\t\tsnapshot: {\n\t\t\tboardSnapshot: { board },\n\t\t\tpregeneratedAttacks: { pieceMovements }\n\t\t},\n\t\tisCapture\n\t} = parameters;\n\tconst { piece, color } = moveMetadata.movingPiece;\n\tconst isPawn = piece === pawnPieceString.piece;\n\tconst registeredPieces: Coordinate[] = [];\n\tfor (const [piece, movements] of pieceMovements) {\n\t\tconst parsedCoordinate = unstringifyCoordinate(piece);\n\t\tconst boardPiece = board[parsedCoordinate[0]][parsedCoordinate[1]];\n\t\tif (boardPiece.isEmpty() || boardPiece.color !== color || boardPiece.piece !== piece) continue;\n\t\tif (movements.find((m) => compareArrays(move.endCoordinates, m.move)) !== undefined) {\n\t\t\tregisteredPieces.push(parsedCoordinate);\n\t\t}\n\t}\n\n\tif (color === deadColorIndex) return [false, false];\n\tconst ambiguousRank =\n\t\t(isCapture && isPawn && isVerticalPlacement(color)) ||\n\t\tregisteredPieces.some((c, i) => registeredPieces.some((c2, j) => i !== j && c[0] === c2[0]));\n\tconst ambiguousFile =\n\t\t(isCapture && isPawn && !isVerticalPlacement(color)) ||\n\t\tregisteredPieces.some((c, i) => registeredPieces.some((c2, j) => i !== j && c[1] === c2[1]));\n\n\treturn [ambiguousRank, ambiguousFile];\n}\n\nfunction extractPromotion(move: MoveData): string {\n\treturn move.promotion ? `=${move.promotion[0].piece}` : \"\";\n}\n\nfunction extractChecksAndCheckmates(metadata: MoveWrapperMetadata): string {\n\treturn \"+\".repeat(metadata.checks) + \"#\".repeat(metadata.checkmates);\n}\n\nexport const shortenedMoveNotationStringify: MoveNotationStringify = (moveWrapper, snapshot, dimension) => {\n\tlet resultingString = \"\";\n\tlet isFirstCapturingMoveSet = false;\n\tfor (const move of moveWrapper.moveData) {\n\t\tif (verifyStandardMove(move)) {\n\t\t\tif ((resultingString += generateCastlingString(move))) continue;\n\t\t\tresultingString += extractPiece(moveWrapper.metadata);\n\t\t\tconst isCapture = !isFirstCapturingMoveSet && moveWrapper.metadata.isCapture;\n\t\t\tconst [ambiguousRank, ambiguousFile] = obtainAmbiguousOrthogonality({\n\t\t\t\tisCapture,\n\t\t\t\tmove,\n\t\t\t\tsnapshot,\n\t\t\t\tmoveMetadata: moveWrapper.metadata\n\t\t\t});\n\n\t\t\tif (ambiguousFile && !ambiguousRank) {\n\t\t\t\tresultingString += convertCoordinateToPGN4Array(move.startCoordinates, dimension)[1];\n\t\t\t} else if (!ambiguousFile && ambiguousRank) {\n\t\t\t\tresultingString += convertCoordinateToPGN4Array(move.startCoordinates, dimension)[0];\n\t\t\t} else if (ambiguousFile && ambiguousRank) {\n\t\t\t\tresultingString += convertCoordinateToPGN4(move.startCoordinates, dimension);\n\t\t\t}\n\n\t\t\tif (isCapture) {\n\t\t\t\tresultingString += \"x\";\n\t\t\t\tisFirstCapturingMoveSet = true;\n\t\t\t}\n\t\t\tresultingString += convertCoordinateToPGN4(move.endCoordinates, dimension);\n\t\t\tresultingString += extractPromotion(move);\n\t\t} else if (verifyDroppingMove(move)) {\n\t\t\tresultingString += `@${move.piece.piece}`;\n\t\t\tresultingString += `${convertCoordinateToPGN4(move.endCoordinates, dimension)}`;\n\t\t} else if (verifyInternalMove(move)) {\n\t\t\tresultingString += move.type;\n\t\t} else throwOnNever(move);\n\t}\n\n\tresultingString += extractChecksAndCheckmates(moveWrapper.metadata);\n\tresultingString += moveWrapper.metadata.annotation ?? \"\";\n\treturn resultingString;\n};\n\nexport const fullMoveNotationStringify: MoveNotationStringify = (moveWrapper) => {\n\tlet resultingString = \"\";\n\tlet firstStandardMoveCaptureSet = false;\n\tfor (const move of moveWrapper.moveData) {\n\t\tif (verifyStandardMove(move)) {\n\t\t\tif ((resultingString += generateCastlingString(move))) continue;\n\t\t\tresultingString += extractPiece(moveWrapper.metadata);\n\t\t\tresultingString += convertCoordinateToPGN4(move.startCoordinates);\n\t\t\tif (!firstStandardMoveCaptureSet && moveWrapper.metadata.isCapture) {\n\t\t\t\tresultingString += \"x\";\n\t\t\t\tfirstStandardMoveCaptureSet = true;\n\t\t\t} else resultingString += \"-\";\n\t\t\tresultingString += convertCoordinateToPGN4(move.endCoordinates);\n\t\t\tresultingString += extractPromotion(move);\n\t\t} else if (verifyDroppingMove(move)) {\n\t\t\tresultingString += `@${move.piece.piece}`;\n\t\t\tresultingString += `-${convertCoordinateToPGN4(move.endCoordinates)}`;\n\t\t} else if (verifyInternalMove(move)) {\n\t\t\tresultingString += move.type;\n\t\t} else throwOnNever(move);\n\t}\n\n\tresultingString += extractChecksAndCheckmates(moveWrapper.metadata);\n\treturn resultingString;\n};\n\nexport const moveNotation = {\n\tfullMoveNotation: fullMoveNotationStringify,\n\tshortenedMoveNotation: shortenedMoveNotationStringify\n} as const;\n","import type { BoardSnapshot, PreGeneratedAttacks } from \"../Board/BoardInterface\";\nimport {\n\tMoveWrapper,\n\tcompareMoves,\n\tgetMoveFromPathAndTree,\n\tMoveTreeSetNewMoveParameters,\n\tMoveTreeSnapshot,\n\tMove,\n\tMoveData,\n\tverifyStandardMove,\n\tProcessSafeMoveWrapper\n} from \"./MoveTreeInterface\";\nimport { moveNotation } from \"./MoveNotationStringifier\";\nimport { compareArrays, findLastIndex } from \"@utils/ArrayUtils\";\nimport type { Board, PlayerBooleanTuple } from \"@moveGeneration/Board/Board\";\nimport type { PostMoveResults } from \"@moveGeneration/FENData/FENDataInterface\";\nimport { pawnPieceString } from \"@moveGeneration/GameInformation/GameUnits/PieceString\";\nimport { colors } from \"@moveGeneration/GameInformation/GameData\";\nimport { FENOptionsTags, verifyDynamicFENOptionKey } from \"@moveGeneration/FENData/FENOptions/FENOptionsTagsInterface\";\n\nexport function alterCurrentPath(current: number[], path: number[]) {\n\tlet currentMove = [...current];\n\n\tfor (let i = 0; i < currentMove.length; i++) {\n\t\tif (path[i] > currentMove[i]) break;\n\t\tif (path[i] === currentMove[i]) {\n\t\t\tif (i === path.length - 1) {\n\t\t\t\tcurrentMove = currentMove.slice(0, i + 1);\n\t\t\t\tcurrentMove[i]--;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\tcurrentMove = currentMove.slice(0, i + 1);\n\t\t\tcurrentMove[i] = path[i] - 1;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tconst indexOfMinus = currentMove.indexOf(-1);\n\tif (indexOfMinus !== -1) {\n\t\tcurrentMove = currentMove.slice(0, indexOfMinus);\n\n\t\tlet lastNumber = 0;\n\t\tdo {\n\t\t\tconst popped = currentMove.pop();\n\t\t\tif (popped === undefined) {\n\t\t\t\tlastNumber = -1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlastNumber = popped;\n\t\t} while (lastNumber <= 0);\n\n\t\tif (lastNumber !== -1) currentMove.push(lastNumber);\n\t}\n\n\treturn currentMove;\n}\n\nexport function verifyValidMove<T extends ProcessSafeMoveWrapper>(move: T | T[] | undefined): move is T {\n\treturn move !== undefined && !Array.isArray(move);\n}\nexport function assertValidMove<T extends ProcessSafeMoveWrapper>(move: T | T[] | undefined): asserts move is T {\n\tif (!move || Array.isArray(move)) {\n\t\tthrow new Error(\"The selected move is not a valid move\");\n\t}\n}\n\nexport const createMoveTree = (baseSnapshot: BoardSnapshot) => {\n\tconst snapshots = new WeakMap<MoveWrapper, MoveTreeSnapshot>();\n\tconst boardHashes = new Map<string, Array<readonly number[]>>();\n\tconst moves: MoveWrapper[] = [];\n\tconst startingSnapshot: MoveTreeSnapshot = {\n\t\tboardSnapshot: baseSnapshot,\n\t\tget hash(): string {\n\t\t\tthrow new Error(\"Should not access hash on base move\");\n\t\t},\n\t\tget pregeneratedAttacks(): PreGeneratedAttacks {\n\t\t\tthrow new Error(\"Should not access pregenerated attacks on base move\");\n\t\t}\n\t};\n\n\tfunction obtainMatchingAlternativeLine(baseMoveWrapper: MoveWrapper, newMoveWrapper: MoveWrapper) {\n\t\tfor (const [alternativeFirstMove] of baseMoveWrapper.alternativeLines) {\n\t\t\tif (alternativeFirstMove.moveData.length !== newMoveWrapper.moveData.length) continue;\n\t\t\tif (alternativeFirstMove.moveData.every((m, i) => compareMoves(m, newMoveWrapper.moveData[i]))) {\n\t\t\t\treturn alternativeFirstMove.path;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tfunction stripEmptyAlternativeLines(current = moves) {\n\t\tfor (const moveWrapper of current) {\n\t\t\tfor (let i = 0; i < moveWrapper.alternativeLines.length; i++) {\n\t\t\t\tif (moveWrapper.alternativeLines[i].length === 0) {\n\t\t\t\t\tmoveWrapper.alternativeLines.splice(i, 1);\n\t\t\t\t} else stripEmptyAlternativeLines(moveWrapper.alternativeLines[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction stripDeletedMoveHashes(current: MoveWrapper[], currentMove: number[]) {\n\t\tfor (const moveWrapper of current) {\n\t\t\tconst snapshot = snapshots.get(moveWrapper);\n\t\t\tif (!snapshot) continue;\n\n\t\t\tconst { hash } = snapshot;\n\t\t\tconst boardHash = boardHashes.get(hash);\n\t\t\tif (boardHash) {\n\t\t\t\tif (boardHash.length === 1) {\n\t\t\t\t\tboardHashes.delete(hash);\n\t\t\t\t} else {\n\t\t\t\t\tconst currentLine = boardHash.findIndex((p) => compareArrays(p, currentMove));\n\t\t\t\t\tif (currentLine === -1) {\n\t\t\t\t\t\tconsole.error(\"Current line for move wrapper not found in board hashes\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tboardHash.splice(currentLine, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const line of moveWrapper.alternativeLines) stripDeletedMoveHashes(line, currentMove);\n\t\t}\n\t}\n\n\tfunction addBoardSnapshot(parameters: MoveTreeSetNewMoveParameters, currentMove: number[]) {\n\t\tconst { move, snapshot, fenDataString } = parameters;\n\t\tsnapshots.set(move, {\n\t\t\tboardSnapshot: snapshot.boardSnapshot,\n\t\t\tpregeneratedAttacks: snapshot.pregeneratedAttacks,\n\t\t\thash: fenDataString\n\t\t});\n\n\t\tconst boardHash = boardHashes.get(fenDataString);\n\t\tif (boardHash) {\n\t\t\tconst hasAdditionalPath = boardHash.find((p) => compareArrays(p, currentMove));\n\t\t\tboardHashes.set(fenDataString, hasAdditionalPath ? boardHash : [...boardHash, currentMove.slice()]);\n\t\t} else boardHashes.set(fenDataString, [currentMove.slice()]);\n\t}\n\n\tconst assignMoveWrapperKey = <K extends keyof MoveWrapper>(object: MoveWrapper, key: K, value: MoveWrapper[K]) => {\n\t\tobject[key] = value;\n\t};\n\n\treturn {\n\t\tmoves,\n\t\tcurrentMove: [-1],\n\t\tgetMove(path: number[]): MoveWrapper | MoveWrapper[] | undefined {\n\t\t\treturn getMoveFromPathAndTree(moves, path);\n\t\t},\n\t\tsetNewMove(parameters: MoveTreeSetNewMoveParameters): number[] {\n\t\t\tconst { move } = parameters;\n\t\t\tconst moveWrapper = this.getMove(move.path.slice(0, -1));\n\t\t\tlet path = move.path.slice();\n\n\t\t\tif (!moveWrapper) return path;\n\t\t\tif (Array.isArray(moveWrapper)) {\n\t\t\t\tif (moveWrapper.length > move.path[move.path.length - 1]) {\n\t\t\t\t\tconst currentMove = this.getMove(move.path);\n\t\t\t\t\tif (Array.isArray(currentMove)) {\n\t\t\t\t\t\tthis.setNewMove({ ...parameters, move: { ...move, path: [...move.path, currentMove.length] } });\n\t\t\t\t\t} else if (currentMove) {\n\t\t\t\t\t\tconst alternativeLine = obtainMatchingAlternativeLine(currentMove, move);\n\t\t\t\t\t\tif (alternativeLine) {\n\t\t\t\t\t\t\treturn alternativeLine;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcurrentMove.alternativeLines.push([]);\n\t\t\t\t\t\t\tconst newMove = { ...move, path: [...move.path, currentMove.alternativeLines.length - 1, 0] };\n\t\t\t\t\t\t\tpath = newMove.path.slice();\n\t\t\t\t\t\t\treturn this.setNewMove({ ...parameters, move: newMove });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tmoveWrapper.push(move);\n\t\t\t\t\taddBoardSnapshot(parameters, this.currentMove);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet key: keyof MoveWrapper;\n\t\t\t\tfor (key in move) {\n\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(move, key)) assignMoveWrapperKey(moveWrapper, key, move[key]);\n\t\t\t\t}\n\t\t\t\taddBoardSnapshot(parameters, this.currentMove);\n\t\t\t}\n\n\t\t\treturn path;\n\t\t},\n\t\tgetBoardSnapshot(move: MoveWrapper | -1) {\n\t\t\tif (move === -1) {\n\t\t\t\treturn startingSnapshot;\n\t\t\t} else {\n\t\t\t\treturn snapshots.get(move);\n\t\t\t}\n\t\t},\n\t\tdeleteMove(path: number[]) {\n\t\t\tlet items: MoveWrapper[] = [];\n\t\t\tconst moveWrapper = this.getMove(path.slice(0, -1));\n\t\t\tif (!moveWrapper) return;\n\t\t\tconst finalIndex = path[path.length - 1];\n\t\t\tif (Array.isArray(moveWrapper)) {\n\t\t\t\titems = [...moveWrapper.splice(finalIndex, moveWrapper.length - finalIndex)];\n\t\t\t} else {\n\t\t\t\tif (moveWrapper.alternativeLines.length > 0) {\n\t\t\t\t\titems = moveWrapper.alternativeLines.splice(path[path.length - 1], 1)[0];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstripDeletedMoveHashes(items, this.currentMove);\n\t\t\tstripEmptyAlternativeLines();\n\t\t\tconst newCurrentMove = alterCurrentPath(this.currentMove, path);\n\t\t\tthis.currentMove = newCurrentMove.length === 0 ? [-1] : newCurrentMove;\n\t\t},\n\t\tgetHash(preliminaryHashString: string): number {\n\t\t\tconst hash = boardHashes.get(preliminaryHashString);\n\t\t\tif (hash === undefined) return 0;\n\n\t\t\tlet totalCount = 0;\n\t\t\tfor (const line of hash) {\n\t\t\t\tfor (let i = 0; i < line.length; i++) {\n\t\t\t\t\tif (i + (1 % 2) !== 0 && i === line.length - 1) {\n\t\t\t\t\t\ttotalCount++;\n\t\t\t\t\t} else if (line[i] !== this.currentMove[i]) break;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn totalCount;\n\t\t},\n\t\tstringifyMove(moveWrapper: MoveWrapper, dimension: number) {\n\t\t\tconst snapshot = this.getBoardSnapshot(moveWrapper);\n\t\t\tif (!snapshot) {\n\t\t\t\tconsole.error(\"No snapshot assigned when moveWrapper is called\");\n\t\t\t\treturn \"\";\n\t\t\t}\n\n\t\t\tlet key: keyof typeof moveNotation;\n\t\t\tfor (key in moveNotation) {\n\t\t\t\tif (!Object.prototype.hasOwnProperty.call(moveNotation, key)) continue;\n\t\t\t\tmoveWrapper.cachedNames[key] = moveNotation[key](moveWrapper, snapshot, dimension);\n\t\t\t}\n\t\t},\n\t\taugmentMoveWithMetadata(parameters: { move: Move; board: Board; makeMoveFunction: () => PostMoveResults }) {\n\t\t\tconst { move, board, makeMoveFunction } = parameters;\n\t\t\tconst standardMove = move.find<MoveData>((m): m is MoveData => verifyStandardMove(m));\n\t\t\tconst movingPiece = standardMove ? board.board[standardMove.startCoordinates[0]][standardMove.startCoordinates[1]] : pawnPieceString;\n\t\t\tconst capturedPieces = standardMove ? board.data.getCapturedPieces(standardMove).length !== 0 : false;\n\t\t\tconst postMoveResults = makeMoveFunction();\n\t\t\tconst deadColors: PlayerBooleanTuple = [...board.data.fenOptions.tag(\"dead\")];\n\t\t\tconst currentSideToMove = board.data.sideToMove,\n\t\t\t\tcurrentMove = board.moves.getMove(board.moves.currentMove);\n\t\t\tassertValidMove(currentMove);\n\t\t\tif (\n\t\t\t\tboard.moves.currentMove[board.moves.currentMove.length - 1] === 0 ||\n\t\t\t\tfindLastIndex(deadColors, (b) => !b) === currentSideToMove\n\t\t\t) {\n\t\t\t\tconst lastCurrentMoves = board.moves.getMove(board.moves.currentMove.slice(0, -1));\n\t\t\t\tif (!Array.isArray(lastCurrentMoves)) throw new Error(\"The selected move is not within an array\");\n\n\t\t\t\tfor (let i = lastCurrentMoves.length - 1; i >= 0; i--) {\n\t\t\t\t\tconst lastCurrent = lastCurrentMoves[i].metadata.currentFullMove;\n\t\t\t\t\tif (lastCurrent) {\n\t\t\t\t\t\tcurrentMove.metadata.currentFullMove = lastCurrent + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (i === 0) {\n\t\t\t\t\t\tif (currentMove.path.length === 1) {\n\t\t\t\t\t\t\tcurrentMove.metadata.currentFullMove = 1;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst alternativeLineContainer = board.moves.getMove(board.moves.currentMove.slice(0, -3));\n\t\t\t\t\t\t\tif (!Array.isArray(alternativeLineContainer)) throw new Error(\"The selected move is not within an array\");\n\t\t\t\t\t\t\tcurrentMove.metadata.currentFullMove =\n\t\t\t\t\t\t\t\talternativeLineContainer[\n\t\t\t\t\t\t\t\t\tfindLastIndex(alternativeLineContainer, (m) => Boolean(m.metadata.currentFullMove))\n\t\t\t\t\t\t\t\t].metadata.currentFullMove;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurrentMove.metadata.currentSideToMove = currentSideToMove;\n\t\t\tcurrentMove.metadata.isCapture = capturedPieces;\n\t\t\tcurrentMove.metadata.movingPiece = movingPiece;\n\t\t\tfor (const color of colors) {\n\t\t\t\tif (postMoveResults.checkmates[color]) {\n\t\t\t\t\tcurrentMove.metadata.checkmates++;\n\t\t\t\t} else if (postMoveResults.checks[color]) {\n\t\t\t\t\tcurrentMove.metadata.checks++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.stringifyMove(currentMove, Math.max(...board.data.fenOptions.tag(\"dim\")));\n\t\t},\n\t\tconstructPreliminaryHashString(boardObject: Board) {\n\t\t\tconst { board, data } = boardObject;\n\t\t\tlet builder = \"\";\n\t\t\tbuilder += data.sideToMove;\n\t\t\tlet key: keyof FENOptionsTags;\n\t\t\tfor (key in data.fenOptions.tags) {\n\t\t\t\tconst tag = data.fenOptions.tags[key];\n\t\t\t\tif (!verifyDynamicFENOptionKey(tag, key)) continue;\n\t\t\t\tconst serializedForm = tag.serialize();\n\t\t\t\tif (serializedForm) builder += serializedForm;\n\t\t\t}\n\t\t\tbuilder = board.reduce((p, n) => p + n.map((ps) => ps.value || \"-\").join(\"\"), builder);\n\t\t\treturn builder;\n\t\t}\n\t};\n};\n\nexport type MoveTreeInterface = ReturnType<typeof createMoveTree>;\n","import { BoardSnapshot, compareCoordinates, PreGeneratedAttacks } from \"../Board/BoardInterface\";\nimport type { Coordinate, NumericColor } from \"../GameInformation/GameUnits/GameUnits\";\nimport { pawnPieceString, PieceString, PieceStringObject } from \"../GameInformation/GameUnits/PieceString\";\nimport { moveNotation } from \"./MoveNotationStringifier\";\n\nexport enum SpecialMove {\n\tCastlingKingside,\n\tCastlingQueenside,\n\tEnPassant\n}\nexport enum InternalMoveSignature {\n\tResign = \"R\",\n\tTimeout = \"T\",\n\tClaimWin = \"C\",\n\tDrawByAgreement = \"D\",\n\tStalemate = \"S\",\n\tPass = \"P\",\n\tTeamsCheckmate = \"#\"\n}\n\nexport type MoveComponent = InternalMove | MoveData | DroppingMove;\nexport type Move = [MoveComponent, ...MoveComponent[]];\nexport const verifyRequiredMove = (move: MoveComponent[]): move is Move => move.length > 0;\n\nexport type HighlightArrow = [color: NumericColor, startCoordinate: Coordinate, endCoordinate: Coordinate];\nexport type HighlightSquare = [color: NumericColor, coordinate: Coordinate];\ninterface GeneralMetadata {\n\tcurrentSideToMove: NumericColor;\n\tcurrentFullMove?: number;\n\tplayerClock?: number;\n\thighlightedArrows: HighlightArrow[];\n\thighlightedSquares: HighlightSquare[];\n}\nexport interface MoveWrapperMetadata extends GeneralMetadata {\n\tmovingPiece: PieceString;\n\tisCapture: boolean;\n\tchecks: number;\n\tcheckmates: number;\n\tannotation?: string;\n}\n\nexport interface MoveWrapper {\n\tmoveData: Move;\n\talternativeLines: MoveWrapper[][];\n\tcomment: string;\n\tpath: number[];\n\tmetadata: MoveWrapperMetadata;\n\tcachedNames: Record<keyof typeof moveNotation, string>;\n}\n\nexport function verifyMoveWrapperProperties(moveWrapper: Partial<MoveWrapper>): moveWrapper is MoveWrapper {\n\treturn Boolean(\n\t\tmoveWrapper.alternativeLines && moveWrapper.comment !== undefined && moveWrapper.path && moveWrapper.metadata && moveWrapper.moveData\n\t);\n}\n\ntype DistributiveMove<T> = T extends object ? T[] : never;\nexport type DistributiveMoveArray = DistributiveMove<MoveComponent>;\ninterface ChainableMove {\n\tnextChainedMoves?: DistributiveMoveArray;\n\tisForcedContinuation?: boolean;\n\tisIrreversible?: boolean;\n}\n\nexport interface MoveData extends ChainableMove {\n\tstartCoordinates: Coordinate;\n\tendCoordinates: Coordinate;\n\tpromotion?: PieceString[];\n\tspecialType?: SpecialMove | undefined;\n}\n\nexport interface DroppingMove extends ChainableMove {\n\tpiece: PieceString;\n\tendCoordinates: Coordinate;\n}\n\nexport interface InternalMove extends ChainableMove {\n\ttype: InternalMoveSignature;\n}\n\ntype RecursiveHelper<T> = {\n\t[P in keyof T]: T[P] extends PieceString ? PieceStringObject : StripPieceStringObjects<T[P]>;\n};\nexport type StripPieceStringObjects<T> = T extends object ? RecursiveHelper<T> : T;\n\nexport interface ProcessSafeMoveWrapper {\n\talternativeLines: this[][];\n\tcomment: string;\n\tpath: number[];\n\tcachedNames: Record<keyof typeof moveNotation, string>;\n\tmetadata: GeneralMetadata;\n}\n\nexport function compareMoves(move1: MoveComponent, move2: MoveComponent): boolean {\n\tif (verifyStandardMove(move1)) {\n\t\tif (!verifyStandardMove(move2)) return false;\n\t\treturn (\n\t\t\tcompareCoordinates(move1.startCoordinates, move2.startCoordinates) &&\n\t\t\tcompareCoordinates(move1.endCoordinates, move2.endCoordinates) &&\n\t\t\t(move1.specialType === move2.specialType ||\n\t\t\t\tmove1.specialType === SpecialMove.EnPassant ||\n\t\t\t\tmove2.specialType === SpecialMove.EnPassant)\n\t\t);\n\t} else if (verifyDroppingMove(move1)) {\n\t\tif (!verifyDroppingMove(move2)) return false;\n\t\treturn compareCoordinates(move1.endCoordinates, move2.endCoordinates) && PieceString.comparePieceStrings(move1.piece, move2.piece);\n\t} else if (verifyInternalMove(move1)) {\n\t\tif (!verifyInternalMove(move2)) return false;\n\t\treturn move1.type === move2.type;\n\t}\n\n\tthrow new Error(`Unexpected move signature of first move ${JSON.stringify(move1)}`);\n}\n\nexport function createDummyMoveMetadata(): MoveWrapperMetadata {\n\treturn {\n\t\tisCapture: false,\n\t\tmovingPiece: pawnPieceString,\n\t\tchecks: 0,\n\t\tcheckmates: 0,\n\t\tcurrentSideToMove: 0,\n\t\thighlightedArrows: [],\n\t\thighlightedSquares: []\n\t};\n}\n\nexport const createBaseMoveWrapper = (\n\trequiredSettings: { path: number[]; moveData: Move },\n\tsettings: Partial<MoveWrapper> = {}\n): MoveWrapper => {\n\tconst wrapper: MoveWrapper = {\n\t\tpath: requiredSettings.path,\n\t\tmoveData: requiredSettings.moveData,\n\t\tcomment: \"\",\n\t\talternativeLines: [],\n\t\tmetadata: createDummyMoveMetadata(),\n\t\tcachedNames: {\n\t\t\tfullMoveNotation: \"\",\n\t\t\tshortenedMoveNotation: \"\"\n\t\t}\n\t};\n\n\treturn {\n\t\t...wrapper,\n\t\t...settings\n\t};\n};\n\ninterface MoveTypePredicate<T, S extends T> {\n\t(move: StripPieceStringObjects<T>): move is StripPieceStringObjects<S>;\n\t(move: T): move is S;\n}\nexport const verifyInternalMove: MoveTypePredicate<MoveComponent, InternalMove> = (move): move is never => \"type\" in move;\nexport const verifyDroppingMove: MoveTypePredicate<MoveComponent, DroppingMove> = (move): move is never => \"piece\" in move;\nexport const verifyStandardMove: MoveTypePredicate<MoveComponent, MoveData> = (move): move is never => \"startCoordinates\" in move;\nexport const verifyInternalMoveArray: MoveTypePredicate<DistributiveMoveArray, InternalMove[]> = (move): move is never => \"type\" in move[0];\nexport const verifyDroppingMoveArray: MoveTypePredicate<DistributiveMoveArray, DroppingMove[]> = (move): move is never => \"piece\" in move[0];\nexport const verifyStandardMoveArray: MoveTypePredicate<DistributiveMoveArray, MoveData[]> = (move): move is never =>\n\t\"startCoordinates\" in move[0];\n\nexport const getMoveFromPathAndTree = <T extends ProcessSafeMoveWrapper>(moves: T[], path: number[]): T[] | T | undefined => {\n\tif (path.length === 0) return moves;\n\tconst movePath = path.slice();\n\tif (movePath[0] >= moves.length) return;\n\tlet currentSelection = moves[movePath.shift() ?? 0];\n\twhile (movePath.length > 0) {\n\t\tconst currentIndex = movePath.shift();\n\t\tif (currentIndex !== undefined) {\n\t\t\tif (currentIndex >= currentSelection.alternativeLines.length) return;\n\t\t\tconst alternativeLine = currentSelection.alternativeLines[currentIndex];\n\t\t\tconst index = movePath.shift();\n\t\t\tif (index === undefined) {\n\t\t\t\treturn alternativeLine;\n\t\t\t}\n\n\t\t\tif (index >= alternativeLine.length) return;\n\t\t\tcurrentSelection = alternativeLine[index];\n\t\t}\n\t}\n\n\treturn currentSelection;\n};\n\nexport const getLatestChainedMoves = (move: DistributiveMoveArray): MoveComponent[] => {\n\tif (move.length > 0 && move[0].nextChainedMoves) {\n\t\treturn getLatestChainedMoves(move[0].nextChainedMoves);\n\t} else return move;\n};\n\nexport interface MoveTreeSetNewMoveParameters {\n\tmove: MoveWrapper;\n\tsnapshot: MoveTreeRequiredSnapshotValues;\n\tfenDataString: string;\n}\n\nexport interface MoveTreeSnapshot {\n\tboardSnapshot: BoardSnapshot;\n\thash: string;\n\tpregeneratedAttacks: PreGeneratedAttacks;\n}\nexport type MoveTreeRequiredSnapshotValues = Omit<MoveTreeSnapshot, \"hash\">;\n","import { boardDimension } from \"@moveGeneration/GameInformation/GameData\";\nimport type { NumericColor, Coordinate } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport type { FENData } from \"../FENData/FENData\";\nimport { deadColorIndex, PieceString } from \"../GameInformation/GameUnits/PieceString\";\nimport type { VariantHandlerTarget } from \"../VariantRules/VariantRuleInterface\";\nimport type { ControlConfiguration } from \"@moveGeneration/PieceControl/PieceControlInterface\";\nimport {\n\tAttackType,\n\tPieceControlConfiguration,\n\tPieceControlGeneratedMove,\n\tPieceControlHooks,\n\tPieceControlInternalMove\n} from \"./PieceControlInterface\";\n\nexport class PieceControl implements VariantHandlerTarget<PieceControl> {\n\tcolor: NumericColor;\n\tsliding: Coordinate[];\n\tjumping: Coordinate[];\n\treadonly hooks: PieceControlHooks;\n\tmoves: PieceControlGeneratedMove[];\n\trayGenCache: Coordinate[];\n\tbaseRankActive: boolean;\n\timmunePieces: [boolean, boolean, boolean, boolean];\n\tfenData!: FENData;\n\n\tboard!: PieceString[][];\n\ti!: number;\n\tj!: number;\n\n\t__baseClass: PieceControl;\n\tinitDecoratorSettings() {\n\t\t/* no-op */\n\t}\n\t/*---------------------------------- INITIALIZATION -----------------------------------------*/\n\n\tconstructor() {\n\t\tthis.moves = [];\n\t\tthis.color = 0;\n\t\tthis.sliding = [];\n\t\tthis.jumping = [];\n\t\tthis.rayGenCache = [];\n\t\tthis.hooks = {\n\t\t\tuseTrajectory: undefined,\n\t\t\tusePerspective: undefined,\n\t\t\tusePawnLogic: undefined,\n\t\t\tuseHopping: false\n\t\t};\n\n\t\tthis.baseRankActive = false;\n\t\tthis.immunePieces = [false, false, false, false];\n\t\tthis.__baseClass = this;\n\t}\n\n\tconfigure(configuration: ControlConfiguration) {\n\t\tthis.color = configuration.color;\n\t\tthis.immunePieces = configuration.immunePieces;\n\t\t[this.i, this.j] = configuration.coordinates;\n\t\tconst baseRankCalc = [13 - this.i, this.j, this.i, 13 - this.j][this.color] - this.fenData.fenOptions.tag(\"pawnBaseRank\");\n\t\tthis.baseRankActive = configuration.baseRank ?? (baseRankCalc === -1 || baseRankCalc === -2);\n\t\tthis.board = configuration.board;\n\t}\n\n\tsetFENData(fenData: FENData) {\n\t\tthis.fenData = fenData;\n\t}\n\n\tprivate isRayTrace(attackType: AttackType) {\n\t\treturn attackType === AttackType.RayTrace || attackType === AttackType.RayTraceLimited;\n\t}\n\n\t/*---------------------------------- INITIALIZATION -----------------------------------------*/\n\t/*-------------------------------------------------------------------------------------------*/\n\t/*--------------------------------- MOVE GENERATION -----------------------------------------*/\n\n\tprivate modifyDisplacements(i: number, j: number): Coordinate {\n\t\tconst baseDisplacements: Coordinate[] = [\n\t\t\t[i, j],\n\t\t\t[j, -i],\n\t\t\t[-i, -j],\n\t\t\t[-j, i]\n\t\t];\n\t\treturn baseDisplacements[this.color];\n\t}\n\n\tprivate pushMove(settings: PieceControlInternalMove): void {\n\t\tif (\n\t\t\t!settings.isRayGen &&\n\t\t\tthis.hooks.usePawnLogic &&\n\t\t\tthis.hooks.usePawnLogic.promotionRanks &&\n\t\t\tthis.hooks.usePawnLogic.promotionRanks[this.color] === (this.color % 2 === 0 ? settings.i : settings.j) &&\n\t\t\tthis.hooks.usePawnLogic.promotionPieces\n\t\t) {\n\t\t\tthis.moves.push({\n\t\t\t\tmove: [settings.i, settings.j, this.hooks.usePawnLogic.promotionPieces.join(\"\")],\n\t\t\t\tirreversible: settings.irreversible ?? false\n\t\t\t});\n\t\t\treturn;\n\t\t} else {\n\t\t\tthis.moves.push({\n\t\t\t\tmove: [settings.i, settings.j],\n\t\t\t\tirreversible: settings.irreversible ?? false\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected generateSlidingAttack(settings: PieceControlConfiguration): void {\n\t\tlet [displacementI, displacementJ] = settings.displacement,\n\t\t\tlimit = settings.limit ?? Infinity;\n\t\tconst rayGenCache = settings.rayGenCache,\n\t\t\tspecial = settings.special ?? AttackType.Normal;\n\n\t\tlet rayTraceLimit = 0;\n\t\tif (this.hooks.usePerspective?.[this.color]) {\n\t\t\t[displacementI, displacementJ] = this.modifyDisplacements(displacementI, displacementJ);\n\t\t}\n\n\t\tlet startI = this.i + displacementI,\n\t\t\tstartJ = this.j + displacementJ;\n\t\tconst iLength = this.board[0].length,\n\t\t\tjLength = this.board.length;\n\t\tconst isRayGen = rayGenCache ?? this.isRayTrace(special);\n\n\t\twhile (limit > 0 && startI >= 0 && startI < iLength && startJ >= 0 && startJ < jLength) {\n\t\t\t// TODO add trajectories?\n\t\t\tif (this.getMovePossibility({ displacement: [startI, startJ], special, rayGenCache })) {\n\t\t\t\tthis.pushMove({ i: startI, j: startJ, isRayGen: Boolean(isRayGen), irreversible: settings.irreversible });\n\t\t\t}\n\n\t\t\tif (special === AttackType.RayTraceLimited && !this.board[startI][startJ].isEmpty()) {\n\t\t\t\trayTraceLimit++;\n\t\t\t\tif (rayTraceLimit === 2) break;\n\t\t\t}\n\t\t\tif (!this.isRayTrace(special) && !this.board[startI][startJ].isEmpty()) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tstartI += displacementI;\n\t\t\tstartJ += displacementJ;\n\t\t\tlimit--;\n\t\t}\n\t}\n\n\tprotected generateJumpAttack(settings: PieceControlConfiguration): void {\n\t\tlet [displacementI, displacementJ] = settings.displacement;\n\t\tconst rayGenCache = settings.rayGenCache,\n\t\t\tsquareBlockingIndex = settings.squareBlockingIndex,\n\t\t\tspecial = settings.special ?? AttackType.Normal;\n\t\tif (this.hooks.usePerspective?.[this.color]) {\n\t\t\t[displacementI, displacementJ] = this.modifyDisplacements(displacementI, displacementJ);\n\t\t}\n\n\t\tconst startI = this.i + displacementI,\n\t\t\tstartJ = this.j + displacementJ;\n\t\tconst isRayGen = rayGenCache ?? this.isRayTrace(special);\n\t\tlet isTestPassed = true;\n\n\t\tif (this.hooks.useTrajectory && squareBlockingIndex !== undefined) {\n\t\t\tconst trajectory = this.hooks.useTrajectory[squareBlockingIndex];\n\t\t\tlet trajectoryX, trajectoryY;\n\t\t\tif (this.hooks.usePerspective?.[this.color]) {\n\t\t\t\t[trajectoryX, trajectoryY] = this.modifyDisplacements(trajectory[0], trajectory[1]);\n\t\t\t} else {\n\t\t\t\t(trajectoryX = trajectory[0]), (trajectoryY = trajectory[1]);\n\t\t\t}\n\n\t\t\tif (!this.getMovePossibility({ displacement: [this.i + trajectoryX, this.j + trajectoryY], special, rayGenCache })) {\n\t\t\t\tisTestPassed = false;\n\t\t\t}\n\t\t}\n\n\t\tif (isTestPassed && this.getMovePossibility({ displacement: [startI, startJ], special, rayGenCache })) {\n\t\t\tthis.pushMove({ i: startI, j: startJ, isRayGen: Boolean(isRayGen), irreversible: settings.irreversible });\n\t\t}\n\t}\n\n\tgetMovePossibility(configuration: PieceControlConfiguration): boolean {\n\t\tconst {\n\t\t\tdisplacement: [i, j],\n\t\t\trayGenCache,\n\t\t\tspecial\n\t\t} = configuration;\n\t\tif (i < 0 || i >= boardDimension || j < 0 || j >= boardDimension) return false;\n\n\t\tconst piece = this.board[i][j];\n\t\tif (!piece.isEmpty() && piece.color !== deadColorIndex && !rayGenCache && !this.isRayTrace(special ?? AttackType.Normal)) {\n\t\t\tif (this.immunePieces[piece.color] || this.fenData.fenOptions.tag(\"zombieImmune\")[piece.color]) return false;\n\t\t}\n\n\t\tconst pushTo = () => {\n\t\t\tif (rayGenCache) {\n\t\t\t\tthis.rayGenCache.push(rayGenCache);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t\tif (special === undefined || special === AttackType.Normal) {\n\t\t\tif (!piece.isWall()) {\n\t\t\t\treturn pushTo();\n\t\t\t}\n\t\t} else if (special === AttackType.RayGen) {\n\t\t\tif (!piece.isEmpty()) {\n\t\t\t\treturn pushTo();\n\t\t\t}\n\t\t} else if (special === AttackType.AttackOnly) {\n\t\t\tif (!piece.isEmpty() && !piece.isWall()) {\n\t\t\t\treturn pushTo();\n\t\t\t}\n\t\t} else if (special === AttackType.MoveOnly) {\n\t\t\tif (piece.isEmpty()) {\n\t\t\t\treturn pushTo();\n\t\t\t}\n\t\t} else if (this.isRayTrace(special)) {\n\t\t\treturn pushTo();\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/*--------------------------------- MOVE GENERATION -----------------------------------------*/\n\t/*-------------------------------------------------------------------------------------------*/\n\t/*------------------------------- OUTPUT GENERATION -----------------------------------------*/\n\n\tgetPossibleCells(): void {\n\t\tif (this.hooks.useHopping) {\n\t\t\tthis.sliding.forEach((displacement) =>\n\t\t\t\tthis.generateSlidingAttack({ displacement, special: AttackType.RayGen, rayGenCache: [...displacement] })\n\t\t\t);\n\n\t\t\tconst moves = this.moves.slice();\n\t\t\tthis.moves = [];\n\t\t\tmoves.forEach((s, i) => {\n\t\t\t\tconst startI = s.move[0] + this.rayGenCache[i][0];\n\t\t\t\tconst startJ = s.move[1] + this.rayGenCache[i][1];\n\t\t\t\tif (this.getMovePossibility({ displacement: [startI, startJ] })) {\n\t\t\t\t\tthis.pushMove({ i: startI, j: startJ });\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.rayGenCache = [];\n\t\t} else {\n\t\t\tthis.sliding.forEach((a) => this.generateSlidingAttack({ displacement: a }));\n\t\t\tthis.jumping.forEach((a) => this.generateJumpAttack({ displacement: a }));\n\t\t}\n\t}\n\n\trayGenJumpingAttacks(): PieceControlGeneratedMove[] {\n\t\tthis.jumping.forEach((a) => this.generateJumpAttack({ displacement: a, special: AttackType.RayTrace }));\n\t\treturn this.moves.splice(0);\n\t}\n\n\trayGenSlidingAttacks(trace?: AttackType): PieceControlGeneratedMove[][] {\n\t\tconst slidingLines: PieceControlGeneratedMove[][] = [];\n\n\t\tthis.sliding.forEach((a) => {\n\t\t\tthis.generateSlidingAttack({ displacement: a, special: trace });\n\t\t\tif (this.moves.length !== 0) {\n\t\t\t\tslidingLines.push(this.moves.splice(0));\n\t\t\t}\n\t\t});\n\n\t\treturn slidingLines;\n\t}\n\n\tgetPseudoLegalMoves(): PieceControlGeneratedMove[] {\n\t\tthis.getPossibleCells();\n\t\treturn this.moves.splice(0);\n\t}\n\n\t/*------------------------------- OUTPUT GENERATION -----------------------------------------*/\n}\n","import type { Coordinate } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport { PieceControl } from \"./PieceControl\";\nimport { AttackType, createPieceDeclaration, dameLetter, defaultPieces, grasshopperPieceLetter, pawnPieceLetter } from \"./PieceControlInterface\";\n\nconst orthogonalMoves: Coordinate[] = [\n\t[-1, 0],\n\t[1, 0],\n\t[0, 1],\n\t[0, -1]\n];\nconst diagonalMoves: Coordinate[] = [\n\t[-1, -1],\n\t[1, 1],\n\t[-1, 1],\n\t[1, -1]\n];\nconst kingDirections = [...orthogonalMoves, ...diagonalMoves];\nconst knightHops: Coordinate[] = [\n\t[-1, -2],\n\t[-2, -1],\n\t[-1, 2],\n\t[2, -1],\n\t[-2, 1],\n\t[1, -2],\n\t[1, 2],\n\t[2, 1]\n];\nconst camelHops: Coordinate[] = [\n\t[-1, -3],\n\t[-3, -1],\n\t[-1, 3],\n\t[3, -1],\n\t[-3, 1],\n\t[1, -3],\n\t[1, 3],\n\t[3, 1]\n];\nconst dabbabaHops: Coordinate[] = [\n\t[-2, 0],\n\t[2, 0],\n\t[0, 2],\n\t[0, -2]\n];\nconst alfilHops: Coordinate[] = [\n\t[-2, -2],\n\t[2, 2],\n\t[-2, 2],\n\t[2, -2]\n];\nexport const initPieceControlDeclarations = () => {\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.sliding = orthogonalMoves;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 5,\n\t\t\t\tteamsPoints: 5,\n\t\t\t\tbotFFAValue: 7,\n\t\t\t\tbotTeamsValue: 7\n\t\t\t},\n\t\t\tpiece: defaultPieces.rook,\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: false,\n\t\t\t\tisSliding: true,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: false\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Rook\",\n\t\t\t\tshortName: defaultPieces.rook.toLowerCase()\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.sliding = diagonalMoves;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 5,\n\t\t\t\tteamsPoints: 4,\n\t\t\t\tbotFFAValue: 6,\n\t\t\t\tbotTeamsValue: 6\n\t\t\t},\n\t\t\tpiece: defaultPieces.bishop,\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: false,\n\t\t\t\tisSliding: true,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: true\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Bishop\",\n\t\t\t\tshortName: defaultPieces.bishop.toLowerCase()\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.jumping = kingDirections;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 3,\n\t\t\t\tteamsPoints: 0,\n\t\t\t\tbotFFAValue: 3,\n\t\t\t\tbotTeamsValue: 3\n\t\t\t},\n\t\t\tpiece: defaultPieces.king,\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: true,\n\t\t\t\tisSliding: false,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: false\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"King\",\n\t\t\t\tshortName: defaultPieces.king.toLowerCase()\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.sliding = kingDirections;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 9,\n\t\t\t\tteamsPoints: 10,\n\t\t\t\tbotFFAValue: 14,\n\t\t\t\tbotTeamsValue: 15\n\t\t\t},\n\t\t\tpiece: defaultPieces.queen,\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: false,\n\t\t\t\tisSliding: true,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: false\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Queen\",\n\t\t\t\tshortName: defaultPieces.queen.toLowerCase()\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.sliding = kingDirections;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 9,\n\t\t\t\tteamsPoints: 10,\n\t\t\t\tbotFFAValue: 13,\n\t\t\t\tbotTeamsValue: 13\n\t\t\t},\n\t\t\tpiece: dameLetter,\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: false,\n\t\t\t\tisSliding: true,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: false\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"1-point queen\",\n\t\t\t\tshortName: dameLetter.toLowerCase()\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.jumping = knightHops;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 3,\n\t\t\t\tteamsPoints: 3,\n\t\t\t\tbotFFAValue: 4,\n\t\t\t\tbotTeamsValue: 4\n\t\t\t},\n\t\t\tpiece: defaultPieces.knight,\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: true,\n\t\t\t\tisSliding: false,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: false\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Knight\",\n\t\t\t\tshortName: defaultPieces.knight.toLowerCase()\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.jumping = [...knightHops, ...kingDirections];\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 5,\n\t\t\t\tteamsPoints: 5,\n\t\t\t\tbotFFAValue: 7,\n\t\t\t\tbotTeamsValue: 7\n\t\t\t},\n\t\t\tpiece: \"M\",\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: true,\n\t\t\t\tisSliding: false,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: false\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"General\",\n\t\t\t\tshortName: \"m\",\n\t\t\t\tdescription: \"combines king and knight\"\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.jumping = diagonalMoves;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 1,\n\t\t\t\tteamsPoints: 1,\n\t\t\t\tbotFFAValue: 0.6,\n\t\t\t\tbotTeamsValue: 0.6\n\t\t\t},\n\t\t\tpiece: \"F\",\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: true,\n\t\t\t\tisSliding: false,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: true\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Ferz\",\n\t\t\t\tshortName: \"f\",\n\t\t\t\tdescription: \"moves one square diagonally\"\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.jumping = orthogonalMoves;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 1,\n\t\t\t\tteamsPoints: 1,\n\t\t\t\tbotFFAValue: 0.4,\n\t\t\t\tbotTeamsValue: 0.4\n\t\t\t},\n\t\t\tpiece: \"W\",\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: true,\n\t\t\t\tisSliding: false,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: false\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Wazir\",\n\t\t\t\tshortName: \"w\",\n\t\t\t\tdescription: \"moves one square horizontally or vertically\"\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.jumping = orthogonalMoves;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 1,\n\t\t\t\tteamsPoints: 1,\n\t\t\t\tbotFFAValue: 0.4,\n\t\t\t\tbotTeamsValue: 0.4\n\t\t\t},\n\t\t\tpiece: \"W\",\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: true,\n\t\t\t\tisSliding: false,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: false\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Wazir\",\n\t\t\t\tshortName: \"w\",\n\t\t\t\tdescription: \"moves one square horizontally or vertically\"\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.jumping = dabbabaHops;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 1,\n\t\t\t\tteamsPoints: 1,\n\t\t\t\tbotFFAValue: 1.6,\n\t\t\t\tbotTeamsValue: 1.6\n\t\t\t},\n\t\t\tpiece: \"S\",\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: true,\n\t\t\t\tisSliding: false,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: true\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Dabbaba\",\n\t\t\t\tshortName: \"s\",\n\t\t\t\tdescription: \"jumps two squares horizontally or vertically\"\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.sliding = dabbabaHops;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 4,\n\t\t\t\tteamsPoints: 4,\n\t\t\t\tbotFFAValue: 5.4,\n\t\t\t\tbotTeamsValue: 5.4\n\t\t\t},\n\t\t\tpiece: \"T\",\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: false,\n\t\t\t\tisSliding: true,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: true\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Dabbaba-rider\",\n\t\t\t\tshortName: \"t\"\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.jumping = alfilHops;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 1,\n\t\t\t\tteamsPoints: 1,\n\t\t\t\tbotFFAValue: 0.5,\n\t\t\t\tbotTeamsValue: 0.5\n\t\t\t},\n\t\t\tpiece: \"I\",\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: true,\n\t\t\t\tisSliding: false,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: true\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Alfil\",\n\t\t\t\tshortName: \"i\",\n\t\t\t\tdescription: \"jumps two squares diagonally\"\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.sliding = alfilHops;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 3,\n\t\t\t\tteamsPoints: 3,\n\t\t\t\tbotFFAValue: 4.5,\n\t\t\t\tbotTeamsValue: 4.5\n\t\t\t},\n\t\t\tpiece: \"J\",\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: false,\n\t\t\t\tisSliding: true,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: true\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Alfil-rider\",\n\t\t\t\tshortName: \"j\"\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.jumping = [...alfilHops, ...dabbabaHops];\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 3,\n\t\t\t\tteamsPoints: 3,\n\t\t\t\tbotFFAValue: 3,\n\t\t\t\tbotTeamsValue: 3\n\t\t\t},\n\t\t\tpiece: \"Y\",\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: true,\n\t\t\t\tisSliding: false,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: true\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Alibaba\",\n\t\t\t\tshortName: \"y\",\n\t\t\t\tdescription: \"combines alfil and dabbaba\"\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.sliding = [...alfilHops, ...dabbabaHops];\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 6,\n\t\t\t\tteamsPoints: 6,\n\t\t\t\tbotFFAValue: 6.2,\n\t\t\t\tbotTeamsValue: 6.2\n\t\t\t},\n\t\t\tpiece: \"Z\",\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: false,\n\t\t\t\tisSliding: true,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: true\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Alibaba-rider\",\n\t\t\t\tshortName: \"z\"\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.jumping = knightHops;\n\t\t\t\tthis.sliding = kingDirections;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 12,\n\t\t\t\tteamsPoints: 12,\n\t\t\t\tbotFFAValue: 17,\n\t\t\t\tbotTeamsValue: 17\n\t\t\t},\n\t\t\tpiece: \"A\",\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: true,\n\t\t\t\tisSliding: true,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: false\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Amazon\",\n\t\t\t\tshortName: \"a\",\n\t\t\t\tdescription: \"combines queen and knight\"\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.jumping = camelHops;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 3,\n\t\t\t\tteamsPoints: 3,\n\t\t\t\tbotFFAValue: 4.2,\n\t\t\t\tbotTeamsValue: 4.2\n\t\t\t},\n\t\t\tpiece: \"C\",\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: true,\n\t\t\t\tisSliding: false,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: true\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Camel\",\n\t\t\t\tshortName: \"c\",\n\t\t\t\tdescription: \"an elongated 3-1 knight\"\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.jumping = knightHops;\n\t\t\t\tthis.sliding = orthogonalMoves;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 7,\n\t\t\t\tteamsPoints: 7,\n\t\t\t\tbotFFAValue: 10,\n\t\t\t\tbotTeamsValue: 10\n\t\t\t},\n\t\t\tpiece: \"E\",\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: true,\n\t\t\t\tisSliding: true,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: false\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Chancellor\",\n\t\t\t\tshortName: \"a\",\n\t\t\t\tdescription: \"combines rook and knight\"\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.jumping = knightHops;\n\t\t\t\tthis.sliding = diagonalMoves;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 7,\n\t\t\t\tteamsPoints: 7,\n\t\t\t\tbotFFAValue: 9,\n\t\t\t\tbotTeamsValue: 9\n\t\t\t},\n\t\t\tpiece: \"H\",\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: true,\n\t\t\t\tisSliding: true,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: false\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Archbishop\",\n\t\t\t\tshortName: \"h\",\n\t\t\t\tdescription: \"combines bishop and knight\"\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.sliding = knightHops;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 7,\n\t\t\t\tteamsPoints: 7,\n\t\t\t\tbotFFAValue: 10,\n\t\t\t\tbotTeamsValue: 10\n\t\t\t},\n\t\t\tpiece: \"O\",\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: false,\n\t\t\t\tisSliding: true,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: false\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Knight-rider\",\n\t\t\t\tshortName: \"o\"\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.sliding = camelHops;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 7,\n\t\t\t\tteamsPoints: 7,\n\t\t\t\tbotFFAValue: 8,\n\t\t\t\tbotTeamsValue: 8\n\t\t\t},\n\t\t\tpiece: \"L\",\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: false,\n\t\t\t\tisSliding: true,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: true\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Camel-rider\",\n\t\t\t\tshortName: \"l\"\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.jumping = [...camelHops, ...knightHops];\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 5,\n\t\t\t\tteamsPoints: 5,\n\t\t\t\tbotFFAValue: 8,\n\t\t\t\tbotTeamsValue: 8\n\t\t\t},\n\t\t\tpiece: \"V\",\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: true,\n\t\t\t\tisSliding: false,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: false\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Wildebeest\",\n\t\t\t\tshortName: \"v\",\n\t\t\t\tdescription: \"combines camel and knight\"\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.hooks.usePerspective = [true, true, true, true];\n\t\t\t\tthis.hooks.usePawnLogic = {};\n\t\t\t}\n\n\t\t\tgetPossibleCells() {\n\t\t\t\tthis.generateJumpAttack({ displacement: [-1, -1], special: AttackType.AttackOnly });\n\t\t\t\tthis.generateJumpAttack({ displacement: [-1, 1], special: AttackType.AttackOnly });\n\t\t\t\tthis.generateSlidingAttack({\n\t\t\t\t\tdisplacement: [-1, 0],\n\t\t\t\t\tspecial: AttackType.MoveOnly,\n\t\t\t\t\tlimit: this.baseRankActive ? 2 : 1,\n\t\t\t\t\tirreversible: true\n\t\t\t\t});\n\t\t\t\treturn this.moves;\n\t\t\t}\n\n\t\t\trayGenJumpingAttacks() {\n\t\t\t\tthis.generateJumpAttack({ displacement: [-1, -1], special: AttackType.RayTrace });\n\t\t\t\tthis.generateJumpAttack({ displacement: [-1, 1], special: AttackType.RayTrace });\n\t\t\t\tconst moves = this.moves.slice();\n\t\t\t\tthis.moves = [];\n\t\t\t\treturn moves;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 1,\n\t\t\t\tteamsPoints: 1,\n\t\t\t\tbotFFAValue: 1,\n\t\t\t\tbotTeamsValue: 0.4\n\t\t\t},\n\t\t\tpiece: pawnPieceLetter,\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: true,\n\t\t\t\tisSliding: false,\n\t\t\t\tisPawn: true,\n\t\t\t\tisColorBound: false\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Pawn\",\n\t\t\t\tshortName: pawnPieceLetter.toLowerCase()\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.hooks.usePerspective = [true, true, true, true];\n\t\t\t\tthis.hooks.usePawnLogic = {};\n\t\t\t}\n\n\t\t\tgetPossibleCells() {\n\t\t\t\tthis.generateSlidingAttack({\n\t\t\t\t\tdisplacement: [-1, -1],\n\t\t\t\t\tspecial: AttackType.MoveOnly,\n\t\t\t\t\tlimit: this.baseRankActive ? 2 : 1,\n\t\t\t\t\tirreversible: true\n\t\t\t\t});\n\t\t\t\tthis.generateSlidingAttack({\n\t\t\t\t\tdisplacement: [-1, 1],\n\t\t\t\t\tspecial: AttackType.MoveOnly,\n\t\t\t\t\tlimit: this.baseRankActive ? 2 : 1,\n\t\t\t\t\tirreversible: true\n\t\t\t\t});\n\t\t\t\tthis.generateJumpAttack({ displacement: [-1, -1], special: AttackType.AttackOnly });\n\t\t\t\treturn this.moves;\n\t\t\t}\n\n\t\t\trayGenJumpingAttacks() {\n\t\t\t\tthis.generateJumpAttack({ displacement: [-1, -1], special: AttackType.RayTrace });\n\t\t\t\tconst moves = this.moves.slice();\n\t\t\t\tthis.moves = [];\n\t\t\t\treturn moves;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 1,\n\t\t\t\tteamsPoints: 1,\n\t\t\t\tbotFFAValue: 1,\n\t\t\t\tbotTeamsValue: 0.4\n\t\t\t},\n\t\t\tpiece: \"α\",\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: true,\n\t\t\t\tisSliding: false,\n\t\t\t\tisPawn: true,\n\t\t\t\tisColorBound: false\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Berolina\",\n\t\t\t\tshortName: \"alpha\",\n\t\t\t\tdescription: \"a pawn that moves diagonally and captures forwards\"\n\t\t\t}\n\t\t}\n\t});\n\n\tconst stoneGeneralControl = createPieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.hooks.usePerspective = [true, true, true, true];\n\t\t\t\tthis.hooks.usePawnLogic = {};\n\t\t\t}\n\n\t\t\tgetPossibleCells() {\n\t\t\t\tthis.generateSlidingAttack({\n\t\t\t\t\tdisplacement: [-1, -1],\n\t\t\t\t\tspecial: AttackType.MoveOnly,\n\t\t\t\t\tlimit: this.baseRankActive ? 2 : 0,\n\t\t\t\t\tirreversible: true\n\t\t\t\t});\n\t\t\t\tthis.generateSlidingAttack({\n\t\t\t\t\tdisplacement: [-1, 1],\n\t\t\t\t\tspecial: AttackType.MoveOnly,\n\t\t\t\t\tlimit: this.baseRankActive ? 2 : 0,\n\t\t\t\t\tirreversible: true\n\t\t\t\t});\n\t\t\t\tthis.generateJumpAttack({\n\t\t\t\t\tdisplacement: [-1, -1],\n\t\t\t\t\tirreversible: true\n\t\t\t\t});\n\t\t\t\tthis.generateJumpAttack({\n\t\t\t\t\tdisplacement: [-1, 1],\n\t\t\t\t\tirreversible: true\n\t\t\t\t});\n\t\t\t\treturn this.moves;\n\t\t\t}\n\n\t\t\trayGenJumpingAttacks() {\n\t\t\t\tthis.generateJumpAttack({ displacement: [-1, -1], special: AttackType.RayTrace });\n\t\t\t\tthis.generateJumpAttack({ displacement: [-1, 1], special: AttackType.RayTrace });\n\t\t\t\tconst moves = this.moves.slice();\n\t\t\t\tthis.moves = [];\n\t\t\t\treturn moves;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 1,\n\t\t\t\tteamsPoints: 1,\n\t\t\t\tbotFFAValue: 1,\n\t\t\t\tbotTeamsValue: 0.4\n\t\t\t},\n\t\t\tpiece: \"γ\",\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: true,\n\t\t\t\tisSliding: false,\n\t\t\t\tisPawn: true,\n\t\t\t\tisColorBound: false\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Stone General\",\n\t\t\t\tshortName: \"gamma\",\n\t\t\t\tdescription: \"a pawn that moves and captures diagonally\"\n\t\t\t}\n\t\t}\n\t});\n\n\tconst soldierControl = createPieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.hooks.usePerspective = [true, true, true, true];\n\t\t\t\tthis.hooks.usePawnLogic = {};\n\t\t\t}\n\n\t\t\tgetPossibleCells() {\n\t\t\t\tthis.generateSlidingAttack({\n\t\t\t\t\tdisplacement: [-1, 0],\n\t\t\t\t\tspecial: AttackType.MoveOnly,\n\t\t\t\t\tlimit: this.baseRankActive ? 2 : 0,\n\t\t\t\t\tirreversible: true\n\t\t\t\t});\n\t\t\t\tthis.generateJumpAttack({\n\t\t\t\t\tdisplacement: [-1, 0],\n\t\t\t\t\tirreversible: true\n\t\t\t\t});\n\t\t\t\treturn this.moves;\n\t\t\t}\n\n\t\t\trayGenJumpingAttacks() {\n\t\t\t\tthis.generateJumpAttack({ displacement: [-1, 0], special: AttackType.RayTrace });\n\t\t\t\tconst moves = this.moves.slice();\n\t\t\t\tthis.moves = [];\n\t\t\t\treturn moves;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 1,\n\t\t\t\tteamsPoints: 1,\n\t\t\t\tbotFFAValue: 1,\n\t\t\t\tbotTeamsValue: 0.4\n\t\t\t},\n\t\t\tpiece: \"β\",\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: true,\n\t\t\t\tisSliding: false,\n\t\t\t\tisPawn: true,\n\t\t\t\tisColorBound: false\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Soldier\",\n\t\t\t\tshortName: \"beta\",\n\t\t\t\tdescription: \"a pawn that moves and captures forwards only\"\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.hooks.usePerspective = [true, true, true, true];\n\t\t\t\tthis.hooks.usePawnLogic = {};\n\t\t\t}\n\n\t\t\tgetPossibleCells() {\n\t\t\t\tstoneGeneralControl.getPossibleCells.call(this);\n\t\t\t\tsoldierControl.getPossibleCells.call(this);\n\t\t\t\treturn this.moves;\n\t\t\t}\n\n\t\t\trayGenJumpingAttacks() {\n\t\t\t\tstoneGeneralControl.rayGenJumpingAttacks.call(this);\n\t\t\t\tsoldierControl.rayGenJumpingAttacks.call(this);\n\t\t\t\tconst moves = this.moves.slice();\n\t\t\t\tthis.moves = [];\n\t\t\t\treturn moves;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 1,\n\t\t\t\tteamsPoints: 1,\n\t\t\t\tbotFFAValue: 1,\n\t\t\t\tbotTeamsValue: 0.4\n\t\t\t},\n\t\t\tpiece: \"δ\",\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: true,\n\t\t\t\tisSliding: false,\n\t\t\t\tisPawn: true,\n\t\t\t\tisColorBound: false\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Sergeant\",\n\t\t\t\tshortName: \"delta\",\n\t\t\t\tdescription: \"a pawn that moves and captures forwards and diagonally\"\n\t\t\t}\n\t\t}\n\t});\n\n\tconst xiangqiHorseControl = createPieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.hooks.useTrajectory = [\n\t\t\t\t\t[-1, 0],\n\t\t\t\t\t[1, 0],\n\t\t\t\t\t[0, 1],\n\t\t\t\t\t[0, -1]\n\t\t\t\t];\n\t\t\t}\n\n\t\t\tgetPossibleCells() {\n\t\t\t\tthis.generateJumpAttack({ displacement: [-1, -2], special: AttackType.Normal, squareBlockingIndex: 3 });\n\t\t\t\tthis.generateJumpAttack({ displacement: [1, -2], special: AttackType.Normal, squareBlockingIndex: 3 });\n\t\t\t\tthis.generateJumpAttack({ displacement: [-1, 2], special: AttackType.Normal, squareBlockingIndex: 2 });\n\t\t\t\tthis.generateJumpAttack({ displacement: [1, 2], special: AttackType.Normal, squareBlockingIndex: 2 });\n\t\t\t\tthis.generateJumpAttack({ displacement: [2, -1], special: AttackType.Normal, squareBlockingIndex: 1 });\n\t\t\t\tthis.generateJumpAttack({ displacement: [2, 1], special: AttackType.Normal, squareBlockingIndex: 1 });\n\t\t\t\tthis.generateJumpAttack({ displacement: [-2, -1], special: AttackType.Normal, squareBlockingIndex: 0 });\n\t\t\t\tthis.generateJumpAttack({ displacement: [-2, 1], special: AttackType.Normal, squareBlockingIndex: 0 });\n\n\t\t\t\treturn this.moves;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 2,\n\t\t\t\tteamsPoints: 2,\n\t\t\t\tbotFFAValue: 2.1,\n\t\t\t\tbotTeamsValue: 2.1\n\t\t\t},\n\t\t\tpiece: \"U\",\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: true,\n\t\t\t\tisJumping: true,\n\t\t\t\tisSliding: false,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: false\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Xiangqi horse\",\n\t\t\t\tshortName: \"u\",\n\t\t\t\tdescription: \"moves one square orthogonally and then one diagonally\"\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.hooks.useTrajectory = [\n\t\t\t\t\t[-1, 0],\n\t\t\t\t\t[1, 0],\n\t\t\t\t\t[0, 1],\n\t\t\t\t\t[0, -1]\n\t\t\t\t];\n\t\t\t}\n\n\t\t\tgetPossibleCells() {\n\t\t\t\txiangqiHorseControl.getPossibleCells.call(this);\n\t\t\t\tthis.sliding.forEach((displacement) => {\n\t\t\t\t\tthis.generateSlidingAttack({ displacement });\n\t\t\t\t});\n\n\t\t\t\treturn this.moves;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 6,\n\t\t\t\tteamsPoints: 6,\n\t\t\t\tbotFFAValue: 7.5,\n\t\t\t\tbotTeamsValue: 7.5\n\t\t\t},\n\t\t\tpiece: \"Δ\",\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: true,\n\t\t\t\tisJumping: true,\n\t\t\t\tisSliding: true,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: false\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Dragon bishop\",\n\t\t\t\tshortName: \"deltaUpper\",\n\t\t\t\tdescription: \"combines bishop and xiangqi horse\"\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.hooks.useHopping = true;\n\t\t\t\tthis.sliding = kingDirections;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 3,\n\t\t\t\tteamsPoints: 3,\n\t\t\t\tbotFFAValue: 5.8,\n\t\t\t\tbotTeamsValue: 5.8\n\t\t\t},\n\t\t\tpiece: grasshopperPieceLetter,\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: true,\n\t\t\t\tisJumping: true,\n\t\t\t\tisSliding: false,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: false\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Grasshopper\",\n\t\t\t\tshortName: grasshopperPieceLetter.toLowerCase(),\n\t\t\t\tdescription: \"jumps in any direction hopping over the first piece, landing immediately behind it\"\n\t\t\t}\n\t\t}\n\t});\n};\n","import type { PieceString } from \"@moveGeneration/GameInformation/GameUnits/PieceString\";\nimport { Coordinate, nonPlayablePieces, NumericColor } from \"../GameInformation/GameUnits/GameUnits\";\nimport type { PieceControl } from \"./PieceControl\";\n\nexport const enum AttackType {\n\tNormal,\n\tMoveOnly,\n\tAttackOnly,\n\tRayGen,\n\tRayTrace,\n\tRayTraceLimited\n}\nexport interface PieceControlHooks {\n\tuseTrajectory: Coordinate[] | undefined;\n\tusePerspective: boolean[] | undefined;\n\tusePawnLogic: { promotionRanks?: [number, number, number, number]; promotionPieces?: PieceLetter[] } | undefined;\n\tuseHopping: boolean;\n}\nexport interface PieceControlConfiguration {\n\tdisplacement: Coordinate;\n\tspecial?: AttackType;\n\tlimit?: number;\n\tsquareBlockingIndex?: number;\n\trayGenCache?: Coordinate;\n\tirreversible?: true;\n}\n\nexport interface PieceControlConfigSettings {\n\tpoints: {\n\t\tsinglesPoints: number;\n\t\tteamsPoints: number;\n\t\tbotFFAValue: number;\n\t\tbotTeamsValue: number;\n\t};\n\tpiece: string;\n\tmoveGenerationSettings: {\n\t\tisComplex: boolean;\n\t\tisJumping: boolean;\n\t\tisSliding: boolean;\n\t\tisPawn: boolean;\n\t\tisColorBound: boolean;\n\t};\n\tnaming: {\n\t\tname: string;\n\t\tshortName: string;\n\t\tdescription?: string;\n\t};\n}\n\nexport const nonPlayableValues: string[] = Object.values(nonPlayablePieces);\ndeclare const pieceLetterTag: unique symbol;\nexport type PieceLetter = string & { _: typeof pieceLetterTag };\nexport const verifyPieceLetter = (piece: string): piece is PieceLetter =>\n\tpiece in pieceControlConfigSettings || nonPlayableValues.includes(piece);\n\nexport const pieceControlConfigSettings = nonPlayableValues.reduce<Record<PieceLetter, PieceControlSettings>>(\n\t(p, n) => ({\n\t\t...p,\n\t\t[n]: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 0,\n\t\t\t\tteamsPoints: 0,\n\t\t\t\tbotFFAValue: 0,\n\t\t\t\tbotTeamsValue: 0\n\t\t\t},\n\t\t\tpiece: n,\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: false,\n\t\t\t\tisSliding: false,\n\t\t\t\tisPawn: false\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Wall\",\n\t\t\t\tshortName: n\n\t\t\t}\n\t\t}\n\t}),\n\t{}\n);\nexport interface PieceControlSettings extends PieceControlConfigSettings {\n\tconstruct: new () => PieceControl;\n}\ninterface PieceControlDeclarationConfiguration<T extends PieceControl> {\n\tconfiguration: PieceControlConfigSettings;\n\tbaseClassRef: new () => T;\n}\nexport const createPieceDeclaration = <T extends PieceControl>(configuration: PieceControlDeclarationConfiguration<T>) => {\n\tpieceControlConfigSettings[configuration.configuration.piece as PieceLetter] = {\n\t\t...configuration.configuration,\n\t\tconstruct: configuration.baseClassRef\n\t};\n\n\treturn new configuration.baseClassRef();\n};\n\nexport interface PieceControlGeneratedMove {\n\tmove: Coordinate;\n\tirreversible: boolean;\n}\n\nexport interface PieceControlInternalMove {\n\ti: number;\n\tj: number;\n\tisRayGen?: boolean;\n\tirreversible?: boolean;\n}\n\nexport interface ControlConfiguration {\n\tcoordinates: [number, number];\n\tboard: PieceString[][];\n\timmunePieces: [boolean, boolean, boolean, boolean];\n\tcolor: NumericColor;\n\tbaseRank?: boolean;\n}\n\nfunction createPredefinedPieceLetter(letter: string) {\n\treturn letter as PieceLetter;\n}\n\nexport const pawnPieceLetter = createPredefinedPieceLetter(\"P\");\nexport const wallPieceLetter = createPredefinedPieceLetter(nonPlayablePieces.wall);\nexport const grasshopperPieceLetter = createPredefinedPieceLetter(\"G\");\nexport const defaultPieces = {\n\tqueen: createPredefinedPieceLetter(\"Q\"),\n\trook: createPredefinedPieceLetter(\"R\"),\n\tbishop: createPredefinedPieceLetter(\"B\"),\n\tknight: createPredefinedPieceLetter(\"N\"),\n\tking: createPredefinedPieceLetter(\"K\")\n} as const;\nexport const emptyLetter = createPredefinedPieceLetter(\"\");\nexport const duckLetter = createPredefinedPieceLetter(nonPlayablePieces.duck);\nexport const dameLetter = createPredefinedPieceLetter(\"D\");","import { copyClass } from \"@client/ts/utils/ObjectUtils\";\nimport { verifyFunctionType, importAll, FunctionType } from \"../../../baseTypes\";\nimport type {\n\tAllowedSuperClasses,\n\tVariantDataRules,\n\tVariantRuleInformation,\n\tVariantRuleHandler,\n\tAllowedHandlerClasses,\n\tVariantRuleAllowedChecks\n} from \"./VariantRuleInterface\";\n\nexport interface VariantRulePublicProperties<K extends keyof VariantDataRules> {\n\treadonly information: VariantRuleInformation<K>;\n\treadonly parameterValue: VariantDataRules[K];\n}\n\nconst verifyHandlerProperty = <C extends AllowedSuperClasses>(\n\thandler: VariantRuleHandler<InstanceType<C>>,\n\tkey: PropertyKey\n): key is keyof typeof handler => key in handler;\nconst verifyPrototypeProperty = <C extends AllowedSuperClasses>(\n\tsuperClass: C,\n\tkey: PropertyKey\n): key is keyof AllowedSuperClasses[\"prototype\"] => key in superClass.prototype;\n\nexport abstract class VariantRule<C extends AllowedSuperClasses, K extends keyof VariantDataRules> {\n\tdeclare [\"constructor\"]: new (...args: unknown[]) => VariantRule<C, K>;\n\n\treadonly dependencies = new Map<new (...args: unknown[]) => VariantRule<AllowedSuperClasses, keyof VariantDataRules>, unknown[]>();\n\tstatic readonly variantRuleList: Array<\n\t\tnew (...args: unknown[]) => VariantRule<AllowedSuperClasses, keyof VariantDataRules> & VariantRuleHandler<AllowedHandlerClasses>\n\t> = [];\n\tprotected static initVariantRule(\n\t\trv: new (...args: unknown[]) => VariantRule<AllowedSuperClasses, keyof VariantDataRules> & VariantRuleHandler<AllowedHandlerClasses>\n\t) {\n\t\tVariantRule.variantRuleList.push(rv);\n\t}\n\tprotected decorator!: InstanceType<C>;\n\tprotected wrappingDecorators: Array<VariantRuleHandler<InstanceType<C>>> = [];\n\n\tinitializeBaseHandler(handler: InstanceType<C>) {\n\t\tthis.decorator = handler;\n\t}\n\n\tinitializeWrappingHandler(handler: VariantRule<C, keyof VariantDataRules> & VariantRuleHandler<InstanceType<C>>) {\n\t\tthis.wrappingDecorators.push(handler);\n\t}\n\n\tinjectIntoBaseClass(callback: (this: InstanceType<C>) => void) {\n\t\treturn callback.bind(this.decorator);\n\t}\n\n\tcallHandler<K extends keyof this & keyof InstanceType<C>>(\n\t\tmethod: K,\n\t\targs: IArguments\n\t): this[K] extends FunctionType ? ReturnType<this[K]> : never {\n\t\tfor (const decorator of this.wrappingDecorators) {\n\t\t\tif (!verifyHandlerProperty(decorator, method)) continue;\n\t\t\tconst decoratorMethod = decorator[method];\n\t\t\tif (!verifyFunctionType(decoratorMethod)) continue;\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-return\n\t\t\treturn decoratorMethod.call(decorator, ...args);\n\t\t}\n\n\t\tconst decoratorType: C = this.getDecoratorType();\n\t\tif (!verifyPrototypeProperty(decoratorType, method)) throw new Error(\"Method called to callHandler is not a part of prototype\");\n\t\tconst prototypeMethod: unknown = decoratorType.prototype[method];\n\t\tif (!verifyFunctionType(prototypeMethod)) throw new Error(\"Method called to callHandler is not a part of prototype\");\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-return\n\t\treturn prototypeMethod.call(this.decorator, ...args);\n\t}\n\n\tabstract matchesPGNDeclaration(match: string): boolean;\n\tabstract getPublicProperties(): VariantRulePublicProperties<K>;\n\tabstract getDecoratorType(): C;\n\tabstract serializeToParsingForm(): string;\n\tabstract isDisabled(parameters: VariantRuleAllowedChecks): boolean;\n\tgetParametrizedOptions?(): VariantDataRules[K] extends boolean ? never : Map<string, VariantDataRules[K]>;\n\n\tgetInsufficientMaterialData() {\n\t\treturn {\n\t\t\tisPartiallyDisabled: false,\n\t\t\tisDisabled: false\n\t\t};\n\t}\n}\n\nconst objectPrototype = new Set(Reflect.ownKeys(Reflect.getPrototypeOf({}) ?? []));\nexport function decorateClassWithVariants<C extends AllowedSuperClasses>(\n\tbaseClass: InstanceType<C>,\n\tclassReference: new (...args: ConstructorParameters<C>) => InstanceType<C>,\n\tvariants: Array<VariantRule<C, keyof VariantDataRules> & VariantRuleHandler<InstanceType<C>>>\n): InstanceType<C> {\n\tif (variants.length === 0) return baseClass;\n\n\tconst decoratorProperties = copyClass(baseClass, classReference, true);\n\tconst methods = new Set<keyof InstanceType<C>>();\n\tdecoratorProperties.initDecoratorSettings = () => {\n\t\t// Do nothing, this method only exists for the purpose of being overridden\n\t};\n\tmethods.add(\"initDecoratorSettings\");\n\tconst lastInheritedMethods = new Set<string | symbol>();\n\n\tlet basePrototype: object | null = null;\n\tconst verifyKeyInDecoratorProperties = (k: PropertyKey): k is keyof InstanceType<C> =>\n\t\ttypeof k !== \"number\" && k in decoratorProperties && !objectPrototype.has(k) && !lastInheritedMethods.has(k);\n\twhile ((basePrototype = Reflect.getPrototypeOf(basePrototype ?? baseClass))) {\n\t\tReflect.ownKeys(basePrototype).forEach((k) => {\n\t\t\tif (verifyKeyInDecoratorProperties(k)) {\n\t\t\t\tdecoratorProperties[k] = baseClass[k];\n\t\t\t\tmethods.add(k);\n\t\t\t\tlastInheritedMethods.add(k);\n\t\t\t}\n\t\t});\n\t}\n\n\tconst verifyOwnProperty = (k: PropertyKey): k is keyof InstanceType<C> => k in baseClass;\n\tfor (const property of Object.getOwnPropertyNames(baseClass)) {\n\t\tif (!verifyOwnProperty(property)) throw new Error(\"Expected prototype to not be overridden\");\n\n\t\tconst localProperty = property;\n\t\tObject.defineProperty(decoratorProperties, property, {\n\t\t\tget: function (): (typeof baseClass)[keyof typeof baseClass] {\n\t\t\t\treturn baseClass[localProperty];\n\t\t\t},\n\t\t\tset: function (v: InstanceType<C>[string & keyof InstanceType<C>]) {\n\t\t\t\tbaseClass[localProperty] = v;\n\t\t\t},\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false\n\t\t});\n\t}\n\tdecoratorProperties.__baseClass = baseClass;\n\n\tfor (const method of methods) {\n\t\tconst variantRuleChain = variants.filter((rv) => method in rv);\n\t\tif (variantRuleChain.length === 0) continue;\n\t\tvariantRuleChain[0].initializeBaseHandler(decoratorProperties);\n\t\tconst variantDecorator = variantRuleChain.reduce((p, c) => {\n\t\t\tc.initializeBaseHandler(decoratorProperties);\n\t\t\tc.initializeWrappingHandler(p);\n\t\t\treturn c;\n\t\t});\n\n\t\tif (method in decoratorProperties) {\n\t\t\tconst variant = Reflect.get(variantDecorator, method);\n\t\t\tif (typeof variant === \"function\") {\n\t\t\t\tconst variantFunc = variant;\n\t\t\t\tif (verifyFunctionType(decoratorProperties[method])) {\n\t\t\t\t\tObject.defineProperty(decoratorProperties, method, {\n\t\t\t\t\t\tvalue: (...args: unknown[]) => {\n\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-call\n\t\t\t\t\t\t\treturn variantFunc.bind(variantDecorator)(...args);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tenumerable: false,\n\t\t\t\t\t\twritable: false,\n\t\t\t\t\t\tconfigurable: false\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdecoratorProperties.initDecoratorSettings();\n\treturn decoratorProperties;\n}\n\nimportAll(require.context(\"./VariantRuleDefinitions\", true, /\\.ts$/));\n","import type { NumericColor } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport { Board } from \"../../../Board/Board\";\nimport { InternalMove, InternalMoveSignature } from \"../../../MoveTree/MoveTreeInterface\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { VariantRuleAllowedChecks, variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\nimport { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\n\nconst tag = \"allowPassing\";\nexport class AllowPassing extends VariantRule<typeof Board, typeof tag> implements VariantRuleHandler<Board> {\n\tstatic {\n\t\tVariantRule.initVariantRule(AllowPassing);\n\t}\n\n\tgetDecoratorType() {\n\t\treturn Board;\n\t}\n\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Allow Passing\",\n\t\t\t\tdescription: \"Players can pass instead of making a move\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.minor,\n\t\t\t\tdisplayIcon: chessGlyphIndex.pause\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\treturn /^AllowPassing$/i.test(match);\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn \"AllowPassing\";\n\t}\n\n\tisDisabled({ variantDataRules }: VariantRuleAllowedChecks): boolean {\n\t\treturn variantDataRules.giveaway;\n\t}\n\n\tgetAllowedInternalMoves(sideToMove: NumericColor = this.decorator.data.sideToMove): InternalMove[] {\n\t\tconst passingMoves = this.decorator.isKingInCheck(sideToMove) ? [] : [{ type: InternalMoveSignature.Pass }];\n\t\tfor (const decorator of this.wrappingDecorators) {\n\t\t\tif (decorator.getAllowedInternalMoves) {\n\t\t\t\treturn [...passingMoves, ...decorator.getAllowedInternalMoves(sideToMove)];\n\t\t\t}\n\t\t}\n\t\treturn [...passingMoves, ...Board.prototype.getAllowedInternalMoves.call(this.decorator, sideToMove)];\n\t}\n}\n","import { VariantType } from \"@moveGeneration/GameInformation/GameData\";\nimport { Board } from \"../../../Board/Board\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { VariantRuleAllowedChecks, variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\n\nconst tag = \"alternativeTeams\";\nexport class AlternativeTeams extends VariantRule<typeof Board, typeof tag> implements VariantRuleHandler<Board> {\n\tstatic {\n\t\tVariantRule.initVariantRule(AlternativeTeams);\n\t}\n\n\tprivate teammate: number;\n\tconstructor(teammate?: unknown) {\n\t\tsuper();\n\t\tif (typeof teammate === \"number\") {\n\t\t\tthis.teammate = teammate;\n\t\t} else {\n\t\t\tthis.teammate = 2;\n\t\t}\n\t}\n\n\tgetDecoratorType() {\n\t\treturn Board;\n\t}\n\n\tgetPublicProperties() {\n\t\tconst rbTeams = this.teammate === 1;\n\t\tconst teamOne = rbTeams ? \"Red & Blue\" : \"Red & Green\";\n\t\tconst teamTwo = rbTeams ? \"Yellow & Green\" : \"Blue & Yellow\";\n\t\treturn {\n\t\t\tparameterValue: this.teammate,\n\t\t\tinformation: {\n\t\t\t\tname: `Teams`,\n\t\t\t\tdescription: `Alternative Teams: ${teamOne} form a team against ${teamTwo}`,\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.autogenous,\n\t\t\t\tdisplayIcon: \"Đ\"\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\tconst matchArray = match.match(/^Teammate=(1|3)$/);\n\t\tif (matchArray) {\n\t\t\tthis.teammate = Number(matchArray[1]);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn `Teammate=${this.teammate}`;\n\t}\n\n\tisDisabled({ gameType }: VariantRuleAllowedChecks): boolean {\n\t\treturn gameType !== VariantType.Teams;\n\t}\n\n\tgetParametrizedOptions() {\n\t\treturn new Map([\n\t\t\t[\"Red & Yellow v Blue & Green\", 2],\n\t\t\t[\"Red & Blue v Yellow & Green\", 1],\n\t\t\t[\"Red & Green v Blue & Yellow\", 3]\n\t\t]);\n\t}\n\n\tinitDecoratorSettings() {\n\t\tconst teamSettings = this.decorator.gameType.teamSettings;\n\t\tif (this.teammate === 1) {\n\t\t\tteamSettings.firstTeamColors = [true, true, false, false];\n\t\t\tteamSettings.secondTeamColors = [false, false, true, true];\n\t\t} else if (this.teammate === 3) {\n\t\t\tteamSettings.firstTeamColors = [true, false, false, true];\n\t\t\tteamSettings.secondTeamColors = [false, true, true, false];\n\t\t}\n\n\t\tfor (const decorator of this.wrappingDecorators) decorator.initDecoratorSettings?.();\n\t}\n}\n","import { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\nimport { Board } from \"../../../Board/Board\";\nimport { stringifyCoordinate } from \"../../../Board/BoardInterface\";\nimport type { PostMoveResults } from \"../../../FENData/FENDataInterface\";\nimport { InternalMoveSignature } from \"../../../MoveTree/MoveTreeInterface\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\n\nconst tag = \"barePieceRule\";\nexport class BarePieceRule extends VariantRule<typeof Board, typeof tag> implements VariantRuleHandler<Board> {\n\tstatic {\n\t\tVariantRule.initVariantRule(BarePieceRule);\n\t}\n\n\tgetDecoratorType() {\n\t\treturn Board;\n\t}\n\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Bare piece rule\",\n\t\t\t\tdescription: \"Players with only one remaining piece are forfeit\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.minor,\n\t\t\t\tdisplayIcon: chessGlyphIndex.filter\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\treturn /^BarePieceLoses$/i.test(match);\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\tgetInsufficientMaterialData() {\n\t\treturn {\n\t\t\tisPartiallyDisabled: true,\n\t\t\tisDisabled: false\n\t\t} as const;\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn \"BarePieceLoses\";\n\t}\n\n\tmakeMove(): PostMoveResults {\n\t\tconst {\n\t\t\tdata: { sideToMove },\n\t\t\tboard,\n\t\t\tpreGeneratedAttacks\n\t\t} = this.decorator;\n\t\tconst results = this.callHandler(\"makeMove\", arguments);\n\n\t\tconst playerPieces = this.decorator.getPlayerPieces()[sideToMove];\n\t\tif (playerPieces.length === 1) {\n\t\t\tconst pieceMovements = preGeneratedAttacks[sideToMove].pieceMovements.get(stringifyCoordinate(playerPieces[0]));\n\t\t\tif (pieceMovements) {\n\t\t\t\tfor (const { move: coordinate } of pieceMovements) {\n\t\t\t\t\tif (board[coordinate[0]][coordinate[1]].isPiece()) {\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn this.decorator.makeMove([{ type: InternalMoveSignature.Resign }]);\n\t\t\t}\n\t\t}\n\n\t\treturn results;\n\t}\n}\n","import type { BoardSquares } from \"@client/ts/logic/BaseInterfaces\";\nimport { Board } from \"../../../Board/Board\";\nimport { DisplaySettings } from \"../../../Board/BoardInterface\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { VariantRuleAllowedChecks, variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\nimport { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\n\nconst tag = \"blindfold\";\nexport class Blindfold extends VariantRule<typeof Board, typeof tag> implements VariantRuleHandler<Board> {\n\tstatic {\n\t\tVariantRule.initVariantRule(Blindfold);\n\t}\n\n\tgetDecoratorType() {\n\t\treturn Board;\n\t}\n\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Blindfold\",\n\t\t\t\tdescription: \"Pieces are invisible\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.visual,\n\t\t\t\tdisplayIcon: chessGlyphIndex.blindfold\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\treturn /^Blindfold$/i.test(match);\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn \"Blindfold\";\n\t}\n\n\tisDisabled({ variantDataRules }: VariantRuleAllowedChecks): boolean {\n\t\treturn variantDataRules.fogOfWar;\n\t}\n\n\tgetSquareVisibility(): BoardSquares<DisplaySettings[]> {\n\t\tconst squareVisibility: BoardSquares<DisplaySettings[]> = this.callHandler(\"getSquareVisibility\", arguments);\n\t\treturn squareVisibility.map((r, i) =>\n\t\t\tr.map((v, j) => {\n\t\t\t\tif (this.decorator.board[i][j].isWall()) {\n\t\t\t\t\treturn v;\n\t\t\t\t} else {\n\t\t\t\t\treturn [...v, DisplaySettings.Blindfolded];\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n}\n","import { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\nimport { Board } from \"../../../Board/Board\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { VariantRuleAllowedChecks, variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\n\nconst tag = \"captureTheKing\";\nexport class CaptureTheKing extends VariantRule<typeof Board, typeof tag> implements VariantRuleHandler<Board> {\n\tstatic {\n\t\tVariantRule.initVariantRule(CaptureTheKing);\n\t}\n\n\tgetDecoratorType() {\n\t\treturn Board;\n\t}\n\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Capture the King\",\n\t\t\t\tdescription: \"To checkmate, kings must be captured\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.minor,\n\t\t\t\tdisplayIcon: chessGlyphIndex.king\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\treturn /^CaptureTheKing$/i.test(match);\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn \"CaptureTheKing\";\n\t}\n\n\tisDisabled({ variantDataRules }: VariantRuleAllowedChecks): boolean {\n\t\treturn variantDataRules.giveaway || variantDataRules.taboo;\n\t}\n\n\tgetInsufficientMaterialData() {\n\t\treturn {\n\t\t\tisPartiallyDisabled: true,\n\t\t\tisDisabled: false\n\t\t} as const;\n\t}\n\n\tisKingInCheck(): boolean {\n\t\treturn false;\n\t}\n\n\tisTheMoveLegal(): boolean {\n\t\treturn true;\n\t}\n}\n","import { getVerticalPlacementModulus, isVerticalPlacement } from \"@client/ts/logic/BaseInterfaces\";\nimport { NumericColor } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport { Board } from \"../../../Board/Board\";\nimport { boardDimension, colors } from \"../../../GameInformation/GameData\";\nimport type { PieceString } from \"../../../GameInformation/GameUnits/PieceString\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\nimport { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\n\nconst tag = \"chess960\";\nexport class Chess960 extends VariantRule<typeof Board, typeof tag> implements VariantRuleHandler<Board> {\n\tstatic {\n\t\tVariantRule.initVariantRule(Chess960);\n\t}\n\n\tprivate static readonly chess960ranges = [\n\t\t...Array.from({ length: 9 }, (_, i) => [960 * (i + 1) + 1, 960 + 960 * (i + 1)]),\n\t\t...Array.from({ length: 5 }, (_, i) => [10000 + 960 * (i + 1) + 1, 10960 + 960 * (i + 1)])\n\t];\n\tprivate static readonly minorPieceCache = (function () {\n\t\tconst minorPieceCache = [];\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\tfor (let j = i + 1; j < 5; j++) {\n\t\t\t\tminorPieceCache.push([i, j]);\n\t\t\t}\n\t\t}\n\t\treturn minorPieceCache;\n\t})();\n\t// prettier-ignore\n\tprivate static readonly pieceMasks = [\n        [404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959],\n        [5, 6, 7, 9, 10, 11, 13, 14, 15, 17, 18, 19, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 49, 50, 51, 53, 54, 55, 57, 58, 59, 61, 62, 63, 65, 66, 67, 69, 70, 71, 73, 74, 75, 77, 78, 79, 81, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95, 101, 102, 103, 105, 106, 107, 109, 110, 111, 113, 114, 115, 129, 130, 131, 145, 146, 147, 161, 162, 163, 177, 178, 179, 197, 198, 199, 201, 202, 203, 205, 206, 207, 209, 210, 211, 225, 226, 227, 241, 242, 243, 257, 258, 259, 273, 274, 275, 293, 294, 295, 297, 298, 299, 301, 302, 303, 305, 306, 307, 321, 322, 323, 337, 338, 339, 353, 354, 355, 369, 370, 371, 421, 422, 423, 425, 426, 427, 429, 430, 431, 437, 438, 439, 441, 442, 443, 445, 446, 447, 453, 454, 455, 457, 458, 459, 461, 462, 463, 469, 470, 471, 473, 474, 475, 477, 478, 479, 517, 518, 519, 521, 522, 523, 525, 526, 527, 533, 534, 535, 537, 538, 539, 541, 542, 543, 549, 550, 551, 553, 554, 555, 557, 558, 559, 565, 566, 567, 569, 570, 571, 573, 574, 575, 613, 614, 615, 617, 618, 619, 621, 622, 623, 629, 630, 631, 633, 634, 635, 637, 638, 639, 645, 646, 647, 649, 650, 651, 653, 654, 655, 661, 662, 663, 665, 666, 667, 669, 670, 671],\n        [4, 5, 6, 7, 20, 21, 22, 23, 36, 37, 38, 39, 52, 53, 54, 55, 68, 69, 70, 71, 84, 85, 86, 87, 100, 101, 102, 103, 116, 117, 118, 119, 132, 133, 134, 135, 148, 149, 150, 151, 164, 165, 166, 167, 180, 181, 182, 183, 196, 197, 198, 199, 212, 213, 214, 215, 228, 229, 230, 231, 244, 245, 246, 247, 260, 261, 262, 263, 276, 277, 278, 279, 292, 293, 294, 295, 308, 309, 310, 311, 324, 325, 326, 327, 340, 341, 342, 343, 356, 357, 358, 359, 372, 373, 374, 375, 388, 389, 390, 391, 404, 405, 406, 407, 420, 421, 422, 423, 436, 437, 438, 439, 452, 453, 454, 455, 468, 469, 470, 471, 484, 485, 486, 487, 500, 501, 502, 503, 516, 517, 518, 519, 532, 533, 534, 535, 548, 549, 550, 551, 564, 565, 566, 567, 580, 581, 582, 583, 596, 597, 598, 599, 612, 613, 614, 615, 628, 629, 630, 631, 644, 645, 646, 647, 660, 661, 662, 663, 676, 677, 678, 679, 692, 693, 694, 695, 708, 709, 710, 711, 724, 725, 726, 727, 740, 741, 742, 743, 756, 757, 758, 759, 772, 773, 774, 775, 788, 789, 790, 791, 804, 805, 806, 807, 820, 821, 822, 823, 836, 837, 838, 839, 852, 853, 854, 855, 868, 869, 870, 871, 884, 885, 886, 887, 900, 901, 902, 903, 916, 917, 918, 919, 932, 933, 934, 935, 948, 949, 950, 951],\n        [16, 20, 34, 35, 38, 39, 40, 44, 58, 59, 62, 63, 112, 116, 130, 131, 134, 135, 136, 140, 154, 155, 158, 159, 208, 212, 226, 227, 230, 231, 232, 236, 250, 251, 254, 255, 304, 308, 322, 323, 326, 327, 328, 332, 346, 347, 350, 351, 400, 404, 418, 419, 422, 423, 424, 428, 442, 443, 446, 447, 496, 500, 514, 515, 518, 519, 520, 524, 538, 539, 542, 543, 592, 596, 610, 611, 614, 615, 616, 620, 634, 635, 638, 639, 688, 692, 706, 707, 710, 711, 712, 716, 730, 731, 734, 735, 784, 788, 802, 803, 806, 807, 808, 812, 826, 827, 830, 831, 880, 884, 898, 899, 902, 903, 904, 908, 922, 923, 926, 927],\n        [14, 15, 30, 31, 46, 47, 62, 63, 66, 67, 70, 71, 76, 77, 82, 83, 86, 87, 92, 93, 110, 111, 126, 127, 142, 143, 158, 159, 162, 163, 166, 167, 172, 173, 178, 179, 182, 183, 188, 189, 194, 195, 198, 199, 204, 205, 210, 211, 214, 215, 220, 221, 226, 227, 230, 231, 236, 237, 240, 241, 244, 245, 256, 257, 260, 261, 272, 273, 276, 277, 290, 291, 294, 295, 300, 301, 306, 307, 310, 311, 316, 317, 322, 323, 326, 327, 332, 333, 336, 337, 340, 341, 352, 353, 356, 357, 368, 369, 372, 373, 398, 399, 414, 415, 430, 431, 446, 447, 450, 451, 454, 455, 460, 461, 466, 467, 470, 471, 476, 477, 482, 483, 486, 487, 492, 493, 498, 499, 502, 503, 508, 509, 514, 515, 518, 519, 524, 525, 528, 529, 532, 533, 544, 545, 548, 549, 560, 561, 564, 565, 578, 579, 582, 583, 588, 589, 594, 595, 598, 599, 604, 605, 610, 611, 614, 615, 620, 621, 624, 625, 628, 629, 640, 641, 644, 645, 656, 657, 660, 661, 672, 673, 676, 677, 688, 689, 692, 693, 768, 769, 772, 773, 784, 785, 788, 789, 864, 865, 868, 869, 880, 881, 884, 885],\n        [2, 6, 10, 14, 18, 22, 26, 30, 34, 38, 42, 46, 50, 54, 58, 62, 66, 70, 74, 78, 82, 86, 90, 94, 98, 102, 106, 110, 114, 118, 122, 126, 130, 134, 138, 142, 146, 150, 154, 158, 162, 166, 170, 174, 178, 182, 186, 190, 194, 198, 202, 206, 210, 214, 218, 222, 226, 230, 234, 238, 242, 246, 250, 254, 258, 262, 266, 270, 274, 278, 282, 286, 290, 294, 298, 302, 306, 310, 314, 318, 322, 326, 330, 334, 338, 342, 346, 350, 354, 358, 362, 366, 370, 374, 378, 382, 386, 390, 394, 398, 402, 406, 410, 414, 418, 422, 426, 430, 434, 438, 442, 446, 450, 454, 458, 462, 466, 470, 474, 478, 482, 486, 490, 494, 498, 502, 506, 510, 514, 518, 522, 526, 530, 534, 538, 542, 546, 550, 554, 558, 562, 566, 570, 574, 578, 582, 586, 590, 594, 598, 602, 606, 610, 614, 618, 622, 626, 630, 634, 638, 642, 646, 650, 654, 658, 662, 666, 670, 674, 678, 682, 686, 690, 694, 698, 702, 706, 710, 714, 718, 722, 726, 730, 734, 738, 742, 746, 750, 754, 758, 762, 766, 770, 774, 778, 782, 786, 790, 794, 798, 802, 806, 810, 814, 818, 822, 826, 830, 834, 838, 842, 846, 850, 854, 858, 862, 866, 870, 874, 878, 882, 886, 890, 894, 898, 902, 906, 910, 914, 918, 922, 926, 930, 934, 938, 942, 946, 950, 954, 958],\n        [192, 193, 194, 196, 197, 198, 200, 201, 202, 208, 209, 210, 212, 213, 214, 216, 217, 218, 224, 225, 226, 228, 229, 230, 232, 233, 234, 240, 241, 242, 244, 245, 246, 248, 249, 250, 291, 295, 299, 307, 311, 315, 323, 327, 331, 339, 343, 347, 355, 359, 363, 368, 369, 370, 372, 373, 374, 376, 377, 378, 480, 481, 482, 484, 485, 486, 488, 489, 490, 496, 497, 498, 500, 501, 502, 504, 505, 506, 512, 513, 514, 516, 517, 518, 520, 521, 522, 528, 529, 530, 532, 533, 534, 536, 537, 538, 579, 583, 587, 595, 599, 603, 611, 615, 619, 627, 631, 635, 643, 647, 651, 656, 657, 658, 660, 661, 662, 664, 665, 666, 672, 673, 674, 676, 677, 678, 680, 681, 682, 688, 689, 690, 692, 693, 694, 696, 697, 698, 704, 705, 706, 708, 709, 710, 712, 713, 714, 720, 721, 722, 724, 725, 726, 728, 729, 730, 771, 775, 779, 787, 791, 795, 803, 807, 811, 819, 823, 827, 835, 839, 843, 848, 849, 850, 852, 853, 854, 856, 857, 858, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 931, 935, 939, 944, 945, 946, 948, 949, 950, 952, 953, 954],\n        [1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 20, 21, 22, 24, 25, 26, 28, 29, 30, 32, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 48, 49, 50, 52, 53, 54, 56, 57, 58, 60, 61, 62, 64, 65, 66, 68, 69, 70, 72, 73, 74, 76, 77, 78, 96, 97, 98, 100, 101, 102, 104, 105, 106, 108, 109, 110, 112, 113, 114, 116, 117, 118, 120, 121, 122, 124, 125, 126, 128, 129, 130, 132, 133, 134, 136, 137, 138, 140, 141, 142, 144, 145, 146, 148, 149, 150, 152, 153, 154, 156, 157, 158, 160, 161, 162, 164, 165, 166, 168, 169, 170, 172, 173, 174, 192, 193, 194, 196, 197, 198, 200, 201, 202, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 224, 225, 226, 228, 229, 230, 232, 233, 234, 236, 237, 238, 240, 241, 242, 244, 245, 246, 248, 249, 250, 252, 253, 254, 256, 257, 258, 260, 261, 262, 264, 265, 266, 268, 269, 270, 384, 385, 386, 388, 389, 390, 392, 393, 394, 396, 397, 398, 400, 401, 402, 404, 405, 406, 408, 409, 410, 412, 413, 414, 416, 417, 418, 420, 421, 422, 424, 425, 426, 428, 429, 430, 432, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 450, 452, 453, 454, 456, 457, 458, 460, 461, 462, 480, 481, 482, 484, 485, 486, 488, 489, 490, 492, 493, 494, 496, 497, 498, 500, 501, 502, 504, 505, 506, 508, 509, 510, 512, 513, 514, 516, 517, 518, 520, 521, 522, 524, 525, 526, 528, 529, 530, 532, 533, 534, 536, 537, 538, 540, 541, 542, 544, 545, 546, 548, 549, 550, 552, 553, 554, 556, 557, 558, 672, 673, 674, 676, 677, 678, 680, 681, 682, 684, 685, 686, 688, 689, 690, 692, 693, 694, 696, 697, 698, 700, 701, 702, 704, 705, 706, 708, 709, 710, 712, 713, 714, 716, 717, 718, 720, 721, 722, 724, 725, 726, 728, 729, 730, 732, 733, 734, 736, 737, 738, 740, 741, 742, 744, 745, 746, 748, 749, 750]\n    ];\n\tprivate static readonly c960range = (function () {\n\t\tconst arr = [...Array(961).keys()];\n\t\tarr.shift();\n\t\treturn arr;\n\t})();\n\t// prettier-ignore\n\tprivate static readonly twins = [959, 955, 951, 947, 958, 954, 950, 946, 957, 953, 949, 945, 956, 952, 948, 944, 943, 939, 935, 931, 942, 938, 934, 930, 941, 937, 933, 929, 940, 936, 932, 928, 927, 923, 919, 915, 926, 922, 918, 914, 925, 921, 917, 913, 924, 920, 916, 912, 911, 907, 903, 899, 910, 906, 902, 898, 909, 905, 901, 897, 908, 904, 900, 896, 895, 891, 887, 883, 894, 890, 886, 882, 893, 889, 885, 881, 892, 888, 884, 880, 879, 875, 871, 867, 878, 874, 870, 866, 877, 873, 869, 865, 876, 872, 868, 864, 863, 859, 855, 851, 862, 858, 854, 850, 861, 857, 853, 849, 860, 856, 852, 848, 847, 843, 839, 835, 846, 842, 838, 834, 845, 841, 837, 833, 844, 840, 836, 832, 831, 827, 823, 819, 830, 826, 822, 818, 829, 825, 821, 817, 828, 824, 820, 816, 815, 811, 807, 803, 814, 810, 806, 802, 813, 809, 805, 801, 812, 808, 804, 800, 799, 795, 791, 787, 798, 794, 790, 786, 797, 793, 789, 785, 796, 792, 788, 784, 783, 779, 775, 771, 782, 778, 774, 770, 781, 777, 773, 769, 780, 776, 772, 768, 671, 667, 663, 659, 670, 666, 662, 658, 669, 665, 661, 657, 668, 664, 660, 656, 655, 651, 647, 643, 654, 650, 646, 642, 653, 649, 645, 641, 652, 648, 644, 640, 639, 635, 631, 627, 638, 634, 630, 626, 637, 633, 629, 625, 636, 632, 628, 624, 623, 619, 615, 611, 622, 618, 614, 610, 621, 617, 613, 609, 620, 616, 612, 608, 607, 603, 599, 595, 606, 602, 598, 594, 605, 601, 597, 593, 604, 600, 596, 592, 591, 587, 583, 579, 590, 586, 582, 578, 589, 585, 581, 577, 588, 584, 580, 576, 383, 379, 375, 371, 382, 378, 374, 370, 381, 377, 373, 369, 380, 376, 372, 368, 367, 363, 359, 355, 366, 362, 358, 354, 365, 361, 357, 353, 364, 360, 356, 352, 351, 347, 343, 339, 350, 346, 342, 338, 349, 345, 341, 337, 348, 344, 340, 336, 335, 331, 327, 323, 334, 330, 326, 322, 333, 329, 325, 321, 332, 328, 324, 320, 319, 315, 311, 307, 318, 314, 310, 306, 317, 313, 309, 305, 316, 312, 308, 304, 303, 299, 295, 291, 302, 298, 294, 290, 301, 297, 293, 289, 300, 296, 292, 288, 767, 763, 759, 755, 766, 762, 758, 754, 765, 761, 757, 753, 764, 760, 756, 752, 751, 747, 743, 739, 750, 746, 742, 738, 749, 745, 741, 737, 748, 744, 740, 736, 735, 731, 727, 723, 734, 730, 726, 722, 733, 729, 725, 721, 732, 728, 724, 720, 719, 715, 711, 707, 718, 714, 710, 706, 717, 713, 709, 705, 716, 712, 708, 704, 703, 699, 695, 691, 702, 698, 694, 690, 701, 697, 693, 689, 700, 696, 692, 688, 687, 683, 679, 675, 686, 682, 678, 674, 685, 681, 677, 673, 684, 680, 676, 672, 575, 571, 567, 563, 574, 570, 566, 562, 573, 569, 565, 561, 572, 568, 564, 560, 559, 555, 551, 547, 558, 554, 550, 546, 557, 553, 549, 545, 556, 552, 548, 544, 543, 539, 535, 531, 542, 538, 534, 530, 541, 537, 533, 529, 540, 536, 532, 528, 527, 523, 519, 515, 526, 522, 518, 514, 525, 521, 517, 513, 524, 520, 516, 512, 511, 507, 503, 499, 510, 506, 502, 498, 509, 505, 501, 497, 508, 504, 500, 496, 495, 491, 487, 483, 494, 490, 486, 482, 493, 489, 485, 481, 492, 488, 484, 480, 287, 283, 279, 275, 286, 282, 278, 274, 285, 281, 277, 273, 284, 280, 276, 272, 271, 267, 263, 259, 270, 266, 262, 258, 269, 265, 261, 257, 268, 264, 260, 256, 255, 251, 247, 243, 254, 250, 246, 242, 253, 249, 245, 241, 252, 248, 244, 240, 239, 235, 231, 227, 238, 234, 230, 226, 237, 233, 229, 225, 236, 232, 228, 224, 223, 219, 215, 211, 222, 218, 214, 210, 221, 217, 213, 209, 220, 216, 212, 208, 207, 203, 199, 195, 206, 202, 198, 194, 205, 201, 197, 193, 204, 200, 196, 192, 479, 475, 471, 467, 478, 474, 470, 466, 477, 473, 469, 465, 476, 472, 468, 464, 463, 459, 455, 451, 462, 458, 454, 450, 461, 457, 453, 449, 460, 456, 452, 448, 447, 443, 439, 435, 446, 442, 438, 434, 445, 441, 437, 433, 444, 440, 436, 432, 431, 427, 423, 419, 430, 426, 422, 418, 429, 425, 421, 417, 428, 424, 420, 416, 415, 411, 407, 403, 414, 410, 406, 402, 413, 409, 405, 401, 412, 408, 404, 400, 399, 395, 391, 387, 398, 394, 390, 386, 397, 393, 389, 385, 396, 392, 388, 384, 191, 187, 183, 179, 190, 186, 182, 178, 189, 185, 181, 177, 188, 184, 180, 176, 175, 171, 167, 163, 174, 170, 166, 162, 173, 169, 165, 161, 172, 168, 164, 160, 159, 155, 151, 147, 158, 154, 150, 146, 157, 153, 149, 145, 156, 152, 148, 144, 143, 139, 135, 131, 142, 138, 134, 130, 141, 137, 133, 129, 140, 136, 132, 128, 127, 123, 119, 115, 126, 122, 118, 114, 125, 121, 117, 113, 124, 120, 116, 112, 111, 107, 103, 99, 110, 106, 102, 98, 109, 105, 101, 97, 108, 104, 100, 96, 95, 91, 87, 83, 94, 90, 86, 82, 93, 89, 85, 81, 92, 88, 84, 80, 79, 75, 71, 67, 78, 74, 70, 66, 77, 73, 69, 65, 76, 72, 68, 64, 63, 59, 55, 51, 62, 58, 54, 50, 61, 57, 53, 49, 60, 56, 52, 48, 47, 43, 39, 35, 46, 42, 38, 34, 45, 41, 37, 33, 44, 40, 36, 32, 31, 27, 23, 19, 30, 26, 22, 18, 29, 25, 21, 17, 28, 24, 20, 16, 15, 11, 7, 3, 14, 10, 6, 2, 13, 9, 5, 1, 12, 8, 4, 0];\n\tprivate static readonly legacy = {\n\t\tlegacy2PThreshold: 1000,\n\t\tlegacy2PRank: 3,\n\t\tlegacy4Prank: 0,\n\t\tlegacy2PTakeaway: 6160\n\t} as const;\n\tprivate static readonly displacement = [3, 11];\n\tprivate static createBaseChess960mappings() {\n\t\treturn {\n\t\t\tcolorBoundPieces: [2, 5],\n\t\t\tsupermajorPieces: [3],\n\t\t\tminorPieces: [1, 6],\n\t\t\troyalPiece: [4],\n\t\t\tedgePieces: [0, 7]\n\t\t};\n\t}\n\n\tprivate static regExp = /Chess960=(\\d{1,5})/i;\n\tprivate positionID: number;\n\tconstructor(positionID?: unknown) {\n\t\tsuper();\n\t\tif (typeof positionID === \"number\") {\n\t\t\tthis.positionID = positionID;\n\t\t} else {\n\t\t\tthis.positionID = -1;\n\t\t}\n\t}\n\n\tgetDecoratorType() {\n\t\treturn Board;\n\t}\n\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: this.positionID,\n\t\t\tinformation: {\n\t\t\t\tname: \"Chess960\",\n\t\t\t\tdescription: \"Initial position with randomly shuffled pieces on home ranks\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.startingPosition,\n\t\t\t\tdisplayIcon: chessGlyphIndex.chess960\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\tconst matchArray = match.match(Chess960.regExp);\n\t\tif (matchArray) {\n\t\t\tconst newID = Number(matchArray[1]);\n\t\t\tif (newID < 0 || newID > 15760) return false;\n\t\t\tthis.positionID = newID;\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn `Chess960=${this.positionID}`;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\tinitDecoratorSettings() {\n\t\tif (this.positionID === -1) throw new Error(\"Position ID for Chess960 is not defined\");\n\t\tlet nr = this.positionID;\n\t\tconst boardSquares = this.decorator.board;\n\t\tlet rank = Chess960.chess960ranges.findIndex((r) => nr >= r[0] && nr <= r[1]);\n\t\tif (rank === -1) {\n\t\t\tif (nr > Chess960.legacy.legacy2PThreshold) {\n\t\t\t\trank = Chess960.legacy.legacy2PRank;\n\t\t\t\tnr -= Chess960.legacy.legacy2PTakeaway;\n\t\t\t} else {\n\t\t\t\trank = Chess960.legacy.legacy4Prank;\n\t\t\t}\n\t\t}\n\n\t\tconst pieceArrays: PieceString[][] = [[], [], [], []];\n\t\tconst ranks = [13 - rank, rank, rank, 13 - rank];\n\t\tpieceArrays[0] = boardSquares[ranks[0]].slice(Chess960.displacement[0], Chess960.displacement[1]);\n\t\tpieceArrays[1] = boardSquares.map((row) => row[ranks[1]]).slice(Chess960.displacement[0], Chess960.displacement[1]);\n\t\tpieceArrays[2] = boardSquares[ranks[2]].slice(Chess960.displacement[0], Chess960.displacement[1]);\n\t\tpieceArrays[3] = boardSquares.map((row) => row[ranks[3]]).slice(Chess960.displacement[0], Chess960.displacement[1]);\n\n\t\tconst walls = pieceArrays.map((a) => a.map((p) => (p.isWall() ? true : false)));\n\t\tconst intersections: number[][] = [];\n\t\tfor (const wall of walls) {\n\t\t\tintersections.push(\n\t\t\t\twall.reduce((p, c, i) => {\n\t\t\t\t\tif (c) {\n\t\t\t\t\t\treturn p.filter((v) => Chess960.pieceMasks[i].includes(v));\n\t\t\t\t\t} else return p;\n\t\t\t\t}, Chess960.c960range)\n\t\t\t);\n\t\t}\n\n\t\ttype IndexingType = ReturnType<typeof generatePositionIndexes>;\n\t\tconst calcNr = nr - Chess960.chess960ranges[rank][0];\n\t\tconst positions: IndexingType[] = [];\n\n\t\tconst generatePositionIndexes = (calcNr: number): typeof position => {\n\t\t\tconst colorBoundIndexes = [2 * Math.floor((calcNr % 16) / 4), 1 + 2 * ((calcNr % 16) % 4)].sort();\n\t\t\tconst supermajorIndex = Math.floor(calcNr / 16) % 6;\n\t\t\tconst minorPieceIndexes = Chess960.minorPieceCache[Math.floor(calcNr / 96) % 10];\n\n\t\t\tconst position = {\n\t\t\t\tcolorBoundPieces: Array(8).fill(false),\n\t\t\t\tsupermajorPieces: Array(8).fill(false),\n\t\t\t\tminorPieces: Array(8).fill(false),\n\t\t\t\troyalPiece: Array(8).fill(false),\n\t\t\t\tedgePieces: Array(8).fill(false)\n\t\t\t};\n\n\t\t\tlet edgeSet = false,\n\t\t\t\troyalSet = false,\n\t\t\t\tcolorDelta = 0,\n\t\t\t\tmajorDelta = 0;\n\t\t\tfor (let i = 0; i < boardDimension - Chess960.displacement[0] * 2; i++) {\n\t\t\t\tif (i === colorBoundIndexes[0] || i === colorBoundIndexes[1]) {\n\t\t\t\t\tposition.colorBoundPieces[i] = true;\n\t\t\t\t\tcolorDelta++;\n\t\t\t\t} else if (i === supermajorIndex + colorDelta) {\n\t\t\t\t\tposition.supermajorPieces[i] = true;\n\t\t\t\t\tmajorDelta++;\n\t\t\t\t} else if (i === minorPieceIndexes[0] + colorDelta + majorDelta || i === minorPieceIndexes[1] + colorDelta + majorDelta) {\n\t\t\t\t\tposition.minorPieces[i] = true;\n\t\t\t\t} else {\n\t\t\t\t\tposition[edgeSet ? (royalSet ? \"edgePieces\" : \"royalPiece\") : \"edgePieces\"][i] = true;\n\t\t\t\t\troyalSet = edgeSet;\n\t\t\t\t\tedgeSet = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn position;\n\t\t};\n\n\t\tfor (const intersection of intersections) {\n\t\t\tif (intersection.length === 0) return null;\n\t\t\tlet calcTempNr = calcNr;\n\t\t\tlet cycles = 0;\n\t\t\twhile (cycles < 2) {\n\t\t\t\tif (intersection.includes(calcTempNr)) {\n\t\t\t\t\tpositions.push(generatePositionIndexes(calcTempNr));\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (intersection.includes(Chess960.twins[calcTempNr - 1])) {\n\t\t\t\t\tpositions.push(generatePositionIndexes(Chess960.twins[calcTempNr - 1]));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcalcTempNr++;\n\t\t\t\tif (calcTempNr === 960) (calcTempNr = 0), cycles++;\n\t\t\t}\n\n\t\t\tif (cycles === 2) intersections.push([]);\n\t\t}\n\n\t\tconst fenData = this.decorator.data;\n\t\tconst royalPieces = fenData.fenOptions.tag(\"royal\");\n\t\tconst royalOnCorrectRank = royalPieces.map((r, i) =>\n\t\t\tr !== null ? (r[getVerticalPlacementModulus(i)] === ranks[i] ? r[getVerticalPlacementModulus(i)] : -1) : -1\n\t\t);\n\n\t\tconst replaceRow = (player: NumericColor): void => {\n\t\t\tconst pieces = Chess960.createBaseChess960mappings();\n\t\t\tconst royal = royalPieces[player];\n\t\t\tif (!royal) return;\n\t\t\tconst r = royal[getVerticalPlacementModulus(player)];\n\t\t\tconst supermajorOverRoyal = royalOnCorrectRank[player] ? r <= 6 : false;\n\n\t\t\tfor (let i = Chess960.displacement[0]; i < Chess960.displacement[1]; i++) {\n\t\t\t\tlet k: keyof IndexingType;\n\t\t\t\tfor (k in pieces) {\n\t\t\t\t\tif (!Object.prototype.hasOwnProperty.call(pieces, k) || !positions[player][k][i - 3]) continue;\n\n\t\t\t\t\tif (royalOnCorrectRank[player] !== -1 && k === \"royalPiece\" && r !== i) {\n\t\t\t\t\t\troyal[getVerticalPlacementModulus(player)] = i;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst mI = supermajorOverRoyal ? (intersections[player].length === 960 ? boardDimension - 1 - i : i) : i;\n\t\t\t\t\tconst piece = pieces[k].shift();\n\t\t\t\t\tif (piece !== undefined) {\n\t\t\t\t\t\tboardSquares[isVerticalPlacement(player) ? ranks[player] : mI][isVerticalPlacement(player) ? mI : ranks[player]] =\n\t\t\t\t\t\t\tpieceArrays[player][piece];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tfor (const color of colors) replaceRow(color);\n\t\tfor (const decorator of this.wrappingDecorators) decorator.initDecoratorSettings?.();\n\t}\n}\n","import type { DroppingMove } from \"../../../MoveTree/MoveTreeInterface\";\nimport { Board } from \"../../../Board/Board\";\nimport { boardDimension } from \"../../../GameInformation/GameData\";\nimport type { PieceString } from \"../../../GameInformation/GameUnits/PieceString\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { VariantRuleHandler, variantRuleColors } from \"../../VariantRuleInterface\";\nimport { pieceControlConfigSettings } from \"@moveGeneration/PieceControl/PieceControlInterface\";\nimport { FiftyMoveRule } from \"../FENDataDecorators/FiftyMoveRule\";\nimport { isVerticalPlacement } from \"@client/ts/logic/BaseInterfaces\";\nimport { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\n\nconst tag = \"crazyhouse\";\nexport class Crazyhouse extends VariantRule<typeof Board, typeof tag> implements VariantRuleHandler<Board> {\n\tstatic {\n\t\tVariantRule.initVariantRule(Crazyhouse);\n\t}\n\treadonly dependencies = new Map([[FiftyMoveRule, [Infinity]]]);\n\n\tgetDecoratorType() {\n\t\treturn Board;\n\t}\n\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Crazyhouse\",\n\t\t\t\tdescription: \"You can drop pieces from banks\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.extending,\n\t\t\t\tdisplayIcon: chessGlyphIndex.crazyhouse\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\treturn /^Crazyhouse$/i.test(match);\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn \"Crazyhouse\";\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\tgetInsufficientMaterialData() {\n\t\treturn {\n\t\t\tisPartiallyDisabled: false,\n\t\t\tisDisabled: true\n\t\t} as const;\n\t}\n\n\tinitDecoratorSettings() {\n\t\tthis.decorator.data.fenOptions.setTag(\"areBanksEnabled\", [true, true, true, true]);\n\t\tfor (const decorator of this.wrappingDecorators) decorator.initDecoratorSettings?.();\n\t}\n\n\tgetDroppingMoves(piece: PieceString, color = this.decorator.data.sideToMove): DroppingMove[] {\n\t\tif (piece.color !== color) return [];\n\t\tconst royal = this.decorator.data.fenOptions.tag(\"royal\")[color];\n\t\tif (royal && this.decorator.preGeneratedAttacks[color].hoppingPieces[royal[0]][royal[1]]) return [];\n\n\t\tconst isPawn = pieceControlConfigSettings[piece.piece].moveGenerationSettings.isPawn;\n\t\tconst resultingMoveDrops: DroppingMove[] = [];\n\n\t\tconst isRY = isVerticalPlacement(color);\n\t\tconst pawnPromotionRank = this.decorator.variantData.promotionRank === false ? -1 : this.decorator.variantData.promotionRank;\n\t\tconst pawnBaseRank = this.decorator.data.fenOptions.tag(\"pawnBaseRank\");\n\n\t\tfor (let i = 0; i < boardDimension; i++) {\n\t\t\tif (isPawn && isRY && (pawnPromotionRank === i || pawnBaseRank === i)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfor (let j = 0; j < boardDimension; j++) {\n\t\t\t\tif (isPawn && !isRY && (pawnPromotionRank === j || pawnBaseRank === j)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst square = this.decorator.board[i][j];\n\t\t\t\tif (!square.isEmpty()) continue;\n\n\t\t\t\tresultingMoveDrops.push({ piece, endCoordinates: [i, j] });\n\t\t\t}\n\t\t}\n\n\t\tif (this.decorator.isKingInCheck(color)) {\n\t\t\treturn resultingMoveDrops.filter((moveDrop) => {\n\t\t\t\tconst { checks, checkmates } = this.decorator.makeMove([moveDrop], true);\n\t\t\t\treturn !checks[color] || checkmates[color] || this.decorator.isKingInCheck(color);\n\t\t\t});\n\t\t} else {\n\t\t\treturn resultingMoveDrops;\n\t\t}\n\t}\n}\n","import { Board } from \"../../../Board/Board\";\nimport { DroppingMove, getLatestChainedMoves, MoveData } from \"../../../MoveTree/MoveTreeInterface\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { VariantRuleAllowedChecks, variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\nimport { CaptureTheKing } from \"./CaptureTheKing\";\nimport { duckPieceString } from \"../../../GameInformation/GameUnits/PieceString\";\nimport { boardDimension } from \"../../../GameInformation/GameData\";\nimport { Coordinate, nonPlayablePieces } from \"../../../GameInformation/GameUnits/GameUnits\";\nimport { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\n\nconst tag = \"duckChess\";\nexport class DuckChess extends VariantRule<typeof Board, typeof tag> implements VariantRuleHandler<Board> {\n\tstatic {\n\t\tVariantRule.initVariantRule(DuckChess);\n\t}\n\treadonly dependencies = new Map([[CaptureTheKing, []]]);\n\n\tgetDecoratorType() {\n\t\treturn Board;\n\t}\n\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Duck Chess\",\n\t\t\t\tdescription: \"The duck must be moved to an empty square after every move\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.extending,\n\t\t\t\tdisplayIcon: chessGlyphIndex.duck\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\treturn /^DuckChess$/i.test(match);\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn \"DuckChess\";\n\t}\n\n\tisDisabled({ variantDataRules }: VariantRuleAllowedChecks): boolean {\n\t\treturn variantDataRules.taboo;\n\t}\n\n\tgetLegalMoves(i: number, j: number): MoveData[] {\n\t\tconst moves = this.callHandler(\"getLegalMoves\", arguments);\n\t\tconst latestMoves = getLatestChainedMoves(moves);\n\n\t\tconst ducks: Coordinate[] = [],\n\t\t\temptySquares: Coordinate[] = [];\n\t\tfor (let i = 0; i < boardDimension; i++) {\n\t\t\tfor (let j = 0; j < boardDimension; j++) {\n\t\t\t\tconst pieceString = this.decorator.board[i][j];\n\t\t\t\tif (pieceString.isWall() && pieceString.piece === nonPlayablePieces.duck) {\n\t\t\t\t\tducks.push([i, j]);\n\t\t\t\t} else if (pieceString.isEmpty()) {\n\t\t\t\t\temptySquares.push([i, j]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst droppingChainedMoves: DroppingMove[] = [];\n\t\tconst duckChainedMoves: MoveData[] = [];\n\t\tif (ducks.length === 0) {\n\t\t\tfor (const emptySquare of emptySquares) {\n\t\t\t\tdroppingChainedMoves.push({ piece: duckPieceString, endCoordinates: emptySquare });\n\t\t\t}\n\t\t\tdroppingChainedMoves.push({ piece: duckPieceString, endCoordinates: [i, j] });\n\t\t} else {\n\t\t\tfor (const duck of ducks) {\n\t\t\t\tfor (const emptySquare of emptySquares) {\n\t\t\t\t\tduckChainedMoves.push({ startCoordinates: duck, endCoordinates: emptySquare });\n\t\t\t\t}\n\t\t\t\tduckChainedMoves.push({ startCoordinates: duck, endCoordinates: [i, j] });\n\t\t\t}\n\t\t}\n\n\t\tfor (const move of latestMoves) {\n\t\t\tmove.nextChainedMoves = droppingChainedMoves.length > 0 ? droppingChainedMoves : duckChainedMoves;\n\t\t}\n\n\t\treturn moves;\n\t}\n}\n","import { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\nimport { BoardSquares, initializeBoardSquares } from \"../../../../BaseInterfaces\";\nimport { Board } from \"../../../Board/Board\";\nimport { DisplaySettings, unstringifyCoordinate } from \"../../../Board/BoardInterface\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { VariantRuleAllowedChecks, variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\nimport { CaptureTheKing } from \"./CaptureTheKing\";\n\nconst tag = \"fogOfWar\";\nexport class FogOfWar extends VariantRule<typeof Board, typeof tag> implements VariantRuleHandler<Board> {\n\tstatic {\n\t\tVariantRule.initVariantRule(FogOfWar);\n\t}\n\treadonly dependencies = new Map([[CaptureTheKing, []]]);\n\n\tgetDecoratorType() {\n\t\treturn Board;\n\t}\n\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Fog of War\",\n\t\t\t\tdescription: \"Players can only see their pieces and the squares they can legally move to\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.widespread,\n\t\t\t\tdisplayIcon: chessGlyphIndex.fogOfWar\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\treturn /^FogOfWar$/i.test(match);\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn \"FogOfWar\";\n\t}\n\n\tisDisabled({ variantDataRules }: VariantRuleAllowedChecks): boolean {\n\t\treturn variantDataRules.taboo;\n\t}\n\n\tgetSquareVisibility(): BoardSquares<DisplaySettings[]> {\n\t\tconst currentPlayerMoves: BoardSquares<boolean> = initializeBoardSquares(() => false);\n\t\tconst preGeneratedAttacks = this.decorator.preGeneratedAttacks[this.decorator.data.sideToMove];\n\t\tfor (const [piece, moves] of preGeneratedAttacks.pieceMovements) {\n\t\t\tconst startingCoordinate = unstringifyCoordinate(piece);\n\t\t\tcurrentPlayerMoves[startingCoordinate[0]][startingCoordinate[1]] = true;\n\t\t\tfor (const { move } of moves) {\n\t\t\t\tcurrentPlayerMoves[move[0]][move[1]] = true;\n\t\t\t}\n\t\t}\n\t\tfor (const drop of [...preGeneratedAttacks.pieceDrops.pawn, ...preGeneratedAttacks.pieceDrops.piece]) {\n\t\t\tcurrentPlayerMoves[drop.endCoordinates[0]][drop.endCoordinates[1]] = true;\n\t\t}\n\n\t\tconst squareVisibility: BoardSquares<DisplaySettings[]> = this.callHandler(\"getSquareVisibility\", arguments);\n\t\treturn squareVisibility.map((r, i) =>\n\t\t\tr.map((v, j) => {\n\t\t\t\tif (this.decorator.board[i][j].isWall() || currentPlayerMoves[i][j]) {\n\t\t\t\t\treturn v;\n\t\t\t\t} else {\n\t\t\t\t\treturn [...v, DisplaySettings.Fogged];\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n}\n","import type { NumericColor } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport { Board } from \"../../../Board/Board\";\nimport { stringifyCoordinate } from \"../../../Board/BoardInterface\";\nimport type { MoveData } from \"../../../MoveTree/MoveTreeInterface\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\nimport { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\n\nconst tag = \"forcedCapture\";\nexport class ForcedCapture extends VariantRule<typeof Board, typeof tag> implements VariantRuleHandler<Board> {\n\tstatic {\n\t\tVariantRule.initVariantRule(ForcedCapture);\n\t}\n\n\tgetDecoratorType() {\n\t\treturn Board;\n\t}\n\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Forced Capture\",\n\t\t\t\tdescription: \"Capturing is always compulsory\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.widespread,\n\t\t\t\tdisplayIcon: chessGlyphIndex.target\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string) {\n\t\treturn /^ForcedCapture$/i.test(match);\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn \"ForcedCapture\";\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\tgetInsufficientMaterialData() {\n\t\treturn {\n\t\t\tisPartiallyDisabled: true,\n\t\t\tisDisabled: false\n\t\t} as const;\n\t}\n\n\tpregenerateAttacks(): void {\n\t\tconst {\n\t\t\tdata: { sideToMove },\n\t\t\tboard,\n\t\t\tpreGeneratedAttacks\n\t\t} = this.decorator;\n\t\tthis.callHandler(\"pregenerateAttacks\", arguments);\n\n\t\tfor (const piece of this.decorator.getPlayerPieces()[sideToMove]) {\n\t\t\tconst moves = preGeneratedAttacks[sideToMove].pieceMovements.get(stringifyCoordinate(piece));\n\t\t\tif (moves) {\n\t\t\t\tfor (const { move: coordinate } of moves) {\n\t\t\t\t\tif (board[coordinate[0]][coordinate[1]].isPiece()) {\n\t\t\t\t\t\tpreGeneratedAttacks[sideToMove].variantRuleCache.hasCaptures = true;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpreGeneratedAttacks[sideToMove].variantRuleCache.hasCaptures = false;\n\t}\n\n\tisTheMoveLegal(_: NumericColor, moveData: MoveData): boolean {\n\t\tconst isCapturing = this.decorator.data.getCapturedPieces(moveData).length > 0;\n\t\tif (!isCapturing && this.decorator.preGeneratedAttacks[this.decorator.data.sideToMove].variantRuleCache.hasCaptures) return false;\n\t\treturn this.callHandler(\"isTheMoveLegal\", arguments);\n\t}\n}\n","import { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\nimport { shuffleArray } from \"../../../../../utils/ArrayUtils\";\nimport { Board } from \"../../../Board/Board\";\nimport { totalPlayers, VariantType } from \"../../../GameInformation/GameData\";\nimport { verifyNumericColor } from \"../../../GameInformation/GameUnits/GameUnits\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { VariantRuleAllowedChecks, variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\n\nconst tag = \"anonymous\";\nexport class Anonymous extends VariantRule<typeof Board, typeof tag> implements VariantRuleHandler<Board> {\n\tstatic {\n\t\tVariantRule.initVariantRule(Anonymous);\n\t}\n\n\tgetDecoratorType() {\n\t\treturn Board;\n\t}\n\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Anonymous\",\n\t\t\t\tdescription: \"Players' names and ratings are hidden\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.metadata,\n\t\t\t\tdisplayIcon: chessGlyphIndex.userInformation\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\treturn /^Anonymous$/i.test(match);\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn \"Anonymous\";\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\tinitDecoratorSettings() {\n\t\tfor (let i = 0; i < totalPlayers; i++) {\n\t\t\tthis.decorator.gameData.players[i].name = \"Anonymous\";\n\t\t\tthis.decorator.gameData.players[i].elo = undefined;\n\t\t}\n\n\t\tfor (const decorator of this.wrappingDecorators) decorator.initDecoratorSettings?.();\n\t}\n}\n\nconst semiAnonTag = \"semiAnonymous\";\nexport class SemiAnonymous extends VariantRule<typeof Board, typeof semiAnonTag> implements VariantRuleHandler<Board> {\n\tstatic {\n\t\tVariantRule.initVariantRule(SemiAnonymous);\n\t}\n\n\tgetDecoratorType() {\n\t\treturn Board;\n\t}\n\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Semi-Anonymous\",\n\t\t\t\tdescription: \"Players's colors are hidden\",\n\t\t\t\ttag: semiAnonTag,\n\t\t\t\tcolor: variantRuleColors.metadata,\n\t\t\t\tdisplayIcon: chessGlyphIndex.userExtraInformation\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\treturn /^Semi-Anonymous$/i.test(match);\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn \"Semi-Anonymous\";\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\tinitDecoratorSettings() {\n\t\tshuffleArray(this.decorator.gameData.players);\n\t\tfor (const decorator of this.wrappingDecorators) decorator.initDecoratorSettings?.();\n\t}\n}\n\nconst spTag = \"selfPartner\";\nexport class SelfPartner extends VariantRule<typeof Board, typeof spTag> implements VariantRuleHandler<Board> {\n\tstatic {\n\t\tVariantRule.initVariantRule(SelfPartner);\n\t}\n\n\tgetDecoratorType() {\n\t\treturn Board;\n\t}\n\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Self-Partner\",\n\t\t\t\tdescription: \"Both sides of the team were played by one player\",\n\t\t\t\ttag: spTag,\n\t\t\t\tcolor: variantRuleColors.metadata,\n\t\t\t\tdisplayIcon: chessGlyphIndex.selfPartner\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\treturn /^SelfPartner$/i.test(match);\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn \"SelfPartner\";\n\t}\n\n\tisDisabled({ gameType, fenTags }: VariantRuleAllowedChecks): boolean {\n\t\treturn gameType !== VariantType.Teams || fenTags.resigned.value.filter(Boolean).length !== 0;\n\t}\n\n\tinitDecoratorSettings() {\n\t\tfor (const decorator of this.wrappingDecorators) decorator.initDecoratorSettings?.();\n\t\tconst gameType = this.decorator.gameType;\n\t\tconst firstTeamPlayer = gameType.teamSettings.firstTeamColors.indexOf(true),\n\t\t\tsecondTeamPlayer = gameType.teamSettings.secondTeamColors.indexOf(true);\n\t\tif (verifyNumericColor(firstTeamPlayer)) {\n\t\t\tthis.decorator.gameData.players[gameType.getTeammateColor(firstTeamPlayer)].name =\n\t\t\t\tthis.decorator.gameData.players[firstTeamPlayer].name;\n\t\t}\n\t\tif (verifyNumericColor(secondTeamPlayer)) {\n\t\t\tthis.decorator.gameData.players[gameType.getTeammateColor(secondTeamPlayer)].name =\n\t\t\t\tthis.decorator.gameData.players[secondTeamPlayer].name;\n\t\t}\n\t}\n}\n","import { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\nimport type { BoardSquares } from \"../../../../BaseInterfaces\";\nimport { Board } from \"../../../Board/Board\";\nimport { DisplaySettings } from \"../../../Board/BoardInterface\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\n\nconst tag = \"ghostboard\";\nexport class Ghostboard extends VariantRule<typeof Board, typeof tag> implements VariantRuleHandler<Board> {\n\tstatic {\n\t\tVariantRule.initVariantRule(Ghostboard);\n\t}\n\n\tgetDecoratorType() {\n\t\treturn Board;\n\t}\n\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Ghostboard\",\n\t\t\t\tdescription: \"Board, clocks and players are invisible\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.visual,\n\t\t\t\tdisplayIcon: chessGlyphIndex.crossedBinoculars\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\treturn /^Ghostboard$/i.test(match);\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn \"Ghostboard\";\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\tgetSquareVisibility(): BoardSquares<DisplaySettings[]> {\n\t\tconst squareVisibility: BoardSquares<DisplaySettings[]> = this.callHandler(\"getSquareVisibility\", arguments);\n\t\treturn squareVisibility.map((r) => r.map((v) => [...v, DisplaySettings.Ghosted]));\n\t}\n}\n","import { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\nimport { Board } from \"../../../Board/Board\";\nimport type { PieceString } from \"../../../GameInformation/GameUnits/PieceString\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\n\nconst tag = \"paradigmChess30\";\nexport class ParadigmChess30 extends VariantRule<typeof Board, typeof tag> implements VariantRuleHandler<Board> {\n\tstatic {\n\t\tVariantRule.initVariantRule(ParadigmChess30);\n\t}\n\n\tprivate static readonly paradigmRanges = [...Array.from({ length: 14 }, (_, i) => [30 * (i + 1) + 1, 30 + 30 * (i + 1)])];\n\t// 0 = color bound, 1 = minor, 2 = major\n\tprivate static readonly permutations = [\n\t\t[0, 0, 1, 1, 2],\n\t\t[0, 0, 1, 2, 1],\n\t\t[0, 0, 2, 1, 1],\n\t\t[0, 1, 0, 1, 2],\n\t\t[0, 1, 0, 2, 1],\n\t\t[0, 1, 1, 0, 2],\n\t\t[0, 1, 1, 2, 0],\n\t\t[0, 1, 2, 0, 1],\n\t\t[0, 1, 2, 1, 0],\n\t\t[0, 2, 0, 1, 1],\n\t\t[0, 2, 1, 0, 1],\n\t\t[0, 2, 1, 1, 0],\n\t\t[1, 0, 0, 1, 2],\n\t\t[1, 0, 0, 2, 1],\n\t\t[1, 0, 1, 0, 2],\n\t\t[1, 0, 1, 2, 0],\n\t\t[1, 0, 2, 0, 1],\n\t\t[1, 0, 2, 1, 0],\n\t\t[1, 1, 0, 0, 2],\n\t\t[1, 1, 0, 2, 0],\n\t\t[1, 1, 2, 0, 0],\n\t\t[1, 2, 0, 0, 1],\n\t\t[1, 2, 0, 1, 0],\n\t\t[1, 2, 1, 0, 0],\n\t\t[2, 0, 0, 1, 1],\n\t\t[2, 0, 1, 0, 1],\n\t\t[2, 0, 1, 1, 0],\n\t\t[2, 1, 0, 0, 1],\n\t\t[2, 1, 0, 1, 0],\n\t\t[2, 1, 1, 0, 0]\n\t];\n\tprivate static readonly legacy = {\n\t\ttwoPlayerRank: 3,\n\t\ttwoPlayerAdjustment: 30 * 4\n\t} as const;\n\n\treadonly preMethodExecution: boolean = false;\n\tprivate positionId: number;\n\tconstructor(positionId?: unknown) {\n\t\tsuper();\n\t\tif (typeof positionId === \"number\") {\n\t\t\tthis.positionId = positionId;\n\t\t} else {\n\t\t\tthis.positionId = -1;\n\t\t}\n\t}\n\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: this.positionId,\n\t\t\tinformation: {\n\t\t\t\tname: \"Paradigm Chess30\",\n\t\t\t\tdescription:\n\t\t\t\t\t\"Paradigm Chess30: Dragon bishops combine the movement of bishop and xiangqi horse. 30 semi-random starting positions\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.startingPosition,\n\t\t\t\tdisplayIcon: chessGlyphIndex.bishop\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tgetDecoratorType() {\n\t\treturn Board;\n\t}\n\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\tconst matchArray = match.match(/^ParadigmChess30=((\\d{1,3}))$/i);\n\t\tif (matchArray) {\n\t\t\tconst newID = Number(matchArray[1]);\n\t\t\tif (newID < 0 || newID > 450) return false;\n\t\t\tthis.positionId = newID;\n\t\t\treturn true;\n\t\t} else return false;\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn `ParadigmChess30=${this.positionId}`;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\tgetInformation() {\n\t\treturn {\n\t\t\tname: \"Paradigm Chess30\",\n\t\t\tdescription: \"Paradigm Chess30: Dragon bishops combine the movement of bishop and xiangqi horse. 30 semi-random starting positions\",\n\t\t\ttag\n\t\t} as const;\n\t}\n\n\tinitDecoratorSettings() {\n\t\tif (this.positionId === -1) throw new Error(\"Position ID for Paradigm Chess30 is not defined\");\n\t\tlet nr = this.positionId;\n\t\tconst boardSquares = this.decorator.board;\n\t\tconst data = this.decorator.data;\n\n\t\tlet rank = ParadigmChess30.paradigmRanges.findIndex((r) => nr >= r[0] && nr <= r[1]);\n\t\tif (rank === -1) {\n\t\t\trank = ParadigmChess30.legacy.twoPlayerRank;\n\t\t\tnr += ParadigmChess30.legacy.twoPlayerAdjustment;\n\t\t}\n\t\tconst calcNr = nr - ParadigmChess30.paradigmRanges[rank][0];\n\t\tconst ranks = [13 - rank, rank, rank, 13 - rank];\n\t\tconst pieceArrays: PieceString[][] = [[], [], [], []];\n\t\tpieceArrays[0] = boardSquares[ranks[0]].slice(4, 10);\n\t\tpieceArrays[1] = boardSquares.map((row) => row[ranks[1]]).slice(4, 10);\n\t\tpieceArrays[2] = boardSquares[ranks[2]].slice(4, 10);\n\t\tpieceArrays[3] = boardSquares.map((row) => row[ranks[3]]).slice(4, 10);\n\n\t\tconst royalPieces = data.fenOptions.tag(\"royal\"),\n\t\t\tdead = data.fenOptions.tag(\"dead\");\n\t\tconst replaceRow = (player: number): void => {\n\t\t\tconst r = royalPieces[player]?.[player % 2 === 0 ? 1 : 0];\n\t\t\tconst pieceCoordinates = [[5, 8], [4, 9], [r === undefined || r >= 7 ? 6 : 7]];\n\n\t\t\tconst moveCoordinate = (i: number, iter: number) => {\n\t\t\t\tif (dead[player]) return;\n\t\t\t\tconst coordinateA = player % 2 === 0 ? ranks[player] : iter;\n\t\t\t\tconst coordinateB = player % 2 === 0 ? iter : ranks[player];\n\n\t\t\t\tif (pieceArrays[player][pieceCoordinates[i][0] - 4].isWall() || boardSquares[coordinateA][coordinateB].isWall()) return;\n\t\t\t\troyalPieces.some((r) => {\n\t\t\t\t\tif (r && r[0] === coordinateA && r[1] === coordinateB) {\n\t\t\t\t\t\t(r[0] = coordinateB), (r[1] = coordinateA);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\n\t\t\t\tboardSquares[coordinateA][coordinateB] = pieceArrays[player][(pieceCoordinates[i].shift() ?? 4) - 4];\n\t\t\t};\n\n\t\t\tlet c = 0;\n\t\t\tconst rp = r === undefined || r >= 7 ? 7 : 6;\n\t\t\tconst permutations = rp === 6 ? ParadigmChess30.permutations[calcNr].slice().reverse() : ParadigmChess30.permutations[calcNr];\n\t\t\tfor (let i = 4; i < 10; i++) {\n\t\t\t\tif (i === rp) continue;\n\t\t\t\tmoveCoordinate(permutations[c++], i);\n\t\t\t}\n\t\t};\n\n\t\tfor (let i = 0; i < 4; i++) replaceRow(i);\n\t\tfor (const decorator of this.wrappingDecorators) decorator.initDecoratorSettings?.();\n\t}\n}\n","import type { BoardSquares } from \"@client/ts/logic/BaseInterfaces\";\nimport { Board } from \"../../../Board/Board\";\nimport { DisplaySettings } from \"../../../Board/BoardInterface\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { VariantRuleHandler, variantRuleColors } from \"../../VariantRuleInterface\";\nimport { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\n\nconst tag = \"piecesFaceCenter\";\nexport class PiecesFaceCenter extends VariantRule<typeof Board, typeof tag> implements VariantRuleHandler<Board> {\n\tstatic {\n\t\tVariantRule.initVariantRule(PiecesFaceCenter);\n\t}\n\n\tgetDecoratorType() {\n\t\treturn Board;\n\t}\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Pieces Face Center\",\n\t\t\t\tdescription: \"Pieces are rotated to face center\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.visual,\n\t\t\t\tdisplayIcon: chessGlyphIndex.pawn3dLarge\n\t\t\t}\n\t\t} as const;\n\t}\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\treturn /^PiecesFaceCenter$/i.test(match);\n\t}\n\tserializeToParsingForm(): string {\n\t\treturn \"PiecesFaceCenter\";\n\t}\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\tgetSquareVisibility(): BoardSquares<DisplaySettings[]> {\n\t\tconst squareVisibility: BoardSquares<DisplaySettings[]> = this.callHandler(\"getSquareVisibility\", arguments);\n\t\treturn squareVisibility.map((r, i) =>\n\t\t\tr.map((v, j) => {\n\t\t\t\tif (!this.decorator.board[i][j].isPiece()) {\n\t\t\t\t\treturn v;\n\t\t\t\t} else {\n\t\t\t\t\treturn [...v, DisplaySettings.PieceFacesCenter];\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n}\n","import type { Coordinate } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport { Board } from \"../../../Board/Board\";\nimport { stringifyCoordinate } from \"../../../Board/BoardInterface\";\nimport type { PostMoveResults } from \"../../../FENData/FENDataInterface\";\nimport { colors } from \"../../../GameInformation/GameData\";\nimport { DroppingMove, Move, MoveData, verifyRequiredMove, verifyStandardMove } from \"../../../MoveTree/MoveTreeInterface\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { VariantRuleAllowedChecks, VariantRuleHandler, variantRuleColors } from \"../../VariantRuleInterface\";\nimport { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\n\nconst tag = \"seirawanSetup\";\nexport class SeirawanSetup extends VariantRule<typeof Board, typeof tag> implements VariantRuleHandler<Board> {\n\tstatic {\n\t\tVariantRule.initVariantRule(SeirawanSetup);\n\t}\n\n\tgetDecoratorType() {\n\t\treturn Board;\n\t}\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Seirawan Setup\",\n\t\t\t\tdescription:\n\t\t\t\t\t\"When moving a piece for the first time, a piece from the bank can be placed on the vacated square, as part of the move\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.extending,\n\t\t\t\tdisplayIcon: chessGlyphIndex.pieceMeal\n\t\t\t}\n\t\t} as const;\n\t}\n\tmatchesPGNDeclaration(match: string) {\n\t\treturn /^SeirawanSetup$/i.test(match);\n\t}\n\tserializeToParsingForm(): string {\n\t\treturn \"SeirawanSetup\";\n\t}\n\tisDisabled({ variantDataRules }: VariantRuleAllowedChecks): boolean {\n\t\treturn variantDataRules.crazyhouse || variantDataRules.setupChess !== false;\n\t}\n\n\tinitDecoratorSettings() {\n\t\tconst fenOptions = this.decorator.data.fenOptions;\n\t\tconst areBanksEnabled = fenOptions.tag(\"areBanksEnabled\"),\n\t\t\tdead = fenOptions.tag(\"dead\"),\n\t\t\tseirawanDrops = fenOptions.tag(\"seirawanDrops\"),\n\t\t\tbank = fenOptions.tag(\"bank\");\n\t\tfor (const color of colors) {\n\t\t\tif (!dead[color] && seirawanDrops[color].size > 0 && bank[color].size > 0) {\n\t\t\t\tareBanksEnabled[color] = true;\n\t\t\t}\n\t\t}\n\n\t\tfor (const decorator of this.wrappingDecorators) decorator.initDecoratorSettings?.();\n\t}\n\n\tmakeMove(move: Move): PostMoveResults {\n\t\tconst { fenOptions, sideToMove } = this.decorator.data;\n\t\tconst areBanksEnabled = fenOptions.tag(\"areBanksEnabled\"),\n\t\t\tseirawanDrops = fenOptions.tag(\"seirawanDrops\"),\n\t\t\tbank = fenOptions.tag(\"bank\");\n\t\tlet disabledIndex = false;\n\t\tif (verifyStandardMove(move[0])) {\n\t\t\tseirawanDrops[sideToMove].delete(stringifyCoordinate(move[0].startCoordinates));\n\n\t\t\tif (seirawanDrops[sideToMove].size === 0 || bank[sideToMove].size === 0) {\n\t\t\t\tdisabledIndex = true;\n\t\t\t}\n\t\t}\n\n\t\tconst returnValue = this.callHandler(\"makeMove\", arguments);\n\t\tif (disabledIndex) {\n\t\t\tseirawanDrops[sideToMove].clear();\n\t\t\tbank[sideToMove].clear();\n\t\t\tareBanksEnabled[sideToMove] = false;\n\t\t}\n\n\t\treturn returnValue;\n\t}\n\n\tgetLegalMoves(i: number, j: number): MoveData[] {\n\t\tconst { fenOptions, sideToMove } = this.decorator.data;\n\t\tconst seirawanDrops = fenOptions.tag(\"seirawanDrops\"),\n\t\t\tbank = fenOptions.tag(\"bank\");\n\n\t\tconst startCoordinates: Coordinate = [i, j];\n\t\tconst stringifiedCoordinate = stringifyCoordinate(startCoordinates);\n\t\tconst coordinate = [...seirawanDrops[sideToMove]].find((c) => c === stringifiedCoordinate);\n\n\t\tconst validateWithDrops = bank[sideToMove].size !== 0 && coordinate !== undefined;\n\t\tconst moves = this.callHandler(\"getLegalMoves\", arguments);\n\n\t\tconst continuations: DroppingMove[] = [];\n\t\tfor (const piece of bank[sideToMove].keys()) {\n\t\t\tcontinuations.push({ piece, endCoordinates: startCoordinates });\n\t\t}\n\n\t\tif (validateWithDrops && verifyRequiredMove(continuations)) {\n\t\t\tfor (const move of moves) {\n\t\t\t\tmove.nextChainedMoves = continuations;\n\t\t\t}\n\t\t}\n\n\t\treturn moves;\n\t}\n}\n","import type { Tuple } from \"@client/ts/baseTypes\";\nimport type { totalPlayers } from \"@moveGeneration/GameInformation/GameData\";\nimport { Board } from \"../../../Board/Board\";\nimport { compareCoordinates, stringifyCoordinate } from \"../../../Board/BoardInterface\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { VariantRuleAllowedChecks, variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\nimport { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\n\nconst tag = \"selfCheck\";\nexport class SelfCheck extends VariantRule<typeof Board, typeof tag> implements VariantRuleHandler<Board> {\n\tstatic {\n\t\tVariantRule.initVariantRule(SelfCheck);\n\t}\n\n\tgetDecoratorType() {\n\t\treturn Board;\n\t}\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Self-check\",\n\t\t\t\tdescription: \"Self-checks cost lives. Checkmate yourself to earn points\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.minor,\n\t\t\t\tdisplayIcon: chessGlyphIndex.donut\n\t\t\t}\n\t\t} as const;\n\t}\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\treturn /^SelfCheck$/i.test(match);\n\t}\n\tserializeToParsingForm(): string {\n\t\treturn \"SelfCheck\";\n\t}\n\tisDisabled({ variantDataRules }: VariantRuleAllowedChecks): boolean {\n\t\treturn !variantDataRules.nCheck || !variantDataRules.captureTheKing;\n\t}\n\n\tgetCurrentChecks(baseColor = this.decorator.data.sideToMove): Tuple<string[], typeof totalPlayers> {\n\t\tconst {\n\t\t\tdata: { fenOptions, sideToMove },\n\t\t\tpreGeneratedAttacks\n\t\t} = this.decorator;\n\t\tconst baseChecks = this.callHandler(\"getCurrentChecks\", arguments);\n\t\tconst royal = fenOptions.tag(\"royal\")[baseColor];\n\t\tconst newCoordinates: string[] = [];\n\n\t\tif (royal) {\n\t\t\tfor (const [attackingPiece, attackCoordinates] of preGeneratedAttacks[sideToMove].hoppingPieceLines) {\n\t\t\t\tif (compareCoordinates(attackCoordinates, royal)) {\n\t\t\t\t\tnewCoordinates.push(stringifyCoordinate(attackingPiece));\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const [attackingPiece, attackLine] of preGeneratedAttacks[sideToMove].slidingPiecesLines) {\n\t\t\t\tfor (const attackCoordinates of attackLine) {\n\t\t\t\t\tif (compareCoordinates(attackCoordinates, royal)) {\n\t\t\t\t\t\tnewCoordinates.push(stringifyCoordinate(attackingPiece));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tbaseChecks[baseColor] = newCoordinates;\n\t\treturn baseChecks;\n\t}\n}\n","import type { Coordinate, NumericColor } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport { pieceControlConfigSettings } from \"@moveGeneration/PieceControl/PieceControlInterface\";\nimport { createTupleFromCallback, Tuple } from \"../../../../../baseTypes\";\nimport { Board, PlayerBooleanTuple } from \"../../../Board/Board\";\nimport type { PostMoveResults } from \"../../../FENData/FENDataInterface\";\nimport { boardDimension, colors, totalPlayers } from \"../../../GameInformation/GameData\";\nimport { PieceString } from \"../../../GameInformation/GameUnits/PieceString\";\nimport { DroppingMove, InternalMoveSignature, Move, MoveData, verifyDroppingMove } from \"../../../MoveTree/MoveTreeInterface\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\nimport { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\n\nconst tag = \"setupChess\";\nexport class SetupChess extends VariantRule<typeof Board, typeof tag> implements VariantRuleHandler<Board> {\n\tstatic {\n\t\tVariantRule.initVariantRule(SetupChess);\n\t}\n\n\tprivate disabled = false;\n\tprivate setupPoints: number | false;\n\tprivate wereBanksEnabled: PlayerBooleanTuple = [false, false, false, false];\n\tprivate permutationCoordinates: Tuple<Coordinate[], typeof totalPlayers> = [[], [], [], []];\n\tprivate pawnPermutationCoordinates: Tuple<Coordinate[], typeof totalPlayers> = [[], [], [], []];\n\tconstructor(setupPoints?: unknown) {\n\t\tsuper();\n\t\tif (typeof setupPoints === \"number\") {\n\t\t\tthis.setupPoints = setupPoints;\n\t\t} else {\n\t\t\tthis.setupPoints = false;\n\t\t}\n\t}\n\n\tgetDecoratorType() {\n\t\treturn Board;\n\t}\n\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: this.setupPoints,\n\t\t\tinformation: {\n\t\t\t\tname: `Setup Material`,\n\t\t\t\tdescription: `Set up ${this.setupPoints || 0} points before the game starts`,\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.phased,\n\t\t\t\tdisplayIcon: chessGlyphIndex.movePawn\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\tconst matchArray = match.match(/^Setup=(\\d+)$/);\n\t\tif (matchArray) {\n\t\t\tthis.setupPoints = Number(matchArray[1]);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn `Setup=${this.setupPoints || 0}`;\n\t}\n\n\tisDisabled() {\n\t\treturn false;\n\t}\n\n\tgetInsufficientMaterialData() {\n\t\treturn {\n\t\t\tisPartiallyDisabled: false,\n\t\t\tisDisabled: true\n\t\t} as const;\n\t}\n\n\tgetParametrizedOptions() {\n\t\tconst options = new Map<string, number | false>([[\"Off\", false]]);\n\t\tfor (let i = 1; i < 50; i++) options.set(String(i), i);\n\t\tfor (let i = 50; i <= 120; i += 5) options.set(String(i), i);\n\t\treturn options;\n\t}\n\n\tinitDecoratorSettings() {\n\t\tconst fenOptions = this.decorator.data.fenOptions;\n\t\tconst areBanksEnabled = fenOptions.tag(\"areBanksEnabled\"),\n\t\t\tdead = fenOptions.tag(\"dead\"),\n\t\t\tsetupComplete = fenOptions.tag(\"setupComplete\"),\n\t\t\tsetupPoints = fenOptions.tag(\"setupPoints\"),\n\t\t\tpawnBaseRank = fenOptions.tag(\"pawnBaseRank\"),\n\t\t\troyal = fenOptions.tag(\"royal\"),\n\t\t\tcastleKingside = fenOptions.tag(\"castleKingside\"),\n\t\t\tcastleQueenside = fenOptions.tag(\"castleQueenside\");\n\t\tconst areSetupPointsUnset = setupPoints === null;\n\n\t\tconst modifyDisplacements = (i: number, j: number, color: NumericColor): Coordinate => {\n\t\t\tconst baseDisplacements: Coordinate[] = [\n\t\t\t\t[13 - i, j],\n\t\t\t\t[j, i],\n\t\t\t\t[i, j],\n\t\t\t\t[13 - j, i]\n\t\t\t];\n\t\t\treturn baseDisplacements[color];\n\t\t};\n\n\t\tfor (const color of colors) {\n\t\t\tlet bankEnabled = false;\n\t\t\tif (areBanksEnabled[color]) {\n\t\t\t\tthis.wereBanksEnabled[color] = true;\n\t\t\t\tbankEnabled = true;\n\t\t\t} else if (!setupComplete[color]) {\n\t\t\t\tareBanksEnabled[color] = true;\n\t\t\t\tbankEnabled = true;\n\t\t\t}\n\n\t\t\tif (bankEnabled) {\n\t\t\t\tconst files = createTupleFromCallback((_, i) => i, boardDimension);\n\t\t\t\tconst pawnRanks = [pawnBaseRank, pawnBaseRank + 1].filter((rank) => rank >= 0 && rank <= 13);\n\t\t\t\tconst ranks = [pawnBaseRank - 1, ...pawnRanks];\n\t\t\t\tthis.permutationCoordinates[color] = files.flatMap((file) =>\n\t\t\t\t\tranks.map((rank): Coordinate => modifyDisplacements(rank, file, color))\n\t\t\t\t);\n\t\t\t\tthis.pawnPermutationCoordinates[color] = files.flatMap((file) =>\n\t\t\t\t\tpawnRanks.map((rank): Coordinate => modifyDisplacements(rank, file, color))\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (!areSetupPointsUnset && !dead[color]) {\n\t\t\t\tsetupPoints[color] = this.setupPoints === false ? 0 : this.setupPoints;\n\t\t\t}\n\n\t\t\tif (!royal[color]) {\n\t\t\t\tcastleKingside[color] = false;\n\t\t\t\tcastleQueenside[color] = false;\n\t\t\t}\n\t\t}\n\n\t\tfor (const decorator of this.wrappingDecorators) decorator.initDecoratorSettings?.();\n\t}\n\n\tgetLegalMoves(): MoveData[] {\n\t\tif (!this.disabled) return [];\n\t\treturn this.callHandler(\"getLegalMoves\", arguments);\n\t}\n\n\tprivate getCoordinateList(piece: PieceString) {\n\t\treturn pieceControlConfigSettings[piece.piece].moveGenerationSettings.isPawn\n\t\t\t? this.pawnPermutationCoordinates\n\t\t\t: this.permutationCoordinates;\n\t}\n\n\tgetDroppingMoves(piece: PieceString, color = this.decorator.data.sideToMove): DroppingMove[] {\n\t\tif (piece.color !== color) return [];\n\t\tif (!this.disabled && !this.decorator.data.fenOptions.tag(\"setupComplete\")[color]) {\n\t\t\tconst coordinateList = this.getCoordinateList(piece);\n\t\t\tconst resultingMoveDrops: DroppingMove[] = [];\n\n\t\t\tfor (const coordinate of coordinateList[color]) {\n\t\t\t\tif (this.decorator.board[coordinate[0]][coordinate[1]].isEmpty()) {\n\t\t\t\t\tresultingMoveDrops.push({ piece, endCoordinates: coordinate });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn resultingMoveDrops;\n\t\t} else return this.callHandler(\"getDroppingMoves\", arguments);\n\t}\n\n\tmakeMove(move: Move, ignoreNextMoves = false): PostMoveResults {\n\t\tconst fenOptions = this.decorator.data.fenOptions;\n\t\tconst areBanksEnabled = fenOptions.tag(\"areBanksEnabled\"),\n\t\t\tdead = fenOptions.tag(\"dead\"),\n\t\t\tsetupComplete = fenOptions.tag(\"setupComplete\"),\n\t\t\tsetupPoints = fenOptions.tag(\"setupPoints\"),\n\t\t\tbank = fenOptions.tag(\"bank\"),\n\t\t\troyal = fenOptions.tag(\"royal\");\n\t\tconst color = this.decorator.data.sideToMove,\n\t\t\tmoveData = move[0];\n\t\tconst results = this.callHandler(\"makeMove\", arguments);\n\n\t\tif (!this.disabled && !setupComplete[color] && verifyDroppingMove(moveData) && setupPoints) {\n\t\t\tconst pointValue = pieceControlConfigSettings[moveData.piece.piece].points.singlesPoints;\n\t\t\tif (moveData.piece.piece === \"K\") {\n\t\t\t\tbank[color].delete(moveData.piece);\n\t\t\t\troyal[color] = moveData.endCoordinates;\n\t\t\t} else {\n\t\t\t\tsetupPoints[color] -= pointValue;\n\t\t\t}\n\n\t\t\tconst pointsLeft = setupPoints[color];\n\t\t\tfor (const [piece] of bank[color]) {\n\t\t\t\tif (piece.piece !== \"K\" && pointValue > pointsLeft) {\n\t\t\t\t\tbank[color].delete(piece);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (bank[color].size === 0) {\n\t\t\t\tsetupComplete[color] = true;\n\t\t\t} else {\n\t\t\t\tconst coordinateList = this.getCoordinateList(moveData.piece);\n\n\t\t\t\tlet anyDrop = false;\n\t\t\t\tfor (const coordinate of coordinateList[color]) {\n\t\t\t\t\tif (this.decorator.board[coordinate[0]][coordinate[1]].isEmpty()) {\n\t\t\t\t\t\tanyDrop = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!anyDrop) {\n\t\t\t\t\tsetupComplete[color] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (setupComplete.every((v, i) => v || dead[i])) {\n\t\t\tthis.disabled = true;\n\t\t\tfor (const color of colors) {\n\t\t\t\tif (!this.wereBanksEnabled[color]) {\n\t\t\t\t\tareBanksEnabled[color] = false;\n\t\t\t\t\tbank[color].clear();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!this.disabled && !ignoreNextMoves && setupComplete[this.decorator.data.sideToMove]) {\n\t\t\tBoard.prototype.makeMove.call(this.decorator, [{ type: InternalMoveSignature.Pass }]);\n\t\t}\n\n\t\treturn results;\n\t}\n}\n","import type { MoveData } from \"../../../MoveTree/MoveTreeInterface\";\nimport { Board } from \"../../../Board/Board\";\nimport { colors } from \"../../../GameInformation/GameData\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\nimport type { NumericColor } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\n\nexport interface Test {\n\ttaboo: boolean | false;\n}\n\nconst tag = \"taboo\";\nexport class Taboo extends VariantRule<typeof Board, typeof tag> implements VariantRuleHandler<Board> {\n\tstatic {\n\t\tVariantRule.initVariantRule(Taboo);\n\t}\n\n\tgetDecoratorType() {\n\t\treturn Board;\n\t}\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Taboo\",\n\t\t\t\tdescription: \"Giving check is forbidden\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.widespread,\n\t\t\t\tdisplayIcon: chessGlyphIndex.equal\n\t\t\t}\n\t\t} as const;\n\t}\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\treturn /^Taboo$/i.test(match);\n\t}\n\tserializeToParsingForm(): string {\n\t\treturn \"Taboo\";\n\t}\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\tisSetupComplex(): boolean {\n\t\treturn true;\n\t}\n\n\tisTheMoveLegal(_: NumericColor, moveData: MoveData): boolean {\n\t\tconst initialDead = this.decorator.data.fenOptions.tag(\"dead\").slice();\n\t\tconst snapshot = this.decorator.createSnapshot();\n\n\t\ttry {\n\t\t\tthis.decorator.makeMove([moveData], true);\n\t\t\tconst newDead = this.decorator.data.fenOptions.tag(\"dead\").slice();\n\n\t\t\tfor (const color of colors) {\n\t\t\t\tif ((!initialDead[color] && newDead[color]) || this.decorator.isKingInCheck(color)) return false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t} finally {\n\t\t\tthis.decorator.loadSnapshot(snapshot);\n\t\t}\n\t}\n}\n","import { createTuple, Tuple } from \"@client/ts/baseTypes\";\nimport { BoardSquares, initializeBoardSquares } from \"@client/ts/logic/BaseInterfaces\";\nimport type { Board } from \"@moveGeneration/Board/Board\";\nimport { stringifyCoordinate } from \"@moveGeneration/Board/BoardInterface\";\nimport type { FENData } from \"@moveGeneration/FENData/FENData\";\nimport { totalPlayers, colors, VariantType, boardDimension } from \"@moveGeneration/GameInformation/GameData\";\nimport type { NumericColor, Coordinate } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport { pawnPieceString, PieceString } from \"@moveGeneration/GameInformation/GameUnits/PieceString\";\nimport {\n\tInternalMoveSignature,\n\tMoveComponent,\n\tSpecialMove,\n\tverifyInternalMove,\n\tverifyStandardMove\n} from \"@moveGeneration/MoveTree/MoveTreeInterface\";\nimport type { PieceControlConfigurator } from \"@moveGeneration/PieceControl/PieceControlBuilder\";\nimport { pieceControlConfigSettings, PieceLetter } from \"@moveGeneration/PieceControl/PieceControlInterface\";\nimport type { VariantDataRules } from \"@moveGeneration/VariantRules/VariantRuleInterface\";\nimport { createBotAlgorithm, ZombieMoveGenerationAlgorithm, ZombieType } from \"../BotInterface\";\nimport { randomlyPickNextChainedMoves } from \"./RandomEvaluation\";\n\nconst onlyUnique = <T>(value: T, index: number, self: T[]) => self.indexOf(value) === index;\nconst stringifyKey = (i: number, j: number, color?: NumericColor) => `${i},${j}/${color ?? \"\"}`;\nfunction getPieceInFront(i: number, j: number, color: NumericColor): [number, number] {\n\tswitch (color) {\n\t\tcase 0:\n\t\t\treturn [i - 1, j];\n\t\tcase 1:\n\t\t\treturn [i, j + 1];\n\t\tcase 2:\n\t\t\treturn [i + 1, j];\n\t\tcase 3:\n\t\t\treturn [i, j - 1];\n\t}\n}\n\ninterface ReadonlyFlattenedBoardSettings {\n\tvariantData: VariantDataRules;\n\tpromotionRank: Tuple<number, typeof totalPlayers>;\n\tisFFA: boolean;\n\tisTeams: boolean;\n\tzombieType: Tuple<ZombieType, typeof totalPlayers>;\n\tdefaultSideToMove: NumericColor;\n}\n\ninterface SquareCoverage {\n\tattackers: Coordinate[];\n\tdefenders: Coordinate[];\n}\n\ninterface FlattenedBoardSettings extends Readonly<ReadonlyFlattenedBoardSettings> {\n\tboard: Board;\n\tboardSquares: PieceString[][];\n\tdata: FENData;\n\tremainingReal: number;\n\tremaining: Array<number | false>;\n\tcoverage: BoardSquares<Coordinate[]>;\n\tpieces: Coordinate[][];\n\troyal: Tuple<Coordinate | null, typeof totalPlayers>;\n\tcontrols: Record<PieceLetter, () => PieceControlConfigurator>;\n\tcoverageCache: Map<string, SquareCoverage>;\n\tpieceValueCache: Map<string, number>;\n\thangingCache: Map<string, number>;\n}\n\nfunction createComfuterAlgorithm(): ZombieMoveGenerationAlgorithm {\n\tlet boardAccessors: FlattenedBoardSettings;\n\tfunction augmentBoardAccessorsFromBoard(board: Board): Omit<FlattenedBoardSettings, keyof ReadonlyFlattenedBoardSettings> {\n\t\treturn {\n\t\t\tboard,\n\t\t\tboardSquares: board.board,\n\t\t\tdata: board.data,\n\t\t\tremainingReal: board.data.getRealPlayers(),\n\t\t\tremaining: board.data.fenOptions\n\t\t\t\t.tag(\"dead\")\n\t\t\t\t.map((v, i) => (v ? false : i))\n\t\t\t\t.filter((v) => v === false),\n\t\t\tcoverage: initializeBoardSquares(() => []),\n\t\t\tpieces: board.getPlayerPieces(),\n\t\t\tcontrols: board.controls,\n\t\t\troyal: board.data.fenOptions.tag(\"royal\"),\n\t\t\thangingCache: new Map(),\n\t\t\tcoverageCache: new Map(),\n\t\t\tpieceValueCache: new Map()\n\t\t};\n\t}\n\n\tfunction initializeBoardAccessorsFromBoard(board: Board) {\n\t\tconst promotionRank: Tuple<number, typeof totalPlayers> =\n\t\t\tboard.variantData.promotionRank !== false\n\t\t\t\t? [\n\t\t\t\t\t\tboardDimension - board.variantData.promotionRank,\n\t\t\t\t\t\tboard.variantData.promotionRank - 1,\n\t\t\t\t\t\tboard.variantData.promotionRank - 1,\n\t\t\t\t\t\tboardDimension - board.variantData.promotionRank\n\t\t\t\t  ]\n\t\t\t\t: createTuple(99, totalPlayers);\n\t\tboardAccessors = {\n\t\t\t...augmentBoardAccessorsFromBoard(board),\n\t\t\tvariantData: board.variantData,\n\t\t\tpromotionRank,\n\t\t\tisFFA: board.gameType.isFFA(),\n\t\t\tisTeams: !board.gameType.isFFA(),\n\t\t\tzombieType: board.data.fenOptions.tag(\"zombieType\"),\n\t\t\tdefaultSideToMove: board.data.sideToMove\n\t\t};\n\t}\n\n\tfunction getDistanceFromPromotion(color: NumericColor, i: number, j: number): number {\n\t\tif (i === -1) return 99;\n\t\treturn Math.abs(boardAccessors.promotionRank[color] - (color & 1 ? i : j)) || 99;\n\t}\n\n\tfunction getDistanceFromKing(i: number, j: number, color: NumericColor): number {\n\t\tif (i === -1) return 999;\n\t\tconst royalPiece = boardAccessors.royal[color];\n\t\tif (!royalPiece) return 999;\n\t\tconst x = Math.abs(i - royalPiece[0]),\n\t\t\ty = Math.abs(j - royalPiece[1]);\n\t\tif (x === 0 && y === 0) return 999;\n\t\treturn Math.max(x, y);\n\t}\n\n\tfunction inspectCoverage(): void {\n\t\tconst { board, boardSquares, pieces, coverage } = boardAccessors;\n\n\t\tfor (const color of colors) {\n\t\t\tfor (const coordinate of pieces[color]) {\n\t\t\t\tconst pc = boardSquares[coordinate[0]][coordinate[1]];\n\t\t\t\tif (!pc.isPiece()) continue;\n\t\t\t\tconst destinations = board.preGeneratedAttacks[color].pieceMovements.get(stringifyCoordinate(coordinate));\n\t\t\t\tif (!destinations) continue;\n\n\t\t\t\tfor (const dest of destinations) {\n\t\t\t\t\tcoverage[dest.move[0]][dest.move[1]].push(coordinate);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction getCoverage(i: number, j: number, color: NumericColor): SquareCoverage {\n\t\tconst { coverageCache, coverage, boardSquares, data, board, zombieType, defaultSideToMove } = boardAccessors;\n\t\tconst resigned = data.fenOptions.tag(\"resigned\");\n\n\t\tconst key = stringifyKey(i, j, color);\n\t\tif (coverageCache.has(key)) return coverageCache.get(key)!;\n\t\tconst attackers: Coordinate[] = [],\n\t\t\tdefenders: Coordinate[] = [];\n\t\tconst cvg = coverage[i][j];\n\t\tif (cvg.length) {\n\t\t\tfor (const pieceC of cvg) {\n\t\t\t\tconst piece = boardSquares[pieceC[0]][pieceC[1]];\n\t\t\t\tif (!piece.isPiece()) continue;\n\t\t\t\tconst pieceColor = piece.color;\n\t\t\t\tif (resigned[pieceColor] && zombieType[pieceColor] === ZombieType.Rando) continue;\n\t\t\t\tif (board.gameType.isSameTeam(pieceColor, defaultSideToMove)) {\n\t\t\t\t\tdefenders.push(pieceC);\n\t\t\t\t} else {\n\t\t\t\t\tattackers.push(pieceC);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst cache = color === defaultSideToMove ? { attackers, defenders } : { defenders: attackers, attackers: defenders };\n\t\tcoverageCache.set(key, cache);\n\t\treturn cache;\n\t}\n\n\tfunction getPieceValue(i: number, j: number): number {\n\t\tconst { boardSquares, pieceValueCache, isFFA, isTeams, remainingReal, royal, board } = boardAccessors;\n\n\t\tconst coordinates: [number, number] = [i, j];\n\t\tconst pieceString = boardSquares[i][j];\n\t\tif (!pieceString.isPiece()) return 0;\n\t\tconst piece = pieceString.piece;\n\t\tconst key = `${coordinates[0]},${coordinates[1]}/${pieceString.color}`;\n\t\tif (pieceValueCache.has(key)) return pieceValueCache.get(key)!;\n\n\t\tlet value = 0;\n\t\tconst controlSetting = pieceControlConfigSettings[piece];\n\t\tif (!controlSetting.moveGenerationSettings.isPawn) {\n\t\t\tvalue = isTeams ? controlSetting.points.botTeamsValue : controlSetting.points.botFFAValue;\n\t\t} else {\n\t\t\tvalue = isFFA ? 1 : 0.4;\n\t\t\tconst promotionDistance = getDistanceFromPromotion(pieceString.color, ...coordinates);\n\t\t\tvalue += (2 / (getDistanceFromKing(...coordinates, pieceString.color) * 3)) * (remainingReal / 4);\n\t\t\tvalue += 3 / (promotionDistance * 3);\n\n\t\t\tif (promotionDistance < 2) {\n\t\t\t\tconst inFront = getPieceInFront(...coordinates, pieceString.color);\n\t\t\t\tconst { attackers, defenders } = getCoverage(...inFront, pieceString.color);\n\t\t\t\tif (!defenders.length) {\n\t\t\t\t\tvalue += 3 / promotionDistance;\n\t\t\t\t}\n\t\t\t\tif (attackers.length < defenders.length) {\n\t\t\t\t\tvalue += 2 / promotionDistance;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet isRoyal = false;\n\t\tfor (const royalPiece of royal) {\n\t\t\tif (!royalPiece) continue;\n\t\t\tif (royalPiece[0] === coordinates[0] && royalPiece[1] === coordinates[1]) {\n\t\t\t\tisRoyal = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!isRoyal && piece !== pawnPieceString.piece) {\n\t\t\tfor (const color of colors) {\n\t\t\t\tif (!board.gameType.isSameTeam(color, pieceString.color)) {\n\t\t\t\t\tlet d = getDistanceFromKing(...coordinates, color);\n\t\t\t\t\tif (d < 3) d = 2;\n\t\t\t\t\tvalue += (5 - remainingReal) / d;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpieceValueCache.set(key, value);\n\t\treturn value;\n\t}\n\n\tfunction getCoordinationEval(player: NumericColor): number {\n\t\tconst { pieces, remainingReal } = boardAccessors;\n\n\t\tlet e = 0;\n\t\tfor (const piece of pieces[player]) {\n\t\t\tconst { defenders } = getCoverage(piece[0], piece[1], player);\n\t\t\tfor (const d of defenders) e += 30 / (getPieceValue(d[0], d[1]) * 2);\n\t\t}\n\t\tif (remainingReal === 2) {\n\t\t\te *= 0.4;\n\t\t} else if (remainingReal === 3) {\n\t\t\te *= 0.7;\n\t\t}\n\n\t\treturn e / 55;\n\t}\n\n\tfunction firstPlayerMovesBefore(p1: NumericColor, p2: NumericColor): boolean {\n\t\tconst { data, defaultSideToMove } = boardAccessors;\n\n\t\tlet next = data.nextTurn();\n\t\tdo {\n\t\t\tif (p1 === next) return true;\n\t\t\tif (p2 === next) return false;\n\t\t\tnext = data.nextTurn(next);\n\t\t} while (next !== defaultSideToMove);\n\n\t\treturn true;\n\t}\n\n\tfunction canRespondDirectlyToThreat(player: NumericColor, attackers: Coordinate[]): boolean {\n\t\tconst { boardSquares } = boardAccessors;\n\n\t\tlet attackingPlayers: NumericColor[] = [];\n\t\tfor (const pc of attackers) {\n\t\t\tconst square = boardSquares[pc[0]][pc[1]];\n\t\t\tif (!square.isPiece()) continue;\n\t\t\tattackingPlayers.push(square.color);\n\t\t}\n\t\tattackingPlayers = attackingPlayers.filter(onlyUnique);\n\n\t\tfor (const a of attackingPlayers) {\n\t\t\tif (firstPlayerMovesBefore(player, a)) return false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction hanging(i: number, j: number, pieceValue = getPieceValue(i, j)): number {\n\t\tconst { hangingCache, boardSquares, remaining, data } = boardAccessors;\n\n\t\tconst key = stringifyKey(i, j);\n\t\tif (hangingCache.has(key)) return hangingCache.get(key)!;\n\t\tconst square = boardSquares[i][j];\n\t\tif (!square.isPiece()) return 0;\n\t\tconst { attackers, defenders } = getCoverage(i, j, square.color);\n\n\t\tlet attackerValue = 999;\n\t\tfor (const pc of attackers) {\n\t\t\tattackerValue = Math.min(attackerValue, getPieceValue(pc[0], pc[1]));\n\t\t}\n\t\tlet attackedFromLeft = false;\n\t\tconst nextTurn = data.nextTurn(square.color);\n\t\tif (remaining.length > 2) {\n\t\t\tfor (const pc of attackers) {\n\t\t\t\tif (boardSquares[pc[0]][pc[1]].color === nextTurn) {\n\t\t\t\t\tattackedFromLeft = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst threatened = pieceValue - attackerValue;\n\t\tlet pawnDefends: Coordinate | undefined;\n\t\tfor (const pc of defenders) {\n\t\t\tif (boardSquares[pc[0]][pc[1]].piece === pawnPieceString.piece) {\n\t\t\t\tpawnDefends = pc;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tlet h = 0;\n\t\tconst underDefended = attackers.length - defenders.length > 0;\n\t\tif (underDefended) h = pieceValue;\n\t\tif (underDefended && pawnDefends) h = 0;\n\t\tif (pawnDefends && attackers.length - defenders.length > 1) {\n\t\t\th = getPieceValue(pawnDefends[0], pawnDefends[1]);\n\t\t}\n\t\tif (!h && threatened > 0) h = threatened;\n\t\tif (!h && attackedFromLeft && threatened >= -2) {\n\t\t\th = -threatened;\n\t\t}\n\t\tif (h && canRespondDirectlyToThreat(square.color, attackers)) {\n\t\t\th /= 6;\n\t\t}\n\n\t\thangingCache.set(key, h);\n\t\treturn h;\n\t}\n\n\tfunction getMobilityEval(player: NumericColor): number {\n\t\tconst { pieces, boardSquares, isTeams, royal, defaultSideToMove, board } = boardAccessors;\n\n\t\tlet e = 0;\n\t\tfor (const coordinate of pieces[player]) {\n\t\t\tif (hanging(coordinate[0], coordinate[1]) > 2) continue;\n\t\t\tconst piece = boardSquares[coordinate[0]][coordinate[1]];\n\t\t\tif (!piece.isPiece()) continue;\n\n\t\t\tlet destinations = board.preGeneratedAttacks[player].pieceMovements.get(stringifyCoordinate(coordinate))?.length ?? 0;\n\t\t\tif (/[QDAEHΔ]/.test(piece.piece)) destinations /= isTeams ? 2 : 3;\n\t\t\tif (/[RBV]]/.test(piece.piece)) destinations /= isTeams ? 1.5 : 2;\n\t\t\te += destinations / (isTeams ? 10 : board.gameType.type === VariantType.Solo ? 21 : 16);\n\n\t\t\tlet isRoyal = false;\n\t\t\tfor (const royalPiece of royal) {\n\t\t\t\tif (!royalPiece) continue;\n\t\t\t\tif (royalPiece[0] === coordinate[0] && royalPiece[1] === coordinate[1]) {\n\t\t\t\t\tisRoyal = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!isRoyal && !isTeams && piece.piece === pawnPieceString.piece) {\n\t\t\t\tconst blockedBy = getPieceInFront(coordinate[0], coordinate[1], player);\n\t\t\t\tconst bSqr = boardSquares[blockedBy[0]][blockedBy[1]];\n\t\t\t\tif (bSqr.isEmpty()) continue;\n\n\t\t\t\tif (!bSqr.isPiece()) {\n\t\t\t\t\te -= 2;\n\t\t\t\t} else if (board.gameType.isSameTeam(bSqr.color, defaultSideToMove)) {\n\t\t\t\t\te -= 0.5;\n\t\t\t\t} else if (bSqr.piece === pawnPieceString.piece) {\n\t\t\t\t\te -= 1.8;\n\t\t\t\t} else if (player === bSqr.color) {\n\t\t\t\t\te -= 0.5;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn e;\n\t}\n\n\tfunction getDistFromHill(player: NumericColor): number {\n\t\tconst royalPiece = boardAccessors.royal[player];\n\t\tif (!royalPiece) return 999;\n\t\tconst x = Math.abs(6.5 - royalPiece[0]);\n\t\tconst y = Math.abs(6.5 - royalPiece[1]);\n\t\tconst d = (x + y) / 2 + Math.max(x, y) / 2;\n\t\tif (!d) return 999;\n\t\treturn d;\n\t}\n\n\tfunction getMatesEval(): number {\n\t\tconst { board, variantData, data, pieces, remainingReal } = boardAccessors;\n\t\tboard.data.sideToMove = board.data.previousTurn();\n\t\tconst { checkmates, stalemates, checks } = board.getCheckmatesAndStalemates();\n\t\tboard.data.sideToMove = board.data.nextTurn();\n\t\tlet e = 0;\n\t\tfor (const color of colors) {\n\t\t\tif (checkmates[color]) {\n\t\t\t\te += 500;\n\t\t\t} else if (stalemates[color]) e -= 300;\n\t\t}\n\n\t\tconst checksLength = checks.filter(Boolean).length;\n\t\tif (checksLength === 3) {\n\t\t\te += 10;\n\t\t} else if (checksLength === 2) {\n\t\t\te += 1;\n\t\t} else if (checksLength === 1) {\n\t\t\tconst prev = data.previousTurn();\n\t\t\tif (remainingReal > 2 && checks[prev]) {\n\t\t\t\te += 1.2;\n\t\t\t} else if (remainingReal === 2) {\n\t\t\t\te += 0.1;\n\t\t\t} else {\n\t\t\t\te += 0.4;\n\t\t\t}\n\t\t}\n\n\t\tif (checksLength && variantData.nCheck) {\n\t\t\tfor (const color of colors) {\n\t\t\t\tconst lives = data.fenOptions.tag(\"lives\")[color];\n\t\t\t\tif (lives && checks[color]) e += 4 / (lives + 1);\n\t\t\t}\n\t\t\te += 0.3;\n\t\t}\n\t\tif (variantData.barePieceRule) {\n\t\t\tfor (const color of colors) {\n\t\t\t\tif (pieces[color].length <= 1) e += 300;\n\t\t\t}\n\t\t}\n\n\t\treturn e;\n\t}\n\n\tfunction getMaterialEval(): { myMaterial: number; oppMaterial: number } {\n\t\tconst { board, pieces, isTeams, remainingReal, defaultSideToMove, variantData } = boardAccessors;\n\t\tlet myMaterial = 0,\n\t\t\toppMaterial = 0;\n\n\t\tfor (const color of colors) {\n\t\t\tif (board.gameType.isSameTeam(color, defaultSideToMove)) {\n\t\t\t\tfor (const pc of pieces[color]) {\n\t\t\t\t\tlet pieceValue = getPieceValue(pc[0], pc[1]);\n\t\t\t\t\tpieceValue -= hanging(pc[0], pc[1]);\n\t\t\t\t\tmyMaterial += pieceValue;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (const pc of pieces[color]) {\n\t\t\t\t\tlet pcVal = getPieceValue(pc[0], pc[1]);\n\t\t\t\t\tif (!isTeams && remainingReal === 4 && Math.abs(color - defaultSideToMove) === 2 && !variantData.giveaway) {\n\t\t\t\t\t\tpcVal /= board.gameType.type === VariantType.Solo ? 2 : 3;\n\t\t\t\t\t}\n\t\t\t\t\tpcVal -= hanging(pc[0], pc[1], pcVal);\n\t\t\t\t\toppMaterial -= pcVal;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!isTeams && remainingReal === 4) {\n\t\t\toppMaterial /= 1.4;\n\t\t\tmyMaterial *= 1.2;\n\t\t}\n\t\tif (!isTeams && remainingReal === 3) {\n\t\t\toppMaterial /= 1.25;\n\t\t\tmyMaterial *= 1.1;\n\t\t}\n\t\tmyMaterial *= 2;\n\t\toppMaterial *= 2;\n\n\t\treturn { myMaterial, oppMaterial };\n\t}\n\n\tfunction getPinsEval(): { pinnedEval: number; discovsEval: number } {\n\t\tconst { board, royal, pieces, defaultSideToMove, remainingReal } = boardAccessors;\n\n\t\tlet pinnedEval = 0,\n\t\t\tdiscovsEval = 0;\n\t\tfor (const i of colors) {\n\t\t\tconst discovered: Coordinate[] = [];\n\t\t\tconst pins: Coordinate[] = [];\n\n\t\t\tfor (const piece of pieces[i]) {\n\t\t\t\tconst royalPiece = royal[i];\n\t\t\t\tif (!royalPiece) break;\n\t\t\t\tif (royalPiece[0] === piece[0] && royalPiece[1] === piece[1]) continue;\n\t\t\t\tconst [royalX, royalY] = royalPiece;\n\t\t\t\tconst pieceX = piece[0],\n\t\t\t\t\tpieceY = piece[1];\n\n\t\t\t\tfor (const [attackPiece, attackLine] of board.preGeneratedAttacks[i].slidingPiecesRayTracing) {\n\t\t\t\t\tlet isPieceUnderAttack = false,\n\t\t\t\t\t\tisRoyalUnderAttack = false;\n\t\t\t\t\tfor (const [attackedX, attackedY] of attackLine) {\n\t\t\t\t\t\tif (!isPieceUnderAttack && attackedX === pieceX && attackedY === pieceY) isPieceUnderAttack = true;\n\t\t\t\t\t\tif (!isRoyalUnderAttack && attackedX === royalX && attackedY === royalY) isRoyalUnderAttack = true;\n\n\t\t\t\t\t\tif (isPieceUnderAttack && isRoyalUnderAttack) {\n\t\t\t\t\t\t\tpins.push(piece);\n\t\t\t\t\t\t} else if (isRoyalUnderAttack && !isPieceUnderAttack) {\n\t\t\t\t\t\t\tdiscovered.push([attackPiece[0], attackPiece[1]]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const coordinate of pins) {\n\t\t\t\tif (hanging(coordinate[0], coordinate[1]) > 2) continue;\n\t\t\t\tconst pieceValue = Math.sqrt(getPieceValue(coordinate[0], coordinate[1]));\n\t\t\t\tif (!board.gameType.isSameTeam(i, defaultSideToMove)) {\n\t\t\t\t\tpinnedEval += pieceValue / 2;\n\t\t\t\t} else {\n\t\t\t\t\tpinnedEval -= pieceValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const coordinate of discovered) {\n\t\t\t\tif (hanging(coordinate[0], coordinate[1]) > 2) continue;\n\t\t\t\tconst pieceValue = Math.sqrt(getPieceValue(coordinate[0], coordinate[1]));\n\t\t\t\tif (board.gameType.isSameTeam(i, defaultSideToMove)) {\n\t\t\t\t\tdiscovsEval += pieceValue / 2;\n\t\t\t\t} else {\n\t\t\t\t\tdiscovsEval -= pieceValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpinnedEval *= remainingReal / 6;\n\t\tdiscovsEval *= remainingReal / 6;\n\t\tif (discovsEval < 0) discovsEval /= 10;\n\n\t\treturn { pinnedEval, discovsEval };\n\t}\n\n\tfunction getKingSafetyEval(player: NumericColor): { kingEval: number; checkableEval: number; exposedEval: number } {\n\t\tconst { board, royal, boardSquares, remainingReal, data, variantData, defaultSideToMove } = boardAccessors;\n\t\tlet kingEval = 0,\n\t\t\tcheckableEval = 0,\n\t\t\texposedEval = 0;\n\t\tif (variantData.giveaway) return { kingEval, checkableEval, exposedEval };\n\t\tconst baseReferences: Coordinate[][][] = initializeBoardSquares(() => []);\n\n\t\tfor (const [coordinate, attack] of board.preGeneratedAttacks[player].hoppingPieceLines) {\n\t\t\tbaseReferences[attack[0]][attack[1]].push([coordinate[0], coordinate[1]]);\n\t\t}\n\t\tfor (const [coordinate, line] of board.preGeneratedAttacks[player].slidingPiecesLines) {\n\t\t\tfor (const attack of line) {\n\t\t\t\tbaseReferences[attack[0]][attack[1]].push([coordinate[0], coordinate[1]]);\n\t\t\t}\n\t\t}\n\n\t\tconst royalPiece = royal[player];\n\t\tconst squareAccessDefinitions = new Set<string>();\n\t\tif (royalPiece) {\n\t\t\tconst isChecked = Boolean(\n\t\t\t\tboard.preGeneratedAttacks[player].slidingPieces[royalPiece[0]][royalPiece[1]] ||\n\t\t\t\t\tboard.preGeneratedAttacks[player].hoppingPieces[royalPiece[0]][royalPiece[1]]\n\t\t\t);\n\t\t\tfor (let i = 0; i < boardDimension; i++) {\n\t\t\t\tfor (let j = 0; j < boardDimension; j++) {\n\t\t\t\t\tif (isChecked) {\n\t\t\t\t\t\tlet checkableSq = 0;\n\t\t\t\t\t\tif (remainingReal === 2) {\n\t\t\t\t\t\t\tcheckableSq -= 0.8;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst players = baseReferences[i][j].map((coord) => {\n\t\t\t\t\t\t\t\tconst piece = boardSquares[coord[0]][coord[1]];\n\t\t\t\t\t\t\t\tif (!piece.isPiece()) return player;\n\t\t\t\t\t\t\t\treturn piece.color;\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tconst prev = data.nextTurn(player);\n\t\t\t\t\t\t\tconst next = data.previousTurn(player);\n\t\t\t\t\t\t\tfor (const player of players) {\n\t\t\t\t\t\t\t\tif (remainingReal === 3) {\n\t\t\t\t\t\t\t\t\tcheckableSq -= player === next ? 3 : 2;\n\t\t\t\t\t\t\t\t} else if (remainingReal === 4) {\n\t\t\t\t\t\t\t\t\tcheckableSq -= player === next ? 5 : player === prev ? 2 : 3;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst { defenders } = getCoverage(i, j, player);\n\t\t\t\t\t\tif (defenders.length) checkableSq += 2.5;\n\t\t\t\t\t\tif (checkableSq > 0) checkableSq = 0;\n\n\t\t\t\t\t\tconst accessKey = stringifyKey(i, j);\n\t\t\t\t\t\tif (!squareAccessDefinitions.has(accessKey)) {\n\t\t\t\t\t\t\texposedEval -= 0.123;\n\t\t\t\t\t\t\tsquareAccessDefinitions.add(accessKey);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcheckableEval += checkableSq;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst ki = royalPiece[0],\n\t\t\t\tkj = royalPiece[1];\n\t\t\tfor (let d = 1; d < 3; d++) {\n\t\t\t\tconst x = [ki, ki + d, ki - d];\n\t\t\t\tconst y = [kj, kj + d, kj - d];\n\t\t\t\tfor (const i of x) {\n\t\t\t\t\tfor (const j of y) {\n\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n\t\t\t\t\t\tif (!boardSquares[i]?.[j]) continue;\n\t\t\t\t\t\tif (i === ki && j === kj) continue;\n\t\t\t\t\t\tconst pieceString = boardSquares[i][j];\n\t\t\t\t\t\tif (!pieceString.isPiece()) continue;\n\t\t\t\t\t\tif (board.gameType.isSameTeam(pieceString.color, player)) {\n\t\t\t\t\t\t\tkingEval += pieceString.piece === pawnPieceString.piece ? 2 : 1;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tkingEval -= getPieceValue(i, j);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (let k = -1; k < 2; k++) {\n\t\t\t\tfor (let h = -1; h < 2; h++) {\n\t\t\t\t\tconst i = ki + k;\n\t\t\t\t\tconst j = kj + h;\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n\t\t\t\t\tif (!boardSquares[i]?.[j]) continue;\n\t\t\t\t\tconst { attackers, defenders } = getCoverage(i, j, player);\n\t\t\t\t\tkingEval -= 2 * attackers.length;\n\t\t\t\t\tkingEval += 1 * defenders.length;\n\t\t\t\t}\n\t\t\t}\n\t\t\tkingEval /= 10;\n\t\t}\n\n\t\tif (variantData.nCheck && !board.gameType.isSameTeam(board.data.sideToMove, defaultSideToMove)) {\n\t\t\tconst lives = data.fenOptions.tag(\"lives\")[board.data.sideToMove];\n\t\t\tswitch (lives) {\n\t\t\t\tcase null:\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tcheckableEval *= 1.5;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\tcheckableEval *= 3;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tcheckableEval *= 1.3;\n\t\t\t}\n\t\t}\n\n\t\treturn { kingEval, checkableEval, exposedEval };\n\t}\n\n\tfunction isZombieEatZombie(move: MoveComponent): boolean {\n\t\tif (!verifyStandardMove(move)) return false;\n\t\tconst { data, defaultSideToMove, boardSquares, variantData } = boardAccessors;\n\t\tif (variantData.giveaway) return false;\n\t\tconst resigned = data.fenOptions.tag(\"resigned\");\n\n\t\tif (!resigned[defaultSideToMove]) return false;\n\t\tconst targetPiece = boardSquares[move.endCoordinates[0]][move.endCoordinates[1]];\n\t\tif (!targetPiece.isPiece()) return false;\n\t\tif (resigned[targetPiece.color]) return true;\n\t\treturn false;\n\t}\n\n\tfunction getEval(move: MoveComponent): number {\n\t\tlet totalEval = 0;\n\t\tconst { board, data, defaultSideToMove, variantData, royal, isTeams } = boardAccessors;\n\t\tconst snapshot = board.createSnapshot();\n\n\t\tconst isKingsideCastle = data.fenOptions.isKingsideCastlingAvailable(data.sideToMove, board),\n\t\t\tisQueensideCastle = data.fenOptions.isQueensideCastlingAvailable(data.sideToMove, board);\n\t\tboard.makeMove([move], true);\n\t\tboard.pregenerateAttacks();\n\t\tboardAccessors = { ...boardAccessors, ...augmentBoardAccessorsFromBoard(board) };\n\t\tinspectCoverage();\n\n\t\tconst { myMaterial, oppMaterial } = getMaterialEval();\n\t\tconst hillEval = variantData.kingOfTheHill ? 416 / (3 * getDistFromHill(defaultSideToMove)) : 0;\n\n\t\tif (variantData.giveaway) {\n\t\t\ttotalEval = -3 * myMaterial - oppMaterial - getCoordinationEval(defaultSideToMove) * 10 + hillEval;\n\t\t} else {\n\t\t\ttotalEval += getMatesEval();\n\n\t\t\tconst royalPiece = royal[defaultSideToMove];\n\t\t\tif (royalPiece) {\n\t\t\t\tconst { attackers } = getCoverage(royalPiece[0], royalPiece[1], defaultSideToMove);\n\t\t\t\tif (attackers.length) totalEval -= 700;\n\t\t\t}\n\n\t\t\ttotalEval += getMobilityEval(defaultSideToMove);\n\t\t\ttotalEval += getCoordinationEval(defaultSideToMove);\n\n\t\t\tif (isTeams) {\n\t\t\t\tconst partner = colors.find((v) => v !== defaultSideToMove && board.gameType.isSameTeam(defaultSideToMove, v));\n\t\t\t\tif (partner) Object.values(getKingSafetyEval(partner)).forEach((v) => (totalEval += v));\n\t\t\t}\n\n\t\t\tObject.values(getPinsEval()).forEach((v) => (totalEval += v));\n\t\t\tObject.values(getKingSafetyEval(defaultSideToMove)).forEach((v) => (totalEval += v));\n\t\t\ttotalEval += myMaterial + oppMaterial + hillEval;\n\t\t}\n\n\t\tconst isCastling =\n\t\t\t\"specialType\" in move && (move.specialType === SpecialMove.CastlingKingside || move.specialType === SpecialMove.CastlingQueenside);\n\t\tif (!isCastling && (isKingsideCastle || isQueensideCastle)) totalEval -= 0.5;\n\t\tif (isZombieEatZombie(move)) {\n\t\t\ttotalEval -= 10000;\n\t\t}\n\t\tswitch (board.moves.getHash(board.moves.constructPreliminaryHashString(board))) {\n\t\t\tcase 1:\n\t\t\t\ttotalEval -= 10000;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\ttotalEval -= 20000;\n\t\t\t\tbreak;\n\t\t}\n\t\tif (variantData.fiftyMoveRule && variantData.fiftyMoveRule - board.data.plyCount < 8) totalEval -= 150000;\n\n\t\tboard.loadSnapshot(snapshot);\n\t\treturn totalEval;\n\t}\n\n\treturn {\n\t\tstringifiedType: ZombieType.Futer,\n\t\tevaluate(moves, board): Map<MoveComponent, number> {\n\t\t\tinitializeBoardAccessorsFromBoard(board.createClone());\n\n\t\t\tconst moveValues = new Map<MoveComponent, number>();\n\t\t\tfor (const move of moves) {\n\t\t\t\tif (verifyInternalMove(move)) {\n\t\t\t\t\tswitch (move.type) {\n\t\t\t\t\t\tcase InternalMoveSignature.Resign:\n\t\t\t\t\t\tcase InternalMoveSignature.Timeout:\n\t\t\t\t\t\t\tmoveValues.set(move, -Infinity);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase InternalMoveSignature.ClaimWin:\n\t\t\t\t\t\t\tmoveValues.set(move, Infinity);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else moveValues.set(move, getEval(move));\n\t\t\t}\n\n\t\t\treturn moveValues;\n\t\t},\n\t\tpickPreferredMove(evaluations: Map<MoveComponent, number>) {\n\t\t\tconst sorted = [...evaluations.entries()].sort((a, b) => b[1] - a[1]);\n\t\t\tconst best: MoveComponent[] = [];\n\n\t\t\tfor (const [move, evaluated] of sorted) {\n\t\t\t\tif (sorted[0][1] - evaluated > 0.5) break;\n\t\t\t\tbest.push(move);\n\t\t\t}\n\n\t\t\tif (best.length > 5) best.length = 5;\n\t\t\tlet pick = Math.floor(Math.random() * best.length);\n\t\t\tif (pick > 0 && Math.random() > 0.8) pick = 0;\n\t\t\tif (pick > 1 && Math.random() > 0.8) pick = 1;\n\t\t\tif (pick > 2 && Math.random() > 0.8) pick = 2;\n\t\t\treturn randomlyPickNextChainedMoves(best[pick]);\n\t\t}\n\t};\n}\nexport const comfuterAlgorithm = createBotAlgorithm(createComfuterAlgorithm());\n","import { MoveComponent, verifyStandardMove, SpecialMove, verifyInternalMove } from \"@moveGeneration/MoveTree/MoveTreeInterface\";\nimport { pieceControlConfigSettings } from \"@moveGeneration/PieceControl/PieceControlInterface\";\nimport { createBotAlgorithm, ZombieMoveGenerationAlgorithm, ZombieType } from \"../BotInterface\";\nimport { comfuterAlgorithm } from \"./ComfuterEvaluation\";\n\nexport const createComfuterBasedAlgorithm = (\n\talgorithm: Omit<ZombieMoveGenerationAlgorithm, \"pickPreferredMove\">\n): ZombieMoveGenerationAlgorithm => ({\n\t...algorithm,\n\tpickPreferredMove(...args) {\n\t\treturn comfuterAlgorithm.pickPreferredMove.apply(this, args);\n\t}\n});\n\nexport const comfuterCheckerAlgorithm = createBotAlgorithm(\n\tcreateComfuterBasedAlgorithm({\n\t\tstringifiedType: ZombieType.F_Checker,\n\t\tevaluate(moves, board): Map<MoveComponent, number> {\n\t\t\tconst baseEvaluations = comfuterAlgorithm.evaluate.call(this, moves, board);\n\n\t\t\tfor (const [move, evaluation] of baseEvaluations) {\n\t\t\t\tif (verifyInternalMove(move)) continue;\n\t\t\t\tconst snapshot = board.createSnapshot();\n\t\t\t\tconst { checks, checkmates } = board.makeMove([move]);\n\t\t\t\tconst checksLength = checks.filter(Boolean).length;\n\t\t\t\tbaseEvaluations.set(move, evaluation + (checkmates.includes(true) ? checksLength * 500 : checksLength * 1500));\n\t\t\t\tboard.moves.deleteMove(board.moves.currentMove);\n\t\t\t\tboard.loadSnapshot(snapshot);\n\t\t\t}\n\n\t\t\treturn baseEvaluations;\n\t\t}\n\t})\n);\n\nexport const comfuterMuncherAlgorithm = createBotAlgorithm(\n\tcreateComfuterBasedAlgorithm({\n\t\tstringifiedType: ZombieType.F_Muncher,\n\t\tevaluate(moves, board): Map<MoveComponent, number> {\n\t\t\tconst baseEvaluations = comfuterAlgorithm.evaluate.call(this, moves, board);\n\n\t\t\tfor (const [move, evaluation] of baseEvaluations) {\n\t\t\t\tif (!verifyStandardMove(move)) continue;\n\t\t\t\tif (move.specialType === SpecialMove.EnPassant || board.board[move.endCoordinates[0]][move.endCoordinates[1]].isEmpty())\n\t\t\t\t\tcontinue;\n\n\t\t\t\tbaseEvaluations.set(move, evaluation + 5000);\n\t\t\t}\n\n\t\t\treturn baseEvaluations;\n\t\t}\n\t})\n);\n\nexport const comfuterPusherAlgorithm = createBotAlgorithm(\n\tcreateComfuterBasedAlgorithm({\n\t\tstringifiedType: ZombieType.F_Pusher,\n\t\tevaluate(moves, board): Map<MoveComponent, number> {\n\t\t\tconst baseEvaluations = comfuterAlgorithm.evaluate.call(this, moves, board);\n\n\t\t\tfor (const [move, evaluation] of baseEvaluations) {\n\t\t\t\tif (!verifyStandardMove(move)) continue;\n\t\t\t\tconst pieceString = board.board[move.startCoordinates[0]][move.startCoordinates[1]];\n\t\t\t\tif (pieceString.isPiece() && !pieceControlConfigSettings[pieceString.piece].moveGenerationSettings.isPawn) {\n\t\t\t\t\tbaseEvaluations.set(move, evaluation + 5000);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn baseEvaluations;\n\t\t}\n\t})\n);\n\nexport const patzerAlgorithm = createBotAlgorithm(\n\tcreateComfuterBasedAlgorithm({\n\t\tstringifiedType: ZombieType.Patzer,\n\t\tevaluate(moves, defaultBoard): Map<MoveComponent, number> {\n\t\t\tconst baseEvaluations = comfuterAlgorithm.evaluate.call(this, moves, defaultBoard);\n\t\t\tfor (const [move, evaluation] of baseEvaluations) {\n\t\t\t\tbaseEvaluations.set(move, -evaluation);\n\t\t\t}\n\n\t\t\treturn baseEvaluations;\n\t\t}\n\t})\n);\n","import { createBotAlgorithm, ZombieType } from \"../BotInterface\";\nimport { comfuterAlgorithm } from \"./ComfuterEvaluation\";\nimport { createComfuterBasedAlgorithm } from \"./ComfuterEvaluationExtensions\";\nimport { randoBotAlgorithm } from \"./RandomEvaluation\";\n\nexport const RanterAlgorithm = createBotAlgorithm(\n\tcreateComfuterBasedAlgorithm({\n\t\tstringifiedType: ZombieType.Ranter,\n\t\tevaluate(...args) {\n\t\t\tif (Math.random() < 0.5) {\n\t\t\t\treturn randoBotAlgorithm.evaluate.apply(this, args);\n\t\t\t} else return comfuterAlgorithm.evaluate.apply(this, args);\n\t\t}\n\t})\n);\n","import { Move, MoveComponent, verifyRequiredMove, verifyStandardMove } from \"@moveGeneration/MoveTree/MoveTreeInterface\";\nimport { createBotAlgorithm, ZombieType } from \"../BotInterface\";\n\nexport function randomlyPickNextChainedMoves(move: MoveComponent, resultingMove: MoveComponent[] = []): Move {\n\tconst newMove = [...resultingMove, move];\n\tif (move.nextChainedMoves && !move.isForcedContinuation && Math.random() > 0.5) {\n\t\treturn randomlyPickNextChainedMoves(move.nextChainedMoves[Math.floor(Math.random() * move.nextChainedMoves.length)], newMove);\n\t} else {\n\t\tif (!verifyRequiredMove(newMove)) throw new Error(\"Required move length is 0\");\n\t\treturn newMove;\n\t}\n}\n\nexport const randoBotAlgorithm = createBotAlgorithm({\n\tstringifiedType: ZombieType.Rando,\n\tevaluate(moves, board): Map<MoveComponent, number> {\n\t\tconst copyOfMoves = moves.slice();\n\t\tfor (let i = moves.length - 1; i > 0; i--) {\n\t\t\tconst j = Math.floor(Math.random() * (i + 1));\n\t\t\t[copyOfMoves[i], copyOfMoves[j]] = [moves[j], moves[i]];\n\t\t}\n\n\t\tconst data = board.data,\n\t\t\tboardSquares = board.board;\n\n\t\tconst zombieEatZombieMoves: typeof moves = [];\n\t\tconst otherMoves: typeof moves = [];\n\t\tfor (const move of copyOfMoves) {\n\t\t\tif (verifyStandardMove(move)) {\n\t\t\t\tconst targetPiece = boardSquares[move.endCoordinates[1]][move.endCoordinates[0]];\n\t\t\t\tif (targetPiece.isPiece() && data.fenOptions.tag(\"resigned\")[targetPiece.color]) {\n\t\t\t\t\tzombieEatZombieMoves.push(move);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\totherMoves.push(move);\n\t\t}\n\n\t\tlet startingEvaluation = 0;\n\t\treturn new Map([\n\t\t\t...otherMoves.reduce<Array<[MoveComponent, number]>>((p, n) => (p.push([n, --startingEvaluation]), p), []),\n\t\t\t...zombieEatZombieMoves.reduce<Array<[MoveComponent, number]>>((p, n) => (p.push([n, --startingEvaluation / 2]), p), [])\n\t\t]);\n\t},\n\tpickPreferredMove(evaluations: Map<MoveComponent, number>): Move {\n\t\treturn randomlyPickNextChainedMoves([...evaluations.entries()].reduce((p, n) => (n[1] > p[1] ? n : p))[0]);\n\t}\n});\n","import { MoveComponent, verifyStandardMove, SpecialMove } from \"@moveGeneration/MoveTree/MoveTreeInterface\";\nimport { pieceControlConfigSettings } from \"@moveGeneration/PieceControl/PieceControlInterface\";\nimport { createBotAlgorithm, ZombieMoveGenerationAlgorithm, ZombieType } from \"../BotInterface\";\nimport { randoBotAlgorithm } from \"./RandomEvaluation\";\n\nexport const createRandomBasedAlgorithm = (\n\talgorithm: Omit<ZombieMoveGenerationAlgorithm, \"pickPreferredMove\">\n): ZombieMoveGenerationAlgorithm => ({\n\t...algorithm,\n\tpickPreferredMove(...args) {\n\t\treturn randoBotAlgorithm.pickPreferredMove.apply(this, args);\n\t}\n});\n\nexport const checkerAlgorithm = createBotAlgorithm(\n\tcreateRandomBasedAlgorithm({\n\t\tstringifiedType: ZombieType.Checker,\n\t\tevaluate(moves, board): Map<MoveComponent, number> {\n\t\t\tconst baseEvaluations = randoBotAlgorithm.evaluate.call(this, moves, board);\n\n\t\t\tfor (const [move, evaluation] of baseEvaluations) {\n\t\t\t\tconst snapshot = board.createSnapshot();\n\t\t\t\tconst { checks, checkmates } = board.makeMove([move]);\n\t\t\t\tif (checks.filter((c, i) => c && !checkmates[i] === c).length === 0) {\n\t\t\t\t\tbaseEvaluations.set(move, evaluation / (evaluation / 2));\n\t\t\t\t}\n\t\t\t\tboard.loadSnapshot(snapshot);\n\t\t\t}\n\n\t\t\treturn baseEvaluations;\n\t\t}\n\t})\n);\n\nexport const muncherAlgorithm = createBotAlgorithm(\n\tcreateRandomBasedAlgorithm({\n\t\tstringifiedType: ZombieType.Muncher,\n\t\tevaluate(moves, board): Map<MoveComponent, number> {\n\t\t\tconst baseEvaluations = randoBotAlgorithm.evaluate.call(this, moves, board);\n\n\t\t\tfor (const [move, evaluation] of baseEvaluations) {\n\t\t\t\tif (!verifyStandardMove(move)) continue;\n\t\t\t\tif (move.specialType === SpecialMove.EnPassant || board.board[move.endCoordinates[0]][move.endCoordinates[1]].isEmpty())\n\t\t\t\t\tcontinue;\n\n\t\t\t\tbaseEvaluations.set(move, evaluation / (evaluation / 2));\n\t\t\t}\n\n\t\t\treturn baseEvaluations;\n\t\t}\n\t})\n);\n\nexport const pusherAlgorithm = createBotAlgorithm(\n\tcreateRandomBasedAlgorithm({\n\t\tstringifiedType: ZombieType.Pusher,\n\t\tevaluate(moves, board): Map<MoveComponent, number> {\n\t\t\tconst baseEvaluations = randoBotAlgorithm.evaluate.call(this, moves, board);\n\n\t\t\tfor (const [move, evaluation] of baseEvaluations) {\n\t\t\t\tif (!verifyStandardMove(move)) continue;\n\t\t\t\tconst pieceString = board.board[move.startCoordinates[0]][move.startCoordinates[1]];\n\t\t\t\tif (pieceString.isPiece() && !pieceControlConfigSettings[pieceString.piece].moveGenerationSettings.isPawn) {\n\t\t\t\t\tbaseEvaluations.set(move, evaluation / (evaluation / 2));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn baseEvaluations;\n\t\t}\n\t})\n);\n","import { Board } from \"@moveGeneration/Board/Board\";\nimport { Move, MoveComponent } from \"@moveGeneration/MoveTree/MoveTreeInterface\";\n\nexport enum ZombieType {\n\tRando = \"rando\",\n\tFuter = \"comfuter\",\n\tRanter = \"ranter\",\n\tPatzer = \"patzer\",\n\tPusher = \"pusher\",\n\tChecker = \"checker\",\n\tMuncher = \"muncher\",\n\tF_Pusher = \"pusher_comfuter\",\n\tF_Checker = \"checker_comfuter\",\n\tF_Muncher = \"muncher_comfuter\"\n}\n\nexport const verifyZombieType = (zombieType: string): zombieType is ZombieType => zombieType in ZombieType;\n\nexport interface ZombieMoveGenerationAlgorithm {\n\treadonly stringifiedType: ZombieType;\n\tevaluate(moves: MoveComponent[], board: Board): Map<MoveComponent, number>;\n\tpickPreferredMove(evaluations: Map<MoveComponent, number>): Move;\n}\n\nexport const botAlgorithms = new Map<ZombieType, ZombieMoveGenerationAlgorithm>();\n\nexport function createBotAlgorithm(algorithm: ZombieMoveGenerationAlgorithm) {\n\tbotAlgorithms.set(algorithm.stringifiedType, algorithm);\n\treturn algorithm;\n}\n","import { Board } from \"@moveGeneration/Board/Board\";\nimport { InsufficientMaterialConstructor, InsufficientMaterialState } from \"./InsufficientMaterialConstructor\";\nimport { Tuple, assertNonUndefined, createTuple, createTupleFromCallback } from \"@client/ts/baseTypes\";\nimport { colors, totalPlayers } from \"@moveGeneration/GameInformation/GameData\";\nimport { Coordinate, NumericColor } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport { stalemateOptionsValues } from \"../../FENDataDecorators/StalemateOptions\";\nimport { pieceControlConfigSettings, verifyPieceLetter } from \"@moveGeneration/PieceControl/PieceControlInterface\";\nimport { disabledRank } from \"../../PieceControlDecorators/PromotionRank\";\nimport { compareCoordinates } from \"@moveGeneration/Board/BoardInterface\";\n\nexport class InsufficientMaterialChecker {\n\tprivate readonly noRoyalsToMate: boolean = false;\n\tprivate readonly isDisabled: boolean = false;\n\tprivate readonly promotionPieces;\n\tprivate readonly hasPromotion;\n\n\tconstructor(readonly state: InsufficientMaterialState, board: Board) {\n\t\tfor (const variantRule of board.variantRules) {\n\t\t\tconst { isDisabled, isPartiallyDisabled } = variantRule.getInsufficientMaterialData();\n\t\t\tif (isDisabled) {\n\t\t\t\tthis.isDisabled = true;\n\t\t\t\tbreak;\n\t\t\t} else if (isPartiallyDisabled) this.noRoyalsToMate = true;\n\t\t}\n\t\tthis.hasPromotion = board.variantData.promotionRank !== disabledRank;\n\t\tthis.promotionPieces = board.variantData.promotionPieces || [];\n\t}\n\n\tprivate getRoyalPieceMedians(board: Board) {\n\t\tconst { walls, royalMoveMedians } = this.state,\n\t\t\troyal = board.data.fenOptions.tag(\"royal\"),\n\t\t\tvariantData = board.variantData,\n\t\t\tboardSquares = board.board;\n\t\tconst extraWalls = boardSquares.reduce((accumulator, row, i) => {\n\t\t\treturn (\n\t\t\t\taccumulator +\n\t\t\t\trow.reduce((accumulator, square, j) => {\n\t\t\t\t\tif (square.isWall() && !walls[i][j]) {\n\t\t\t\t\t\treturn accumulator + 1;\n\t\t\t\t\t} else return accumulator;\n\t\t\t\t}, 0)\n\t\t\t);\n\t\t}, 0);\n\n\t\treturn royalMoveMedians.map((median, i) => {\n\t\t\tif (!royal[i]) return;\n\n\t\t\tlet minimumMedian: number;\n\t\t\tif (variantData.stalemateOptions === stalemateOptionsValues.stalemateLoses) {\n\t\t\t\tminimumMedian = 1;\n\t\t\t\tmedian--;\n\t\t\t} else {\n\t\t\t\tmedian++;\n\t\t\t\tminimumMedian = 2;\n\t\t\t}\n\n\t\t\tmedian -= extraWalls;\n\t\t\tif (median < minimumMedian) median = minimumMedian;\n\n\t\t\treturn median;\n\t\t});\n\t}\n\n\tprivate obtainPieceSymbolFromCoordinate(board: Board, coordinate: Coordinate) {\n\t\tconst { optimizedPieces, pieceSquareMedians, backwardsPieceRegistry } = this.state;\n\t\tconst piece = board.board[coordinate[0]][coordinate[1]];\n\t\tif (pieceControlConfigSettings[piece.piece].moveGenerationSettings.isPawn && this.hasPromotion) {\n\t\t\tconst availableSymbols = [...optimizedPieces]\n\t\t\t\t.filter((p) => verifyPieceLetter(p) && !pieceControlConfigSettings[p].moveGenerationSettings.isPawn)\n\t\t\t\t.map((p) => pieceSquareMedians[p]);\n\t\t\tif (availableSymbols.length === 0) {\n\t\t\t\treturn { selectedSymbol: InsufficientMaterialConstructor.NON_INDEXED_PIECE_SYMBOL, piece };\n\t\t\t} else {\n\t\t\t\tconst candidates = availableSymbols.map((s) => {\n\t\t\t\t\treturn s[Object.getOwnPropertySymbols(s)[0]].reduce<number>((p, n) => p + (n ?? 0), 0);\n\t\t\t\t});\n\t\t\t\tconst candidateIndex = candidates.indexOf(Math.max(...candidates));\n\t\t\t\tconst symbol = Object.getOwnPropertySymbols(availableSymbols[candidateIndex])[0];\n\t\t\t\treturn {\n\t\t\t\t\tselectedSymbol: symbol,\n\t\t\t\t\tpiece\n\t\t\t\t};\n\t\t\t}\n\t\t} else {\n\t\t\tconst availableSymbols = Object.getOwnPropertySymbols(pieceSquareMedians[piece.piece]);\n\t\t\tconst selectedSymbol =\n\t\t\t\tavailableSymbols.length === 1 ? availableSymbols[0] : backwardsPieceRegistry[piece.piece][coordinate[0]][coordinate[1]];\n\t\t\tassertNonUndefined(selectedSymbol);\n\n\t\t\treturn { selectedSymbol, piece };\n\t\t}\n\t}\n\n\tprivate getPartialIntersection(parameters: {\n\t\tboard: Board;\n\t\tarmy: Coordinate[];\n\t\tpieces: Tuple<Coordinate[], typeof totalPlayers>;\n\t\troyalColor: NumericColor;\n\t}) {\n\t\tconst { pieceSquareMedians } = this.state,\n\t\t\t{ board, army, pieces, royalColor } = parameters;\n\t\tfor (const coordinate of army) {\n\t\t\tconst { piece, selectedSymbol } = this.obtainPieceSymbolFromCoordinate(board, coordinate);\n\t\t\tconst symbolsLength = Object.getOwnPropertySymbols(pieceSquareMedians[piece.piece]).length;\n\t\t\tif (symbolsLength > 1 || pieceControlConfigSettings[piece.piece].moveGenerationSettings.isColorBound) {\n\t\t\t\tfor (const enemyCoordinate of pieces[royalColor]) {\n\t\t\t\t\tconst { selectedSymbol: enemySymbol } = this.obtainPieceSymbolFromCoordinate(board, enemyCoordinate);\n\t\t\t\t\tif (selectedSymbol === enemySymbol) return Infinity;\n\t\t\t\t}\n\t\t\t} else return Infinity;\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\tcheckCurrentState(board: Board) {\n\t\tconst fenOptions = board.data.fenOptions;\n\t\tconst dead = fenOptions.tag(\"dead\"),\n\t\t\troyal = fenOptions.tag(\"royal\");\n\t\tconst pieces = board.getPlayerPieces(),\n\t\t\tresultingInsufficientPieces = createTuple(false, totalPlayers);\n\t\tif (this.isDisabled) return resultingInsufficientPieces;\n\n\t\tconst royalPieceMedians = this.getRoyalPieceMedians(board),\n\t\t\t{ oppositionMedians, pieceSquareMedians } = this.state;\n\t\tconst squaresPlayerCanOutrange = createTupleFromCallback(() => createTuple(0, totalPlayers), totalPlayers);\n\t\tfor (const color of colors) {\n\t\t\tconst army = pieces[color];\n\t\t\tif (dead[color]) continue;\n\t\t\tfor (const royalColor of colors) {\n\t\t\t\tif (color === royalColor || dead[royalColor]) continue;\n\t\t\t\tif (!royal[royalColor] || this.noRoyalsToMate) {\n\t\t\t\t\tsquaresPlayerCanOutrange[royalColor][color] = this.getPartialIntersection({ board, army, pieces, royalColor });\n\t\t\t\t} else {\n\t\t\t\t\tconst royalSquares = royalPieceMedians[royalColor];\n\t\t\t\t\tif (royalSquares === undefined) continue;\n\t\t\t\t\tconst fenRoyal = royal[color],\n\t\t\t\t\t\tcurrentColorBounds: symbol[] = [];\n\t\t\t\t\tfor (const coordinate of army) {\n\t\t\t\t\t\tif (fenRoyal && compareCoordinates(coordinate, fenRoyal)) {\n\t\t\t\t\t\t\tif (board.variantData.royalsCannotCapture) {\n\t\t\t\t\t\t\t\tsquaresPlayerCanOutrange[color][royalColor]++;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsquaresPlayerCanOutrange[color][royalColor] += oppositionMedians[color][royalColor];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst { piece, selectedSymbol } = this.obtainPieceSymbolFromCoordinate(board, coordinate);\n\t\t\t\t\t\t\tif (this.hasPromotion && pieceControlConfigSettings[piece.piece].moveGenerationSettings.isPawn) {\n\t\t\t\t\t\t\t\tconst medians = this.promotionPieces.map((piece) => {\n\t\t\t\t\t\t\t\t\tconst subSymbol = Object.getOwnPropertySymbols(pieceSquareMedians[piece])[0];\n\t\t\t\t\t\t\t\t\treturn pieceSquareMedians[piece][subSymbol][royalColor] ?? 0;\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tsquaresPlayerCanOutrange[color][royalColor] += Math.max(...medians);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (pieceControlConfigSettings[piece.piece].moveGenerationSettings.isColorBound) {\n\t\t\t\t\t\t\t\t\tif (currentColorBounds.includes(selectedSymbol)) continue;\n\t\t\t\t\t\t\t\t\tcurrentColorBounds.push(selectedSymbol);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tsquaresPlayerCanOutrange[color][royalColor] += pieceSquareMedians[piece.piece][selectedSymbol][royalColor] ?? 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tsquaresPlayerCanOutrange[color][royalColor] += pieces[royalColor].length - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (const color of colors) {\n\t\t\tif (dead[color]) continue;\n\t\t\tlet sum = 0;\n\t\t\tfor (let i = 0; i < totalPlayers; i++) {\n\t\t\t\tif (i === color) continue;\n\t\t\t\tsum += squaresPlayerCanOutrange[i][color];\n\t\t\t}\n\n\t\t\tconst royal = royalPieceMedians[color];\n\t\t\tif ((royal !== undefined && sum <= royal) || sum < 0) resultingInsufficientPieces[color] = true;\n\t\t}\n\t\treturn resultingInsufficientPieces;\n\t}\n}\n","import { Tuple, createTuple, createTupleFromCallback } from \"@client/ts/baseTypes\";\nimport { BoardSquares, initializeBoardSquares } from \"@client/ts/logic/BaseInterfaces\";\nimport { Board, baseImmunes } from \"@moveGeneration/Board/Board\";\nimport { boardDimension, colors, totalPlayers } from \"@moveGeneration/GameInformation/GameData\";\nimport { PieceString, createPieceFromData, emptyPieceString } from \"@moveGeneration/GameInformation/GameUnits/PieceString\";\nimport {\n\tPieceLetter,\n\tdefaultPieces,\n\tgrasshopperPieceLetter,\n\tpieceControlConfigSettings,\n\tverifyPieceLetter\n} from \"@moveGeneration/PieceControl/PieceControlInterface\";\nimport { binaryMasks, findMinimumOnBoardSquares, oneBitMask, optimizePieceSet } from \"./Utilities\";\nimport { disabledRank } from \"../../PieceControlDecorators/PromotionRank\";\nimport { stringifyCoordinate } from \"@moveGeneration/Board/BoardInterface\";\nimport { bitCount } from \"@utils/NumberUtils\";\nimport { PieceMedianCounterReturnType } from \"./PieceMedianCounter\";\n\nexport interface InsufficientMaterialState {\n\treadonly walls: BoardSquares<boolean>;\n\treadonly backwardsPieceRegistry: Record<PieceLetter, BoardSquares<symbol | null>>;\n\treadonly pieceSquareMedians: Record<PieceLetter, Record<symbol, Tuple<number | undefined, typeof totalPlayers>>>;\n\treadonly royalMoveMedians: Tuple<number, typeof totalPlayers>;\n\treadonly optimizedPieces: Set<PieceLetter>;\n\toppositionMedians: Tuple<Tuple<number, typeof totalPlayers>, typeof totalPlayers>;\n}\n\nexport class InsufficientMaterialConstructor {\n\tstatic readonly NON_INDEXED_PIECE_SYMBOL = Symbol();\n\tprivate readonly board: Board;\n\tprivate readonly emptyBoard: BoardSquares<PieceString>;\n\tprivate readonly pieceMoveRegistry: Record<PieceLetter, Record<symbol, BoardSquares<Uint16Array>>> = {};\n\tprivate readonly possibleRoyals = createTupleFromCallback<string[], typeof totalPlayers>(() => [], totalPlayers);\n\tprivate readonly boardDestinations = new Map<PieceLetter, Uint16Array[]>();\n\tprivate readonly royalPieceSets = createTupleFromCallback(() => new Set<string>(), totalPlayers);\n\treadonly state: InsufficientMaterialState;\n\n\tconstructor(board: Board, readonly callback: (state: InsufficientMaterialState) => void) {\n\t\tthis.board = board.createClone();\n\t\tthis.emptyBoard = this.board.board.map((row) => row.map((square) => (square.isWall() ? square : emptyPieceString)));\n\t\tthis.state = {\n\t\t\twalls: this.emptyBoard.map((row) => row.map((square) => square.isWall())),\n\t\t\tbackwardsPieceRegistry: {},\n\t\t\troyalMoveMedians: createTuple(0, totalPlayers),\n\t\t\tpieceSquareMedians: {\n\t\t\t\t[grasshopperPieceLetter]: {\n\t\t\t\t\t[InsufficientMaterialConstructor.NON_INDEXED_PIECE_SYMBOL]: [2, 2, 2, 2]\n\t\t\t\t}\n\t\t\t},\n\t\t\toptimizedPieces: optimizePieceSet(this.board.variantData.promotionPieces || [], true),\n\t\t\toppositionMedians: createTupleFromCallback(() => createTuple(0, totalPlayers), totalPlayers)\n\t\t};\n\t}\n\n\tprivate initializeRoyals() {\n\t\tconst boardSquares = this.board.board,\n\t\t\tpromotionPieces = this.board.variantData.promotionPieces || [];\n\t\tthis.board.data.fenOptions.tag(\"royal\").forEach((royal, color) => {\n\t\t\tif (royal) {\n\t\t\t\tconst piece = boardSquares[royal[0]][royal[1]].piece;\n\t\t\t\tif (pieceControlConfigSettings[piece].moveGenerationSettings.isPawn) {\n\t\t\t\t\tthis.possibleRoyals[color] = [piece, ...promotionPieces];\n\t\t\t\t} else this.possibleRoyals[color] = [piece];\n\t\t\t} else if (promotionPieces.includes(defaultPieces.king)) {\n\t\t\t\tthis.possibleRoyals[color] = [defaultPieces.king];\n\t\t\t}\n\t\t});\n\n\t\tfor (const color of colors) {\n\t\t\tif (this.possibleRoyals[color].length > 1) {\n\t\t\t\tthis.royalPieceSets[color] = optimizePieceSet(this.possibleRoyals[color], false);\n\t\t\t} else if (this.possibleRoyals[color].length === 1) {\n\t\t\t\tthis.royalPieceSets[color].add(this.possibleRoyals[color][0]);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate recurseThroughSquares(i: number, j: number, piece: PieceString) {\n\t\tconst {\n\t\t\temptyBoard,\n\t\t\tboard: { controls },\n\t\t\tpieceMoveRegistry\n\t\t} = this;\n\t\tconst currentSquares = new Set<string>(),\n\t\t\tunvisitedSquares = new Set<string>();\n\t\tif (!piece.isPiece()) throw new TypeError(`Wrong piece signature detected at ${piece.value}`);\n\t\tconst baseBuilder = controls[piece.piece]().setColor(piece.color).setBoard(emptyBoard).setBaseImmunePieces(baseImmunes);\n\t\tconst registryResult = initializeBoardSquares(() => new Uint16Array(boardDimension).fill(oneBitMask));\n\n\t\tfunction recurse(x: number, y: number) {\n\t\t\tconst control = baseBuilder.setCoordinates(x, y).constructPieceControl();\n\t\t\tconst moves = control.getPseudoLegalMoves(),\n\t\t\t\tmoveLength = moves.length;\n\t\t\tif (moveLength === 0) return;\n\n\t\t\tfor (let i = 0; i < moveLength; i++) {\n\t\t\t\tconst move = moves[i].move;\n\t\t\t\tconst moveString = stringifyCoordinate(move);\n\t\t\t\tregistryResult[x][y][move[0]] |= binaryMasks[move[1]];\n\t\t\t\tif (!currentSquares.has(moveString)) {\n\t\t\t\t\tunvisitedSquares.add(moveString);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const value of unvisitedSquares) {\n\t\t\t\tconst [x, y] = value.split(\":\");\n\t\t\t\tif (!currentSquares.has(value)) {\n\t\t\t\t\tcurrentSquares.add(value);\n\t\t\t\t\trecurse(parseInt(x, 10), parseInt(y, 10));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\trecurse(i, j);\n\t\tif (!(piece.piece in pieceMoveRegistry)) pieceMoveRegistry[piece.piece] = {};\n\t\tpieceMoveRegistry[piece.piece][Symbol()] = registryResult;\n\n\t\tconst permutations = new Uint16Array(14).fill(oneBitMask);\n\t\tcurrentSquares.forEach((value) => {\n\t\t\tconst valueArr = value.split(\":\");\n\t\t\tpermutations[parseInt(valueArr[0], 10)] |= binaryMasks[parseInt(valueArr[1], 10)];\n\t\t});\n\t\tunvisitedSquares.forEach((value) => {\n\t\t\tconst valueArr = value.split(\":\");\n\t\t\tpermutations[parseInt(valueArr[0], 10)] |= binaryMasks[parseInt(valueArr[1], 10)];\n\t\t});\n\n\t\treturn permutations;\n\t}\n\n\tprivate addToBoardDestinations(i: number, j: number, piece: PieceString) {\n\t\tconst permutations = this.recurseThroughSquares(i, j, piece);\n\n\t\tconst boardPiece = this.boardDestinations.get(piece.piece);\n\t\tif (boardPiece) {\n\t\t\tthis.boardDestinations.set(piece.piece, boardPiece.concat(permutations));\n\t\t} else {\n\t\t\tthis.boardDestinations.set(piece.piece, [permutations]);\n\t\t}\n\t}\n\n\tprivate getBoardDestinations() {\n\t\tconst boardSquares = this.board.board,\n\t\t\tpromotionRank = this.board.variantData.promotionRank || disabledRank,\n\t\t\tpromotionPieces = this.board.variantData.promotionPieces || [];\n\t\tfor (let i = 0; i < boardDimension; i++) {\n\t\t\tfor (let j = 0; j < boardDimension; j++) {\n\t\t\t\tif (boardSquares[i][j].isPiece()) this.addToBoardDestinations(i, j, boardSquares[i][j]);\n\t\t\t}\n\t\t}\n\n\t\tconst hasPromotion = promotionRank !== disabledRank && promotionPieces.some((p) => verifyPieceLetter(p));\n\t\tconst promotionRanks = [boardDimension - promotionRank, promotionRank - 1, promotionRank - 1, boardDimension - promotionRank];\n\t\tconst optimizedPieces = optimizePieceSet(promotionPieces, true);\n\t\tif (hasPromotion) {\n\t\t\tfor (let color of colors) {\n\t\t\t\tcolor &= 1;\n\t\t\t\tfor (let x = 0; x < boardDimension; x++) {\n\t\t\t\t\tconst [i, j] = [color ? promotionRanks[color] : x, color ? x : promotionRanks[color]];\n\t\t\t\t\tif (this.state.walls[i][j]) continue;\n\t\t\t\t\tfor (const piece of optimizedPieces) {\n\t\t\t\t\t\tthis.addToBoardDestinations(i, j, createPieceFromData(0, piece));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate initializeBackwardsPieceRegistry() {\n\t\tconst entries = this.boardDestinations.entries(),\n\t\t\t{\n\t\t\t\tstate: { backwardsPieceRegistry },\n\t\t\t\tpieceMoveRegistry\n\t\t\t} = this;\n\t\tfor (const [entry, uintArray] of entries) {\n\t\t\tif (pieceControlConfigSettings[entry].moveGenerationSettings.isPawn || entry === grasshopperPieceLetter || !verifyPieceLetter(entry))\n\t\t\t\tcontinue;\n\t\t\tlet isAlwaysIntersecting = true;\n\t\t\tconst permutationArray: Array<number | Uint16Array> = [];\n\n\t\t\tfor (const permutationEntry of uintArray) {\n\t\t\t\tif (permutationArray.length === 0) {\n\t\t\t\t\tpermutationArray.push(permutationEntry);\n\t\t\t\t} else {\n\t\t\t\t\tconst index = permutationArray.findIndex((uintArr) => {\n\t\t\t\t\t\tif (typeof uintArr !== \"number\") return uintArr.every((n, j) => n === permutationEntry[j]);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t});\n\t\t\t\t\tif (~index) {\n\t\t\t\t\t\tpermutationArray.push(index);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpermutationArray.push(permutationEntry);\n\t\t\t\t\t\tisAlwaysIntersecting = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (isAlwaysIntersecting) {\n\t\t\t\tpieceMoveRegistry[entry] = {\n\t\t\t\t\t[Symbol()]: pieceMoveRegistry[entry][Object.getOwnPropertySymbols(pieceMoveRegistry[entry])[0]]\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tif (!(entry in backwardsPieceRegistry)) {\n\t\t\t\t\tbackwardsPieceRegistry[entry] = initializeBoardSquares(() => null);\n\t\t\t\t}\n\n\t\t\t\tconst remappedSymbols: Array<symbol | number> = [];\n\t\t\t\tfor (const squares of permutationArray) {\n\t\t\t\t\tlet remappedSymbol: symbol | undefined;\n\t\t\t\t\tif (typeof squares === \"number\") {\n\t\t\t\t\t\tremappedSymbols.push(squares);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tfor (let i = 0; i < boardDimension; i++) {\n\t\t\t\t\t\tfor (let j = 0; j < boardDimension; j++) {\n\t\t\t\t\t\t\tif ((squares[i] & binaryMasks[j]) ^ oneBitMask) {\n\t\t\t\t\t\t\t\tif (!remappedSymbol) {\n\t\t\t\t\t\t\t\t\tremappedSymbol = Symbol();\n\t\t\t\t\t\t\t\t\tremappedSymbols.push(remappedSymbol);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tthis.state.backwardsPieceRegistry[entry][i][j] ??= remappedSymbol;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst uintValues = Object.getOwnPropertySymbols(pieceMoveRegistry[entry]).map((sym) => pieceMoveRegistry[entry][sym]);\n\t\t\t\tpieceMoveRegistry[entry] = {};\n\t\t\t\tfor (let i = 0; i < uintValues.length; i++) {\n\t\t\t\t\tconst remapped = remappedSymbols[i];\n\t\t\t\t\tif (typeof remapped === \"number\") continue;\n\t\t\t\t\tif (typeof remapped === \"undefined\") break;\n\t\t\t\t\tpieceMoveRegistry[entry][remapped] = uintValues[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate generateOppositionSquares() {\n\t\tconst boardSquares = this.board.board,\n\t\t\tcontrols = this.board.controls,\n\t\t\t{ emptyBoard } = this;\n\t\tconst royalMoves = createTuple<BoardSquares<Uint16Array>, typeof totalPlayers>(\n\t\t\tinitializeBoardSquares(() => new Uint16Array(boardDimension).fill(oneBitMask)),\n\t\t\ttotalPlayers\n\t\t);\n\t\tconst oppositionRowEchelon = createTuple<BoardSquares<Uint16Array> | undefined, typeof totalPlayers>(undefined, totalPlayers);\n\n\t\tthis.board.data.fenOptions.tag(\"royal\").forEach((royal, color) => {\n\t\t\tif (!royal) return;\n\t\t\tconst royalPiece = boardSquares[royal[0]][royal[1]];\n\t\t\tconst controlBuilder = controls[royalPiece.piece];\n\t\t\tconst builder = controlBuilder().setColor(0).setBaseImmunePieces(baseImmunes).setBoard(emptyBoard);\n\t\t\tconst finalArray = initializeBoardSquares(() => new Uint16Array(14).fill(oneBitMask));\n\t\t\tfor (let i = 0; i < boardSquares.length; i++) {\n\t\t\t\tfor (let j = 0; j < boardSquares[0].length; j++) {\n\t\t\t\t\tif (emptyBoard[i][j].isWall()) continue;\n\t\t\t\t\tconst control = builder.setCoordinates(i, j).constructPieceControl();\n\t\t\t\t\tconst moves = control.getPseudoLegalMoves();\n\t\t\t\t\tconst permutationArray = new Uint16Array(boardDimension).fill(oneBitMask);\n\t\t\t\t\tfor (const { move } of moves) permutationArray[move[0]] |= binaryMasks[move[1]];\n\t\t\t\t\tfinalArray[i][j] = permutationArray;\n\t\t\t\t\troyalMoves[color][i][j] = permutationArray;\n\t\t\t\t}\n\t\t\t}\n\t\t\toppositionRowEchelon[color] = finalArray;\n\t\t});\n\n\t\tfor (const color of colors) {\n\t\t\tthis.state.royalMoveMedians[color] = findMinimumOnBoardSquares(royalMoves[color]);\n\t\t}\n\t\treturn { oppositionRowEchelon, royalMoves };\n\t}\n\n\tprivate generateOppositeMedians(rowEchelon: Tuple<BoardSquares<Uint16Array> | undefined, typeof totalPlayers>) {\n\t\tconst {\n\t\t\t\temptyBoard,\n\t\t\t\tstate: { oppositionMedians }\n\t\t\t} = this,\n\t\t\troyals = this.board.data.fenOptions.tag(\"royal\");\n\t\tfor (let i = 0; i < totalPlayers; i++) {\n\t\t\tfor (let j = 0; j < totalPlayers; j++) {\n\t\t\t\tif (i === j || rowEchelon[i] === undefined) continue;\n\t\t\t\tconst royalPieceA = royals[i],\n\t\t\t\t\troyalPieceB = royals[j];\n\t\t\t\tif (!royalPieceA || !royalPieceB) continue;\n\t\t\t\tconst finalArray = Array.from({ length: 14 }, () => Array.from({ length: 14 }, () => 0));\n\t\t\t\tfor (let i2 = 0; i2 < boardDimension; i2++) {\n\t\t\t\t\tfor (let j2 = 0; j2 < boardDimension; j2++) {\n\t\t\t\t\t\tif (emptyBoard[i2][j2].isWall()) continue;\n\t\t\t\t\t\tconst jjIndex = rowEchelon[j];\n\t\t\t\t\t\tconst iiIndex = rowEchelon[i];\n\t\t\t\t\t\tif (!jjIndex || !iiIndex)\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t`Central opposition matrix indexes are undefined: ${jjIndex?.toString() ?? \"undefined\"}  ${\n\t\t\t\t\t\t\t\t\tiiIndex?.toString() ?? \"undefined\"\n\t\t\t\t\t\t\t\t}`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t(jjIndex[i2][j2][royalPieceA[1]] & binaryMasks[royalPieceA[0]]) ^ oneBitMask &&\n\t\t\t\t\t\t\t(iiIndex[i2][j2][royalPieceB[1]] & binaryMasks[royalPieceB[0]]) ^ oneBitMask\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst uintArray = jjIndex[i2][j2].map((e, x) => e & iiIndex[i2][j2][x]);\n\t\t\t\t\t\tlet newResultingSquares = 0;\n\t\t\t\t\t\tfor (let dimSquare = 0; dimSquare < boardDimension; dimSquare++) {\n\t\t\t\t\t\t\tnewResultingSquares += bitCount(uintArray[dimSquare]) - 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfinalArray[i2][j2] = newResultingSquares;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet minimum = Infinity;\n\t\t\t\tfor (let i2 = 0; i2 < boardDimension; i2++) {\n\t\t\t\t\tfor (let j2 = 0; j2 < boardDimension; j2++) {\n\t\t\t\t\t\tif (finalArray[i2][j2] !== 0 && finalArray[i2][j2] < minimum) {\n\t\t\t\t\t\t\tminimum = finalArray[i2][j2];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\toppositionMedians[i][j] = minimum - 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate generatePieceMoveMedians(royalMoves: Tuple<BoardSquares<Uint16Array>, typeof totalPlayers>) {\n\t\tconst {\n\t\t\tpieceMoveRegistry,\n\t\t\tstate: { pieceSquareMedians, walls },\n\t\t\troyalPieceSets\n\t\t} = this;\n\t\tlet currentMessages = 0,\n\t\t\trequiredMessages = 0;\n\t\tfor (const pieceLetter in pieceMoveRegistry) {\n\t\t\tif (!verifyPieceLetter(pieceLetter) || !Object.prototype.hasOwnProperty.call(pieceMoveRegistry, pieceLetter)) continue;\n\t\t\tif (pieceLetter in pieceSquareMedians) continue;\n\t\t\tpieceSquareMedians[pieceLetter] = {};\n\t\t\tconst registeredSymbols = Object.getOwnPropertySymbols(pieceMoveRegistry[pieceLetter]);\n\t\t\tfor (const registeredSymbol of registeredSymbols) {\n\t\t\t\tconst pieceMedianCounter = new Worker(new URL(\"./PieceMedianCounter.ts\", import.meta.url));\n\t\t\t\tpieceMedianCounter.postMessage({\n\t\t\t\t\twalls,\n\t\t\t\t\tmoveRegistryArray: pieceMoveRegistry[pieceLetter][registeredSymbol].map((r) => r.map((uint) => uint.buffer)),\n\t\t\t\t\troyalMoves: royalMoves.map((board) => board.map((r) => r.map((uint) => uint.buffer))),\n\t\t\t\t\troyalPieceSet: royalPieceSets.map((s) => [...s])\n\t\t\t\t});\n\t\t\t\trequiredMessages++;\n\t\t\t\tpieceMedianCounter.onmessage = (e: MessageEvent<PieceMedianCounterReturnType>) => {\n\t\t\t\t\tpieceSquareMedians[pieceLetter][registeredSymbol] = e.data;\n\t\t\t\t\tpieceMedianCounter.terminate();\n\t\t\t\t\tif (requiredMessages === ++currentMessages) {\n\t\t\t\t\t\tthis.callback(this.state);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\tgenerateInsufficientMaterialState() {\n\t\tthis.initializeRoyals();\n\t\tthis.getBoardDestinations();\n\t\tthis.initializeBackwardsPieceRegistry();\n\t\tconst { royalMoves, oppositionRowEchelon } = this.generateOppositionSquares();\n\t\tthis.generateOppositeMedians(oppositionRowEchelon);\n\t\tthis.generatePieceMoveMedians(royalMoves);\n\t}\n}\n","import { createTupleFromCallback, Tuple } from \"@client/ts/baseTypes\";\nimport { BoardSquares, initializeBoardSquares } from \"@client/ts/logic/BaseInterfaces\";\nimport { boardDimension, colors, totalPlayers } from \"@moveGeneration/GameInformation/GameData\";\nimport type { PieceLetter } from \"@moveGeneration/PieceControl/PieceControlInterface\";\nimport { countMinimumOf2DArrayExcludingZero } from \"@client/ts/utils/ArrayUtils\";\nimport { countBitsOnBoard } from \"./Utilities\";\n\nexport type PieceMedianCounterReturnType = Tuple<number | undefined, typeof totalPlayers>;\ninterface PieceMedianCounterSettings {\n\twalls: BoardSquares<boolean>;\n\tmoveRegistryArray: ArrayBufferLike[][];\n\troyalPieceSet: Tuple<PieceLetter[], typeof totalPlayers>;\n\troyalMoves: Tuple<ArrayBufferLike[][], typeof totalPlayers>;\n}\n\nself.onmessage = (e: MessageEvent<PieceMedianCounterSettings>) => {\n\tconst { walls, royalPieceSet, royalMoves, moveRegistryArray } = e.data;\n\tconst resultingMedianArray = createTupleFromCallback<BoardSquares<number> | undefined, typeof totalPlayers>(\n\t\t() => initializeBoardSquares(() => 0),\n\t\ttotalPlayers\n\t);\n\tfor (let i = 0; i < boardDimension; i++) {\n\t\tfor (let j = 0; j < boardDimension; j++) {\n\t\t\tif (walls[i][j]) continue;\n\t\t\tconst moves = new Uint16Array(moveRegistryArray[i][j]);\n\t\t\tfor (const color of colors) {\n\t\t\t\tif (royalPieceSet[color].length === 0) {\n\t\t\t\t\tresultingMedianArray[color] = undefined;\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tlet resultingSquares = 0;\n\t\t\t\t\tfor (let royalI = 0; royalI < boardDimension; royalI++) {\n\t\t\t\t\t\tfor (let royalJ = 0; royalJ < boardDimension; royalJ++) {\n\t\t\t\t\t\t\tconst royalMoveSet = new Uint16Array(royalMoves[color][royalI][royalJ]);\n\t\t\t\t\t\t\tconst result = moves.map((e, x) => e & royalMoveSet[x]);\n\t\t\t\t\t\t\tconst newResultingSquares = countBitsOnBoard(result);\n\n\t\t\t\t\t\t\tif (newResultingSquares > resultingSquares) {\n\t\t\t\t\t\t\t\tresultingSquares = newResultingSquares;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst resultingMedian = resultingMedianArray[color];\n\t\t\t\t\tif (resultingMedian) resultingMedian[i][j] = resultingSquares;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpostMessage(\n\t\tresultingMedianArray.map((arr) => {\n\t\t\tif (arr) {\n\t\t\t\tconst minimum = countMinimumOf2DArrayExcludingZero(arr);\n\t\t\t\treturn minimum === Infinity ? 0 : minimum;\n\t\t\t} else return arr;\n\t\t})\n\t);\n};\n","import type { PieceLetter } from \"@moveGeneration/PieceControl/PieceControlInterface\";\nimport type { InsufficientMaterialState } from \"./InsufficientMaterialConstructor\";\nimport type { BoardSquares } from \"@client/ts/logic/BaseInterfaces\";\nimport type { ImplementInterface, Tuple } from \"@client/ts/baseTypes\";\nimport type { totalPlayers } from \"@moveGeneration/GameInformation/GameData\";\n\ninterface SerializedInsufficientMaterialDraft {\n\treadonly backwardsPieceRegistry: Record<PieceLetter, BoardSquares<number | null>>;\n\treadonly optimizedPieces: PieceLetter[];\n\treadonly pieceSquareMedians: Record<PieceLetter, Record<number, Tuple<number | undefined, typeof totalPlayers>>>;\n}\nexport type SerializedInsufficientMaterialState = ImplementInterface<InsufficientMaterialState, SerializedInsufficientMaterialDraft>;\n\nexport function serializeInsufficientMaterialState(state: InsufficientMaterialState): SerializedInsufficientMaterialState {\n\tconst backwardsPieceRegistry: Record<PieceLetter, BoardSquares<number | null>> = {};\n\tconst counters: Record<symbol, number> = {};\n\n\tlet individualCounter = 0;\n\tlet key: PieceLetter;\n\tfor (key in state.backwardsPieceRegistry) {\n\t\tif (!Object.prototype.hasOwnProperty.call(state.backwardsPieceRegistry, key)) continue;\n\t\tbackwardsPieceRegistry[key] = state.backwardsPieceRegistry[key].map((r) =>\n\t\t\tr.map((e) => {\n\t\t\t\tif (e !== null) {\n\t\t\t\t\tif (e in counters) {\n\t\t\t\t\t\treturn counters[e];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcounters[e] = individualCounter++;\n\t\t\t\t\t\treturn counters[e];\n\t\t\t\t\t}\n\t\t\t\t} else return e;\n\t\t\t})\n\t\t);\n\t}\n\n\tconst pieceSquareMedians: Record<PieceLetter, Record<number, Tuple<number | undefined, typeof totalPlayers>>> = {};\n\tfor (key in state.pieceSquareMedians) {\n\t\tif (!Object.prototype.hasOwnProperty.call(state.pieceSquareMedians, key)) continue;\n\t\tconst result: Record<number, Tuple<number | undefined, typeof totalPlayers>> = {};\n\t\tfor (const symbol of Object.getOwnPropertySymbols(state.pieceSquareMedians[key])) {\n\t\t\tif (symbol in counters) {\n\t\t\t\tresult[counters[symbol]] = state.pieceSquareMedians[key][symbol];\n\t\t\t} else result[individualCounter--] = state.pieceSquareMedians[key][symbol];\n\t\t}\n\t\tpieceSquareMedians[key] = result;\n\t}\n\n\treturn {\n\t\t...state,\n\t\tbackwardsPieceRegistry,\n\t\tpieceSquareMedians,\n\t\toptimizedPieces: [...state.optimizedPieces]\n\t};\n}\n\nexport function deserializeInsufficientMaterialState(state: SerializedInsufficientMaterialState): InsufficientMaterialState {\n\tconst backwardsPieceRegistry: Record<PieceLetter, BoardSquares<symbol | null>> = {};\n\tconst counters: Record<PieceLetter, Record<number, symbol>> = {};\n\tlet key: PieceLetter;\n\tfor (key in state.backwardsPieceRegistry) {\n\t\tif (!Object.prototype.hasOwnProperty.call(state.backwardsPieceRegistry, key)) continue;\n\t\tcounters[key] = {};\n\t\tbackwardsPieceRegistry[key] = state.backwardsPieceRegistry[key].map((r) =>\n\t\t\tr.map((e) => {\n\t\t\t\tif (e !== null) {\n\t\t\t\t\tif (!(e in counters[key])) counters[key][e] = Symbol();\n\t\t\t\t\treturn counters[key][e];\n\t\t\t\t} else return e;\n\t\t\t})\n\t\t);\n\t}\n\n\tconst pieceSquareMedians: Record<PieceLetter, Record<symbol, Tuple<number | undefined, typeof totalPlayers>>> = {};\n\tfor (key in state.pieceSquareMedians) {\n\t\tif (!Object.prototype.hasOwnProperty.call(state.pieceSquareMedians, key)) continue;\n\t\tconst result: Record<symbol, Tuple<number | undefined, typeof totalPlayers>> = {};\n\t\tfor (const numericKey in state.pieceSquareMedians[key]) {\n\t\t\tif (!Object.prototype.hasOwnProperty.call(state.pieceSquareMedians[key], numericKey)) continue;\n\t\t\tconst indexingNumber = Number(numericKey);\n\t\t\tif (key in counters && indexingNumber in counters[key]) {\n\t\t\t\tresult[counters[key][indexingNumber]] = state.pieceSquareMedians[key][indexingNumber];\n\t\t\t} else result[Symbol()] = state.pieceSquareMedians[key][indexingNumber];\n\t\t}\n\t\tpieceSquareMedians[key] = result;\n\t}\n\n\treturn {\n\t\t...state,\n\t\tbackwardsPieceRegistry,\n\t\tpieceSquareMedians,\n\t\toptimizedPieces: new Set(state.optimizedPieces)\n\t};\n}\n","import { boardDimension } from \"@moveGeneration/GameInformation/GameData\";\nimport { PieceLetter, verifyPieceLetter } from \"@moveGeneration/PieceControl/PieceControlInterface\";\nimport { bitCount } from \"@utils/NumberUtils\";\n\nexport const binaryMasks = Array(boardDimension)\n\t.fill(1)\n\t.map((v, i) => (v << boardDimension) | (v << (boardDimension - 1 - i)));\nexport const oneBitMask = 1 << boardDimension;\n\nexport function countBitsOnBoard(board: Uint16Array): number {\n\tlet setBits = 0;\n\tfor (let x = 0; x < boardDimension; x++) {\n\t\tsetBits += bitCount(board[x] ^ oneBitMask);\n\t}\n\n\treturn setBits;\n}\n\nexport function findMinimumOnBoardSquares(board: Uint16Array[][]): number {\n\tlet minimum = Infinity;\n\tfor (let i = 0; i < boardDimension; i++) {\n\t\tfor (let j = 0; j < boardDimension; j++) {\n\t\t\tconst setBits = countBitsOnBoard(board[i][j]);\n\t\t\tif (setBits !== 0 && setBits < minimum) {\n\t\t\t\tminimum = setBits;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn minimum;\n}\n\nexport function optimizePieceSet(possiblePieces: string[], maximumTarget: boolean): Set<PieceLetter> {\n\tconst optimalRoyalMoveSets = [\n\t\t[\"β\", \"W\", \"R\", \"E\", \"M\", \"Q\", \"D\", \"A\"],\n\t\t[\"γ\", \"F\", \"B\", \"H\", \"M\", \"Q\", \"D\", \"A\", \"Δ\"],\n\t\t[\"Y\", \"Z\"],\n\t\t[\"I\", \"J\"],\n\t\t[\"S\", \"T\"],\n\t\t[\"S\", \"Y\"],\n\t\t[\"I\", \"Y\"],\n\t\t[\"U\", \"N\", \"O\"],\n\t\t[\"H\", \"A\"],\n\t\t[\"E\", \"A\"],\n\t\t[\"Δ\", \"H\"],\n\t\t[\"C\", \"L\"],\n\t\t[\"C\", \"V\"]\n\t];\n\tconst moveSet = new Set<PieceLetter>();\n\tfor (const optimalMoveSet of optimalRoyalMoveSets) {\n\t\tconst detractionSet = maximumTarget ? optimalMoveSet.slice().reverse() : optimalMoveSet;\n\t\tfor (const piece of possiblePieces) {\n\t\t\tif (detractionSet.includes(piece)) {\n\t\t\t\tconst target = detractionSet.slice(0, -detractionSet.indexOf(piece));\n\t\t\t\ttarget.forEach((t) => {\n\t\t\t\t\tif (possiblePieces.includes(t) && verifyPieceLetter(t)) moveSet.add(t);\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (moveSet.size === 0) {\n\t\tpossiblePieces.forEach((p) => {\n\t\t\tif (verifyPieceLetter(p)) moveSet.add(p);\n\t\t});\n\t}\n\n\treturn moveSet;\n}\n","import { boardDimension } from \"@moveGeneration/GameInformation/GameData\";\nimport type { Coordinate } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport { pieceControlConfigSettings } from \"@moveGeneration/PieceControl/PieceControlInterface\";\nimport { FENData } from \"../../../FENData/FENData\";\nimport type { MoveData } from \"../../../MoveTree/MoveTreeInterface\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\nimport { RoyalsCannotCapture } from \"../PieceControlDecorators/RoyalsCannotCapture\";\nimport { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\n\nconst tag = \"atomic\";\nexport class Atomic extends VariantRule<typeof FENData, typeof tag> implements VariantRuleHandler<FENData> {\n\tstatic {\n\t\tVariantRule.initVariantRule(Atomic);\n\t}\n\treadonly dependencies = new Map([[RoyalsCannotCapture, []]]);\n\n\tstatic readonly atomicCoordinates: Coordinate[] = [\n\t\t[-1, -1],\n\t\t[-1, 0],\n\t\t[0, -1],\n\t\t[-1, 1],\n\t\t[1, -1],\n\t\t[1, 0],\n\t\t[0, 1],\n\t\t[1, 1]\n\t];\n\n\tgetDecoratorType() {\n\t\treturn FENData;\n\t}\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Atomic\",\n\t\t\t\tdescription: \"Captures cause all surrounding pieces except pawns to explode\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.extending,\n\t\t\t\tdisplayIcon: chessGlyphIndex.atomic\n\t\t\t}\n\t\t} as const;\n\t}\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\treturn /^Atomic$/i.test(match);\n\t}\n\tserializeToParsingForm(): string {\n\t\treturn \"Atomic\";\n\t}\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\tisComplexEvaluation(): boolean {\n\t\treturn true;\n\t}\n\n\tgetCapturedPieces(moveData: MoveData): Coordinate[] {\n\t\tconst baseCoordinates = this.callHandler(\"getCapturedPieces\", arguments);\n\t\tconst addCoordinate = (disI: number, disJ: number) => {\n\t\t\tconst coordinateI = moveData.endCoordinates[0] + disI;\n\t\t\tconst coordinateJ = moveData.endCoordinates[1] + disJ;\n\t\t\tif (coordinateI >= 0 && coordinateI <= boardDimension && coordinateJ >= 0 && coordinateJ <= boardDimension) {\n\t\t\t\tconst pieceString = this.decorator.board.board[coordinateI][coordinateJ];\n\t\t\t\tif (\n\t\t\t\t\t(pieceString.isPiece() || pieceString.isDead()) &&\n\t\t\t\t\t!pieceControlConfigSettings[pieceString.piece].moveGenerationSettings.isPawn\n\t\t\t\t) {\n\t\t\t\t\tbaseCoordinates.push([coordinateI, coordinateJ]);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tif (baseCoordinates.length !== 0) {\n\t\t\tfor (const [i, j] of Atomic.atomicCoordinates) {\n\t\t\t\taddCoordinate(i, j);\n\t\t\t}\n\t\t\tbaseCoordinates.push([...moveData.startCoordinates]);\n\t\t}\n\n\t\treturn baseCoordinates;\n\t}\n}\n","import type { PlayerBooleanTuple } from \"@moveGeneration/Board/Board\";\nimport { FENData } from \"@moveGeneration/FENData/FENData\";\nimport { totalPlayers, VariantType } from \"@moveGeneration/GameInformation/GameData\";\nimport { verifyNumericColor } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport { createPieceFromData, deadColorIndex } from \"@moveGeneration/GameInformation/GameUnits/PieceString\";\nimport { InternalMove, InternalMoveSignature } from \"@moveGeneration/MoveTree/MoveTreeInterface\";\nimport { pieceControlConfigSettings } from \"@moveGeneration/PieceControl/PieceControlInterface\";\nimport { VariantRule } from \"@moveGeneration/VariantRules/VariantRule\";\nimport { VariantRuleAllowedChecks, variantRuleColors, VariantRuleHandler } from \"@moveGeneration/VariantRules/VariantRuleInterface\";\n\nconst tag = \"deadKingWalking\";\nexport class DeadKingWalking extends VariantRule<typeof FENData, typeof tag> implements VariantRuleHandler<FENData> {\n\tstatic {\n\t\tVariantRule.initVariantRule(DeadKingWalking);\n\t}\n\n\tgetDecoratorType() {\n\t\treturn FENData;\n\t}\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Zombies\",\n\t\t\t\tdescription: \"Resigned players are controlled by a bot\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.autogenous,\n\t\t\t\tdisplayIcon: \"\"\n\t\t\t}\n\t\t} as const;\n\t}\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\treturn /^DeadKingWalking$/i.test(match);\n\t}\n\tserializeToParsingForm(): string {\n\t\treturn \"DeadKingWalking\";\n\t}\n\tisDisabled({ variantDataRules, gameType, fenTags }: VariantRuleAllowedChecks): boolean {\n\t\treturn (\n\t\t\tgameType === VariantType.Teams ||\n\t\t\tfenTags.dead.value.reduce((p, n, i) => p + Number(n || fenTags.resigned.value[i]), 0) <= totalPlayers - 1 ||\n\t\t\t(variantDataRules.pointsForMate !== false && variantDataRules.pointsForMate < 6)\n\t\t);\n\t}\n\n\tprocessInternalMove(internalMove: InternalMove): { stalemates: PlayerBooleanTuple } {\n\t\tif (\n\t\t\tinternalMove.type === InternalMoveSignature.Resign ||\n\t\t\tinternalMove.type === InternalMoveSignature.ClaimWin ||\n\t\t\tinternalMove.type === InternalMoveSignature.Timeout\n\t\t) {\n\t\t\tconst { sideToMove, fenOptions, board } = this.decorator;\n\t\t\tconst dead = fenOptions.tag(\"dead\"),\n\t\t\t\tresigned = fenOptions.tag(\"resigned\");\n\n\t\t\tresigned[sideToMove] = true;\n\t\t\tdead[sideToMove] = true;\n\n\t\t\tfor (const coordinate of board.getPlayerPieces()[sideToMove]) {\n\t\t\t\tconst piece = board.board[coordinate[0]][coordinate[1]].piece;\n\t\t\t\tif (pieceControlConfigSettings[piece].moveGenerationSettings.isPawn) {\n\t\t\t\t\tboard.board[coordinate[0]][coordinate[1]] = createPieceFromData(deadColorIndex, piece);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst deadPlayers = dead.map((d, i) => d || resigned[i]).filter(Boolean);\n\t\t\tif (deadPlayers.length === totalPlayers - 1) {\n\t\t\t\tconst alivePlayer = deadPlayers.findIndex((d) => !d);\n\t\t\t\tif (verifyNumericColor(alivePlayer)) {\n\t\t\t\t\tthis.decorator.assignPoints(\n\t\t\t\t\t\talivePlayer,\n\t\t\t\t\t\tthis.decorator.countTotalPointsOnBoard().reduce((p, n, i) => p + (i === alivePlayer ? n : 0), 0)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn { stalemates: [false, false, false, false] };\n\t\t} else return this.callHandler(\"processInternalMove\", arguments);\n\t}\n}\n","import { MoveData, SpecialMove } from \"../../../MoveTree/MoveTreeInterface\";\nimport { FENData } from \"../../../FENData/FENData\";\nimport { emptyPieceString, PieceString } from \"../../../GameInformation/GameUnits/PieceString\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\nimport { pieceControlConfigSettings } from \"@moveGeneration/PieceControl/PieceControlInterface\";\nimport { Coordinate, nonPlayablePieces } from \"../../../GameInformation/GameUnits/GameUnits\";\nimport { assertNonUndefined } from \"@client/ts/baseTypes\";\nimport { isVerticalPlacement } from \"@client/ts/logic/BaseInterfaces\";\nimport { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\n\nconst tag = \"enPassant\";\nexport class EnPassant extends VariantRule<typeof FENData, typeof tag> implements VariantRuleHandler<FENData> {\n\tstatic {\n\t\tVariantRule.initVariantRule(EnPassant);\n\t}\n\n\tgetDecoratorType() {\n\t\treturn FENData;\n\t}\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"En Passant\",\n\t\t\t\tdescription: \"Pawns can capture en passant\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.minor,\n\t\t\t\tdisplayIcon: chessGlyphIndex.pawnConnection\n\t\t\t}\n\t\t} as const;\n\t}\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\treturn /^EnPassant$/i.test(match);\n\t}\n\tserializeToParsingForm(): string {\n\t\treturn \"EnPassant\";\n\t}\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\tprocessStandardMove(moveData: MoveData): { endPiece: PieceString[] } {\n\t\tconst enPassants = this.decorator.fenOptions.tag(\"enPassant\");\n\t\tconst {\n\t\t\tstartCoordinates: [startI, startJ],\n\t\t\tendCoordinates: [endI, endJ]\n\t\t} = moveData;\n\t\tif (moveData.specialType === SpecialMove.EnPassant) {\n\t\t\tconst eligibleEnPassants: number[] = [];\n\t\t\tenPassants.forEach((e, i) => {\n\t\t\t\tif (!e) return;\n\t\t\t\tif (e[0][0] === endI && e[0][1] === endJ) eligibleEnPassants.push(i);\n\t\t\t});\n\t\t\tfor (const enPassantCoordinate of eligibleEnPassants) {\n\t\t\t\tconst enPassant = enPassants[enPassantCoordinate];\n\t\t\t\tassertNonUndefined(enPassant);\n\t\t\t\tthis.decorator.board.board[enPassant[1][0]][enPassant[1][1]] = emptyPieceString;\n\t\t\t\tenPassants[enPassantCoordinate] = null;\n\t\t\t}\n\t\t} else {\n\t\t\tconst pieceString = this.decorator.board.board[startI][startJ];\n\n\t\t\tif (!pieceString.isEmpty() && pieceString.piece !== nonPlayablePieces.duck) {\n\t\t\t\tenPassants[this.decorator.sideToMove] = null;\n\t\t\t\tconst setting = pieceControlConfigSettings[pieceString.piece];\n\t\t\t\tif (\n\t\t\t\t\tsetting.moveGenerationSettings.isPawn &&\n\t\t\t\t\tMath.abs(isVerticalPlacement(this.decorator.sideToMove) ? startI - endI : startJ - endJ) === 2\n\t\t\t\t) {\n\t\t\t\t\tconst enPassantInfo: [Coordinate, Coordinate] = [\n\t\t\t\t\t\t[Math.ceil((startI + endI) / 2), Math.ceil((startJ + endJ) / 2)],\n\t\t\t\t\t\t[endI, endJ]\n\t\t\t\t\t];\n\t\t\t\t\tenPassants[this.decorator.sideToMove] = enPassantInfo;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.callHandler(\"processStandardMove\", arguments);\n\t}\n}\n","import { createTuple } from \"../../../../../baseTypes\";\nimport { FENData } from \"../../../FENData/FENData\";\nimport type { PostMoveResults } from \"../../../FENData/FENDataInterface\";\nimport { totalPlayers } from \"../../../GameInformation/GameData\";\nimport { createPieceFromData, deadColorIndex } from \"../../../GameInformation/GameUnits/PieceString\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\nimport { RoyalsCannotCapture } from \"../PieceControlDecorators/RoyalsCannotCapture\";\nimport { pieceControlConfigSettings } from \"@moveGeneration/PieceControl/PieceControlInterface\";\nimport { MoveComponent, verifyStandardMove } from \"../../../MoveTree/MoveTreeInterface\";\nimport type { Coordinate } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\n\nconst tag = \"fatalCapture\";\nexport class FatalCapture extends VariantRule<typeof FENData, typeof tag> implements VariantRuleHandler<FENData> {\n\tstatic {\n\t\tVariantRule.initVariantRule(FatalCapture);\n\t}\n\treadonly dependencies = new Map([[RoyalsCannotCapture, []]]);\n\n\tgetDecoratorType() {\n\t\treturn FENData;\n\t}\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Fatal Capture\",\n\t\t\t\tdescription: \"Pieces (but not pawns) die when they capture\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.extending,\n\t\t\t\tdisplayIcon: chessGlyphIndex.trashBin\n\t\t\t}\n\t\t} as const;\n\t}\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\treturn /^FatalCapture$/i.test(match);\n\t}\n\tserializeToParsingForm(): string {\n\t\treturn \"FatalCapture\";\n\t}\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\taffectOptions(move: MoveComponent): PostMoveResults {\n\t\tlet endCaptureCoordinates: Coordinate | undefined;\n\t\tif (verifyStandardMove(move)) {\n\t\t\tconst {\n\t\t\t\tstartCoordinates: [startI, startJ],\n\t\t\t\tendCoordinates: [endI, endJ]\n\t\t\t} = move;\n\t\t\tconst isCapture = this.decorator.board.board[endI][endJ].isPiece();\n\t\t\tconst royal = this.decorator.fenOptions.tag(\"royal\")[this.decorator.sideToMove];\n\t\t\tif (royal && startI === royal[0] && startJ === royal[1] && isCapture) {\n\t\t\t\treturn {\n\t\t\t\t\tcheckmates: this.decorator.board.gameType.getBaseColors(this.decorator.sideToMove),\n\t\t\t\t\tchecks: createTuple(false, totalPlayers),\n\t\t\t\t\tstalemates: createTuple(false, totalPlayers)\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tendCaptureCoordinates = isCapture ? move.endCoordinates : undefined;\n\t\t}\n\n\t\tconst returnType = this.callHandler(\"affectOptions\", arguments);\n\t\tif (endCaptureCoordinates) {\n\t\t\tconst pieceString = this.decorator.board.board[endCaptureCoordinates[0]][endCaptureCoordinates[1]];\n\t\t\tif (!pieceControlConfigSettings[pieceString.piece].moveGenerationSettings.isPawn) {\n\t\t\t\tthis.decorator.board.board[endCaptureCoordinates[0]][endCaptureCoordinates[1]] = createPieceFromData(\n\t\t\t\t\tdeadColorIndex,\n\t\t\t\t\tthis.decorator.board.board[endCaptureCoordinates[0]][endCaptureCoordinates[1]].piece\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn returnType;\n\t}\n}\n","import { FENData } from \"../../../FENData/FENData\";\nimport type { PostMoveResults } from \"../../../FENData/FENDataInterface\";\nimport { totalPlayers } from \"../../../GameInformation/GameData\";\nimport type { PieceString } from \"../../../GameInformation/GameUnits/PieceString\";\nimport type { MoveComponent, MoveData } from \"../../../MoveTree/MoveTreeInterface\";\nimport { VariantRule } from \"../../VariantRule\";\nimport type { VariantRuleHandler } from \"../../VariantRuleInterface\";\n\nconst tag = \"fiftyMoveRule\";\nexport class FiftyMoveRule extends VariantRule<typeof FENData, typeof tag> implements VariantRuleHandler<FENData> {\n\tstatic {\n\t\tVariantRule.initVariantRule(FiftyMoveRule);\n\t}\n\tprivate totalFullMoves: number;\n\n\tconstructor(fullMoves?: unknown) {\n\t\tsuper();\n\t\tif (typeof fullMoves === \"number\" && fullMoves > 0) {\n\t\t\tthis.totalFullMoves = fullMoves;\n\t\t} else {\n\t\t\tthis.totalFullMoves = 50;\n\t\t}\n\t}\n\n\tgetDecoratorType() {\n\t\treturn FENData;\n\t}\n\n\tgetPublicProperties() {\n\t\tconst isDisabled = this.totalFullMoves === Infinity;\n\t\treturn {\n\t\t\tparameterValue: this.totalFullMoves,\n\t\t\tinformation: {\n\t\t\t\tname: \"N Move Rule\",\n\t\t\t\ttextualForm: \"\",\n\t\t\t\tdescription: isDisabled\n\t\t\t\t\t? \"50 move rule disabled\"\n\t\t\t\t\t: `After ${this.totalFullMoves} full moves without captures or pawn pushes game is over`,\n\t\t\t\ttag\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string) {\n\t\tconst matchArray = match.match(/^FiftyMoveRule=((?:\\d+)|(?:Infinity))$/i);\n\t\tif (matchArray) {\n\t\t\tthis.totalFullMoves = Number(matchArray[1]);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn `FiftyMoveRule=${this.totalFullMoves}`;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\tgetParametrizedOptions() {\n\t\tconst options = new Map<string, number>();\n\t\tfor (const value of [50, 150, 200, 25, 10]) options.set(`${value} Move rule`, value);\n\t\toptions.set(\"Unlimited\", Infinity);\n\t\treturn options;\n\t}\n\n\tprocessStandardMove(moveData: MoveData): { endPiece: PieceString[] } {\n\t\tif (this.decorator.getCapturedPieces(moveData).length > 0) {\n\t\t\tthis.decorator.plyCount = 0;\n\t\t}\n\n\t\treturn this.callHandler(\"processStandardMove\", arguments);\n\t}\n\n\taffectOptions(move: MoveComponent): PostMoveResults {\n\t\tconst results = this.callHandler(\"affectOptions\", arguments);\n\t\tif (move.isIrreversible) {\n\t\t\tthis.decorator.plyCount = 0;\n\t\t} else {\n\t\t\tthis.decorator.plyCount++;\n\t\t}\n\n\t\tconst alivePlayers = totalPlayers - this.decorator.fenOptions.tag(\"dead\").filter(Boolean).length;\n\t\tif (alivePlayers > 0 && Math.floor(this.decorator.plyCount / alivePlayers) > this.totalFullMoves) {\n\t\t\tthis.decorator.assignGeneralTermination(\"50-move Rule\");\n\t\t\tthis.injectIntoBaseClass(function (this: FENData) {\n\t\t\t\tthis.spreadPointsBetweenPlayersEvenly();\n\t\t\t})();\n\t\t}\n\n\t\treturn results;\n\t}\n}\n","import type { NumericColor } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport { FENData } from \"../../../FENData/FENData\";\nimport type { PostMoveResults } from \"../../../FENData/FENDataInterface\";\nimport { totalPlayers } from \"../../../GameInformation/GameData\";\nimport type { PieceString } from \"../../../GameInformation/GameUnits/PieceString\";\nimport type { MoveData } from \"../../../MoveTree/MoveTreeInterface\";\nimport { VariantRule } from \"../../VariantRule\";\nimport {\n\tAllowedSuperClasses,\n\tVariantDataRules,\n\tVariantRuleAllowedChecks,\n\tvariantRuleColors,\n\tVariantRuleHandler\n} from \"../../VariantRuleInterface\";\nimport { ForcedCapture } from \"../BoardDecorators/ForcedCapture\";\nimport { StalemateOptions, stalemateOptionsValues } from \"./StalemateOptions\";\nimport { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\n\nconst tag = \"giveaway\";\nexport class Giveaway extends VariantRule<typeof FENData, typeof tag> implements VariantRuleHandler<FENData> {\n\tstatic {\n\t\tVariantRule.initVariantRule(Giveaway);\n\t}\n\tprivate static readonly pointsForPiece = 3;\n\tprivate static readonly stalematePoints = {\n\t\t[1]: 200,\n\t\t[2]: 400,\n\t\t[3]: 600\n\t};\n\treadonly dependencies = new Map<new (...args: unknown[]) => VariantRule<AllowedSuperClasses, keyof VariantDataRules>, unknown[]>([\n\t\t[ForcedCapture, []],\n\t\t[StalemateOptions, [stalemateOptionsValues.stalemateWins]]\n\t]);\n\n\tprivate initiallyAliveColors = totalPlayers;\n\n\tgetDecoratorType() {\n\t\treturn FENData;\n\t}\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Giveaway\",\n\t\t\t\tdescription: \"First to lose all pieces or stalemate wins\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.widespread,\n\t\t\t\tdisplayIcon: chessGlyphIndex.gift\n\t\t\t}\n\t\t} as const;\n\t}\n\tmatchesPGNDeclaration(match: string) {\n\t\treturn /^Giveaway$/i.test(match);\n\t}\n\tserializeToParsingForm(): string {\n\t\treturn \"Giveaway\";\n\t}\n\tisDisabled({ variantDataRules }: VariantRuleAllowedChecks): boolean {\n\t\treturn variantDataRules.taboo;\n\t}\n\n\tinitDecoratorSettings() {\n\t\tthis.decorator.fenOptions.setTag(\"royal\", [null, null, null, null]);\n\t\tthis.initiallyAliveColors = this.decorator.fenOptions\n\t\t\t.tag(\"dead\")\n\t\t\t.map((d, i) => d || this.decorator.fenOptions.tag(\"resigned\")[i])\n\t\t\t.filter(Boolean).length;\n\n\t\tfor (const decorator of this.wrappingDecorators) decorator.initDecoratorSettings?.();\n\t}\n\n\tprocessStandardMove(moveData: MoveData): { endPiece: PieceString[] } {\n\t\tconst capturedPieces = this.decorator.getCapturedPieces(moveData);\n\t\tconst board = this.decorator.board.board;\n\t\tfor (const capturedPiece of capturedPieces) {\n\t\t\tconst pieceString = board[capturedPiece[0]][capturedPiece[1]];\n\t\t\tif (pieceString.isPiece()) {\n\t\t\t\tthis.assignPoints(pieceString.color, Giveaway.pointsForPiece, true);\n\t\t\t}\n\t\t}\n\n\t\tthis.callHandler(\"processStandardMove\", arguments);\n\t\treturn { endPiece: [] };\n\t}\n\n\taffectOptions(): PostMoveResults {\n\t\tconst returnType = this.callHandler(\"affectOptions\", arguments);\n\t\tthis.decorator.fenOptions.setTag(\"royal\", [null, null, null, null]);\n\t\treturn returnType;\n\t}\n\n\tobtainPointsForMate(): number {\n\t\t// Checkmates do not exist, so the only scenario in which this gets called is stalemate\n\t\tconst aliveColors = this.decorator.fenOptions.tag(\"dead\").filter(Boolean).length;\n\t\tswitch (aliveColors) {\n\t\t\tcase 1:\n\t\t\t\tif (this.initiallyAliveColors === totalPlayers) {\n\t\t\t\t\treturn Giveaway.stalematePoints[1];\n\t\t\t\t}\n\t\t\t// * Fallthrough\n\t\t\tcase 2:\n\t\t\t\tif (this.initiallyAliveColors >= totalPlayers - 1) {\n\t\t\t\t\treturn Giveaway.stalematePoints[2];\n\t\t\t\t}\n\t\t\t// * Fallthrough\n\t\t\tcase 3:\n\t\t\t\treturn Giveaway.stalematePoints[3];\n\t\t\tdefault:\n\t\t\t\tconsole.error(`Unexpected players length ${aliveColors}`);\n\t\t\t\treturn 0;\n\t\t}\n\t}\n\n\tassignPoints(sideToMove: NumericColor, points: number, isGiveawayAssigned = false) {\n\t\tif (isGiveawayAssigned) {\n\t\t\tfor (const decorator of this.wrappingDecorators) {\n\t\t\t\tif (decorator.assignPoints) {\n\t\t\t\t\tdecorator.assignPoints(sideToMove, points);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tFENData.prototype.assignPoints.call(this.decorator, sideToMove, points);\n\t\t}\n\t}\n}\n","import { compareArrays } from \"@client/ts/utils/ArrayUtils\";\nimport { compareCoordinates } from \"../../../Board/BoardInterface\";\nimport { FENData } from \"../../../FENData/FENData\";\nimport { PostMoveResults } from \"../../../FENData/FENDataInterface\";\nimport { colors, convertCoordinateToPGN4, getPlayerNameFromColor } from \"../../../GameInformation/GameData\";\nimport { InternalMoveSignature } from \"../../../MoveTree/MoveTreeInterface\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\nimport type { Coordinate } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport { parseSingleCoordinate } from \"@client/ts/logic/utils/Tags/Utils\";\nimport { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\n\nconst tag = \"kingOfTheHill\";\nexport class KingOfTheHill extends VariantRule<typeof FENData, typeof tag> implements VariantRuleHandler<FENData> {\n\tstatic {\n\t\tVariantRule.initVariantRule(KingOfTheHill);\n\t}\n\tprivate static readonly defaultCoordinates: Coordinate[] = [\n\t\t[7, 7],\n\t\t[7, 6],\n\t\t[6, 7],\n\t\t[6, 6]\n\t];\n\tprivate static readonly defaultRoyal = \"K\";\n\n\tprivate hillSquares: Coordinate[];\n\n\tconstructor(hillSquares?: unknown) {\n\t\tsuper();\n\t\tif (\n\t\t\tArray.isArray(hillSquares) &&\n\t\t\thillSquares.every<Coordinate>((c): c is Coordinate => Array.isArray(c) && c.length === 2 && c.every((n) => typeof n === \"number\"))\n\t\t) {\n\t\t\tthis.hillSquares = hillSquares;\n\t\t} else {\n\t\t\tthis.hillSquares = KingOfTheHill.defaultCoordinates;\n\t\t}\n\t}\n\n\tgetDecoratorType() {\n\t\treturn FENData;\n\t}\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: this.hillSquares,\n\t\t\tinformation: {\n\t\t\t\tname: \"King of the Hill\",\n\t\t\t\tdescription: \"A king reaching the hill will checkmate all opponents\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.autogenous,\n\t\t\t\tdisplayIcon: chessGlyphIndex.kingOfTheHill\n\t\t\t}\n\t\t} as const;\n\t}\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\tconst matchArray = match.toLowerCase().match(/^KotH(?:=(.+))?$/i);\n\t\tif (matchArray) {\n\t\t\tif (matchArray[1]) {\n\t\t\t\tconst coordinatesArray: Coordinate[] = [];\n\t\t\t\tconst presumedOption = matchArray[1].split(\",\");\n\t\t\t\tfor (const coordinate of presumedOption) {\n\t\t\t\t\tconst parsedCoordinate = parseSingleCoordinate(coordinate);\n\t\t\t\t\tif (parsedCoordinate) {\n\t\t\t\t\t\tcoordinatesArray.push(parsedCoordinate);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (coordinatesArray.length > 0) {\n\t\t\t\t\tthis.hillSquares = coordinatesArray;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\tserializeToParsingForm(): string {\n\t\tif (compareArrays(this.hillSquares, KingOfTheHill.defaultCoordinates)) {\n\t\t\treturn \"KotH\";\n\t\t} else {\n\t\t\treturn `KotH=${this.hillSquares.map((c) => convertCoordinateToPGN4(c)).join(\",\")}`;\n\t\t}\n\t}\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\tgetInsufficientMaterialData() {\n\t\treturn {\n\t\t\tisPartiallyDisabled: true,\n\t\t\tisDisabled: true\n\t\t} as const;\n\t}\n\n\taffectOptions(): PostMoveResults {\n\t\tconst { board, sideToMove, fenOptions } = this.decorator;\n\t\tconst returnValues = this.callHandler(\"affectOptions\", arguments);\n\n\t\tconst royal = fenOptions.tag(\"royal\")[sideToMove],\n\t\t\tdead = fenOptions.tag(\"dead\"),\n\t\t\twb = fenOptions.tag(\"wb\");\n\t\tif (\n\t\t\tboard.variantData.giveaway &&\n\t\t\tthis.hillSquares.some((c) => {\n\t\t\t\tconst pieceString = board.board[c[0]][c[1]];\n\t\t\t\treturn pieceString.isPiece() && pieceString.piece === KingOfTheHill.defaultRoyal;\n\t\t\t})\n\t\t) {\n\t\t\tthis.decorator.processInternalMove({ type: InternalMoveSignature.Stalemate });\n\t\t\treturnValues.stalemates[sideToMove] = true;\n\t\t} else if (royal && this.hillSquares.some((c) => compareCoordinates(c, royal))) {\n\t\t\tconst pointsForMate = this.decorator.obtainPointsForMate();\n\t\t\tfor (const color of colors) {\n\t\t\t\tif (color === sideToMove) continue;\n\t\t\t\tif (!dead[color]) {\n\t\t\t\t\tdead[color] = true;\n\t\t\t\t\tthis.decorator.assignPoints(sideToMove, pointsForMate);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.decorator.board.variantData.taboo) {\n\t\t\t\tthis.decorator.gameOver = `${getPlayerNameFromColor(sideToMove, wb).toUpperCase()} WON THE RACE!`;\n\t\t\t} else {\n\t\t\t\tthis.decorator.assignGeneralTermination(\"King of the Hill\");\n\t\t\t}\n\t\t}\n\n\t\treturn returnValues;\n\t}\n}\n","import { createTuple, Tuple, verifyTupleType } from \"@client/ts/baseTypes\";\nimport { compareCoordinates } from \"../../../Board/BoardInterface\";\nimport { FENData } from \"../../../FENData/FENData\";\nimport { createDefaultFENEffectSettings, PostMoveResults } from \"../../../FENData/FENDataInterface\";\nimport { colors, totalPlayers } from \"../../../GameInformation/GameData\";\nimport { MoveComponent, verifyStandardMove } from \"../../../MoveTree/MoveTreeInterface\";\nimport { VariantRule } from \"../../VariantRule\";\nimport type { VariantRuleAllowedChecks, VariantRuleHandler } from \"../../VariantRuleInterface\";\n\nconst tag = \"nCheck\";\nexport class NCheck extends VariantRule<typeof FENData, typeof tag> implements VariantRuleHandler<FENData> {\n\tstatic {\n\t\tVariantRule.initVariantRule(NCheck);\n\t}\n\tprivate defaultChecks: Tuple<number, typeof totalPlayers>;\n\tconstructor(defaultChecks?: unknown) {\n\t\tsuper();\n\t\tif (\n\t\t\tArray.isArray(defaultChecks) &&\n\t\t\tverifyTupleType(defaultChecks, totalPlayers) &&\n\t\t\tdefaultChecks.every<number>((check): check is number => typeof check === \"number\")\n\t\t) {\n\t\t\tthis.defaultChecks = defaultChecks;\n\t\t} else {\n\t\t\tthis.defaultChecks = createTuple(3, totalPlayers);\n\t\t}\n\t}\n\n\tgetDecoratorType() {\n\t\treturn FENData;\n\t}\n\tgetPublicProperties() {\n\t\tconst checks = this.defaultChecks\n\t\t\t.filter(Boolean)\n\t\t\t.reduce((p, n, i, arr) => p + (arr[i - 1] === arr[i] ? \"\" : `-${n}`), \"\")\n\t\t\t.slice(1);\n\t\treturn {\n\t\t\tparameterValue: this.defaultChecks,\n\t\t\tinformation: {\n\t\t\t\tname: `N-Check`,\n\t\t\t\ttextualForm: `${checks}+`,\n\t\t\t\tdescription: `Checking a king ${checks} times is checkmate`,\n\t\t\t\ttag\n\t\t\t}\n\t\t} as const;\n\t}\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\tconst matchArray = match.toLowerCase().match(/^(\\d\\d?\\d?(?:-\\d\\d?\\d?){0,3})-check$/i);\n\t\tif (matchArray) {\n\t\t\tconst checks = matchArray[1].split(\"-\");\n\t\t\tfor (let i = 0; i <= checks.length; i++) {\n\t\t\t\tif (checks[i]) {\n\t\t\t\t\tthis.defaultChecks[i] = Number(checks[i]);\n\t\t\t\t} else {\n\t\t\t\t\twhile (i !== totalPlayers) {\n\t\t\t\t\t\tthis.defaultChecks[i] = this.defaultChecks[i - 1];\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\tserializeToParsingForm(): string {\n\t\treturn `${this.defaultChecks.join(\"-\")}-check`;\n\t}\n\tisDisabled({ variantDataRules }: VariantRuleAllowedChecks): boolean {\n\t\treturn variantDataRules.giveaway;\n\t}\n\n\tgetInsufficientMaterialData() {\n\t\treturn {\n\t\t\tisPartiallyDisabled: true,\n\t\t\tisDisabled: false\n\t\t} as const;\n\t}\n\n\tgetParametrizedOptions() {\n\t\tconst resultingMap = new Map<string, Tuple<number, typeof totalPlayers> | false>([[\"N+ Off\", false]]);\n\t\tfor (let i = 1; i < 10; i++) resultingMap.set(`${i}+`, createTuple(i, totalPlayers));\n\t\tfor (const value of [12, 15, 20, 30, 50]) resultingMap.set(`${value}+`, createTuple(value, totalPlayers));\n\t\treturn resultingMap;\n\t}\n\n\tinitDecoratorSettings() {\n\t\tconst lives = this.decorator.fenOptions.tag(\"lives\");\n\t\tfor (const color of colors) {\n\t\t\tif (lives[color] === null) {\n\t\t\t\tlives[color] = this.defaultChecks[color];\n\t\t\t}\n\t\t}\n\n\t\tfor (const decorator of this.wrappingDecorators) decorator.initDecoratorSettings?.();\n\t}\n\n\taffectOptions(move: MoveComponent, settings = createDefaultFENEffectSettings()): PostMoveResults {\n\t\tconst { board, sideToMove } = this.decorator;\n\t\tconst currentChecks = board.getCurrentChecks().map((arr) => new Set(arr));\n\t\tconst isNCheckValidated = !settings.ignoreCheckmateChecks && !settings.ignoreNextTurn;\n\t\tconst royal = this.decorator.fenOptions.tag(\"royal\"),\n\t\t\tlives = this.decorator.fenOptions.tag(\"lives\");\n\t\tconst results = this.callHandler(\"affectOptions\", arguments);\n\n\t\tconst isStandardMove = verifyStandardMove(move);\n\t\tif (isNCheckValidated) {\n\t\t\tconst updatedChecks = board.getCurrentChecks(sideToMove);\n\n\t\t\tconst playerChecks = createTuple(0, totalPlayers);\n\t\t\tfor (const color of colors) {\n\t\t\t\tfor (const coordinate of updatedChecks[color]) {\n\t\t\t\t\tconst royalPiece = royal[color];\n\t\t\t\t\tif (\n\t\t\t\t\t\t!currentChecks[color].has(coordinate) ||\n\t\t\t\t\t\t(royalPiece && isStandardMove && compareCoordinates(move.endCoordinates, royalPiece))\n\t\t\t\t\t) {\n\t\t\t\t\t\tplayerChecks[color]++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (lives.every<number>((live): live is number => live !== null)) {\n\t\t\t\tfor (const color of colors) {\n\t\t\t\t\tlives[color] -= playerChecks[color];\n\t\t\t\t\tif (lives[color] <= 0) {\n\t\t\t\t\t\tthis.decorator.assignPoints(sideToMove, this.decorator.obtainPointsForMate());\n\t\t\t\t\t\tthis.decorator.turnPiecesDead(color);\n\t\t\t\t\t\tlives[color] = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.decorator.getRealPlayers() > 1) {\n\t\t\t\tthis.decorator.sideToMove = this.decorator.nextTurn(sideToMove);\n\t\t\t\tboard.pregenerateAttacks();\n\t\t\t}\n\t\t}\n\n\t\treturn results;\n\t}\n}\n","import { FENData } from \"../../../FENData/FENData\";\nimport { getOppositePlacedColor, totalPlayers, VariantType } from \"../../../GameInformation/GameData\";\nimport type { PieceString } from \"../../../GameInformation/GameUnits/PieceString\";\nimport { pieceControlConfigSettings } from \"../../../PieceControl/PieceControlInterface\";\nimport { VariantRule } from \"../../VariantRule\";\nimport type { VariantRuleAllowedChecks, VariantRuleHandler } from \"../../VariantRuleInterface\";\n\nconst tag = \"oppositeMultiplier\";\n\nexport class OppositeMultiplier extends VariantRule<typeof FENData, typeof tag> implements VariantRuleHandler<FENData> {\n\tprivate static readonly MAXIMUM_MULTIPLIER = 6;\n\tstatic {\n\t\tVariantRule.initVariantRule(OppositeMultiplier);\n\t}\n\tprivate oppositeMultiplierValue = 2;\n\n\tgetDecoratorType() {\n\t\treturn FENData;\n\t}\n\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: this.oppositeMultiplierValue,\n\t\t\tinformation: {\n\t\t\t\tname: \"Opposite's piece value\",\n\t\t\t\ttextualForm: `Ox${this.oppositeMultiplierValue}`,\n\t\t\t\tdescription: `Opposite's pieces are worth ${this.oppositeMultiplierValue} times their normal points value until one player is eliminated`,\n\t\t\t\ttag\n\t\t\t}\n\t\t} as const;\n\t}\n\t\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\tconst matchArray = match.toLowerCase().match(/^OppX=(\\d)$/i);\n\t\tif (matchArray) {\n\t\t\tconst numericValue = Number(matchArray[1]);\n\t\t\tif (numericValue <= 0 || numericValue > OppositeMultiplier.MAXIMUM_MULTIPLIER) return false;\n\t\t\tthis.oppositeMultiplierValue = numericValue;\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn `OppX=${this.oppositeMultiplierValue}`;\n\t}\n\n\tisDisabled({ variantDataRules, gameType, fenTags }: VariantRuleAllowedChecks): boolean {\n\t\treturn (\n\t\t\tgameType === VariantType.Teams ||\n\t\t\tvariantDataRules.giveaway ||\n\t\t\tfenTags.dead.value.reduce((p, n, i) => p + Number(n || fenTags.resigned.value[i]), 0) <= totalPlayers - 1\n\t\t);\n\t}\n\n\tgetParametrizedOptions() {\n\t\tconst options = new Map<string, number | false>([[\"Ox Off\", false]]);\n\t\tfor (let i = 1; i <= OppositeMultiplier.MAXIMUM_MULTIPLIER; i++) options.set(`Ox${i}`, i);\n\t\treturn options;\n\t}\n\n\tgetPointsForPiece(pieceString: PieceString): number {\n\t\tconst dead = this.decorator.fenOptions.tag(\"dead\"),\n\t\t\tresigned = this.decorator.fenOptions.tag(\"resigned\");\n\t\tconst aliveColors = dead.map((d, i) => d || resigned[i]).filter(Boolean).length;\n\t\tif (aliveColors === totalPlayers && pieceString.isPiece() && pieceString.color === getOppositePlacedColor(this.decorator.sideToMove)) {\n\t\t\treturn pieceControlConfigSettings[pieceString.piece].points.singlesPoints * this.oppositeMultiplierValue;\n\t\t} else return this.callHandler(\"getPointsForPiece\", arguments);\n\t}\n}\n","import { MoveData, SpecialMove } from \"../../../MoveTree/MoveTreeInterface\";\nimport type { PlayerBooleanTuple } from \"../../../Board/Board\";\nimport { FENData } from \"../../../FENData/FENData\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\nimport { getOppositePlacedColor } from \"../../../GameInformation/GameData\";\nimport { PieceString } from \"@moveGeneration/GameInformation/GameUnits/PieceString\";\n\nconst tag = \"oppositeSideCastling\";\nexport class OppositeSideCastling extends VariantRule<typeof FENData, typeof tag> implements VariantRuleHandler<FENData> {\n\tstatic {\n\t\tVariantRule.initVariantRule(OppositeSideCastling);\n\t}\n\n\tgetDecoratorType() {\n\t\treturn FENData;\n\t}\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Opposite-side Castling\",\n\t\t\t\tdescription: \"Once your opponent has castled, you can only castle to the opposite side\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.minor,\n\t\t\t\tdisplayIcon: \"ὸ\"\n\t\t\t}\n\t\t} as const;\n\t}\n\tmatchesPGNDeclaration(match: string) {\n\t\treturn /^OppositeSideCastling$/i.test(match);\n\t}\n\tserializeToParsingForm(): string {\n\t\treturn \"OppositeSideCastling\";\n\t}\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\tprocessStandardMove(moveData: MoveData): { endPiece: PieceString[] } {\n\t\tconst result = this.callHandler(\"processStandardMove\", arguments);\n\n\t\tif (\"specialType\" in moveData) {\n\t\t\tlet castlingDataReference: PlayerBooleanTuple | undefined;\n\t\t\tif (moveData.specialType === SpecialMove.CastlingKingside) {\n\t\t\t\tcastlingDataReference = this.decorator.fenOptions.tag(\"castleKingside\");\n\t\t\t} else if (moveData.specialType === SpecialMove.CastlingQueenside) {\n\t\t\t\tcastlingDataReference = this.decorator.fenOptions.tag(\"castleQueenside\");\n\t\t\t}\n\n\t\t\tif (castlingDataReference) {\n\t\t\t\tcastlingDataReference[getOppositePlacedColor(this.decorator.sideToMove)] = false;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n}\n","import { FENData } from \"../../../FENData/FENData\";\nimport { PostMoveResults } from \"../../../FENData/FENDataInterface\";\nimport { createPieceFromData, PieceString } from \"../../../GameInformation/GameUnits/PieceString\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\nimport type { PieceLetter } from \"@moveGeneration/PieceControl/PieceControlInterface\";\nimport { MoveComponent, MoveData, verifyInternalMove, verifyStandardMove } from \"../../../MoveTree/MoveTreeInterface\";\nimport { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\n\nconst tag = \"piecesGoToBanks\";\nexport class PiecesGoToBanks extends VariantRule<typeof FENData, typeof tag> implements VariantRuleHandler<FENData> {\n\tgetDecoratorType() {\n\t\treturn FENData;\n\t}\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Bank Captures\",\n\t\t\t\tdescription: \"Captured pieces go to banks\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.extending,\n\t\t\t\tdisplayIcon: chessGlyphIndex.copyToClipboard\n\t\t\t}\n\t\t} as const;\n\t}\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\treturn /^Crazy(?:house|wan)$/i.test(match);\n\t}\n\tserializeToParsingForm(): string {\n\t\treturn \"\";\n\t}\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\tprocessStandardMove(moveData: MoveData): { endPiece: PieceString[] } {\n\t\tconst promotedFrom = this.decorator.fenOptions.tag(\"promotedFrom\");\n\n\t\tif (moveData.promotion) {\n\t\t\tconst pieceLetter = this.decorator.board.board[moveData.startCoordinates[0]][moveData.startCoordinates[1]].piece;\n\t\t\tpromotedFrom.set(moveData.endCoordinates, pieceLetter);\n\t\t} else {\n\t\t\tfor (const [key, value] of promotedFrom) {\n\t\t\t\tif (key[0] === moveData.startCoordinates[0] && key[1] === moveData.endCoordinates[1]) {\n\t\t\t\t\tpromotedFrom.delete(key);\n\t\t\t\t\tpromotedFrom.set(moveData.endCoordinates, value);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.callHandler(\"processStandardMove\", arguments);\n\t}\n\n\taffectOptions(move: MoveComponent): PostMoveResults {\n\t\tconst fenOptions = this.decorator.fenOptions;\n\t\tconst areBanksEnabled = fenOptions.tag(\"areBanksEnabled\"),\n\t\t\tbank = fenOptions.tag(\"bank\"),\n\t\t\tpromotedFrom = fenOptions.tag(\"promotedFrom\");\n\n\t\tif (areBanksEnabled[this.decorator.sideToMove]) {\n\t\t\tif (!verifyInternalMove(move)) {\n\t\t\t\tif (verifyStandardMove(move)) {\n\t\t\t\t\tconst captures = this.decorator.getCapturedPieces(move);\n\t\t\t\t\tconst sideToMove = this.decorator.sideToMove;\n\t\t\t\t\tconst addPieceToBank = (piece: PieceLetter) => {\n\t\t\t\t\t\tfor (const [key, value] of bank[sideToMove]) {\n\t\t\t\t\t\t\tif (key.piece === piece && key.color === sideToMove) {\n\t\t\t\t\t\t\t\tbank[sideToMove].set(key, value + 1);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbank[sideToMove].set(createPieceFromData(sideToMove, piece), 1);\n\t\t\t\t\t};\n\n\t\t\t\t\tcaptures.forEach((c) => {\n\t\t\t\t\t\tfor (const [key, value] of promotedFrom) {\n\t\t\t\t\t\t\tif (key[0] === c[0] && key[1] === c[1]) {\n\t\t\t\t\t\t\t\tpromotedFrom.delete(key);\n\t\t\t\t\t\t\t\taddPieceToBank(value);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\taddPieceToBank(this.decorator.board.board[c[0]][c[1]].piece);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.callHandler(\"affectOptions\", arguments);\n\t}\n}\n","import { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\nimport { FENData } from \"../../../FENData/FENData\";\nimport { totalPlayers, VariantType } from \"../../../GameInformation/GameData\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { VariantRuleAllowedChecks, variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\n\nconst tag = \"playForMate\";\nexport class PlayForMate extends VariantRule<typeof FENData, typeof tag> implements VariantRuleHandler<FENData> {\n\tstatic {\n\t\tVariantRule.initVariantRule(PlayForMate);\n\t}\n\tprivate initiallyAliveColors = totalPlayers;\n\tprivate static readonly checkmatePoints = {\n\t\t[1]: 24,\n\t\t[2]: 32,\n\t\t[3]: 48\n\t};\n\n\tgetDecoratorType() {\n\t\treturn FENData;\n\t}\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Play for mate\",\n\t\t\t\tdescription: \"No points for pieces, only checkmates matter\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.pointsAlternation,\n\t\t\t\tdisplayIcon: chessGlyphIndex.hashtag\n\t\t\t}\n\t\t} as const;\n\t}\n\tmatchesPGNDeclaration(match: string) {\n\t\treturn /^Play4Mate$/i.test(match);\n\t}\n\tserializeToParsingForm(): string {\n\t\treturn \"Play4Mate\";\n\t}\n\tisDisabled({ gameType }: VariantRuleAllowedChecks): boolean {\n\t\treturn gameType === VariantType.Teams;\n\t}\n\n\tinitDecoratorSettings() {\n\t\tthis.initiallyAliveColors = this.decorator.fenOptions\n\t\t\t.tag(\"dead\")\n\t\t\t.map((d, i) => d || this.decorator.fenOptions.tag(\"resigned\")[i])\n\t\t\t.filter(Boolean).length;\n\n\t\tfor (const decorator of this.wrappingDecorators) decorator.initDecoratorSettings?.();\n\t}\n\n\tobtainPointsForMate(): number {\n\t\tconst aliveColors = this.decorator.fenOptions.tag(\"dead\").filter(Boolean).length;\n\t\tswitch (aliveColors) {\n\t\t\tcase 1:\n\t\t\t\tif (this.initiallyAliveColors === totalPlayers) {\n\t\t\t\t\treturn PlayForMate.checkmatePoints[1];\n\t\t\t\t}\n\t\t\t// * Fallthrough\n\t\t\tcase 2:\n\t\t\t\tif (this.initiallyAliveColors >= totalPlayers - 1) {\n\t\t\t\t\treturn PlayForMate.checkmatePoints[2];\n\t\t\t\t}\n\t\t\t// * Fallthrough\n\t\t\tcase 3:\n\t\t\t\treturn PlayForMate.checkmatePoints[3];\n\t\t\tdefault:\n\t\t\t\tconsole.error(`Unexpected players length ${aliveColors}`);\n\t\t\t\treturn 0;\n\t\t}\n\t}\n\n\tgetPointsForPiece(): number {\n\t\treturn 0;\n\t}\n}\n","import { VariantType } from \"@moveGeneration/GameInformation/GameData\";\nimport { FENData } from \"../../../FENData/FENData\";\nimport { VariantRule } from \"../../VariantRule\";\nimport type { VariantRuleAllowedChecks, VariantRuleHandler } from \"../../VariantRuleInterface\";\n\nconst tag = \"pointsForMate\";\nexport class PointsForMate extends VariantRule<typeof FENData, typeof tag> implements VariantRuleHandler<FENData> {\n\tstatic {\n\t\tVariantRule.initVariantRule(PointsForMate);\n\t}\n\tprivate pointsForMate: number;\n\tconstructor(pointsForMate?: unknown) {\n\t\tsuper();\n\t\tif (typeof pointsForMate === \"number\") {\n\t\t\tthis.pointsForMate = pointsForMate;\n\t\t} else {\n\t\t\tthis.pointsForMate = 20;\n\t\t}\n\t}\n\n\tgetDecoratorType() {\n\t\treturn FENData;\n\t}\n\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: this.pointsForMate,\n\t\t\tinformation: {\n\t\t\t\tname: `Points for Mate`,\n\t\t\t\ttextualForm: `+${this.pointsForMate}`,\n\t\t\t\tdescription: `Checkmates & king captures are worth ${this.pointsForMate} points`,\n\t\t\t\ttag\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string) {\n\t\tconst matchArray = match.match(/^PointsForMate=(3|5|10|40)$/i);\n\t\tif (matchArray) {\n\t\t\tthis.pointsForMate = Number(matchArray[1]);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn `PointsForMate=${this.pointsForMate}`;\n\t}\n\n\tisDisabled({ variantDataRules, gameType }: VariantRuleAllowedChecks): boolean {\n\t\treturn variantDataRules.giveaway || variantDataRules.playForMate || gameType === VariantType.Teams;\n\t}\n\n\tgetParametrizedOptions() {\n\t\tconst options = new Map<string, number>();\n\t\tfor (const value of [20, 3, 5, 10, 40]) options.set(`+${value}`, value);\n\t\treturn options;\n\t}\n\n\tobtainPointsForMate() {\n\t\treturn this.pointsForMate;\n\t}\n}\n","import { throwOnNever } from \"@client/ts/baseTypes\";\nimport { FENData } from \"../../../FENData/FENData\";\nimport { InternalMove, InternalMoveSignature } from \"../../../MoveTree/MoveTreeInterface\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\nimport { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\n\nconst tag = \"stalemateOptions\";\nexport const stalemateOptionsValues = {\n\tstalemateLoses: \"loss\",\n\tstalemateWins: \"win\",\n\tstalemateDraws: \"draw\"\n} as const;\nexport type CustomStalemateValue = (typeof stalemateOptionsValues)[keyof typeof stalemateOptionsValues];\nexport const verifyCustomStalemateValue = (v: string): v is CustomStalemateValue => Object.values<string>(stalemateOptionsValues).includes(v);\n\nexport class StalemateOptions extends VariantRule<typeof FENData, typeof tag> implements VariantRuleHandler<FENData> {\n\tstatic {\n\t\tVariantRule.initVariantRule(StalemateOptions);\n\t}\n\tprivate type: CustomStalemateValue | undefined;\n\tprivate isFFA = false;\n\n\tconstructor(type?: unknown) {\n\t\tsuper();\n\t\tif (typeof type === \"string\" && verifyCustomStalemateValue(type)) {\n\t\t\tthis.type = type;\n\t\t} else {\n\t\t\tthis.type = undefined;\n\t\t}\n\t}\n\n\tgetDecoratorType() {\n\t\treturn FENData;\n\t}\n\n\tgetPublicProperties() {\n\t\tconst description =\n\t\t\tthis.type === \"draw\"\n\t\t\t\t? `Stalemate is a draw`\n\t\t\t\t: this.isFFA\n\t\t\t\t? `The remaining players share the points`\n\t\t\t\t: `The stalemated player ${this.type === \"loss\" ? \"loses\" : \"wins\"}`;\n\t\treturn {\n\t\t\tparameterValue: this.type,\n\t\t\tinformation: {\n\t\t\t\tname: \"Stalemate\",\n\t\t\t\tdescription,\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.minor,\n\t\t\t\tdisplayIcon: chessGlyphIndex.dollarSign\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\tconst matchArray = match.toLowerCase().match(/^Stalemate=(.+)$/i);\n\t\tif (matchArray) {\n\t\t\tconst presumedOption = matchArray[1];\n\t\t\tif (verifyCustomStalemateValue(presumedOption)) {\n\t\t\t\tthis.type = presumedOption;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn `Stalemate=${this.type ?? \"draw\"}`;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\t\n\tgetParametrizedOptions() {\n\t\treturn new Map<string, CustomStalemateValue>([\n\t\t\t[\"Draw\", stalemateOptionsValues.stalemateDraws],\n\t\t\t[\"The stalemated player loses\", stalemateOptionsValues.stalemateLoses],\n\t\t\t[\"The stalemated player wins\", stalemateOptionsValues.stalemateWins]\n\t\t]);\n\t}\n\n\tinitDecoratorSettings() {\n\t\tif (this.type === undefined) {\n\t\t\tif (this.decorator.board.gameType.isFFA() && this.decorator.fenOptions.tag(\"dead\").filter(Boolean).length > 2) {\n\t\t\t\tthis.type = \"win\";\n\t\t\t\tthis.isFFA = true;\n\t\t\t} else {\n\t\t\t\tthis.type = \"draw\";\n\t\t\t\tthis.isFFA = false;\n\t\t\t}\n\t\t}\n\n\t\tfor (const decorator of this.wrappingDecorators) decorator.initDecoratorSettings?.();\n\t}\n\n\tprocessInternalMove(internalMove: InternalMove): { stalemates: [boolean, boolean, boolean, boolean] } {\n\t\tconst currentTurn = this.decorator.sideToMove;\n\t\tconst returnValues = this.callHandler(\"processInternalMove\", arguments);\n\t\tif (internalMove.type === InternalMoveSignature.Stalemate) {\n\t\t\tconst pointsForMate = this.decorator.obtainPointsForMate();\n\t\t\tswitch (this.type) {\n\t\t\t\tcase \"loss\":\n\t\t\t\t\tif (!this.isFFA) {\n\t\t\t\t\t\tthis.decorator.points[currentTurn] += pointsForMate;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t// * Fallthrough\n\t\t\t\tcase \"draw\":\n\t\t\t\t\tthis.injectIntoBaseClass(function (this: FENData) {\n\t\t\t\t\t\tthis.spreadPointsBetweenPlayersEvenly();\n\t\t\t\t\t})();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"win\":\n\t\t\t\t\tthis.decorator.points[this.decorator.sideToMove] += pointsForMate;\n\t\t\t\t\tbreak;\n\t\t\t\tcase undefined:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrowOnNever(this.type);\n\t\t\t}\n\n\t\t\tif (this.decorator.getRealPlayers() === 1) {\n\t\t\t\tthis.decorator.assignGeneralTermination(\"Stalemate\", currentTurn);\n\t\t\t}\n\t\t}\n\n\t\treturn returnValues;\n\t}\n}\n","import type { Tuple } from \"@client/ts/baseTypes\";\nimport { compareCoordinates } from \"../../../Board/BoardInterface\";\nimport { FENData } from \"../../../FENData/FENData\";\nimport { PostMoveResults } from \"../../../FENData/FENDataInterface\";\nimport { colors, totalPlayers, VariantType } from \"../../../GameInformation/GameData\";\nimport { createPieceFromData } from \"../../../GameInformation/GameUnits/PieceString\";\nimport { pieceControlConfigSettings } from \"../../../PieceControl/PieceControlInterface\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { VariantRuleAllowedChecks, variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\nimport { DeadKingWalking } from \"./DeadKingWalking\";\nimport { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\n\nconst tag = \"takeover\";\nexport class Takeover extends VariantRule<typeof FENData, typeof tag> implements VariantRuleHandler<FENData> {\n\tstatic {\n\t\tVariantRule.initVariantRule(Takeover);\n\t}\n\treadonly dependencies = new Map([[DeadKingWalking, []]]);\n\n\tgetDecoratorType() {\n\t\treturn FENData;\n\t}\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Takeover\",\n\t\t\t\tdescription: \"Checkmate players to take control of their pieces\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.phased,\n\t\t\t\tdisplayIcon: chessGlyphIndex.exchange\n\t\t\t}\n\t\t} as const;\n\t}\n\tmatchesPGNDeclaration(match: string) {\n\t\treturn /^Takeover$/i.test(match);\n\t}\n\tserializeToParsingForm(): string {\n\t\treturn \"Takeover\";\n\t}\n\tisDisabled({ gameType }: VariantRuleAllowedChecks): boolean {\n\t\treturn gameType === VariantType.Teams;\n\t}\n\n\taffectOptions(): PostMoveResults {\n\t\tconst sideToMove = this.decorator.sideToMove,\n\t\t\tdetectedPieces = this.decorator.board.getPlayerPieces();\n\t\tconst results = this.callHandler(\"affectOptions\", arguments);\n\t\tfor (const color of colors) {\n\t\t\tif (!results.checkmates[color]) continue;\n\t\t\tfor (const piece of detectedPieces[sideToMove]) {\n\t\t\t\tconst pieceString = this.decorator.board.board[piece[0]][piece[1]];\n\t\t\t\tif (!pieceString.isDead() || pieceControlConfigSettings[pieceString.piece].moveGenerationSettings.isPawn) continue;\n\t\t\t\tthis.decorator.board.board[piece[0]][piece[1]] = createPieceFromData(sideToMove, pieceString.piece);\n\t\t\t}\n\t\t}\n\n\t\treturn results;\n\t}\n\n\tcountTotalPointsOnBoard(): [number, number, number, number] {\n\t\tconst zombieImmune = this.decorator.fenOptions.tag(\"zombieImmune\"),\n\t\t\troyals = this.decorator.fenOptions.tag(\"royal\");\n\t\tconst resultingPoints: Tuple<number, typeof totalPlayers> = [0, 0, 0, 0];\n\t\tthis.decorator.board.getPlayerPieces().forEach((army, color) => {\n\t\t\tif (zombieImmune[color]) return;\n\t\t\tconst royal = royals[color];\n\t\t\tfor (const coordinate of army) {\n\t\t\t\tif (royal && compareCoordinates(coordinate, royal)) {\n\t\t\t\t\tresultingPoints[color] += this.decorator.obtainPointsForMate();\n\t\t\t\t} else {\n\t\t\t\t\tconst piece = this.decorator.board.board[coordinate[0]][coordinate[1]].piece;\n\t\t\t\t\tresultingPoints[color] += pieceControlConfigSettings[piece].points.singlesPoints;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn resultingPoints;\n\t}\n}\n","import { FENData } from \"../../../FENData/FENData\";\nimport { PostMoveResults } from \"../../../FENData/FENDataInterface\";\nimport { VariantRule } from \"../../VariantRule\";\nimport type { VariantRuleHandler } from \"../../VariantRuleInterface\";\n\nconst tag = \"threefoldRepetition\";\nexport class ThreefoldRepetition extends VariantRule<typeof FENData, typeof tag> implements VariantRuleHandler<FENData> {\n\tstatic {\n\t\tVariantRule.initVariantRule(ThreefoldRepetition);\n\t}\n\tprivate totalRepetitionsRequired: number;\n\n\tconstructor(totalRepetitions?: unknown) {\n\t\tsuper();\n\t\tif (typeof totalRepetitions === \"number\" && totalRepetitions > 0) {\n\t\t\tthis.totalRepetitionsRequired = totalRepetitions;\n\t\t} else {\n\t\t\tthis.totalRepetitionsRequired = 3;\n\t\t}\n\t}\n\n\tgetDecoratorType() {\n\t\treturn FENData;\n\t}\n\n\tgetPublicProperties() {\n\t\tconst isDisabled = this.totalRepetitionsRequired === Infinity;\n\t\treturn {\n\t\t\tparameterValue: this.totalRepetitionsRequired,\n\t\t\tinformation: {\n\t\t\t\tname: \"N-fold Repetition\",\n\t\t\t\ttextualForm: \"\",\n\t\t\t\tdescription: isDisabled\n\t\t\t\t\t? \"3-fold repetition disabled\"\n\t\t\t\t\t: `After position repeats ${this.totalRepetitionsRequired} times game is over`,\n\t\t\t\ttag\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string) {\n\t\tconst matchArray = match.match(/^ThreefoldRepetition=((?:\\d+)|(?:Infinity))$/i);\n\t\tif (matchArray) {\n\t\t\tthis.totalRepetitionsRequired = Number(matchArray[1]);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn `ThreefoldRepetition=${this.totalRepetitionsRequired}`;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\tgetParametrizedOptions() {\n\t\tconst options = new Map<string, number>();\n\t\tfor (const value of [3, 2, 5]) options.set(`${value}-fold`, value);\n\t\toptions.set(\"Unlimited\", Infinity);\n\t\treturn options;\n\t}\n\n\taffectOptions(): PostMoveResults {\n\t\tconst results = this.callHandler(\"affectOptions\", arguments);\n\t\tconst repetitions = this.decorator.board.moves.getHash(this.decorator.board.moves.constructPreliminaryHashString(this.decorator.board));\n\n\t\tif (repetitions + 1 >= this.totalRepetitionsRequired) {\n\t\t\tthis.decorator.assignGeneralTermination(\"Threefold Repetition\");\n\t\t\tthis.injectIntoBaseClass(function (this: FENData) {\n\t\t\t\tthis.spreadPointsBetweenPlayersEvenly();\n\t\t\t})();\n\t\t}\n\n\t\treturn results;\n\t}\n}\n","import { createTuple } from \"../../../../../baseTypes\";\nimport { totalPlayers } from \"../../../GameInformation/GameData\";\nimport { PieceControl } from \"../../../PieceControl/PieceControl\";\nimport type { ControlConfiguration } from \"@moveGeneration/PieceControl/PieceControlInterface\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\nimport { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\n\nconst tag = \"anyCapture\";\nexport class AnyCapture extends VariantRule<typeof PieceControl, typeof tag> implements VariantRuleHandler<PieceControl> {\n\tstatic {\n\t\tVariantRule.initVariantRule(AnyCapture);\n\t}\n\n\tgetDecoratorType() {\n\t\treturn PieceControl;\n\t}\n\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Any Capture\",\n\t\t\t\tdescription: \"You can capture your own pieces\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.autogenous,\n\t\t\t\tdisplayIcon: chessGlyphIndex.captureAnything\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\treturn /^AnyCapture$/i.test(match);\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn \"AnyCapture\";\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\tconfigure(configuration: Required<ControlConfiguration>) {\n\t\tconst modifiedConfiguration: Required<ControlConfiguration> = {\n\t\t\t...configuration,\n\t\t\timmunePieces: createTuple(false, totalPlayers)\n\t\t};\n\n\t\tfor (const decorator of this.wrappingDecorators) {\n\t\t\tif (decorator.configure) return decorator.configure(modifiedConfiguration);\n\t\t}\n\t\treturn PieceControl.prototype.configure.call(this.decorator, modifiedConfiguration);\n\t}\n}\n","import { PieceLetter, verifyPieceLetter, pieceControlConfigSettings, defaultPieces } from \"@moveGeneration/PieceControl/PieceControlInterface\";\nimport { compileEnumeration, prefixWithIndefiniteArticle } from \"@client/ts/utils/StringFormatUtils\";\nimport { PieceControl } from \"../../../PieceControl/PieceControl\";\nimport { VariantRule } from \"../../VariantRule\";\nimport type { VariantRuleHandler } from \"../../VariantRuleInterface\";\n\nconst tag = \"promotionPieces\";\nexport class PromoteTo extends VariantRule<typeof PieceControl, typeof tag> implements VariantRuleHandler<PieceControl> {\n\tstatic {\n\t\tVariantRule.initVariantRule(PromoteTo);\n\t}\n\n\tstatic filterPromotionPieceString(pieces: string): PieceLetter[] {\n\t\tconst inputPromotion = pieces.split(\"\").filter<PieceLetter>((p): p is PieceLetter => verifyPieceLetter(p));\n\t\treturn inputPromotion.length ? inputPromotion : [defaultPieces.queen, defaultPieces.rook, defaultPieces.bishop, defaultPieces.knight];\n\t}\n\n\tprivate promotionPieces: PieceLetter[];\n\tconstructor(promotionPieces?: unknown) {\n\t\tsuper();\n\t\tthis.promotionPieces =\n\t\t\tArray.isArray(promotionPieces) &&\n\t\t\tpromotionPieces.every<PieceLetter>((p): p is PieceLetter => typeof p === \"string\" && verifyPieceLetter(p))\n\t\t\t\t? promotionPieces\n\t\t\t\t: [defaultPieces.queen, defaultPieces.rook, defaultPieces.bishop, defaultPieces.knight];\n\t}\n\n\tgetDecoratorType() {\n\t\treturn PieceControl;\n\t}\n\n\tgetPublicProperties() {\n\t\tconst pieceNames = this.promotionPieces.reduce<string[]>((p, c) => {\n\t\t\tconst pieceName = pieceControlConfigSettings[c].naming.name;\n\t\t\treturn [...p, pieceName];\n\t\t}, []);\n\t\treturn {\n\t\t\tparameterValue: this.promotionPieces,\n\t\t\tinformation: {\n\t\t\t\tname: \"Pawns promote to\",\n\t\t\t\ttextualForm: \"\",\n\t\t\t\tdescription: `Pawns promote to ${prefixWithIndefiniteArticle(compileEnumeration(pieceNames))}`,\n\t\t\t\ttag\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\tconst matchArray = match.match(/^PromoteTo=([A-ZxΘ]+)$/i);\n\t\tif (matchArray) {\n\t\t\tthis.promotionPieces = PromoteTo.filterPromotionPieceString(matchArray[1]);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn `PromoteTo=${this.promotionPieces.join(\"\")}`;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\tinitDecoratorSettings(): void {\n\t\tif (this.decorator.hooks.usePawnLogic) {\n\t\t\tthis.decorator.hooks.usePawnLogic.promotionPieces = this.promotionPieces;\n\t\t}\n\n\t\tfor (const decorator of this.wrappingDecorators) decorator.initDecoratorSettings?.();\n\t}\n}\n","import { formatOrdinalNumber } from \"@client/ts/utils/StringFormatUtils\";\nimport { boardDimension } from \"../../../GameInformation/GameData\";\nimport { PieceControl } from \"../../../PieceControl/PieceControl\";\nimport { VariantRule } from \"../../VariantRule\";\nimport type { VariantRuleHandler } from \"../../VariantRuleInterface\";\n\nconst tag = \"promotionRank\";\nexport const disabledRank = 99;\nexport class PromotionRank extends VariantRule<typeof PieceControl, typeof tag> implements VariantRuleHandler<PieceControl> {\n\tstatic {\n\t\tVariantRule.initVariantRule(PromotionRank);\n\t}\n\n\tprivate promotionRank: number;\n\tconstructor(promotionRank?: unknown) {\n\t\tsuper();\n\t\tthis.promotionRank = typeof promotionRank === \"number\" ? promotionRank : 8;\n\t}\n\n\tgetDecoratorType() {\n\t\treturn PieceControl;\n\t}\n\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: this.promotionRank,\n\t\t\tinformation: {\n\t\t\t\tname: \"Promotion Rank\",\n\t\t\t\ttextualForm: \"\",\n\t\t\t\tdescription: `on the ${this.promotionRank}${formatOrdinalNumber(this.promotionRank)} rank`,\n\t\t\t\ttag\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\tconst matchArray = match.match(/^Prom=(\\d\\d?)$/i);\n\t\tif (matchArray) {\n\t\t\tthis.promotionRank = Number(matchArray[1]);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn `Prom=${this.promotionRank}`;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\tgetParametrizedOptions() {\n\t\tconst resultingMap = new Map<string, number>();\n\t\tfor (let i = 1; i <= boardDimension; i++) {\n\t\t\tresultingMap.set(String(i) + formatOrdinalNumber(i), i);\n\t\t}\n\t\tresultingMap.set(\"No promotion\", disabledRank);\n\t\treturn resultingMap;\n\t}\n\n\tinitDecoratorSettings(): void {\n\t\tif (this.decorator.hooks.usePawnLogic) {\n\t\t\tthis.decorator.hooks.usePawnLogic.promotionRanks = [\n\t\t\t\tboardDimension - this.promotionRank,\n\t\t\t\tthis.promotionRank - 1,\n\t\t\t\tthis.promotionRank - 1,\n\t\t\t\tboardDimension - this.promotionRank\n\t\t\t];\n\t\t}\n\n\t\tfor (const decorator of this.wrappingDecorators) decorator.initDecoratorSettings?.();\n\t}\n}\n","import { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\nimport { PieceControl } from \"../../../PieceControl/PieceControl\";\nimport { AttackType, PieceControlConfiguration } from \"../../../PieceControl/PieceControlInterface\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\n\nconst tag = \"royalsCannotCapture\";\nexport class RoyalsCannotCapture extends VariantRule<typeof PieceControl, typeof tag> implements VariantRuleHandler<PieceControl> {\n\tgetDecoratorType() {\n\t\treturn PieceControl;\n\t}\n\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Royals Cannot Capture\",\n\t\t\t\tdescription: \"Royal pieces cannot capture pieces.\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.autogenous,\n\t\t\t\tdisplayIcon: chessGlyphIndex.handshake\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(): boolean {\n\t\treturn false;\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn \"\";\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\tgetMovePossibility(configuration: PieceControlConfiguration): boolean {\n\t\tconst royal = this.decorator.fenData.fenOptions.tag(\"royal\")[this.decorator.color];\n\t\tif (royal && royal[0] === this.decorator.i && royal[1] === this.decorator.j) {\n\t\t\tconfiguration.special = AttackType.MoveOnly;\n\t\t}\n\n\t\tfor (const decorator of this.wrappingDecorators) {\n\t\t\tif (decorator.getMovePossibility) return decorator.getMovePossibility(configuration);\n\t\t}\n\t\treturn PieceControl.prototype.getMovePossibility.call(this.decorator, configuration);\n\t}\n}\n","import { AttackType } from \"@moveGeneration/PieceControl/PieceControlInterface\";\nimport { PieceControl } from \"../../../PieceControl/PieceControl\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\nimport { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\n\nconst tag = \"sideways\";\nexport class Sideways extends VariantRule<typeof PieceControl, typeof tag> implements VariantRuleHandler<PieceControl> {\n\tstatic {\n\t\tVariantRule.initVariantRule(Sideways);\n\t}\n\n\tgetDecoratorType() {\n\t\treturn PieceControl;\n\t}\n\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Sideways\",\n\t\t\t\tdescription: \"Pawns can also move one square sideways\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.autogenous,\n\t\t\t\tdisplayIcon: chessGlyphIndex.pawnSideways\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\treturn /^Sideways$/i.test(match);\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn \"Sideways\";\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\tgetPossibleCells() {\n\t\tif (this.decorator.hooks.usePawnLogic) {\n\t\t\tthis.injectIntoBaseClass(function (this: PieceControl) {\n\t\t\t\tthis.generateJumpAttack({ displacement: [0, -1], special: AttackType.MoveOnly });\n\t\t\t\tthis.generateJumpAttack({ displacement: [0, 1], special: AttackType.MoveOnly });\n\t\t\t})();\n\t\t}\n\n\t\tfor (const decorator of this.wrappingDecorators) {\n\t\t\tif (decorator.getPossibleCells) return decorator.getPossibleCells();\n\t\t}\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\t\tconst prototype: PieceControl = Object.getPrototypeOf(this.decorator);\n\t\tprototype.getPossibleCells.call(this.decorator);\n\t}\n}\n","import { PieceControl } from \"../../../PieceControl/PieceControl\";\nimport { AttackType, PieceControlConfiguration } from \"../../../PieceControl/PieceControlInterface\";\nimport { VariantRule } from \"../../VariantRule\";\nimport type { VariantRuleHandler } from \"../../VariantRuleInterface\";\n\nconst tag = \"stonewall\";\nexport class Stonewall extends VariantRule<typeof PieceControl, typeof tag> implements VariantRuleHandler<PieceControl> {\n\tstatic {\n\t\tVariantRule.initVariantRule(Stonewall);\n\t}\n\n\tgetDecoratorType() {\n\t\treturn PieceControl;\n\t}\n\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Stonewall\",\n\t\t\t\ttextualForm: \"\",\n\t\t\t\tdescription: \"Dead pieces cannot be captured\",\n\t\t\t\ttag\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\treturn /^Deadwall$/i.test(match);\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn \"Deadwall\";\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\tgetMovePossibility(configuration: PieceControlConfiguration): boolean {\n\t\tconst {\n\t\t\tdisplacement: [i, j],\n\t\t\tspecial\n\t\t} = configuration;\n\t\tlet modifiedConfiguration = configuration;\n\n\t\tif (\n\t\t\t(special === AttackType.AttackOnly || special === AttackType.Normal || special === AttackType.RayGen) &&\n\t\t\tthis.decorator.board[i] &&\n\t\t\tthis.decorator.board[i][j] &&\n\t\t\tthis.decorator.board[i][j].isDead()\n\t\t) {\n\t\t\tmodifiedConfiguration = {\n\t\t\t\t...configuration,\n\t\t\t\tspecial: AttackType.MoveOnly\n\t\t\t};\n\t\t}\n\n\t\tfor (const decorator of this.wrappingDecorators) {\n\t\t\tif (decorator.getMovePossibility) return decorator.getMovePossibility(configuration);\n\t\t}\n\t\treturn PieceControl.prototype.getMovePossibility.call(this.decorator, modifiedConfiguration);\n\t}\n}\n","import type { ControlConfiguration } from \"@moveGeneration/PieceControl/PieceControlInterface\";\nimport { PieceControl } from \"../../../PieceControl/PieceControl\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\nimport { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\n\nconst tag = \"torpedo\";\nexport class Torpedo extends VariantRule<typeof PieceControl, typeof tag> implements VariantRuleHandler<PieceControl> {\n\tstatic {\n\t\tVariantRule.initVariantRule(Torpedo);\n\t}\n\n\tgetDecoratorType() {\n\t\treturn PieceControl;\n\t}\n\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Torpedo\",\n\t\t\t\tdescription: \"Pawns can always jump two squares\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.autogenous,\n\t\t\t\tdisplayIcon: chessGlyphIndex.torpedo\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\treturn /^Torpedo$/i.test(match);\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn \"Torpedo\";\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\tconfigure(configuration: ControlConfiguration) {\n\t\tconst modifiedConfiguration: ControlConfiguration = {\n\t\t\t...configuration,\n\t\t\tbaseRank: true\n\t\t};\n\n\t\tfor (const decorator of this.wrappingDecorators) {\n\t\t\tif (decorator.configure) return decorator.configure(modifiedConfiguration);\n\t\t}\n\t\tPieceControl.prototype.configure.call(this.decorator, modifiedConfiguration);\n\t}\n}\n","import type { FunctionType, Tuple } from \"@client/ts/baseTypes\";\nimport { createHexColor, IndexedColor } from \"@client/ts/interfaces/Colors\";\nimport type { FENOptionsTags } from \"@moveGeneration/FENData/FENOptions/FENOptionsTagsInterface\";\nimport type { Coordinate } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport type { Board } from \"../Board/Board\";\nimport type { FENData } from \"../FENData/FENData\";\nimport type { totalPlayers, VariantType } from \"../GameInformation/GameData\";\nimport type { PieceControl } from \"../PieceControl/PieceControl\";\nimport type { PieceLetter } from \"../PieceControl/PieceControlInterface\";\nimport type { CustomStalemateValue } from \"./VariantRuleDefinitions/FENDataDecorators/StalemateOptions\";\nimport type { StripPieceStringObjects } from \"@moveGeneration/MoveTree/MoveTreeInterface\";\n\nexport interface VariantHandlerTarget<C extends AllowedHandlerClasses> {\n\t__baseClass: C;\n\tinitDecoratorSettings(): void;\n}\n\nexport type FunctionProperties<T> = Pick<T, { [K in keyof T]: T[K] extends FunctionType ? K : never }[keyof T]>;\nexport type AllowedHandlerClasses = Board | FENData | PieceControl;\nexport type AllowedSuperClasses = typeof Board | typeof FENData | typeof PieceControl;\n\nexport type VariantRuleHandler<C extends AllowedHandlerClasses> = {\n\t[K in keyof FunctionProperties<C>]?: C[K];\n};\n\ninterface BaseVariantRuleInformation<K extends keyof VariantDataRules> {\n\tname: string;\n\tdescription: string;\n\ttag: K;\n}\ninterface TextualVariantRuleInformation<K extends keyof VariantDataRules> extends BaseVariantRuleInformation<K> {\n\ttextualForm: string;\n\tcolor?: never;\n\tdisplayIcon?: never;\n}\ninterface StandardVariantRuleInformation<K extends keyof VariantDataRules> extends BaseVariantRuleInformation<K> {\n\ttextualForm?: never;\n\tcolor: IndexedColor;\n\tdisplayIcon: string;\n}\nexport type VariantRuleInformation<K extends keyof VariantDataRules> =\n\t| Readonly<StandardVariantRuleInformation<K>>\n\t| Readonly<TextualVariantRuleInformation<K>>;\n\nexport interface VariantRuleAllowedChecks {\n\treadonly variantDataRules: VariantDataRules | StripPieceStringObjects<VariantDataRules>;\n\treadonly gameType: VariantType;\n\treadonly fenTags: FENOptionsTags;\n}\n\nexport interface VariantDataRules {\n\talternativeTeams: number | false;\n\tblindfold: boolean;\n\tcaptureTheKing: boolean;\n\tchess960: number | false;\n\tcrazyhouse: boolean;\n\tghostboard: boolean;\n\tparadigmChess30: number | false;\n\ttaboo: boolean;\n\tenPassant: boolean;\n\tfatalCapture: boolean;\n\tpiecesGoToBanks: boolean;\n\tanyCapture: boolean;\n\tpromotionPieces: PieceLetter[] | false;\n\tpromotionRank: number | false;\n\tsideways: boolean;\n\tstonewall: boolean;\n\ttorpedo: boolean;\n\toppositeSideCastling: boolean;\n\tsetupChess: number | false;\n\tpiecesFaceCenter: boolean;\n\troyalsCannotCapture: boolean;\n\tseirawanSetup: boolean;\n\tatomic: boolean;\n\tfogOfWar: boolean;\n\tanonymous: boolean;\n\tsemiAnonymous: boolean;\n\tstalemateOptions: CustomStalemateValue | undefined;\n\tforcedCapture: boolean;\n\tgiveaway: boolean;\n\tallowPassing: boolean;\n\tpointsForMate: number | false;\n\ttakeover: boolean;\n\tkingOfTheHill: Coordinate[] | false;\n\tbarePieceRule: boolean;\n\tduckChess: boolean;\n\tplayForMate: boolean;\n\toppositeMultiplier: number | false;\n\tnCheck: Tuple<number, typeof totalPlayers> | false;\n\tselfCheck: boolean;\n\tfiftyMoveRule: number | false;\n\tthreefoldRepetition: number | false;\n\tselfPartner: boolean;\n\tdeadKingWalking: boolean;\n}\n\nexport const variantRuleColors = {\n\tminor: createHexColor(\"#e01492\"),\n\tvisual: createHexColor(\"#ad5709\"),\n\tautogenous: createHexColor(\"#f2791e\"),\n\tmetadata: createHexColor(\"#89a5d3\"),\n\tstartingPosition: createHexColor(\"#7030a0\"),\n\textending: createHexColor(\"#fbaa07\"),\n\twidespread: createHexColor(\"#d40c0c\"),\n\tpointsAlternation: createHexColor(\"#00b0f0\"),\n\tphased: createHexColor(\"#00b050\")\n} as const;\n","import { Board } from \"../Board/Board\";\nimport { FENData } from \"../FENData/FENData\";\nimport { PieceControl } from \"../PieceControl/PieceControl\";\nimport { ForcedCapture } from \"./VariantRuleDefinitions/BoardDecorators/ForcedCapture\";\nimport { SeirawanSetup } from \"./VariantRuleDefinitions/BoardDecorators/SeirawanSetup\";\nimport { SetupChess } from \"./VariantRuleDefinitions/BoardDecorators/SetupChess\";\nimport { Taboo } from \"./VariantRuleDefinitions/BoardDecorators/Taboo\";\nimport { FiftyMoveRule } from \"./VariantRuleDefinitions/FENDataDecorators/FiftyMoveRule\";\nimport { Giveaway } from \"./VariantRuleDefinitions/FENDataDecorators/Giveaway\";\nimport { StalemateOptions } from \"./VariantRuleDefinitions/FENDataDecorators/StalemateOptions\";\nimport { ThreefoldRepetition } from \"./VariantRuleDefinitions/FENDataDecorators/ThreefoldRepetition\";\nimport { PromoteTo } from \"./VariantRuleDefinitions/PieceControlDecorators/PromoteTo\";\nimport { PromotionRank } from \"./VariantRuleDefinitions/PieceControlDecorators/PromotionRank\";\nimport { VariantRule, VariantRulePublicProperties } from \"./VariantRule\";\nimport type { AllowedSuperClasses, VariantDataRules, VariantRuleAllowedChecks } from \"./VariantRuleInterface\";\n\nexport interface VariantRuleParsingTypes {\n\tboardDecorators: Array<VariantRule<typeof Board, keyof VariantDataRules>>;\n\tpieceControlDecorators: Array<VariantRule<typeof PieceControl, keyof VariantDataRules>>;\n\tfenDataDecorators: Array<VariantRule<typeof FENData, keyof VariantDataRules>>;\n\t[Symbol.iterator]: () => Generator<VariantRule<AllowedSuperClasses, keyof VariantDataRules>, void>;\n}\nexport const createBaseParsingTypes = (): VariantRuleParsingTypes => ({\n\tboardDecorators: [],\n\tpieceControlDecorators: [],\n\tfenDataDecorators: [],\n\t*[Symbol.iterator]() {\n\t\tfor (const rv of [...this.boardDecorators, ...this.pieceControlDecorators, ...this.fenDataDecorators]) {\n\t\t\tconst variantRule: VariantRule<AllowedSuperClasses, keyof VariantDataRules> = rv;\n\t\t\tyield variantRule;\n\t\t}\n\t}\n});\n\nconst variantRulePriorities = [SetupChess, ForcedCapture, Taboo, SeirawanSetup, PromoteTo, PromotionRank, Giveaway].reverse();\n\nfunction differentiateDecoratorMethods(\n\tvariant: VariantRule<AllowedSuperClasses, keyof VariantDataRules>,\n\tmethods: {\n\t\t[K in keyof Omit<VariantRuleParsingTypes, symbol>]: (\n\t\t\tvariant: VariantRuleParsingTypes[K] extends Array<VariantRule<infer C, keyof VariantDataRules>>\n\t\t\t\t? VariantRule<C, keyof VariantDataRules>\n\t\t\t\t: never\n\t\t) => void;\n\t}\n) {\n\tconst verifyDecorator = <C extends typeof Board | typeof PieceControl | typeof FENData>(\n\t\trv: VariantRule<AllowedSuperClasses, keyof VariantDataRules>,\n\t\ttype: C\n\t): rv is VariantRule<C, keyof VariantDataRules> => rv.getDecoratorType() === type;\n\n\tif (verifyDecorator(variant, Board)) {\n\t\tmethods.boardDecorators(variant);\n\t} else if (verifyDecorator(variant, PieceControl)) {\n\t\tmethods.pieceControlDecorators(variant);\n\t} else if (verifyDecorator(variant, FENData)) {\n\t\tmethods.fenDataDecorators(variant);\n\t}\n}\n\nexport function parseVariantRules(rules: string): VariantRuleParsingTypes {\n\ttype VariantRuleConstructor = new (...args: unknown[]) => VariantRule<AllowedSuperClasses, keyof VariantDataRules>;\n\tconst variantClasses = new Set<VariantRuleConstructor>();\n\tconst variantRuleList = new Set<VariantRule<AllowedSuperClasses, keyof VariantDataRules>>();\n\tconst forcedRules = [PromotionRank, PromoteTo, StalemateOptions, FiftyMoveRule, ThreefoldRepetition];\n\tfor (const variantRule of VariantRule.variantRuleList) {\n\t\tconst rv = new variantRule();\n\t\tvariantRuleList.add(rv);\n\t\tvariantClasses.add(variantRule);\n\t}\n\n\tconst finalList = createBaseParsingTypes();\n\tconst rulesStrings = rules.split(/\\s+/);\n\n\tconst insertVariantRule = (variant: VariantRule<AllowedSuperClasses, keyof VariantDataRules>) => {\n\t\tdifferentiateDecoratorMethods(variant, {\n\t\t\tboardDecorators: (variant: VariantRule<typeof Board, keyof VariantDataRules>) => {\n\t\t\t\tfinalList.boardDecorators.push(variant);\n\t\t\t},\n\t\t\tpieceControlDecorators: (variant: VariantRule<typeof PieceControl, keyof VariantDataRules>) => {\n\t\t\t\tfinalList.pieceControlDecorators.push(variant);\n\t\t\t},\n\t\t\tfenDataDecorators: (variant: VariantRule<typeof FENData, keyof VariantDataRules>) => {\n\t\t\t\tfinalList.fenDataDecorators.push(variant);\n\t\t\t}\n\t\t});\n\n\t\tfor (const [dependency, dependencyArgs] of variant.dependencies) {\n\t\t\tif (\n\t\t\t\t!Object.values(finalList).some((decorators: Array<VariantRule<AllowedSuperClasses, keyof VariantDataRules>>) =>\n\t\t\t\t\tdecorators.some((rv) => rv instanceof dependency)\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tinsertVariantRule(new dependency(...dependencyArgs));\n\t\t\t}\n\t\t}\n\t};\n\n\tfor (const variant of variantRuleList) {\n\t\tfor (const ruleString of rulesStrings) {\n\t\t\tif (variant.matchesPGNDeclaration(ruleString)) {\n\t\t\t\tinsertVariantRule(variant);\n\t\t\t\tvariantRuleList.delete(variant);\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (const forcedRule of forcedRules) {\n\t\tconst variant = new forcedRule();\n\t\tdifferentiateDecoratorMethods(variant, {\n\t\t\tboardDecorators: (variant: VariantRule<typeof Board, keyof VariantDataRules>) => {\n\t\t\t\tif (!finalList.boardDecorators.some((rule) => rule instanceof forcedRule)) {\n\t\t\t\t\tfinalList.boardDecorators.push(variant);\n\t\t\t\t}\n\t\t\t},\n\t\t\tpieceControlDecorators: (variant: VariantRule<typeof PieceControl, keyof VariantDataRules>) => {\n\t\t\t\tif (!finalList.pieceControlDecorators.some((rule) => rule instanceof forcedRule)) {\n\t\t\t\t\tfinalList.pieceControlDecorators.push(variant);\n\t\t\t\t}\n\t\t\t},\n\t\t\tfenDataDecorators: (variant: VariantRule<typeof FENData, keyof VariantDataRules>) => {\n\t\t\t\tif (!finalList.fenDataDecorators.some((rule) => rule instanceof forcedRule)) {\n\t\t\t\t\tfinalList.fenDataDecorators.push(variant);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tfor (const rule of variantRulePriorities) {\n\t\tconst resultingRule = new rule();\n\t\tdifferentiateDecoratorMethods(resultingRule, {\n\t\t\tboardDecorators: () => {\n\t\t\t\tconst index = finalList.boardDecorators.findIndex((c) => c instanceof rule);\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\tfinalList.boardDecorators.unshift(finalList.boardDecorators.splice(index, 1)[0]);\n\t\t\t\t}\n\t\t\t},\n\t\t\tpieceControlDecorators: () => {\n\t\t\t\tconst index = finalList.pieceControlDecorators.findIndex((c) => c instanceof rule);\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\tfinalList.pieceControlDecorators.unshift(finalList.pieceControlDecorators.splice(index, 1)[0]);\n\t\t\t\t}\n\t\t\t},\n\t\t\tfenDataDecorators: () => {\n\t\t\t\tconst index = finalList.fenDataDecorators.findIndex((c) => c instanceof rule);\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\tfinalList.fenDataDecorators.unshift(finalList.fenDataDecorators.splice(index, 1)[0]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\treturn finalList;\n}\n\nexport function compileVariantRuleData(rules: VariantRuleParsingTypes): VariantDataRules {\n\tconst finalObject: Partial<VariantDataRules> = {};\n\tconst variantRuleList = VariantRule.variantRuleList.map((rv) => new rv());\n\tfor (const rule of variantRuleList) {\n\t\tfinalObject[rule.getPublicProperties().information.tag] = false;\n\t}\n\n\tconst setFinalObjectProperty = <K extends keyof VariantDataRules>(properties: VariantRulePublicProperties<K>) => {\n\t\tfinalObject[properties.information.tag] = properties.parameterValue;\n\t};\n\n\tfor (const rule of rules) setFinalObjectProperty(rule.getPublicProperties());\n\treturn finalObject as VariantDataRules;\n}\n\nexport function copyVariantRules<T extends AllowedSuperClasses>(\n\trvs: Array<VariantRule<T, keyof VariantDataRules>>\n): Array<VariantRule<T, keyof VariantDataRules>> {\n\treturn rvs.map((rv) => {\n\t\tconst parameterValue = rv.getPublicProperties().parameterValue;\n\t\tconst parameterArray = parameterValue !== false ? [parameterValue] : [];\n\t\treturn new rv.constructor(parameterArray);\n\t});\n}\n\nexport function validateVariantRules(board: Board) {\n\tconst configuration: VariantRuleAllowedChecks = {\n\t\tvariantDataRules: board.variantData,\n\t\tgameType: board.gameType.type,\n\t\tfenTags: board.data.fenOptions.tags\n\t};\n\treturn {\n\t\t...board.variantRules,\n\t\tboardDecorators: board.variantRules.boardDecorators.filter((rv) => !rv.isDisabled(configuration)),\n\t\tpieceControlDecorators: board.variantRules.pieceControlDecorators.filter((rv) => !rv.isDisabled(configuration)),\n\t\tfenDataDecorators: board.variantRules.fenDataDecorators.filter((rv) => !rv.isDisabled(configuration))\n\t};\n}\n","import type { MoveTreeInterface } from \"@moveGeneration/MoveTree/MoveTree\";\nimport type { MoveWrapper } from \"@moveGeneration/MoveTree/MoveTreeInterface\";\n\nexport function serializePGNMoves(moveTree: MoveTreeInterface): string {\n\tlet resultingString = \"\";\n\n\tconst traverse = (moves: MoveWrapper[]) => {\n\t\tfor (const moveWrapper of moves) {\n\t\t\tif (moveWrapper.metadata.currentFullMove) {\n\t\t\t\tresultingString = resultingString.replace(/\\s\\.\\.\\s$/, \"\");\n\t\t\t\tresultingString += ` ${moveWrapper.metadata.currentFullMove}. `;\n\t\t\t}\n\n\t\t\tresultingString += moveWrapper.cachedNames.fullMoveNotation;\n\t\t\tif (moveWrapper.comment) resultingString += ` {${moveWrapper.comment}}`;\n\t\t\tresultingString += \" .. \";\n\n\t\t\tfor (const alternativeLine of moveWrapper.alternativeLines) {\n\t\t\t\tresultingString += \"(.. \";\n\t\t\t\ttraverse(alternativeLine);\n\t\t\t\tresultingString += \" )\";\n\t\t\t}\n\t\t}\n\n\t\tresultingString = resultingString.replace(/\\s\\.\\.\\s$/, \"\");\n\t};\n\n\ttraverse(moveTree.moves);\n\treturn resultingString;\n}\n","import { createTupleFromCallback, Tuple } from \"@client/ts/baseTypes\";\nimport {\n\tcolors,\n\tGamePlayerData,\n\tgetPlayerNameFromColor,\n\tplayerNames,\n\tTermination,\n\tTimeControl,\n\ttotalPlayers,\n\tvalidateTerminationString,\n\tVariantType\n} from \"@moveGeneration/GameInformation/GameData\";\nimport { truncateNumber } from \"@utils/NumberUtils\";\nimport type { VariantTag } from \"../TagInterface\";\nimport { tagNamesEqual, unwrapTag, wrapTag } from \"../Utils\";\n\nconst variantTypeTag = \"Variant\";\nexport const createVariantTypeTag = (): VariantTag<VariantType> => ({\n\ttag: \"variantType\",\n\tcurrentValue: VariantType.FFA,\n\tverifyTagInParsing(inputTag) {\n\t\treturn tagNamesEqual(inputTag, variantTypeTag);\n\t},\n\tparseTag(inputTag) {\n\t\tconst tagContents = unwrapTag(inputTag, variantTypeTag);\n\t\tfor (const type of Object.values(VariantType)) {\n\t\t\tif (tagContents === type) return type;\n\t\t}\n\n\t\treturn VariantType.FFA;\n\t},\n\tserialize(board) {\n\t\treturn wrapTag(variantTypeTag, board.gameType.type);\n\t}\n});\n\nconst variantDateTag = \"Date\";\nexport const createDateTag = (): VariantTag<Date> => ({\n\ttag: \"date\",\n\tcurrentValue: new Date(),\n\tverifyTagInParsing(inputTag) {\n\t\treturn tagNamesEqual(inputTag, variantDateTag);\n\t},\n\tparseTag(tagContents) {\n\t\treturn new Date(unwrapTag(tagContents, variantDateTag));\n\t},\n\tserialize(board) {\n\t\tif (!board.gameData.date) return;\n\t\tif (typeof board.gameData.date === \"object\") {\n\t\t\treturn wrapTag(variantDateTag, board.gameData.date.toUTCString());\n\t\t} else {\n\t\t\treturn wrapTag(variantDateTag, board.gameData.date);\n\t\t}\n\t}\n});\n\nconst variantSiteTag = \"Site\";\nexport const createSiteTag = (): VariantTag<string> => ({\n\ttag: \"site\",\n\tcurrentValue: \"\",\n\tverifyTagInParsing(inputTag) {\n\t\treturn tagNamesEqual(inputTag, variantSiteTag);\n\t},\n\tparseTag(tagContents) {\n\t\treturn unwrapTag(tagContents, variantSiteTag);\n\t},\n\tserialize(board) {\n\t\tif (!board.gameData.site) return;\n\t\treturn wrapTag(variantSiteTag, board.gameData.site);\n\t}\n});\n\nconst variantTimeControlTag = \"TimeControl\",\n\tgetDefaultTimeControl = (): TimeControl => ({ baseTime: 180, increment: 2, isDelay: false });\nexport const createTimeControlTag = (): VariantTag<TimeControl> => ({\n\ttag: \"timeControl\",\n\tcurrentValue: getDefaultTimeControl(),\n\tverifyTagInParsing(inputTag) {\n\t\treturn tagNamesEqual(inputTag, variantTimeControlTag);\n\t},\n\tparseTag(inputTag) {\n\t\tconst defaultTC = getDefaultTimeControl();\n\t\tconst matchArray = unwrapTag(inputTag, variantTimeControlTag)\n\t\t\t.match(/^((?:0\\.\\d\\d?)?|(?:\\d\\d?s?))(?:(?:(?:\\+|\\|)(\\d\\d?)(D?))|(\\smin))$/)\n\t\t\t?.slice(1);\n\n\t\tif (matchArray) {\n\t\t\tconst [minutesMatch, secondsMatch, delay] = matchArray;\n\t\t\tif (!secondsMatch) return defaultTC;\n\t\t\tdefaultTC.isDelay = delay ? true : false;\n\t\t\tif (/\\smin/.test(secondsMatch)) {\n\t\t\t\tdefaultTC.increment = 0;\n\t\t\t} else {\n\t\t\t\tdefaultTC.increment = Number(secondsMatch);\n\t\t\t}\n\t\t\tif (minutesMatch.endsWith(\"s\")) {\n\t\t\t\tdefaultTC.baseTime = Math.round(Number(minutesMatch.slice(0, -1)));\n\t\t\t} else {\n\t\t\t\tdefaultTC.baseTime = Number(minutesMatch) * 60;\n\t\t\t}\n\t\t}\n\n\t\treturn defaultTC;\n\t},\n\tserialize(board) {\n\t\tconst timeControl = board.gameData.timeControl;\n\t\tconst noIncrement = timeControl.increment === 0;\n\t\tlet timeControlString = \"\";\n\t\tif (timeControl.baseTime < 60) {\n\t\t\ttimeControlString += noIncrement ? `${timeControl.baseTime * 60} sec` : `${timeControl.baseTime * 60}s`;\n\t\t} else if (timeControl.baseTime > 60 && noIncrement) {\n\t\t\ttimeControlString += `${truncateNumber(timeControl.baseTime / 60, 1)} min`;\n\t\t} else {\n\t\t\ttimeControlString += truncateNumber(timeControl.baseTime / 60, 1);\n\t\t}\n\n\t\tif (!noIncrement) {\n\t\t\ttimeControlString += \"|\";\n\t\t\ttimeControlString += timeControl.increment;\n\t\t}\n\t\tif (timeControl.isDelay) {\n\t\t\ttimeControlString += \"D\";\n\t\t}\n\n\t\treturn wrapTag(variantTimeControlTag, timeControlString);\n\t}\n});\n\nconst variantTerminationTag = \"Termination\";\nexport const createTerminationTag = (): VariantTag<Termination | undefined> => ({\n\ttag: \"termination\",\n\tcurrentValue: undefined,\n\tverifyTagInParsing(inputTag) {\n\t\treturn tagNamesEqual(inputTag, variantTerminationTag);\n\t},\n\tparseTag(inputTag) {\n\t\tconst tagContents = unwrapTag(inputTag, variantTerminationTag);\n\t\treturn validateTerminationString(tagContents) ? tagContents : undefined;\n\t},\n\tserialize(board) {\n\t\tif (!board.gameData.termination) return;\n\t\treturn wrapTag(variantTerminationTag, board.gameData.termination);\n\t}\n});\n\nconst variantGameId = \"GameNr\";\nexport const createGameNumberTag = (): VariantTag<number | undefined> => ({\n\ttag: \"gameNumber\",\n\tcurrentValue: undefined,\n\tverifyTagInParsing(inputTag) {\n\t\treturn tagNamesEqual(inputTag, variantGameId);\n\t},\n\tparseTag(inputTag) {\n\t\tconst id = Number(unwrapTag(inputTag, variantGameId));\n\t\treturn isNaN(id) ? undefined : id;\n\t},\n\tserialize(board) {\n\t\tif (!board.gameData.gameNumber) return;\n\t\treturn wrapTag(variantGameId, board.gameData.gameNumber.toString());\n\t}\n});\n\nexport const createPlayerDataTag = (): VariantTag<Tuple<GamePlayerData, typeof totalPlayers>> => ({\n\ttag: \"playerData\",\n\tcurrentValue: createTupleFromCallback(() => ({}), totalPlayers),\n\tverifyTagInParsing(inputTag) {\n\t\tfor (const color of colors) {\n\t\t\tconst playerName = getPlayerNameFromColor(color);\n\t\t\tif (tagNamesEqual(inputTag, playerName) || tagNamesEqual(inputTag, `${playerName}Elo`)) return true;\n\t\t}\n\n\t\treturn false;\n\t},\n\tparseTag(inputTag) {\n\t\tfor (const color of colors) {\n\t\t\tconst playerName = getPlayerNameFromColor(color);\n\t\t\tconst newCurrentValue: Tuple<GamePlayerData, typeof totalPlayers> = [...this.currentValue];\n\t\t\tif (tagNamesEqual(inputTag, playerName)) {\n\t\t\t\tconst name = unwrapTag(inputTag, playerName);\n\t\t\t\tif (name) newCurrentValue[color] = { ...newCurrentValue[color], name };\n\t\t\t\treturn newCurrentValue;\n\t\t\t} else if (tagNamesEqual(inputTag, `${playerName}Elo`)) {\n\t\t\t\tconst elo = Number(unwrapTag(inputTag, playerName));\n\t\t\t\tif (!isNaN(elo)) newCurrentValue[color] = { ...newCurrentValue[color], elo };\n\t\t\t\treturn newCurrentValue;\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(\"Tag does not match any player data signature\");\n\t},\n\tserialize(board) {\n\t\tconst uniqueResultingTags: string[] = [];\n\t\tfor (const color of colors) {\n\t\t\tconst playerData = board.gameData.players[color];\n\t\t\tif (playerData.elo) {\n\t\t\t\tuniqueResultingTags.push(wrapTag(`${playerNames[color]}Elo`, String(playerData.elo)));\n\t\t\t}\n\t\t\tif (playerData.name) {\n\t\t\t\tuniqueResultingTags.push(wrapTag(`${playerNames[color]}`, String(playerData.name)));\n\t\t\t}\n\t\t}\n\n\t\treturn uniqueResultingTags.join(\"\\n\");\n\t}\n});\n\nconst resultsTag = \"Results\";\nexport const createResultsTag = (): VariantTag<string> => ({\n\ttag: \"results\",\n\tcurrentValue: \"\",\n\tverifyTagInParsing(inputTag) {\n\t\treturn tagNamesEqual(inputTag, resultsTag);\n\t},\n\tparseTag(tagContents) {\n\t\treturn unwrapTag(tagContents, resultsTag);\n\t},\n\tserialize(board) {\n\t\tif (!board.gameData.result) return;\n\t\treturn wrapTag(resultsTag, board.gameData.result);\n\t}\n});\n","import { createBaseParsingTypes, parseVariantRules, VariantRuleParsingTypes } from \"@moveGeneration/VariantRules/VariantRuleSetup\";\nimport type { VariantTag } from \"../TagInterface\";\nimport { tagNamesEqual, unwrapTag, wrapTag } from \"../Utils\";\n\nconst variantRulesTag = \"RuleVariants\";\nexport const createVariantRulesTag = (): VariantTag<VariantRuleParsingTypes> => ({\n\ttag: \"variantRules\",\n\tcurrentValue: createBaseParsingTypes(),\n\tverifyTagInParsing(inputTag) {\n\t\treturn tagNamesEqual(inputTag, variantRulesTag);\n\t},\n\tparseTag(tagContents) {\n\t\treturn parseVariantRules(unwrapTag(tagContents, variantRulesTag));\n\t},\n\tserialize(board) {\n\t\tconst resultingRuleList: string[] = [];\n\t\tfor (const rule of board.variantRules) {\n\t\t\tconst serializedForm = rule.serializeToParsingForm();\n\t\t\tif (serializedForm) {\n\t\t\t\tresultingRuleList.push(serializedForm);\n\t\t\t}\n\t\t}\n\n\t\treturn wrapTag(variantRulesTag, resultingRuleList.join(\" \"));\n\t}\n});\n","import type { Board } from \"@moveGeneration/Board/Board\";\nimport { createFENDataTag } from \"./TagLogic/FENDataTag\";\nimport * as GenericTags from \"./TagLogic/GameMetadataTags\";\nimport { createVariantRulesTag } from \"./TagLogic/VariantRulesTag\";\n\nexport const createDefaultVariantTags = () => ({\n\tvariantType: GenericTags.createVariantTypeTag(),\n\tstartingPosition: createFENDataTag(),\n\tvariantRules: createVariantRulesTag(),\n\tdate: GenericTags.createDateTag(),\n\tsite: GenericTags.createSiteTag(),\n\ttimeControl: GenericTags.createTimeControlTag(),\n\ttermination: GenericTags.createTerminationTag(),\n\tgameNumber: GenericTags.createGameNumberTag(),\n\tplayerData: GenericTags.createPlayerDataTag(),\n\tresults: GenericTags.createResultsTag()\n});\nexport type VariantTags = ReturnType<typeof createDefaultVariantTags>;\n\nexport interface VariantTag<T> {\n\tcurrentValue: T;\n\treadonly tag: keyof VariantTags;\n\tverifyTagInParsing(inputTag: string): boolean;\n\tparseTag(tagContents: string): T;\n\tserialize(board: Board): string | undefined;\n}\n","import type { Board } from \"@moveGeneration/Board/Board\";\nimport type { GameData } from \"@moveGeneration/GameInformation/GameData\";\nimport { nonPlayablePieces } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport type { PieceLetter } from \"@moveGeneration/PieceControl/PieceControlInterface\";\nimport { compileVariantRuleData } from \"@moveGeneration/VariantRules/VariantRuleSetup\";\nimport { parsePGN4Moves } from \"./Moves/ParsePGNMoves\";\nimport { serializePGNMoves } from \"./Moves/SerializePGNMoves\";\nimport { createDefaultVariantTags, VariantTags } from \"./TagInterface\";\n\nexport function parsePGN4(pgn4: string) {\n\tlet pgn4Tags: string[],\n\t\tpgn4Moves = \"\";\n\tconst match = pgn4.match(/(?=1\\.\\s*?[xA-ZΑ-ωa-n0-9-])/);\n\tif (match?.index) {\n\t\tpgn4Moves = pgn4.substring(match.index);\n\t\tpgn4Tags = pgn4\n\t\t\t.substring(0, match.index)\n\t\t\t.split(\"]\")\n\t\t\t.map((t) => t.trim());\n\t} else {\n\t\tpgn4Tags = pgn4.split(\"]\").map((t) => t.trim());\n\t}\n\tconst moves = pgn4Moves.length ? parsePGN4Moves(pgn4Moves) : [];\n\n\tconst variantTags = createDefaultVariantTags();\n\tlet wasFEN4set = false;\n\tfor (const input of pgn4Tags) {\n\t\tlet variantTag: keyof VariantTags;\n\t\tfor (variantTag in variantTags) {\n\t\t\tconst tag = variantTags[variantTag];\n\t\t\tif (Object.prototype.hasOwnProperty.call(variantTags, variantTag) && tag.verifyTagInParsing(input)) {\n\t\t\t\tif (variantTag === \"startingPosition\") wasFEN4set = true;\n\t\t\t\ttag.currentValue = tag.parseTag(input);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tif (!wasFEN4set) variantTags.startingPosition.currentValue.fenData.fenOptions.setTag(\"noCorners\", true);\n\n\tconst gameData: GameData = {\n\t\tsite: variantTags.site.currentValue,\n\t\tgameNumber: variantTags.gameNumber.currentValue,\n\t\tdate: variantTags.date.currentValue,\n\t\ttimeControl: variantTags.timeControl.currentValue,\n\t\tplayers: variantTags.playerData.currentValue,\n\t\ttermination: variantTags.termination.currentValue,\n\t\tresult: undefined\n\t};\n\n\tconst variantRuleData = compileVariantRuleData(variantTags.variantRules.currentValue);\n\tconst promotionPieces = Array.isArray(variantRuleData.promotionPieces) ? variantRuleData.promotionPieces : [];\n\n\tconst nonPlayablePieceValues: string[] = Object.values(nonPlayablePieces);\n\treturn {\n\t\tgameData,\n\t\tgameType: variantTags.variantType.currentValue,\n\t\tvariantRules: variantTags.variantRules.currentValue,\n\t\tvariantRuleData,\n\t\tboard: variantTags.startingPosition.currentValue.board,\n\t\tfenData: variantTags.startingPosition.currentValue.fenData,\n\t\tpieceSet: new Set<PieceLetter>(\n\t\t\t[...variantTags.startingPosition.currentValue.pieceSet, ...promotionPieces].filter((e) => !nonPlayablePieceValues.includes(e))\n\t\t),\n\t\tmoves\n\t};\n}\n\nexport interface SerializedBoardStrings {\n\tboard: string;\n\tmoves: string;\n}\nconst defaultTags = createDefaultVariantTags();\nexport function serializeBoard(board: Board): SerializedBoardStrings {\n\treturn {\n\t\tboard: Object.values(defaultTags)\n\t\t\t.map((t) => t.serialize(board))\n\t\t\t.filter<string>((v): v is string => v !== undefined)\n\t\t\t.join(\"\\n\"),\n\t\tmoves: serializePGNMoves(board.moves)\n\t};\n}\n","import { assertNonUndefined } from \"@client/ts/baseTypes\";\nimport { verifyColorEnumValue, colorEnum } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport { duckPieceString, createPieceFromData, deadColorIndex } from \"@moveGeneration/GameInformation/GameUnits/PieceString\";\nimport {\n\tMoveData,\n\tDroppingMove,\n\tInternalMove,\n\tInternalMoveSignature,\n\tSpecialMove,\n\tMoveComponent,\n\tverifyInternalMove,\n\tMoveWrapper,\n\tcreateDummyMoveMetadata,\n\tverifyMoveWrapperProperties,\n\tMove,\n\tverifyRequiredMove\n} from \"@moveGeneration/MoveTree/MoveTreeInterface\";\nimport { verifyPieceLetter } from \"@moveGeneration/PieceControl/PieceControlInterface\";\nimport { parseEnPassantCoordinates, parseSingleCoordinate } from \"../Utils\";\n\nexport const PGN4_SYNTAX = {\n\tSPLIT: \".\",\n\tPIECE_REGEX: /[xA-ZΑ-ωa-nrbyg0-9-=+#@]/,\n\tPIECE_REGEX_SIMPLIFIED: /[A-ZΑ-ωa-n0-9-]/,\n\tMOVE_CAPTURING_REGEX: /^[A-ZΑ-ω]?([a-n]\\d{1,2})(?:-|x[A-ZΑ-ω]?)[A-ZΑ-ω]?([a-n]\\d{1,2})/,\n\tDUCK_MOVE_CAPTURING_REGEX: /Θ([a-n]\\d{1,2})?-([a-n]\\d{1,2})/,\n\tDROPPING_MOVE_CAPTURING_REGEX: /Θ?@([a-z])([A-ZΑ-ω])-([a-n]\\d{1,2})/,\n\tBRACKETS: {\n\t\tCOMMENT_START: \"{\",\n\t\tCOMMENT_END: \"}\",\n\t\tVARIATION_START: \"(\",\n\t\tVARIATION_END: \")\"\n\t},\n\tCOORDINATE_REGEX: /[a-n](?:(?:1[0-4])|(?:[1-9]))/,\n\tCOMMENT_SYNTAXES: {\n\t\tCLOCK: /\\[%timestamp (-?\\d+?)]/,\n\t\tARROWS: /\\[%cal ((?:R|B|Y|G).+?)]/,\n\t\tSQUARES: /\\[%csl ((?:R|B|Y|G).+?)]/,\n\t\tANNOTATION: /\\[%ann (.+?)]/\n\t}\n} as const;\n\nfunction obtainDuckMove(move: string): MoveData | DroppingMove | undefined {\n\tconst match = move.match(PGN4_SYNTAX.DUCK_MOVE_CAPTURING_REGEX);\n\tif (match) {\n\t\tif (match[1]) {\n\t\t\tconst startCoordinates = parseSingleCoordinate(match[1]);\n\t\t\tconst endCoordinates = parseSingleCoordinate(match[2]);\n\t\t\tif (!startCoordinates || !endCoordinates) return;\n\t\t\treturn { startCoordinates, endCoordinates };\n\t\t} else {\n\t\t\tconst endCoordinates = parseSingleCoordinate(match[2]);\n\t\t\tif (!endCoordinates) return;\n\t\t\treturn { piece: duckPieceString, endCoordinates };\n\t\t}\n\t} else return;\n}\n\nfunction obtainInternalType(type: string): InternalMove | undefined {\n\tlet internalMove: keyof typeof InternalMoveSignature;\n\tfor (internalMove in InternalMoveSignature) {\n\t\tif (Object.prototype.hasOwnProperty.call(InternalMoveSignature, internalMove)) {\n\t\t\tif (InternalMoveSignature[internalMove] === type) return { type: InternalMoveSignature[internalMove] };\n\t\t}\n\t}\n}\n\nfunction obtainDroppingMove(move: string): DroppingMove | undefined {\n\tconst match = move.match(PGN4_SYNTAX.DROPPING_MOVE_CAPTURING_REGEX);\n\tif (match) {\n\t\tconst [, color, piece, coordinate] = match;\n\t\tif (!verifyColorEnumValue(color) || !verifyPieceLetter(piece)) return;\n\t\tconst endCoordinates = parseSingleCoordinate(coordinate);\n\t\tif (!endCoordinates) return;\n\t\treturn {\n\t\t\tpiece: createPieceFromData(colorEnum[color], piece),\n\t\t\tendCoordinates\n\t\t};\n\t} else return;\n}\n\nfunction obtainStandardMove(move: string): MoveData | undefined {\n\tconst moveData: MoveData = { startCoordinates: [-1, -1], endCoordinates: [-1, -1] };\n\tconst promotionMatch = move.match(/.*?=([A-Zx])/);\n\tif (promotionMatch?.[1]) {\n\t\tmoveData.promotion = [createPieceFromData(deadColorIndex, promotionMatch[1].charAt(0))];\n\t}\n\n\tconst moveCoordinates = move.match(PGN4_SYNTAX.MOVE_CAPTURING_REGEX);\n\tif (moveCoordinates) {\n\t\tconst startCoordinate = parseSingleCoordinate(moveCoordinates[1]);\n\t\tconst endCoordinate = parseSingleCoordinate(moveCoordinates[2]);\n\n\t\tassertNonUndefined(startCoordinate);\n\t\tassertNonUndefined(endCoordinate);\n\t\tmoveData.startCoordinates = startCoordinate;\n\t\tmoveData.endCoordinates = endCoordinate;\n\n\t\treturn moveData;\n\t} else {\n\t\tif (/O-O-O.*/.test(move)) {\n\t\t\treturn { ...moveData, specialType: SpecialMove.CastlingQueenside };\n\t\t} else if (/O-O.*/.test(move)) {\n\t\t\treturn { ...moveData, specialType: SpecialMove.CastlingKingside };\n\t\t}\n\t}\n}\n\nfunction cloneMoveData(move: MoveComponent): MoveComponent {\n\tif (!verifyInternalMove(move)) {\n\t\tif (\"startCoordinates\" in move) {\n\t\t\tconst newMove: MoveData = {\n\t\t\t\tstartCoordinates: [...move.startCoordinates],\n\t\t\t\tendCoordinates: [...move.endCoordinates]\n\t\t\t};\n\t\t\tif (\"specialType\" in move) {\n\t\t\t\tnewMove.specialType = move.specialType;\n\t\t\t}\n\t\t\tif (\"promotion\" in move) {\n\t\t\t\tnewMove.promotion = move.promotion;\n\t\t\t}\n\t\t\treturn newMove;\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tendCoordinates: move.endCoordinates,\n\t\t\t\tpiece: move.piece\n\t\t\t};\n\t\t}\n\t} else {\n\t\treturn { type: move.type };\n\t}\n}\n\nexport const parsePGN4Moves = (moves: string): MoveWrapper[] => {\n\tconst parseMoves = (selectedMove: string, path: number[]): MoveWrapper[] => {\n\t\tconst moveList: MoveWrapper[] = [];\n\t\tconst currentPath = path;\n\n\t\tfunction getMoveIndexes(mI: number) {\n\t\t\twhile (selectedMove[mI] && PGN4_SYNTAX.PIECE_REGEX.test(selectedMove[mI])) mI++;\n\t\t\treturn mI;\n\t\t}\n\n\t\tfunction parseComment(mI: number) {\n\t\t\twhile (selectedMove[mI] && selectedMove[mI] !== PGN4_SYNTAX.BRACKETS.COMMENT_END) mI++;\n\t\t\treturn mI;\n\t\t}\n\n\t\tfunction getEnumeratorIndex(mI: number) {\n\t\t\twhile (selectedMove[mI] && /\\d|\\./.test(selectedMove[mI])) mI++;\n\t\t\treturn --mI;\n\t\t}\n\n\t\tfunction findBracketIndex(i: number) {\n\t\t\tlet depth = 0;\n\t\t\tfor (; i < selectedMove.length; i++) {\n\t\t\t\tswitch (selectedMove[i]) {\n\t\t\t\t\tcase PGN4_SYNTAX.BRACKETS.COMMENT_START:\n\t\t\t\t\t\ti = parseComment(i);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase PGN4_SYNTAX.BRACKETS.VARIATION_START:\n\t\t\t\t\t\tdepth++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase PGN4_SYNTAX.BRACKETS.VARIATION_END:\n\t\t\t\t\t\tif (--depth === 0) {\n\t\t\t\t\t\t\treturn i;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthrow new TypeError(\"No matching parentheses for input \" + selectedMove);\n\t\t}\n\n\t\tfunction processMoveDataInsertion() {\n\t\t\tif (currentMoveData) {\n\t\t\t\tcurrentPath.push(++increment);\n\t\t\t\tcurrentMove.path = currentPath.slice();\n\t\t\t\tcurrentPath.pop();\n\t\t\t\tcurrentMove.moveData = currentMoveData.map((m) => cloneMoveData(m));\n\t\t\t\tcurrentMove.metadata = createDummyMoveMetadata();\n\t\t\t\tconst clockSyntax = currentMove.comment?.match(PGN4_SYNTAX.COMMENT_SYNTAXES.CLOCK);\n\t\t\t\tif (clockSyntax && !isNaN(Number(clockSyntax[1]))) {\n\t\t\t\t\tcurrentMove.comment = currentMove.comment?.replace(PGN4_SYNTAX.COMMENT_SYNTAXES.CLOCK, \"\");\n\t\t\t\t\tcurrentMove.metadata.playerClock = Number(clockSyntax[1]);\n\t\t\t\t}\n\t\t\t\tconst arrowSyntax = currentMove.comment?.match(PGN4_SYNTAX.COMMENT_SYNTAXES.ARROWS);\n\t\t\t\tif (arrowSyntax) {\n\t\t\t\t\tconst arrows = arrowSyntax[1].split(\",\");\n\t\t\t\t\tfor (const arrow of arrows) {\n\t\t\t\t\t\tconst [color, coordinate] = [arrow[0], arrow.slice(1)];\n\t\t\t\t\t\tconst numericColor = color.toLowerCase(),\n\t\t\t\t\t\t\tarrowCoordinates = parseEnPassantCoordinates(coordinate);\n\t\t\t\t\t\tif (!verifyColorEnumValue(numericColor) || !arrowCoordinates) continue;\n\t\t\t\t\t\tcurrentMove.metadata.highlightedArrows.push([colorEnum[numericColor], ...arrowCoordinates]);\n\t\t\t\t\t}\n\t\t\t\t\tcurrentMove.comment = currentMove.comment?.replace(PGN4_SYNTAX.COMMENT_SYNTAXES.ARROWS, \"\");\n\t\t\t\t}\n\t\t\t\tconst squareSyntax = currentMove.comment?.match(PGN4_SYNTAX.COMMENT_SYNTAXES.SQUARES);\n\t\t\t\tif (squareSyntax) {\n\t\t\t\t\tconst squares = squareSyntax[1].split(\",\");\n\t\t\t\t\tfor (const square of squares) {\n\t\t\t\t\t\tconst [color, inputCoordinate] = [square[0], square.slice(1)];\n\t\t\t\t\t\tconst numericColor = color.toLowerCase(),\n\t\t\t\t\t\t\tcoordinate = parseSingleCoordinate(inputCoordinate);\n\t\t\t\t\t\tif (!verifyColorEnumValue(numericColor) || !coordinate) continue;\n\t\t\t\t\t\tcurrentMove.metadata.highlightedSquares.push([colorEnum[numericColor], coordinate]);\n\t\t\t\t\t}\n\t\t\t\t\tcurrentMove.comment = currentMove.comment?.replace(PGN4_SYNTAX.COMMENT_SYNTAXES.SQUARES, \"\");\n\t\t\t\t}\n\t\t\t\tconst annotationMatch = currentMove.comment?.match(PGN4_SYNTAX.COMMENT_SYNTAXES.ANNOTATION);\n\t\t\t\tif (annotationMatch) {\n\t\t\t\t\tcurrentMove.metadata.annotation = annotationMatch[1];\n\t\t\t\t\tcurrentMove.comment = currentMove.comment?.replace(PGN4_SYNTAX.COMMENT_SYNTAXES.ANNOTATION, \"\");\n\t\t\t\t}\n\n\t\t\t\tif (verifyMoveWrapperProperties(currentMove)) {\n\t\t\t\t\tmoveList.push(Object.assign({}, currentMove));\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error(`Not all properties of move wrapper are filled out: ${JSON.stringify(currentMove)}`);\n\t\t\t\t}\n\n\t\t\t\tcurrentMove = {\n\t\t\t\t\talternativeLines: [],\n\t\t\t\t\tcomment: \"\"\n\t\t\t\t};\n\t\t\t\tcurrentMoveData = undefined;\n\t\t\t}\n\t\t}\n\n\t\tfunction obtainMoveFromInfo(info: string): Move {\n\t\t\tconst currentMove: MoveComponent[] = [];\n\t\t\tconst internalType = obtainInternalType(info[0]);\n\t\t\tif (info.length === 1 && internalType !== undefined) {\n\t\t\t\treturn [internalType];\n\t\t\t}\n\n\t\t\tconst standardMove = obtainStandardMove(info);\n\t\t\tif (standardMove) currentMove.push(standardMove);\n\t\t\tconst droppingMove = obtainDroppingMove(info);\n\t\t\tif (droppingMove) currentMove.push(droppingMove);\n\t\t\tconst duckMove = obtainDuckMove(info);\n\t\t\tif (duckMove) currentMove.push(duckMove);\n\n\t\t\tif (verifyRequiredMove(currentMove)) {\n\t\t\t\treturn currentMove;\n\t\t\t} else throw new Error(`Move length is 0 for string ${info}`);\n\t\t}\n\n\t\tlet currentMoveData: Move | undefined;\n\t\tlet currentMove: Partial<MoveWrapper> = {\n\t\t\talternativeLines: [],\n\t\t\tcomment: \"\"\n\t\t};\n\n\t\tlet increment = -1,\n\t\t\tvariationIncrement = -1;\n\t\ttry {\n\t\t\tfor (let i = 0; i < selectedMove.length; i++) {\n\t\t\t\tconst isNumNaN = isNaN(Number(selectedMove[i]));\n\t\t\t\tif (isNumNaN && !/\\s/.test(selectedMove[i]) && selectedMove[i] !== PGN4_SYNTAX.SPLIT) {\n\t\t\t\t\tif (PGN4_SYNTAX.PIECE_REGEX_SIMPLIFIED.test(selectedMove[i])) {\n\t\t\t\t\t\tconst index = getMoveIndexes(i);\n\t\t\t\t\t\tcurrentMoveData = obtainMoveFromInfo(selectedMove.substring(i, index));\n\t\t\t\t\t\ti = index;\n\t\t\t\t\t} else if (moves[i] === PGN4_SYNTAX.BRACKETS.COMMENT_START) {\n\t\t\t\t\t\tconst index = parseComment(i);\n\t\t\t\t\t\tcurrentMove.comment = moves.substring(i + 1, index);\n\t\t\t\t\t\ti = index;\n\t\t\t\t\t} else if (moves[i] === PGN4_SYNTAX.BRACKETS.VARIATION_START) {\n\t\t\t\t\t\tconst index = findBracketIndex(i);\n\t\t\t\t\t\tcurrentPath.push(increment + 1, ++variationIncrement);\n\t\t\t\t\t\tcurrentMove.alternativeLines?.push([...parseMoves(moves.substring(i + 1, index), currentPath.slice())]);\n\t\t\t\t\t\ti = index;\n\t\t\t\t\t}\n\t\t\t\t} else if (\n\t\t\t\t\t(selectedMove[i] === PGN4_SYNTAX.SPLIT && moves[i + 1] && moves[i + 1] === PGN4_SYNTAX.SPLIT) ||\n\t\t\t\t\t(moves[i].trim() && !isNumNaN && moves[i + 1] && (moves[i + 1] === PGN4_SYNTAX.SPLIT || !isNaN(Number(moves[i + 1]))))\n\t\t\t\t) {\n\t\t\t\t\tif (!isNumNaN) i = getEnumeratorIndex(i);\n\t\t\t\t\tif (currentMoveData) {\n\t\t\t\t\t\tprocessMoveDataInsertion();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} finally {\n\t\t\tprocessMoveDataInsertion();\n\t\t\tcurrentPath.push(increment + 1);\n\t\t\tcurrentMove.path = currentPath.slice();\n\t\t\tif (verifyMoveWrapperProperties(currentMove)) {\n\t\t\t\tmoveList.push(Object.assign({}, currentMove));\n\t\t\t}\n\t\t}\n\n\t\treturn moveList;\n\t};\n\n\treturn parseMoves(moves, []);\n};\n","import { createTuple, Tuple, verifyTupleType } from \"@client/ts/baseTypes\";\nimport { BoardSquares, initializeBoardSquares } from \"@client/ts/logic/BaseInterfaces\";\nimport { FENData, FENOptions } from \"@moveGeneration/FENData/FENData\";\nimport type { FENOptionsTags } from \"@moveGeneration/FENData/FENOptions/FENOptionsTagsInterface\";\nimport { boardDimension, colors, totalPlayers } from \"@moveGeneration/GameInformation/GameData\";\nimport {\n\tverifyColorEnumValue,\n\tcolorEnum,\n\tCoordinate,\n\tnonPlayablePieces,\n\tstringColorEnum\n} from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport { createPieceFromString, emptyPieceString, PieceString } from \"@moveGeneration/GameInformation/GameUnits/PieceString\";\nimport type { PieceLetter } from \"@moveGeneration/PieceControl/PieceControlInterface\";\nimport type { VariantTag } from \"../TagInterface\";\nimport { tagNamesEqual, unwrapTag, wrapTag } from \"../Utils\";\n\nexport function checkDimensionIntersection(dimension: Coordinate, [i, j]: Coordinate) {\n\tconst dimensionI = (boardDimension - dimension[0]) / 2,\n\t\tdimensionJ = (boardDimension - dimension[1]) / 2;\n\treturn i < dimensionI || i >= dimensionI + dimension[0] || j < dimensionJ || j >= dimensionJ + dimension[1];\n}\n\nfunction serializeFENOptions(fenOptions: FENOptions): string {\n\tconst resultingStrings: string[] = [];\n\tlet key: keyof FENOptionsTags;\n\tfor (key in fenOptions.tags) {\n\t\tif (!Object.prototype.hasOwnProperty.call(fenOptions.tags, key)) continue;\n\t\tconst serializedForm = fenOptions.tags[key].serialize();\n\t\tif (serializedForm) resultingStrings.push(serializedForm);\n\t}\n\n\treturn `{${resultingStrings.join(\",\")}}`;\n}\n\nfunction modifyFourBooleanParameter(part: string, fenDataArrayRef: Tuple<boolean, typeof totalPlayers>) {\n\tconst booleans = part.split(\",\").map((e) => Boolean(Number(e)));\n\tif (verifyTupleType(booleans, totalPlayers)) {\n\t\tfenDataArrayRef.forEach((_, i, arr) => (arr[i] = booleans[i]));\n\t} else {\n\t\tconsole.error(\"Incorrect amount of arguments for the boolean parameter length in FENData: \" + part);\n\t\tconsole.trace(`Expected ${totalPlayers} arguments, but got ${booleans.length}`);\n\t}\n}\n\nconst predefinedFENpositions = {\n\t\"4PC\": \"R-0,0,0,0-1,1,1,1-1,1,1,1-0,0,0,0-0-x,x,x,yR,yN,yB,yK,yQ,yB,yN,yR,x,x,x/x,x,x,yP,yP,yP,yP,yP,yP,yP,yP,x,x,x/x,x,x,8,x,x,x/bR,bP,10,gP,gR/bN,bP,10,gP,gN/bB,bP,10,gP,gB/bQ,bP,10,gP,gK/bK,bP,10,gP,gQ/bB,bP,10,gP,gB/bN,bP,10,gP,gN/bR,bP,10,gP,gR/x,x,x,8,x,x,x/x,x,x,rP,rP,rP,rP,rP,rP,rP,rP,x,x,x/x,x,x,rR,rN,rB,rQ,rK,rB,rN,rR,x,x,x\",\n\t\"4PCo\": \"R-0,0,0,0-1,1,1,1-1,1,1,1-0,0,0,0-0-x,x,x,yR,yN,yB,yK,yQ,yB,yN,yR,x,x,x/x,x,x,yP,yP,yP,yP,yP,yP,yP,yP,x,x,x/x,x,x,8,x,x,x/bR,bP,10,gP,gR/bN,bP,10,gP,gN/bB,bP,10,gP,gB/bK,bP,10,gP,gQ/bQ,bP,10,gP,gK/bB,bP,10,gP,gB/bN,bP,10,gP,gN/bR,bP,10,gP,gR/x,x,x,8,x,x,x/x,x,x,rP,rP,rP,rP,rP,rP,rP,rP,x,x,x/x,x,x,rR,rN,rB,rQ,rK,rB,rN,rR,x,x,x\",\n\t\"4PCb\": \"R-0,0,0,0-1,1,1,1-1,1,1,1-0,0,0,0-0-x,x,x,yR,yN,yB,yQ,yK,yB,yN,yR,x,x,x/x,x,x,yP,yP,yP,yP,yP,yP,yP,yP,x,x,x/x,x,x,8,x,x,x/bR,bP,10,gP,gR/bN,bP,10,gP,gN/bB,bP,10,gP,gB/bQ,bP,10,gP,gQ/bK,bP,10,gP,gK/bB,bP,10,gP,gB/bN,bP,10,gP,gN/bR,bP,10,gP,gR/x,x,x,8,x,x,x/x,x,x,rP,rP,rP,rP,rP,rP,rP,rP,x,x,x/x,x,x,rR,rN,rB,rQ,rK,rB,rN,rR,x,x,x\",\n\t\"4PCn\": \"R-0,0,0,0-1,1,1,1-1,1,1,1-0,0,0,0-0-x,x,x,yR,yN,yB,yQ,yK,yB,yN,yR,x,x,x/x,x,x,yP,yP,yP,yP,yP,yP,yP,yP,x,x,x/x,x,x,8,x,x,x/bR,bP,10,gP,gR/bN,bP,10,gP,gN/bB,bP,10,gP,gB/bQ,bP,10,gP,gK/bK,bP,10,gP,gQ/bB,bP,10,gP,gB/bN,bP,10,gP,gN/bR,bP,10,gP,gR/x,x,x,8,x,x,x/x,x,x,rP,rP,rP,rP,rP,rP,rP,rP,x,x,x/x,x,x,rR,rN,rB,rQ,rK,rB,rN,rR,x,x,x\",\n\t\"2PC\": \"R-0,1,0,1-1,1,1,1-1,1,1,1-0,0,0,0-0-{'pawnBaseRank':5,'wb':true,'dim':'8x8'}-x,x,x,x,x,x,x,x,x,x,x,x,x,x/x,x,x,x,x,x,x,x,x,x,x,x,x,x/x,x,x,x,x,x,x,x,x,x,x,x,x,x/x,x,x,yR,yN,yB,yQ,yK,yB,yN,yR,x,x,x/x,x,x,yP,yP,yP,yP,yP,yP,yP,yP,x,x,x/x,x,x,8,x,x,x/x,x,x,8,x,x,x/x,x,x,8,x,x,x/x,x,x,8,x,x,x/x,x,x,rP,rP,rP,rP,rP,rP,rP,rP,x,x,x/x,x,x,rR,rN,rB,rQ,rK,rB,rN,rR,x,x,x/x,x,x,x,x,x,x,x,x,x,x,x,x,x/x,x,x,x,x,x,x,x,x,x,x,x,x,x/x,x,x,x,x,x,x,x,x,x,x,x,x,x\"\n} as const;\nconst verifyPredefinedFENPosition = (fenShorthand: string): fenShorthand is keyof typeof predefinedFENpositions =>\n\tfenShorthand in predefinedFENpositions;\n\nconst fenDataTag = \"StartFen4\";\nexport const createFENDataTag = (): VariantTag<{\n\tboard: BoardSquares<PieceString>;\n\tfenData: FENData;\n\tpieceSet: Set<PieceLetter>;\n}> => ({\n\ttag: \"startingPosition\",\n\tcurrentValue: {\n\t\tboard: initializeBoardSquares((): PieceString => emptyPieceString),\n\t\tfenData: new FENData(),\n\t\tpieceSet: new Set<PieceLetter>()\n\t},\n\tverifyTagInParsing(inputTag) {\n\t\treturn tagNamesEqual(inputTag, fenDataTag);\n\t},\n\tparseTag(inputTag) {\n\t\tconst tagContents = unwrapTag(inputTag, fenDataTag);\n\t\tconst fenDataString = verifyPredefinedFENPosition(tagContents) ? predefinedFENpositions[tagContents] : tagContents;\n\n\t\tconst fenData = new FENData();\n\t\tconst board: BoardSquares<PieceString> = initializeBoardSquares(() => emptyPieceString);\n\t\tconst pieceSet = new Set<PieceLetter>();\n\n\t\tconst transparentWall = createPieceFromString(\"x\");\n\t\tconst parts = fenDataString.split(\"-\");\n\t\tif (parts.length < 7 || parts[parts.length - 1].split(\"/\").length !== boardDimension) {\n\t\t\tconsole.warn(\"FEN has less than 7 parts: \" + fenDataString);\n\t\t} else {\n\t\t\tconst sideToMove = parts[0].charAt(0).toLowerCase();\n\t\t\tif (verifyColorEnumValue(sideToMove)) {\n\t\t\t\tfenData.sideToMove = colorEnum[sideToMove];\n\t\t\t} else {\n\t\t\t\tconsole.warn(\"FEN option 1: side to move is not an alphabetic color: \" + sideToMove);\n\t\t\t}\n\n\t\t\tmodifyFourBooleanParameter(parts[1], fenData.fenOptions.tag(\"dead\"));\n\t\t\tmodifyFourBooleanParameter(parts[2], fenData.fenOptions.tag(\"castleKingside\"));\n\t\t\tmodifyFourBooleanParameter(parts[3], fenData.fenOptions.tag(\"castleQueenside\"));\n\n\t\t\tconst points = parts[4].split(\",\").map((e) => Number(e));\n\t\t\tif (verifyTupleType(points, totalPlayers)) {\n\t\t\t\tfenData.points = points;\n\t\t\t} else {\n\t\t\t\tconsole.warn(`FEN option 5: points is of incorrect length: ${points.join(\",\")}`);\n\t\t\t}\n\n\t\t\tfenData.plyCount = Number(parts[5]);\n\n\t\t\tconst royals: Tuple<Coordinate | null, typeof totalPlayers> = createTuple(null, totalPlayers);\n\t\t\tconst verifyKeyInTags = (key: string): key is keyof FENOptionsTags => key in fenData.fenOptions.tags;\n\n\t\t\tif (parts[6].startsWith(\"{\")) {\n\t\t\t\tconst initialParsing: unknown = JSON.parse(parts[6].replaceAll(\"(\", \"[\").replaceAll(\")\", \"]\").replaceAll(\"'\", '\"'));\n\t\t\t\tif (typeof initialParsing !== \"object\" || initialParsing === null)\n\t\t\t\t\tthrow new Error(\"Unexpected object definition syntax for \" + String(initialParsing));\n\t\t\t\tfor (const [key, value] of Object.entries(initialParsing)) {\n\t\t\t\t\tif (!verifyKeyInTags(key)) continue;\n\t\t\t\t\tconst tag = fenData.fenOptions.tags[key];\n\t\t\t\t\ttag.value = tag.parse(value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst position = parts[parts.length - 1].split(\"/\"),\n\t\t\t\tdimension = fenData.fenOptions.tag(\"dim\");\n\t\t\tposition.forEach((line, i) => {\n\t\t\t\tlet j = 0;\n\t\t\t\tfor (let pieceStr of line.split(\",\")) {\n\t\t\t\t\tif (pieceStr.endsWith('\"')) pieceStr = pieceStr.slice(0, -1);\n\t\t\t\t\tif (isNaN(Number(pieceStr))) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (!checkDimensionIntersection(dimension, [i, j])) {\n\t\t\t\t\t\t\t\tconst pieceString = createPieceFromString(pieceStr);\n\t\t\t\t\t\t\t\tboard[i][j] = pieceString;\n\t\t\t\t\t\t\t\tif (pieceString.isPiece()) {\n\t\t\t\t\t\t\t\t\tif (pieceString.piece === \"K\" && !royals[pieceString.color]) {\n\t\t\t\t\t\t\t\t\t\troyals[pieceString.color] = [i, j];\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tpieceSet.add(pieceString.piece);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else j += Number(pieceStr);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfor (const color of colors) {\n\t\t\t\tfor (const [piece] of fenData.fenOptions.tag(\"bank\")[color]) {\n\t\t\t\t\tif (piece.piece in nonPlayablePieces) continue;\n\t\t\t\t\tpieceSet.add(piece.piece);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfenData.fenOptions.setTag(\"royal\", royals);\n\n\t\t\tfor (let i = 0; i < boardDimension; i++) {\n\t\t\t\tfor (let j = 0; j < boardDimension; j++) {\n\t\t\t\t\tif (checkDimensionIntersection(dimension, [i, j])) board[i][j] = transparentWall;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!fenData.fenOptions.tag(\"noCorners\")) {\n\t\t\tconst cornerAreaSize = 3,\n\t\t\t\tarrayDimension = boardDimension - 1;\n\t\t\tbaseLoop: for (let i = 0; i < cornerAreaSize; i++) {\n\t\t\t\tfor (let j = 0; j < cornerAreaSize; j++) {\n\t\t\t\t\tconst squares: Coordinate[] = [\n\t\t\t\t\t\t[i, j],\n\t\t\t\t\t\t[arrayDimension - i, j],\n\t\t\t\t\t\t[i, arrayDimension - j],\n\t\t\t\t\t\t[arrayDimension - i, arrayDimension - j]\n\t\t\t\t\t];\n\t\t\t\t\tfor (const square of squares) {\n\t\t\t\t\t\tconst pieceString = board[square[0]][square[1]];\n\t\t\t\t\t\tif (!pieceString.isWall() || pieceString.piece !== transparentWall.piece) {\n\t\t\t\t\t\t\tfenData.fenOptions.setTag(\"noCorners\", true);\n\t\t\t\t\t\t\tbreak baseLoop;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { fenData, board, pieceSet };\n\t},\n\tserialize(baseBoard) {\n\t\tconst { board, data } = baseBoard;\n\t\tlet resultingString = \"\";\n\t\tresultingString += `${stringColorEnum[data.sideToMove].toUpperCase()}-`;\n\t\tresultingString += `${data.fenOptions\n\t\t\t.tag(\"dead\")\n\t\t\t.map((d) => Number(d))\n\t\t\t.join(\",\")}-`;\n\t\tresultingString += `${data.fenOptions\n\t\t\t.tag(\"castleKingside\")\n\t\t\t.map((d) => Number(d))\n\t\t\t.join(\",\")}-`;\n\t\tresultingString += `${data.fenOptions\n\t\t\t.tag(\"castleQueenside\")\n\t\t\t.map((d) => Number(d))\n\t\t\t.join(\",\")}-`;\n\t\tresultingString += `${data.points.join(\",\")}-`;\n\t\tresultingString += `${data.plyCount}-`;\n\t\tresultingString += `${serializeFENOptions(data.fenOptions)}-`;\n\n\t\tlet currentEmptySquares = 0;\n\t\tfor (const row of board) {\n\t\t\tfor (const pieceString of row) {\n\t\t\t\tif (pieceString.isEmpty()) {\n\t\t\t\t\tcurrentEmptySquares++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (currentEmptySquares !== 0) {\n\t\t\t\t\tresultingString += `${currentEmptySquares},`;\n\t\t\t\t\tcurrentEmptySquares = 0;\n\t\t\t\t}\n\t\t\t\tresultingString += `${pieceString.value},`;\n\t\t\t}\n\n\t\t\tif (currentEmptySquares !== 0) {\n\t\t\t\tresultingString += `${currentEmptySquares}/`;\n\t\t\t\tcurrentEmptySquares = 0;\n\t\t\t} else {\n\t\t\t\tresultingString = resultingString.slice(0, -1);\n\t\t\t\tresultingString += \"/\";\n\t\t\t}\n\t\t}\n\t\tresultingString = resultingString.slice(0, -1);\n\n\t\treturn wrapTag(fenDataTag, resultingString);\n\t}\n});\n","import type { Coordinate } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\n\nexport function parseSingleCoordinate(coordinate: string): Coordinate | undefined {\n\tif (coordinate.length === 0) return;\n\tconst parsedCoordinate: [number, number] = [14 - Number(coordinate.slice(1)), coordinate.charCodeAt(0) - 97];\n\tif (Number.isNaN(parsedCoordinate[0]) || Number.isNaN(parsedCoordinate[1])) return;\n\tif (parsedCoordinate[0] < 0 || parsedCoordinate[0] > 13 || parsedCoordinate[1] < 0 || parsedCoordinate[1] > 13) return;\n\treturn parsedCoordinate;\n}\n\nexport function parseEnPassantCoordinates(coordinates: string): [Coordinate, Coordinate] | undefined {\n\tif (coordinates.length === 0) return;\n\tconst coordinatesArray = coordinates.split(\":\");\n\treturn [\n\t\t[14 - Number(coordinatesArray[0].slice(1)), coordinatesArray[0].charCodeAt(0) - 97],\n\t\t[14 - Number(coordinatesArray[1].slice(1)), coordinatesArray[1].charCodeAt(0) - 97]\n\t];\n}\n\nexport const wrapTag = (baseTag: string, content: string) => `[${baseTag} \"${content}\"]`;\nexport const tagNamesEqual = (baseTag: string, definedTag: string) => baseTag.toLowerCase().startsWith(`[${definedTag.toLowerCase()} \"`);\nexport const unwrapTag = (baseTag: string, definedTag: string) => baseTag.replace(`[${definedTag} \"`, \"\").slice(0, -1);\n","import { Tuple } from \"../baseTypes\";\n\nexport function shuffleArray<T>(array: T[]): T[];\nexport function shuffleArray<T, L extends number>(array: Tuple<T, L>): Tuple<T, L>;\nexport function shuffleArray<T, L extends number>(array: T[] | Tuple<T, L>): T[] | Tuple<T, L> {\n\tlet i = array.length;\n\tlet r = 0;\n\twhile (i !== 0) {\n\t\tr = Math.floor(Math.random() * i--);\n\t\t[array[i], array[r]] = [array[r], array[i]];\n\t}\n\n\treturn array;\n}\n\nexport function compareArrays(arr1: unknown[] | readonly unknown[], arr2: unknown[] | readonly unknown[]): boolean {\n\tif (arr1 === arr2) return true;\n\tif (arr1.length !== arr2.length) return false;\n\tfor (let i = 0; i < arr1.length; i++) {\n\t\tconst first = arr1[i],\n\t\t\tsecond = arr2[i];\n\t\tif (Array.isArray(first) && Array.isArray(second)) {\n\t\t\tif (!compareArrays(first, second)) return false;\n\t\t} else if (first !== second) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function countMinimumOf2DArrayExcludingZero(array: number[][]): number {\n\tlet minimum = Infinity;\n\tfor (const row of array) {\n\t\tfor (const number of row) {\n\t\t\tif (number !== 0 && number < minimum) {\n\t\t\t\tminimum = number;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn minimum;\n}\n\nexport function findLastIndex<T>(array: T[], callback: (value: T, index: number, arr: T[]) => boolean): number {\n\tlet i = array.length;\n\twhile (i--) {\n\t\tif (callback(array[i], i, array)) return i;\n\t}\n\treturn -1;\n}\n","export function truncateNumber(number: number, digits: number): number {\n\tconst multiplier = Math.pow(10, digits);\n\tconst adjusted = number * multiplier;\n\tif (adjusted < 0) {\n\t\treturn Math.ceil(adjusted / multiplier);\n\t} else {\n\t\treturn Math.floor(adjusted / multiplier);\n\t}\n}\n\nexport function bitCount(number: number): number {\n\tnumber = number - ((number >> 1) & 0x55555555);\n\tnumber = (number & 0x33333333) + ((number >> 2) & 0x33333333);\n\treturn (((number + (number >> 4)) & 0xf0f0f0f) * 0x1010101) >> 24;\n}\n","export function copyClass<T, P extends unknown[]>(instance: T, baseClass: new (...args: P) => T, customProperties = false): T {\n\tconst prototype: unknown = Object.getPrototypeOf(instance);\n\tif (typeof prototype !== \"object\") throw new Error(\"Expected prototype to be an object\");\n\tconst properties: unknown = Object.create(prototype);\n\tif (typeof properties !== \"object\" || properties === null) throw new Error(\"Expected prototype to be an object\");\n\tconst copy: unknown = Object.assign(properties, customProperties ? {} : instance);\n\tif (!(copy instanceof baseClass)) throw new Error(\"Expected prototype to not be overridden\");\n\treturn copy;\n}\n\nexport const verifyObjectType = (v: unknown): v is Record<PropertyKey, unknown> => typeof v === \"object\" && v !== null;\nexport function verifyPropertiesInObject<K extends string>(obj: Record<PropertyKey, unknown>, keys: readonly K[]): obj is Record<K, unknown> {\n\tfor (const key of keys) {\n\t\tif (!Object.prototype.hasOwnProperty.call(obj, key)) return false;\n\t}\n\treturn true;\n}\n","export function formatOrdinalNumber(num: number): string {\n\tconst lastTwoDigits = Number(String(num).slice(-2));\n\tif (lastTwoDigits > 3 && lastTwoDigits < 21) return \"th\";\n\tswitch (lastTwoDigits % 10) {\n\t\tcase 1:\n\t\t\treturn \"st\";\n\t\tcase 2:\n\t\t\treturn \"nd\";\n\t\tcase 3:\n\t\t\treturn \"rd\";\n\t\tdefault:\n\t\t\treturn \"th\";\n\t}\n}\n\nexport function compileEnumeration(list: string[]): string {\n\tif (list.length === 0) return \"\";\n\tif (list.length === 1) return list[0];\n\tlet result = \"\";\n\tfor (let i = 0; i < list.length; i++) {\n\t\tif (i === list.length - 2) {\n\t\t\tresult += ` ${list[i]} or `;\n\t\t} else if (i === list.length - 1) {\n\t\t\tresult += list[i];\n\t\t} else {\n\t\t\tresult += list[i] + \", \";\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function prefixWithIndefiniteArticle(str: string): string {\n\tconst vowels = /[AEUIO]/i;\n\treturn vowels.test(str.charAt(0)) ? \"an \" + str : \"a \" + str;\n}\n\nexport function convertSecondsToFlexibleHoursMinutesSeconds(seconds: number): string {\n\tif (seconds >= 3600) {\n\t\treturn new Date(seconds * 1000).toISOString().substring(11, 16);\n\t} else {\n\t\treturn new Date(seconds * 1000).toISOString().substring(14, 19);\n\t}\n}\n\nexport function convertCamelCaseToKebabCase(baseString: string): string {\n\treturn baseString.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n}\n\nexport function hashString(string: string): number {\n\tlet hash = 0;\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst char = string.charCodeAt(i);\n\t\thash = (hash << 5) - hash + char;\n\t\thash |= 0;\n\t}\n\n\treturn hash;\n}\n","var map = {\n\t\"./BoardDecorators/AllowPassing.ts\": 9987,\n\t\"./BoardDecorators/AlternativeTeams.ts\": 12546,\n\t\"./BoardDecorators/BarePieceRule.ts\": 52702,\n\t\"./BoardDecorators/Blindfold.ts\": 37010,\n\t\"./BoardDecorators/CaptureTheKing.ts\": 1953,\n\t\"./BoardDecorators/Chess960.ts\": 89506,\n\t\"./BoardDecorators/Crazyhouse.ts\": 43210,\n\t\"./BoardDecorators/DuckChess.ts\": 94001,\n\t\"./BoardDecorators/FogOfWar.ts\": 55136,\n\t\"./BoardDecorators/ForcedCapture.ts\": 66798,\n\t\"./BoardDecorators/GameMetadataRules.ts\": 83543,\n\t\"./BoardDecorators/Ghostboard.ts\": 23681,\n\t\"./BoardDecorators/ParadigmChess30.ts\": 4214,\n\t\"./BoardDecorators/PiecesFaceCenter.ts\": 97148,\n\t\"./BoardDecorators/SeirawanSetup.ts\": 33340,\n\t\"./BoardDecorators/SelfCheck.ts\": 73401,\n\t\"./BoardDecorators/SetupChess.ts\": 301,\n\t\"./BoardDecorators/Taboo.ts\": 25896,\n\t\"./BoardVariantModules/EngineMoveGeneration/Algorithms/ComfuterEvaluation.ts\": 53241,\n\t\"./BoardVariantModules/EngineMoveGeneration/Algorithms/ComfuterEvaluationExtensions.ts\": 42751,\n\t\"./BoardVariantModules/EngineMoveGeneration/Algorithms/MixedAlgorithms.ts\": 78497,\n\t\"./BoardVariantModules/EngineMoveGeneration/Algorithms/RandomEvaluation.ts\": 12160,\n\t\"./BoardVariantModules/EngineMoveGeneration/Algorithms/RandomEvaluationExtensions.ts\": 48656,\n\t\"./BoardVariantModules/EngineMoveGeneration/BotInterface.ts\": 69283,\n\t\"./BoardVariantModules/InsufficientMaterial/InsufficientMaterialChecker.ts\": 14599,\n\t\"./BoardVariantModules/InsufficientMaterial/InsufficientMaterialConstructor.ts\": 84926,\n\t\"./BoardVariantModules/InsufficientMaterial/PieceMedianCounter.ts\": 7270,\n\t\"./BoardVariantModules/InsufficientMaterial/StateSerializer.ts\": 72420,\n\t\"./BoardVariantModules/InsufficientMaterial/Utilities.ts\": 63659,\n\t\"./FENDataDecorators/Atomic.ts\": 9896,\n\t\"./FENDataDecorators/DeadKingWalking.ts\": 83782,\n\t\"./FENDataDecorators/EnPassant.ts\": 95143,\n\t\"./FENDataDecorators/FatalCapture.ts\": 67870,\n\t\"./FENDataDecorators/FiftyMoveRule.ts\": 83433,\n\t\"./FENDataDecorators/Giveaway.ts\": 35561,\n\t\"./FENDataDecorators/KingOfTheHill.ts\": 22469,\n\t\"./FENDataDecorators/NCheck.ts\": 23446,\n\t\"./FENDataDecorators/OppositeMultiplier.ts\": 55867,\n\t\"./FENDataDecorators/OppositeSideCastling.ts\": 59495,\n\t\"./FENDataDecorators/PiecesGoToBanks.ts\": 60705,\n\t\"./FENDataDecorators/PlayForMate.ts\": 61252,\n\t\"./FENDataDecorators/PointsForMate.ts\": 34208,\n\t\"./FENDataDecorators/StalemateOptions.ts\": 47822,\n\t\"./FENDataDecorators/Takeover.ts\": 96572,\n\t\"./FENDataDecorators/ThreefoldRepetition.ts\": 38260,\n\t\"./PieceControlDecorators/AnyCapture.ts\": 93323,\n\t\"./PieceControlDecorators/PromoteTo.ts\": 96823,\n\t\"./PieceControlDecorators/PromotionRank.ts\": 46393,\n\t\"./PieceControlDecorators/RoyalsCannotCapture.ts\": 87247,\n\t\"./PieceControlDecorators/Sideways.ts\": 49556,\n\t\"./PieceControlDecorators/Stonewall.ts\": 71016,\n\t\"./PieceControlDecorators/Torpedo.ts\": 90433\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 73949;"],"names":["chessGlyphIndex","doubleBackwardArrow","downloadIcon","endBackwardArrow","forwardDoubleArrow","userSearch","userConnection","notAllowed","clock","extraInformation","authorshipNotice","draw","backwardArrow","userInformation","smallBackwardArrow","leaderBoard","equal","downwardArrow","upperArrow","endForwardArrow","urlAttached","crossMark","rightOutwardsArrow","hashtag","newspaper","twitter","checkMark","camera","alternativeLine","play","pause","reload","world","points","medal","soundOff","circleCrossMark","steadyEvaluation","facebook","circle","soundOn","plus","openEye","copyToClipboard","wavingFlag","editText","fullArrowLeft","fullArrowRight","smallArrowForward","goBackArrow","youtube","calendar","user","chat","lock","box","circularArrows","lightBulb","briefcase","board","knightArrows","newMessage","drawing","twoUsers","twoUsers2","openingBook","disclaimer","ringingBell","list","rookAndPawn","hamburgerList","mail","userExtraInformation","house","sheetAndPencil","openMail","chatBox","fullArrowDown","smallArrowUp","fullArrowUp","arrowIntoBox","key","file","books","sharing","userNotAllowed","userCrossMark","questionMark","boardWithCircle","googlePlus","reset","reddit","openBook","userPlus","cog","pin","suitcase","mark","cake","openLink","bishopStroke","linkedin","knight","threeCheck","chess960rapid","connection","quotes","exit","crossedBinoculars","leaderBoardReversed","bishopFull","printer","verticalEvaluation","t","pawn","twoPawns","unrated","elite","bug","cpu","forwardArrowCircle","squareCrossMark","android","twoUsersPlus","crossedArrows","king","kingFull","bishop","twoFullRooks","kingStrokes","fullKnight2","chess960","leaderBoardAscent","crazyhouse","checklist","target","pawnAndHalfRook","halfRookAndPawn","knightStrokes","pawnLogo","queenFull","exchange","userNext","userPrevious","compass","pawnStrokes","rookStrokes","screenDisplays","kingOfTheHill","antichess","queen","threePawns","queenStrokes","rookSmallStrokes","rookSmall","bishopPair","rookPair","knightPair","twoUsersSearch","shield","kingSmall","bishopSmall","knightSmall","userNoConnection","userStream","queenAlternative","pawnAlternative","threePawnsAlternative","twoPawnsAlternative","rookAlternative","knightPairFull","bishopPairFull","addBoard","diamond","scales","pawn3d","userShieldPlus","gold","ellipsis","analysis","archive","arrowBottomIntoBox","disclaimerEditor","sendTrophy","addCheckMark","checkMarkSquare","squareStaircase","arrowsUpBottom","star","verticalDash","shieldCheckMark","top3","addImage","chessStream","removeTrophy","importantMail","arrowLeave","donut","computerAnalysis","checkMarkSquareSmall","diagonalExpandArrows","leaderBoardHorizontal","checkMarkAsCircle","arrowFromBox","boxArrowBottom","boxArrowLeft","boxArrowRight","fourArrowsCentral","clashingSwords","ratingOffset","smilingFace","fileCabinet","editClock","userShield","homeFilled","paymentCard","fourArrowsOutwards","puzzle","addPhoto","arrowWallLeft","arrowWallRight","boardConfiguration","fourBlocks","sandglass","crown","cloudUpload","webChatBox","puzzleRush","knightHops","instagram","squarePlus","squareMinus","squareEqual","square","fireFull","pawnRecycle","noEngine","google","fourPlayer","pieceMeal","arrowBoldUp","arrowBoldDown","blunder","mistake","videoChatBox","bonesCrossed","displays","arrowEnter","newspaperHalf","bookmark","puzzleLarge","movePawn","pawn3dLarge","sun","rapid","blitz","bullet","mortarboard","laptop","resetWidth","pawnConnection","copyToClipboardFromText","fire","crownSmall","orderedList","chess960daily","arrowWallBottom","pawn3dBold","plusInCircle","lightCorner","darkCorner","steepCurve","heart","checkMarkThin","connectionDiagonal","diadem","plusMinus","recycling","metrics","top1","engineCheckMark","wikipedia","tournament","houseConfiguration","computerHindsight","computerCheckMark","lightDarkTheme","whistlingBell","crossMarkCompact","eyeCrossed","fide","favorite","tShirtPawn","addSmile","library","discord","analysisCheckMark","versusComputer","dollarSign","bestMove","gift","evaluationLinear","evaluationThrowaway","evaluationEqual","evaluationDead","evaluationSharp","evaluationPerplexing","evaluationSmooth","libraryAdd","selfPartner","fourPlayerConfiguration","listDownFlow","puzzleBattle","hyperbullet","gameLink","gameStudy","evaluationCrazy","engine","crossedSwordsInCircle","hallmark","like","boardTwoPlayers","fourPlayerChess","variants","cloudUploadCompact","clockIncrement","videoCamera","inaccuracy","bot","torpedo","vk","blindfold","customSettings","captureAnything","pawnSideways","noCastling","fogOfWar","automate","atomic","pawnCounterfeit","elephant","fullBlock","fourFullBlocks","nineFullBlocks","nineFullBlocksCrossed","hamburgerMenuCompact","listCompact","geoMark","crossedDonut","handshake","verified","sandglassRunningOut","rapidLowOnTime","tourneyBanner","noCloud","fork","donutTarget","newCalendarDay","cornerInfiltration","hastTagCompact","chatterbox","circleStar","targetPractice","pawnPromotion","flagProgression","pawnDoubleAttack","kingAndRook","specialMedal","pawnBanner","userSquare","verifiedCandidate","saveFile","duck","addBanner","qrCode","noAnalysis","dualPawn","gameEscape","tournamentCup","noExchanges","tikTok","pieChart","search","binoculars","largeBoard","exclamation","tournamentCupIcon","trashBin","arrowForwardBoldCompact","giftDiamond","filter","noChat","newSheet","xml","blockUser","facebookLike","facebookDislike","apple","phone","verifyFunctionType","func","createTuple","val","length","Array","from","fill","createTupleFromCallback","verifyTupleType","arr","assertNonUndefined","data","Error","throwOnNever","arg","console","dir","TypeError","importAll","r","keys","forEach","getEnumKeys","object","resultingArray","push","hexColorRegex","createHexColor","color","test","verifyHexColor","validateHexColor","_unused","createRGBColor","concat","wrapRGBColor","join","verifyRGBColor","isArray","validateRGBColor","every","c","_unused2","createHSLColor","hue","saturation","lightness","wrapHSLColor","verifyHSLColor","validateHSLColor","verifyNumberRecord","obj","Object","prototype","hasOwnProperty","call","_unused3","wrapIndexedColor","validateIndexedColor","boardDimension","initializeBoardSquares","baseValue","isVerticalPlacement","getVerticalPlacementModulus","num","result","getHorizontalPlacementModulus","compareMoves","SpecialMove","verifyDroppingMove","verifyInternalMove","verifyStandardMove","validateBoardMove","move","startingMoves","firstMove","getLegalMoves","startCoordinates","getDroppingMoves","piece","getAllowedInternalMoves","JSON","stringify","specialMoveSettings","hasEnPassant","variantData","duckChess","_iterator","_createForOfIteratorHelper","_step","_loop","moveComponent","value","find","legalMove","v","specialType","EnPassant","nextChainedMoves","s","n","done","_ret","err","e","f","findLastIndex","colors","getPlayerNameFromColor","totalPlayers","VariantType","createPieceFromData","assertValidMove","createMoveTree","verifyValidMove","createBaseMoveWrapper","validateMoveTree","moves","clonedBoard","createClone","createSnapshot","pregenerateAttacks","dimension","Math","max","fenOptions","tag","traverse","current","currentFullMove","arguments","undefined","currentTimeOnClocks","gameData","timeControl","baseTime","previousSideToMove","i","moveWrapper","moveData","path","alternativeLines","newMoveWrapper","slice","comment","validationResult","firstStandardMoveSet","promotion","map","p","isWall","sideToMove","metadata","movingPiece","isCapture","getCapturedPieces","b","currentSideToMove","results","makeMove","checkmates","checks","_iterator2","_step2","line","playerClock","_objectSpread","currentMove","getMove","stringifyMove","changeGameTermination","snapshot","getBoardSnapshot","boardSnapshot","gameOver","termination","isTwoPlayer","gameType","type","Teams","currentSnapshot","loadSnapshot","getCurrentResult","currentResults","dead","resigned","wb","_iterator3","_step3","Board","PieceString","verifyRequiredMove","decorateClassWithVariants","compareArrays","serializeBoard","stringifyCoordinate","InsufficientMaterialConstructor","InsufficientMaterialChecker","StateSerializer","deserializeInsufficientMaterialState","requiredDispatches","initialDispatches","dispatchSyncRecord","withWorkerResult","_","propertyKey","descriptor","originalMethod","_len","args","_key","postMessage","apply","workerDataSync","gameObjectPropertySync","RequestManager","_dec","_dec2","_dec3","_dec4","_dec5","_dec6","_dec7","_dec8","_dec9","_dec10","_dec11","_dec12","_dec13","_dec14","_dec15","_dec16","_dec17","_dec18","_dec19","_dec20","_dec21","_dec22","_dec23","_dec24","_dec25","_dec26","_dec27","_dec28","_dec29","_dec30","_dec31","_dec32","_class","constructor","_defineProperty","Map","stripPieceStrings","parse","generateInitiallyAliveColors","d","reduce","generateCurrentMoves","internalMoves","legalMoves","getPlayerPieces","set","construct","_variantName","pgn4","variantRules","boardDecorators","insufficientMaterialModule","state","insufficientMaterialChecker","serializeInsufficientMaterialState","generateInsufficientMaterialState","constructWithGeneratedData","insufficientMaterialState","getFENSettings","royalCount","isCustomRoyals","row","isPiece","createSerializedState","getInitiallyAliveColors","initiallyAliveColors","getMoveTree","fullMoveCounter","_iterator4","_step4","resultingWrapper","cachedNames","highlightedArrows","highlightedSquares","_iterator5","_step5","loadSnapshotByPath","preliminarySnapshot","verifyNextChainedMovesAreDeleted","convertStrippedMoveToNormal","newMove","_iterator6","_step6","_moveComponent$promot","fromObjectToClass","passedMove","augmentMoveWithMetadata","makeMoveFunction","serializeBoardToPGN","pieceString","j","_this$legalMoves$get","get","getInternalMoves","getVariantData","getBoard","toObject","getGameData","newGameData","date","toUTCString","getCurrentMove","getVariantRules","resultingRules","_iterator7","_step7","variantRule","getPublicProperties","getVariantType","deleteMove","playPreferredBotMove","getRealPlayers","_iterator8","_step8","_this$legalMoves$get2","preGeneratedAttacks","pieceDrops","algorithm","getDefaultZombieAlgorithm","evaluate","pickPreferredMove","changeFogPerspective","fogOfWarPerspective","newPerspective","nextTurn","getSquareVisibility","squareVisibility","_applyDecoratedDescriptor","getOwnPropertyDescriptor","requestManager","self","onmessage","requestName","method","parameters","emptyPieceString","copyVariantRules","PieceControl","pieceControlConfigSettings","PieceControlConfigurator","control","_control","_isConfigured","coordinates","immunePieces","setCoordinates","x","y","setBaseImmunePieces","immune","setColor","setBoard","constructPieceControl","configure","PieceControlBuilder","_generalConfig","setFENData","fenData","setVariantRules","rules","createPieceControlWrap","letter","information","decoratedControl","InternalMoveSignature","FENData","nonPlayablePieces","deadColorIndex","pawnPieceString","wallPieceString","initPieceControlDeclarations","AttackType","validateVariantRules","createGameTypeSettings","createComplexMoveLegalityTracker","createBasePreGeneratedAttacks","compareCoordinates","copyClass","parsePGN4","baseImmunes","initDecoratorSettings","__baseClass","parsingResults","injectBoard","fenDataDecorators","variantRuleData","initPieceControls","pieceSet","pieces","size","builder","pieceControlDecorators","pieceControlConfigurator","controls","a","isComplexSetup","assign","runComplexLegalityEvaluationChecks","targetObject","presumedPieceLetters","Set","add","isKingInCheck","baseColor","fenRoyal","royal","slidingPieces","hoppingPieces","playerPieces","isEmpty","getCheckmatesAndStalemates","kingChecks","playerArmy","kingCaptures","stalemates","hasComplexRules","moveGenerationSettings","isComplex","hasComplexPieces","getCurrentChecks","playerRoyals","attackingCoordinates","pieceMovements","_step4$value","_slicedToArray","startingCoordinate","attackList","attack","ignoreNextMoves","returnValues","pregeneratedAttacks","affectOptions","ignoreCheckmateChecks","ignoreNextTurn","setNewMove","fenDataString","constructPreliminaryHashString","TeamsCheckmate","Stalemate","exclusiveSideToMoveGeneration","army","armyColor","coordinate","controlBuilder","setting","resultingMoves","getBaseColors","getPseudoLegalMoves","isJumping","attacks","rayGenJumpingAttacks","_iterator9","_step9","hoppingPieceLines","l","attackingColors","isSliding","rayGenSlidingAttacks","_iterator10","_step10","_iterator12","_step12","_iterator13","_step13","subAttack","slidingPiecesLines","m","coordinateArray","rayGen","RayTraceLimited","_iterator11","_step11","_iterator14","_step14","isRoyalOnLine","resultingAttack","_iterator15","_step15","_royal$_color","slidingPiecesRayTracing","wall","isSetupComplex","isComplexEvaluation","isTheMoveLegal","isSeirawanDrop","royals","_moveData$startCoordi","pieceI","pieceJ","_moveData$endCoordina","endCoordinates","attackI","attackJ","moveArray","_this$makeMove","_ref","_ref2","royalI","royalJ","isRoyalMove","attackers","targetSafety","legalitySettings","canKingCapture","_iterator16","_step16","kingCaptureColor","royalDefendedSquare","isFFA","_iterator17","_step17","_step17$value","attackingPiece","attackLine","isPieceUnderAttack","isRoyalUnderAttack","isTheTargetSquarePinListed","_iterator21","_step21","_step21$value","attackedX","attackedY","Boolean","_iterator18","_step18","_step18$value","attackCoordinates","_iterator19","_step19","_step19$value","isTheTargetSquareBlocked","_iterator20","_step20","_step20$value","getCastlingMoves","specialMoves","isKingsideCastlingAvailable","getKingsideCastlingEndCoordinate","CastlingKingside","isQueensideCastlingAvailable","getQueensideCastlingEndCoordinate","CastlingQueenside","getEnPassantMoves","pieceLetter","isPawn","enPassantCaptures","getAvailableEnPassantCaptures","pawnAttacks","_iterator22","_step22","_iterator23","_step23","enP","isIrreversible","irreversible","getSpecialMoves","_this$board$i","pseudoLegalMoves","generatedMove","split","capturedPieces","isKingCapture","_piece","_sideToMove","currentMoves","DrawByAgreement","Resign","maximum","pointIndexes","ClaimWin","Timeout","verifyNumericColor","DisplaySettings","Highlighted","Fogged","Ghosted","Blindfolded","PieceFacesCenter","baseTeams","unstringifyCoordinate","Number","isNaN","FFA","teamSettings","firstTeamColors","secondTeamColors","Solo","isSameTeam","colorA","colorB","getTeammateColor","teammateIndex","indexOf","variantRuleCache","coordinate1","coordinate2","botAlgorithms","ZombieType","createFENOptionsTags","createFENOptionsTagsSnapshot","FENOptions","pieceCoordinates","pieceEndCoordinates","checkSquares","loadSerializedState","newTags","tagsSnapshot","tags","loadTagSnapshot","verifyKeyTag","newOptions","setTag","serializedState","fenTag","generateCastling","_this","_this$tag","_this$tag2","dimensionRY","dimensionBG","dimensions","royalRanks","royalCoordinates","kingsideCastlePieceCoordinate","queensideCastlePieceCoordinate","boardSquares","royalCoordinateI","royalRanksI","condition","royalCoordinate","kArr","castlingData","castlingQueensideData","castlingKingsideData","castleQueenside","qArr","isCastlingAvailable","player","squares","checkSquare","coordinateA","coordinateB","getCastlingEndCoordinate","_this$tag$player","getKingsideCastlingPieceEndCoordinate","getQueensideCastlingPieceEndCoordinate","getKingsideCastlingTandemPiece","getQueensideCastlingTandemPiece","enPassant","F_Checker","createDefaultArmyDeathSettings","createDefaultFENEffectSettings","getNeighboringSideToMove","verifyDrawingTermination","verifyWinningTermination","defaultPointsForMate","plyCount","privateGameOver","newFENData","fenOptionsSnapshot","isDead","getCastlingPieceEndCoordinates","processStandardMove","_promotion$","startI","startJ","endI","endJ","endPiece","_this$getCastlingPiec","_this$getCastlingPiec2","kingsidePiece","queensidePiece","secondKPiece","_this$fenOptions$getK","_this$fenOptions$getK2","kI","kJ","secondQPiece","_this$fenOptions$getQ","_this$fenOptions$getQ2","qI","qJ","error","String","castleKingside","royalPiece","spreadPointsBetweenPlayersEvenly","realPlayers","individualPoints","ceil","obtainPointsForMate","assignPoints","branchBetweenResignationMoves","playerName","toUpperCase","processInternalMove","internalMove","_this$board$insuffici","insufficientMaterial","checkCurrentState","assignGeneralTermination","turnPiecesDead","excludeRoyals","doNotSetDead","deadPlayers","isResignationOver","alivePlayer","findIndex","countTotalPointsOnBoard","Pass","processDroppingMove","bank","areBanksEnabled","setupComplete","playerBank","pieceStringReference","safeReference","bankPieceCount","delete","settings","onlyPawns","getKingCaptures","processPointsForChecks","currentChecks","updatedChecks","playerChecks","has","checkedPlayers","moveStalemates","endSquare","totalMateSum","boardAlternations","pointDistribution","checkmatePoints","pieceCapturingPoints","getPointsForPiece","isOver","_this$board$insuffici2","insufficientPieces","insufficient","previousTurn","singlesPoints","zombieImmune","resultingPoints","firstAlivePlayer","maximumIndex","generalTermination","convertCoordinateToPGN4","createPieceFromString","verifyPieceLetter","verifyZombieType","PGN4_SYNTAX","parseEnPassantCoordinates","parseSingleCoordinate","verifyObjectType","verifyParameterType","param","createBooleanTupleTag","defaultValue","isStatic","resultingObject","serialize","tuple","defaultPawnBaseRank","createPawnBaseRankTag","createEnPassantTag","input","_parseEnPassantCoordi","some","defaultCastleWith","createCastleWithTag","defaultBoxOffset","createBoxOffsetTag","createBooleanTag","defaultDimension","createDimensionTag","baseInput","reverse","defaultZombies","Rando","createZombiesTag","newZombies","zombieType","createRoyalTag","_parseSingleCoordinat","createLivesTag","createBankTag","defaultBanks","pieceDefinition","_pieceDefinition$spli","_pieceDefinition$spli2","_pieceDefinition$spli3","count","charAt","resultingStrings","entries","_ref3","_ref4","pieceStringObject","createPromotedFromTag","promotedFromMap","parsedCoordinate","promotedFromStrings","_step5$value","newMap","_step6$value","clear","_step7$value","createSetupPointsTag","createSeirawanDropsTag","seirawanDropsArray","COORDINATE_REGEX","coord","values","Tags","verifyDynamicFENOptionKey","verifyDynamicTag","pawnBaseRank","boxOffset","dim","noCorners","castleWith","lives","promotedFrom","setupPoints","seirawanDrops","resultingTags","truncateNumber","validateComprehensiveUnionArray","playerNames","individualTerminations","generalWinningTerminations","generalWins","includes","generalDrawingTerminations","generalDraws","generalTerminations","validateTerminationString","capitalizedTermination","str","startsWith","endsWith","stringifyTimeControl","noIncrement","increment","timeControlString","isDelay","obtainTimeControlType","formula","TimeControlType","Rapid","Hyperbullet","Bullet","Blitz","fromCharCode","alternation","convertCoordinateToPGN4Array","getOppositePlacedColor","createDefaultNumericColorAdjustment","transparentWall","colorEnum","g","verifyColorEnumValue","playerEnum","Red","Blue","Yellow","Green","White","Black","verifyPlayerEnumValue","stringColorEnum","duckLetter","emptyLetter","pawnPieceLetter","wallPieceLetter","comparePieceStrings","pieceString1","pieceString2","_color","comparePieceStringObjects","getStringifiedColor","verifyColorEnum","testEmptyPieceString","testWallPieceString","testActivePieceString","testDuckPieceString","duckPieceString","generateCastlingString","extractPiece","obtainAmbiguousOrthogonality","moveMetadata","_parameters$snapshot","_moveMetadata$movingP","registeredPieces","_step$value","movements","boardPiece","ambiguousRank","c2","ambiguousFile","extractPromotion","extractChecksAndCheckmates","repeat","shortenedMoveNotationStringify","_moveWrapper$metadata","resultingString","isFirstCapturingMoveSet","_obtainAmbiguousOrtho","_obtainAmbiguousOrtho2","annotation","fullMoveNotationStringify","firstStandardMoveCaptureSet","moveNotation","fullMoveNotation","shortenedMoveNotation","getMoveFromPathAndTree","alterCurrentPath","indexOfMinus","lastNumber","popped","pop","baseSnapshot","snapshots","WeakMap","boardHashes","startingSnapshot","hash","obtainMatchingAlternativeLine","baseMoveWrapper","alternativeFirstMove","stripEmptyAlternativeLines","splice","stripDeletedMoveHashes","boardHash","currentLine","addBoardSnapshot","hasAdditionalPath","assignMoveWrapperKey","items","finalIndex","newCurrentMove","getHash","preliminaryHashString","totalCount","standardMove","postMoveResults","deadColors","lastCurrentMoves","lastCurrent","alternativeLineContainer","boardObject","serializedForm","ps","verifyMoveWrapperProperties","move1","move2","createDummyMoveMetadata","requiredSettings","wrapper","verifyInternalMoveArray","verifyDroppingMoveArray","verifyStandardMoveArray","_movePath$shift","movePath","currentSelection","shift","currentIndex","index","getLatestChainedMoves","sliding","jumping","rayGenCache","hooks","useTrajectory","usePerspective","usePawnLogic","useHopping","baseRankActive","configuration","_configuration$baseRa","_configuration$coordi","baseRankCalc","baseRank","isRayTrace","attackType","RayTrace","modifyDisplacements","baseDisplacements","pushMove","isRayGen","promotionRanks","promotionPieces","_settings$irreversibl","_settings$irreversibl2","generateSlidingAttack","_settings$limit","_settings$special","_this$hooks$usePerspe","_settings$displacemen","displacement","displacementI","displacementJ","limit","Infinity","special","Normal","rayTraceLimit","_this$modifyDisplacem","_this$modifyDisplacem2","iLength","jLength","getMovePossibility","generateJumpAttack","_settings$special2","_this$hooks$usePerspe2","_settings$displacemen2","squareBlockingIndex","_this$modifyDisplacem3","_this$modifyDisplacem4","isTestPassed","_this$hooks$usePerspe3","trajectory","trajectoryX","trajectoryY","_this$modifyDisplacem5","_this$modifyDisplacem6","_configuration$displa","pushTo","RayGen","AttackOnly","MoveOnly","getPossibleCells","trace","slidingLines","createPieceDeclaration","dameLetter","defaultPieces","grasshopperPieceLetter","orthogonalMoves","diagonalMoves","kingDirections","camelHops","dabbabaHops","alfilHops","baseClassRef","teamsPoints","botFFAValue","botTeamsValue","rook","isColorBound","naming","name","shortName","toLowerCase","description","stoneGeneralControl","soldierControl","xiangqiHorseControl","nonPlayableValues","createPredefinedPieceLetter","verifyHandlerProperty","handler","verifyPrototypeProperty","superClass","VariantRule","initVariantRule","rv","variantRuleList","initializeBaseHandler","decorator","initializeWrappingHandler","wrappingDecorators","injectIntoBaseClass","callback","bind","callHandler","decoratorMethod","decoratorType","getDecoratorType","prototypeMethod","getInsufficientMaterialData","isPartiallyDisabled","isDisabled","objectPrototype","Reflect","ownKeys","_Reflect$getPrototype","getPrototypeOf","baseClass","classReference","decoratorProperties","methods","lastInheritedMethods","basePrototype","verifyKeyInDecoratorProperties","k","_basePrototype","verifyOwnProperty","getOwnPropertyNames","property","localProperty","defineProperty","enumerable","configurable","_loop2","variantRuleChain","variantDecorator","variant","variantFunc","writable","require","context","variantRuleColors","AllowPassing","parameterValue","minor","displayIcon","matchesPGNDeclaration","match","serializeToParsingForm","variantDataRules","giveaway","passingMoves","AlternativeTeams","teammate","rbTeams","teamOne","teamTwo","autogenous","matchArray","getParametrizedOptions","_decorator$initDecora","BarePieceRule","_this$decorator","Blindfold","visual","CaptureTheKing","taboo","Chess960","createBaseChess960mappings","colorBoundPieces","supermajorPieces","minorPieces","edgePieces","positionID","startingPosition","regExp","newID","nr","rank","chess960ranges","legacy","legacy2PThreshold","legacy2PRank","legacy2PTakeaway","legacy4Prank","pieceArrays","ranks","walls","intersections","pieceMasks","c960range","calcNr","positions","generatePositionIndexes","colorBoundIndexes","floor","sort","supermajorIndex","minorPieceIndexes","minorPieceCache","position","edgeSet","royalSet","colorDelta","majorDelta","_i","_intersections","intersection","calcTempNr","cycles","twins","royalPieces","royalOnCorrectRank","replaceRow","supermajorOverRoyal","mI","FiftyMoveRule","Crazyhouse","extending","resultingMoveDrops","isRY","pawnPromotionRank","promotionRank","moveDrop","_this$decorator$makeM","DuckChess","latestMoves","ducks","emptySquares","droppingChainedMoves","duckChainedMoves","emptySquare","FogOfWar","widespread","currentPlayerMoves","_arr","drop","ForcedCapture","hasCaptures","isCapturing","shuffleArray","Anonymous","players","elo","semiAnonTag","SemiAnonymous","_decorator$initDecora2","spTag","SelfPartner","fenTags","_decorator$initDecora3","firstTeamPlayer","secondTeamPlayer","Ghostboard","ParadigmChess30","positionId","getInformation","paradigmRanges","twoPlayerRank","twoPlayerAdjustment","_royalPieces$player","moveCoordinate","iter","_pieceCoordinates$i$s","rp","permutations","PiecesFaceCenter","SeirawanSetup","setupChess","_this$decorator$data","disabledIndex","returnValue","_this$decorator$data2","stringifiedCoordinate","validateWithDrops","continuations","SelfCheck","nCheck","captureTheKing","baseChecks","newCoordinates","_step2$value","SetupChess","phased","options","areSetupPointsUnset","bankEnabled","wereBanksEnabled","files","pawnRanks","permutationCoordinates","flatMap","pawnPermutationCoordinates","disabled","getCoordinateList","coordinateList","pointValue","pointsLeft","anyDrop","Taboo","initialDead","newDead","createBotAlgorithm","randomlyPickNextChainedMoves","onlyUnique","stringifyKey","getPieceInFront","createComfuterAlgorithm","boardAccessors","augmentBoardAccessorsFromBoard","remainingReal","remaining","coverage","hangingCache","coverageCache","pieceValueCache","initializeBoardAccessorsFromBoard","isTeams","defaultSideToMove","getDistanceFromPromotion","abs","getDistanceFromKing","inspectCoverage","_boardAccessors","pc","destinations","dest","getCoverage","_boardAccessors2","defenders","cvg","pieceC","pieceColor","cache","getPieceValue","_boardAccessors3","controlSetting","promotionDistance","inFront","_getCoverage","isRoyal","getCoordinationEval","_boardAccessors4","_getCoverage2","firstPlayerMovesBefore","p1","p2","_boardAccessors5","next","canRespondDirectlyToThreat","_boardAccessors6","attackingPlayers","hanging","pieceValue","_boardAccessors7","_getCoverage3","attackerValue","min","attackedFromLeft","threatened","pawnDefends","h","underDefended","getMobilityEval","_boardAccessors8","_board$preGeneratedAt","_board$preGeneratedAt2","blockedBy","bSqr","getDistFromHill","getMatesEval","_boardAccessors9","_board$getCheckmatesA","checksLength","prev","barePieceRule","getMaterialEval","_boardAccessors10","myMaterial","oppMaterial","pcVal","getPinsEval","_boardAccessors11","pinnedEval","discovsEval","discovered","pins","_royalPiece","royalX","royalY","pieceX","pieceY","_iterator24","_step24","_step24$value","attackPiece","_iterator25","_step25","_step25$value","_pins","sqrt","_i2","_discovered","getKingSafetyEval","_boardAccessors12","kingEval","checkableEval","exposedEval","baseReferences","_iterator26","_step26","_step26$value","_iterator27","_step27","_step27$value","_iterator30","_step30","squareAccessDefinitions","isChecked","checkableSq","_iterator28","_step28","_getCoverage4","accessKey","ki","kj","_i3","_x2","_iterator29","_step29","_boardSquares$_i","_boardSquares$_i2","_getCoverage5","isZombieEatZombie","_boardAccessors13","targetPiece","getEval","totalEval","_boardAccessors14","isKingsideCastle","isQueensideCastle","_getMaterialEval","hillEval","_getCoverage6","partner","isCastling","fiftyMoveRule","stringifiedType","Futer","moveValues","_iterator31","_step31","evaluations","sorted","best","_iterator32","_step32","_step32$value","evaluated","pick","random","comfuterAlgorithm","createComfuterBasedAlgorithm","comfuterCheckerAlgorithm","baseEvaluations","evaluation","_board$makeMove","comfuterMuncherAlgorithm","F_Muncher","comfuterPusherAlgorithm","F_Pusher","_step3$value","patzerAlgorithm","Patzer","defaultBoard","randoBotAlgorithm","RanterAlgorithm","Ranter","resultingMove","isForcedContinuation","copyOfMoves","zombieEatZombieMoves","otherMoves","startingEvaluation","createRandomBasedAlgorithm","checkerAlgorithm","Checker","muncherAlgorithm","Muncher","pusherAlgorithm","Pusher","stalemateOptionsValues","disabledRank","_variantRule$getInsuf","noRoyalsToMate","hasPromotion","getRoyalPieceMedians","_this$state","royalMoveMedians","extraWalls","accumulator","median","minimumMedian","stalemateOptions","stalemateLoses","obtainPieceSymbolFromCoordinate","_this$state2","optimizedPieces","pieceSquareMedians","backwardsPieceRegistry","availableSymbols","selectedSymbol","NON_INDEXED_PIECE_SYMBOL","candidates","getOwnPropertySymbols","candidateIndex","symbol","getPartialIntersection","royalColor","_this$obtainPieceSymb","symbolsLength","enemyCoordinate","_this$obtainPieceSymb2","enemySymbol","resultingInsufficientPieces","royalPieceMedians","_this$state3","oppositionMedians","squaresPlayerCanOutrange","royalSquares","currentColorBounds","royalsCannotCapture","_this$obtainPieceSymb3","medians","_pieceSquareMedians$p","subSymbol","_pieceSquareMedians$p2","sum","binaryMasks","findMinimumOnBoardSquares","oneBitMask","optimizePieceSet","bitCount","emptyBoard","initializeRoyals","possibleRoyals","royalPieceSets","recurseThroughSquares","pieceMoveRegistry","currentSquares","unvisitedSquares","baseBuilder","registryResult","Uint16Array","recurse","moveLength","moveString","_value$split","_value$split2","parseInt","Symbol","valueArr","addToBoardDestinations","boardDestinations","getBoardDestinations","initializeBackwardsPieceRegistry","entry","uintArray","isAlwaysIntersecting","permutationArray","permutationEntry","uintArr","remappedSymbols","remappedSymbol","_this$state$backwards","_j2","_this$state$backwards2","uintValues","sym","remapped","generateOppositionSquares","royalMoves","oppositionRowEchelon","finalArray","generateOppositeMedians","rowEchelon","royalPieceA","royalPieceB","_loop3","i2","_loop4","_j3","_jjIndex$toString","_iiIndex$toString","j2","jjIndex","iiIndex","toString","newResultingSquares","dimSquare","_ret2","minimum","generatePieceMoveMedians","_this2","currentMessages","requiredMessages","_loop5","registeredSymbols","_loop6","registeredSymbol","pieceMedianCounter","Worker","URL","import","meta","url","moveRegistryArray","uint","buffer","royalPieceSet","terminate","_ret3","_this$generateOpposit","countMinimumOf2DArrayExcludingZero","countBitsOnBoard","_e$data","resultingMedianArray","resultingSquares","royalMoveSet","resultingMedian","counters","individualCounter","numericKey","indexingNumber","setBits","possiblePieces","maximumTarget","optimalRoyalMoveSets","moveSet","_optimalRoyalMoveSets","optimalMoveSet","detractionSet","RoyalsCannotCapture","Atomic","baseCoordinates","addCoordinate","disI","disJ","coordinateI","coordinateJ","atomicCoordinates","DeadKingWalking","pointsForMate","enPassants","eligibleEnPassants","_eligibleEnPassants","enPassantCoordinate","enPassantInfo","FatalCapture","endCaptureCoordinates","_move$startCoordinate","_move$endCoordinates","returnType","fullMoves","totalFullMoves","textualForm","alivePlayers","StalemateOptions","Giveaway","stalemateWins","capturedPiece","pointsForPiece","aliveColors","stalematePoints","isGiveawayAssigned","KingOfTheHill","hillSquares","defaultCoordinates","coordinatesArray","presumedOption","defaultRoyal","NCheck","defaultChecks","check","resultingMap","isNCheckValidated","isStandardMove","live","OppositeMultiplier","oppositeMultiplierValue","numericValue","MAXIMUM_MULTIPLIER","OppositeSideCastling","castlingDataReference","PiecesGoToBanks","captures","addPieceToBank","PlayForMate","pointsAlternation","PointsForMate","playForMate","stalemateDraws","verifyCustomStalemateValue","_this$type","currentTurn","Takeover","detectedPieces","ThreefoldRepetition","totalRepetitions","totalRepetitionsRequired","repetitions","AnyCapture","modifiedConfiguration","compileEnumeration","prefixWithIndefiniteArticle","PromoteTo","filterPromotionPieceString","inputPromotion","pieceNames","pieceName","formatOrdinalNumber","PromotionRank","Sideways","Stonewall","Torpedo","_regeneratorRuntime","exports","Op","hasOwn","desc","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","Context","makeInvokeMethod","tryCatch","fn","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","__await","then","unwrapped","previousPromise","callInvokeWithMethodAndArg","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","return","info","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","ctor","setPrototypeOf","__proto__","awrap","async","Promise","skipTempReset","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","_catch","thrown","delegateYield","createBaseParsingTypes","_callee","_callee$","_context","variantRulePriorities","differentiateDecoratorMethods","verifyDecorator","parseVariantRules","variantClasses","forcedRules","finalList","rulesStrings","insertVariantRule","dependencies","dependency","dependencyArgs","decorators","ruleString","forcedRule","_forcedRules","rule","resultingRule","unshift","compileVariantRuleData","finalObject","setFinalObjectProperty","properties","rvs","parameterArray","serializePGNMoves","moveTree","replace","tagNamesEqual","unwrapTag","wrapTag","variantTypeTag","createVariantTypeTag","currentValue","verifyTagInParsing","inputTag","parseTag","tagContents","_Object$values","variantDateTag","createDateTag","Date","variantSiteTag","createSiteTag","site","variantTimeControlTag","getDefaultTimeControl","createTimeControlTag","_unwrapTag$match","defaultTC","_matchArray","minutesMatch","secondsMatch","delay","round","variantTerminationTag","createTerminationTag","variantGameId","createGameNumberTag","id","gameNumber","createPlayerDataTag","newCurrentValue","uniqueResultingTags","playerData","resultsTag","createResultsTag","variantRulesTag","createVariantRulesTag","resultingRuleList","createFENDataTag","GenericTags","createDefaultVariantTags","variantType","parsePGN4Moves","pgn4Tags","pgn4Moves","substring","trim","variantTags","wasFEN4set","variantTag","nonPlayablePieceValues","defaultTags","SPLIT","PIECE_REGEX","PIECE_REGEX_SIMPLIFIED","MOVE_CAPTURING_REGEX","DUCK_MOVE_CAPTURING_REGEX","DROPPING_MOVE_CAPTURING_REGEX","BRACKETS","COMMENT_START","COMMENT_END","VARIATION_START","VARIATION_END","COMMENT_SYNTAXES","CLOCK","ARROWS","SQUARES","ANNOTATION","obtainDuckMove","obtainInternalType","obtainDroppingMove","_match","obtainStandardMove","promotionMatch","moveCoordinates","startCoordinate","endCoordinate","cloneMoveData","parseMoves","selectedMove","moveList","currentPath","getMoveIndexes","parseComment","getEnumeratorIndex","findBracketIndex","depth","processMoveDataInsertion","currentMoveData","_currentMove$comment","_currentMove$comment3","_currentMove$comment5","_currentMove$comment7","clockSyntax","_currentMove$comment2","arrowSyntax","_currentMove$comment4","arrows","arrow","numericColor","arrowCoordinates","squareSyntax","_currentMove$comment6","inputCoordinate","annotationMatch","_currentMove$comment8","obtainMoveFromInfo","internalType","droppingMove","duckMove","variationIncrement","isNumNaN","_currentMove$alternat","checkDimensionIntersection","dimensionI","dimensionJ","serializeFENOptions","modifyFourBooleanParameter","part","fenDataArrayRef","booleans","predefinedFENpositions","verifyPredefinedFENPosition","fenShorthand","fenDataTag","parts","warn","verifyKeyInTags","initialParsing","replaceAll","_Object$entries","_Object$entries$_i","pieceStr","cornerAreaSize","arrayDimension","baseLoop","_i4","_squares","baseBoard","currentEmptySquares","charCodeAt","baseTag","content","definedTag","array","arr1","arr2","first","second","number","digits","multiplier","pow","adjusted","instance","customProperties","copy","verifyPropertiesInObject","lastTwoDigits","vowels","convertSecondsToFlexibleHoursMinutesSeconds","seconds","toISOString","convertCamelCaseToKebabCase","baseString","hashString","string","char"],"sourceRoot":""}