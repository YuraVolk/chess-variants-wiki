buildscript {
	ext {
		springBootVersion = '2.7.0'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
	id 'org.jetbrains.kotlin.jvm' version '1.9.0'
	id 'application'
	id "com.github.node-gradle.node" version "3.1.1"
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.example'
version = '1.0'

repositories {
	mavenCentral()
}

node {
	download = true
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.mongodb:mongodb-driver-kotlin-coroutine:4.11.0'
	implementation 'com.google.firebase:firebase-admin:9.2.0'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.5'
	runtimeOnly 'org.postgresql:postgresql'
	runtimeOnly 'org.webjars:webjars-locator:0.47'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

npmInstall {
	onlyIf { !gradle.startParameter.taskNames.contains('bootRun') }
}

tasks.register('buildApp', NodeTask) {
	dependsOn 'npmInstall'
	script = project.file('node_modules/webpack/bin/webpack.js')
	onlyIf { !gradle.startParameter.taskNames.contains('bootRun') }
}

processResources.dependsOn 'buildApp'
clean.delete << file('node_modules')
clean.delete << file ('src/main/resources/public/scripts/')
clean.delete << file ('src/main/resources/public/assets/')
clean.delete << file ('src/main/resources/public/fonts/')
