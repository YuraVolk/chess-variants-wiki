{"version":3,"file":"src_main_client_ts_logic_index_GameBoardWorker_ts.react-app.js","mappings":"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,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE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AAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACf,CAAC,C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","sources":["webpack://spring-react-app/./src/main/client/fonts/chessGlyphIndex.ts","webpack://spring-react-app/./src/main/client/ts/interfaces/Colors.ts","webpack://spring-react-app/./src/main/client/ts/logic/index/GameBoardWorker.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/Board/Board.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/Board/BoardInterface.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/Board/BoardMoveValidator.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/FENData/FENData.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/FENData/FENDataInterface.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/FENData/FENOptions/FENOptions.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/FENData/FENOptions/FENOptionsTags.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/FENData/FENOptions/FENOptionsTagsInterface.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/GameInformation/GameUnits/PieceString.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/MoveTree/MoveNotationStringifier.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/MoveTree/MoveTree.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/MoveTree/MoveTreeInterface.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/MoveTree/MoveTreeValidator.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/PieceControl/PieceControl.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/PieceControl/PieceControlBuilder.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/PieceControl/PieceControlDeclarations.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRule.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/AllowPassing.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/AlternativeTeams.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/BarePieceRule.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/Blindfold.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/CaptureTheKing.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/Chess960.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/Crazyhouse.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/DuckChess.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/FogOfWar.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/ForcedCapture.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/GameMetadataRules.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/Ghostboard.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/ParadigmChess30.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/PiecesFaceCenter.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/SeirawanSetup.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/SelfCheck.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/SetupChess.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/Taboo.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardVariantModules/EngineMoveGeneration/Algorithms/ComfuterEvaluation.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardVariantModules/EngineMoveGeneration/Algorithms/ComfuterEvaluationExtensions.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardVariantModules/EngineMoveGeneration/Algorithms/MixedAlgorithms.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardVariantModules/EngineMoveGeneration/Algorithms/RandomEvaluation.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardVariantModules/EngineMoveGeneration/Algorithms/RandomEvaluationExtensions.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardVariantModules/EngineMoveGeneration/BotInterface.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardVariantModules/InsufficientMaterial/InsufficientMaterialChecker.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardVariantModules/InsufficientMaterial/InsufficientMaterialConstructor.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardVariantModules/InsufficientMaterial/StateSerializer.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/FENDataDecorators/Atomic.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/FENDataDecorators/DeadKingWalking.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/FENDataDecorators/EnPassant.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/FENDataDecorators/FatalCapture.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/FENDataDecorators/FiftyMoveRule.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/FENDataDecorators/Giveaway.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/FENDataDecorators/KingOfTheHill.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/FENDataDecorators/NCheck.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/FENDataDecorators/OppositeMultiplier.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/FENDataDecorators/OppositeSideCastling.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/FENDataDecorators/PiecesGoToBanks.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/FENDataDecorators/PlayForMate.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/FENDataDecorators/PointsForMate.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/FENDataDecorators/StalemateOptions.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/FENDataDecorators/Takeover.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/FENDataDecorators/ThreefoldRepetition.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/PieceControlDecorators/AnyCapture.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/PieceControlDecorators/PromoteTo.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/PieceControlDecorators/PromotionRank.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/PieceControlDecorators/RoyalsCannotCapture.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/PieceControlDecorators/Sideways.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/PieceControlDecorators/Stonewall.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/PieceControlDecorators/Torpedo.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleInterface.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleSetup.ts","webpack://spring-react-app/./src/main/client/ts/logic/utils/Tags/InputOutputProcessing.ts","webpack://spring-react-app/./src/main/client/ts/logic/utils/Tags/Moves/ParsePGNMoves.ts","webpack://spring-react-app/./src/main/client/ts/logic/utils/Tags/Moves/SerializePGNMoves.ts","webpack://spring-react-app/./src/main/client/ts/logic/utils/Tags/TagInterface.ts","webpack://spring-react-app/./src/main/client/ts/logic/utils/Tags/TagLogic/FENDataTag.ts","webpack://spring-react-app/./src/main/client/ts/logic/utils/Tags/TagLogic/GameMetadataTags.ts","webpack://spring-react-app/./src/main/client/ts/logic/utils/Tags/TagLogic/VariantRulesTag.ts","webpack://spring-react-app/./src/main/client/ts/logic/utils/Tags/Utils.ts","webpack://spring-react-app/./src/main/client/ts/utils/ObjectUtils.ts","webpack://spring-react-app/./src/main/client/ts/utils/StringFormatUtils.ts","webpack://spring-react-app/./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/ sync \\.ts$"],"sourcesContent":["export const chessGlyphIndex = {\n\tdoubleBackwardArrow: \"!\",\n\tdownloadIcon: '\"',\n\tendBackwardArrow: \"#\",\n\tforwardDoubleArrow: \"α\",\n\tuserSearch: \"$\",\n\tuserConnection: \"%\",\n\tnotAllowed: \"&\",\n\tclock: \"'\",\n\textraInformation: \"(\",\n\tauthorshipNotice: \")\",\n\tdraw: \"+\",\n\tbackwardArrow: \",\",\n\tuserInformation: \"-\",\n\tsmallBackwardArrow: \"/\",\n\tleaderBoard: \";\",\n\tequal: \"=\",\n\tdownwardArrow: \"<\",\n\tupperArrow: \">\",\n\tendForwardArrow: \"@\",\n\turlAttached: \"A\",\n\tcrossMark: \"B\",\n\trightOutwardsArrow: \"C\",\n\thashtag: \"D\",\n\tnewspaper: \"E\",\n\ttwitter: \"F\",\n\tcheckMark: \"G\",\n\tcamera: \"H\",\n\talternativeLine: \"I\",\n\tplay: \"J\",\n\tpause: \"K\",\n\treload: \"L\",\n\tworld: \"M\",\n\tpoints: \"N\",\n\tmedal: \"O\",\n\tsoundOff: \"P\",\n\tcircleCrossMark: \"Q\",\n\tsteadyEvaluation: \"R\",\n\tfacebook: \"S\",\n\tcircle: \"T\",\n\tsoundOn: \"U\",\n\tplus: \"V\",\n\topenEye: \"W\",\n\tcopyToClipboard: \"X\",\n\twavingFlag: \"Y\",\n\teditText: \"Z\",\n\tfullArrowLeft: \"[\",\n\tfullArrowRight: \"]\",\n\tsmallArrowForward: \"\\\\\",\n\tgoBackArrow: \"_\",\n\tyoutube: \"`\",\n\tcalendar: \"a\",\n\tuser: \"b\",\n\tchat: \"c\",\n\tlock: \"d\",\n\tbox: \"e\",\n\tcircularArrows: \"f\",\n\tlightBulb: \"g\",\n\tbriefcase: \"h\",\n\tboard: \"i\",\n\tknightArrows: \"j\",\n\tnewMessage: \"k\",\n\tdrawing: \"l\",\n\ttwoUsers: \"m\",\n\ttwoUsers2: \"n\",\n\topeningBook: \"o\",\n\tdisclaimer: \"p\",\n\tringingBell: \"q\",\n\tlist: \"r\",\n\trookAndPawn: \"s\",\n\thamburgerList: \"t\",\n\tmail: \"u\",\n\tuserExtraInformation: \"v\",\n\thouse: \"w\",\n\tsheetAndPencil: \"x\",\n\topenMail: \"y\",\n\tchatBox: \"z\",\n\tfullArrowDown: \"{\",\n\tsmallArrowUp: \"|\",\n\tfullArrowUp: \"}\",\n\tarrowIntoBox: \"¡\",\n\tkey: \"¢\",\n\tfile: \"£\",\n\tbooks: \"¤\",\n\tsharing: \"¥\",\n\tuserNotAllowed: \"¦\",\n\tuserCrossMark: \"§\",\n\tquestionMark: \"©\",\n\tboardWithCircle: \"«\",\n\tgooglePlus: \"®\",\n\treset: \"°\",\n\treddit: \"±\",\n\topenBook: \"´\",\n\tuserPlus: \"¶\",\n\tcog: \"·\",\n\tpin: \"»\",\n\tsuitcase: \"¼\",\n\tmark: \"½\",\n\tcake: \"¾\",\n\topenLink: \"¿\",\n\tbishopStroke: \"Ä\",\n\tlinkedin: \"Å\",\n\tknight: \"Ç\",\n\tthreeCheck: \"Ë\",\n\tchess960rapid: \"Ñ\",\n\tconnection: \"Õ\",\n\tquotes: \"Ö\",\n\texit: \"×\",\n\tcrossedBinoculars: \"Þ\",\n\tleaderBoardReversed: \"ß\",\n\tbishopFull: \"ä\",\n\tprinter: \"å\",\n\tverticalEvaluation: \"ç\",\n\tt: \"ë\",\n\tpawn: \"í\",\n\ttwoPawns: \"î\",\n\tunrated: \"ð\",\n\telite: \"ñ\",\n\tbug: \"õ\",\n\tcpu: \"ö\",\n\tforwardArrowCircle: \"÷\",\n\tsquareCrossMark: \"ü\",\n\tandroid: \"þ\",\n\ttwoUsersPlus: \"ÿ\",\n\tcrossedArrows: \"Đ\",\n\tking: \"Ā\",\n\tkingFull: \"ā\",\n\tbishop: \"Ă\",\n\ttwoFullRooks: \"ă\",\n\tkingStrokes: \"Ą\",\n\tfullKnight2: \"ą\",\n\tchess960: \"Č\",\n\tleaderBoardAscent: \"č\",\n\tcrazyhouse: \"Ď\",\n\tchecklist: \"ď\",\n\ttarget: \"đ\",\n\tpawnAndHalfRook: \"Ē\",\n\thalfRookAndPawn: \"ē\",\n\tknightStrokes: \"Ė\",\n\tpawnLogo: \"Ę\",\n\tqueenFull: \"ę\",\n\texchange: \"Ě\",\n\tuserNext: \"Ğ\",\n\tuserPrevious: \"Ġ\",\n\tcompass: \"ġ\",\n\tpawnStrokes: \"Ģ\",\n\trookStrokes: \"ģ\",\n\tscreenDisplays: \"Ħ\",\n\tkingOfTheHill: \"Ī\",\n\tantichess: \"ī\",\n\tqueen: \"Į\",\n\tthreePawns: \"į\",\n\tqueenStrokes: \"Ķ\",\n\trookSmallStrokes: \"Ļ\",\n\trookSmall: \"Ľ\",\n\tbishopPair: \"Ł\",\n\trookPair: \"Ņ\",\n\tknightPair: \"Ň\",\n\ttwoUsersSearch: \"Ŋ\",\n\tshield: \"ŋ\",\n\tkingSmall: \"Ō\",\n\tbishopSmall: \"Ő\",\n\tknightSmall: \"Ŗ\",\n\tuserNoConnection: \"Ř\",\n\tuserStream: \"v\",\n\tqueenAlternative: \"Ş\",\n\tpawnAlternative: \"Š\",\n\tthreePawnsAlternative: \"Ţ\",\n\ttwoPawnsAlternative: \"Ť\",\n\trookAlternative: \"Ŧ\",\n\tknightPairFull: \"Ż\",\n\tbishopPairFull: \"Ž\",\n\taddBoard: \"ˆ\",\n\tdiamond: \"Ͱ\",\n\tscales: \"ͱ\",\n\tpawn3d: \"Ͳ\",\n\tuserShieldPlus: \"ͳ\",\n\tgold: \"Ͷ\",\n\tellipsis: \"Ώ\",\n\tanalysis: \"Δ\",\n\tarchive: \"Θ\",\n\tarrowBottomIntoBox: \"Ξ\",\n\tdisclaimerEditor: \"Σ\",\n\tsendTrophy: \"Υ\",\n\taddCheckMark: \"Φ\",\n\tcheckMarkSquare: \"Ψ\",\n\tsquareStaircase: \"ά\",\n\tarrowsUpBottom: \"έ\",\n\tstar: \"ή\",\n\tverticalDash: \"ί\",\n\tshieldCheckMark: \"β\",\n\ttop3: \"ε\",\n\taddImage: \"ζ\",\n\tchessStream: \"η\",\n\tremoveTrophy: \"κ\",\n\timportantMail: \"λ\",\n\tarrowLeave: \"μ\",\n\tdonut: \"ν\",\n\tcomputerAnalysis: \"ξ\",\n\tcheckMarkSquareSmall: \"ο\",\n\tdiagonalExpandArrows: \"π\",\n\tleaderBoardHorizontal: \"ρ\",\n\tcheckMarkAsCircle: \"χ\",\n\tarrowFromBox: \"ϊ\",\n\tboxArrowBottom: \"ό\",\n\tboxArrowLeft: \"ύ\",\n\tboxArrowRight: \"ώ\",\n\tfourArrowsCentral: \"Ϙ\",\n\tclashingSwords: \"τ\",\n\tratingOffset: \"υ\",\n\tsmilingFace: \"ς\",\n\tfileCabinet: \"σ\",\n\teditClock: \"ϙ\",\n\tuserShield: \"Ϛ\",\n\thomeFilled: \"ϛ\",\n\tpaymentCard: \"Ϝ\",\n\tfourArrowsOutwards: \"ϝ\",\n\tpuzzle: \"Ϟ\",\n\taddPhoto: \"ϟ\",\n\tarrowWallLeft: \"Ϡ\",\n\tarrowWallRight: \"ϡ\",\n\tboardConfiguration: \"Ϸ\",\n\tfourBlocks: \"ϸ\",\n\tsandglass: \"Ϻ\",\n\tcrown: \"ϻ\",\n\tcloudUpload: \"Ẹ\",\n\twebChatBox: \"ẹ\",\n\tpuzzleRush: \"Ẻ\",\n\tknightHops: \"ẻ\",\n\tinstagram: \"ἀ\",\n\tsquarePlus: \"ἁ\",\n\tsquareMinus: \"ἂ\",\n\tsquareEqual: \"ἃ\",\n\tsquare: \"ἄ\",\n\tfireFull: \"ἅ\",\n\tpawnRecycle: \"ἆ\",\n\tnoEngine: \"ἇ\",\n\tgoogle: \"Ἀ\",\n\tfourPlayer: \"Ἁ\",\n\tpieceMeal: \"Ἂ\",\n\tarrowBoldUp: \"Ἃ\",\n\tarrowBoldDown: \"Ἄ\",\n\tblunder: \"Ἅ\",\n\tmistake: \"Ἆ\",\n\tvideoChatBox: \"Ἇ\",\n\tbonesCrossed: \"ἐ\",\n\tdisplays: \"ἑ\",\n\tarrowEnter: \"ἒ\",\n\tnewspaperHalf: \"ἓ\",\n\tbookmark: \"ἔ\",\n\tpuzzleLarge: \"ἕ\",\n\tmovePawn: \"Ἐ\",\n\tpawn3dLarge: \"Ἑ\",\n\tsun: \"Ἒ\",\n\trapid: \"Ἓ\",\n\tblitz: \"Ἔ\",\n\tbullet: \"Ἕ\",\n\tmortarboard: \"ἠ\",\n\tlaptop: \"ἡ\",\n\tresetWidth: \"ἢ\",\n\tpawnConnection: \"ἣ\",\n\tcopyToClipboardFromText: \"ἤ\",\n\tfire: \"ἥ\",\n\tcrownSmall: \"ἦ\",\n\torderedList: \"ἧ\",\n\tchess960daily: \"Ἠ\",\n\tarrowWallBottom: \"Ἡ\",\n\tpawn3dBold: \"Ἢ\",\n\tplusInCircle: \"Ἣ\",\n\tlightCorner: \"Ἤ\",\n\tdarkCorner: \"Ἥ\",\n\tsteepCurve: \"Ἦ\",\n\theart: \"Ἧ\",\n\tcheckMarkThin: \"ἰ\",\n\tconnectionDiagonal: \"ἱ\",\n\tdiadem: \"ἲ\",\n\tplusMinus: \"ἳ\",\n\trecycling: \"ἴ\",\n\tmetrics: \"ἵ\",\n\ttop1: \"ἶ\",\n\tengineCheckMark: \"ἷ\",\n\twikipedia: \"Ἰ\",\n\ttournament: \"Ἱ\",\n\thouseConfiguration: \"Ἲ\",\n\tcomputerHindsight: \"Ἳ\",\n\tcomputerCheckMark: \"Ἴ\",\n\tlightDarkTheme: \"Ἵ\",\n\twhistlingBell: \"Ἶ\",\n\tcrossMarkCompact: \"Ἷ\",\n\teyeCrossed: \"ὀ\",\n\tfide: \"ὁ\",\n\tfavorite: \"ὂ\",\n\ttShirtPawn: \"ὃ\",\n\taddSmile: \"ὄ\",\n\tlibrary: \"ὅ\",\n\tdiscord: \"Ὀ\",\n\tanalysisCheckMark: \"Ὁ\",\n\tversusComputer: \"Ὂ\",\n\tdollarSign: \"Ὃ\",\n\tbestMove: \"Ὄ\",\n\tgift: \"Ὅ\",\n\tevaluationLinear: \"ὐ\",\n\tevaluationThrowaway: \"ὑ\",\n\tevaluationEqual: \"ὒ\",\n\tevaluationDead: \"ὓ\",\n\tevaluationSharp: \"ὔ\",\n\tevaluationPerplexing: \"ὕ\",\n\tevaluationSmooth: \"ὖ\",\n\tlibraryAdd: \"ὗ\",\n\tselfPartner: \"Ὑ\",\n\tfourPlayerConfiguration: \"Ὓ\",\n\tlistDownFlow: \"Ὕ\",\n\tpuzzleBattle: \"Ὗ\",\n\thyperbullet: \"ὠ\",\n\tgameLink: \"ὡ\",\n\tgameStudy: \"ὢ\",\n\tevaluationCrazy: \"ὣ\",\n\tengine: \"ὤ\",\n\tcrossedSwordsInCircle: \"ὥ\",\n\thallmark: \"ὦ\",\n\tlike: \"ὧ\",\n\tboardTwoPlayers: \"Ὠ\",\n\tfourPlayerChess: \"Ὡ\",\n\tvariants: \"Ὢ\",\n\tcloudUploadCompact: \"Ὣ\",\n\tclockIncrement: \"Ὤ\",\n\tvideoCamera: \"Ὥ\",\n\tinaccuracy: \"Ὧ\",\n\tbot: \"ὰ\",\n\ttorpedo: \"ά\",\n\tvk: \"ὲ\",\n\tblindfold: \"έ\",\n\tcustomSettings: \"ή\",\n\tcaptureAnything: \"ὶ\",\n\tpawnSideways: \"ί\",\n\tnoCastling: \"ὸ\",\n\tfogOfWar: \"ό\",\n\tautomate: \"ὺ\",\n\tatomic: \"ύ\",\n\tpawnCounterfeit: \"ὼ\",\n\telephant: \"ώ\",\n\tfullBlock: \"ᾀ\",\n\tfourFullBlocks: \"ᾁ\",\n\tnineFullBlocks: \"ᾂ\",\n\tnineFullBlocksCrossed: \"ᾃ\",\n\thamburgerMenuCompact: \"ᾄ\",\n\tlistCompact: \"ᾅ\",\n\tgeoMark: \"ᾆ\",\n\tcrossedDonut: \"ᾇ\",\n\thandshake: \"ᾈ\",\n\tverified: \"ᾉ\",\n\tsandglassRunningOut: \"ᾊ\",\n\trapidLowOnTime: \"ᾋ\",\n\ttourneyBanner: \"ᾌ\",\n\tnoCloud: \"ᾍ\",\n\tfork: \"ᾎ\",\n\tdonutTarget: \"ᾏ\",\n\tnewCalendarDay: \"ᾐ\",\n\tcornerInfiltration: \"ᾑ\",\n\thastTagCompact: \"ᾒ\",\n\tchatterbox: \"ᾓ\",\n\tcircleStar: \"ᾔ\",\n\ttargetPractice: \"ᾕ\",\n\tpawnPromotion: \"ᾖ\",\n\tflagProgression: \"ᾗ\",\n\tpawnDoubleAttack: \"ᾘ\",\n\tkingAndRook: \"ᾙ\",\n\tspecialMedal: \"ᾚ\",\n\tpawnBanner: \"ᾛ\",\n\tuserSquare: \"ᾜ\",\n\tverifiedCandidate: \"ᾝ\",\n\tsaveFile: \"ᾞ\",\n\tduck: \"ᾟ\",\n\taddBanner: \"ᾠ\",\n\tqrCode: \"ᾡ\",\n\tnoAnalysis: \"ᾢ\",\n\tdualPawn: \"ᾣ\",\n\tgameEscape: \"ᾤ\",\n\ttournamentCup: \"ᾥ\",\n\tnoExchanges: \"ᾦ\",\n\ttikTok: \"ᾰ\",\n\tpieChart: \"ᾱ\",\n\tsearch: \"–\",\n\tbinoculars: \"—\",\n\tlargeBoard: \"’\",\n\texclamation: \"†\",\n\ttournamentCupIcon: \"‡\",\n\ttrashBin: \"•\",\n\tarrowForwardBoldCompact: \"…\",\n\tgiftDiamond: \"‹\",\n\tfilter: \"›\",\n\tnoChat: \"⁄\",\n\tnewSheet: \"€\",\n\txml: \"∞\",\n\tblockUser: \"∫\",\n\tfacebookLike: \"≤\",\n\tfacebookDislike: \"≥\",\n\tapple: \"◊\",\n\tphone: \"\"\n} as const;\n","import { throwOnNever, verifyTupleType } from \"../baseTypes\";\n\ndeclare const HexColor: unique symbol;\nexport type HexColor = string & { _: typeof HexColor };\nconst hexColorRegex = /^#(?:[0-9a-fA-F]{3}){1,2}$/;\nexport const createHexColor = (color: string): HexColor => {\n\tif (hexColorRegex.test(color)) {\n\t\treturn color as HexColor;\n\t} else throw new TypeError(\"The supplied hex color is not a hex color: \" + color);\n};\nexport const verifyHexColor = (color: IndexedColor): color is HexColor => typeof color === \"string\";\nexport const validateHexColor = (color: unknown): color is HexColor => {\n\tif (typeof color === \"string\") {\n\t\ttry {\n\t\t\tcreateHexColor(color);\n\t\t\treturn true;\n\t\t} catch {\n\t\t\treturn false;\n\t\t}\n\t} else return false;\n};\n\ndeclare const RGBColor: unique symbol;\nexport type RGBColorValue = number & { _: typeof RGBColor };\nexport const createRGBColor = (color: number): RGBColorValue => {\n\tif (color >= 0 || color <= 255) {\n\t\treturn color as RGBColorValue;\n\t} else throw new TypeError(`The supplied RGB color value is not an RGB color value: ${color}`);\n};\nexport type RGBColor = [RGBColorValue, RGBColorValue, RGBColorValue];\nexport const wrapRGBColor = (color: RGBColor): string => `rgb(${color.join(\",\")})`;\nexport const verifyRGBColor = (color: IndexedColor): color is RGBColor => Array.isArray(color);\nexport const validateRGBColor = (color: unknown): color is RGBColor => {\n\tif (Array.isArray(color) && verifyTupleType(color, 3) && color.every<number>((c): c is number => typeof c === \"number\")) {\n\t\ttry {\n\t\t\tcolor.forEach((c) => createRGBColor(c));\n\t\t\treturn true;\n\t\t} catch {\n\t\t\treturn false;\n\t\t}\n\t} else return false;\n};\n\ndeclare const HSLColor: unique symbol;\nexport interface HSLColor {\n\thue: number;\n\tsaturation: number;\n\tlightness: number;\n\t_: typeof HSLColor;\n}\nexport const createHSLColor = (color: { hue: number; saturation: number; lightness: number }): HSLColor => {\n\tif (\n\t\t(color.hue >= 0 || color.hue <= 359) &&\n\t\t(color.saturation >= 0 || color.saturation <= 100) &&\n\t\t(color.lightness >= 0 || color.lightness <= 100)\n\t) {\n\t\treturn color as HSLColor;\n\t} else throw new TypeError(`The supplied HSL value is not an HSL color: \" + color`);\n};\nexport const wrapHSLColor = (color: HSLColor): string => `hsl(${color.hue},${color.saturation}%,${color.lightness}%)`;\nexport const verifyHSLColor = (color: IndexedColor): color is HSLColor => typeof color === \"object\";\nexport const validateHSLColor = (color: unknown): color is HSLColor => {\n\tconst verifyNumberRecord = <K extends PropertyKey>(obj: Record<K, unknown>): obj is Record<K, number> => {\n\t\tfor (const key in obj) {\n\t\t\tif (!Object.prototype.hasOwnProperty.call(obj, key)) continue;\n\t\t\tif (typeof obj[key] !== \"number\") return false;\n\t\t}\n\n\t\treturn true;\n\t};\n\n\tif (typeof color === \"object\" && color && \"hue\" in color && \"saturation\" in color && \"lightness\" in color && verifyNumberRecord(color)) {\n\t\ttry {\n\t\t\tcreateHSLColor(color);\n\t\t\treturn true;\n\t\t} catch {\n\t\t\treturn false;\n\t\t}\n\t} else return false;\n};\n\nexport type IndexedColor = HexColor | RGBColor | HSLColor;\nexport const wrapIndexedColor = (color: IndexedColor): string => {\n\tif (verifyHexColor(color)) {\n\t\treturn color;\n\t} else if (verifyRGBColor(color)) {\n\t\treturn wrapRGBColor(color);\n\t} else if (verifyHSLColor(color)) {\n\t\treturn wrapHSLColor(color);\n\t} else {\n\t\treturn throwOnNever(color);\n\t}\n};\nexport const validateIndexedColor = (color: unknown): color is IndexedColor => {\n\treturn validateHexColor(color) || validateRGBColor(color) || validateHSLColor(color);\n};\n","import \"reflect-metadata\";\nimport { Board } from \"@moveGeneration/Board/Board\";\nimport { totalPlayers } from \"@moveGeneration/GameInformation/GameData\";\nimport type { PieceStringObject } from \"@moveGeneration/GameInformation/GameUnits/PieceString\";\nimport { PieceString } from \"@moveGeneration/GameInformation/GameUnits/PieceString\";\nimport type { InternalMove, StripPieceStringObjects } from \"@moveGeneration/MoveTree/MoveTreeInterface\";\nimport {\n\tMoveWrapper,\n\tProcessSafeMoveWrapper,\n\tMove,\n\tMoveData,\n\tverifyStandardMove,\n\tMoveComponent,\n\tverifyDroppingMove,\n\tMoveTreeSnapshot,\n\tverifyRequiredMove\n} from \"@moveGeneration/MoveTree/MoveTreeInterface\";\nimport { decorateClassWithVariants, VariantRulePublicProperties } from \"@moveGeneration/VariantRules/VariantRule\";\nimport type { VariantDataRules } from \"@moveGeneration/VariantRules/VariantRuleInterface\";\nimport { compareArrays } from \"@utils/ArrayUtils\";\nimport type { NumericColor } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport { serializeBoard } from \"../utils/Tags/InputOutputProcessing\";\nimport { assertNonUndefined, createTuple, FunctionType, Tuple } from \"@client/ts/baseTypes\";\nimport type { GameBoardObjectSetProperties } from \"./GameBoardSlice\";\nimport { stringifyCoordinate } from \"@moveGeneration/Board/BoardInterface\";\nimport { changeGameTermination, validateMoveTree } from \"@moveGeneration/MoveTree/MoveTreeValidator\";\nimport { assertValidMove } from \"@moveGeneration/MoveTree/MoveTree\";\nimport { InsufficientMaterialConstructor } from \"@moveGeneration/VariantRules/VariantRuleDefinitions/BoardVariantModules/InsufficientMaterial/InsufficientMaterialConstructor\";\nimport { InsufficientMaterialChecker } from \"@moveGeneration/VariantRules/VariantRuleDefinitions/BoardVariantModules/InsufficientMaterial/InsufficientMaterialChecker\";\nimport * as StateSerializer from \"@moveGeneration/VariantRules/VariantRuleDefinitions/BoardVariantModules/InsufficientMaterial/StateSerializer\";\nimport { deserializeInsufficientMaterialState } from \"@moveGeneration/VariantRules/VariantRuleDefinitions/BoardVariantModules/InsufficientMaterial/StateSerializer\";\n\nexport const requiredDispatches: Array<keyof RequestManager> = [];\nexport const initialDispatches: Array<keyof RequestManager> = [];\nexport const dispatchSyncRecord: Partial<Record<keyof RequestManager, keyof GameBoardObjectSetProperties>> = {};\n\nfunction withWorkerResult() {\n\treturn function (_: RequestManager, propertyKey: string, descriptor: TypedPropertyDescriptor<FunctionType>) {\n\t\tconst originalMethod = descriptor.value;\n\t\tassertNonUndefined(originalMethod);\n\t\tdescriptor.value = function (...args: unknown[]) {\n\t\t\tpostMessage([propertyKey, originalMethod.apply(this, args)]);\n\t\t};\n\t};\n}\n\nfunction workerDataSync(type: \"required\" | \"initial\", gameObjectPropertySync: keyof GameBoardObjectSetProperties) {\n\treturn function (_: RequestManager, propertyKey: keyof RequestManager) {\n\t\tif (type === \"required\") {\n\t\t\tinitialDispatches.push(propertyKey);\n\t\t\trequiredDispatches.push(propertyKey);\n\t\t} else {\n\t\t\tinitialDispatches.push(propertyKey);\n\t\t}\n\t\tdispatchSyncRecord[propertyKey] = gameObjectPropertySync;\n\t};\n}\n\nclass RequestManager {\n\tprivate board!: Board;\n\tprivate initiallyAliveColors: NumericColor[] = [];\n\tprivate internalMoves: InternalMove[] = [];\n\tprivate legalMoves = new Map<string, MoveData[]>();\n\tprivate fogOfWarPerspective: NumericColor | false = false;\n\n\tprivate stripPieceStrings<T>(object: T): StripPieceStringObjects<T> {\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-return\n\t\treturn JSON.parse(JSON.stringify(object));\n\t}\n\n\tprivate generateInitiallyAliveColors() {\n\t\treturn this.board.data.fenOptions\n\t\t\t.tag(\"dead\")\n\t\t\t.map((d) => !d)\n\t\t\t.reduce<NumericColor[]>((p, n, i) => {\n\t\t\t\tif (n) {\n\t\t\t\t\treturn [...p, i];\n\t\t\t\t} else return p;\n\t\t\t}, []);\n\t}\n\n\tprivate generateCurrentMoves() {\n\t\t(this.internalMoves = this.board.getAllowedInternalMoves()), (this.legalMoves = new Map());\n\t\tfor (const piece of this.board.getPlayerPieces()[this.board.data.sideToMove]) {\n\t\t\tthis.legalMoves.set(stringifyCoordinate(piece), this.board.getLegalMoves(piece[0], piece[1]));\n\t\t}\n\t}\n\n\tconstruct(_variantName: string, pgn4: string) {\n\t\tthis.board = new Board(pgn4);\n\t\tthis.board = decorateClassWithVariants(this.board, Board, this.board.variantRules.boardDecorators);\n\t\tthis.generateInitiallyAliveColors();\n\n\t\tconst insufficientMaterialModule = new InsufficientMaterialConstructor(this.board, (state) => {\n\t\t\tthis.board.insufficientMaterialChecker = new InsufficientMaterialChecker(state, this.board);\n\t\t\tthis.board.moves = validateMoveTree(this.board, this.board.moves);\n\t\t\tthis.board.moves.currentMove = [-1];\n\t\t\tchangeGameTermination(this.board);\n\t\t\tthis.generateCurrentMoves();\n\n\t\t\tpostMessage([\"construct\", StateSerializer.serializeInsufficientMaterialState(state)]);\n\t\t});\n\t\tinsufficientMaterialModule.generateInsufficientMaterialState();\n\t\treturn StateSerializer.serializeInsufficientMaterialState(insufficientMaterialModule.state);\n\t}\n\n\t@withWorkerResult()\n\tconstructWithGeneratedData(pgn4: string, insufficientMaterialState: StateSerializer.SerializedInsufficientMaterialState) {\n\t\tthis.board = new Board(pgn4);\n\t\tthis.board = decorateClassWithVariants(this.board, Board, this.board.variantRules.boardDecorators);\n\t\tthis.generateInitiallyAliveColors();\n\n\t\tthis.board.insufficientMaterialChecker = new InsufficientMaterialChecker(\n\t\t\tdeserializeInsufficientMaterialState(insufficientMaterialState),\n\t\t\tthis.board\n\t\t);\n\t\tthis.board.moves = validateMoveTree(this.board, this.board.moves);\n\t\tthis.board.moves.currentMove = [-1];\n\t\tchangeGameTermination(this.board);\n\t\tthis.generateCurrentMoves();\n\t}\n\n\t@workerDataSync(\"required\", \"publicFENSettings\")\n\t@withWorkerResult()\n\tgetFENSettings() {\n\t\tconst board = this.board;\n\t\tconst royalCount = createTuple(0, totalPlayers);\n\t\tlet isCustomRoyals = false;\n\t\tfor (const row of this.board.board) {\n\t\t\tfor (const square of row) {\n\t\t\t\tif (square.isPiece() && square.piece === \"K\" && ++royalCount[square.color] > 1) {\n\t\t\t\t\tisCustomRoyals = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (isCustomRoyals) break;\n\t\t}\n\n\t\tconst points: Tuple<number, typeof totalPlayers> = [...board.data.points];\n\t\treturn {\n\t\t\tsideToMove: board.data.sideToMove,\n\t\t\tpoints,\n\t\t\tisCustomRoyals,\n\t\t\tfenOptions: board.data.fenOptions.createSerializedState()\n\t\t};\n\t}\n\n\t@workerDataSync(\"initial\", \"initiallyAliveColors\")\n\t@withWorkerResult()\n\tgetInitiallyAliveColors() {\n\t\treturn this.initiallyAliveColors;\n\t}\n\n\t@workerDataSync(\"required\", \"moveTree\")\n\t@withWorkerResult()\n\tgetMoveTree() {\n\t\tconst traverse = (moves: MoveWrapper[], fullMoveCounter = 0): ProcessSafeMoveWrapper[] => {\n\t\t\tconst results: ProcessSafeMoveWrapper[] = [];\n\n\t\t\tfor (const moveWrapper of moves) {\n\t\t\t\tconst resultingWrapper: ProcessSafeMoveWrapper = {\n\t\t\t\t\talternativeLines: [],\n\t\t\t\t\tcomment: moveWrapper.comment,\n\t\t\t\t\tpath: moveWrapper.path.slice(),\n\t\t\t\t\tcachedNames: { ...moveWrapper.cachedNames },\n\t\t\t\t\tmetadata: {\n\t\t\t\t\t\tcurrentSideToMove: moveWrapper.metadata.currentSideToMove,\n\t\t\t\t\t\tplayerClock: moveWrapper.metadata.playerClock,\n\t\t\t\t\t\thighlightedArrows: moveWrapper.metadata.highlightedArrows,\n\t\t\t\t\t\thighlightedSquares: moveWrapper.metadata.highlightedSquares\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (moveWrapper.metadata.currentFullMove) resultingWrapper.metadata.currentFullMove = moveWrapper.metadata.currentFullMove;\n\n\t\t\t\tfor (const alternativeLine of moveWrapper.alternativeLines) {\n\t\t\t\t\tresultingWrapper.alternativeLines.push(traverse(alternativeLine, fullMoveCounter - 1));\n\t\t\t\t}\n\n\t\t\t\tresults.push(resultingWrapper);\n\t\t\t}\n\n\t\t\treturn results;\n\t\t};\n\n\t\treturn traverse(this.board.moves.moves);\n\t}\n\n\t@withWorkerResult()\n\tloadSnapshotByPath(path: number[]) {\n\t\tlet snapshot: MoveTreeSnapshot;\n\t\tif (compareArrays(path, [-1])) {\n\t\t\tconst preliminarySnapshot = this.board.moves.getBoardSnapshot(-1);\n\t\t\tassertNonUndefined(preliminarySnapshot);\n\t\t\tsnapshot = preliminarySnapshot;\n\t\t} else {\n\t\t\tconst currentMove = this.board.moves.getMove(path);\n\t\t\tassertValidMove(currentMove);\n\t\t\tconst preliminarySnapshot = this.board.moves.getBoardSnapshot(currentMove);\n\t\t\tif (!preliminarySnapshot) return false;\n\t\t\tsnapshot = preliminarySnapshot;\n\t\t}\n\n\t\tthis.board.loadSnapshot(snapshot.boardSnapshot);\n\t\tthis.board.moves.currentMove = [...path];\n\t\tthis.generateCurrentMoves();\n\n\t\treturn true;\n\t}\n\n\tprivate verifyNextChainedMovesAreDeleted(\n\t\tmove: Partial<StripPieceStringObjects<MoveComponent>>\n\t): move is StripPieceStringObjects<MoveComponent> & { nextChainedMoves: never } {\n\t\treturn !(\"nextChainedMoves\" in move);\n\t}\n\n\tprivate convertStrippedMoveToNormal(move: StripPieceStringObjects<Move>): Move {\n\t\tconst newMove: MoveComponent[] = [];\n\t\tfor (const moveComponent of move) {\n\t\t\tdelete moveComponent.nextChainedMoves;\n\t\t\tif (!this.verifyNextChainedMovesAreDeleted(moveComponent)) throw new Error(\"Could not delete nextChainedMoves in move component\");\n\n\t\t\tif (verifyStandardMove(moveComponent)) {\n\t\t\t\tnewMove.push({ ...moveComponent, promotion: moveComponent.promotion?.map((p) => PieceString.fromObjectToClass(p)) });\n\t\t\t} else if (verifyDroppingMove(moveComponent)) {\n\t\t\t\tnewMove.push({ ...moveComponent, piece: PieceString.fromObjectToClass(moveComponent.piece) });\n\t\t\t} else newMove.push(moveComponent);\n\t\t}\n\n\t\tif (!verifyRequiredMove(newMove)) throw new Error(\"Supplied move object had 0 move components\");\n\t\treturn newMove;\n\t}\n\n\t@withWorkerResult()\n\tmakeMove(passedMove: StripPieceStringObjects<Move>) {\n\t\tconst board = this.board,\n\t\t\tmove = this.convertStrippedMoveToNormal(passedMove);\n\t\tboard.moves.augmentMoveWithMetadata({\n\t\t\tmove,\n\t\t\tboard,\n\t\t\tmakeMoveFunction: () => {\n\t\t\t\treturn board.makeMove(move);\n\t\t\t}\n\t\t});\n\n\t\tthis.generateCurrentMoves();\n\t}\n\n\t@workerDataSync(\"required\", \"serializedPGN\")\n\t@withWorkerResult()\n\tserializeBoardToPGN() {\n\t\treturn serializeBoard(this.board);\n\t}\n\n\t@withWorkerResult()\n\tgetDroppingMoves(pieceString: PieceStringObject) {\n\t\tif (this.board.data.gameOver) return [];\n\t\treturn this.stripPieceStrings(this.board.getDroppingMoves(PieceString.fromObjectToClass(pieceString)));\n\t}\n\n\t@withWorkerResult()\n\tgetLegalMoves(i: number, j: number) {\n\t\tif (this.board.data.gameOver) return [];\n\t\treturn this.stripPieceStrings(this.legalMoves.get(stringifyCoordinate([i, j])) ?? this.board.getLegalMoves(i, j));\n\t}\n\n\t@workerDataSync(\"required\", \"allowedInternalMoves\")\n\t@withWorkerResult()\n\tgetInternalMoves() {\n\t\tif (this.board.data.gameOver) return [];\n\t\treturn this.stripPieceStrings(this.internalMoves);\n\t}\n\n\t@workerDataSync(\"initial\", \"variantDataRules\")\n\t@withWorkerResult()\n\tgetVariantData() {\n\t\treturn this.stripPieceStrings(this.board.variantData);\n\t}\n\n\t@workerDataSync(\"required\", \"boardSquares\")\n\t@withWorkerResult()\n\tgetBoard() {\n\t\treturn this.board.board.map((r) => r.map((p) => p.toObject()));\n\t}\n\n\t@workerDataSync(\"required\", \"gameData\")\n\t@withWorkerResult()\n\tgetGameData() {\n\t\tconst newGameData = { ...this.board.gameData };\n\t\tif (typeof newGameData.date === \"object\") {\n\t\t\tnewGameData.date = newGameData.date.toUTCString();\n\t\t}\n\t\treturn newGameData;\n\t}\n\n\t@workerDataSync(\"required\", \"currentMove\")\n\t@withWorkerResult()\n\tgetCurrentMove() {\n\t\treturn this.board.moves.currentMove;\n\t}\n\n\t@workerDataSync(\"initial\", \"variantRules\")\n\t@withWorkerResult()\n\tgetVariantRules() {\n\t\tconst resultingRules: Array<VariantRulePublicProperties<keyof VariantDataRules>> = [];\n\t\tfor (const variantRule of this.board.variantRules) {\n\t\t\tresultingRules.push(variantRule.getPublicProperties());\n\t\t}\n\n\t\treturn resultingRules;\n\t}\n\n\t@workerDataSync(\"initial\", \"variantType\")\n\t@withWorkerResult()\n\tgetVariantType() {\n\t\treturn this.board.gameType.type;\n\t}\n\n\t@withWorkerResult()\n\tdeleteMove(path: number[]) {\n\t\tif (this.board.moves.moves.length !== 0) this.board.moves.deleteMove(path);\n\t}\n\n\t@withWorkerResult()\n\tplayPreferredBotMove() {\n\t\tif (this.board.data.getRealPlayers() <= 1) return;\n\t\tconst legalMoves: MoveComponent[] = [];\n\t\tfor (const piece of this.board.getPlayerPieces()[this.board.data.sideToMove]) {\n\t\t\tlegalMoves.push(...(this.legalMoves.get(stringifyCoordinate(piece)) ?? this.board.getLegalMoves(piece[0], piece[1])));\n\t\t}\n\t\t// TODO Pick strongest piece\n\t\tlegalMoves.push(...this.board.preGeneratedAttacks[this.board.data.sideToMove].pieceDrops.piece);\n\t\tlegalMoves.push(...this.board.preGeneratedAttacks[this.board.data.sideToMove].pieceDrops.pawn);\n\t\tlegalMoves.push(...this.internalMoves);\n\n\t\tconst algorithm = this.board.data.fenOptions.getDefaultZombieAlgorithm(this.board.data.sideToMove);\n\t\tconst moves = algorithm.evaluate(legalMoves, this.board);\n\t\treturn this.stripPieceStrings(algorithm.pickPreferredMove(moves));\n\t}\n\n\t@withWorkerResult()\n\tchangeFogPerspective() {\n\t\tif (!this.board.variantData.fogOfWar || this.board.data.getRealPlayers() <= 1) return this.fogOfWarPerspective;\n\t\tif (this.fogOfWarPerspective === false) {\n\t\t\tthis.fogOfWarPerspective = this.board.data.sideToMove;\n\t\t} else {\n\t\t\tconst newPerspective = this.board.data.nextTurn(this.fogOfWarPerspective);\n\t\t\tif (newPerspective === this.board.data.sideToMove) {\n\t\t\t\tthis.fogOfWarPerspective = false;\n\t\t\t} else this.fogOfWarPerspective = newPerspective;\n\t\t}\n\n\t\treturn this.fogOfWarPerspective;\n\t}\n\n\t@workerDataSync(\"required\", \"squareVisibility\")\n\t@withWorkerResult()\n\tgetSquareVisibility() {\n\t\tif (this.fogOfWarPerspective === false) {\n\t\t\treturn this.board.getSquareVisibility();\n\t\t} else {\n\t\t\tconst sideToMove = this.board.data.sideToMove;\n\t\t\tthis.board.data.sideToMove = this.fogOfWarPerspective;\n\t\t\tconst squareVisibility = this.board.getSquareVisibility();\n\t\t\tthis.board.data.sideToMove = sideToMove;\n\t\t\treturn squareVisibility;\n\t\t}\n\t}\n}\n\nexport type BoardWorkerRequest = keyof RequestManager;\nexport interface BoardWorkerRequestBody<K extends BoardWorkerRequest> {\n\trequestName: K;\n\tparameters: BoardWorkerArguments<K>;\n}\nexport type PublicFENSettings = ReturnType<RequestManager[\"getFENSettings\"]>;\nexport type BoardWorkerReturnType<K extends BoardWorkerRequest> = [K, ReturnType<RequestManager[K]>];\nexport type BoardWorkerArguments<K extends BoardWorkerRequest> = Parameters<RequestManager[K]>;\n\nconst requestManager = new RequestManager();\nself.onmessage = <K extends BoardWorkerRequest>(e: MessageEvent<BoardWorkerRequestBody<K>>) => {\n\tif (!(e.data.requestName in RequestManager.prototype)) return;\n\tconst method: FunctionType = RequestManager.prototype[e.data.requestName];\n\tmethod.apply(requestManager, e.data.parameters);\n};\n","import { assertNonUndefined, createTuple, createTupleFromCallback, Tuple } from \"../../../baseTypes\";\nimport { BoardSquares, Cloneable, initializeBoardSquares, Memento } from \"../../BaseInterfaces\";\nimport { createMoveTree, MoveTreeInterface } from \"../MoveTree/MoveTree\";\nimport {\n\tcreateBaseMoveWrapper,\n\tDroppingMove,\n\tInternalMove,\n\tInternalMoveSignature,\n\tMove,\n\tMoveData,\n\tSpecialMove\n} from \"../MoveTree/MoveTreeInterface\";\nimport { FENData } from \"../FENData/FENData\";\nimport type { PostMoveResults } from \"../FENData/FENDataInterface\";\nimport { boardDimension, colors, GameData, totalPlayers } from \"../GameInformation/GameData\";\nimport { NumericColor, Coordinate, nonPlayablePieces } from \"../GameInformation/GameUnits/GameUnits\";\nimport { createPieceFromData, deadColorIndex, pawnPieceString, PieceString, wallPieceString } from \"../GameInformation/GameUnits/PieceString\";\nimport { PieceControlConfigurator, PieceControlBuilder } from \"../PieceControl/PieceControlBuilder\";\nimport { initPieceControlDeclarations } from \"../PieceControl/PieceControlDeclarations\";\nimport { AttackType, pieceControlConfigSettings, PieceControlGeneratedMove, PieceLetter } from \"../PieceControl/PieceControlInterface\";\nimport { decorateClassWithVariants } from \"../VariantRules/VariantRule\";\nimport { copyVariantRules, validateVariantRules, VariantRuleParsingTypes } from \"../VariantRules/VariantRuleSetup\";\nimport {\n\tDisplaySettings,\n\tcreateGameTypeSettings,\n\tcreateComplexMoveLegalityTracker,\n\tBoardSnapshot,\n\tcreateBasePreGeneratedAttacks,\n\tcompareCoordinates,\n\tstringifyCoordinate,\n\tSpecialMoveGenerationSettings\n} from \"./BoardInterface\";\nimport type { VariantDataRules, VariantHandlerTarget } from \"../VariantRules/VariantRuleInterface\";\nimport { copyClass } from \"@client/ts/utils/ObjectUtils\";\nimport { parsePGN4 } from \"../../utils/Tags/InputOutputProcessing\";\nimport { InsufficientMaterialChecker } from \"@moveGeneration/VariantRules/VariantRuleDefinitions/BoardVariantModules/InsufficientMaterial/InsufficientMaterialChecker\";\n\ninitPieceControlDeclarations();\n\nexport const baseImmunes = createTuple(false, totalPlayers);\nexport type PlayerBooleanTuple = typeof baseImmunes;\n\nexport class Board implements VariantHandlerTarget<Board>, Cloneable<Board>, Memento<BoardSnapshot> {\n\treadonly controls: Record<PieceLetter, () => PieceControlConfigurator> = {};\n\tdata: FENData;\n\tmoves: MoveTreeInterface;\n\tpreGeneratedAttacks = createTupleFromCallback(createBasePreGeneratedAttacks, totalPlayers);\n\tboard: BoardSquares<PieceString>;\n\tisComplexSetup = createComplexMoveLegalityTracker();\n\treadonly gameData: GameData;\n\treadonly gameType = createGameTypeSettings();\n\treadonly variantRules: VariantRuleParsingTypes;\n\treadonly variantData: VariantDataRules;\n\treadonly isTwoPlayer: boolean;\n\tinsufficientMaterialChecker?: InsufficientMaterialChecker;\n\n\t__baseClass: Board;\n\tinitDecoratorSettings() {\n\t\t/* no-op */\n\t}\n\n\t/*---------------------------------- INITIALIZATION -----------------------------------------*/\n\tconstructor(pgn4: string) {\n\t\tthis.__baseClass = this;\n\n\t\tconst parsingResults = parsePGN4(pgn4);\n\t\tthis.gameType.type = parsingResults.gameType;\n\t\tthis.variantRules = parsingResults.variantRules;\n\t\tthis.gameData = parsingResults.gameData;\n\t\tthis.board = parsingResults.board;\n\t\tthis.data = parsingResults.fenData;\n\t\tthis.data.injectBoard(this);\n\t\tthis.data = decorateClassWithVariants<typeof FENData>(this.data, FENData, this.variantRules.fenDataDecorators);\n\t\tthis.variantData = parsingResults.variantRuleData;\n\t\tthis.variantRules = validateVariantRules(this);\n\t\tthis.isTwoPlayer = this.data.getRealPlayers() === 2;\n\t\tthis.initPieceControls(parsingResults.pieceSet);\n\n\t\tthis.moves = createMoveTree(this.createSnapshot());\n\t\tthis.moves.moves = parsingResults.moves;\n\t\tthis.pregenerateAttacks();\n\t}\n\n\tinitPieceControls(pieces: Set<PieceLetter>) {\n\t\tif (pieces.size === 0) return;\n\n\t\tconst builder = new PieceControlBuilder();\n\t\tbuilder.setFENData(this.data);\n\t\tbuilder.setVariantRules(this.variantRules.pieceControlDecorators);\n\n\t\tfor (const piece of pieces) {\n\t\t\tconst pieceControlConfigurator = builder.createPieceControlWrap(piece);\n\t\t\tthis.controls[piece] = pieceControlConfigurator;\n\t\t}\n\t}\n\n\tgetSquareVisibility(): BoardSquares<DisplaySettings[]> {\n\t\treturn initializeBoardSquares(() => []);\n\t}\n\n\tcreateSnapshot(): BoardSnapshot {\n\t\treturn {\n\t\t\tdata: this.data.createSnapshot(),\n\t\t\tboard: this.board.map((a) => [...a]),\n\t\t\tisComplexSetup: Object.assign({}, this.isComplexSetup)\n\t\t};\n\t}\n\n\tloadSnapshot(snapshot: BoardSnapshot) {\n\t\tthis.isComplexSetup = { ...snapshot.isComplexSetup };\n\t\tthis.data.loadSnapshot(snapshot.data);\n\t\tthis.board = snapshot.board.map((row) => [...row]);\n\t\tthis.pregenerateAttacks();\n\t\tthis.runComplexLegalityEvaluationChecks();\n\t}\n\n\tcreateClone(): Board {\n\t\tlet targetObject = copyClass(this.__baseClass, Board);\n\t\ttargetObject.board = this.board.map((a) => [...a]); // PieceStrings are immutable\n\t\ttargetObject.isComplexSetup = Object.assign({}, this.isComplexSetup);\n\t\ttargetObject.preGeneratedAttacks = createTupleFromCallback(createBasePreGeneratedAttacks, totalPlayers);\n\t\ttargetObject.data = this.data.createClone();\n\t\ttargetObject = decorateClassWithVariants<typeof Board>(\n\t\t\ttargetObject,\n\t\t\tBoard,\n\t\t\tcopyVariantRules(this.__baseClass.variantRules.boardDecorators)\n\t\t);\n\t\ttargetObject.data.injectBoard(targetObject);\n\t\ttargetObject.data = decorateClassWithVariants<typeof FENData>(\n\t\t\ttargetObject.data,\n\t\t\tFENData,\n\t\t\tcopyVariantRules(this.__baseClass.variantRules.fenDataDecorators)\n\t\t);\n\t\tconst presumedPieceLetters = new Set<PieceLetter>();\n\t\tlet letter: PieceLetter;\n\t\tfor (letter in this.controls) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(this.controls, letter)) {\n\t\t\t\tpresumedPieceLetters.add(letter);\n\t\t\t}\n\t\t}\n\t\ttargetObject.initPieceControls(presumedPieceLetters);\n\t\ttargetObject.pregenerateAttacks();\n\n\t\treturn targetObject;\n\t}\n\n\t/*---------------------------------- INITIALIZATION -----------------------------------------*/\n\t/*-------------------------------------------------------------------------------------------*/\n\t/*------------------------------------- UTILITIES -------------------------------------------*/\n\n\tisKingInCheck(baseColor: NumericColor, fenRoyal = this.data.fenOptions.tag(\"royal\")): boolean {\n\t\tconst royal = fenRoyal[baseColor];\n\t\tif (!royal || this.data.fenOptions.tag(\"dead\")[baseColor]) return false;\n\t\tconst coordinates = royal;\n\t\treturn !!(\n\t\t\tthis.preGeneratedAttacks[baseColor].slidingPieces[coordinates[0]][coordinates[1]] ||\n\t\t\tthis.preGeneratedAttacks[baseColor].hoppingPieces[coordinates[0]][coordinates[1]]\n\t\t);\n\t}\n\n\tgetPlayerPieces(): Tuple<Coordinate[], typeof totalPlayers> {\n\t\tconst playerPieces: Tuple<Coordinate[], typeof totalPlayers> = [[], [], [], []];\n\n\t\tfor (let i = 0; i < boardDimension; i++) {\n\t\t\tfor (let j = 0; j < boardDimension; j++) {\n\t\t\t\tconst square = this.board[i][j];\n\t\t\t\tif (square.isEmpty()) continue;\n\t\t\t\tconst color = square.color;\n\t\t\t\tif (color !== deadColorIndex) playerPieces[color].push([i, j]);\n\t\t\t}\n\t\t}\n\n\t\treturn playerPieces;\n\t}\n\n\tgetCheckmatesAndStalemates() {\n\t\tconst dead = this.data.fenOptions.tag(\"dead\"),\n\t\t\troyal = this.data.fenOptions.tag(\"royal\");\n\n\t\tconst kingChecks = createTuple(false, totalPlayers);\n\t\tconst legalMoves = createTuple(false, totalPlayers);\n\t\tconst playerPieces = this.getPlayerPieces();\n\t\tlegalMoves[this.data.sideToMove] = true;\n\n\t\tfor (const color of colors) {\n\t\t\tif (dead[color]) continue;\n\t\t\tconst playerArmy = playerPieces[color];\n\t\t\tif (this.isKingInCheck(color)) {\n\t\t\t\tkingChecks[color] = true;\n\t\t\t}\n\t\t\tfor (const piece of playerArmy) {\n\t\t\t\tif (this.getLegalMoves(piece[0], piece[1], color).length) {\n\t\t\t\t\tlegalMoves[color] = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!legalMoves[color]) {\n\t\t\t\tif (this.preGeneratedAttacks[color].pieceDrops.pawn.length || this.preGeneratedAttacks[color].pieceDrops.piece.length) {\n\t\t\t\t\tlegalMoves[color] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst kingCaptures = royal.map((r, i) =>\n\t\t\t!dead[i] && r ? this.board[r[0]][r[1]].isEmpty() || this.board[r[0]][r[1]].color !== i : false\n\t\t);\n\t\treturn {\n\t\t\tcheckmates: legalMoves.map((move, i) => kingCaptures[i] || (!move && kingChecks[i])),\n\t\t\tstalemates: legalMoves.map((move, i) => !move && !kingChecks[i]),\n\t\t\tchecks: kingChecks\n\t\t};\n\t}\n\n\tprivate runComplexLegalityEvaluationChecks(): void {\n\t\tif (this.isComplexSetup.hasComplexRules) return;\n\t\tfor (let i = 0; i < boardDimension; i++) {\n\t\t\tfor (let j = 0; j < boardDimension; j++) {\n\t\t\t\tconst square = this.board[i][j];\n\t\t\t\tif (square.isPiece() && pieceControlConfigSettings[square.piece].moveGenerationSettings.isComplex) {\n\t\t\t\t\tthis.isComplexSetup.hasComplexPieces = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tgetCurrentChecks(sideToMove = this.data.sideToMove) {\n\t\tconst dead = this.data.fenOptions.tag(\"dead\"),\n\t\t\tresigned = this.data.fenOptions.tag(\"resigned\"),\n\t\t\troyal = this.data.fenOptions.tag(\"royal\");\n\n\t\tconst playerRoyals = royal.map((r, i) => (r && !dead[i] && !resigned[i] ? r : null));\n\t\tconst attackingCoordinates = createTupleFromCallback<string[], typeof totalPlayers>(() => [], totalPlayers);\n\t\tfor (const [startingCoordinate, attackList] of this.preGeneratedAttacks[sideToMove].pieceMovements) {\n\t\t\tfor (const attack of attackList) {\n\t\t\t\tfor (const color of colors) {\n\t\t\t\t\tif (color === sideToMove) continue;\n\t\t\t\t\tconst royal = playerRoyals[color];\n\t\t\t\t\tif (royal && compareCoordinates(royal, attack.move)) {\n\t\t\t\t\t\tattackingCoordinates[color].push(startingCoordinate);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn attackingCoordinates;\n\t}\n\n\t/*------------------------------------- UTILITIES -------------------------------------------*/\n\t/*-------------------------------------------------------------------------------------------*/\n\t/*---------------------------------------- API ----------------------------------------------*/\n\n\tmakeMove(move: Move, ignoreNextMoves = false): PostMoveResults {\n\t\tlet returnValues!: PostMoveResults;\n\t\tconst sideToMove = this.data.sideToMove,\n\t\t\tpregeneratedAttacks = this.preGeneratedAttacks;\n\n\t\tfor (let i = 0; i < move.length; i++) {\n\t\t\tif (i === move.length - 1) {\n\t\t\t\treturnValues = this.data.affectOptions(move[i], {\n\t\t\t\t\tignoreCheckmateChecks: ignoreNextMoves,\n\t\t\t\t\tignoreNextTurn: false\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.data.affectOptions(move[i], {\n\t\t\t\t\tignoreCheckmateChecks: ignoreNextMoves,\n\t\t\t\t\tignoreNextTurn: true\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tthis.runComplexLegalityEvaluationChecks();\n\t\tif (ignoreNextMoves) return returnValues;\n\n\t\tconst path = this.moves.currentMove.slice();\n\t\tpath[path.length - 1]++;\n\t\tthis.moves.currentMove = this.moves.setNewMove({\n\t\t\tmove: createBaseMoveWrapper({ path, moveData: move }),\n\t\t\tsnapshot: {\n\t\t\t\tboardSnapshot: this.createSnapshot(),\n\t\t\t\tpregeneratedAttacks: pregeneratedAttacks[sideToMove]\n\t\t\t},\n\t\t\tfenDataString: this.moves.constructPreliminaryHashString(this)\n\t\t});\n\t\tif (this.data.gameOver || this.data.getRealPlayers() === 1) return returnValues;\n\t\tif (returnValues.checkmates[this.data.sideToMove]) {\n\t\t\treturnValues = this.makeMove([{ type: InternalMoveSignature.TeamsCheckmate }], true);\n\t\t} else if (returnValues.stalemates[this.data.sideToMove]) {\n\t\t\treturnValues = this.makeMove([{ type: InternalMoveSignature.Stalemate }]);\n\t\t}\n\n\t\treturn returnValues;\n\t}\n\n\tpregenerateAttacks(exclusiveSideToMoveGeneration: NumericColor | false = false): void {\n\t\tconst royal = this.data.fenOptions.tag(\"royal\");\n\n\t\tthis.preGeneratedAttacks = createTupleFromCallback(createBasePreGeneratedAttacks, totalPlayers);\n\t\tthis.getPlayerPieces().forEach((army, armyColor) => {\n\t\t\tif (exclusiveSideToMoveGeneration !== false && exclusiveSideToMoveGeneration !== armyColor) return;\n\t\t\tconst preGeneratedAttacks = this.preGeneratedAttacks[armyColor];\n\t\t\tfor (const coordinate of army) {\n\t\t\t\tconst square = this.board[coordinate[0]][coordinate[1]];\n\t\t\t\tif (!square.isPiece()) continue;\n\t\t\t\tconst color = square.color;\n\t\t\t\tconst letter = square.piece;\n\t\t\t\tconst controlBuilder = this.controls[letter]().setColor(color).setCoordinates(coordinate[0], coordinate[1]).setBoard(this.board);\n\t\t\t\tconst setting = pieceControlConfigSettings[square.piece];\n\t\t\t\tconst resultingMoves: PieceControlGeneratedMove[] = [];\n\n\t\t\t\tlet control = controlBuilder.setBaseImmunePieces(this.gameType.getBaseColors(color)).constructPieceControl();\n\t\t\t\tresultingMoves.push(...control.getPseudoLegalMoves());\n\n\t\t\t\tcontrol = controlBuilder.setBaseImmunePieces(baseImmunes).constructPieceControl();\n\t\t\t\tif (setting.moveGenerationSettings.isJumping) {\n\t\t\t\t\tconst attacks = control.rayGenJumpingAttacks();\n\t\t\t\t\tfor (const { move: attack } of attacks) {\n\t\t\t\t\t\tfor (const color of colors) {\n\t\t\t\t\t\t\tif (color === armyColor) continue;\n\t\t\t\t\t\t\tconst preGeneratedAttacks = this.preGeneratedAttacks[color];\n\t\t\t\t\t\t\tpreGeneratedAttacks.hoppingPieces[attack[0]][attack[1]]++;\n\t\t\t\t\t\t\tpreGeneratedAttacks.hoppingPieceLines.push([coordinate, attack]);\n\t\t\t\t\t\t\tconst l = preGeneratedAttacks.attackingColors[attack[0]][attack[1]];\n\t\t\t\t\t\t\tif (~l && preGeneratedAttacks.attackingColors[attack[0]][attack[1]] !== color + 1) {\n\t\t\t\t\t\t\t\tpreGeneratedAttacks.attackingColors[attack[0]][attack[1]] = l === 0 ? 1 + color : -1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (setting.moveGenerationSettings.isSliding) {\n\t\t\t\t\tconst attacks = control.rayGenSlidingAttacks();\n\t\t\t\t\tfor (const attack of attacks) {\n\t\t\t\t\t\tfor (const color of colors) {\n\t\t\t\t\t\t\tif (color === armyColor) continue;\n\t\t\t\t\t\t\tconst preGeneratedAttacks = this.preGeneratedAttacks[color];\n\n\t\t\t\t\t\t\tfor (const { move: subAttack } of attack) {\n\t\t\t\t\t\t\t\tpreGeneratedAttacks.slidingPieces[subAttack[0]][subAttack[1]]++;\n\t\t\t\t\t\t\t\tconst l = preGeneratedAttacks.attackingColors[subAttack[0]][subAttack[1]];\n\t\t\t\t\t\t\t\tif (~l && preGeneratedAttacks.attackingColors[subAttack[0]][subAttack[1]] !== color + 1) {\n\t\t\t\t\t\t\t\t\tpreGeneratedAttacks.attackingColors[subAttack[0]][subAttack[1]] = l === 0 ? 1 + color : -1;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (attack.length !== 0) {\n\t\t\t\t\t\t\t\tpreGeneratedAttacks.slidingPiecesLines.push([coordinate, attack.map((m) => m.move)]);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconst coordinateArray: Coordinate[] = [];\n\t\t\t\t\t\t\t\tpreGeneratedAttacks.slidingPiecesLines.push([coordinate, coordinateArray]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst rayGen = control.rayGenSlidingAttacks(AttackType.RayTraceLimited);\n\t\t\t\t\tfor (const attack of rayGen) {\n\t\t\t\t\t\tfor (const color of colors) {\n\t\t\t\t\t\t\tif (color === armyColor) continue;\n\t\t\t\t\t\t\tconst preGeneratedAttacks = this.preGeneratedAttacks[color];\n\n\t\t\t\t\t\t\tif (attack.length !== 0) {\n\t\t\t\t\t\t\t\tlet isRoyalOnLine = false;\n\t\t\t\t\t\t\t\tconst resultingAttack: Coordinate[] = [];\n\t\t\t\t\t\t\t\tfor (const { move } of attack) {\n\t\t\t\t\t\t\t\t\tresultingAttack.push(move);\n\t\t\t\t\t\t\t\t\tif (isRoyalOnLine) {\n\t\t\t\t\t\t\t\t\t\tpreGeneratedAttacks.slidingPieces[move[0]][move[1]]++;\n\t\t\t\t\t\t\t\t\t} else if (compareCoordinates(royal[color] ?? [-1, -1], move)) {\n\t\t\t\t\t\t\t\t\t\tisRoyalOnLine = true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tpreGeneratedAttacks.slidingPiecesRayTracing.push([coordinate, attack.map((m) => m.move)]);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpreGeneratedAttacks.slidingPiecesLines.push([coordinate, []]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tpreGeneratedAttacks.pieceMovements.set(stringifyCoordinate(coordinate), resultingMoves);\n\t\t\t}\n\n\t\t\tpreGeneratedAttacks.pieceDrops.piece = this.getDroppingMoves(createPieceFromData(armyColor, nonPlayablePieces.wall));\n\t\t\tpreGeneratedAttacks.pieceDrops.pawn = this.getDroppingMoves(createPieceFromData(armyColor, pawnPieceString.piece));\n\t\t});\n\t}\n\n\tisSetupComplex() {\n\t\treturn this.isComplexSetup.hasComplexPieces || this.isComplexSetup.hasComplexRules || this.data.isComplexEvaluation();\n\t}\n\n\tisTheMoveLegal(color: NumericColor, moveData: MoveData, isSeirawanDrop = false): boolean {\n\t\tconst royals = this.data.fenOptions.tag(\"royal\");\n\t\tconst {\n\t\t\tstartCoordinates: [pieceI, pieceJ],\n\t\t\tendCoordinates: [attackI, attackJ]\n\t\t} = moveData;\n\t\tconst royal = royals[color];\n\t\tif (!this.board[attackI][attackJ].isEmpty() && royal && attackI === royal[0] && attackJ === royal[1]) return false;\n\n\t\tif (this.isSetupComplex()) {\n\t\t\tconst snapshot = this.createSnapshot();\n\t\t\tconst moveArray: Move = [\n\t\t\t\t{\n\t\t\t\t\tstartCoordinates: [pieceI, pieceJ],\n\t\t\t\t\tendCoordinates: [attackI, attackJ]\n\t\t\t\t}\n\t\t\t];\n\t\t\tif (isSeirawanDrop) moveArray.push({ piece: wallPieceString, endCoordinates: [pieceI, pieceJ] });\n\t\t\tconst { checks, checkmates } = this.makeMove(moveArray, true);\n\n\t\t\tlet isKingInCheck = checks[color] || checkmates[color];\n\t\t\tif (!isKingInCheck) {\n\t\t\t\tthis.pregenerateAttacks(color);\n\t\t\t\tisKingInCheck = this.isKingInCheck(color);\n\t\t\t}\n\t\t\tthis.loadSnapshot(snapshot);\n\t\t\treturn !isKingInCheck;\n\t\t} else {\n\t\t\tconst [royalI, royalJ] = royal ?? [null, null];\n\t\t\tconst preGeneratedAttacks = this.preGeneratedAttacks[color];\n\t\t\tif (royalI === null) return true;\n\t\t\tconst isRoyalMove = royalI === pieceI && royalJ === pieceJ;\n\t\t\tconst attackers = preGeneratedAttacks.hoppingPieces[royalI][royalJ] + preGeneratedAttacks.slidingPieces[royalI][royalJ];\n\t\t\tconst targetSafety = preGeneratedAttacks.slidingPieces[attackI][attackJ] + preGeneratedAttacks.hoppingPieces[attackI][attackJ] === 0;\n\t\t\tconst legalitySettings: { canKingCapture: number | undefined } = {\n\t\t\t\tcanKingCapture: undefined\n\t\t\t};\n\n\t\t\tfor (const kingCaptureColor of colors) {\n\t\t\t\tconst royal = royals[kingCaptureColor];\n\t\t\t\tif (kingCaptureColor !== color && royal && royal[0] === attackI && royal[1] === attackJ) {\n\t\t\t\t\tconst royalDefendedSquare = preGeneratedAttacks.attackingColors[royal[1]][royal[0]];\n\t\t\t\t\tif (\n\t\t\t\t\t\t(royalDefendedSquare === kingCaptureColor + 1 || royalDefendedSquare === 0) &&\n\t\t\t\t\t\t(isRoyalMove || preGeneratedAttacks.attackingColors[royalI][royalJ] === kingCaptureColor + 1)\n\t\t\t\t\t) {\n\t\t\t\t\t\tlegalitySettings.canKingCapture = kingCaptureColor + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!this.gameType.isFFA() && legalitySettings.canKingCapture !== undefined) return true;\n\n\t\t\tfor (const [attackingPiece, attackLine] of preGeneratedAttacks.slidingPiecesRayTracing) {\n\t\t\t\tlet isPieceUnderAttack = false,\n\t\t\t\t\tisRoyalUnderAttack = false,\n\t\t\t\t\tisTheTargetSquarePinListed = false;\n\t\t\t\tfor (const [attackedX, attackedY] of attackLine) {\n\t\t\t\t\tif (!isPieceUnderAttack && attackedX === pieceI && attackedY === pieceJ) isPieceUnderAttack = true;\n\t\t\t\t\telse if (!isTheTargetSquarePinListed && !isRoyalUnderAttack && attackedX === attackI && attackedY === attackJ)\n\t\t\t\t\t\tisTheTargetSquarePinListed = true;\n\t\t\t\t\tif (!isRoyalUnderAttack && attackedX === royalI && attackedY === royalJ) isRoyalUnderAttack = true;\n\n\t\t\t\t\tif (isRoyalMove) {\n\t\t\t\t\t\tif (isRoyalUnderAttack && attackedX === attackI && attackedY === attackJ) {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tlegalitySettings.canKingCapture &&\n\t\t\t\t\t\t\t\tlegalitySettings.canKingCapture > 0 &&\n\t\t\t\t\t\t\t\tthis.board[attackedX][attackedY].color + 1 === legalitySettings.canKingCapture\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tisPieceUnderAttack &&\n\t\t\t\t\t\t\tisRoyalUnderAttack &&\n\t\t\t\t\t\t\t!compareCoordinates(attackingPiece, moveData.endCoordinates) &&\n\t\t\t\t\t\t\t!isTheTargetSquarePinListed\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tlegalitySettings.canKingCapture &&\n\t\t\t\t\t\t\t\tlegalitySettings.canKingCapture > 0 &&\n\t\t\t\t\t\t\t\tthis.board[attackedX][attackedY].color + 1 === legalitySettings.canKingCapture\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (attackers > 1) {\n\t\t\t\treturn isRoyalMove ? targetSafety || Boolean(legalitySettings.canKingCapture) : Boolean(legalitySettings.canKingCapture);\n\t\t\t} else if (attackers === 1) {\n\t\t\t\tif (!isRoyalMove) {\n\t\t\t\t\tif (preGeneratedAttacks.hoppingPieces[royalI][royalJ] === 1) {\n\t\t\t\t\t\tfor (const [attackingPiece, attackCoordinates] of preGeneratedAttacks.hoppingPieceLines) {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tattackCoordinates[0] === royalI &&\n\t\t\t\t\t\t\t\tattackCoordinates[1] === royalJ &&\n\t\t\t\t\t\t\t\tattackingPiece[0] === attackI &&\n\t\t\t\t\t\t\t\tattackingPiece[1] === attackJ\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn Boolean(legalitySettings.canKingCapture);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (const [attackingPiece, attackLine] of preGeneratedAttacks.slidingPiecesLines) {\n\t\t\t\t\t\t\tlet isRoyalUnderAttack = false,\n\t\t\t\t\t\t\t\tisTheTargetSquareBlocked = false;\n\t\t\t\t\t\t\tfor (const [attackedX, attackedY] of attackLine) {\n\t\t\t\t\t\t\t\tif (!isRoyalUnderAttack && attackedX === royalI && attackedY === royalJ) isRoyalUnderAttack = true;\n\t\t\t\t\t\t\t\telse if (!isTheTargetSquareBlocked && !isRoyalUnderAttack && attackedX === attackI && attackedY === attackJ)\n\t\t\t\t\t\t\t\t\tisTheTargetSquareBlocked = true;\n\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tisRoyalUnderAttack &&\n\t\t\t\t\t\t\t\t\t!compareCoordinates(attackingPiece, moveData.endCoordinates) &&\n\t\t\t\t\t\t\t\t\t!isTheTargetSquareBlocked\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\tlegalitySettings.canKingCapture &&\n\t\t\t\t\t\t\t\t\t\tlegalitySettings.canKingCapture > 0 &&\n\t\t\t\t\t\t\t\t\t\tthis.board[attackedX][attackedY].color + 1 === legalitySettings.canKingCapture\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\treturn Boolean(legalitySettings.canKingCapture);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn targetSafety || Boolean(legalitySettings.canKingCapture);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn isRoyalMove ? targetSafety || Boolean(legalitySettings.canKingCapture) : true;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getCastlingMoves(parameters: SpecialMoveGenerationSettings) {\n\t\tconst { i, j, baseColor } = parameters;\n\t\tconst specialMoves: MoveData[] = [];\n\t\tconst royal = this.data.fenOptions.tag(\"royal\")[baseColor];\n\n\t\tif (royal && royal[0] === i && royal[1] === j) {\n\t\t\tif (this.data.fenOptions.isKingsideCastlingAvailable(baseColor, this)) {\n\t\t\t\tspecialMoves.push({\n\t\t\t\t\tstartCoordinates: [i, j],\n\t\t\t\t\tendCoordinates: this.data.fenOptions.getKingsideCastlingEndCoordinate(baseColor),\n\t\t\t\t\tspecialType: SpecialMove.CastlingKingside\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (this.data.fenOptions.isQueensideCastlingAvailable(baseColor, this)) {\n\t\t\t\tspecialMoves.push({\n\t\t\t\t\tstartCoordinates: [i, j],\n\t\t\t\t\tendCoordinates: this.data.fenOptions.getQueensideCastlingEndCoordinate(baseColor),\n\t\t\t\t\tspecialType: SpecialMove.CastlingQueenside\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn specialMoves;\n\t}\n\n\tprivate getEnPassantMoves(parameters: SpecialMoveGenerationSettings) {\n\t\tconst { i, j, baseColor, pieceLetter } = parameters;\n\t\tconst specialMoves: MoveData[] = [];\n\t\tif (pieceControlConfigSettings[pieceLetter].moveGenerationSettings.isPawn) {\n\t\t\tconst enPassantCaptures = this.data.fenOptions.getAvailableEnPassantCaptures(baseColor);\n\t\t\tconst pawnAttacks = this.controls[pieceLetter]()\n\t\t\t\t.setBaseImmunePieces(this.gameType.getBaseColors(baseColor))\n\t\t\t\t.setBoard(this.board)\n\t\t\t\t.setCoordinates(i, j)\n\t\t\t\t.setColor(baseColor)\n\t\t\t\t.constructPieceControl()\n\t\t\t\t.rayGenJumpingAttacks();\n\t\t\tif (enPassantCaptures.length !== 0) {\n\t\t\t\tfor (const attack of pawnAttacks) {\n\t\t\t\t\tfor (const enP of enPassantCaptures) {\n\t\t\t\t\t\tif (compareCoordinates(attack.move, enP)) {\n\t\t\t\t\t\t\tconst snapshot = this.createSnapshot();\n\t\t\t\t\t\t\tconst move: [MoveData] = [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tstartCoordinates: [i, j],\n\t\t\t\t\t\t\t\t\tendCoordinates: attack.move,\n\t\t\t\t\t\t\t\t\tspecialType: SpecialMove.EnPassant,\n\t\t\t\t\t\t\t\t\tisIrreversible: attack.irreversible\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t];\n\n\t\t\t\t\t\t\tthis.makeMove(move, true);\n\t\t\t\t\t\t\tthis.pregenerateAttacks();\n\t\t\t\t\t\t\tif (!this.isKingInCheck(baseColor)) specialMoves.push(move[0]);\n\t\t\t\t\t\t\tthis.loadSnapshot(snapshot);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn specialMoves;\n\t}\n\n\tprivate getSpecialMoves(parameters: SpecialMoveGenerationSettings) {\n\t\treturn [...this.getCastlingMoves(parameters), ...this.getEnPassantMoves(parameters)];\n\t}\n\n\tgetLegalMoves(i: number, j: number, baseColor = this.data.sideToMove, isSeirawanDrop = false): MoveData[] {\n\t\tconst pieceString = this.board[i]?.[j],\n\t\t\troyal = this.data.fenOptions.tag(\"royal\")[baseColor];\n\t\tif (pieceString.isPiece()) {\n\t\t\tconst color = pieceString.color;\n\t\t\tif (color !== baseColor) return [];\n\t\t\tconst pseudoLegalMoves = this.preGeneratedAttacks[color].pieceMovements.get(stringifyCoordinate([i, j]));\n\t\t\tassertNonUndefined(pseudoLegalMoves);\n\n\t\t\tconst specialMoves = this.getSpecialMoves({ i, j, baseColor, pieceLetter: pieceString.piece });\n\t\t\treturn [\n\t\t\t\t...pseudoLegalMoves\n\t\t\t\t\t.map((generatedMove) => {\n\t\t\t\t\t\tconst moveData: MoveData = {\n\t\t\t\t\t\t\tstartCoordinates: [i, j],\n\t\t\t\t\t\t\tendCoordinates: generatedMove.move,\n\t\t\t\t\t\t\tisIrreversible: generatedMove.irreversible\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (generatedMove.move[2]) {\n\t\t\t\t\t\t\tmoveData.promotion = generatedMove.move[2].split(\"\").map((piece) => createPieceFromData(color, piece));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn moveData;\n\t\t\t\t\t})\n\t\t\t\t\t.filter((m) => {\n\t\t\t\t\t\tconst capturedPieces = this.data.getCapturedPieces(m);\n\t\t\t\t\t\tconst isKingCapture = royal && capturedPieces.find((c) => royal[0] === c[0] && royal[1] === c[1]);\n\t\t\t\t\t\treturn this.isTheMoveLegal(color, m, isSeirawanDrop) && !isKingCapture;\n\t\t\t\t\t}),\n\t\t\t\t...specialMoves\n\t\t\t];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tgetDroppingMoves(_piece: PieceString, _sideToMove = this.data.sideToMove): DroppingMove[] {\n\t\treturn [];\n\t}\n\n\tgetAllowedInternalMoves(sideToMove = this.data.sideToMove): InternalMove[] {\n\t\tconst currentMoves = [InternalMoveSignature.DrawByAgreement];\n\n\t\tconst currentSnapshot = this.createSnapshot();\n\t\tthis.makeMove([{ type: InternalMoveSignature.Resign }], true);\n\t\tconst maximum = Math.max(...this.data.points);\n\t\tconst pointIndexes = this.data.points.reduce<number[]>((p, n, i) => (n === maximum ? [...p, i] : p), []);\n\t\tthis.loadSnapshot(currentSnapshot);\n\t\tif (pointIndexes.length === 1 && pointIndexes[0] === sideToMove) {\n\t\t\tcurrentMoves.push(InternalMoveSignature.ClaimWin);\n\t\t} else {\n\t\t\tcurrentMoves.push(InternalMoveSignature.Resign, InternalMoveSignature.Timeout);\n\t\t}\n\n\t\treturn currentMoves.map((type) => ({ type }));\n\t}\n\n\t/*---------------------------------------- API ----------------------------------------------*/\n}\n","import { createTupleFromCallback, Tuple, verifyTupleType } from \"../../../baseTypes\";\nimport { BoardSquares, initializeBoardSquares } from \"../../BaseInterfaces\";\nimport type { FENDataSnapshot } from \"../FENData/FENDataInterface\";\nimport { totalPlayers, VariantType } from \"../GameInformation/GameData\";\nimport { Coordinate, NumericColor, verifyNumericColor } from \"../GameInformation/GameUnits/GameUnits\";\nimport type { PieceString } from \"../GameInformation/GameUnits/PieceString\";\nimport type { DroppingMove } from \"../MoveTree/MoveTreeInterface\";\nimport type { PieceControlGeneratedMove, PieceLetter } from \"../PieceControl/PieceControlInterface\";\nimport type { Board, PlayerBooleanTuple } from \"./Board\";\n\nexport const enum DisplaySettings {\n\tHighlighted,\n\tFogged,\n\tGhosted,\n\tBlindfolded,\n\tPieceFacesCenter\n}\n\nexport interface BoardSnapshot {\n\tdata: FENDataSnapshot;\n\tboard: BoardSquares<PieceString>;\n\tisComplexSetup: Board[\"isComplexSetup\"];\n}\n\nexport interface PreGeneratedAttacks {\n\thoppingPieces: BoardSquares<number>;\n\tslidingPieces: BoardSquares<number>;\n\thoppingPieceLines: Array<[Coordinate, Coordinate]>;\n\tslidingPiecesLines: Array<readonly [startCoordinate: Coordinate, destinations: Coordinate[]]>;\n\tslidingPiecesRayTracing: Array<readonly [startCoordinate: Coordinate, destinations: Coordinate[]]>;\n\tattackingColors: BoardSquares<number>;\n\tvariantRuleCache: {\n\t\thasCaptures?: boolean;\n\t};\n\tpieceMovements: Map<string, PieceControlGeneratedMove[]>;\n\tpieceDrops: {\n\t\tpawn: DroppingMove[];\n\t\tpiece: DroppingMove[];\n\t};\n}\n\nexport interface SpecialMoveGenerationSettings {\n\ti: number;\n\tj: number;\n\tbaseColor: NumericColor;\n\tpieceLetter: PieceLetter;\n}\n\nconst baseTeams: Tuple<boolean, typeof totalPlayers> = [true, false, true, false];\nexport const stringifyCoordinate = (coordinate: Coordinate) => `${coordinate[0]}:${coordinate[1]}`;\nexport const unstringifyCoordinate = (coordinate: string): Coordinate => {\n\tconst result = coordinate.split(\":\").map((v) => Number(v));\n\tif (verifyTupleType(result, 2) && result.every((n) => !Number.isNaN(n))) {\n\t\treturn result;\n\t} else throw new Error(`Unexpected stringified coordinate: ${coordinate}`);\n};\nexport const createGameTypeSettings = () => ({\n\ttype: VariantType.FFA,\n\tteamSettings: {\n\t\tfirstTeamColors: baseTeams.map((e) => e),\n\t\tsecondTeamColors: baseTeams.map((e) => !e)\n\t},\n\tgetBaseColors(color: NumericColor): PlayerBooleanTuple {\n\t\tif (this.isFFA()) {\n\t\t\treturn createTupleFromCallback((_, i) => i === color, totalPlayers);\n\t\t} else {\n\t\t\treturn this.teamSettings.firstTeamColors[color] ? this.teamSettings.firstTeamColors : this.teamSettings.secondTeamColors;\n\t\t}\n\t},\n\tisFFA() {\n\t\treturn this.type === VariantType.FFA || this.type === VariantType.Solo;\n\t},\n\tisSameTeam(colorA: NumericColor, colorB: NumericColor) {\n\t\tif (colorA === colorB) return true;\n\t\tif (this.isFFA()) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn this.teamSettings.firstTeamColors[colorA]\n\t\t\t\t? this.teamSettings.firstTeamColors[colorA] && this.teamSettings.firstTeamColors[colorA]\n\t\t\t\t: this.teamSettings.secondTeamColors[colorA] && this.teamSettings.secondTeamColors[colorB];\n\t\t}\n\t},\n\tgetTeammateColor(color: NumericColor): NumericColor {\n\t\tif (this.isFFA()) return color;\n\t\tconst teammateIndex = this.teamSettings.firstTeamColors[color]\n\t\t\t? this.teamSettings.firstTeamColors.map((b, i) => b && i !== color).indexOf(true)\n\t\t\t: this.teamSettings.secondTeamColors.map((b, i) => b && i !== color).indexOf(true);\n\t\treturn verifyNumericColor(teammateIndex) ? teammateIndex : color;\n\t}\n});\n\nexport const createComplexMoveLegalityTracker = () => ({\n\thasComplexPieces: false,\n\thasComplexRules: false\n});\n\nexport const createBasePreGeneratedAttacks = (): PreGeneratedAttacks => {\n\treturn {\n\t\thoppingPieces: initializeBoardSquares(() => 0),\n\t\tslidingPieces: initializeBoardSquares(() => 0),\n\t\thoppingPieceLines: [],\n\t\tslidingPiecesLines: [],\n\t\tslidingPiecesRayTracing: [],\n\t\tattackingColors: initializeBoardSquares(() => 0),\n\t\tpieceMovements: new Map<string, PieceControlGeneratedMove[]>(),\n\t\tpieceDrops: {\n\t\t\tpawn: [],\n\t\t\tpiece: []\n\t\t},\n\t\tvariantRuleCache: {}\n\t};\n};\n\nexport const compareCoordinates = (coordinate1: Coordinate, coordinate2: Coordinate): boolean =>\n\tcoordinate1[0] === coordinate2[0] && coordinate1[1] === coordinate2[1];\n","import {\n\tcompareMoves,\n\tMove,\n\tMoveComponent,\n\tSpecialMove,\n\tverifyDroppingMove,\n\tverifyInternalMove,\n\tverifyStandardMove\n} from \"../MoveTree/MoveTreeInterface\";\nimport type { Board } from \"./Board\";\n\nexport interface SpecialMoveSettings {\n\thasEnPassant: boolean;\n}\n\nexport function validateBoardMove(board: Board, move: Move): SpecialMoveSettings | false {\n\tlet startingMoves: MoveComponent[];\n\tconst firstMove = move[0];\n\tif (verifyStandardMove(firstMove)) {\n\t\tstartingMoves = board.getLegalMoves(firstMove.startCoordinates[0], firstMove.startCoordinates[1]);\n\t} else if (verifyDroppingMove(firstMove)) {\n\t\tstartingMoves = board.getDroppingMoves(firstMove.piece);\n\t} else if (verifyInternalMove(firstMove)) {\n\t\tstartingMoves = board.getAllowedInternalMoves();\n\t} else throw new Error(`Unexpected move signature encountered: ${JSON.stringify(move)}`);\n\n\tconst specialMoveSettings: SpecialMoveSettings = {\n\t\thasEnPassant: false\n\t};\n\tif (board.variantData.duckChess && move.length === 1) return false;\n\tfor (const moveComponent of move) {\n\t\tconst move = startingMoves.find((legalMove) => compareMoves(legalMove, moveComponent));\n\t\tif (!move) return false;\n\t\tif (verifyStandardMove(move) && move.specialType === SpecialMove.EnPassant) {\n\t\t\tspecialMoveSettings.hasEnPassant = true;\n\t\t}\n\n\t\tif (move.nextChainedMoves) {\n\t\t\tstartingMoves = move.nextChainedMoves;\n\t\t}\n\t}\n\n\treturn specialMoveSettings;\n}\n","import { Cloneable, isVerticalPlacement, Memento } from \"../../BaseInterfaces\";\nimport type { Board, PlayerBooleanTuple } from \"../Board/Board\";\nimport {\n\tcreateDefaultArmyDeathSettings,\n\tcreateDefaultFENEffectSettings,\n\tFENDataSnapshot,\n\tgetNeighboringSideToMove,\n\tPostMoveResults\n} from \"./FENDataInterface\";\nimport {\n\tDroppingMove,\n\tInternalMove,\n\tInternalMoveSignature,\n\tMoveComponent,\n\tMoveData,\n\tSpecialMove,\n\tverifyDroppingMove,\n\tverifyInternalMove,\n\tverifyStandardMove\n} from \"../MoveTree/MoveTreeInterface\";\nimport { Tuple, createTuple, throwOnNever } from \"../../../baseTypes\";\nimport {\n\tcolors,\n\tDrawnResult,\n\tGeneralTermination,\n\tgetPlayerNameFromColor,\n\tResult,\n\tTermination,\n\ttotalPlayers,\n\tverifyDrawingTermination,\n\tverifyWinningTermination\n} from \"../GameInformation/GameData\";\nimport { PieceString, createPieceFromData, emptyPieceString, deadColorIndex } from \"../GameInformation/GameUnits/PieceString\";\nimport { pieceControlConfigSettings } from \"@moveGeneration/PieceControl/PieceControlInterface\";\nimport { compareCoordinates } from \"../Board/BoardInterface\";\nimport { Coordinate, nonPlayablePieces, NumericColor, verifyNumericColor } from \"../GameInformation/GameUnits/GameUnits\";\nimport type { VariantHandlerTarget } from \"../VariantRules/VariantRuleInterface\";\nimport { FENOptions } from \"./FENOptions/FENOptions\";\n\nconst defaultPointsForMate = 20;\nclass FENData implements VariantHandlerTarget<FENData>, Cloneable<FENData>, Memento<FENDataSnapshot> {\n\tpoints: [number, number, number, number];\n\tsideToMove: NumericColor;\n\tfenOptions: FENOptions;\n\tplyCount: number;\n\tboard!: Board;\n\tprivate privateGameOver: Termination | false = false;\n\n\t__baseClass: FENData;\n\tinitDecoratorSettings() {\n\t\t/* no-op */\n\t}\n\n\tconstructor() {\n\t\tthis.points = [0, 0, 0, 0];\n\t\tthis.sideToMove = 0;\n\t\tthis.fenOptions = new FENOptions();\n\t\tthis.plyCount = 0;\n\t\tthis.__baseClass = this;\n\t}\n\n\tget gameOver() {\n\t\treturn this.privateGameOver;\n\t}\n\n\tset gameOver(gameOver: Termination | false) {\n\t\tif (gameOver === false || this.privateGameOver === false) {\n\t\t\tthis.privateGameOver = gameOver;\n\t\t}\n\t}\n\n\tinjectBoard(board: Board) {\n\t\tthis.board = board;\n\t\tthis.fenOptions.generateCastling(board);\n\t}\n\n\tcreateClone(): FENData {\n\t\tconst newFENData = new FENData();\n\t\tnewFENData.fenOptions = this.fenOptions.createClone();\n\t\tnewFENData.points = [...this.points];\n\t\tnewFENData.sideToMove = this.sideToMove;\n\t\tnewFENData.plyCount = this.plyCount;\n\t\treturn newFENData;\n\t}\n\n\tcreateSnapshot(): FENDataSnapshot {\n\t\treturn {\n\t\t\tpoints: [...this.points],\n\t\t\tsideToMove: this.sideToMove,\n\t\t\tfenOptionsSnapshot: this.fenOptions.createSnapshot(),\n\t\t\tplyCount: this.plyCount,\n\t\t\tgameOver: this.gameOver\n\t\t};\n\t}\n\n\tloadSnapshot(snapshot: FENDataSnapshot): void {\n\t\tthis.fenOptions.loadSnapshot(snapshot.fenOptionsSnapshot);\n\t\tthis.points = [...snapshot.points];\n\t\tthis.sideToMove = snapshot.sideToMove;\n\t\tthis.plyCount = snapshot.plyCount;\n\t\tthis.privateGameOver = snapshot.gameOver;\n\t}\n\n\tgetCapturedPieces(moveData: MoveData): Coordinate[] {\n\t\tconst pieceString = this.board.board[moveData.endCoordinates[0]][moveData.endCoordinates[1]];\n\t\treturn pieceString.isEmpty() || pieceString.isDead() ? [] : [[...moveData.endCoordinates]];\n\t}\n\n\tprivate getCastlingPieceEndCoordinates(coordinates: Coordinate, color: NumericColor): [Coordinate, Coordinate] {\n\t\treturn [\n\t\t\tisVerticalPlacement(color)\n\t\t\t\t? [coordinates[0], this.fenOptions.getKingsideCastlingTandemPiece(color)]\n\t\t\t\t: [this.fenOptions.getKingsideCastlingTandemPiece(color), coordinates[1]],\n\t\t\tisVerticalPlacement(color)\n\t\t\t\t? [coordinates[0], this.fenOptions.getQueensideCastlingTandemPiece(color)]\n\t\t\t\t: [this.fenOptions.getQueensideCastlingTandemPiece(color), coordinates[1]]\n\t\t];\n\t}\n\n\tprocessStandardMove(moveData: MoveData): { endPiece: PieceString[] } {\n\t\tconst {\n\t\t\tstartCoordinates: [startI, startJ],\n\t\t\tendCoordinates: [endI, endJ],\n\t\t\tpromotion\n\t\t} = moveData;\n\t\tconst endPiece = this.board.board[endI][endJ];\n\n\t\tconst piece = promotion?.[0] ?? this.board.board[startI][startJ];\n\t\tconst capturedPieces = this.getCapturedPieces(moveData);\n\t\tthis.board.board[endI][endJ] = piece;\n\t\tthis.board.board[startI][startJ] = emptyPieceString;\n\t\tfor (const coordinate of capturedPieces) {\n\t\t\tif (compareCoordinates(coordinate, moveData.startCoordinates)) {\n\t\t\t\tthis.board.board[endI][endJ] = emptyPieceString;\n\t\t\t} else if (!compareCoordinates(coordinate, moveData.endCoordinates)) {\n\t\t\t\tthis.board.board[coordinate[0]][coordinate[1]] = emptyPieceString;\n\t\t\t}\n\t\t}\n\n\t\tconst [kingsidePiece, queensidePiece] = this.getCastlingPieceEndCoordinates(moveData.startCoordinates, this.sideToMove);\n\t\tif (\"specialType\" in moveData) {\n\t\t\tconst type = moveData.specialType;\n\n\t\t\tswitch (type) {\n\t\t\t\tcase SpecialMove.CastlingKingside: {\n\t\t\t\t\tconst secondKPiece = isVerticalPlacement(this.sideToMove)\n\t\t\t\t\t\t? this.board.board[startI][this.fenOptions.getKingsideCastlingTandemPiece(this.sideToMove)]\n\t\t\t\t\t\t: this.board.board[this.fenOptions.getKingsideCastlingTandemPiece(this.sideToMove)][startJ];\n\t\t\t\t\tconst [kI, kJ] = this.fenOptions.getKingsideCastlingPieceEndCoordinate(this.sideToMove);\n\n\t\t\t\t\tthis.board.board[kI][kJ] = secondKPiece;\n\t\t\t\t\tthis.board.board[kingsidePiece[0]][kingsidePiece[1]] = emptyPieceString;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase SpecialMove.CastlingQueenside: {\n\t\t\t\t\tconst secondQPiece = isVerticalPlacement(this.sideToMove)\n\t\t\t\t\t\t? this.board.board[startI][this.fenOptions.getQueensideCastlingTandemPiece(this.sideToMove)]\n\t\t\t\t\t\t: this.board.board[this.fenOptions.getQueensideCastlingTandemPiece(this.sideToMove)][startJ];\n\t\t\t\t\tconst [qI, qJ] = this.fenOptions.getQueensideCastlingPieceEndCoordinate(this.sideToMove);\n\t\t\t\t\tthis.board.board[qI][qJ] = secondQPiece;\n\t\t\t\t\tthis.board.board[queensidePiece[0]][queensidePiece[1]] = emptyPieceString;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tif (type === undefined || !(type in SpecialMove)) {\n\t\t\t\t\t\tconsole.error(`Unknown special move constant: ${String(type)}`);\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst castleKingside = this.fenOptions.tag(\"castleKingside\"),\n\t\t\tcastleQueenside = this.fenOptions.tag(\"castleQueenside\"),\n\t\t\troyal = this.fenOptions.tag(\"royal\");\n\t\tthis.fenOptions.setTag(\n\t\t\t\"royal\",\n\t\t\tthis.fenOptions.tag(\"royal\").map((r, i): Coordinate | null => {\n\t\t\t\tif (r) {\n\t\t\t\t\tif (r[0] === startI && r[1] === startJ) {\n\t\t\t\t\t\tcastleKingside[i] = false;\n\t\t\t\t\t\tcastleQueenside[i] = false;\n\t\t\t\t\t\treturn [endI, endJ];\n\t\t\t\t\t} else return [...r];\n\t\t\t\t} else return null;\n\t\t\t})\n\t\t);\n\n\t\tfor (const color of colors) {\n\t\t\tconst royalPiece = royal[color];\n\t\t\tif (!royalPiece) continue;\n\t\t\tif (compareCoordinates(royalPiece, moveData.startCoordinates)) {\n\t\t\t\tcastleKingside[color] = false;\n\t\t\t\tcastleQueenside[color] = false;\n\t\t\t\tbreak;\n\t\t\t} else if (compareCoordinates(kingsidePiece, moveData.startCoordinates)) {\n\t\t\t\tcastleKingside[color] = false;\n\t\t\t\tbreak;\n\t\t\t} else if (compareCoordinates(queensidePiece, moveData.startCoordinates)) {\n\t\t\t\tcastleQueenside[color] = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn { endPiece: endPiece.isEmpty() ? [] : [endPiece] };\n\t}\n\n\tprotected spreadPointsBetweenPlayersEvenly() {\n\t\tconst resigned = this.fenOptions.tag(\"resigned\"),\n\t\t\tdead = this.fenOptions.tag(\"dead\");\n\t\tconst realPlayers = resigned.reduce((p, n, i) => p + Number(n || dead[i]), 0);\n\t\tconst individualPoints = Math.ceil(this.obtainPointsForMate() / realPlayers);\n\t\tfor (const color of colors) {\n\t\t\tif (!dead[color]) {\n\t\t\t\tthis.assignPoints(color, individualPoints);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate branchBetweenResignationMoves(\n\t\tmove: InternalMoveSignature.Resign | InternalMoveSignature.Timeout | InternalMoveSignature.ClaimWin,\n\t\tsideToMove: NumericColor\n\t) {\n\t\tconst playerName = getPlayerNameFromColor(sideToMove).toUpperCase();\n\t\tswitch (move) {\n\t\t\tcase InternalMoveSignature.Resign:\n\t\t\t\tthis.gameOver = `${playerName} RESIGNED!`;\n\t\t\t\tbreak;\n\t\t\tcase InternalMoveSignature.Timeout:\n\t\t\t\tthis.gameOver = `${playerName} FORFEITS ON TIME!`;\n\t\t\t\tbreak;\n\t\t\tcase InternalMoveSignature.ClaimWin:\n\t\t\t\tthis.gameOver = `${playerName} CLAIMED THE WIN!`;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrowOnNever(move);\n\t\t}\n\t}\n\n\tprocessInternalMove(internalMove: InternalMove): { stalemates: PlayerBooleanTuple } {\n\t\tconst resigned = this.fenOptions.tag(\"resigned\"),\n\t\t\tdead = this.fenOptions.tag(\"dead\");\n\t\tconst stalemates = createTuple(false, totalPlayers);\n\t\tconst insufficientMaterial = this.board.insufficientMaterialChecker?.checkCurrentState(this.board).every((b, i) => {\n\t\t\tif (i === this.sideToMove) {\n\t\t\t\treturn b;\n\t\t\t} else {\n\t\t\t\treturn b || dead[i];\n\t\t\t}\n\t\t});\n\n\t\tswitch (internalMove.type) {\n\t\t\tcase InternalMoveSignature.Stalemate:\n\t\t\t\tdead[this.sideToMove] = true;\n\t\t\t\tstalemates[this.sideToMove] = true;\n\t\t\t\tbreak;\n\t\t\tcase InternalMoveSignature.Resign:\n\t\t\tcase InternalMoveSignature.Timeout:\n\t\t\t\tif (insufficientMaterial) {\n\t\t\t\t\tthis.assignGeneralTermination(\"Timeout vs Insufficient Material\");\n\t\t\t\t}\n\t\t\t// * Fallthrough\n\t\t\tcase InternalMoveSignature.ClaimWin: {\n\t\t\t\tresigned[this.sideToMove] = true;\n\t\t\t\tthis.turnPiecesDead(this.sideToMove, { ...createDefaultArmyDeathSettings(), excludeRoyals: true, doNotSetDead: true });\n\t\t\t\tconst deadPlayers = dead.map((d, i) => d || resigned[i]).filter(Boolean);\n\n\t\t\t\tlet isResignationOver = deadPlayers.length === totalPlayers - 1;\n\t\t\t\tif (insufficientMaterial) {\n\t\t\t\t\tthis.spreadPointsBetweenPlayersEvenly();\n\t\t\t\t} else if (deadPlayers.length === totalPlayers - 1) {\n\t\t\t\t\tconst alivePlayer = deadPlayers.findIndex((d) => !d);\n\t\t\t\t\tif (verifyNumericColor(alivePlayer)) {\n\t\t\t\t\t\tthis.assignPoints(\n\t\t\t\t\t\t\talivePlayer,\n\t\t\t\t\t\t\tthis.countTotalPointsOnBoard().reduce((p, n, i) => p + (i === alivePlayer ? n : 0), 0)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tisResignationOver = true;\n\t\t\t\t\t}\n\t\t\t\t} else if (!this.board.gameType.isFFA()) {\n\t\t\t\t\tisResignationOver = true;\n\t\t\t\t}\n\n\t\t\t\tif (isResignationOver) {\n\t\t\t\t\tthis.branchBetweenResignationMoves(internalMove.type, this.sideToMove);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase InternalMoveSignature.DrawByAgreement:\n\t\t\t\tthis.gameOver = \"½-½ AGREED.\";\n\t\t\t\tbreak;\n\t\t\tcase InternalMoveSignature.Pass:\n\t\t\t\tbreak;\n\t\t\tcase InternalMoveSignature.TeamsCheckmate: {\n\t\t\t\tthis.gameOver = `CHECKMATE • ${this.getCurrentResult()}`;\n\t\t\t\tthis.turnPiecesDead(this.sideToMove);\n\t\t\t\tthis.turnPiecesDead(this.board.gameType.getTeammateColor(this.sideToMove));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\tthrowOnNever(internalMove.type);\n\t\t}\n\n\t\treturn { stalemates };\n\t}\n\n\tprivate processDroppingMove(move: DroppingMove) {\n\t\tconst bank = this.fenOptions.tag(\"bank\"),\n\t\t\tareBanksEnabled = this.fenOptions.tag(\"areBanksEnabled\"),\n\t\t\tsetupComplete = this.fenOptions.tag(\"setupComplete\");\n\t\tif (!this.board.variantData.duckChess && !areBanksEnabled[this.sideToMove]) return;\n\t\tconst playerBank = bank[this.sideToMove];\n\t\tconst pieceStringReference = [...playerBank.keys()].find((pieceString) => pieceString.piece === move.piece.piece);\n\t\tif (!pieceStringReference && !this.board.variantData.duckChess && move.piece.piece !== nonPlayablePieces.duck) return;\n\t\tconst safeReference = pieceStringReference ?? move.piece;\n\n\t\tthis.board.board[move.endCoordinates[0]][move.endCoordinates[1]] = move.piece;\n\n\t\tif (!setupComplete[this.sideToMove]) return;\n\t\tconst bankPieceCount = playerBank.get(safeReference);\n\t\tif (bankPieceCount == 1) {\n\t\t\tplayerBank.delete(safeReference);\n\t\t} else if (bankPieceCount) {\n\t\t\tplayerBank.set(safeReference, bankPieceCount - 1);\n\t\t}\n\t}\n\n\tturnPiecesDead(color: NumericColor, settings = createDefaultArmyDeathSettings()) {\n\t\tconst royal = this.fenOptions.tag(\"royal\"),\n\t\t\tdead = this.fenOptions.tag(\"dead\");\n\t\tconst royalPiece = royal[color];\n\t\tif (!settings.doNotSetDead) {\n\t\t\tdead[color] = true;\n\t\t\troyal[color] = null;\n\t\t}\n\n\t\tfor (const coordinate of this.board.getPlayerPieces()[color]) {\n\t\t\tif (settings.excludeRoyals && royalPiece && compareCoordinates(coordinate, royalPiece)) continue;\n\t\t\tconst piece = this.board.board[coordinate[0]][coordinate[1]].piece;\n\t\t\tif (settings.onlyPawns && !pieceControlConfigSettings[piece].moveGenerationSettings.isPawn) continue;\n\t\t\tthis.board.board[coordinate[0]][coordinate[1]] = createPieceFromData(\n\t\t\t\tdeadColorIndex,\n\t\t\t\tthis.board.board[coordinate[0]][coordinate[1]].piece\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate getKingCaptures() {\n\t\tconst kingCaptures = createTuple(false, totalPlayers);\n\t\tfor (const color of colors) {\n\t\t\tconst royalCoordinate = this.fenOptions.tag(\"royal\")[color];\n\t\t\tif (!royalCoordinate) continue;\n\t\t\tconst pieceString = this.board.board[royalCoordinate[0]][royalCoordinate[1]];\n\t\t\tif (pieceString.isEmpty() || pieceString.color !== color) {\n\t\t\t\tkingCaptures[color] = true;\n\t\t\t}\n\t\t}\n\n\t\treturn kingCaptures;\n\t}\n\n\tprivate processPointsForChecks(currentChecks: Tuple<Set<string>, typeof totalPlayers>) {\n\t\tconst sideToMove = this.sideToMove;\n\t\tconst updatedChecks = this.board.getCurrentChecks(),\n\t\t\tplayerChecks = createTuple(false, totalPlayers);\n\t\tfor (const color of colors) {\n\t\t\tfor (const coordinate of updatedChecks[color]) {\n\t\t\t\tif (!currentChecks[color].has(coordinate)) {\n\t\t\t\t\tplayerChecks[color] = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst checkedPlayers = playerChecks.filter(Boolean).length;\n\t\tif (checkedPlayers === 2) {\n\t\t\tthis.assignPoints(sideToMove, 1);\n\t\t} else if (checkedPlayers === 3) {\n\t\t\tthis.assignPoints(sideToMove, 5);\n\t\t}\n\t}\n\n\taffectOptions(move: MoveComponent, settings = createDefaultFENEffectSettings()): PostMoveResults {\n\t\tlet moveStalemates: PlayerBooleanTuple | undefined;\n\t\tlet endSquare: PieceString[] | undefined;\n\t\tconst currentChecks = this.board.getCurrentChecks().map((arr) => new Set(arr));\n\n\t\tif (verifyInternalMove(move)) {\n\t\t\tmoveStalemates = this.processInternalMove(move).stalemates;\n\t\t} else if (verifyStandardMove(move)) {\n\t\t\tendSquare = this.processStandardMove(move).endPiece;\n\t\t} else if (verifyDroppingMove(move)) {\n\t\t\tthis.processDroppingMove(move);\n\t\t}\n\n\t\tif (!settings.ignoreCheckmateChecks) this.board.pregenerateAttacks();\n\t\tconst { checkmates, stalemates, checks } = settings.ignoreCheckmateChecks\n\t\t\t? {\n\t\t\t\t\tcheckmates: createTuple(false, totalPlayers),\n\t\t\t\t\tchecks: createTuple(false, totalPlayers),\n\t\t\t\t\tstalemates: createTuple(false, totalPlayers)\n\t\t\t  }\n\t\t\t: this.board.getCheckmatesAndStalemates();\n\t\tif (moveStalemates) {\n\t\t\tfor (let i = 0; i < totalPlayers; i++) {\n\t\t\t\tif (moveStalemates[i]) {\n\t\t\t\t\tstalemates[i] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst totalMateSum = checkmates.reduce((p, n) => (n ? p + this.obtainPointsForMate() : p), 0);\n\t\tconst boardAlternations = {\n\t\t\tpointDistribution: {\n\t\t\t\tcheckmatePoints: checkmates.map((_, i) => (i === this.sideToMove ? totalMateSum : 0)),\n\t\t\t\tpieceCapturingPoints: createTuple(0, totalPlayers)\n\t\t\t}\n\t\t};\n\n\t\tif (endSquare) {\n\t\t\tfor (const piece of endSquare) {\n\t\t\t\tboardAlternations.pointDistribution.pieceCapturingPoints[this.sideToMove] = this.getPointsForPiece(piece);\n\t\t\t}\n\t\t}\n\n\t\tconst kingCaptures = this.getKingCaptures();\n\t\tconst dead = this.fenOptions.tag(\"dead\"),\n\t\t\tresigned = this.fenOptions.tag(\"resigned\");\n\t\tif (this.board.gameType.isFFA()) {\n\t\t\tfor (const color of colors) {\n\t\t\t\tif (dead[color] || resigned[color]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (checkmates[color] || (color === this.sideToMove && stalemates[color])) {\n\t\t\t\t\tthis.turnPiecesDead(color);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthis.assignPoints(\n\t\t\t\t\tcolor,\n\t\t\t\t\tboardAlternations.pointDistribution.checkmatePoints[color] + boardAlternations.pointDistribution.pieceCapturingPoints[color]\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tfor (const color of colors) {\n\t\t\t\tif (kingCaptures[color]) {\n\t\t\t\t\tthis.turnPiecesDead(color);\n\t\t\t\t\tthis.assignGeneralTermination(\"King Captured\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconst realPlayers = this.getRealPlayers();\n\t\tconst isOver = this.board.gameType.isFFA() ? realPlayers === 1 : realPlayers !== totalPlayers;\n\t\tif (isOver) this.assignGeneralTermination(\"Checkmate\");\n\n\t\tif (!settings.ignoreNextTurn && !isOver) {\n\t\t\tthis.processPointsForChecks(currentChecks);\n\n\t\t\tconst insufficientPieces = this.board.insufficientMaterialChecker?.checkCurrentState(this.board);\n\t\t\tif (!this.gameOver && insufficientPieces?.every((insufficient, i) => dead[i] || insufficient)) {\n\t\t\t\tthis.gameOver = `INSUFFICIENT MATERIAL • ${this.getCurrentResult()}`;\n\t\t\t\tthis.spreadPointsBetweenPlayersEvenly();\n\t\t\t}\n\t\t\tif (this.getRealPlayers() > 1) {\n\t\t\t\tthis.sideToMove = this.nextTurn();\n\t\t\t}\n\t\t}\n\n\t\treturn { checkmates, stalemates, checks };\n\t}\n\n\tgetRealPlayers() {\n\t\tconst dead = this.fenOptions.tag(\"dead\"),\n\t\t\tresigned = this.fenOptions.tag(\"resigned\");\n\n\t\tlet totalPlayers = 0;\n\t\tfor (const color of colors) {\n\t\t\tif (resigned[color] || dead[color]) continue;\n\t\t\ttotalPlayers++;\n\t\t}\n\t\treturn totalPlayers;\n\t}\n\n\tnextTurn(player: NumericColor = this.sideToMove): NumericColor {\n\t\tif (this.getRealPlayers() <= 1) throw new Error(\"Next turn called while the game is terminated\");\n\t\treturn getNeighboringSideToMove(player, this.fenOptions.tag(\"dead\"));\n\t}\n\n\tpreviousTurn(player: NumericColor = this.sideToMove): NumericColor {\n\t\tconst dead = this.fenOptions.tag(\"dead\");\n\n\t\tif (this.getRealPlayers() <= 1) throw new Error(\"Previous turn called while the game is terminated\");\n\t\tlet sideToMove: number = player;\n\t\tdo {\n\t\t\tsideToMove = sideToMove === 0 ? totalPlayers - 1 : sideToMove - 1;\n\t\t} while (dead[sideToMove]);\n\n\t\tif (verifyNumericColor(sideToMove)) {\n\t\t\treturn sideToMove;\n\t\t} else throw new Error(`Unexpected numeric color: ${sideToMove}`);\n\t}\n\n\tisComplexEvaluation() {\n\t\treturn false;\n\t}\n\n\tobtainPointsForMate() {\n\t\treturn defaultPointsForMate;\n\t}\n\n\tassignPoints(sideToMove: NumericColor, points: number) {\n\t\tif (points > 0) {\n\t\t\tthis.points[sideToMove] += points;\n\t\t}\n\t}\n\n\tgetPointsForPiece(pieceString: PieceString) {\n\t\tif (pieceString.isPiece() && this.board.gameType.isFFA()) {\n\t\t\treturn pieceControlConfigSettings[pieceString.piece].points.singlesPoints;\n\t\t} else return 0;\n\t}\n\n\tcountTotalPointsOnBoard(): Tuple<number, typeof totalPlayers> {\n\t\tconst royal = this.fenOptions.tag(\"royal\"),\n\t\t\tresigned = this.fenOptions.tag(\"resigned\"),\n\t\t\tzombieImmune = this.fenOptions.tag(\"zombieImmune\");\n\n\t\tconst resultingPoints: Tuple<number, typeof totalPlayers> = [0, 0, 0, 0];\n\t\tthis.board.getPlayerPieces().forEach((army, color) => {\n\t\t\tif (zombieImmune[color]) return;\n\n\t\t\tconst royalPiece = royal[color];\n\t\t\tfor (const coordinate of army) {\n\t\t\t\tif (royalPiece && compareCoordinates(coordinate, royalPiece)) {\n\t\t\t\t\tresultingPoints[color] += this.obtainPointsForMate();\n\t\t\t\t} else if (resigned[color]) {\n\t\t\t\t\tconst piece = this.board.board[coordinate[0]][coordinate[1]].piece;\n\t\t\t\t\tresultingPoints[color] += pieceControlConfigSettings[piece].points.singlesPoints;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn resultingPoints;\n\t}\n\n\tgetCurrentResult(): Result {\n\t\tif (this.board.gameType.isFFA()) {\n\t\t\tconst dead = this.fenOptions.tag(\"dead\"),\n\t\t\t\tresigned = this.fenOptions.tag(\"resigned\");\n\n\t\t\tif (!this.board.isTwoPlayer) throw new Error(\"Result can only get called for 2P and teams\");\n\t\t\tconst max = Math.max(...this.points);\n\t\t\tlet firstAlivePlayer: NumericColor | undefined, maximumIndex: NumericColor | undefined;\n\t\t\tfor (const color of colors) {\n\t\t\t\tif (dead[color] || resigned[color]) continue;\n\t\t\t\tif (this.points[color] === max) {\n\t\t\t\t\tif (maximumIndex === undefined) {\n\t\t\t\t\t\tmaximumIndex = color;\n\t\t\t\t\t} else return \"½-½\";\n\t\t\t\t}\n\t\t\t\tif (firstAlivePlayer === undefined) firstAlivePlayer = color;\n\t\t\t}\n\n\t\t\treturn firstAlivePlayer === maximumIndex ? \"1-0\" : \"0-1\";\n\t\t} else {\n\t\t\tlet result: Result = \"½-½\";\n\t\t\tfor (const color of colors) {\n\t\t\t\tif (this.points[color] > 0) {\n\t\t\t\t\tresult = this.board.gameType.teamSettings.firstTeamColors[color] ? \"1-0\" : \"0-1\";\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tassignGeneralTermination(generalTermination: GeneralTermination | DrawnResult, sideToMove?: NumericColor): void {\n\t\tif (this.board.gameType.isFFA() && !this.board.isTwoPlayer) {\n\t\t\tif (sideToMove !== undefined) {\n\t\t\t\tswitch (generalTermination) {\n\t\t\t\t\tcase \"Stalemate\":\n\t\t\t\t\t\tthis.gameOver = `${getPlayerNameFromColor(sideToMove).toUpperCase()} STALEMATED!`;\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (verifyWinningTermination(generalTermination)) {\n\t\t\t\tthis.gameOver = `${generalTermination.toUpperCase()}!`;\n\t\t\t} else if (verifyDrawingTermination(generalTermination)) {\n\t\t\t\tthis.gameOver = `${generalTermination.toUpperCase()}`;\n\t\t\t} else {\n\t\t\t\tthrowOnNever(generalTermination);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.gameOver = `${generalTermination.toUpperCase()} • ${this.getCurrentResult()}`;\n\t\t}\n\t}\n}\n\nexport { FENData, FENOptions };\n","import type { PlayerBooleanTuple } from \"@moveGeneration/Board/Board\";\nimport { NumericColor, verifyNumericColor } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport { Termination, totalPlayers } from \"../GameInformation/GameData\";\nimport type { FENOptionsSnapshot } from \"./FENOptions/FENOptions\";\n\nexport interface FENDataSnapshot {\n\tpoints: [number, number, number, number];\n\tsideToMove: NumericColor;\n\tfenOptionsSnapshot: FENOptionsSnapshot;\n\tplyCount: number;\n\tgameOver: Termination | false;\n}\n\nexport interface PostMoveResults {\n\tchecks: [boolean, boolean, boolean, boolean];\n\tcheckmates: [boolean, boolean, boolean, boolean];\n\tstalemates: [boolean, boolean, boolean, boolean];\n}\n\nexport interface FENEffectSettings {\n\tignoreCheckmateChecks: boolean;\n\tignoreNextTurn: boolean;\n}\n\nexport const createDefaultFENEffectSettings = (): FENEffectSettings => ({\n\tignoreCheckmateChecks: false,\n\tignoreNextTurn: false\n});\n\nexport interface ArmyDeathSettings {\n\texcludeRoyals: boolean;\n\tonlyPawns: boolean;\n\tdoNotSetDead: boolean;\n}\n\nexport const createDefaultArmyDeathSettings = (): ArmyDeathSettings => ({\n\texcludeRoyals: false,\n\tonlyPawns: false,\n\tdoNotSetDead: false\n});\n\nexport function getNeighboringSideToMove(player: NumericColor, dead: PlayerBooleanTuple) {\n\tlet sideToMove: number = player;\n\tdo {\n\t\tsideToMove = sideToMove === totalPlayers - 1 ? 0 : sideToMove + 1;\n\t} while (dead[sideToMove]);\n\n\tif (verifyNumericColor(sideToMove)) {\n\t\treturn sideToMove;\n\t} else throw new Error(`Unexpected numeric color: ${sideToMove}`);\n}\n","import { Tuple, createTupleFromCallback, assertNonUndefined } from \"@client/ts/baseTypes\";\nimport {\n\tCloneable,\n\tgetHorizontalPlacementModulus,\n\tgetVerticalPlacementModulus,\n\tisVerticalPlacement,\n\tMemento\n} from \"@client/ts/logic/BaseInterfaces\";\nimport type { NumericColor, Coordinate } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport {\n\tbotAlgorithms,\n\tZombieMoveGenerationAlgorithm,\n\tZombieType\n} from \"@moveGeneration/VariantRules/VariantRuleDefinitions/BoardVariantModules/EngineMoveGeneration/BotInterface\";\nimport { copyClass } from \"@utils/ObjectUtils\";\nimport type { Board } from \"../../Board/Board\";\nimport { totalPlayers } from \"../../GameInformation/GameData\";\nimport {\n\tcreateFENOptionsTags,\n\tcreateFENOptionsTagsSnapshot,\n\tDynamicFENOptionTag,\n\tFENOptionsSerializedState,\n\tFENOptionsTags,\n\tFENOptionsTagsSnapshot\n} from \"./FENOptionsTagsInterface\";\n\ninterface CastlingData {\n\tendCoordinates: number;\n\tpieceCoordinates: number;\n\tpieceEndCoordinates: number;\n\tcheckSquares: number[];\n}\n\nexport interface FENOptionsSnapshot {\n\ttagsSnapshot: FENOptionsTagsSnapshot;\n}\n\nexport class FENOptions implements Cloneable<FENOptions>, Memento<FENOptionsSnapshot> {\n\tstatic loadSerializedState(state: FENOptionsSerializedState) {\n\t\tconst newTags = createFENOptionsTags();\n\t\tlet key: keyof FENOptionsTags;\n\t\tfor (key in newTags) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(newTags, key)) {\n\t\t\t\tnewTags[key].value = state[key] as never;\n\t\t\t}\n\t\t}\n\n\t\treturn newTags;\n\t}\n\n\ttags = createFENOptionsTags();\n\tprivate castlingKingsideData: Tuple<CastlingData, typeof totalPlayers> = createTupleFromCallback(\n\t\t() => ({ endCoordinates: -1, pieceCoordinates: -1, pieceEndCoordinates: -1, checkSquares: [] }),\n\t\ttotalPlayers\n\t);\n\tprivate castlingQueensideData: Tuple<CastlingData, typeof totalPlayers> = createTupleFromCallback(\n\t\t() => ({ endCoordinates: -1, pieceCoordinates: -1, pieceEndCoordinates: -1, checkSquares: [] }),\n\t\ttotalPlayers\n\t);\n\n\tcreateSnapshot(): FENOptionsSnapshot {\n\t\treturn {\n\t\t\ttagsSnapshot: createFENOptionsTagsSnapshot(this.tags)\n\t\t};\n\t}\n\n\tprivate loadTagSnapshot<V extends FENOptionsTagsSnapshot[keyof FENOptionsTagsSnapshot]>(value: V, tag: DynamicFENOptionTag<V>) {\n\t\ttag.loadSnapshot(value);\n\t}\n\tloadSnapshot(snapshot: FENOptionsSnapshot): void {\n\t\tlet key: keyof FENOptionsTagsSnapshot;\n\t\tfor (key in snapshot.tagsSnapshot) {\n\t\t\tif (!Object.prototype.hasOwnProperty.call(snapshot.tagsSnapshot, key)) continue;\n\t\t\tthis.loadTagSnapshot(snapshot.tagsSnapshot[key], this.tags[key]);\n\t\t}\n\t}\n\n\tprivate verifyKeyTag(key: keyof FENOptionsTags, snapshot: FENOptionsTagsSnapshot): key is keyof FENOptionsTagsSnapshot {\n\t\treturn key in snapshot;\n\t}\n\tcreateClone(): FENOptions {\n\t\tconst newOptions = copyClass(this, FENOptions);\n\t\tconst snapshot = this.createSnapshot();\n\t\tnewOptions.tags = createFENOptionsTags();\n\t\tnewOptions.loadSnapshot(snapshot);\n\n\t\tlet key: keyof FENOptionsTags;\n\t\tfor (key in this.tags) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(this.tags, key) && !this.verifyKeyTag(key, snapshot.tagsSnapshot)) {\n\t\t\t\tnewOptions.tags[key].value = this.tags[key].value;\n\t\t\t}\n\t\t}\n\n\t\treturn newOptions;\n\t}\n\n\ttag<K extends keyof FENOptionsTags>(key: K): FENOptionsTags[K][\"value\"] {\n\t\treturn this.tags[key].value;\n\t}\n\tsetTag<K extends keyof FENOptionsTags>(key: K, value: FENOptionsTags[K][\"value\"]): void {\n\t\tthis.tags[key].value = value;\n\t}\n\n\tcreateSerializedState() {\n\t\tconst serializedState: Partial<FENOptionsSerializedState> = {};\n\t\tlet fenTag: keyof FENOptionsTags;\n\t\tfor (fenTag in this.tags) {\n\t\t\tif (!Object.prototype.hasOwnProperty.call(this.tags, fenTag)) continue;\n\t\t\tconst tag = this.tags[fenTag];\n\t\t\tserializedState[fenTag] = tag.createSnapshot() as never;\n\t\t}\n\n\t\treturn serializedState as FENOptionsSerializedState;\n\t}\n\n\tgenerateCastling(board: Board) {\n\t\tlet [dimensionRY, dimensionBG] = this.tag(\"dim\");\n\t\tif (!this.tag(\"noCorners\")) {\n\t\t\tif (dimensionRY > 8) dimensionRY = 8;\n\t\t\tif (dimensionBG > 8) dimensionBG = 8;\n\t\t}\n\n\t\tconst dimensions: [number, number, number, number] = [dimensionRY, dimensionBG, dimensionRY, dimensionBG];\n\t\tconst royalRanks = this.tag(\"royal\").map((r, i) => (r ? r[getHorizontalPlacementModulus(i)] : r));\n\t\tconst royalCoordinates = this.tag(\"royal\").map((r, i) => (r ? r[getHorizontalPlacementModulus(i)] : r));\n\t\tconst kingsideCastlePieceCoordinate: number[] = [];\n\t\tconst queensideCastlePieceCoordinate: number[] = [];\n\n\t\tconst boardSquares = board.board;\n\t\tfor (let i = 0; i < this.tag(\"royal\").length; i++) {\n\t\t\tconst royalCoordinateI = royalCoordinates[i];\n\t\t\tconst royalRanksI = royalRanks[i];\n\t\t\tif (royalCoordinateI === null || royalRanksI === null) {\n\t\t\t\tkingsideCastlePieceCoordinate.push(-1);\n\t\t\t\tqueensideCastlePieceCoordinate.push(-1);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst condition = i % 2 === 0;\n\t\t\tfor (let j = royalCoordinateI; j < 14; j++) {\n\t\t\t\tconst pieceString = boardSquares[condition ? royalRanksI : j][condition ? j : royalRanksI];\n\t\t\t\tif (!pieceString.isEmpty() && pieceString.piece === this.tag(\"castleWith\")) {\n\t\t\t\t\tkingsideCastlePieceCoordinate.push(j);\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (j === 13) {\n\t\t\t\t\tkingsideCastlePieceCoordinate.push(-1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (let j = royalCoordinateI; j > -1; j--) {\n\t\t\t\tconst pieceString = boardSquares[condition ? royalRanksI : j][condition ? j : royalRanksI];\n\t\t\t\tif (!pieceString.isEmpty() && pieceString.piece === this.tag(\"castleWith\")) {\n\t\t\t\t\tqueensideCastlePieceCoordinate.push(j);\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (j === 0) {\n\t\t\t\t\tqueensideCastlePieceCoordinate.push(-1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (let i = 0; i < this.tag(\"royal\").length; i++) {\n\t\t\tconst royalCoordinate = royalCoordinates[i];\n\t\t\tif (royalCoordinate === null) continue;\n\n\t\t\tconst d = dimensions[i] - 6 < 1 ? 1 : dimensions[i] - 6;\n\n\t\t\tif (kingsideCastlePieceCoordinate[i] === -1) {\n\t\t\t\tthis.tag(\"castleKingside\")[i] = false;\n\t\t\t} else {\n\t\t\t\tconst kArr = [...Array(kingsideCastlePieceCoordinate[i] - royalCoordinate - 1).keys()];\n\t\t\t\tconst endCoordinates = royalCoordinate + d;\n\t\t\t\tconst castlingData = {\n\t\t\t\t\tendCoordinates,\n\t\t\t\t\tcheckSquares: kArr.map((j) => j + royalCoordinate + 1),\n\t\t\t\t\tpieceCoordinates: kingsideCastlePieceCoordinate[i],\n\t\t\t\t\tpieceEndCoordinates: endCoordinates - 1\n\t\t\t\t};\n\t\t\t\tif (royalCoordinate <= 6) {\n\t\t\t\t\tthis.castlingQueensideData[i] = castlingData;\n\t\t\t\t} else {\n\t\t\t\t\tthis.castlingKingsideData[i] = castlingData;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (queensideCastlePieceCoordinate[i] === -1) {\n\t\t\t\tthis.tags.castleQueenside.value[i] = false;\n\t\t\t} else {\n\t\t\t\tconst qArr = [...Array(royalCoordinate - queensideCastlePieceCoordinate[i] - 1).keys()];\n\t\t\t\tconst endCoordinates = royalCoordinate - d;\n\t\t\t\tconst castlingData = {\n\t\t\t\t\tendCoordinates,\n\t\t\t\t\tcheckSquares: royalCoordinate <= 6 ? qArr.map((j) => j + royalCoordinate - 2) : qArr.map((j) => j + royalCoordinate - 3),\n\t\t\t\t\tpieceCoordinates: queensideCastlePieceCoordinate[i],\n\t\t\t\t\tpieceEndCoordinates: endCoordinates + 1\n\t\t\t\t};\n\t\t\t\tif (royalCoordinate <= 6) {\n\t\t\t\t\tthis.castlingKingsideData[i] = castlingData;\n\t\t\t\t} else {\n\t\t\t\t\tthis.castlingQueensideData[i] = castlingData;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate isCastlingAvailable(player: NumericColor, board: Board, checks: number[]): boolean {\n\t\tconst royal = this.tag(\"royal\")[player];\n\t\tif (royal === null) return false;\n\n\t\tconst royalCoordinate = royal[getVerticalPlacementModulus(player)];\n\t\tconst squares = board.board;\n\n\t\tfor (const checkSquare of checks) {\n\t\t\tconst coordinateA = isVerticalPlacement(player) ? royalCoordinate : checkSquare;\n\t\t\tconst coordinateB = isVerticalPlacement(player) ? checkSquare : royalCoordinate;\n\t\t\tif (\n\t\t\t\t!squares[coordinateA][coordinateB].isEmpty() ||\n\t\t\t\tboard.preGeneratedAttacks[player].hoppingPieces[coordinateA][coordinateB] > 0 ||\n\t\t\t\tboard.preGeneratedAttacks[player].slidingPieces[coordinateA][coordinateB] > 0\n\t\t\t)\n\t\t\t\treturn false;\n\t\t}\n\n\t\tif (board.isKingInCheck(player)) return false;\n\n\t\treturn true;\n\t}\n\n\tisKingsideCastlingAvailable(player: NumericColor, board: Board): boolean {\n\t\tif (!this.tag(\"castleKingside\")[player]) return false;\n\t\tif (this.castlingKingsideData[player].endCoordinates === -1) {\n\t\t\tthis.generateCastling(board);\n\t\t}\n\n\t\treturn this.isCastlingAvailable(player, board, this.castlingKingsideData[player].checkSquares);\n\t}\n\n\tisQueensideCastlingAvailable(player: NumericColor, board: Board): boolean {\n\t\tif (!this.tag(\"castleQueenside\")[player]) return false;\n\t\tif (this.castlingQueensideData[player].endCoordinates === -1) {\n\t\t\tthis.generateCastling(board);\n\t\t}\n\n\t\treturn this.isCastlingAvailable(player, board, this.castlingQueensideData[player].checkSquares);\n\t}\n\n\tprivate getCastlingEndCoordinate(player: NumericColor, coordinates: number | undefined): [number, number] {\n\t\tconst royalCoordinate = this.tag(\"royal\")[player]?.[getVerticalPlacementModulus(player)];\n\t\tassertNonUndefined(coordinates);\n\t\tassertNonUndefined(royalCoordinate);\n\t\tconst coordinateA = isVerticalPlacement(player) ? royalCoordinate : coordinates;\n\t\tconst coordinateB = isVerticalPlacement(player) ? coordinates : royalCoordinate;\n\t\treturn [coordinateA, coordinateB];\n\t}\n\n\tgetKingsideCastlingEndCoordinate(player: NumericColor): [number, number] {\n\t\treturn this.getCastlingEndCoordinate(player, this.castlingKingsideData[player].endCoordinates);\n\t}\n\tgetQueensideCastlingEndCoordinate(player: NumericColor): [number, number] {\n\t\treturn this.getCastlingEndCoordinate(player, this.castlingQueensideData[player].endCoordinates);\n\t}\n\tgetKingsideCastlingPieceEndCoordinate(player: NumericColor): [number, number] {\n\t\treturn this.getCastlingEndCoordinate(player, this.castlingKingsideData[player].pieceEndCoordinates);\n\t}\n\tgetQueensideCastlingPieceEndCoordinate(player: NumericColor): [number, number] {\n\t\treturn this.getCastlingEndCoordinate(player, this.castlingQueensideData[player].pieceEndCoordinates);\n\t}\n\tgetKingsideCastlingTandemPiece(player: NumericColor) {\n\t\treturn this.castlingKingsideData[player].pieceCoordinates;\n\t}\n\tgetQueensideCastlingTandemPiece(player: NumericColor) {\n\t\treturn this.castlingQueensideData[player].pieceCoordinates;\n\t}\n\n\tgetAvailableEnPassantCaptures(baseColor: NumericColor): Coordinate[] {\n\t\tconst coordinates: Coordinate[] = [];\n\t\tthis.tag(\"enPassant\").forEach((enPassant, i) => {\n\t\t\tif (i === baseColor) return;\n\t\t\tif (enPassant) coordinates.push(enPassant[0]);\n\t\t});\n\n\t\treturn coordinates.map((e) => [...e]);\n\t}\n\n\tgetDefaultZombieAlgorithm(baseColor: NumericColor): ZombieMoveGenerationAlgorithm {\n\t\tconst algorithm = botAlgorithms.get(this.tag(\"resigned\")[baseColor] ? this.tag(\"zombieType\")[baseColor] : ZombieType.F_Checker);\n\t\tassertNonUndefined(algorithm);\n\t\treturn algorithm;\n\t}\n}\n","import { createTuple, createTupleFromCallback, Tuple, verifyTupleType } from \"@client/ts/baseTypes\";\nimport { compareArrays } from \"@client/ts/utils/ArrayUtils\";\nimport type { PlayerBooleanTuple } from \"../../Board/Board\";\nimport { stringifyCoordinate, unstringifyCoordinate } from \"../../Board/BoardInterface\";\nimport { boardDimension, colors, convertCoordinateToPGN4, totalPlayers } from \"../../GameInformation/GameData\";\nimport { Coordinate, verifyNumericColor } from \"../../GameInformation/GameUnits/GameUnits\";\nimport { createPieceFromString, PieceString } from \"../../GameInformation/GameUnits/PieceString\";\nimport { PieceLetter, verifyPieceLetter } from \"../../PieceControl/PieceControlInterface\";\nimport type { DynamicFENOptionTag, FENOptionsTags, StaticFENOptionTag } from \"./FENOptionsTagsInterface\";\nimport {\n\tverifyZombieType,\n\tZombieType\n} from \"@moveGeneration/VariantRules/VariantRuleDefinitions/BoardVariantModules/EngineMoveGeneration/BotInterface\";\nimport { PGN4_SYNTAX } from \"@client/ts/logic/utils/Tags/Moves/ParsePGNMoves\";\nimport { parseEnPassantCoordinates, parseSingleCoordinate } from \"@client/ts/logic/utils/Tags/Utils\";\nimport { verifyObjectType } from \"@client/ts/utils/ObjectUtils\";\n\ntype ExtractTagsByType<T> = {\n\t[K in keyof FENOptionsTags]: FENOptionsTags[K] extends StaticFENOptionTag<T> ? K : never;\n}[keyof FENOptionsTags];\ntype ExtractTagKeysByType<T> = keyof Pick<FENOptionsTags, ExtractTagsByType<T>>;\n\nconst verifyParameterType = <T>(param: unknown, type: string): param is Tuple<T, typeof totalPlayers> => {\n\treturn Array.isArray(param) && verifyTupleType(param, totalPlayers) && param.every((v) => typeof v === type);\n};\n\ninterface TagFactoryParameters<K extends keyof FENOptionsTags> {\n\tkey: K;\n\tdefaultValue: FENOptionsTags[K][\"value\"];\n}\ninterface DynamicTagFactoryParameters<K extends keyof FENOptionsTags> extends TagFactoryParameters<K> {\n\tisStatic: false;\n}\ninterface StaticTagFactoryParameters<K extends keyof FENOptionsTags> extends TagFactoryParameters<K> {\n\tisStatic: true;\n}\ntype OverloadTagFactoryParameters<K extends keyof FENOptionsTags> = DynamicTagFactoryParameters<K> | StaticTagFactoryParameters<K>;\n\ntype FactoryGeneratedObject<K extends keyof FENOptionsTags> = StaticFENOptionTag<FENOptionsTags[K][\"value\"]> &\n\tPartial<DynamicFENOptionTag<FENOptionsTags[K][\"value\"]>>;\n\ntype BooleanTupleTag = ExtractTagKeysByType<PlayerBooleanTuple>;\nexport function createBooleanTupleTag(parameters: DynamicTagFactoryParameters<BooleanTupleTag>): DynamicFENOptionTag<PlayerBooleanTuple>;\nexport function createBooleanTupleTag(parameters: StaticTagFactoryParameters<BooleanTupleTag>): StaticFENOptionTag<PlayerBooleanTuple>;\nexport function createBooleanTupleTag(parameters: OverloadTagFactoryParameters<BooleanTupleTag>) {\n\tconst { defaultValue, key, isStatic } = parameters;\n\tconst resultingObject: FactoryGeneratedObject<BooleanTupleTag> = {\n\t\tvalue: [...defaultValue],\n\t\tparse(value): PlayerBooleanTuple {\n\t\t\tif (verifyParameterType<boolean>(value, \"boolean\")) {\n\t\t\t\treturn value;\n\t\t\t} else return this.createSnapshot();\n\t\t},\n\t\tserialize() {\n\t\t\tif (key === \"castleKingside\" || key === \"castleQueenside\" || key === \"dead\" || key === \"areBanksEnabled\") return;\n\t\t\tif (!compareArrays(this.value, defaultValue)) {\n\t\t\t\treturn `'${key}':(${this.value.join(\",\")})`;\n\t\t\t} else return;\n\t\t},\n\t\tcreateSnapshot() {\n\t\t\treturn [...this.value];\n\t\t},\n\t\tloadSnapshot(snapshot) {\n\t\t\tconst tuple: PlayerBooleanTuple = [...snapshot];\n\t\t\tthis.value = tuple;\n\t\t}\n\t};\n\n\tif (isStatic) delete resultingObject.loadSnapshot;\n\treturn resultingObject;\n}\n\nconst defaultPawnBaseRank = 2;\nexport const createPawnBaseRankTag = (): FENOptionsTags[\"pawnBaseRank\"] => ({\n\tvalue: defaultPawnBaseRank,\n\tparse(value) {\n\t\treturn typeof value === \"number\" && value > 0 && value <= boardDimension ? value : this.value;\n\t},\n\tserialize() {\n\t\treturn this.value === defaultPawnBaseRank ? undefined : `'pawnBaseRank':${this.value}`;\n\t},\n\tcreateSnapshot() {\n\t\treturn this.value;\n\t}\n});\n\nexport const createEnPassantTag = (): FENOptionsTags[\"enPassant\"] => ({\n\tvalue: createTuple(null, totalPlayers),\n\tparse(input) {\n\t\tif (verifyParameterType<string>(input, \"string\")) {\n\t\t\treturn input.map((v) => parseEnPassantCoordinates(v) ?? null);\n\t\t} else return this.createSnapshot();\n\t},\n\tserialize() {\n\t\tif (this.value.some((v) => !v)) {\n\t\t\treturn `'enPassant':(${this.value\n\t\t\t\t.map((enP) => (enP ? `'${convertCoordinateToPGN4(enP[0])}:${convertCoordinateToPGN4(enP[1])}'` : \"''\"))\n\t\t\t\t.join(\",\")})`;\n\t\t} else return;\n\t},\n\tcreateSnapshot() {\n\t\treturn this.value.map((enP) => (enP ? [[...enP[0]], [...enP[1]]] : enP));\n\t},\n\tloadSnapshot(snapshot) {\n\t\tthis.value = snapshot.map((enP) => (enP ? [[...enP[0]], [...enP[1]]] : enP));\n\t}\n});\n\nconst defaultCastleWith = \"R\";\nexport const createCastleWithTag = (): FENOptionsTags[\"castleWith\"] => ({\n\tvalue: defaultCastleWith,\n\tparse(input) {\n\t\treturn typeof input === \"string\" ? input : this.value;\n\t},\n\tserialize() {\n\t\treturn this.value === defaultCastleWith ? undefined : `'castleWith':${this.value}`;\n\t},\n\tcreateSnapshot() {\n\t\treturn this.value;\n\t}\n});\n\nconst defaultBoxOffset = 0;\nexport const createBoxOffsetTag = (): FENOptionsTags[\"boxOffset\"] => ({\n\tvalue: defaultBoxOffset,\n\tparse(input) {\n\t\treturn typeof input === \"number\" && verifyNumericColor(input) ? input : this.value;\n\t},\n\tserialize() {\n\t\treturn this.value === defaultBoxOffset ? undefined : `'boxOffset':${this.value}`;\n\t},\n\tcreateSnapshot() {\n\t\treturn this.value;\n\t}\n});\n\ntype BooleanTag = ExtractTagsByType<boolean>;\nexport function createBooleanTag(parameters: DynamicTagFactoryParameters<BooleanTag>): DynamicFENOptionTag<boolean>;\nexport function createBooleanTag(parameters: StaticTagFactoryParameters<BooleanTag>): StaticFENOptionTag<boolean>;\nexport function createBooleanTag(parameters: OverloadTagFactoryParameters<BooleanTag>) {\n\tconst { defaultValue, key, isStatic } = parameters;\n\tconst result: FactoryGeneratedObject<BooleanTag> = {\n\t\tvalue: defaultValue,\n\t\tparse(input) {\n\t\t\treturn typeof input === \"boolean\" ? input : this.createSnapshot();\n\t\t},\n\t\tserialize() {\n\t\t\treturn this.value === defaultValue ? undefined : `'${key}':${String(this.value)}`;\n\t\t},\n\t\tcreateSnapshot() {\n\t\t\treturn this.value;\n\t\t},\n\t\tloadSnapshot(snapshot) {\n\t\t\tthis.value = snapshot;\n\t\t}\n\t};\n\n\tif (isStatic) delete result.loadSnapshot;\n\treturn result;\n}\n\nconst defaultDimension: [number, number] = [14, 14];\nexport const createDimensionTag = (): FENOptionsTags[\"dim\"] => ({\n\tvalue: [...defaultDimension],\n\tparse(baseInput) {\n\t\tif (typeof baseInput !== \"string\") return this.createSnapshot();\n\t\tconst input = baseInput.split(\"x\");\n\t\treturn Array.isArray(input) &&\n\t\t\tverifyTupleType(input, 2) &&\n\t\t\tinput.every((i) => {\n\t\t\t\tconst v = Number(i);\n\t\t\t\treturn !isNaN(v) && v >= 2 && v <= 14 && v % 2 === 0;\n\t\t\t})\n\t\t\t? input.map((v) => Number(v)).reverse()\n\t\t\t: this.createSnapshot();\n\t},\n\tserialize() {\n\t\tif (compareArrays(this.value, defaultDimension)) return;\n\t\treturn `'dim':'${this.value.join(\"x\")}'`;\n\t},\n\tcreateSnapshot() {\n\t\treturn [...this.value];\n\t}\n});\n\nconst defaultZombies = createTuple(ZombieType.Rando, totalPlayers);\nexport const createZombiesTag = (): FENOptionsTags[\"zombieType\"] => ({\n\tvalue: [...defaultZombies],\n\tparse(input) {\n\t\tif (Array.isArray(input) && verifyTupleType(input, totalPlayers) && input.every<string>((v): v is string => typeof v === \"string\")) {\n\t\t\tconst newZombies = this.createSnapshot();\n\t\t\tfor (const color of colors) {\n\t\t\t\tconst zombieType = input[color];\n\t\t\t\tif (verifyZombieType(zombieType)) newZombies[color] = zombieType;\n\t\t\t}\n\n\t\t\treturn newZombies;\n\t\t} else return this.createSnapshot();\n\t},\n\tserialize() {\n\t\tif (compareArrays(this.value, defaultZombies)) return;\n\t\treturn `'zombieType':(${this.value.map((t, i) => (t === defaultZombies[i] ? \"''\" : `'${t}'`)).join(\",\")})`;\n\t},\n\tcreateSnapshot() {\n\t\treturn [...this.value];\n\t}\n});\n\nexport const createRoyalTag = (): FENOptionsTags[\"royal\"] => ({\n\tvalue: createTuple(null, totalPlayers),\n\tparse(input) {\n\t\tif (verifyParameterType<string>(input, \"string\")) {\n\t\t\treturn input.map((c) => parseSingleCoordinate(c) ?? null);\n\t\t} else return this.createSnapshot();\n\t},\n\tserialize() {\n\t\treturn `'royal':(${this.value.map((r) => (r ? `'${convertCoordinateToPGN4(r)}'` : \"''\")).join(\",\")})`;\n\t},\n\tcreateSnapshot() {\n\t\treturn this.value.map((c) => (c ? [...c] : c));\n\t},\n\tloadSnapshot(snapshot) {\n\t\tthis.value = snapshot.map((c) => (c ? [...c] : c));\n\t}\n});\n\nexport const createLivesTag = (): FENOptionsTags[\"lives\"] => ({\n\tvalue: createTuple(null, totalPlayers),\n\tparse(input) {\n\t\tif (verifyParameterType<number>(input, \"number\")) {\n\t\t\treturn input;\n\t\t} else return this.createSnapshot();\n\t},\n\tserialize() {\n\t\tif (this.value.some((v) => v !== null)) {\n\t\t\treturn `'lives':(${this.value.map((l) => (l ? String(l) : \"1\")).join(\",\")})`;\n\t\t} else return;\n\t},\n\tcreateSnapshot() {\n\t\treturn [...this.value];\n\t},\n\tloadSnapshot(snapshot) {\n\t\tthis.value = [...snapshot];\n\t}\n});\n\nexport const createBankTag = (): FENOptionsTags[\"bank\"] => ({\n\tvalue: createTupleFromCallback(() => new Map<PieceString, number>(), totalPlayers),\n\tparse(input) {\n\t\tconst defaultBanks = createTupleFromCallback(() => new Map<PieceString, number>(), totalPlayers);\n\t\tif (verifyParameterType<string>(input, \"string\")) {\n\t\t\tfor (const color of colors) {\n\t\t\t\tfor (const pieceDefinition of input[color].split(\",\")) {\n\t\t\t\t\tconst [piece, count = 1] = pieceDefinition.split(\"x\").map((e, i) => (i === 1 ? Number(e) : e));\n\t\t\t\t\tif (typeof piece !== \"string\" || typeof count !== \"number\") continue;\n\t\t\t\t\tif (!/^(?:r|b|y|g).$/.test(piece)) continue;\n\t\t\t\t\tconst pieceLetter = piece.charAt(1);\n\t\t\t\t\tif (verifyPieceLetter(pieceLetter)) {\n\t\t\t\t\t\tdefaultBanks[color].set(createPieceFromString(piece), count);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn defaultBanks;\n\t},\n\tserialize() {\n\t\tif (this.value.some((b) => b.size !== 0)) {\n\t\t\treturn `'bank':(${this.value\n\t\t\t\t.map((bank) => {\n\t\t\t\t\tconst resultingStrings: string[] = [];\n\t\t\t\t\tfor (const [piece, count] of bank) {\n\t\t\t\t\t\tif (count === 1) {\n\t\t\t\t\t\t\tresultingStrings.push(piece.value);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresultingStrings.push(`${piece.value}x${count}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn `'${resultingStrings.join(\",\")}'`;\n\t\t\t\t})\n\t\t\t\t.join(\",\")})`;\n\t\t} else return;\n\t},\n\tcreateSnapshot() {\n\t\treturn this.value.map((m) => [...m.entries()].map(([pieceString, count]) => [pieceString.toObject(), count]));\n\t},\n\tloadSnapshot(snapshot) {\n\t\tthis.value = snapshot.map(\n\t\t\t(v) => new Map(v.map(([pieceStringObject, count]) => [PieceString.fromObjectToClass(pieceStringObject), count]))\n\t\t);\n\t}\n});\n\nexport const createPromotedFromTag = (): FENOptionsTags[\"promotedFrom\"] => ({\n\tvalue: new Map(),\n\tparse(input) {\n\t\tconst promotedFromMap = new Map<Coordinate, PieceLetter>();\n\t\tif (!verifyObjectType(input)) return promotedFromMap;\n\t\tfor (const key in input) {\n\t\t\tif (!Object.prototype.hasOwnProperty.call(promotedFromMap, key)) continue;\n\t\t\tconst parsedCoordinate = parseSingleCoordinate(key);\n\t\t\tconst pieceLetter = input[key];\n\t\t\tif (!parsedCoordinate || typeof pieceLetter !== \"string\" || !verifyPieceLetter(pieceLetter)) continue;\n\n\t\t\tpromotedFromMap.set(parsedCoordinate, pieceLetter);\n\t\t}\n\n\t\treturn promotedFromMap;\n\t},\n\tserialize() {\n\t\tif (this.value.size === 0) return;\n\t\tconst promotedFromStrings: string[] = [];\n\t\tfor (const [coordinate, piece] of this.value) {\n\t\t\tpromotedFromStrings.push(`'${convertCoordinateToPGN4(coordinate)}':'${piece}'`);\n\t\t}\n\n\t\treturn `'promotedFrom':{${promotedFromStrings.join(\",\")}}`;\n\t},\n\tcreateSnapshot() {\n\t\tconst newMap: Array<[Coordinate, PieceLetter]> = [];\n\t\tfor (const [coordinate, pieceLetter] of this.value.entries()) {\n\t\t\tnewMap.push([[...coordinate], pieceLetter]);\n\t\t}\n\n\t\treturn newMap;\n\t},\n\tloadSnapshot(snapshot) {\n\t\tthis.value.clear();\n\t\tfor (const [coordinate, pieceLetter] of snapshot) {\n\t\t\tthis.value.set([...coordinate], pieceLetter);\n\t\t}\n\t}\n});\n\nexport const createSetupPointsTag = (): FENOptionsTags[\"setupPoints\"] => ({\n\tvalue: null,\n\tparse(input) {\n\t\tif (verifyParameterType<number>(input, \"number\")) {\n\t\t\treturn input;\n\t\t} else return this.createSnapshot();\n\t},\n\tserialize() {\n\t\tif (this.value) {\n\t\t\treturn `'setupPoints':(${this.value.join(\",\")})`;\n\t\t} else return;\n\t},\n\tcreateSnapshot() {\n\t\treturn this.value ? [...this.value] : this.value;\n\t},\n\tloadSnapshot(snapshot) {\n\t\tthis.value = snapshot ? [...snapshot] : snapshot;\n\t}\n});\n\nexport const createSeirawanDropsTag = (): FENOptionsTags[\"seirawanDrops\"] => ({\n\tvalue: createTupleFromCallback(() => new Set<string>(), totalPlayers),\n\tparse(input) {\n\t\tconst defaultValue = createTupleFromCallback(() => new Set<string>(), totalPlayers);\n\t\tif (\n\t\t\tArray.isArray(input) &&\n\t\t\t(verifyTupleType(input, totalPlayers) || verifyTupleType(input, totalPlayers + 1)) &&\n\t\t\tinput.every<unknown[]>((v): v is unknown[] => Array.isArray(v))\n\t\t) {\n\t\t\tfor (const color of colors) {\n\t\t\t\tconst seirawanDropsArray = input[color];\n\t\t\t\tif (!seirawanDropsArray.every<string>((v): v is string => typeof v === \"string\")) continue;\n\n\t\t\t\tfor (const pieceDefinition of seirawanDropsArray) {\n\t\t\t\t\tif (!PGN4_SYNTAX.COORDINATE_REGEX.test(pieceDefinition)) continue;\n\t\t\t\t\tconst coordinate = parseSingleCoordinate(pieceDefinition);\n\t\t\t\t\tif (coordinate) {\n\t\t\t\t\t\tdefaultValue[color].add(stringifyCoordinate(coordinate));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn defaultValue;\n\t},\n\tserialize() {\n\t\tif (this.value.every((m) => m.size === 0)) return;\n\t\treturn `'seirawanDrops':(${this.value\n\t\t\t.map((coordinates) => {\n\t\t\t\treturn `(${[...coordinates].map((coord) => `'${convertCoordinateToPGN4(unstringifyCoordinate(coord))}'`).join(\",\")})`;\n\t\t\t})\n\t\t\t.join(\",\")})`;\n\t},\n\tcreateSnapshot() {\n\t\treturn this.value.map((s) => [...s.values()]);\n\t},\n\tloadSnapshot(snapshot) {\n\t\tthis.value = snapshot.map((s) => new Set(s));\n\t}\n});\n","import { createTuple, Tuple } from \"@client/ts/baseTypes\";\nimport type { Coordinate, NumericColor } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport type { ZombieType } from \"@moveGeneration/VariantRules/VariantRuleDefinitions/BoardVariantModules/EngineMoveGeneration/BotInterface\";\nimport type { Memento } from \"../../../BaseInterfaces\";\nimport type { PlayerBooleanTuple } from \"../../Board/Board\";\nimport { totalPlayers } from \"../../GameInformation/GameData\";\nimport type { PieceString, PieceStringObject } from \"../../GameInformation/GameUnits/PieceString\";\nimport type { PieceLetter } from \"../../PieceControl/PieceControlInterface\";\nimport * as Tags from \"./FENOptionsTags\";\n\nexport interface StaticFENOptionTag<T, S = T> {\n\tvalue: T;\n\tparse(value: unknown): T;\n\tserialize(): string | undefined;\n\tcreateSnapshot(): S;\n}\nexport type DynamicFENOptionTag<T, S = T> = StaticFENOptionTag<T, S> & Memento<S>;\nexport const verifyDynamicFENOptionKey = (\n\tfenTag: StaticFENOptionTag<unknown> | DynamicFENOptionTag<unknown>,\n\tkey: keyof FENOptionsTags\n): key is keyof FENOptionsTagsSnapshot => \"loadSnapshot\" in fenTag;\nexport const verifyDynamicTag = (fenTag: StaticFENOptionTag<unknown> | DynamicFENOptionTag<unknown>): fenTag is DynamicFENOptionTag<unknown> =>\n\t\"loadSnapshot\" in fenTag;\n\nexport interface FENOptionsTags {\n\tdead: DynamicFENOptionTag<PlayerBooleanTuple>;\n\tresigned: DynamicFENOptionTag<PlayerBooleanTuple>;\n\n\tpawnBaseRank: StaticFENOptionTag<number>;\n\tenPassant: DynamicFENOptionTag<Tuple<[Coordinate, Coordinate] | null, typeof totalPlayers>>;\n\n\tcastleKingside: DynamicFENOptionTag<PlayerBooleanTuple>;\n\tcastleQueenside: DynamicFENOptionTag<PlayerBooleanTuple>;\n\tcastleWith: StaticFENOptionTag<string>;\n\n\tboxOffset: StaticFENOptionTag<NumericColor>;\n\twb: StaticFENOptionTag<boolean>;\n\tdim: StaticFENOptionTag<[number, number]>;\n\tnoCorners: StaticFENOptionTag<boolean>;\n\n\tzombieType: StaticFENOptionTag<Tuple<ZombieType, typeof totalPlayers>>;\n\tzombieImmune: StaticFENOptionTag<PlayerBooleanTuple>;\n\n\troyal: DynamicFENOptionTag<Tuple<Coordinate | null, typeof totalPlayers>>;\n\tlives: DynamicFENOptionTag<Tuple<number | null, typeof totalPlayers>>;\n\n\tbank: DynamicFENOptionTag<\n\t\tTuple<Map<PieceString, number>, typeof totalPlayers>,\n\t\tTuple<Array<[PieceStringObject, number]>, typeof totalPlayers>\n\t>;\n\tpromotedFrom: DynamicFENOptionTag<Map<Coordinate, PieceLetter>, Array<[Coordinate, PieceLetter]>>;\n\tsetupPoints: DynamicFENOptionTag<Tuple<number, typeof totalPlayers> | null>;\n\tsetupComplete: DynamicFENOptionTag<PlayerBooleanTuple>;\n\tseirawanDrops: DynamicFENOptionTag<Tuple<Set<string>, typeof totalPlayers>, Tuple<string[], typeof totalPlayers>>;\n\tareBanksEnabled: DynamicFENOptionTag<PlayerBooleanTuple>;\n}\n\ntype FENOptionsDynamicTags = Pick<\n\tFENOptionsTags,\n\t{\n\t\t[K in keyof FENOptionsTags]: FENOptionsTags[K] extends DynamicFENOptionTag<FENOptionsTags[K][\"value\"]> ? K : never;\n\t}[keyof FENOptionsTags]\n>;\nexport type FENOptionsTagsSnapshot = {\n\t[K in keyof FENOptionsDynamicTags]: ReturnType<FENOptionsTags[K][\"createSnapshot\"]>;\n};\nexport type FENOptionsSerializedState = {\n\t[K in keyof FENOptionsTags]: ReturnType<FENOptionsTags[K][\"createSnapshot\"]>;\n};\n\nexport function createFENOptionsTags(): FENOptionsTags {\n\treturn {\n\t\tdead: Tags.createBooleanTupleTag({ key: \"dead\", defaultValue: createTuple(false, totalPlayers), isStatic: false }),\n\t\tresigned: Tags.createBooleanTupleTag({ key: \"resigned\", defaultValue: createTuple(false, totalPlayers), isStatic: false }),\n\n\t\tpawnBaseRank: Tags.createPawnBaseRankTag(),\n\t\tenPassant: Tags.createEnPassantTag(),\n\n\t\tboxOffset: Tags.createBoxOffsetTag(),\n\t\twb: Tags.createBooleanTag({ key: \"wb\", defaultValue: false, isStatic: true }),\n\t\tdim: Tags.createDimensionTag(),\n\t\tnoCorners: Tags.createBooleanTag({ key: \"noCorners\", defaultValue: false, isStatic: true }),\n\n\t\tcastleKingside: Tags.createBooleanTupleTag({ key: \"castleKingside\", defaultValue: createTuple(true, totalPlayers), isStatic: false }),\n\t\tcastleQueenside: Tags.createBooleanTupleTag({ key: \"castleQueenside\", defaultValue: createTuple(true, totalPlayers), isStatic: false }),\n\t\tcastleWith: Tags.createCastleWithTag(),\n\n\t\tzombieType: Tags.createZombiesTag(),\n\t\tzombieImmune: Tags.createBooleanTupleTag({ key: \"zombieImmune\", defaultValue: createTuple(false, totalPlayers), isStatic: false }),\n\n\t\troyal: Tags.createRoyalTag(),\n\t\tlives: Tags.createLivesTag(),\n\n\t\tbank: Tags.createBankTag(),\n\t\tpromotedFrom: Tags.createPromotedFromTag(),\n\t\tsetupPoints: Tags.createSetupPointsTag(),\n\t\tsetupComplete: Tags.createBooleanTupleTag({ key: \"setupComplete\", defaultValue: createTuple(true, totalPlayers), isStatic: false }),\n\t\tseirawanDrops: Tags.createSeirawanDropsTag(),\n\t\tareBanksEnabled: Tags.createBooleanTupleTag({ key: \"areBanksEnabled\", defaultValue: createTuple(false, totalPlayers), isStatic: false })\n\t};\n}\n\nexport function createFENOptionsTagsSnapshot(tags: FENOptionsTags): FENOptionsTagsSnapshot {\n\tconst resultingTags: Partial<FENOptionsTagsSnapshot> = {};\n\tlet fenTag: keyof FENOptionsTags;\n\tfor (fenTag in tags) {\n\t\tif (!Object.prototype.hasOwnProperty.call(tags, fenTag)) continue;\n\t\tconst tag = tags[fenTag];\n\t\tif (!verifyDynamicFENOptionKey(tag, fenTag) || !verifyDynamicTag(tag)) continue;\n\t\tresultingTags[fenTag] = tag.createSnapshot() as never;\n\t}\n\n\treturn resultingTags as FENOptionsTagsSnapshot;\n}\n","import {\n\tduckLetter,\n\temptyLetter,\n\tpawnPieceLetter,\n\tPieceLetter,\n\tverifyPieceLetter,\n\twallPieceLetter\n} from \"@moveGeneration/PieceControl/PieceControlInterface\";\nimport { colorEnum, nonPlayablePieces, NumericColor, stringColorEnum } from \"./GameUnits\";\n\nexport const deadColorIndex = 4;\ninterface PieceStringInterface {\n\treadonly value: string;\n\tisDead(): boolean;\n\tisEmpty(): boolean;\n\tisWall(): boolean;\n\tisPiece(): boolean;\n\tgetStringifiedColor(): keyof typeof colorEnum;\n\treadonly color: NumericColor | typeof deadColorIndex;\n\treadonly piece: PieceLetter;\n}\n\ninterface EmptyPieceStringInterface extends PieceStringInterface {\n\tisDead(): false;\n\tisEmpty(): true;\n\tisWall(): false;\n\tisPiece(): false;\n\treadonly color: never;\n\treadonly piece: never;\n}\nexport type EmptyPieceString = PieceString & EmptyPieceStringInterface;\n\ninterface WallPieceStringInterface extends PieceStringInterface {\n\tisDead(): true;\n\tisEmpty(): false;\n\tisWall(): true;\n\tisPiece(): false;\n\treadonly color: typeof deadColorIndex;\n\treadonly piece: PieceLetter & (typeof nonPlayablePieces)[keyof typeof nonPlayablePieces];\n}\nexport type WallPieceString = PieceString & WallPieceStringInterface;\n\ninterface DeadPieceStringInterface extends PieceStringInterface {\n\tisDead(): true;\n\tisEmpty(): false;\n\tisWall(): false;\n\tisPiece(): true;\n\treadonly color: typeof deadColorIndex;\n}\nexport type DeadPieceString = PieceString & DeadPieceStringInterface;\n\ninterface ActivePieceStringInterface extends PieceStringInterface {\n\tisDead(): false;\n\tisEmpty(): false;\n\tisWall(): false;\n\tisPiece(): true;\n\treadonly color: NumericColor;\n}\nexport type ActivePieceString = PieceString & ActivePieceStringInterface;\n\nexport interface PieceStringObject {\n\treadonly _color: NumericColor | typeof deadColorIndex;\n\treadonly _piece: PieceLetter;\n\treadonly value: string;\n}\n\nexport class PieceString implements PieceStringInterface {\n\tstatic comparePieceStrings(pieceString1: PieceString, pieceString2: PieceString) {\n\t\treturn pieceString1._piece === pieceString2._piece && pieceString1._color === pieceString2._color;\n\t}\n\n\tstatic comparePieceStringObjects(pieceString1: PieceStringObject, pieceString2: PieceStringObject) {\n\t\treturn pieceString1._piece === pieceString2._piece && pieceString1._color === pieceString2._color;\n\t}\n\n\tstatic fromObjectToClass(object: PieceStringObject) {\n\t\treturn new PieceString(object._color, object._piece);\n\t}\n\n\treadonly value: string;\n\tconstructor(private readonly _color: NumericColor | typeof deadColorIndex, private readonly _piece: PieceLetter) {\n\t\tthis.value = _piece.length ? (/[xXΘ]/.test(_piece) ? _piece : stringColorEnum[_color] + _piece) : \"\";\n\t}\n\n\tisDead(): this is DeadPieceStringInterface {\n\t\treturn this._color === deadColorIndex && !this.isWall();\n\t}\n\tisEmpty(): this is EmptyPieceStringInterface {\n\t\treturn this._piece.length === 0;\n\t}\n\tisWall(): this is WallPieceStringInterface {\n\t\treturn this.value.length === 1;\n\t}\n\tisPiece(): this is ActivePieceStringInterface {\n\t\treturn this.value.length === 2 && this._color !== deadColorIndex;\n\t}\n\n\tget piece() {\n\t\tif (this.isEmpty()) throw new TypeError(\"Accessing a piece string piece value while the piece string is empty.\");\n\t\treturn this._piece;\n\t}\n\n\tget color() {\n\t\tif (this.isEmpty()) throw new TypeError(\"Accessing a piece string color value while the piece string is empty.\");\n\t\treturn this._color;\n\t}\n\n\tgetStringifiedColor(): keyof typeof colorEnum {\n\t\treturn this.value.charAt(0) as keyof typeof colorEnum;\n\t}\n\n\ttoObject(): PieceStringObject {\n\t\treturn {\n\t\t\t_piece: this._piece,\n\t\t\t_color: this._color,\n\t\t\tvalue: this.value\n\t\t};\n\t}\n}\n\nexport const createPieceFromData = (color: NumericColor | typeof deadColorIndex, piece: string) => {\n\tif (verifyPieceLetter(piece)) {\n\t\treturn new PieceString(color, piece);\n\t}\n\tthrow new Error(\"Wrong color signature for the piece provided\");\n};\nexport const createPieceFromString = (piece: string) => {\n\tconst verifyColorEnum = (p: string): p is keyof typeof colorEnum => p in colorEnum;\n\n\tif (piece.length === 1 && verifyPieceLetter(piece)) {\n\t\treturn new PieceString(deadColorIndex, piece);\n\t} else {\n\t\tconst color = piece.charAt(0);\n\t\tconst pieceLetter = piece.charAt(1);\n\t\tif (!verifyPieceLetter(pieceLetter)) throw new Error(\"Wrong signature for the piece provided\");\n\t\tif (color === \"d\") {\n\t\t\treturn new PieceString(deadColorIndex, pieceLetter);\n\t\t} else {\n\t\t\tif (verifyColorEnum(color)) {\n\t\t\t\treturn new PieceString(colorEnum[color], pieceLetter);\n\t\t\t} else throw new Error(\"Wrong color signature for the piece provided\");\n\t\t}\n\t}\n};\n\nconst testEmptyPieceString = new PieceString(0, emptyLetter);\nif (!testEmptyPieceString.isEmpty()) throw new Error(\"Empty piece string is not isEmpty\");\nexport const emptyPieceString: EmptyPieceString = testEmptyPieceString;\n\nconst testWallPieceString = new PieceString(deadColorIndex, wallPieceLetter);\nif (!testWallPieceString.isWall()) throw new Error(\"Wall piece string is not isWall\");\nexport const wallPieceString: WallPieceString = testWallPieceString;\n\nconst testActivePieceString = new PieceString(0, pawnPieceLetter);\nif (!testActivePieceString.isPiece()) throw new Error(\"Active piece string is not isActive\");\nexport const pawnPieceString: ActivePieceString = testActivePieceString;\n\nconst testDuckPieceString = new PieceString(deadColorIndex, duckLetter);\nif (!testDuckPieceString.isWall()) throw new Error(\"Wall piece string is not isWall\");\nexport const duckPieceString: ActivePieceString = testActivePieceString;\n","import { throwOnNever } from \"@client/ts/baseTypes\";\nimport type { Coordinate } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport { compareArrays } from \"../../../utils/ArrayUtils\";\nimport { isVerticalPlacement } from \"../../BaseInterfaces\";\nimport { unstringifyCoordinate } from \"../Board/BoardInterface\";\nimport { convertCoordinateToPGN4Array, convertCoordinateToPGN4 } from \"../GameInformation/GameData\";\nimport { deadColorIndex, pawnPieceString } from \"../GameInformation/GameUnits/PieceString\";\nimport {\n\tMoveData,\n\tMoveTreeSnapshot,\n\tMoveWrapper,\n\tMoveWrapperMetadata,\n\tSpecialMove,\n\tverifyDroppingMove,\n\tverifyInternalMove,\n\tverifyStandardMove\n} from \"./MoveTreeInterface\";\n\nexport type MoveNotationStringify = (moveWrapper: MoveWrapper, snapshot: MoveTreeSnapshot, dimension: number) => string;\n\nfunction generateCastlingString(moveData: MoveData): string {\n\tswitch (moveData.specialType) {\n\t\tcase SpecialMove.CastlingKingside:\n\t\t\treturn \"O-O\";\n\t\tcase SpecialMove.CastlingQueenside:\n\t\t\treturn \"O-O-O\";\n\t\tdefault:\n\t\t\treturn \"\";\n\t}\n}\n\nfunction extractPiece(metadata: MoveWrapperMetadata): string {\n\treturn metadata.movingPiece.piece !== pawnPieceString.piece ? metadata.movingPiece.piece : \"\";\n}\n\nfunction obtainAmbiguousOrthogonality(parameters: {\n\tmoveMetadata: MoveWrapperMetadata;\n\tmove: MoveData;\n\tsnapshot: MoveTreeSnapshot;\n\tisCapture: boolean;\n}) {\n\tconst {\n\t\tmoveMetadata,\n\t\tmove,\n\t\tsnapshot: {\n\t\t\tboardSnapshot: { board },\n\t\t\tpregeneratedAttacks: { pieceMovements }\n\t\t},\n\t\tisCapture\n\t} = parameters;\n\tconst { piece, color } = moveMetadata.movingPiece;\n\tconst isPawn = piece === pawnPieceString.piece;\n\tconst registeredPieces: Coordinate[] = [];\n\tfor (const [piece, movements] of pieceMovements) {\n\t\tconst parsedCoordinate = unstringifyCoordinate(piece);\n\t\tconst boardPiece = board[parsedCoordinate[0]][parsedCoordinate[1]];\n\t\tif (boardPiece.isEmpty() || boardPiece.color !== color || boardPiece.piece !== piece) continue;\n\t\tif (movements.find((m) => compareArrays(move.endCoordinates, m.move)) !== undefined) {\n\t\t\tregisteredPieces.push(parsedCoordinate);\n\t\t}\n\t}\n\n\tif (color === deadColorIndex) return [false, false];\n\tconst ambiguousRank =\n\t\t(isCapture && isPawn && isVerticalPlacement(color)) ||\n\t\tregisteredPieces.some((c, i) => registeredPieces.some((c2, j) => i !== j && c[0] === c2[0]));\n\tconst ambiguousFile =\n\t\t(isCapture && isPawn && !isVerticalPlacement(color)) ||\n\t\tregisteredPieces.some((c, i) => registeredPieces.some((c2, j) => i !== j && c[1] === c2[1]));\n\n\treturn [ambiguousRank, ambiguousFile];\n}\n\nfunction extractPromotion(move: MoveData): string {\n\treturn move.promotion ? `=${move.promotion[0].piece}` : \"\";\n}\n\nfunction extractChecksAndCheckmates(metadata: MoveWrapperMetadata): string {\n\treturn \"+\".repeat(metadata.checks) + \"#\".repeat(metadata.checkmates);\n}\n\nexport const shortenedMoveNotationStringify: MoveNotationStringify = (moveWrapper, snapshot, dimension) => {\n\tlet resultingString = \"\";\n\tlet isFirstCapturingMoveSet = false;\n\tfor (const move of moveWrapper.moveData) {\n\t\tif (verifyStandardMove(move)) {\n\t\t\tif ((resultingString += generateCastlingString(move))) continue;\n\t\t\tresultingString += extractPiece(moveWrapper.metadata);\n\t\t\tconst isCapture = !isFirstCapturingMoveSet && moveWrapper.metadata.isCapture;\n\t\t\tconst [ambiguousRank, ambiguousFile] = obtainAmbiguousOrthogonality({\n\t\t\t\tisCapture,\n\t\t\t\tmove,\n\t\t\t\tsnapshot,\n\t\t\t\tmoveMetadata: moveWrapper.metadata\n\t\t\t});\n\n\t\t\tif (ambiguousFile && !ambiguousRank) {\n\t\t\t\tresultingString += convertCoordinateToPGN4Array(move.startCoordinates, dimension)[1];\n\t\t\t} else if (!ambiguousFile && ambiguousRank) {\n\t\t\t\tresultingString += convertCoordinateToPGN4Array(move.startCoordinates, dimension)[0];\n\t\t\t} else if (ambiguousFile && ambiguousRank) {\n\t\t\t\tresultingString += convertCoordinateToPGN4(move.startCoordinates, dimension);\n\t\t\t}\n\n\t\t\tif (isCapture) {\n\t\t\t\tresultingString += \"x\";\n\t\t\t\tisFirstCapturingMoveSet = true;\n\t\t\t}\n\t\t\tresultingString += convertCoordinateToPGN4(move.endCoordinates, dimension);\n\t\t\tresultingString += extractPromotion(move);\n\t\t} else if (verifyDroppingMove(move)) {\n\t\t\tresultingString += `@${move.piece.piece}`;\n\t\t\tresultingString += `${convertCoordinateToPGN4(move.endCoordinates, dimension)}`;\n\t\t} else if (verifyInternalMove(move)) {\n\t\t\tresultingString += move.type;\n\t\t} else throwOnNever(move);\n\t}\n\n\tresultingString += extractChecksAndCheckmates(moveWrapper.metadata);\n\tresultingString += moveWrapper.metadata.annotation ?? \"\";\n\treturn resultingString;\n};\n\nexport const fullMoveNotationStringify: MoveNotationStringify = (moveWrapper) => {\n\tlet resultingString = \"\";\n\tlet firstStandardMoveCaptureSet = false;\n\tfor (const move of moveWrapper.moveData) {\n\t\tif (verifyStandardMove(move)) {\n\t\t\tif ((resultingString += generateCastlingString(move))) continue;\n\t\t\tresultingString += extractPiece(moveWrapper.metadata);\n\t\t\tresultingString += convertCoordinateToPGN4(move.startCoordinates);\n\t\t\tif (!firstStandardMoveCaptureSet && moveWrapper.metadata.isCapture) {\n\t\t\t\tresultingString += \"x\";\n\t\t\t\tfirstStandardMoveCaptureSet = true;\n\t\t\t} else resultingString += \"-\";\n\t\t\tresultingString += convertCoordinateToPGN4(move.endCoordinates);\n\t\t\tresultingString += extractPromotion(move);\n\t\t} else if (verifyDroppingMove(move)) {\n\t\t\tresultingString += `@${move.piece.piece}`;\n\t\t\tresultingString += `-${convertCoordinateToPGN4(move.endCoordinates)}`;\n\t\t} else if (verifyInternalMove(move)) {\n\t\t\tresultingString += move.type;\n\t\t} else throwOnNever(move);\n\t}\n\n\tresultingString += extractChecksAndCheckmates(moveWrapper.metadata);\n\treturn resultingString;\n};\n\nexport const moveNotation = {\n\tfullMoveNotation: fullMoveNotationStringify,\n\tshortenedMoveNotation: shortenedMoveNotationStringify\n} as const;\n","import type { BoardSnapshot, PreGeneratedAttacks } from \"../Board/BoardInterface\";\nimport {\n\tMoveWrapper,\n\tcompareMoves,\n\tgetMoveFromPathAndTree,\n\tMoveTreeSetNewMoveParameters,\n\tMoveTreeSnapshot,\n\tMove,\n\tMoveData,\n\tverifyStandardMove,\n\tProcessSafeMoveWrapper\n} from \"./MoveTreeInterface\";\nimport { moveNotation } from \"./MoveNotationStringifier\";\nimport { compareArrays, findLastIndex } from \"@utils/ArrayUtils\";\nimport type { Board, PlayerBooleanTuple } from \"@moveGeneration/Board/Board\";\nimport type { PostMoveResults } from \"@moveGeneration/FENData/FENDataInterface\";\nimport { pawnPieceString } from \"@moveGeneration/GameInformation/GameUnits/PieceString\";\nimport { colors } from \"@moveGeneration/GameInformation/GameData\";\nimport { FENOptionsTags, verifyDynamicFENOptionKey } from \"@moveGeneration/FENData/FENOptions/FENOptionsTagsInterface\";\n\nexport function alterCurrentPath(current: number[], path: number[]) {\n\tlet currentMove = [...current];\n\n\tfor (let i = 0; i < currentMove.length; i++) {\n\t\tif (path[i] > currentMove[i]) break;\n\t\tif (path[i] === currentMove[i]) {\n\t\t\tif (i === path.length - 1) {\n\t\t\t\tcurrentMove = currentMove.slice(0, i + 1);\n\t\t\t\tcurrentMove[i]--;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\tcurrentMove = currentMove.slice(0, i + 1);\n\t\t\tcurrentMove[i] = path[i] - 1;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tconst indexOfMinus = currentMove.indexOf(-1);\n\tif (indexOfMinus !== -1) {\n\t\tcurrentMove = currentMove.slice(0, indexOfMinus);\n\n\t\tlet lastNumber = 0;\n\t\tdo {\n\t\t\tconst popped = currentMove.pop();\n\t\t\tif (popped === undefined) {\n\t\t\t\tlastNumber = -1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlastNumber = popped;\n\t\t} while (lastNumber <= 0);\n\n\t\tif (lastNumber !== -1) currentMove.push(lastNumber);\n\t}\n\n\treturn currentMove;\n}\n\nexport function verifyValidMove<T extends ProcessSafeMoveWrapper>(move: T | T[] | undefined): move is T {\n\treturn move !== undefined && !Array.isArray(move);\n}\nexport function assertValidMove<T extends ProcessSafeMoveWrapper>(move: T | T[] | undefined): asserts move is T {\n\tif (!move || Array.isArray(move)) {\n\t\tthrow new Error(\"The selected move is not a valid move\");\n\t}\n}\n\nexport const createMoveTree = (baseSnapshot: BoardSnapshot) => {\n\tconst snapshots = new WeakMap<MoveWrapper, MoveTreeSnapshot>();\n\tconst boardHashes = new Map<string, Array<readonly number[]>>();\n\tconst moves: MoveWrapper[] = [];\n\tconst startingSnapshot: MoveTreeSnapshot = {\n\t\tboardSnapshot: baseSnapshot,\n\t\tget hash(): string {\n\t\t\tthrow new Error(\"Should not access hash on base move\");\n\t\t},\n\t\tget pregeneratedAttacks(): PreGeneratedAttacks {\n\t\t\tthrow new Error(\"Should not access pregenerated attacks on base move\");\n\t\t}\n\t};\n\n\tfunction obtainMatchingAlternativeLine(baseMoveWrapper: MoveWrapper, newMoveWrapper: MoveWrapper) {\n\t\tfor (const [alternativeFirstMove] of baseMoveWrapper.alternativeLines) {\n\t\t\tif (alternativeFirstMove.moveData.length !== newMoveWrapper.moveData.length) continue;\n\t\t\tif (alternativeFirstMove.moveData.every((m, i) => compareMoves(m, newMoveWrapper.moveData[i]))) {\n\t\t\t\treturn alternativeFirstMove.path;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tfunction stripEmptyAlternativeLines(current = moves) {\n\t\tfor (const moveWrapper of current) {\n\t\t\tfor (let i = 0; i < moveWrapper.alternativeLines.length; i++) {\n\t\t\t\tif (moveWrapper.alternativeLines[i].length === 0) {\n\t\t\t\t\tmoveWrapper.alternativeLines.splice(i, 1);\n\t\t\t\t} else stripEmptyAlternativeLines(moveWrapper.alternativeLines[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction stripDeletedMoveHashes(current: MoveWrapper[], currentMove: number[]) {\n\t\tfor (const moveWrapper of current) {\n\t\t\tconst snapshot = snapshots.get(moveWrapper);\n\t\t\tif (!snapshot) continue;\n\n\t\t\tconst { hash } = snapshot;\n\t\t\tconst boardHash = boardHashes.get(hash);\n\t\t\tif (boardHash) {\n\t\t\t\tif (boardHash.length === 1) {\n\t\t\t\t\tboardHashes.delete(hash);\n\t\t\t\t} else {\n\t\t\t\t\tconst currentLine = boardHash.findIndex((p) => compareArrays(p, currentMove));\n\t\t\t\t\tif (currentLine === -1) {\n\t\t\t\t\t\tconsole.error(\"Current line for move wrapper not found in board hashes\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tboardHash.splice(currentLine, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const line of moveWrapper.alternativeLines) stripDeletedMoveHashes(line, currentMove);\n\t\t}\n\t}\n\n\tfunction addBoardSnapshot(parameters: MoveTreeSetNewMoveParameters, currentMove: number[]) {\n\t\tconst { move, snapshot, fenDataString } = parameters;\n\t\tsnapshots.set(move, {\n\t\t\tboardSnapshot: snapshot.boardSnapshot,\n\t\t\tpregeneratedAttacks: snapshot.pregeneratedAttacks,\n\t\t\thash: fenDataString\n\t\t});\n\n\t\tconst boardHash = boardHashes.get(fenDataString);\n\t\tif (boardHash) {\n\t\t\tconst hasAdditionalPath = boardHash.find((p) => compareArrays(p, currentMove));\n\t\t\tboardHashes.set(fenDataString, hasAdditionalPath ? boardHash : [...boardHash, currentMove.slice()]);\n\t\t} else boardHashes.set(fenDataString, [currentMove.slice()]);\n\t}\n\n\tconst assignMoveWrapperKey = <K extends keyof MoveWrapper>(object: MoveWrapper, key: K, value: MoveWrapper[K]) => {\n\t\tobject[key] = value;\n\t};\n\n\treturn {\n\t\tmoves,\n\t\tcurrentMove: [-1],\n\t\tgetMove(path: number[]): MoveWrapper | MoveWrapper[] | undefined {\n\t\t\treturn getMoveFromPathAndTree(moves, path);\n\t\t},\n\t\tsetNewMove(parameters: MoveTreeSetNewMoveParameters): number[] {\n\t\t\tconst { move } = parameters;\n\t\t\tconst moveWrapper = this.getMove(move.path.slice(0, -1));\n\t\t\tlet path = move.path.slice();\n\n\t\t\tif (!moveWrapper) return path;\n\t\t\tif (Array.isArray(moveWrapper)) {\n\t\t\t\tif (moveWrapper.length > move.path[move.path.length - 1]) {\n\t\t\t\t\tconst currentMove = this.getMove(move.path);\n\t\t\t\t\tif (Array.isArray(currentMove)) {\n\t\t\t\t\t\tthis.setNewMove({ ...parameters, move: { ...move, path: [...move.path, currentMove.length] } });\n\t\t\t\t\t} else if (currentMove) {\n\t\t\t\t\t\tconst alternativeLine = obtainMatchingAlternativeLine(currentMove, move);\n\t\t\t\t\t\tif (alternativeLine) {\n\t\t\t\t\t\t\treturn alternativeLine;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcurrentMove.alternativeLines.push([]);\n\t\t\t\t\t\t\tconst newMove = { ...move, path: [...move.path, currentMove.alternativeLines.length - 1, 0] };\n\t\t\t\t\t\t\tpath = newMove.path.slice();\n\t\t\t\t\t\t\treturn this.setNewMove({ ...parameters, move: newMove });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tmoveWrapper.push(move);\n\t\t\t\t\taddBoardSnapshot(parameters, this.currentMove);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet key: keyof MoveWrapper;\n\t\t\t\tfor (key in move) {\n\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(move, key)) assignMoveWrapperKey(moveWrapper, key, move[key]);\n\t\t\t\t}\n\t\t\t\taddBoardSnapshot(parameters, this.currentMove);\n\t\t\t}\n\n\t\t\treturn path;\n\t\t},\n\t\tgetBoardSnapshot(move: MoveWrapper | -1) {\n\t\t\tif (move === -1) {\n\t\t\t\treturn startingSnapshot;\n\t\t\t} else {\n\t\t\t\treturn snapshots.get(move);\n\t\t\t}\n\t\t},\n\t\tdeleteMove(path: number[]) {\n\t\t\tlet items: MoveWrapper[] = [];\n\t\t\tconst moveWrapper = this.getMove(path.slice(0, -1));\n\t\t\tif (!moveWrapper) return;\n\t\t\tconst finalIndex = path[path.length - 1];\n\t\t\tif (Array.isArray(moveWrapper)) {\n\t\t\t\titems = [...moveWrapper.splice(finalIndex, moveWrapper.length - finalIndex)];\n\t\t\t} else {\n\t\t\t\tif (moveWrapper.alternativeLines.length > 0) {\n\t\t\t\t\titems = moveWrapper.alternativeLines.splice(path[path.length - 1], 1)[0];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstripDeletedMoveHashes(items, this.currentMove);\n\t\t\tstripEmptyAlternativeLines();\n\t\t\tconst newCurrentMove = alterCurrentPath(this.currentMove, path);\n\t\t\tthis.currentMove = newCurrentMove.length === 0 ? [-1] : newCurrentMove;\n\t\t},\n\t\tgetHash(preliminaryHashString: string): number {\n\t\t\tconst hash = boardHashes.get(preliminaryHashString);\n\t\t\tif (hash === undefined) return 0;\n\n\t\t\tlet totalCount = 0;\n\t\t\tfor (const line of hash) {\n\t\t\t\tfor (let i = 0; i < line.length; i++) {\n\t\t\t\t\tif (i + (1 % 2) !== 0 && i === line.length - 1) {\n\t\t\t\t\t\ttotalCount++;\n\t\t\t\t\t} else if (line[i] !== this.currentMove[i]) break;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn totalCount;\n\t\t},\n\t\tstringifyMove(moveWrapper: MoveWrapper, dimension: number) {\n\t\t\tconst snapshot = this.getBoardSnapshot(moveWrapper);\n\t\t\tif (!snapshot) {\n\t\t\t\tconsole.error(\"No snapshot assigned when moveWrapper is called\");\n\t\t\t\treturn \"\";\n\t\t\t}\n\n\t\t\tlet key: keyof typeof moveNotation;\n\t\t\tfor (key in moveNotation) {\n\t\t\t\tif (!Object.prototype.hasOwnProperty.call(moveNotation, key)) continue;\n\t\t\t\tmoveWrapper.cachedNames[key] = moveNotation[key](moveWrapper, snapshot, dimension);\n\t\t\t}\n\t\t},\n\t\taugmentMoveWithMetadata(parameters: { move: Move; board: Board; makeMoveFunction: () => PostMoveResults }) {\n\t\t\tconst { move, board, makeMoveFunction } = parameters;\n\t\t\tconst standardMove = move.find<MoveData>((m): m is MoveData => verifyStandardMove(m));\n\t\t\tconst movingPiece = standardMove ? board.board[standardMove.startCoordinates[0]][standardMove.startCoordinates[1]] : pawnPieceString;\n\t\t\tconst capturedPieces = standardMove ? board.data.getCapturedPieces(standardMove).length !== 0 : false;\n\t\t\tconst postMoveResults = makeMoveFunction();\n\t\t\tconst deadColors: PlayerBooleanTuple = [...board.data.fenOptions.tag(\"dead\")];\n\t\t\tconst currentSideToMove = board.data.sideToMove,\n\t\t\t\tcurrentMove = board.moves.getMove(board.moves.currentMove);\n\t\t\tassertValidMove(currentMove);\n\t\t\tif (\n\t\t\t\tboard.moves.currentMove[board.moves.currentMove.length - 1] === 0 ||\n\t\t\t\tfindLastIndex(deadColors, (b) => !b) === currentSideToMove\n\t\t\t) {\n\t\t\t\tconst lastCurrentMoves = board.moves.getMove(board.moves.currentMove.slice(0, -1));\n\t\t\t\tif (!Array.isArray(lastCurrentMoves)) throw new Error(\"The selected move is not within an array\");\n\n\t\t\t\tfor (let i = lastCurrentMoves.length - 1; i >= 0; i--) {\n\t\t\t\t\tconst lastCurrent = lastCurrentMoves[i].metadata.currentFullMove;\n\t\t\t\t\tif (lastCurrent) {\n\t\t\t\t\t\tcurrentMove.metadata.currentFullMove = lastCurrent + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (i === 0) {\n\t\t\t\t\t\tif (currentMove.path.length === 1) {\n\t\t\t\t\t\t\tcurrentMove.metadata.currentFullMove = 1;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst alternativeLineContainer = board.moves.getMove(board.moves.currentMove.slice(0, -3));\n\t\t\t\t\t\t\tif (!Array.isArray(alternativeLineContainer)) throw new Error(\"The selected move is not within an array\");\n\t\t\t\t\t\t\tcurrentMove.metadata.currentFullMove =\n\t\t\t\t\t\t\t\talternativeLineContainer[\n\t\t\t\t\t\t\t\t\tfindLastIndex(alternativeLineContainer, (m) => Boolean(m.metadata.currentFullMove))\n\t\t\t\t\t\t\t\t].metadata.currentFullMove;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurrentMove.metadata.currentSideToMove = currentSideToMove;\n\t\t\tcurrentMove.metadata.isCapture = capturedPieces;\n\t\t\tcurrentMove.metadata.movingPiece = movingPiece;\n\t\t\tfor (const color of colors) {\n\t\t\t\tif (postMoveResults.checkmates[color]) {\n\t\t\t\t\tcurrentMove.metadata.checkmates++;\n\t\t\t\t} else if (postMoveResults.checks[color]) {\n\t\t\t\t\tcurrentMove.metadata.checks++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.stringifyMove(currentMove, Math.max(...board.data.fenOptions.tag(\"dim\")));\n\t\t},\n\t\tconstructPreliminaryHashString(boardObject: Board) {\n\t\t\tconst { board, data } = boardObject;\n\t\t\tlet builder = \"\";\n\t\t\tbuilder += data.sideToMove;\n\t\t\tlet key: keyof FENOptionsTags;\n\t\t\tfor (key in data.fenOptions.tags) {\n\t\t\t\tconst tag = data.fenOptions.tags[key];\n\t\t\t\tif (!verifyDynamicFENOptionKey(tag, key)) continue;\n\t\t\t\tconst serializedForm = tag.serialize();\n\t\t\t\tif (serializedForm) builder += serializedForm;\n\t\t\t}\n\t\t\tbuilder = board.reduce((p, n) => p + n.map((ps) => ps.value || \"-\").join(\"\"), builder);\n\t\t\treturn builder;\n\t\t}\n\t};\n};\n\nexport type MoveTreeInterface = ReturnType<typeof createMoveTree>;\n","import { BoardSnapshot, compareCoordinates, PreGeneratedAttacks } from \"../Board/BoardInterface\";\nimport type { Coordinate, NumericColor } from \"../GameInformation/GameUnits/GameUnits\";\nimport { pawnPieceString, PieceString, PieceStringObject } from \"../GameInformation/GameUnits/PieceString\";\nimport { moveNotation } from \"./MoveNotationStringifier\";\n\nexport enum SpecialMove {\n\tCastlingKingside,\n\tCastlingQueenside,\n\tEnPassant\n}\nexport enum InternalMoveSignature {\n\tResign = \"R\",\n\tTimeout = \"T\",\n\tClaimWin = \"C\",\n\tDrawByAgreement = \"D\",\n\tStalemate = \"S\",\n\tPass = \"P\",\n\tTeamsCheckmate = \"#\"\n}\n\nexport type MoveComponent = InternalMove | MoveData | DroppingMove;\nexport type Move = [MoveComponent, ...MoveComponent[]];\nexport const verifyRequiredMove = (move: MoveComponent[]): move is Move => move.length > 0;\n\nexport type HighlightArrow = [color: NumericColor, startCoordinate: Coordinate, endCoordinate: Coordinate];\nexport type HighlightSquare = [color: NumericColor, coordinate: Coordinate];\ninterface GeneralMetadata {\n\tcurrentSideToMove: NumericColor;\n\tcurrentFullMove?: number;\n\tplayerClock?: number;\n\thighlightedArrows: HighlightArrow[];\n\thighlightedSquares: HighlightSquare[];\n}\nexport interface MoveWrapperMetadata extends GeneralMetadata {\n\tmovingPiece: PieceString;\n\tisCapture: boolean;\n\tchecks: number;\n\tcheckmates: number;\n\tannotation?: string;\n}\n\nexport interface MoveWrapper {\n\tmoveData: Move;\n\talternativeLines: MoveWrapper[][];\n\tcomment: string;\n\tpath: number[];\n\tmetadata: MoveWrapperMetadata;\n\tcachedNames: Record<keyof typeof moveNotation, string>;\n}\n\nexport function verifyMoveWrapperProperties(moveWrapper: Partial<MoveWrapper>): moveWrapper is MoveWrapper {\n\treturn Boolean(\n\t\tmoveWrapper.alternativeLines && moveWrapper.comment !== undefined && moveWrapper.path && moveWrapper.metadata && moveWrapper.moveData\n\t);\n}\n\ntype DistributiveMove<T> = T extends object ? T[] : never;\nexport type DistributiveMoveArray = DistributiveMove<MoveComponent>;\ninterface ChainableMove {\n\tnextChainedMoves?: DistributiveMoveArray;\n\tisForcedContinuation?: boolean;\n\tisIrreversible?: boolean;\n}\n\nexport interface MoveData extends ChainableMove {\n\tstartCoordinates: Coordinate;\n\tendCoordinates: Coordinate;\n\tpromotion?: PieceString[];\n\tspecialType?: SpecialMove | undefined;\n}\n\nexport interface DroppingMove extends ChainableMove {\n\tpiece: PieceString;\n\tendCoordinates: Coordinate;\n}\n\nexport interface InternalMove extends ChainableMove {\n\ttype: InternalMoveSignature;\n}\n\ntype RecursiveHelper<T> = {\n\t[P in keyof T]: T[P] extends PieceString ? PieceStringObject : StripPieceStringObjects<T[P]>;\n};\nexport type StripPieceStringObjects<T> = T extends object ? RecursiveHelper<T> : T;\n\nexport interface ProcessSafeMoveWrapper {\n\talternativeLines: this[][];\n\tcomment: string;\n\tpath: number[];\n\tcachedNames: Record<keyof typeof moveNotation, string>;\n\tmetadata: GeneralMetadata;\n}\n\nexport function compareMoves(move1: MoveComponent, move2: MoveComponent): boolean {\n\tif (verifyStandardMove(move1)) {\n\t\tif (!verifyStandardMove(move2)) return false;\n\t\treturn (\n\t\t\tcompareCoordinates(move1.startCoordinates, move2.startCoordinates) &&\n\t\t\tcompareCoordinates(move1.endCoordinates, move2.endCoordinates) &&\n\t\t\t(move1.specialType === move2.specialType ||\n\t\t\t\tmove1.specialType === SpecialMove.EnPassant ||\n\t\t\t\tmove2.specialType === SpecialMove.EnPassant)\n\t\t);\n\t} else if (verifyDroppingMove(move1)) {\n\t\tif (!verifyDroppingMove(move2)) return false;\n\t\treturn compareCoordinates(move1.endCoordinates, move2.endCoordinates) && PieceString.comparePieceStrings(move1.piece, move2.piece);\n\t} else if (verifyInternalMove(move1)) {\n\t\tif (!verifyInternalMove(move2)) return false;\n\t\treturn move1.type === move2.type;\n\t}\n\n\tthrow new Error(`Unexpected move signature of first move ${JSON.stringify(move1)}`);\n}\n\nexport function createDummyMoveMetadata(): MoveWrapperMetadata {\n\treturn {\n\t\tisCapture: false,\n\t\tmovingPiece: pawnPieceString,\n\t\tchecks: 0,\n\t\tcheckmates: 0,\n\t\tcurrentSideToMove: 0,\n\t\thighlightedArrows: [],\n\t\thighlightedSquares: []\n\t};\n}\n\nexport const createBaseMoveWrapper = (\n\trequiredSettings: { path: number[]; moveData: Move },\n\tsettings: Partial<MoveWrapper> = {}\n): MoveWrapper => {\n\tconst wrapper: MoveWrapper = {\n\t\tpath: requiredSettings.path,\n\t\tmoveData: requiredSettings.moveData,\n\t\tcomment: \"\",\n\t\talternativeLines: [],\n\t\tmetadata: createDummyMoveMetadata(),\n\t\tcachedNames: {\n\t\t\tfullMoveNotation: \"\",\n\t\t\tshortenedMoveNotation: \"\"\n\t\t}\n\t};\n\n\treturn {\n\t\t...wrapper,\n\t\t...settings\n\t};\n};\n\ninterface MoveTypePredicate<T, S extends T> {\n\t(move: StripPieceStringObjects<T>): move is StripPieceStringObjects<S>;\n\t(move: T): move is S;\n}\nexport const verifyInternalMove: MoveTypePredicate<MoveComponent, InternalMove> = (move): move is never => \"type\" in move;\nexport const verifyDroppingMove: MoveTypePredicate<MoveComponent, DroppingMove> = (move): move is never => \"piece\" in move;\nexport const verifyStandardMove: MoveTypePredicate<MoveComponent, MoveData> = (move): move is never => \"startCoordinates\" in move;\nexport const verifyInternalMoveArray: MoveTypePredicate<DistributiveMoveArray, InternalMove[]> = (move): move is never => \"type\" in move[0];\nexport const verifyDroppingMoveArray: MoveTypePredicate<DistributiveMoveArray, DroppingMove[]> = (move): move is never => \"piece\" in move[0];\nexport const verifyStandardMoveArray: MoveTypePredicate<DistributiveMoveArray, MoveData[]> = (move): move is never =>\n\t\"startCoordinates\" in move[0];\n\nexport const getMoveFromPathAndTree = <T extends ProcessSafeMoveWrapper>(moves: T[], path: number[]): T[] | T | undefined => {\n\tif (path.length === 0) return moves;\n\tconst movePath = path.slice();\n\tif (movePath[0] >= moves.length) return;\n\tlet currentSelection = moves[movePath.shift() ?? 0];\n\twhile (movePath.length > 0) {\n\t\tconst currentIndex = movePath.shift();\n\t\tif (currentIndex !== undefined) {\n\t\t\tif (currentIndex >= currentSelection.alternativeLines.length) return;\n\t\t\tconst alternativeLine = currentSelection.alternativeLines[currentIndex];\n\t\t\tconst index = movePath.shift();\n\t\t\tif (index === undefined) {\n\t\t\t\treturn alternativeLine;\n\t\t\t}\n\n\t\t\tif (index >= alternativeLine.length) return;\n\t\t\tcurrentSelection = alternativeLine[index];\n\t\t}\n\t}\n\n\treturn currentSelection;\n};\n\nexport const getLatestChainedMoves = (move: DistributiveMoveArray): MoveComponent[] => {\n\tif (move.length > 0 && move[0].nextChainedMoves) {\n\t\treturn getLatestChainedMoves(move[0].nextChainedMoves);\n\t} else return move;\n};\n\nexport interface MoveTreeSetNewMoveParameters {\n\tmove: MoveWrapper;\n\tsnapshot: MoveTreeRequiredSnapshotValues;\n\tfenDataString: string;\n}\n\nexport interface MoveTreeSnapshot {\n\tboardSnapshot: BoardSnapshot;\n\thash: string;\n\tpregeneratedAttacks: PreGeneratedAttacks;\n}\nexport type MoveTreeRequiredSnapshotValues = Omit<MoveTreeSnapshot, \"hash\">;\n","import { assertNonUndefined, createTuple } from \"@client/ts/baseTypes\";\nimport { findLastIndex } from \"@utils/ArrayUtils\";\nimport type { Board } from \"../Board/Board\";\nimport { SpecialMoveSettings, validateBoardMove } from \"../Board/BoardMoveValidator\";\nimport { colors, getPlayerNameFromColor, totalPlayers, VariantType } from \"../GameInformation/GameData\";\nimport { createPieceFromData } from \"../GameInformation/GameUnits/PieceString\";\nimport { assertValidMove, createMoveTree, MoveTreeInterface, verifyValidMove } from \"./MoveTree\";\nimport { createBaseMoveWrapper, MoveWrapper, SpecialMove, verifyStandardMove } from \"./MoveTreeInterface\";\n\nexport function validateMoveTree(board: Board, moves: MoveTreeInterface): MoveTreeInterface {\n\tconst clonedBoard = board.createClone();\n\tclonedBoard.moves = createMoveTree(clonedBoard.createSnapshot());\n\tclonedBoard.pregenerateAttacks();\n\n\tconst dimension = Math.max(...clonedBoard.data.fenOptions.tag(\"dim\"));\n\tfunction traverse(\n\t\tcurrent: MoveWrapper[],\n\t\tcurrentFullMove = 0,\n\t\tcurrentTimeOnClocks = createTuple(board.gameData.timeControl.baseTime, totalPlayers)\n\t): MoveWrapper[] {\n\t\tconst moves: MoveWrapper[] = [];\n\n\t\tlet previousSideToMove = -1;\n\t\tfor (let i = 0; i < current.length; i++) {\n\t\t\tconst moveWrapper = current[i];\n\n\t\t\tconst { moveData, path, alternativeLines } = moveWrapper;\n\t\t\tconst newMoveWrapper = createBaseMoveWrapper(\n\t\t\t\t{ moveData, path: path.slice() },\n\t\t\t\t{\n\t\t\t\t\tcomment: moveWrapper.comment\n\t\t\t\t}\n\t\t\t);\n\t\t\tlet validationResult: SpecialMoveSettings | undefined;\n\t\t\ttry {\n\t\t\t\tif ((validationResult = validateBoardMove(clonedBoard, moveData) || undefined)) {\n\t\t\t\t\tnewMoveWrapper.moveData = moveData;\n\t\t\t\t} else break;\n\t\t\t} catch {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tlet firstStandardMoveSet = false;\n\t\t\tfor (const moveComponent of moveData) {\n\t\t\t\tif (verifyStandardMove(moveComponent)) {\n\t\t\t\t\tif (moveComponent.promotion) {\n\t\t\t\t\t\tmoveComponent.promotion = moveComponent.promotion.map((p) => {\n\t\t\t\t\t\t\tif (p.isWall()) return p;\n\t\t\t\t\t\t\treturn createPieceFromData(clonedBoard.data.sideToMove, p.piece);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!firstStandardMoveSet) {\n\t\t\t\t\t\tnewMoveWrapper.metadata.movingPiece =\n\t\t\t\t\t\t\tclonedBoard.board[moveComponent.startCoordinates[0]][moveComponent.startCoordinates[1]];\n\t\t\t\t\t\tfirstStandardMoveSet = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (validationResult.hasEnPassant) {\n\t\t\t\t\t\tmoveComponent.specialType = SpecialMove.EnPassant;\n\t\t\t\t\t\tvalidationResult.hasEnPassant = false;\n\t\t\t\t\t\tnewMoveWrapper.metadata.isCapture = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (clonedBoard.data.getCapturedPieces(moveComponent).length > 0) newMoveWrapper.metadata.isCapture = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (i === 0 || findLastIndex(clonedBoard.data.fenOptions.tag(\"dead\"), (b) => !b) === previousSideToMove) {\n\t\t\t\tnewMoveWrapper.metadata.currentFullMove = ++currentFullMove;\n\t\t\t}\n\t\t\tnewMoveWrapper.metadata.currentSideToMove = previousSideToMove = clonedBoard.data.sideToMove;\n\t\t\tconst results = clonedBoard.makeMove(moveData);\n\t\t\tfor (let i = 0; i < totalPlayers; i++) {\n\t\t\t\tif (results.checkmates[i]) {\n\t\t\t\t\tnewMoveWrapper.metadata.checkmates++;\n\t\t\t\t} else if (results.checks[i]) {\n\t\t\t\t\tnewMoveWrapper.metadata.checks++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const line of alternativeLines) {\n\t\t\t\tnewMoveWrapper.alternativeLines.push(traverse(line, currentFullMove, [...currentTimeOnClocks]));\n\t\t\t}\n\n\t\t\tif (moveWrapper.metadata.playerClock) {\n\t\t\t\tcurrentTimeOnClocks[previousSideToMove] -= moveWrapper.metadata.playerClock;\n\t\t\t}\n\t\t\tnewMoveWrapper.metadata = { ...moveWrapper.metadata };\n\t\t\tnewMoveWrapper.metadata.playerClock = currentTimeOnClocks[previousSideToMove];\n\t\t\tconst currentMove = clonedBoard.moves.getMove(newMoveWrapper.path);\n\t\t\tassertValidMove(currentMove);\n\t\t\tcurrentMove.metadata = newMoveWrapper.metadata;\n\t\t\tcurrentMove.comment = moveWrapper.comment;\n\t\t\tclonedBoard.moves.stringifyMove(currentMove, dimension);\n\t\t}\n\n\t\treturn moves;\n\t}\n\n\ttraverse(moves.moves);\n\treturn clonedBoard.moves;\n}\n\nexport function changeGameTermination(board: Board) {\n\tconst currentMove = board.moves.getMove([board.moves.moves.length - 1]);\n\tconst snapshot = board.moves.getBoardSnapshot(verifyValidMove(currentMove) ? currentMove : -1);\n\tassertNonUndefined(snapshot);\n\n\tif (snapshot.boardSnapshot.data.gameOver) {\n\t\tboard.gameData.termination = snapshot.boardSnapshot.data.gameOver;\n\t\tif (board.gameData.result) return;\n\t\tif (board.isTwoPlayer || board.gameType.type === VariantType.Teams) {\n\t\t\tconst currentSnapshot = board.createSnapshot();\n\t\t\tboard.loadSnapshot(snapshot.boardSnapshot);\n\t\t\tboard.gameData.result = board.data.getCurrentResult();\n\t\t\tboard.loadSnapshot(currentSnapshot);\n\t\t} else {\n\t\t\tconst currentResults: string[] = [];\n\t\t\tconst dead = board.data.fenOptions.tag(\"dead\"),\n\t\t\t\tresigned = board.data.fenOptions.tag(\"resigned\"),\n\t\t\t\twb = board.data.fenOptions.tag(\"wb\"),\n\t\t\t\tpoints = snapshot.boardSnapshot.data.points;\n\t\t\tfor (const color of colors) {\n\t\t\t\tif (dead[color] || resigned[color]) continue;\n\t\t\t\tcurrentResults.push(`${getPlayerNameFromColor(color, wb)}: ${points[color]}`);\n\t\t\t}\n\t\t\tboard.gameData.result = currentResults.join(\" – \");\n\t\t}\n\t}\n}\n","import { boardDimension } from \"@moveGeneration/GameInformation/GameData\";\nimport type { NumericColor, Coordinate } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport type { FENData } from \"../FENData/FENData\";\nimport { deadColorIndex, PieceString } from \"../GameInformation/GameUnits/PieceString\";\nimport type { VariantHandlerTarget } from \"../VariantRules/VariantRuleInterface\";\nimport type { ControlConfiguration } from \"@moveGeneration/PieceControl/PieceControlInterface\";\nimport {\n\tAttackType,\n\tPieceControlConfiguration,\n\tPieceControlGeneratedMove,\n\tPieceControlHooks,\n\tPieceControlInternalMove\n} from \"./PieceControlInterface\";\n\nexport class PieceControl implements VariantHandlerTarget<PieceControl> {\n\tcolor: NumericColor;\n\tsliding: Coordinate[];\n\tjumping: Coordinate[];\n\treadonly hooks: PieceControlHooks;\n\tmoves: PieceControlGeneratedMove[];\n\trayGenCache: Coordinate[];\n\tbaseRankActive: boolean;\n\timmunePieces: [boolean, boolean, boolean, boolean];\n\tfenData!: FENData;\n\n\tboard!: PieceString[][];\n\ti!: number;\n\tj!: number;\n\n\t__baseClass: PieceControl;\n\tinitDecoratorSettings() {\n\t\t/* no-op */\n\t}\n\t/*---------------------------------- INITIALIZATION -----------------------------------------*/\n\n\tconstructor() {\n\t\tthis.moves = [];\n\t\tthis.color = 0;\n\t\tthis.sliding = [];\n\t\tthis.jumping = [];\n\t\tthis.rayGenCache = [];\n\t\tthis.hooks = {\n\t\t\tuseTrajectory: undefined,\n\t\t\tusePerspective: undefined,\n\t\t\tusePawnLogic: undefined,\n\t\t\tuseHopping: false\n\t\t};\n\n\t\tthis.baseRankActive = false;\n\t\tthis.immunePieces = [false, false, false, false];\n\t\tthis.__baseClass = this;\n\t}\n\n\tconfigure(configuration: ControlConfiguration) {\n\t\tthis.color = configuration.color;\n\t\tthis.immunePieces = configuration.immunePieces;\n\t\t[this.i, this.j] = configuration.coordinates;\n\t\tconst baseRankCalc = [13 - this.i, this.j, this.i, 13 - this.j][this.color] - this.fenData.fenOptions.tag(\"pawnBaseRank\");\n\t\tthis.baseRankActive = configuration.baseRank ?? (baseRankCalc === -1 || baseRankCalc === -2);\n\t\tthis.board = configuration.board;\n\t}\n\n\tsetFENData(fenData: FENData) {\n\t\tthis.fenData = fenData;\n\t}\n\n\tprivate isRayTrace(attackType: AttackType) {\n\t\treturn attackType === AttackType.RayTrace || attackType === AttackType.RayTraceLimited;\n\t}\n\n\t/*---------------------------------- INITIALIZATION -----------------------------------------*/\n\t/*-------------------------------------------------------------------------------------------*/\n\t/*--------------------------------- MOVE GENERATION -----------------------------------------*/\n\n\tprivate modifyDisplacements(i: number, j: number): Coordinate {\n\t\tconst baseDisplacements: Coordinate[] = [\n\t\t\t[i, j],\n\t\t\t[j, -i],\n\t\t\t[-i, -j],\n\t\t\t[-j, i]\n\t\t];\n\t\treturn baseDisplacements[this.color];\n\t}\n\n\tprivate pushMove(settings: PieceControlInternalMove): void {\n\t\tif (\n\t\t\t!settings.isRayGen &&\n\t\t\tthis.hooks.usePawnLogic &&\n\t\t\tthis.hooks.usePawnLogic.promotionRanks &&\n\t\t\tthis.hooks.usePawnLogic.promotionRanks[this.color] === (this.color % 2 === 0 ? settings.i : settings.j) &&\n\t\t\tthis.hooks.usePawnLogic.promotionPieces\n\t\t) {\n\t\t\tthis.moves.push({\n\t\t\t\tmove: [settings.i, settings.j, this.hooks.usePawnLogic.promotionPieces.join(\"\")],\n\t\t\t\tirreversible: settings.irreversible ?? false\n\t\t\t});\n\t\t\treturn;\n\t\t} else {\n\t\t\tthis.moves.push({\n\t\t\t\tmove: [settings.i, settings.j],\n\t\t\t\tirreversible: settings.irreversible ?? false\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected generateSlidingAttack(settings: PieceControlConfiguration): void {\n\t\tlet [displacementI, displacementJ] = settings.displacement,\n\t\t\tlimit = settings.limit ?? Infinity;\n\t\tconst rayGenCache = settings.rayGenCache,\n\t\t\tspecial = settings.special ?? AttackType.Normal;\n\n\t\tlet rayTraceLimit = 0;\n\t\tif (this.hooks.usePerspective?.[this.color]) {\n\t\t\t[displacementI, displacementJ] = this.modifyDisplacements(displacementI, displacementJ);\n\t\t}\n\n\t\tlet startI = this.i + displacementI,\n\t\t\tstartJ = this.j + displacementJ;\n\t\tconst iLength = this.board[0].length,\n\t\t\tjLength = this.board.length;\n\t\tconst isRayGen = rayGenCache ?? this.isRayTrace(special);\n\n\t\twhile (limit > 0 && startI >= 0 && startI < iLength && startJ >= 0 && startJ < jLength) {\n\t\t\t// TODO add trajectories?\n\t\t\tif (this.getMovePossibility({ displacement: [startI, startJ], special, rayGenCache })) {\n\t\t\t\tthis.pushMove({ i: startI, j: startJ, isRayGen: Boolean(isRayGen), irreversible: settings.irreversible });\n\t\t\t}\n\n\t\t\tif (special === AttackType.RayTraceLimited && !this.board[startI][startJ].isEmpty()) {\n\t\t\t\trayTraceLimit++;\n\t\t\t\tif (rayTraceLimit === 2) break;\n\t\t\t}\n\t\t\tif (!this.isRayTrace(special) && !this.board[startI][startJ].isEmpty()) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tstartI += displacementI;\n\t\t\tstartJ += displacementJ;\n\t\t\tlimit--;\n\t\t}\n\t}\n\n\tprotected generateJumpAttack(settings: PieceControlConfiguration): void {\n\t\tlet [displacementI, displacementJ] = settings.displacement;\n\t\tconst rayGenCache = settings.rayGenCache,\n\t\t\tsquareBlockingIndex = settings.squareBlockingIndex,\n\t\t\tspecial = settings.special ?? AttackType.Normal;\n\t\tif (this.hooks.usePerspective?.[this.color]) {\n\t\t\t[displacementI, displacementJ] = this.modifyDisplacements(displacementI, displacementJ);\n\t\t}\n\n\t\tconst startI = this.i + displacementI,\n\t\t\tstartJ = this.j + displacementJ;\n\t\tconst isRayGen = rayGenCache ?? this.isRayTrace(special);\n\t\tlet isTestPassed = true;\n\n\t\tif (this.hooks.useTrajectory && squareBlockingIndex !== undefined) {\n\t\t\tconst trajectory = this.hooks.useTrajectory[squareBlockingIndex];\n\t\t\tlet trajectoryX, trajectoryY;\n\t\t\tif (this.hooks.usePerspective?.[this.color]) {\n\t\t\t\t[trajectoryX, trajectoryY] = this.modifyDisplacements(trajectory[0], trajectory[1]);\n\t\t\t} else {\n\t\t\t\t(trajectoryX = trajectory[0]), (trajectoryY = trajectory[1]);\n\t\t\t}\n\n\t\t\tif (!this.getMovePossibility({ displacement: [this.i + trajectoryX, this.j + trajectoryY], special, rayGenCache })) {\n\t\t\t\tisTestPassed = false;\n\t\t\t}\n\t\t}\n\n\t\tif (isTestPassed && this.getMovePossibility({ displacement: [startI, startJ], special, rayGenCache })) {\n\t\t\tthis.pushMove({ i: startI, j: startJ, isRayGen: Boolean(isRayGen), irreversible: settings.irreversible });\n\t\t}\n\t}\n\n\tgetMovePossibility(configuration: PieceControlConfiguration): boolean {\n\t\tconst {\n\t\t\tdisplacement: [i, j],\n\t\t\trayGenCache,\n\t\t\tspecial\n\t\t} = configuration;\n\t\tif (i < 0 || i >= boardDimension || j < 0 || j >= boardDimension) return false;\n\n\t\tconst piece = this.board[i][j];\n\t\tif (!piece.isEmpty() && piece.color !== deadColorIndex && !rayGenCache && !this.isRayTrace(special ?? AttackType.Normal)) {\n\t\t\tif (this.immunePieces[piece.color] || this.fenData.fenOptions.tag(\"zombieImmune\")[piece.color]) return false;\n\t\t}\n\n\t\tconst pushTo = () => {\n\t\t\tif (rayGenCache) {\n\t\t\t\tthis.rayGenCache.push(rayGenCache);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t\tif (special === undefined || special === AttackType.Normal) {\n\t\t\tif (!piece.isWall()) {\n\t\t\t\treturn pushTo();\n\t\t\t}\n\t\t} else if (special === AttackType.RayGen) {\n\t\t\tif (!piece.isEmpty()) {\n\t\t\t\treturn pushTo();\n\t\t\t}\n\t\t} else if (special === AttackType.AttackOnly) {\n\t\t\tif (!piece.isEmpty() && !piece.isWall()) {\n\t\t\t\treturn pushTo();\n\t\t\t}\n\t\t} else if (special === AttackType.MoveOnly) {\n\t\t\tif (piece.isEmpty()) {\n\t\t\t\treturn pushTo();\n\t\t\t}\n\t\t} else if (this.isRayTrace(special)) {\n\t\t\treturn pushTo();\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/*--------------------------------- MOVE GENERATION -----------------------------------------*/\n\t/*-------------------------------------------------------------------------------------------*/\n\t/*------------------------------- OUTPUT GENERATION -----------------------------------------*/\n\n\tgetPossibleCells(): void {\n\t\tif (this.hooks.useHopping) {\n\t\t\tthis.sliding.forEach((displacement) =>\n\t\t\t\tthis.generateSlidingAttack({ displacement, special: AttackType.RayGen, rayGenCache: [...displacement] })\n\t\t\t);\n\n\t\t\tconst moves = this.moves.slice();\n\t\t\tthis.moves = [];\n\t\t\tmoves.forEach((s, i) => {\n\t\t\t\tconst startI = s.move[0] + this.rayGenCache[i][0];\n\t\t\t\tconst startJ = s.move[1] + this.rayGenCache[i][1];\n\t\t\t\tif (this.getMovePossibility({ displacement: [startI, startJ] })) {\n\t\t\t\t\tthis.pushMove({ i: startI, j: startJ });\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.rayGenCache = [];\n\t\t} else {\n\t\t\tthis.sliding.forEach((a) => this.generateSlidingAttack({ displacement: a }));\n\t\t\tthis.jumping.forEach((a) => this.generateJumpAttack({ displacement: a }));\n\t\t}\n\t}\n\n\trayGenJumpingAttacks(): PieceControlGeneratedMove[] {\n\t\tthis.jumping.forEach((a) => this.generateJumpAttack({ displacement: a, special: AttackType.RayTrace }));\n\t\treturn this.moves.splice(0);\n\t}\n\n\trayGenSlidingAttacks(trace?: AttackType): PieceControlGeneratedMove[][] {\n\t\tconst slidingLines: PieceControlGeneratedMove[][] = [];\n\n\t\tthis.sliding.forEach((a) => {\n\t\t\tthis.generateSlidingAttack({ displacement: a, special: trace });\n\t\t\tif (this.moves.length !== 0) {\n\t\t\t\tslidingLines.push(this.moves.splice(0));\n\t\t\t}\n\t\t});\n\n\t\treturn slidingLines;\n\t}\n\n\tgetPseudoLegalMoves(): PieceControlGeneratedMove[] {\n\t\tthis.getPossibleCells();\n\t\treturn this.moves.splice(0);\n\t}\n\n\t/*------------------------------- OUTPUT GENERATION -----------------------------------------*/\n}\n","import { createTuple } from \"@client/ts/baseTypes\";\nimport type { PlayerBooleanTuple } from \"@moveGeneration/Board/Board\";\nimport { totalPlayers } from \"@moveGeneration/GameInformation/GameData\";\nimport type { NumericColor } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport { initializeBoardSquares } from \"../../BaseInterfaces\";\nimport type { FENData } from \"../FENData/FENData\";\nimport { emptyPieceString, PieceString } from \"../GameInformation/GameUnits/PieceString\";\nimport { decorateClassWithVariants, VariantRule } from \"../VariantRules/VariantRule\";\nimport type { VariantDataRules } from \"../VariantRules/VariantRuleInterface\";\nimport { copyVariantRules } from \"../VariantRules/VariantRuleSetup\";\nimport { PieceControl } from \"./PieceControl\";\nimport { PieceLetter, pieceControlConfigSettings, ControlConfiguration } from \"./PieceControlInterface\";\n\nexport class PieceControlConfigurator {\n\tprivate readonly _control: PieceControl;\n\tprivate readonly _isConfigured: ControlConfiguration;\n\tconstructor(control: PieceControl) {\n\t\tthis._control = control;\n\t\tthis._isConfigured = {\n\t\t\tcoordinates: [0, 0],\n\t\t\tboard: initializeBoardSquares(() => emptyPieceString),\n\t\t\timmunePieces: createTuple(false, totalPlayers),\n\t\t\tcolor: 0\n\t\t};\n\t}\n\n\tsetCoordinates(x: number, y: number) {\n\t\tthis._isConfigured.coordinates = [x, y];\n\t\treturn this;\n\t}\n\tsetBaseImmunePieces(immune: PlayerBooleanTuple) {\n\t\tthis._isConfigured.immunePieces = immune;\n\t\treturn this;\n\t}\n\tsetColor(color: NumericColor) {\n\t\tthis._isConfigured.color = color;\n\t\treturn this;\n\t}\n\tsetBoard(board: PieceString[][]) {\n\t\tthis._isConfigured.board = board;\n\t\treturn this;\n\t}\n\n\tconstructPieceControl(): PieceControl {\n\t\tthis._control.configure(this._isConfigured);\n\t\treturn this._control;\n\t}\n}\n\nexport class PieceControlBuilder {\n\tprivate readonly _generalConfig: {\n\t\tfenData?: FENData;\n\t\tvariantRules?: Array<VariantRule<typeof PieceControl, keyof VariantDataRules>>;\n\t};\n\tconstructor() {\n\t\tthis._generalConfig = {};\n\t}\n\n\tsetFENData(fenData: FENData) {\n\t\tthis._generalConfig.fenData = fenData;\n\t}\n\tsetVariantRules<T extends VariantRule<typeof PieceControl, keyof VariantDataRules>>(rules: T[]) {\n\t\tthis._generalConfig.variantRules = rules;\n\t}\n\tcreatePieceControlWrap(letter: PieceLetter): () => PieceControlConfigurator {\n\t\tconst information = pieceControlConfigSettings[letter];\n\t\tconst control = new information.construct();\n\t\tif (!this._generalConfig.fenData || !this._generalConfig.variantRules) throw new Error(\"PieceControl builder setup is not complete\");\n\t\tcontrol.setFENData(this._generalConfig.fenData);\n\n\t\tconst decoratedControl = decorateClassWithVariants<typeof PieceControl>(\n\t\t\tcontrol,\n\t\t\tPieceControl,\n\t\t\tcopyVariantRules(this._generalConfig.variantRules)\n\t\t);\n\n\t\treturn () => {\n\t\t\treturn new PieceControlConfigurator(decoratedControl);\n\t\t};\n\t}\n}\n","import type { Coordinate } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport { PieceControl } from \"./PieceControl\";\nimport { AttackType, createPieceDeclaration, dameLetter, defaultPieces, grasshopperPieceLetter, pawnPieceLetter } from \"./PieceControlInterface\";\n\nconst orthogonalMoves: Coordinate[] = [\n\t[-1, 0],\n\t[1, 0],\n\t[0, 1],\n\t[0, -1]\n];\nconst diagonalMoves: Coordinate[] = [\n\t[-1, -1],\n\t[1, 1],\n\t[-1, 1],\n\t[1, -1]\n];\nconst kingDirections = [...orthogonalMoves, ...diagonalMoves];\nconst knightHops: Coordinate[] = [\n\t[-1, -2],\n\t[-2, -1],\n\t[-1, 2],\n\t[2, -1],\n\t[-2, 1],\n\t[1, -2],\n\t[1, 2],\n\t[2, 1]\n];\nconst camelHops: Coordinate[] = [\n\t[-1, -3],\n\t[-3, -1],\n\t[-1, 3],\n\t[3, -1],\n\t[-3, 1],\n\t[1, -3],\n\t[1, 3],\n\t[3, 1]\n];\nconst dabbabaHops: Coordinate[] = [\n\t[-2, 0],\n\t[2, 0],\n\t[0, 2],\n\t[0, -2]\n];\nconst alfilHops: Coordinate[] = [\n\t[-2, -2],\n\t[2, 2],\n\t[-2, 2],\n\t[2, -2]\n];\nexport const initPieceControlDeclarations = () => {\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.sliding = orthogonalMoves;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 5,\n\t\t\t\tteamsPoints: 5,\n\t\t\t\tbotFFAValue: 7,\n\t\t\t\tbotTeamsValue: 7\n\t\t\t},\n\t\t\tpiece: defaultPieces.rook,\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: false,\n\t\t\t\tisSliding: true,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: false\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Rook\",\n\t\t\t\tshortName: defaultPieces.rook.toLowerCase()\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.sliding = diagonalMoves;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 5,\n\t\t\t\tteamsPoints: 4,\n\t\t\t\tbotFFAValue: 6,\n\t\t\t\tbotTeamsValue: 6\n\t\t\t},\n\t\t\tpiece: defaultPieces.bishop,\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: false,\n\t\t\t\tisSliding: true,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: true\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Bishop\",\n\t\t\t\tshortName: defaultPieces.bishop.toLowerCase()\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.jumping = kingDirections;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 3,\n\t\t\t\tteamsPoints: 0,\n\t\t\t\tbotFFAValue: 3,\n\t\t\t\tbotTeamsValue: 3\n\t\t\t},\n\t\t\tpiece: defaultPieces.king,\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: true,\n\t\t\t\tisSliding: false,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: false\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"King\",\n\t\t\t\tshortName: defaultPieces.king.toLowerCase()\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.sliding = kingDirections;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 9,\n\t\t\t\tteamsPoints: 10,\n\t\t\t\tbotFFAValue: 14,\n\t\t\t\tbotTeamsValue: 15\n\t\t\t},\n\t\t\tpiece: defaultPieces.queen,\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: false,\n\t\t\t\tisSliding: true,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: false\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Queen\",\n\t\t\t\tshortName: defaultPieces.queen.toLowerCase()\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.sliding = kingDirections;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 9,\n\t\t\t\tteamsPoints: 10,\n\t\t\t\tbotFFAValue: 13,\n\t\t\t\tbotTeamsValue: 13\n\t\t\t},\n\t\t\tpiece: dameLetter,\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: false,\n\t\t\t\tisSliding: true,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: false\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"1-point queen\",\n\t\t\t\tshortName: dameLetter.toLowerCase()\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.jumping = knightHops;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 3,\n\t\t\t\tteamsPoints: 3,\n\t\t\t\tbotFFAValue: 4,\n\t\t\t\tbotTeamsValue: 4\n\t\t\t},\n\t\t\tpiece: defaultPieces.knight,\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: true,\n\t\t\t\tisSliding: false,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: false\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Knight\",\n\t\t\t\tshortName: defaultPieces.knight.toLowerCase()\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.jumping = [...knightHops, ...kingDirections];\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 5,\n\t\t\t\tteamsPoints: 5,\n\t\t\t\tbotFFAValue: 7,\n\t\t\t\tbotTeamsValue: 7\n\t\t\t},\n\t\t\tpiece: \"M\",\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: true,\n\t\t\t\tisSliding: false,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: false\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"General\",\n\t\t\t\tshortName: \"m\",\n\t\t\t\tdescription: \"combines king and knight\"\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.jumping = diagonalMoves;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 1,\n\t\t\t\tteamsPoints: 1,\n\t\t\t\tbotFFAValue: 0.6,\n\t\t\t\tbotTeamsValue: 0.6\n\t\t\t},\n\t\t\tpiece: \"F\",\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: true,\n\t\t\t\tisSliding: false,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: true\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Ferz\",\n\t\t\t\tshortName: \"f\",\n\t\t\t\tdescription: \"moves one square diagonally\"\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.jumping = orthogonalMoves;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 1,\n\t\t\t\tteamsPoints: 1,\n\t\t\t\tbotFFAValue: 0.4,\n\t\t\t\tbotTeamsValue: 0.4\n\t\t\t},\n\t\t\tpiece: \"W\",\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: true,\n\t\t\t\tisSliding: false,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: false\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Wazir\",\n\t\t\t\tshortName: \"w\",\n\t\t\t\tdescription: \"moves one square horizontally or vertically\"\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.jumping = orthogonalMoves;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 1,\n\t\t\t\tteamsPoints: 1,\n\t\t\t\tbotFFAValue: 0.4,\n\t\t\t\tbotTeamsValue: 0.4\n\t\t\t},\n\t\t\tpiece: \"W\",\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: true,\n\t\t\t\tisSliding: false,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: false\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Wazir\",\n\t\t\t\tshortName: \"w\",\n\t\t\t\tdescription: \"moves one square horizontally or vertically\"\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.jumping = dabbabaHops;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 1,\n\t\t\t\tteamsPoints: 1,\n\t\t\t\tbotFFAValue: 1.6,\n\t\t\t\tbotTeamsValue: 1.6\n\t\t\t},\n\t\t\tpiece: \"S\",\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: true,\n\t\t\t\tisSliding: false,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: true\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Dabbaba\",\n\t\t\t\tshortName: \"s\",\n\t\t\t\tdescription: \"jumps two squares horizontally or vertically\"\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.sliding = dabbabaHops;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 4,\n\t\t\t\tteamsPoints: 4,\n\t\t\t\tbotFFAValue: 5.4,\n\t\t\t\tbotTeamsValue: 5.4\n\t\t\t},\n\t\t\tpiece: \"T\",\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: false,\n\t\t\t\tisSliding: true,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: true\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Dabbaba-rider\",\n\t\t\t\tshortName: \"t\"\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.jumping = alfilHops;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 1,\n\t\t\t\tteamsPoints: 1,\n\t\t\t\tbotFFAValue: 0.5,\n\t\t\t\tbotTeamsValue: 0.5\n\t\t\t},\n\t\t\tpiece: \"I\",\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: true,\n\t\t\t\tisSliding: false,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: true\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Alfil\",\n\t\t\t\tshortName: \"i\",\n\t\t\t\tdescription: \"jumps two squares diagonally\"\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.sliding = alfilHops;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 3,\n\t\t\t\tteamsPoints: 3,\n\t\t\t\tbotFFAValue: 4.5,\n\t\t\t\tbotTeamsValue: 4.5\n\t\t\t},\n\t\t\tpiece: \"J\",\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: false,\n\t\t\t\tisSliding: true,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: true\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Alfil-rider\",\n\t\t\t\tshortName: \"j\"\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.jumping = [...alfilHops, ...dabbabaHops];\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 3,\n\t\t\t\tteamsPoints: 3,\n\t\t\t\tbotFFAValue: 3,\n\t\t\t\tbotTeamsValue: 3\n\t\t\t},\n\t\t\tpiece: \"Y\",\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: true,\n\t\t\t\tisSliding: false,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: true\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Alibaba\",\n\t\t\t\tshortName: \"y\",\n\t\t\t\tdescription: \"combines alfil and dabbaba\"\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.sliding = [...alfilHops, ...dabbabaHops];\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 6,\n\t\t\t\tteamsPoints: 6,\n\t\t\t\tbotFFAValue: 6.2,\n\t\t\t\tbotTeamsValue: 6.2\n\t\t\t},\n\t\t\tpiece: \"Z\",\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: false,\n\t\t\t\tisSliding: true,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: true\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Alibaba-rider\",\n\t\t\t\tshortName: \"z\"\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.jumping = knightHops;\n\t\t\t\tthis.sliding = kingDirections;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 12,\n\t\t\t\tteamsPoints: 12,\n\t\t\t\tbotFFAValue: 17,\n\t\t\t\tbotTeamsValue: 17\n\t\t\t},\n\t\t\tpiece: \"A\",\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: true,\n\t\t\t\tisSliding: true,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: false\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Amazon\",\n\t\t\t\tshortName: \"a\",\n\t\t\t\tdescription: \"combines queen and knight\"\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.jumping = camelHops;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 3,\n\t\t\t\tteamsPoints: 3,\n\t\t\t\tbotFFAValue: 4.2,\n\t\t\t\tbotTeamsValue: 4.2\n\t\t\t},\n\t\t\tpiece: \"C\",\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: true,\n\t\t\t\tisSliding: false,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: true\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Camel\",\n\t\t\t\tshortName: \"c\",\n\t\t\t\tdescription: \"an elongated 3-1 knight\"\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.jumping = knightHops;\n\t\t\t\tthis.sliding = orthogonalMoves;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 7,\n\t\t\t\tteamsPoints: 7,\n\t\t\t\tbotFFAValue: 10,\n\t\t\t\tbotTeamsValue: 10\n\t\t\t},\n\t\t\tpiece: \"E\",\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: true,\n\t\t\t\tisSliding: true,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: false\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Chancellor\",\n\t\t\t\tshortName: \"a\",\n\t\t\t\tdescription: \"combines rook and knight\"\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.jumping = knightHops;\n\t\t\t\tthis.sliding = diagonalMoves;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 7,\n\t\t\t\tteamsPoints: 7,\n\t\t\t\tbotFFAValue: 9,\n\t\t\t\tbotTeamsValue: 9\n\t\t\t},\n\t\t\tpiece: \"H\",\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: true,\n\t\t\t\tisSliding: true,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: false\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Archbishop\",\n\t\t\t\tshortName: \"h\",\n\t\t\t\tdescription: \"combines bishop and knight\"\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.sliding = knightHops;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 7,\n\t\t\t\tteamsPoints: 7,\n\t\t\t\tbotFFAValue: 10,\n\t\t\t\tbotTeamsValue: 10\n\t\t\t},\n\t\t\tpiece: \"O\",\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: false,\n\t\t\t\tisSliding: true,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: false\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Knight-rider\",\n\t\t\t\tshortName: \"o\"\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.sliding = camelHops;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 7,\n\t\t\t\tteamsPoints: 7,\n\t\t\t\tbotFFAValue: 8,\n\t\t\t\tbotTeamsValue: 8\n\t\t\t},\n\t\t\tpiece: \"L\",\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: false,\n\t\t\t\tisSliding: true,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: true\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Camel-rider\",\n\t\t\t\tshortName: \"l\"\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.jumping = [...camelHops, ...knightHops];\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 5,\n\t\t\t\tteamsPoints: 5,\n\t\t\t\tbotFFAValue: 8,\n\t\t\t\tbotTeamsValue: 8\n\t\t\t},\n\t\t\tpiece: \"V\",\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: true,\n\t\t\t\tisSliding: false,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: false\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Wildebeest\",\n\t\t\t\tshortName: \"v\",\n\t\t\t\tdescription: \"combines camel and knight\"\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.hooks.usePerspective = [true, true, true, true];\n\t\t\t\tthis.hooks.usePawnLogic = {};\n\t\t\t}\n\n\t\t\tgetPossibleCells() {\n\t\t\t\tthis.generateJumpAttack({ displacement: [-1, -1], special: AttackType.AttackOnly });\n\t\t\t\tthis.generateJumpAttack({ displacement: [-1, 1], special: AttackType.AttackOnly });\n\t\t\t\tthis.generateSlidingAttack({\n\t\t\t\t\tdisplacement: [-1, 0],\n\t\t\t\t\tspecial: AttackType.MoveOnly,\n\t\t\t\t\tlimit: this.baseRankActive ? 2 : 1,\n\t\t\t\t\tirreversible: true\n\t\t\t\t});\n\t\t\t\treturn this.moves;\n\t\t\t}\n\n\t\t\trayGenJumpingAttacks() {\n\t\t\t\tthis.generateJumpAttack({ displacement: [-1, -1], special: AttackType.RayTrace });\n\t\t\t\tthis.generateJumpAttack({ displacement: [-1, 1], special: AttackType.RayTrace });\n\t\t\t\tconst moves = this.moves.slice();\n\t\t\t\tthis.moves = [];\n\t\t\t\treturn moves;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 1,\n\t\t\t\tteamsPoints: 1,\n\t\t\t\tbotFFAValue: 1,\n\t\t\t\tbotTeamsValue: 0.4\n\t\t\t},\n\t\t\tpiece: pawnPieceLetter,\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: true,\n\t\t\t\tisSliding: false,\n\t\t\t\tisPawn: true,\n\t\t\t\tisColorBound: false\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Pawn\",\n\t\t\t\tshortName: pawnPieceLetter.toLowerCase()\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.hooks.usePerspective = [true, true, true, true];\n\t\t\t\tthis.hooks.usePawnLogic = {};\n\t\t\t}\n\n\t\t\tgetPossibleCells() {\n\t\t\t\tthis.generateSlidingAttack({\n\t\t\t\t\tdisplacement: [-1, -1],\n\t\t\t\t\tspecial: AttackType.MoveOnly,\n\t\t\t\t\tlimit: this.baseRankActive ? 2 : 1,\n\t\t\t\t\tirreversible: true\n\t\t\t\t});\n\t\t\t\tthis.generateSlidingAttack({\n\t\t\t\t\tdisplacement: [-1, 1],\n\t\t\t\t\tspecial: AttackType.MoveOnly,\n\t\t\t\t\tlimit: this.baseRankActive ? 2 : 1,\n\t\t\t\t\tirreversible: true\n\t\t\t\t});\n\t\t\t\tthis.generateJumpAttack({ displacement: [-1, -1], special: AttackType.AttackOnly });\n\t\t\t\treturn this.moves;\n\t\t\t}\n\n\t\t\trayGenJumpingAttacks() {\n\t\t\t\tthis.generateJumpAttack({ displacement: [-1, -1], special: AttackType.RayTrace });\n\t\t\t\tconst moves = this.moves.slice();\n\t\t\t\tthis.moves = [];\n\t\t\t\treturn moves;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 1,\n\t\t\t\tteamsPoints: 1,\n\t\t\t\tbotFFAValue: 1,\n\t\t\t\tbotTeamsValue: 0.4\n\t\t\t},\n\t\t\tpiece: \"α\",\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: true,\n\t\t\t\tisSliding: false,\n\t\t\t\tisPawn: true,\n\t\t\t\tisColorBound: false\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Berolina\",\n\t\t\t\tshortName: \"alpha\",\n\t\t\t\tdescription: \"a pawn that moves diagonally and captures forwards\"\n\t\t\t}\n\t\t}\n\t});\n\n\tconst stoneGeneralControl = createPieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.hooks.usePerspective = [true, true, true, true];\n\t\t\t\tthis.hooks.usePawnLogic = {};\n\t\t\t}\n\n\t\t\tgetPossibleCells() {\n\t\t\t\tthis.generateSlidingAttack({\n\t\t\t\t\tdisplacement: [-1, -1],\n\t\t\t\t\tspecial: AttackType.MoveOnly,\n\t\t\t\t\tlimit: this.baseRankActive ? 2 : 0,\n\t\t\t\t\tirreversible: true\n\t\t\t\t});\n\t\t\t\tthis.generateSlidingAttack({\n\t\t\t\t\tdisplacement: [-1, 1],\n\t\t\t\t\tspecial: AttackType.MoveOnly,\n\t\t\t\t\tlimit: this.baseRankActive ? 2 : 0,\n\t\t\t\t\tirreversible: true\n\t\t\t\t});\n\t\t\t\tthis.generateJumpAttack({\n\t\t\t\t\tdisplacement: [-1, -1],\n\t\t\t\t\tirreversible: true\n\t\t\t\t});\n\t\t\t\tthis.generateJumpAttack({\n\t\t\t\t\tdisplacement: [-1, 1],\n\t\t\t\t\tirreversible: true\n\t\t\t\t});\n\t\t\t\treturn this.moves;\n\t\t\t}\n\n\t\t\trayGenJumpingAttacks() {\n\t\t\t\tthis.generateJumpAttack({ displacement: [-1, -1], special: AttackType.RayTrace });\n\t\t\t\tthis.generateJumpAttack({ displacement: [-1, 1], special: AttackType.RayTrace });\n\t\t\t\tconst moves = this.moves.slice();\n\t\t\t\tthis.moves = [];\n\t\t\t\treturn moves;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 1,\n\t\t\t\tteamsPoints: 1,\n\t\t\t\tbotFFAValue: 1,\n\t\t\t\tbotTeamsValue: 0.4\n\t\t\t},\n\t\t\tpiece: \"γ\",\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: true,\n\t\t\t\tisSliding: false,\n\t\t\t\tisPawn: true,\n\t\t\t\tisColorBound: false\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Stone General\",\n\t\t\t\tshortName: \"gamma\",\n\t\t\t\tdescription: \"a pawn that moves and captures diagonally\"\n\t\t\t}\n\t\t}\n\t});\n\n\tconst soldierControl = createPieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.hooks.usePerspective = [true, true, true, true];\n\t\t\t\tthis.hooks.usePawnLogic = {};\n\t\t\t}\n\n\t\t\tgetPossibleCells() {\n\t\t\t\tthis.generateSlidingAttack({\n\t\t\t\t\tdisplacement: [-1, 0],\n\t\t\t\t\tspecial: AttackType.MoveOnly,\n\t\t\t\t\tlimit: this.baseRankActive ? 2 : 0,\n\t\t\t\t\tirreversible: true\n\t\t\t\t});\n\t\t\t\tthis.generateJumpAttack({\n\t\t\t\t\tdisplacement: [-1, 0],\n\t\t\t\t\tirreversible: true\n\t\t\t\t});\n\t\t\t\treturn this.moves;\n\t\t\t}\n\n\t\t\trayGenJumpingAttacks() {\n\t\t\t\tthis.generateJumpAttack({ displacement: [-1, 0], special: AttackType.RayTrace });\n\t\t\t\tconst moves = this.moves.slice();\n\t\t\t\tthis.moves = [];\n\t\t\t\treturn moves;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 1,\n\t\t\t\tteamsPoints: 1,\n\t\t\t\tbotFFAValue: 1,\n\t\t\t\tbotTeamsValue: 0.4\n\t\t\t},\n\t\t\tpiece: \"β\",\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: true,\n\t\t\t\tisSliding: false,\n\t\t\t\tisPawn: true,\n\t\t\t\tisColorBound: false\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Soldier\",\n\t\t\t\tshortName: \"beta\",\n\t\t\t\tdescription: \"a pawn that moves and captures forwards only\"\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.hooks.usePerspective = [true, true, true, true];\n\t\t\t\tthis.hooks.usePawnLogic = {};\n\t\t\t}\n\n\t\t\tgetPossibleCells() {\n\t\t\t\tstoneGeneralControl.getPossibleCells.call(this);\n\t\t\t\tsoldierControl.getPossibleCells.call(this);\n\t\t\t\treturn this.moves;\n\t\t\t}\n\n\t\t\trayGenJumpingAttacks() {\n\t\t\t\tstoneGeneralControl.rayGenJumpingAttacks.call(this);\n\t\t\t\tsoldierControl.rayGenJumpingAttacks.call(this);\n\t\t\t\tconst moves = this.moves.slice();\n\t\t\t\tthis.moves = [];\n\t\t\t\treturn moves;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 1,\n\t\t\t\tteamsPoints: 1,\n\t\t\t\tbotFFAValue: 1,\n\t\t\t\tbotTeamsValue: 0.4\n\t\t\t},\n\t\t\tpiece: \"δ\",\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: false,\n\t\t\t\tisJumping: true,\n\t\t\t\tisSliding: false,\n\t\t\t\tisPawn: true,\n\t\t\t\tisColorBound: false\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Sergeant\",\n\t\t\t\tshortName: \"delta\",\n\t\t\t\tdescription: \"a pawn that moves and captures forwards and diagonally\"\n\t\t\t}\n\t\t}\n\t});\n\n\tconst xiangqiHorseControl = createPieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.hooks.useTrajectory = [\n\t\t\t\t\t[-1, 0],\n\t\t\t\t\t[1, 0],\n\t\t\t\t\t[0, 1],\n\t\t\t\t\t[0, -1]\n\t\t\t\t];\n\t\t\t}\n\n\t\t\tgetPossibleCells() {\n\t\t\t\tthis.generateJumpAttack({ displacement: [-1, -2], special: AttackType.Normal, squareBlockingIndex: 3 });\n\t\t\t\tthis.generateJumpAttack({ displacement: [1, -2], special: AttackType.Normal, squareBlockingIndex: 3 });\n\t\t\t\tthis.generateJumpAttack({ displacement: [-1, 2], special: AttackType.Normal, squareBlockingIndex: 2 });\n\t\t\t\tthis.generateJumpAttack({ displacement: [1, 2], special: AttackType.Normal, squareBlockingIndex: 2 });\n\t\t\t\tthis.generateJumpAttack({ displacement: [2, -1], special: AttackType.Normal, squareBlockingIndex: 1 });\n\t\t\t\tthis.generateJumpAttack({ displacement: [2, 1], special: AttackType.Normal, squareBlockingIndex: 1 });\n\t\t\t\tthis.generateJumpAttack({ displacement: [-2, -1], special: AttackType.Normal, squareBlockingIndex: 0 });\n\t\t\t\tthis.generateJumpAttack({ displacement: [-2, 1], special: AttackType.Normal, squareBlockingIndex: 0 });\n\n\t\t\t\treturn this.moves;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 2,\n\t\t\t\tteamsPoints: 2,\n\t\t\t\tbotFFAValue: 2.1,\n\t\t\t\tbotTeamsValue: 2.1\n\t\t\t},\n\t\t\tpiece: \"U\",\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: true,\n\t\t\t\tisJumping: true,\n\t\t\t\tisSliding: false,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: false\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Xiangqi horse\",\n\t\t\t\tshortName: \"u\",\n\t\t\t\tdescription: \"moves one square orthogonally and then one diagonally\"\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.hooks.useTrajectory = [\n\t\t\t\t\t[-1, 0],\n\t\t\t\t\t[1, 0],\n\t\t\t\t\t[0, 1],\n\t\t\t\t\t[0, -1]\n\t\t\t\t];\n\t\t\t}\n\n\t\t\tgetPossibleCells() {\n\t\t\t\txiangqiHorseControl.getPossibleCells.call(this);\n\t\t\t\tthis.sliding.forEach((displacement) => {\n\t\t\t\t\tthis.generateSlidingAttack({ displacement });\n\t\t\t\t});\n\n\t\t\t\treturn this.moves;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 6,\n\t\t\t\tteamsPoints: 6,\n\t\t\t\tbotFFAValue: 7.5,\n\t\t\t\tbotTeamsValue: 7.5\n\t\t\t},\n\t\t\tpiece: \"Δ\",\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: true,\n\t\t\t\tisJumping: true,\n\t\t\t\tisSliding: true,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: false\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Dragon bishop\",\n\t\t\t\tshortName: \"deltaUpper\",\n\t\t\t\tdescription: \"combines bishop and xiangqi horse\"\n\t\t\t}\n\t\t}\n\t});\n\n\tcreatePieceDeclaration({\n\t\tbaseClassRef: class extends PieceControl {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthis.hooks.useHopping = true;\n\t\t\t\tthis.sliding = kingDirections;\n\t\t\t}\n\t\t},\n\t\tconfiguration: {\n\t\t\tpoints: {\n\t\t\t\tsinglesPoints: 3,\n\t\t\t\tteamsPoints: 3,\n\t\t\t\tbotFFAValue: 5.8,\n\t\t\t\tbotTeamsValue: 5.8\n\t\t\t},\n\t\t\tpiece: grasshopperPieceLetter,\n\t\t\tmoveGenerationSettings: {\n\t\t\t\tisComplex: true,\n\t\t\t\tisJumping: true,\n\t\t\t\tisSliding: false,\n\t\t\t\tisPawn: false,\n\t\t\t\tisColorBound: false\n\t\t\t},\n\t\t\tnaming: {\n\t\t\t\tname: \"Grasshopper\",\n\t\t\t\tshortName: grasshopperPieceLetter.toLowerCase(),\n\t\t\t\tdescription: \"jumps in any direction hopping over the first piece, landing immediately behind it\"\n\t\t\t}\n\t\t}\n\t});\n};\n","import { copyClass } from \"@client/ts/utils/ObjectUtils\";\nimport { verifyFunctionType, importAll, FunctionType } from \"../../../baseTypes\";\nimport type {\n\tAllowedSuperClasses,\n\tVariantDataRules,\n\tVariantRuleInformation,\n\tVariantRuleHandler,\n\tAllowedHandlerClasses,\n\tVariantRuleAllowedChecks\n} from \"./VariantRuleInterface\";\n\nexport interface VariantRulePublicProperties<K extends keyof VariantDataRules> {\n\treadonly information: VariantRuleInformation<K>;\n\treadonly parameterValue: VariantDataRules[K];\n}\n\nconst verifyHandlerProperty = <C extends AllowedSuperClasses>(\n\thandler: VariantRuleHandler<InstanceType<C>>,\n\tkey: PropertyKey\n): key is keyof typeof handler => key in handler;\nconst verifyPrototypeProperty = <C extends AllowedSuperClasses>(\n\tsuperClass: C,\n\tkey: PropertyKey\n): key is keyof AllowedSuperClasses[\"prototype\"] => key in superClass.prototype;\n\nexport abstract class VariantRule<C extends AllowedSuperClasses, K extends keyof VariantDataRules> {\n\tdeclare [\"constructor\"]: new (...args: unknown[]) => VariantRule<C, K>;\n\n\treadonly dependencies = new Map<new (...args: unknown[]) => VariantRule<AllowedSuperClasses, keyof VariantDataRules>, unknown[]>();\n\tstatic readonly variantRuleList: Array<\n\t\tnew (...args: unknown[]) => VariantRule<AllowedSuperClasses, keyof VariantDataRules> & VariantRuleHandler<AllowedHandlerClasses>\n\t> = [];\n\tprotected static initVariantRule(\n\t\trv: new (...args: unknown[]) => VariantRule<AllowedSuperClasses, keyof VariantDataRules> & VariantRuleHandler<AllowedHandlerClasses>\n\t) {\n\t\tVariantRule.variantRuleList.push(rv);\n\t}\n\tprotected decorator!: InstanceType<C>;\n\tprotected wrappingDecorators: Array<VariantRuleHandler<InstanceType<C>>> = [];\n\n\tinitializeBaseHandler(handler: InstanceType<C>) {\n\t\tthis.decorator = handler;\n\t}\n\n\tinitializeWrappingHandler(handler: VariantRule<C, keyof VariantDataRules> & VariantRuleHandler<InstanceType<C>>) {\n\t\tthis.wrappingDecorators.push(handler);\n\t}\n\n\tinjectIntoBaseClass(callback: (this: InstanceType<C>) => void) {\n\t\treturn callback.bind(this.decorator);\n\t}\n\n\tcallHandler<K extends keyof this & keyof InstanceType<C>>(\n\t\tmethod: K,\n\t\targs: IArguments\n\t): this[K] extends FunctionType ? ReturnType<this[K]> : never {\n\t\tfor (const decorator of this.wrappingDecorators) {\n\t\t\tif (!verifyHandlerProperty(decorator, method)) continue;\n\t\t\tconst decoratorMethod = decorator[method];\n\t\t\tif (!verifyFunctionType(decoratorMethod)) continue;\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-return\n\t\t\treturn decoratorMethod.call(decorator, ...args);\n\t\t}\n\n\t\tconst decoratorType: C = this.getDecoratorType();\n\t\tif (!verifyPrototypeProperty(decoratorType, method)) throw new Error(\"Method called to callHandler is not a part of prototype\");\n\t\tconst prototypeMethod: unknown = decoratorType.prototype[method];\n\t\tif (!verifyFunctionType(prototypeMethod)) throw new Error(\"Method called to callHandler is not a part of prototype\");\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-return\n\t\treturn prototypeMethod.call(this.decorator, ...args);\n\t}\n\n\tabstract matchesPGNDeclaration(match: string): boolean;\n\tabstract getPublicProperties(): VariantRulePublicProperties<K>;\n\tabstract getDecoratorType(): C;\n\tabstract serializeToParsingForm(): string;\n\tabstract isDisabled(parameters: VariantRuleAllowedChecks): boolean;\n\tgetParametrizedOptions?(): VariantDataRules[K] extends boolean ? never : Map<string, VariantDataRules[K]>;\n\n\tgetInsufficientMaterialData() {\n\t\treturn {\n\t\t\tisPartiallyDisabled: false,\n\t\t\tisDisabled: false\n\t\t};\n\t}\n}\n\nconst objectPrototype = new Set(Reflect.ownKeys(Reflect.getPrototypeOf({}) ?? []));\nexport function decorateClassWithVariants<C extends AllowedSuperClasses>(\n\tbaseClass: InstanceType<C>,\n\tclassReference: new (...args: ConstructorParameters<C>) => InstanceType<C>,\n\tvariants: Array<VariantRule<C, keyof VariantDataRules> & VariantRuleHandler<InstanceType<C>>>\n): InstanceType<C> {\n\tif (variants.length === 0) return baseClass;\n\n\tconst decoratorProperties = copyClass(baseClass, classReference, true);\n\tconst methods = new Set<keyof InstanceType<C>>();\n\tdecoratorProperties.initDecoratorSettings = () => {\n\t\t// Do nothing, this method only exists for the purpose of being overridden\n\t};\n\tmethods.add(\"initDecoratorSettings\");\n\tconst lastInheritedMethods = new Set<string | symbol>();\n\n\tlet basePrototype: object | null = null;\n\tconst verifyKeyInDecoratorProperties = (k: PropertyKey): k is keyof InstanceType<C> =>\n\t\ttypeof k !== \"number\" && k in decoratorProperties && !objectPrototype.has(k) && !lastInheritedMethods.has(k);\n\twhile ((basePrototype = Reflect.getPrototypeOf(basePrototype ?? baseClass))) {\n\t\tReflect.ownKeys(basePrototype).forEach((k) => {\n\t\t\tif (verifyKeyInDecoratorProperties(k)) {\n\t\t\t\tdecoratorProperties[k] = baseClass[k];\n\t\t\t\tmethods.add(k);\n\t\t\t\tlastInheritedMethods.add(k);\n\t\t\t}\n\t\t});\n\t}\n\n\tconst verifyOwnProperty = (k: PropertyKey): k is keyof InstanceType<C> => k in baseClass;\n\tfor (const property of Object.getOwnPropertyNames(baseClass)) {\n\t\tif (!verifyOwnProperty(property)) throw new Error(\"Expected prototype to not be overridden\");\n\n\t\tconst localProperty = property;\n\t\tObject.defineProperty(decoratorProperties, property, {\n\t\t\tget: function (): (typeof baseClass)[keyof typeof baseClass] {\n\t\t\t\treturn baseClass[localProperty];\n\t\t\t},\n\t\t\tset: function (v: InstanceType<C>[string & keyof InstanceType<C>]) {\n\t\t\t\tbaseClass[localProperty] = v;\n\t\t\t},\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false\n\t\t});\n\t}\n\tdecoratorProperties.__baseClass = baseClass;\n\n\tfor (const method of methods) {\n\t\tconst variantRuleChain = variants.filter((rv) => method in rv);\n\t\tif (variantRuleChain.length === 0) continue;\n\t\tvariantRuleChain[0].initializeBaseHandler(decoratorProperties);\n\t\tconst variantDecorator = variantRuleChain.reduce((p, c) => {\n\t\t\tc.initializeBaseHandler(decoratorProperties);\n\t\t\tc.initializeWrappingHandler(p);\n\t\t\treturn c;\n\t\t});\n\n\t\tif (method in decoratorProperties) {\n\t\t\tconst variant = Reflect.get(variantDecorator, method);\n\t\t\tif (typeof variant === \"function\") {\n\t\t\t\tconst variantFunc = variant;\n\t\t\t\tif (verifyFunctionType(decoratorProperties[method])) {\n\t\t\t\t\tObject.defineProperty(decoratorProperties, method, {\n\t\t\t\t\t\tvalue: (...args: unknown[]) => {\n\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-call\n\t\t\t\t\t\t\treturn variantFunc.bind(variantDecorator)(...args);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tenumerable: false,\n\t\t\t\t\t\twritable: false,\n\t\t\t\t\t\tconfigurable: false\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdecoratorProperties.initDecoratorSettings();\n\treturn decoratorProperties;\n}\n\nimportAll(require.context(\"./VariantRuleDefinitions\", true, /\\.ts$/));\n","import type { NumericColor } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport { Board } from \"../../../Board/Board\";\nimport { InternalMove, InternalMoveSignature } from \"../../../MoveTree/MoveTreeInterface\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { VariantRuleAllowedChecks, variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\nimport { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\n\nconst tag = \"allowPassing\";\nexport class AllowPassing extends VariantRule<typeof Board, typeof tag> implements VariantRuleHandler<Board> {\n\tstatic {\n\t\tVariantRule.initVariantRule(AllowPassing);\n\t}\n\n\tgetDecoratorType() {\n\t\treturn Board;\n\t}\n\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Allow Passing\",\n\t\t\t\tdescription: \"Players can pass instead of making a move\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.minor,\n\t\t\t\tdisplayIcon: chessGlyphIndex.pause\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\treturn /^AllowPassing$/i.test(match);\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn \"AllowPassing\";\n\t}\n\n\tisDisabled({ variantDataRules }: VariantRuleAllowedChecks): boolean {\n\t\treturn variantDataRules.giveaway;\n\t}\n\n\tgetAllowedInternalMoves(sideToMove: NumericColor = this.decorator.data.sideToMove): InternalMove[] {\n\t\tconst passingMoves = this.decorator.isKingInCheck(sideToMove) ? [] : [{ type: InternalMoveSignature.Pass }];\n\t\tfor (const decorator of this.wrappingDecorators) {\n\t\t\tif (decorator.getAllowedInternalMoves) {\n\t\t\t\treturn [...passingMoves, ...decorator.getAllowedInternalMoves(sideToMove)];\n\t\t\t}\n\t\t}\n\t\treturn [...passingMoves, ...Board.prototype.getAllowedInternalMoves.call(this.decorator, sideToMove)];\n\t}\n}\n","import { VariantType } from \"@moveGeneration/GameInformation/GameData\";\nimport { Board } from \"../../../Board/Board\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { VariantRuleAllowedChecks, variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\n\nconst tag = \"alternativeTeams\";\nexport class AlternativeTeams extends VariantRule<typeof Board, typeof tag> implements VariantRuleHandler<Board> {\n\tstatic {\n\t\tVariantRule.initVariantRule(AlternativeTeams);\n\t}\n\n\tprivate teammate: number;\n\tconstructor(teammate?: unknown) {\n\t\tsuper();\n\t\tif (typeof teammate === \"number\") {\n\t\t\tthis.teammate = teammate;\n\t\t} else {\n\t\t\tthis.teammate = 2;\n\t\t}\n\t}\n\n\tgetDecoratorType() {\n\t\treturn Board;\n\t}\n\n\tgetPublicProperties() {\n\t\tconst rbTeams = this.teammate === 1;\n\t\tconst teamOne = rbTeams ? \"Red & Blue\" : \"Red & Green\";\n\t\tconst teamTwo = rbTeams ? \"Yellow & Green\" : \"Blue & Yellow\";\n\t\treturn {\n\t\t\tparameterValue: this.teammate,\n\t\t\tinformation: {\n\t\t\t\tname: `Teams`,\n\t\t\t\tdescription: `Alternative Teams: ${teamOne} form a team against ${teamTwo}`,\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.autogenous,\n\t\t\t\tdisplayIcon: \"Đ\"\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\tconst matchArray = match.match(/^Teammate=(1|3)$/);\n\t\tif (matchArray) {\n\t\t\tthis.teammate = Number(matchArray[1]);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn `Teammate=${this.teammate}`;\n\t}\n\n\tisDisabled({ gameType }: VariantRuleAllowedChecks): boolean {\n\t\treturn gameType !== VariantType.Teams;\n\t}\n\n\tgetParametrizedOptions() {\n\t\treturn new Map([\n\t\t\t[\"Red & Yellow v Blue & Green\", 2],\n\t\t\t[\"Red & Blue v Yellow & Green\", 1],\n\t\t\t[\"Red & Green v Blue & Yellow\", 3]\n\t\t]);\n\t}\n\n\tinitDecoratorSettings() {\n\t\tconst teamSettings = this.decorator.gameType.teamSettings;\n\t\tif (this.teammate === 1) {\n\t\t\tteamSettings.firstTeamColors = [true, true, false, false];\n\t\t\tteamSettings.secondTeamColors = [false, false, true, true];\n\t\t} else if (this.teammate === 3) {\n\t\t\tteamSettings.firstTeamColors = [true, false, false, true];\n\t\t\tteamSettings.secondTeamColors = [false, true, true, false];\n\t\t}\n\n\t\tfor (const decorator of this.wrappingDecorators) decorator.initDecoratorSettings?.();\n\t}\n}\n","import { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\nimport { Board } from \"../../../Board/Board\";\nimport { stringifyCoordinate } from \"../../../Board/BoardInterface\";\nimport type { PostMoveResults } from \"../../../FENData/FENDataInterface\";\nimport { InternalMoveSignature } from \"../../../MoveTree/MoveTreeInterface\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\n\nconst tag = \"barePieceRule\";\nexport class BarePieceRule extends VariantRule<typeof Board, typeof tag> implements VariantRuleHandler<Board> {\n\tstatic {\n\t\tVariantRule.initVariantRule(BarePieceRule);\n\t}\n\n\tgetDecoratorType() {\n\t\treturn Board;\n\t}\n\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Bare piece rule\",\n\t\t\t\tdescription: \"Players with only one remaining piece are forfeit\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.minor,\n\t\t\t\tdisplayIcon: chessGlyphIndex.filter\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\treturn /^BarePieceLoses$/i.test(match);\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\tgetInsufficientMaterialData() {\n\t\treturn {\n\t\t\tisPartiallyDisabled: true,\n\t\t\tisDisabled: false\n\t\t} as const;\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn \"BarePieceLoses\";\n\t}\n\n\tmakeMove(): PostMoveResults {\n\t\tconst {\n\t\t\tdata: { sideToMove },\n\t\t\tboard,\n\t\t\tpreGeneratedAttacks\n\t\t} = this.decorator;\n\t\tconst results = this.callHandler(\"makeMove\", arguments);\n\n\t\tconst playerPieces = this.decorator.getPlayerPieces()[sideToMove];\n\t\tif (playerPieces.length === 1) {\n\t\t\tconst pieceMovements = preGeneratedAttacks[sideToMove].pieceMovements.get(stringifyCoordinate(playerPieces[0]));\n\t\t\tif (pieceMovements) {\n\t\t\t\tfor (const { move: coordinate } of pieceMovements) {\n\t\t\t\t\tif (board[coordinate[0]][coordinate[1]].isPiece()) {\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn this.decorator.makeMove([{ type: InternalMoveSignature.Resign }]);\n\t\t\t}\n\t\t}\n\n\t\treturn results;\n\t}\n}\n","import type { BoardSquares } from \"@client/ts/logic/BaseInterfaces\";\nimport { Board } from \"../../../Board/Board\";\nimport { DisplaySettings } from \"../../../Board/BoardInterface\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { VariantRuleAllowedChecks, variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\nimport { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\n\nconst tag = \"blindfold\";\nexport class Blindfold extends VariantRule<typeof Board, typeof tag> implements VariantRuleHandler<Board> {\n\tstatic {\n\t\tVariantRule.initVariantRule(Blindfold);\n\t}\n\n\tgetDecoratorType() {\n\t\treturn Board;\n\t}\n\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Blindfold\",\n\t\t\t\tdescription: \"Pieces are invisible\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.visual,\n\t\t\t\tdisplayIcon: chessGlyphIndex.blindfold\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\treturn /^Blindfold$/i.test(match);\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn \"Blindfold\";\n\t}\n\n\tisDisabled({ variantDataRules }: VariantRuleAllowedChecks): boolean {\n\t\treturn variantDataRules.fogOfWar;\n\t}\n\n\tgetSquareVisibility(): BoardSquares<DisplaySettings[]> {\n\t\tconst squareVisibility: BoardSquares<DisplaySettings[]> = this.callHandler(\"getSquareVisibility\", arguments);\n\t\treturn squareVisibility.map((r, i) =>\n\t\t\tr.map((v, j) => {\n\t\t\t\tif (this.decorator.board[i][j].isWall()) {\n\t\t\t\t\treturn v;\n\t\t\t\t} else {\n\t\t\t\t\treturn [...v, DisplaySettings.Blindfolded];\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n}\n","import { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\nimport { Board } from \"../../../Board/Board\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { VariantRuleAllowedChecks, variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\n\nconst tag = \"captureTheKing\";\nexport class CaptureTheKing extends VariantRule<typeof Board, typeof tag> implements VariantRuleHandler<Board> {\n\tstatic {\n\t\tVariantRule.initVariantRule(CaptureTheKing);\n\t}\n\n\tgetDecoratorType() {\n\t\treturn Board;\n\t}\n\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Capture the King\",\n\t\t\t\tdescription: \"To checkmate, kings must be captured\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.minor,\n\t\t\t\tdisplayIcon: chessGlyphIndex.king\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\treturn /^CaptureTheKing$/i.test(match);\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn \"CaptureTheKing\";\n\t}\n\n\tisDisabled({ variantDataRules }: VariantRuleAllowedChecks): boolean {\n\t\treturn variantDataRules.giveaway || variantDataRules.taboo;\n\t}\n\n\tgetInsufficientMaterialData() {\n\t\treturn {\n\t\t\tisPartiallyDisabled: true,\n\t\t\tisDisabled: false\n\t\t} as const;\n\t}\n\n\tisKingInCheck(): boolean {\n\t\treturn false;\n\t}\n\n\tisTheMoveLegal(): boolean {\n\t\treturn true;\n\t}\n}\n","import { getVerticalPlacementModulus, isVerticalPlacement } from \"@client/ts/logic/BaseInterfaces\";\nimport { NumericColor } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport { Board } from \"../../../Board/Board\";\nimport { boardDimension, colors } from \"../../../GameInformation/GameData\";\nimport type { PieceString } from \"../../../GameInformation/GameUnits/PieceString\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\nimport { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\n\nconst tag = \"chess960\";\nexport class Chess960 extends VariantRule<typeof Board, typeof tag> implements VariantRuleHandler<Board> {\n\tstatic {\n\t\tVariantRule.initVariantRule(Chess960);\n\t}\n\n\tprivate static readonly chess960ranges = [\n\t\t...Array.from({ length: 9 }, (_, i) => [960 * (i + 1) + 1, 960 + 960 * (i + 1)]),\n\t\t...Array.from({ length: 5 }, (_, i) => [10000 + 960 * (i + 1) + 1, 10960 + 960 * (i + 1)])\n\t];\n\tprivate static readonly minorPieceCache = (function () {\n\t\tconst minorPieceCache = [];\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\tfor (let j = i + 1; j < 5; j++) {\n\t\t\t\tminorPieceCache.push([i, j]);\n\t\t\t}\n\t\t}\n\t\treturn minorPieceCache;\n\t})();\n\t// prettier-ignore\n\tprivate static readonly pieceMasks = [\n        [404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959],\n        [5, 6, 7, 9, 10, 11, 13, 14, 15, 17, 18, 19, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 49, 50, 51, 53, 54, 55, 57, 58, 59, 61, 62, 63, 65, 66, 67, 69, 70, 71, 73, 74, 75, 77, 78, 79, 81, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95, 101, 102, 103, 105, 106, 107, 109, 110, 111, 113, 114, 115, 129, 130, 131, 145, 146, 147, 161, 162, 163, 177, 178, 179, 197, 198, 199, 201, 202, 203, 205, 206, 207, 209, 210, 211, 225, 226, 227, 241, 242, 243, 257, 258, 259, 273, 274, 275, 293, 294, 295, 297, 298, 299, 301, 302, 303, 305, 306, 307, 321, 322, 323, 337, 338, 339, 353, 354, 355, 369, 370, 371, 421, 422, 423, 425, 426, 427, 429, 430, 431, 437, 438, 439, 441, 442, 443, 445, 446, 447, 453, 454, 455, 457, 458, 459, 461, 462, 463, 469, 470, 471, 473, 474, 475, 477, 478, 479, 517, 518, 519, 521, 522, 523, 525, 526, 527, 533, 534, 535, 537, 538, 539, 541, 542, 543, 549, 550, 551, 553, 554, 555, 557, 558, 559, 565, 566, 567, 569, 570, 571, 573, 574, 575, 613, 614, 615, 617, 618, 619, 621, 622, 623, 629, 630, 631, 633, 634, 635, 637, 638, 639, 645, 646, 647, 649, 650, 651, 653, 654, 655, 661, 662, 663, 665, 666, 667, 669, 670, 671],\n        [4, 5, 6, 7, 20, 21, 22, 23, 36, 37, 38, 39, 52, 53, 54, 55, 68, 69, 70, 71, 84, 85, 86, 87, 100, 101, 102, 103, 116, 117, 118, 119, 132, 133, 134, 135, 148, 149, 150, 151, 164, 165, 166, 167, 180, 181, 182, 183, 196, 197, 198, 199, 212, 213, 214, 215, 228, 229, 230, 231, 244, 245, 246, 247, 260, 261, 262, 263, 276, 277, 278, 279, 292, 293, 294, 295, 308, 309, 310, 311, 324, 325, 326, 327, 340, 341, 342, 343, 356, 357, 358, 359, 372, 373, 374, 375, 388, 389, 390, 391, 404, 405, 406, 407, 420, 421, 422, 423, 436, 437, 438, 439, 452, 453, 454, 455, 468, 469, 470, 471, 484, 485, 486, 487, 500, 501, 502, 503, 516, 517, 518, 519, 532, 533, 534, 535, 548, 549, 550, 551, 564, 565, 566, 567, 580, 581, 582, 583, 596, 597, 598, 599, 612, 613, 614, 615, 628, 629, 630, 631, 644, 645, 646, 647, 660, 661, 662, 663, 676, 677, 678, 679, 692, 693, 694, 695, 708, 709, 710, 711, 724, 725, 726, 727, 740, 741, 742, 743, 756, 757, 758, 759, 772, 773, 774, 775, 788, 789, 790, 791, 804, 805, 806, 807, 820, 821, 822, 823, 836, 837, 838, 839, 852, 853, 854, 855, 868, 869, 870, 871, 884, 885, 886, 887, 900, 901, 902, 903, 916, 917, 918, 919, 932, 933, 934, 935, 948, 949, 950, 951],\n        [16, 20, 34, 35, 38, 39, 40, 44, 58, 59, 62, 63, 112, 116, 130, 131, 134, 135, 136, 140, 154, 155, 158, 159, 208, 212, 226, 227, 230, 231, 232, 236, 250, 251, 254, 255, 304, 308, 322, 323, 326, 327, 328, 332, 346, 347, 350, 351, 400, 404, 418, 419, 422, 423, 424, 428, 442, 443, 446, 447, 496, 500, 514, 515, 518, 519, 520, 524, 538, 539, 542, 543, 592, 596, 610, 611, 614, 615, 616, 620, 634, 635, 638, 639, 688, 692, 706, 707, 710, 711, 712, 716, 730, 731, 734, 735, 784, 788, 802, 803, 806, 807, 808, 812, 826, 827, 830, 831, 880, 884, 898, 899, 902, 903, 904, 908, 922, 923, 926, 927],\n        [14, 15, 30, 31, 46, 47, 62, 63, 66, 67, 70, 71, 76, 77, 82, 83, 86, 87, 92, 93, 110, 111, 126, 127, 142, 143, 158, 159, 162, 163, 166, 167, 172, 173, 178, 179, 182, 183, 188, 189, 194, 195, 198, 199, 204, 205, 210, 211, 214, 215, 220, 221, 226, 227, 230, 231, 236, 237, 240, 241, 244, 245, 256, 257, 260, 261, 272, 273, 276, 277, 290, 291, 294, 295, 300, 301, 306, 307, 310, 311, 316, 317, 322, 323, 326, 327, 332, 333, 336, 337, 340, 341, 352, 353, 356, 357, 368, 369, 372, 373, 398, 399, 414, 415, 430, 431, 446, 447, 450, 451, 454, 455, 460, 461, 466, 467, 470, 471, 476, 477, 482, 483, 486, 487, 492, 493, 498, 499, 502, 503, 508, 509, 514, 515, 518, 519, 524, 525, 528, 529, 532, 533, 544, 545, 548, 549, 560, 561, 564, 565, 578, 579, 582, 583, 588, 589, 594, 595, 598, 599, 604, 605, 610, 611, 614, 615, 620, 621, 624, 625, 628, 629, 640, 641, 644, 645, 656, 657, 660, 661, 672, 673, 676, 677, 688, 689, 692, 693, 768, 769, 772, 773, 784, 785, 788, 789, 864, 865, 868, 869, 880, 881, 884, 885],\n        [2, 6, 10, 14, 18, 22, 26, 30, 34, 38, 42, 46, 50, 54, 58, 62, 66, 70, 74, 78, 82, 86, 90, 94, 98, 102, 106, 110, 114, 118, 122, 126, 130, 134, 138, 142, 146, 150, 154, 158, 162, 166, 170, 174, 178, 182, 186, 190, 194, 198, 202, 206, 210, 214, 218, 222, 226, 230, 234, 238, 242, 246, 250, 254, 258, 262, 266, 270, 274, 278, 282, 286, 290, 294, 298, 302, 306, 310, 314, 318, 322, 326, 330, 334, 338, 342, 346, 350, 354, 358, 362, 366, 370, 374, 378, 382, 386, 390, 394, 398, 402, 406, 410, 414, 418, 422, 426, 430, 434, 438, 442, 446, 450, 454, 458, 462, 466, 470, 474, 478, 482, 486, 490, 494, 498, 502, 506, 510, 514, 518, 522, 526, 530, 534, 538, 542, 546, 550, 554, 558, 562, 566, 570, 574, 578, 582, 586, 590, 594, 598, 602, 606, 610, 614, 618, 622, 626, 630, 634, 638, 642, 646, 650, 654, 658, 662, 666, 670, 674, 678, 682, 686, 690, 694, 698, 702, 706, 710, 714, 718, 722, 726, 730, 734, 738, 742, 746, 750, 754, 758, 762, 766, 770, 774, 778, 782, 786, 790, 794, 798, 802, 806, 810, 814, 818, 822, 826, 830, 834, 838, 842, 846, 850, 854, 858, 862, 866, 870, 874, 878, 882, 886, 890, 894, 898, 902, 906, 910, 914, 918, 922, 926, 930, 934, 938, 942, 946, 950, 954, 958],\n        [192, 193, 194, 196, 197, 198, 200, 201, 202, 208, 209, 210, 212, 213, 214, 216, 217, 218, 224, 225, 226, 228, 229, 230, 232, 233, 234, 240, 241, 242, 244, 245, 246, 248, 249, 250, 291, 295, 299, 307, 311, 315, 323, 327, 331, 339, 343, 347, 355, 359, 363, 368, 369, 370, 372, 373, 374, 376, 377, 378, 480, 481, 482, 484, 485, 486, 488, 489, 490, 496, 497, 498, 500, 501, 502, 504, 505, 506, 512, 513, 514, 516, 517, 518, 520, 521, 522, 528, 529, 530, 532, 533, 534, 536, 537, 538, 579, 583, 587, 595, 599, 603, 611, 615, 619, 627, 631, 635, 643, 647, 651, 656, 657, 658, 660, 661, 662, 664, 665, 666, 672, 673, 674, 676, 677, 678, 680, 681, 682, 688, 689, 690, 692, 693, 694, 696, 697, 698, 704, 705, 706, 708, 709, 710, 712, 713, 714, 720, 721, 722, 724, 725, 726, 728, 729, 730, 771, 775, 779, 787, 791, 795, 803, 807, 811, 819, 823, 827, 835, 839, 843, 848, 849, 850, 852, 853, 854, 856, 857, 858, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 931, 935, 939, 944, 945, 946, 948, 949, 950, 952, 953, 954],\n        [1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 20, 21, 22, 24, 25, 26, 28, 29, 30, 32, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 48, 49, 50, 52, 53, 54, 56, 57, 58, 60, 61, 62, 64, 65, 66, 68, 69, 70, 72, 73, 74, 76, 77, 78, 96, 97, 98, 100, 101, 102, 104, 105, 106, 108, 109, 110, 112, 113, 114, 116, 117, 118, 120, 121, 122, 124, 125, 126, 128, 129, 130, 132, 133, 134, 136, 137, 138, 140, 141, 142, 144, 145, 146, 148, 149, 150, 152, 153, 154, 156, 157, 158, 160, 161, 162, 164, 165, 166, 168, 169, 170, 172, 173, 174, 192, 193, 194, 196, 197, 198, 200, 201, 202, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 224, 225, 226, 228, 229, 230, 232, 233, 234, 236, 237, 238, 240, 241, 242, 244, 245, 246, 248, 249, 250, 252, 253, 254, 256, 257, 258, 260, 261, 262, 264, 265, 266, 268, 269, 270, 384, 385, 386, 388, 389, 390, 392, 393, 394, 396, 397, 398, 400, 401, 402, 404, 405, 406, 408, 409, 410, 412, 413, 414, 416, 417, 418, 420, 421, 422, 424, 425, 426, 428, 429, 430, 432, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 450, 452, 453, 454, 456, 457, 458, 460, 461, 462, 480, 481, 482, 484, 485, 486, 488, 489, 490, 492, 493, 494, 496, 497, 498, 500, 501, 502, 504, 505, 506, 508, 509, 510, 512, 513, 514, 516, 517, 518, 520, 521, 522, 524, 525, 526, 528, 529, 530, 532, 533, 534, 536, 537, 538, 540, 541, 542, 544, 545, 546, 548, 549, 550, 552, 553, 554, 556, 557, 558, 672, 673, 674, 676, 677, 678, 680, 681, 682, 684, 685, 686, 688, 689, 690, 692, 693, 694, 696, 697, 698, 700, 701, 702, 704, 705, 706, 708, 709, 710, 712, 713, 714, 716, 717, 718, 720, 721, 722, 724, 725, 726, 728, 729, 730, 732, 733, 734, 736, 737, 738, 740, 741, 742, 744, 745, 746, 748, 749, 750]\n    ];\n\tprivate static readonly c960range = (function () {\n\t\tconst arr = [...Array(961).keys()];\n\t\tarr.shift();\n\t\treturn arr;\n\t})();\n\t// prettier-ignore\n\tprivate static readonly twins = [959, 955, 951, 947, 958, 954, 950, 946, 957, 953, 949, 945, 956, 952, 948, 944, 943, 939, 935, 931, 942, 938, 934, 930, 941, 937, 933, 929, 940, 936, 932, 928, 927, 923, 919, 915, 926, 922, 918, 914, 925, 921, 917, 913, 924, 920, 916, 912, 911, 907, 903, 899, 910, 906, 902, 898, 909, 905, 901, 897, 908, 904, 900, 896, 895, 891, 887, 883, 894, 890, 886, 882, 893, 889, 885, 881, 892, 888, 884, 880, 879, 875, 871, 867, 878, 874, 870, 866, 877, 873, 869, 865, 876, 872, 868, 864, 863, 859, 855, 851, 862, 858, 854, 850, 861, 857, 853, 849, 860, 856, 852, 848, 847, 843, 839, 835, 846, 842, 838, 834, 845, 841, 837, 833, 844, 840, 836, 832, 831, 827, 823, 819, 830, 826, 822, 818, 829, 825, 821, 817, 828, 824, 820, 816, 815, 811, 807, 803, 814, 810, 806, 802, 813, 809, 805, 801, 812, 808, 804, 800, 799, 795, 791, 787, 798, 794, 790, 786, 797, 793, 789, 785, 796, 792, 788, 784, 783, 779, 775, 771, 782, 778, 774, 770, 781, 777, 773, 769, 780, 776, 772, 768, 671, 667, 663, 659, 670, 666, 662, 658, 669, 665, 661, 657, 668, 664, 660, 656, 655, 651, 647, 643, 654, 650, 646, 642, 653, 649, 645, 641, 652, 648, 644, 640, 639, 635, 631, 627, 638, 634, 630, 626, 637, 633, 629, 625, 636, 632, 628, 624, 623, 619, 615, 611, 622, 618, 614, 610, 621, 617, 613, 609, 620, 616, 612, 608, 607, 603, 599, 595, 606, 602, 598, 594, 605, 601, 597, 593, 604, 600, 596, 592, 591, 587, 583, 579, 590, 586, 582, 578, 589, 585, 581, 577, 588, 584, 580, 576, 383, 379, 375, 371, 382, 378, 374, 370, 381, 377, 373, 369, 380, 376, 372, 368, 367, 363, 359, 355, 366, 362, 358, 354, 365, 361, 357, 353, 364, 360, 356, 352, 351, 347, 343, 339, 350, 346, 342, 338, 349, 345, 341, 337, 348, 344, 340, 336, 335, 331, 327, 323, 334, 330, 326, 322, 333, 329, 325, 321, 332, 328, 324, 320, 319, 315, 311, 307, 318, 314, 310, 306, 317, 313, 309, 305, 316, 312, 308, 304, 303, 299, 295, 291, 302, 298, 294, 290, 301, 297, 293, 289, 300, 296, 292, 288, 767, 763, 759, 755, 766, 762, 758, 754, 765, 761, 757, 753, 764, 760, 756, 752, 751, 747, 743, 739, 750, 746, 742, 738, 749, 745, 741, 737, 748, 744, 740, 736, 735, 731, 727, 723, 734, 730, 726, 722, 733, 729, 725, 721, 732, 728, 724, 720, 719, 715, 711, 707, 718, 714, 710, 706, 717, 713, 709, 705, 716, 712, 708, 704, 703, 699, 695, 691, 702, 698, 694, 690, 701, 697, 693, 689, 700, 696, 692, 688, 687, 683, 679, 675, 686, 682, 678, 674, 685, 681, 677, 673, 684, 680, 676, 672, 575, 571, 567, 563, 574, 570, 566, 562, 573, 569, 565, 561, 572, 568, 564, 560, 559, 555, 551, 547, 558, 554, 550, 546, 557, 553, 549, 545, 556, 552, 548, 544, 543, 539, 535, 531, 542, 538, 534, 530, 541, 537, 533, 529, 540, 536, 532, 528, 527, 523, 519, 515, 526, 522, 518, 514, 525, 521, 517, 513, 524, 520, 516, 512, 511, 507, 503, 499, 510, 506, 502, 498, 509, 505, 501, 497, 508, 504, 500, 496, 495, 491, 487, 483, 494, 490, 486, 482, 493, 489, 485, 481, 492, 488, 484, 480, 287, 283, 279, 275, 286, 282, 278, 274, 285, 281, 277, 273, 284, 280, 276, 272, 271, 267, 263, 259, 270, 266, 262, 258, 269, 265, 261, 257, 268, 264, 260, 256, 255, 251, 247, 243, 254, 250, 246, 242, 253, 249, 245, 241, 252, 248, 244, 240, 239, 235, 231, 227, 238, 234, 230, 226, 237, 233, 229, 225, 236, 232, 228, 224, 223, 219, 215, 211, 222, 218, 214, 210, 221, 217, 213, 209, 220, 216, 212, 208, 207, 203, 199, 195, 206, 202, 198, 194, 205, 201, 197, 193, 204, 200, 196, 192, 479, 475, 471, 467, 478, 474, 470, 466, 477, 473, 469, 465, 476, 472, 468, 464, 463, 459, 455, 451, 462, 458, 454, 450, 461, 457, 453, 449, 460, 456, 452, 448, 447, 443, 439, 435, 446, 442, 438, 434, 445, 441, 437, 433, 444, 440, 436, 432, 431, 427, 423, 419, 430, 426, 422, 418, 429, 425, 421, 417, 428, 424, 420, 416, 415, 411, 407, 403, 414, 410, 406, 402, 413, 409, 405, 401, 412, 408, 404, 400, 399, 395, 391, 387, 398, 394, 390, 386, 397, 393, 389, 385, 396, 392, 388, 384, 191, 187, 183, 179, 190, 186, 182, 178, 189, 185, 181, 177, 188, 184, 180, 176, 175, 171, 167, 163, 174, 170, 166, 162, 173, 169, 165, 161, 172, 168, 164, 160, 159, 155, 151, 147, 158, 154, 150, 146, 157, 153, 149, 145, 156, 152, 148, 144, 143, 139, 135, 131, 142, 138, 134, 130, 141, 137, 133, 129, 140, 136, 132, 128, 127, 123, 119, 115, 126, 122, 118, 114, 125, 121, 117, 113, 124, 120, 116, 112, 111, 107, 103, 99, 110, 106, 102, 98, 109, 105, 101, 97, 108, 104, 100, 96, 95, 91, 87, 83, 94, 90, 86, 82, 93, 89, 85, 81, 92, 88, 84, 80, 79, 75, 71, 67, 78, 74, 70, 66, 77, 73, 69, 65, 76, 72, 68, 64, 63, 59, 55, 51, 62, 58, 54, 50, 61, 57, 53, 49, 60, 56, 52, 48, 47, 43, 39, 35, 46, 42, 38, 34, 45, 41, 37, 33, 44, 40, 36, 32, 31, 27, 23, 19, 30, 26, 22, 18, 29, 25, 21, 17, 28, 24, 20, 16, 15, 11, 7, 3, 14, 10, 6, 2, 13, 9, 5, 1, 12, 8, 4, 0];\n\tprivate static readonly legacy = {\n\t\tlegacy2PThreshold: 1000,\n\t\tlegacy2PRank: 3,\n\t\tlegacy4Prank: 0,\n\t\tlegacy2PTakeaway: 6160\n\t} as const;\n\tprivate static readonly displacement = [3, 11];\n\tprivate static createBaseChess960mappings() {\n\t\treturn {\n\t\t\tcolorBoundPieces: [2, 5],\n\t\t\tsupermajorPieces: [3],\n\t\t\tminorPieces: [1, 6],\n\t\t\troyalPiece: [4],\n\t\t\tedgePieces: [0, 7]\n\t\t};\n\t}\n\n\tprivate static regExp = /Chess960=(\\d{1,5})/i;\n\tprivate positionID: number;\n\tconstructor(positionID?: unknown) {\n\t\tsuper();\n\t\tif (typeof positionID === \"number\") {\n\t\t\tthis.positionID = positionID;\n\t\t} else {\n\t\t\tthis.positionID = -1;\n\t\t}\n\t}\n\n\tgetDecoratorType() {\n\t\treturn Board;\n\t}\n\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: this.positionID,\n\t\t\tinformation: {\n\t\t\t\tname: \"Chess960\",\n\t\t\t\tdescription: \"Initial position with randomly shuffled pieces on home ranks\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.startingPosition,\n\t\t\t\tdisplayIcon: chessGlyphIndex.chess960\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\tconst matchArray = match.match(Chess960.regExp);\n\t\tif (matchArray) {\n\t\t\tconst newID = Number(matchArray[1]);\n\t\t\tif (newID < 0 || newID > 15760) return false;\n\t\t\tthis.positionID = newID;\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn `Chess960=${this.positionID}`;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\tinitDecoratorSettings() {\n\t\tif (this.positionID === -1) throw new Error(\"Position ID for Chess960 is not defined\");\n\t\tlet nr = this.positionID;\n\t\tconst boardSquares = this.decorator.board;\n\t\tlet rank = Chess960.chess960ranges.findIndex((r) => nr >= r[0] && nr <= r[1]);\n\t\tif (rank === -1) {\n\t\t\tif (nr > Chess960.legacy.legacy2PThreshold) {\n\t\t\t\trank = Chess960.legacy.legacy2PRank;\n\t\t\t\tnr -= Chess960.legacy.legacy2PTakeaway;\n\t\t\t} else {\n\t\t\t\trank = Chess960.legacy.legacy4Prank;\n\t\t\t}\n\t\t}\n\n\t\tconst pieceArrays: PieceString[][] = [[], [], [], []];\n\t\tconst ranks = [13 - rank, rank, rank, 13 - rank];\n\t\tpieceArrays[0] = boardSquares[ranks[0]].slice(Chess960.displacement[0], Chess960.displacement[1]);\n\t\tpieceArrays[1] = boardSquares.map((row) => row[ranks[1]]).slice(Chess960.displacement[0], Chess960.displacement[1]);\n\t\tpieceArrays[2] = boardSquares[ranks[2]].slice(Chess960.displacement[0], Chess960.displacement[1]);\n\t\tpieceArrays[3] = boardSquares.map((row) => row[ranks[3]]).slice(Chess960.displacement[0], Chess960.displacement[1]);\n\n\t\tconst walls = pieceArrays.map((a) => a.map((p) => (p.isWall() ? true : false)));\n\t\tconst intersections: number[][] = [];\n\t\tfor (const wall of walls) {\n\t\t\tintersections.push(\n\t\t\t\twall.reduce((p, c, i) => {\n\t\t\t\t\tif (c) {\n\t\t\t\t\t\treturn p.filter((v) => Chess960.pieceMasks[i].includes(v));\n\t\t\t\t\t} else return p;\n\t\t\t\t}, Chess960.c960range)\n\t\t\t);\n\t\t}\n\n\t\ttype IndexingType = ReturnType<typeof generatePositionIndexes>;\n\t\tconst calcNr = nr - Chess960.chess960ranges[rank][0];\n\t\tconst positions: IndexingType[] = [];\n\n\t\tconst generatePositionIndexes = (calcNr: number): typeof position => {\n\t\t\tconst colorBoundIndexes = [2 * Math.floor((calcNr % 16) / 4), 1 + 2 * ((calcNr % 16) % 4)].sort();\n\t\t\tconst supermajorIndex = Math.floor(calcNr / 16) % 6;\n\t\t\tconst minorPieceIndexes = Chess960.minorPieceCache[Math.floor(calcNr / 96) % 10];\n\n\t\t\tconst position = {\n\t\t\t\tcolorBoundPieces: Array(8).fill(false),\n\t\t\t\tsupermajorPieces: Array(8).fill(false),\n\t\t\t\tminorPieces: Array(8).fill(false),\n\t\t\t\troyalPiece: Array(8).fill(false),\n\t\t\t\tedgePieces: Array(8).fill(false)\n\t\t\t};\n\n\t\t\tlet edgeSet = false,\n\t\t\t\troyalSet = false,\n\t\t\t\tcolorDelta = 0,\n\t\t\t\tmajorDelta = 0;\n\t\t\tfor (let i = 0; i < boardDimension - Chess960.displacement[0] * 2; i++) {\n\t\t\t\tif (i === colorBoundIndexes[0] || i === colorBoundIndexes[1]) {\n\t\t\t\t\tposition.colorBoundPieces[i] = true;\n\t\t\t\t\tcolorDelta++;\n\t\t\t\t} else if (i === supermajorIndex + colorDelta) {\n\t\t\t\t\tposition.supermajorPieces[i] = true;\n\t\t\t\t\tmajorDelta++;\n\t\t\t\t} else if (i === minorPieceIndexes[0] + colorDelta + majorDelta || i === minorPieceIndexes[1] + colorDelta + majorDelta) {\n\t\t\t\t\tposition.minorPieces[i] = true;\n\t\t\t\t} else {\n\t\t\t\t\tposition[edgeSet ? (royalSet ? \"edgePieces\" : \"royalPiece\") : \"edgePieces\"][i] = true;\n\t\t\t\t\troyalSet = edgeSet;\n\t\t\t\t\tedgeSet = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn position;\n\t\t};\n\n\t\tfor (const intersection of intersections) {\n\t\t\tif (intersection.length === 0) return null;\n\t\t\tlet calcTempNr = calcNr;\n\t\t\tlet cycles = 0;\n\t\t\twhile (cycles < 2) {\n\t\t\t\tif (intersection.includes(calcTempNr)) {\n\t\t\t\t\tpositions.push(generatePositionIndexes(calcTempNr));\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (intersection.includes(Chess960.twins[calcTempNr - 1])) {\n\t\t\t\t\tpositions.push(generatePositionIndexes(Chess960.twins[calcTempNr - 1]));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcalcTempNr++;\n\t\t\t\tif (calcTempNr === 960) (calcTempNr = 0), cycles++;\n\t\t\t}\n\n\t\t\tif (cycles === 2) intersections.push([]);\n\t\t}\n\n\t\tconst fenData = this.decorator.data;\n\t\tconst royalPieces = fenData.fenOptions.tag(\"royal\");\n\t\tconst royalOnCorrectRank = royalPieces.map((r, i) =>\n\t\t\tr !== null ? (r[getVerticalPlacementModulus(i)] === ranks[i] ? r[getVerticalPlacementModulus(i)] : -1) : -1\n\t\t);\n\n\t\tconst replaceRow = (player: NumericColor): void => {\n\t\t\tconst pieces = Chess960.createBaseChess960mappings();\n\t\t\tconst royal = royalPieces[player];\n\t\t\tif (!royal) return;\n\t\t\tconst r = royal[getVerticalPlacementModulus(player)];\n\t\t\tconst supermajorOverRoyal = royalOnCorrectRank[player] ? r <= 6 : false;\n\n\t\t\tfor (let i = Chess960.displacement[0]; i < Chess960.displacement[1]; i++) {\n\t\t\t\tlet k: keyof IndexingType;\n\t\t\t\tfor (k in pieces) {\n\t\t\t\t\tif (!Object.prototype.hasOwnProperty.call(pieces, k) || !positions[player][k][i - 3]) continue;\n\n\t\t\t\t\tif (royalOnCorrectRank[player] !== -1 && k === \"royalPiece\" && r !== i) {\n\t\t\t\t\t\troyal[getVerticalPlacementModulus(player)] = i;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst mI = supermajorOverRoyal ? (intersections[player].length === 960 ? boardDimension - 1 - i : i) : i;\n\t\t\t\t\tconst piece = pieces[k].shift();\n\t\t\t\t\tif (piece !== undefined) {\n\t\t\t\t\t\tboardSquares[isVerticalPlacement(player) ? ranks[player] : mI][isVerticalPlacement(player) ? mI : ranks[player]] =\n\t\t\t\t\t\t\tpieceArrays[player][piece];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tfor (const color of colors) replaceRow(color);\n\t\tfor (const decorator of this.wrappingDecorators) decorator.initDecoratorSettings?.();\n\t}\n}\n","import type { DroppingMove } from \"../../../MoveTree/MoveTreeInterface\";\nimport { Board } from \"../../../Board/Board\";\nimport { boardDimension } from \"../../../GameInformation/GameData\";\nimport type { PieceString } from \"../../../GameInformation/GameUnits/PieceString\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { VariantRuleHandler, variantRuleColors } from \"../../VariantRuleInterface\";\nimport { pieceControlConfigSettings } from \"@moveGeneration/PieceControl/PieceControlInterface\";\nimport { FiftyMoveRule } from \"../FENDataDecorators/FiftyMoveRule\";\nimport { isVerticalPlacement } from \"@client/ts/logic/BaseInterfaces\";\nimport { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\n\nconst tag = \"crazyhouse\";\nexport class Crazyhouse extends VariantRule<typeof Board, typeof tag> implements VariantRuleHandler<Board> {\n\tstatic {\n\t\tVariantRule.initVariantRule(Crazyhouse);\n\t}\n\treadonly dependencies = new Map([[FiftyMoveRule, [Infinity]]]);\n\n\tgetDecoratorType() {\n\t\treturn Board;\n\t}\n\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Crazyhouse\",\n\t\t\t\tdescription: \"You can drop pieces from banks\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.extending,\n\t\t\t\tdisplayIcon: chessGlyphIndex.crazyhouse\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\treturn /^Crazyhouse$/i.test(match);\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn \"Crazyhouse\";\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\tgetInsufficientMaterialData() {\n\t\treturn {\n\t\t\tisPartiallyDisabled: false,\n\t\t\tisDisabled: true\n\t\t} as const;\n\t}\n\n\tinitDecoratorSettings() {\n\t\tthis.decorator.data.fenOptions.setTag(\"areBanksEnabled\", [true, true, true, true]);\n\t\tfor (const decorator of this.wrappingDecorators) decorator.initDecoratorSettings?.();\n\t}\n\n\tgetDroppingMoves(piece: PieceString, color = this.decorator.data.sideToMove): DroppingMove[] {\n\t\tif (piece.color !== color) return [];\n\t\tconst royal = this.decorator.data.fenOptions.tag(\"royal\")[color];\n\t\tif (royal && this.decorator.preGeneratedAttacks[color].hoppingPieces[royal[0]][royal[1]]) return [];\n\n\t\tconst isPawn = pieceControlConfigSettings[piece.piece].moveGenerationSettings.isPawn;\n\t\tconst resultingMoveDrops: DroppingMove[] = [];\n\n\t\tconst isRY = isVerticalPlacement(color);\n\t\tconst pawnPromotionRank = this.decorator.variantData.promotionRank === false ? -1 : this.decorator.variantData.promotionRank;\n\t\tconst pawnBaseRank = this.decorator.data.fenOptions.tag(\"pawnBaseRank\");\n\n\t\tfor (let i = 0; i < boardDimension; i++) {\n\t\t\tif (isPawn && isRY && (pawnPromotionRank === i || pawnBaseRank === i)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfor (let j = 0; j < boardDimension; j++) {\n\t\t\t\tif (isPawn && !isRY && (pawnPromotionRank === j || pawnBaseRank === j)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst square = this.decorator.board[i][j];\n\t\t\t\tif (!square.isEmpty()) continue;\n\n\t\t\t\tresultingMoveDrops.push({ piece, endCoordinates: [i, j] });\n\t\t\t}\n\t\t}\n\n\t\tif (this.decorator.isKingInCheck(color)) {\n\t\t\treturn resultingMoveDrops.filter((moveDrop) => {\n\t\t\t\tconst { checks, checkmates } = this.decorator.makeMove([moveDrop], true);\n\t\t\t\treturn !checks[color] || checkmates[color] || this.decorator.isKingInCheck(color);\n\t\t\t});\n\t\t} else {\n\t\t\treturn resultingMoveDrops;\n\t\t}\n\t}\n}\n","import { Board } from \"../../../Board/Board\";\nimport { DroppingMove, getLatestChainedMoves, MoveData } from \"../../../MoveTree/MoveTreeInterface\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { VariantRuleAllowedChecks, variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\nimport { CaptureTheKing } from \"./CaptureTheKing\";\nimport { duckPieceString } from \"../../../GameInformation/GameUnits/PieceString\";\nimport { boardDimension } from \"../../../GameInformation/GameData\";\nimport { Coordinate, nonPlayablePieces } from \"../../../GameInformation/GameUnits/GameUnits\";\nimport { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\n\nconst tag = \"duckChess\";\nexport class DuckChess extends VariantRule<typeof Board, typeof tag> implements VariantRuleHandler<Board> {\n\tstatic {\n\t\tVariantRule.initVariantRule(DuckChess);\n\t}\n\treadonly dependencies = new Map([[CaptureTheKing, []]]);\n\n\tgetDecoratorType() {\n\t\treturn Board;\n\t}\n\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Duck Chess\",\n\t\t\t\tdescription: \"The duck must be moved to an empty square after every move\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.extending,\n\t\t\t\tdisplayIcon: chessGlyphIndex.duck\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\treturn /^DuckChess$/i.test(match);\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn \"DuckChess\";\n\t}\n\n\tisDisabled({ variantDataRules }: VariantRuleAllowedChecks): boolean {\n\t\treturn variantDataRules.taboo;\n\t}\n\n\tgetLegalMoves(i: number, j: number): MoveData[] {\n\t\tconst moves = this.callHandler(\"getLegalMoves\", arguments);\n\t\tconst latestMoves = getLatestChainedMoves(moves);\n\n\t\tconst ducks: Coordinate[] = [],\n\t\t\temptySquares: Coordinate[] = [];\n\t\tfor (let i = 0; i < boardDimension; i++) {\n\t\t\tfor (let j = 0; j < boardDimension; j++) {\n\t\t\t\tconst pieceString = this.decorator.board[i][j];\n\t\t\t\tif (pieceString.isWall() && pieceString.piece === nonPlayablePieces.duck) {\n\t\t\t\t\tducks.push([i, j]);\n\t\t\t\t} else if (pieceString.isEmpty()) {\n\t\t\t\t\temptySquares.push([i, j]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst droppingChainedMoves: DroppingMove[] = [];\n\t\tconst duckChainedMoves: MoveData[] = [];\n\t\tif (ducks.length === 0) {\n\t\t\tfor (const emptySquare of emptySquares) {\n\t\t\t\tdroppingChainedMoves.push({ piece: duckPieceString, endCoordinates: emptySquare });\n\t\t\t}\n\t\t\tdroppingChainedMoves.push({ piece: duckPieceString, endCoordinates: [i, j] });\n\t\t} else {\n\t\t\tfor (const duck of ducks) {\n\t\t\t\tfor (const emptySquare of emptySquares) {\n\t\t\t\t\tduckChainedMoves.push({ startCoordinates: duck, endCoordinates: emptySquare });\n\t\t\t\t}\n\t\t\t\tduckChainedMoves.push({ startCoordinates: duck, endCoordinates: [i, j] });\n\t\t\t}\n\t\t}\n\n\t\tfor (const move of latestMoves) {\n\t\t\tmove.nextChainedMoves = droppingChainedMoves.length > 0 ? droppingChainedMoves : duckChainedMoves;\n\t\t}\n\n\t\treturn moves;\n\t}\n}\n","import { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\nimport { BoardSquares, initializeBoardSquares } from \"../../../../BaseInterfaces\";\nimport { Board } from \"../../../Board/Board\";\nimport { DisplaySettings, unstringifyCoordinate } from \"../../../Board/BoardInterface\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { VariantRuleAllowedChecks, variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\nimport { CaptureTheKing } from \"./CaptureTheKing\";\n\nconst tag = \"fogOfWar\";\nexport class FogOfWar extends VariantRule<typeof Board, typeof tag> implements VariantRuleHandler<Board> {\n\tstatic {\n\t\tVariantRule.initVariantRule(FogOfWar);\n\t}\n\treadonly dependencies = new Map([[CaptureTheKing, []]]);\n\n\tgetDecoratorType() {\n\t\treturn Board;\n\t}\n\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Fog of War\",\n\t\t\t\tdescription: \"Players can only see their pieces and the squares they can legally move to\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.widespread,\n\t\t\t\tdisplayIcon: chessGlyphIndex.fogOfWar\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\treturn /^FogOfWar$/i.test(match);\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn \"FogOfWar\";\n\t}\n\n\tisDisabled({ variantDataRules }: VariantRuleAllowedChecks): boolean {\n\t\treturn variantDataRules.taboo;\n\t}\n\n\tgetSquareVisibility(): BoardSquares<DisplaySettings[]> {\n\t\tconst currentPlayerMoves: BoardSquares<boolean> = initializeBoardSquares(() => false);\n\t\tconst preGeneratedAttacks = this.decorator.preGeneratedAttacks[this.decorator.data.sideToMove];\n\t\tfor (const [piece, moves] of preGeneratedAttacks.pieceMovements) {\n\t\t\tconst startingCoordinate = unstringifyCoordinate(piece);\n\t\t\tcurrentPlayerMoves[startingCoordinate[0]][startingCoordinate[1]] = true;\n\t\t\tfor (const { move } of moves) {\n\t\t\t\tcurrentPlayerMoves[move[0]][move[1]] = true;\n\t\t\t}\n\t\t}\n\t\tfor (const drop of [...preGeneratedAttacks.pieceDrops.pawn, ...preGeneratedAttacks.pieceDrops.piece]) {\n\t\t\tcurrentPlayerMoves[drop.endCoordinates[0]][drop.endCoordinates[1]] = true;\n\t\t}\n\n\t\tconst squareVisibility: BoardSquares<DisplaySettings[]> = this.callHandler(\"getSquareVisibility\", arguments);\n\t\treturn squareVisibility.map((r, i) =>\n\t\t\tr.map((v, j) => {\n\t\t\t\tif (this.decorator.board[i][j].isWall() || currentPlayerMoves[i][j]) {\n\t\t\t\t\treturn v;\n\t\t\t\t} else {\n\t\t\t\t\treturn [...v, DisplaySettings.Fogged];\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n}\n","import type { NumericColor } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport { Board } from \"../../../Board/Board\";\nimport { stringifyCoordinate } from \"../../../Board/BoardInterface\";\nimport type { MoveData } from \"../../../MoveTree/MoveTreeInterface\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\nimport { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\n\nconst tag = \"forcedCapture\";\nexport class ForcedCapture extends VariantRule<typeof Board, typeof tag> implements VariantRuleHandler<Board> {\n\tstatic {\n\t\tVariantRule.initVariantRule(ForcedCapture);\n\t}\n\n\tgetDecoratorType() {\n\t\treturn Board;\n\t}\n\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Forced Capture\",\n\t\t\t\tdescription: \"Capturing is always compulsory\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.widespread,\n\t\t\t\tdisplayIcon: chessGlyphIndex.target\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string) {\n\t\treturn /^ForcedCapture$/i.test(match);\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn \"ForcedCapture\";\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\tgetInsufficientMaterialData() {\n\t\treturn {\n\t\t\tisPartiallyDisabled: true,\n\t\t\tisDisabled: false\n\t\t} as const;\n\t}\n\n\tpregenerateAttacks(): void {\n\t\tconst {\n\t\t\tdata: { sideToMove },\n\t\t\tboard,\n\t\t\tpreGeneratedAttacks\n\t\t} = this.decorator;\n\t\tthis.callHandler(\"pregenerateAttacks\", arguments);\n\n\t\tfor (const piece of this.decorator.getPlayerPieces()[sideToMove]) {\n\t\t\tconst moves = preGeneratedAttacks[sideToMove].pieceMovements.get(stringifyCoordinate(piece));\n\t\t\tif (moves) {\n\t\t\t\tfor (const { move: coordinate } of moves) {\n\t\t\t\t\tif (board[coordinate[0]][coordinate[1]].isPiece()) {\n\t\t\t\t\t\tpreGeneratedAttacks[sideToMove].variantRuleCache.hasCaptures = true;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpreGeneratedAttacks[sideToMove].variantRuleCache.hasCaptures = false;\n\t}\n\n\tisTheMoveLegal(_: NumericColor, moveData: MoveData): boolean {\n\t\tconst isCapturing = this.decorator.data.getCapturedPieces(moveData).length > 0;\n\t\tif (!isCapturing && this.decorator.preGeneratedAttacks[this.decorator.data.sideToMove].variantRuleCache.hasCaptures) return false;\n\t\treturn this.callHandler(\"isTheMoveLegal\", arguments);\n\t}\n}\n","import { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\nimport { shuffleArray } from \"../../../../../utils/ArrayUtils\";\nimport { Board } from \"../../../Board/Board\";\nimport { totalPlayers, VariantType } from \"../../../GameInformation/GameData\";\nimport { verifyNumericColor } from \"../../../GameInformation/GameUnits/GameUnits\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { VariantRuleAllowedChecks, variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\n\nconst tag = \"anonymous\";\nexport class Anonymous extends VariantRule<typeof Board, typeof tag> implements VariantRuleHandler<Board> {\n\tstatic {\n\t\tVariantRule.initVariantRule(Anonymous);\n\t}\n\n\tgetDecoratorType() {\n\t\treturn Board;\n\t}\n\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Anonymous\",\n\t\t\t\tdescription: \"Players' names and ratings are hidden\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.metadata,\n\t\t\t\tdisplayIcon: chessGlyphIndex.userInformation\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\treturn /^Anonymous$/i.test(match);\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn \"Anonymous\";\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\tinitDecoratorSettings() {\n\t\tfor (let i = 0; i < totalPlayers; i++) {\n\t\t\tthis.decorator.gameData.players[i].name = \"Anonymous\";\n\t\t\tthis.decorator.gameData.players[i].elo = undefined;\n\t\t}\n\n\t\tfor (const decorator of this.wrappingDecorators) decorator.initDecoratorSettings?.();\n\t}\n}\n\nconst semiAnonTag = \"semiAnonymous\";\nexport class SemiAnonymous extends VariantRule<typeof Board, typeof semiAnonTag> implements VariantRuleHandler<Board> {\n\tstatic {\n\t\tVariantRule.initVariantRule(SemiAnonymous);\n\t}\n\n\tgetDecoratorType() {\n\t\treturn Board;\n\t}\n\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Semi-Anonymous\",\n\t\t\t\tdescription: \"Players's colors are hidden\",\n\t\t\t\ttag: semiAnonTag,\n\t\t\t\tcolor: variantRuleColors.metadata,\n\t\t\t\tdisplayIcon: chessGlyphIndex.userExtraInformation\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\treturn /^Semi-Anonymous$/i.test(match);\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn \"Semi-Anonymous\";\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\tinitDecoratorSettings() {\n\t\tshuffleArray(this.decorator.gameData.players);\n\t\tfor (const decorator of this.wrappingDecorators) decorator.initDecoratorSettings?.();\n\t}\n}\n\nconst spTag = \"selfPartner\";\nexport class SelfPartner extends VariantRule<typeof Board, typeof spTag> implements VariantRuleHandler<Board> {\n\tstatic {\n\t\tVariantRule.initVariantRule(SelfPartner);\n\t}\n\n\tgetDecoratorType() {\n\t\treturn Board;\n\t}\n\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Self-Partner\",\n\t\t\t\tdescription: \"Both sides of the team were played by one player\",\n\t\t\t\ttag: spTag,\n\t\t\t\tcolor: variantRuleColors.metadata,\n\t\t\t\tdisplayIcon: chessGlyphIndex.selfPartner\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\treturn /^SelfPartner$/i.test(match);\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn \"SelfPartner\";\n\t}\n\n\tisDisabled({ gameType, fenTags }: VariantRuleAllowedChecks): boolean {\n\t\treturn gameType !== VariantType.Teams || fenTags.resigned.value.filter(Boolean).length !== 0;\n\t}\n\n\tinitDecoratorSettings() {\n\t\tfor (const decorator of this.wrappingDecorators) decorator.initDecoratorSettings?.();\n\t\tconst gameType = this.decorator.gameType;\n\t\tconst firstTeamPlayer = gameType.teamSettings.firstTeamColors.indexOf(true),\n\t\t\tsecondTeamPlayer = gameType.teamSettings.secondTeamColors.indexOf(true);\n\t\tif (verifyNumericColor(firstTeamPlayer)) {\n\t\t\tthis.decorator.gameData.players[gameType.getTeammateColor(firstTeamPlayer)].name =\n\t\t\t\tthis.decorator.gameData.players[firstTeamPlayer].name;\n\t\t}\n\t\tif (verifyNumericColor(secondTeamPlayer)) {\n\t\t\tthis.decorator.gameData.players[gameType.getTeammateColor(secondTeamPlayer)].name =\n\t\t\t\tthis.decorator.gameData.players[secondTeamPlayer].name;\n\t\t}\n\t}\n}\n","import { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\nimport type { BoardSquares } from \"../../../../BaseInterfaces\";\nimport { Board } from \"../../../Board/Board\";\nimport { DisplaySettings } from \"../../../Board/BoardInterface\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\n\nconst tag = \"ghostboard\";\nexport class Ghostboard extends VariantRule<typeof Board, typeof tag> implements VariantRuleHandler<Board> {\n\tstatic {\n\t\tVariantRule.initVariantRule(Ghostboard);\n\t}\n\n\tgetDecoratorType() {\n\t\treturn Board;\n\t}\n\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Ghostboard\",\n\t\t\t\tdescription: \"Board, clocks and players are invisible\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.visual,\n\t\t\t\tdisplayIcon: chessGlyphIndex.crossedBinoculars\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\treturn /^Ghostboard$/i.test(match);\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn \"Ghostboard\";\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\tgetSquareVisibility(): BoardSquares<DisplaySettings[]> {\n\t\tconst squareVisibility: BoardSquares<DisplaySettings[]> = this.callHandler(\"getSquareVisibility\", arguments);\n\t\treturn squareVisibility.map((r) => r.map((v) => [...v, DisplaySettings.Ghosted]));\n\t}\n}\n","import { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\nimport { Board } from \"../../../Board/Board\";\nimport type { PieceString } from \"../../../GameInformation/GameUnits/PieceString\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\n\nconst tag = \"paradigmChess30\";\nexport class ParadigmChess30 extends VariantRule<typeof Board, typeof tag> implements VariantRuleHandler<Board> {\n\tstatic {\n\t\tVariantRule.initVariantRule(ParadigmChess30);\n\t}\n\n\tprivate static readonly paradigmRanges = [...Array.from({ length: 14 }, (_, i) => [30 * (i + 1) + 1, 30 + 30 * (i + 1)])];\n\t// 0 = color bound, 1 = minor, 2 = major\n\tprivate static readonly permutations = [\n\t\t[0, 0, 1, 1, 2],\n\t\t[0, 0, 1, 2, 1],\n\t\t[0, 0, 2, 1, 1],\n\t\t[0, 1, 0, 1, 2],\n\t\t[0, 1, 0, 2, 1],\n\t\t[0, 1, 1, 0, 2],\n\t\t[0, 1, 1, 2, 0],\n\t\t[0, 1, 2, 0, 1],\n\t\t[0, 1, 2, 1, 0],\n\t\t[0, 2, 0, 1, 1],\n\t\t[0, 2, 1, 0, 1],\n\t\t[0, 2, 1, 1, 0],\n\t\t[1, 0, 0, 1, 2],\n\t\t[1, 0, 0, 2, 1],\n\t\t[1, 0, 1, 0, 2],\n\t\t[1, 0, 1, 2, 0],\n\t\t[1, 0, 2, 0, 1],\n\t\t[1, 0, 2, 1, 0],\n\t\t[1, 1, 0, 0, 2],\n\t\t[1, 1, 0, 2, 0],\n\t\t[1, 1, 2, 0, 0],\n\t\t[1, 2, 0, 0, 1],\n\t\t[1, 2, 0, 1, 0],\n\t\t[1, 2, 1, 0, 0],\n\t\t[2, 0, 0, 1, 1],\n\t\t[2, 0, 1, 0, 1],\n\t\t[2, 0, 1, 1, 0],\n\t\t[2, 1, 0, 0, 1],\n\t\t[2, 1, 0, 1, 0],\n\t\t[2, 1, 1, 0, 0]\n\t];\n\tprivate static readonly legacy = {\n\t\ttwoPlayerRank: 3,\n\t\ttwoPlayerAdjustment: 30 * 4\n\t} as const;\n\n\treadonly preMethodExecution: boolean = false;\n\tprivate positionId: number;\n\tconstructor(positionId?: unknown) {\n\t\tsuper();\n\t\tif (typeof positionId === \"number\") {\n\t\t\tthis.positionId = positionId;\n\t\t} else {\n\t\t\tthis.positionId = -1;\n\t\t}\n\t}\n\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: this.positionId,\n\t\t\tinformation: {\n\t\t\t\tname: \"Paradigm Chess30\",\n\t\t\t\tdescription:\n\t\t\t\t\t\"Paradigm Chess30: Dragon bishops combine the movement of bishop and xiangqi horse. 30 semi-random starting positions\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.startingPosition,\n\t\t\t\tdisplayIcon: chessGlyphIndex.bishop\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tgetDecoratorType() {\n\t\treturn Board;\n\t}\n\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\tconst matchArray = match.match(/^ParadigmChess30=((\\d{1,3}))$/i);\n\t\tif (matchArray) {\n\t\t\tconst newID = Number(matchArray[1]);\n\t\t\tif (newID < 0 || newID > 450) return false;\n\t\t\tthis.positionId = newID;\n\t\t\treturn true;\n\t\t} else return false;\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn `ParadigmChess30=${this.positionId}`;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\tgetInformation() {\n\t\treturn {\n\t\t\tname: \"Paradigm Chess30\",\n\t\t\tdescription: \"Paradigm Chess30: Dragon bishops combine the movement of bishop and xiangqi horse. 30 semi-random starting positions\",\n\t\t\ttag\n\t\t} as const;\n\t}\n\n\tinitDecoratorSettings() {\n\t\tif (this.positionId === -1) throw new Error(\"Position ID for Paradigm Chess30 is not defined\");\n\t\tlet nr = this.positionId;\n\t\tconst boardSquares = this.decorator.board;\n\t\tconst data = this.decorator.data;\n\n\t\tlet rank = ParadigmChess30.paradigmRanges.findIndex((r) => nr >= r[0] && nr <= r[1]);\n\t\tif (rank === -1) {\n\t\t\trank = ParadigmChess30.legacy.twoPlayerRank;\n\t\t\tnr += ParadigmChess30.legacy.twoPlayerAdjustment;\n\t\t}\n\t\tconst calcNr = nr - ParadigmChess30.paradigmRanges[rank][0];\n\t\tconst ranks = [13 - rank, rank, rank, 13 - rank];\n\t\tconst pieceArrays: PieceString[][] = [[], [], [], []];\n\t\tpieceArrays[0] = boardSquares[ranks[0]].slice(4, 10);\n\t\tpieceArrays[1] = boardSquares.map((row) => row[ranks[1]]).slice(4, 10);\n\t\tpieceArrays[2] = boardSquares[ranks[2]].slice(4, 10);\n\t\tpieceArrays[3] = boardSquares.map((row) => row[ranks[3]]).slice(4, 10);\n\n\t\tconst royalPieces = data.fenOptions.tag(\"royal\"),\n\t\t\tdead = data.fenOptions.tag(\"dead\");\n\t\tconst replaceRow = (player: number): void => {\n\t\t\tconst r = royalPieces[player]?.[player % 2 === 0 ? 1 : 0];\n\t\t\tconst pieceCoordinates = [[5, 8], [4, 9], [r === undefined || r >= 7 ? 6 : 7]];\n\n\t\t\tconst moveCoordinate = (i: number, iter: number) => {\n\t\t\t\tif (dead[player]) return;\n\t\t\t\tconst coordinateA = player % 2 === 0 ? ranks[player] : iter;\n\t\t\t\tconst coordinateB = player % 2 === 0 ? iter : ranks[player];\n\n\t\t\t\tif (pieceArrays[player][pieceCoordinates[i][0] - 4].isWall() || boardSquares[coordinateA][coordinateB].isWall()) return;\n\t\t\t\troyalPieces.some((r) => {\n\t\t\t\t\tif (r && r[0] === coordinateA && r[1] === coordinateB) {\n\t\t\t\t\t\t(r[0] = coordinateB), (r[1] = coordinateA);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\n\t\t\t\tboardSquares[coordinateA][coordinateB] = pieceArrays[player][(pieceCoordinates[i].shift() ?? 4) - 4];\n\t\t\t};\n\n\t\t\tlet c = 0;\n\t\t\tconst rp = r === undefined || r >= 7 ? 7 : 6;\n\t\t\tconst permutations = rp === 6 ? ParadigmChess30.permutations[calcNr].slice().reverse() : ParadigmChess30.permutations[calcNr];\n\t\t\tfor (let i = 4; i < 10; i++) {\n\t\t\t\tif (i === rp) continue;\n\t\t\t\tmoveCoordinate(permutations[c++], i);\n\t\t\t}\n\t\t};\n\n\t\tfor (let i = 0; i < 4; i++) replaceRow(i);\n\t\tfor (const decorator of this.wrappingDecorators) decorator.initDecoratorSettings?.();\n\t}\n}\n","import type { BoardSquares } from \"@client/ts/logic/BaseInterfaces\";\nimport { Board } from \"../../../Board/Board\";\nimport { DisplaySettings } from \"../../../Board/BoardInterface\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { VariantRuleHandler, variantRuleColors } from \"../../VariantRuleInterface\";\nimport { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\n\nconst tag = \"piecesFaceCenter\";\nexport class PiecesFaceCenter extends VariantRule<typeof Board, typeof tag> implements VariantRuleHandler<Board> {\n\tstatic {\n\t\tVariantRule.initVariantRule(PiecesFaceCenter);\n\t}\n\n\tgetDecoratorType() {\n\t\treturn Board;\n\t}\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Pieces Face Center\",\n\t\t\t\tdescription: \"Pieces are rotated to face center\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.visual,\n\t\t\t\tdisplayIcon: chessGlyphIndex.pawn3dLarge\n\t\t\t}\n\t\t} as const;\n\t}\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\treturn /^PiecesFaceCenter$/i.test(match);\n\t}\n\tserializeToParsingForm(): string {\n\t\treturn \"PiecesFaceCenter\";\n\t}\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\tgetSquareVisibility(): BoardSquares<DisplaySettings[]> {\n\t\tconst squareVisibility: BoardSquares<DisplaySettings[]> = this.callHandler(\"getSquareVisibility\", arguments);\n\t\treturn squareVisibility.map((r, i) =>\n\t\t\tr.map((v, j) => {\n\t\t\t\tif (!this.decorator.board[i][j].isPiece()) {\n\t\t\t\t\treturn v;\n\t\t\t\t} else {\n\t\t\t\t\treturn [...v, DisplaySettings.PieceFacesCenter];\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n}\n","import type { Coordinate } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport { Board } from \"../../../Board/Board\";\nimport { stringifyCoordinate } from \"../../../Board/BoardInterface\";\nimport type { PostMoveResults } from \"../../../FENData/FENDataInterface\";\nimport { colors } from \"../../../GameInformation/GameData\";\nimport { DroppingMove, Move, MoveData, verifyRequiredMove, verifyStandardMove } from \"../../../MoveTree/MoveTreeInterface\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { VariantRuleAllowedChecks, VariantRuleHandler, variantRuleColors } from \"../../VariantRuleInterface\";\nimport { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\n\nconst tag = \"seirawanSetup\";\nexport class SeirawanSetup extends VariantRule<typeof Board, typeof tag> implements VariantRuleHandler<Board> {\n\tstatic {\n\t\tVariantRule.initVariantRule(SeirawanSetup);\n\t}\n\n\tgetDecoratorType() {\n\t\treturn Board;\n\t}\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Seirawan Setup\",\n\t\t\t\tdescription:\n\t\t\t\t\t\"When moving a piece for the first time, a piece from the bank can be placed on the vacated square, as part of the move\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.extending,\n\t\t\t\tdisplayIcon: chessGlyphIndex.pieceMeal\n\t\t\t}\n\t\t} as const;\n\t}\n\tmatchesPGNDeclaration(match: string) {\n\t\treturn /^SeirawanSetup$/i.test(match);\n\t}\n\tserializeToParsingForm(): string {\n\t\treturn \"SeirawanSetup\";\n\t}\n\tisDisabled({ variantDataRules }: VariantRuleAllowedChecks): boolean {\n\t\treturn variantDataRules.crazyhouse || variantDataRules.setupChess !== false;\n\t}\n\n\tinitDecoratorSettings() {\n\t\tconst fenOptions = this.decorator.data.fenOptions;\n\t\tconst areBanksEnabled = fenOptions.tag(\"areBanksEnabled\"),\n\t\t\tdead = fenOptions.tag(\"dead\"),\n\t\t\tseirawanDrops = fenOptions.tag(\"seirawanDrops\"),\n\t\t\tbank = fenOptions.tag(\"bank\");\n\t\tfor (const color of colors) {\n\t\t\tif (!dead[color] && seirawanDrops[color].size > 0 && bank[color].size > 0) {\n\t\t\t\tareBanksEnabled[color] = true;\n\t\t\t}\n\t\t}\n\n\t\tfor (const decorator of this.wrappingDecorators) decorator.initDecoratorSettings?.();\n\t}\n\n\tmakeMove(move: Move): PostMoveResults {\n\t\tconst { fenOptions, sideToMove } = this.decorator.data;\n\t\tconst areBanksEnabled = fenOptions.tag(\"areBanksEnabled\"),\n\t\t\tseirawanDrops = fenOptions.tag(\"seirawanDrops\"),\n\t\t\tbank = fenOptions.tag(\"bank\");\n\t\tlet disabledIndex = false;\n\t\tif (verifyStandardMove(move[0])) {\n\t\t\tseirawanDrops[sideToMove].delete(stringifyCoordinate(move[0].startCoordinates));\n\n\t\t\tif (seirawanDrops[sideToMove].size === 0 || bank[sideToMove].size === 0) {\n\t\t\t\tdisabledIndex = true;\n\t\t\t}\n\t\t}\n\n\t\tconst returnValue = this.callHandler(\"makeMove\", arguments);\n\t\tif (disabledIndex) {\n\t\t\tseirawanDrops[sideToMove].clear();\n\t\t\tbank[sideToMove].clear();\n\t\t\tareBanksEnabled[sideToMove] = false;\n\t\t}\n\n\t\treturn returnValue;\n\t}\n\n\tgetLegalMoves(i: number, j: number): MoveData[] {\n\t\tconst { fenOptions, sideToMove } = this.decorator.data;\n\t\tconst seirawanDrops = fenOptions.tag(\"seirawanDrops\"),\n\t\t\tbank = fenOptions.tag(\"bank\");\n\n\t\tconst startCoordinates: Coordinate = [i, j];\n\t\tconst stringifiedCoordinate = stringifyCoordinate(startCoordinates);\n\t\tconst coordinate = [...seirawanDrops[sideToMove]].find((c) => c === stringifiedCoordinate);\n\n\t\tconst validateWithDrops = bank[sideToMove].size !== 0 && coordinate !== undefined;\n\t\tconst moves = this.callHandler(\"getLegalMoves\", arguments);\n\n\t\tconst continuations: DroppingMove[] = [];\n\t\tfor (const piece of bank[sideToMove].keys()) {\n\t\t\tcontinuations.push({ piece, endCoordinates: startCoordinates });\n\t\t}\n\n\t\tif (validateWithDrops && verifyRequiredMove(continuations)) {\n\t\t\tfor (const move of moves) {\n\t\t\t\tmove.nextChainedMoves = continuations;\n\t\t\t}\n\t\t}\n\n\t\treturn moves;\n\t}\n}\n","import type { Tuple } from \"@client/ts/baseTypes\";\nimport type { totalPlayers } from \"@moveGeneration/GameInformation/GameData\";\nimport { Board } from \"../../../Board/Board\";\nimport { compareCoordinates, stringifyCoordinate } from \"../../../Board/BoardInterface\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { VariantRuleAllowedChecks, variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\nimport { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\n\nconst tag = \"selfCheck\";\nexport class SelfCheck extends VariantRule<typeof Board, typeof tag> implements VariantRuleHandler<Board> {\n\tstatic {\n\t\tVariantRule.initVariantRule(SelfCheck);\n\t}\n\n\tgetDecoratorType() {\n\t\treturn Board;\n\t}\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Self-check\",\n\t\t\t\tdescription: \"Self-checks cost lives. Checkmate yourself to earn points\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.minor,\n\t\t\t\tdisplayIcon: chessGlyphIndex.donut\n\t\t\t}\n\t\t} as const;\n\t}\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\treturn /^SelfCheck$/i.test(match);\n\t}\n\tserializeToParsingForm(): string {\n\t\treturn \"SelfCheck\";\n\t}\n\tisDisabled({ variantDataRules }: VariantRuleAllowedChecks): boolean {\n\t\treturn !variantDataRules.nCheck || !variantDataRules.captureTheKing;\n\t}\n\n\tgetCurrentChecks(baseColor = this.decorator.data.sideToMove): Tuple<string[], typeof totalPlayers> {\n\t\tconst {\n\t\t\tdata: { fenOptions, sideToMove },\n\t\t\tpreGeneratedAttacks\n\t\t} = this.decorator;\n\t\tconst baseChecks = this.callHandler(\"getCurrentChecks\", arguments);\n\t\tconst royal = fenOptions.tag(\"royal\")[baseColor];\n\t\tconst newCoordinates: string[] = [];\n\n\t\tif (royal) {\n\t\t\tfor (const [attackingPiece, attackCoordinates] of preGeneratedAttacks[sideToMove].hoppingPieceLines) {\n\t\t\t\tif (compareCoordinates(attackCoordinates, royal)) {\n\t\t\t\t\tnewCoordinates.push(stringifyCoordinate(attackingPiece));\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const [attackingPiece, attackLine] of preGeneratedAttacks[sideToMove].slidingPiecesLines) {\n\t\t\t\tfor (const attackCoordinates of attackLine) {\n\t\t\t\t\tif (compareCoordinates(attackCoordinates, royal)) {\n\t\t\t\t\t\tnewCoordinates.push(stringifyCoordinate(attackingPiece));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tbaseChecks[baseColor] = newCoordinates;\n\t\treturn baseChecks;\n\t}\n}\n","import type { Coordinate, NumericColor } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport { pieceControlConfigSettings } from \"@moveGeneration/PieceControl/PieceControlInterface\";\nimport { createTupleFromCallback, Tuple } from \"../../../../../baseTypes\";\nimport { Board, PlayerBooleanTuple } from \"../../../Board/Board\";\nimport type { PostMoveResults } from \"../../../FENData/FENDataInterface\";\nimport { boardDimension, colors, totalPlayers } from \"../../../GameInformation/GameData\";\nimport { PieceString } from \"../../../GameInformation/GameUnits/PieceString\";\nimport { DroppingMove, InternalMoveSignature, Move, MoveData, verifyDroppingMove } from \"../../../MoveTree/MoveTreeInterface\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\nimport { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\n\nconst tag = \"setupChess\";\nexport class SetupChess extends VariantRule<typeof Board, typeof tag> implements VariantRuleHandler<Board> {\n\tstatic {\n\t\tVariantRule.initVariantRule(SetupChess);\n\t}\n\n\tprivate disabled = false;\n\tprivate setupPoints: number | false;\n\tprivate wereBanksEnabled: PlayerBooleanTuple = [false, false, false, false];\n\tprivate permutationCoordinates: Tuple<Coordinate[], typeof totalPlayers> = [[], [], [], []];\n\tprivate pawnPermutationCoordinates: Tuple<Coordinate[], typeof totalPlayers> = [[], [], [], []];\n\tconstructor(setupPoints?: unknown) {\n\t\tsuper();\n\t\tif (typeof setupPoints === \"number\") {\n\t\t\tthis.setupPoints = setupPoints;\n\t\t} else {\n\t\t\tthis.setupPoints = false;\n\t\t}\n\t}\n\n\tgetDecoratorType() {\n\t\treturn Board;\n\t}\n\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: this.setupPoints,\n\t\t\tinformation: {\n\t\t\t\tname: `Setup Material`,\n\t\t\t\tdescription: `Set up ${this.setupPoints || 0} points before the game starts`,\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.phased,\n\t\t\t\tdisplayIcon: chessGlyphIndex.movePawn\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\tconst matchArray = match.match(/^Setup=(\\d+)$/);\n\t\tif (matchArray) {\n\t\t\tthis.setupPoints = Number(matchArray[1]);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn `Setup=${this.setupPoints || 0}`;\n\t}\n\n\tisDisabled() {\n\t\treturn false;\n\t}\n\n\tgetInsufficientMaterialData() {\n\t\treturn {\n\t\t\tisPartiallyDisabled: false,\n\t\t\tisDisabled: true\n\t\t} as const;\n\t}\n\n\tgetParametrizedOptions() {\n\t\tconst options = new Map<string, number | false>([[\"Off\", false]]);\n\t\tfor (let i = 1; i < 50; i++) options.set(String(i), i);\n\t\tfor (let i = 50; i <= 120; i += 5) options.set(String(i), i);\n\t\treturn options;\n\t}\n\n\tinitDecoratorSettings() {\n\t\tconst fenOptions = this.decorator.data.fenOptions;\n\t\tconst areBanksEnabled = fenOptions.tag(\"areBanksEnabled\"),\n\t\t\tdead = fenOptions.tag(\"dead\"),\n\t\t\tsetupComplete = fenOptions.tag(\"setupComplete\"),\n\t\t\tsetupPoints = fenOptions.tag(\"setupPoints\"),\n\t\t\tpawnBaseRank = fenOptions.tag(\"pawnBaseRank\"),\n\t\t\troyal = fenOptions.tag(\"royal\"),\n\t\t\tcastleKingside = fenOptions.tag(\"castleKingside\"),\n\t\t\tcastleQueenside = fenOptions.tag(\"castleQueenside\");\n\t\tconst areSetupPointsUnset = setupPoints === null;\n\n\t\tconst modifyDisplacements = (i: number, j: number, color: NumericColor): Coordinate => {\n\t\t\tconst baseDisplacements: Coordinate[] = [\n\t\t\t\t[13 - i, j],\n\t\t\t\t[j, i],\n\t\t\t\t[i, j],\n\t\t\t\t[13 - j, i]\n\t\t\t];\n\t\t\treturn baseDisplacements[color];\n\t\t};\n\n\t\tfor (const color of colors) {\n\t\t\tlet bankEnabled = false;\n\t\t\tif (areBanksEnabled[color]) {\n\t\t\t\tthis.wereBanksEnabled[color] = true;\n\t\t\t\tbankEnabled = true;\n\t\t\t} else if (!setupComplete[color]) {\n\t\t\t\tareBanksEnabled[color] = true;\n\t\t\t\tbankEnabled = true;\n\t\t\t}\n\n\t\t\tif (bankEnabled) {\n\t\t\t\tconst files = createTupleFromCallback((_, i) => i, boardDimension);\n\t\t\t\tconst pawnRanks = [pawnBaseRank, pawnBaseRank + 1].filter((rank) => rank >= 0 && rank <= 13);\n\t\t\t\tconst ranks = [pawnBaseRank - 1, ...pawnRanks];\n\t\t\t\tthis.permutationCoordinates[color] = files.flatMap((file) =>\n\t\t\t\t\tranks.map((rank): Coordinate => modifyDisplacements(rank, file, color))\n\t\t\t\t);\n\t\t\t\tthis.pawnPermutationCoordinates[color] = files.flatMap((file) =>\n\t\t\t\t\tpawnRanks.map((rank): Coordinate => modifyDisplacements(rank, file, color))\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (!areSetupPointsUnset && !dead[color]) {\n\t\t\t\tsetupPoints[color] = this.setupPoints === false ? 0 : this.setupPoints;\n\t\t\t}\n\n\t\t\tif (!royal[color]) {\n\t\t\t\tcastleKingside[color] = false;\n\t\t\t\tcastleQueenside[color] = false;\n\t\t\t}\n\t\t}\n\n\t\tfor (const decorator of this.wrappingDecorators) decorator.initDecoratorSettings?.();\n\t}\n\n\tgetLegalMoves(): MoveData[] {\n\t\tif (!this.disabled) return [];\n\t\treturn this.callHandler(\"getLegalMoves\", arguments);\n\t}\n\n\tprivate getCoordinateList(piece: PieceString) {\n\t\treturn pieceControlConfigSettings[piece.piece].moveGenerationSettings.isPawn\n\t\t\t? this.pawnPermutationCoordinates\n\t\t\t: this.permutationCoordinates;\n\t}\n\n\tgetDroppingMoves(piece: PieceString, color = this.decorator.data.sideToMove): DroppingMove[] {\n\t\tif (piece.color !== color) return [];\n\t\tif (!this.disabled && !this.decorator.data.fenOptions.tag(\"setupComplete\")[color]) {\n\t\t\tconst coordinateList = this.getCoordinateList(piece);\n\t\t\tconst resultingMoveDrops: DroppingMove[] = [];\n\n\t\t\tfor (const coordinate of coordinateList[color]) {\n\t\t\t\tif (this.decorator.board[coordinate[0]][coordinate[1]].isEmpty()) {\n\t\t\t\t\tresultingMoveDrops.push({ piece, endCoordinates: coordinate });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn resultingMoveDrops;\n\t\t} else return this.callHandler(\"getDroppingMoves\", arguments);\n\t}\n\n\tmakeMove(move: Move, ignoreNextMoves = false): PostMoveResults {\n\t\tconst fenOptions = this.decorator.data.fenOptions;\n\t\tconst areBanksEnabled = fenOptions.tag(\"areBanksEnabled\"),\n\t\t\tdead = fenOptions.tag(\"dead\"),\n\t\t\tsetupComplete = fenOptions.tag(\"setupComplete\"),\n\t\t\tsetupPoints = fenOptions.tag(\"setupPoints\"),\n\t\t\tbank = fenOptions.tag(\"bank\"),\n\t\t\troyal = fenOptions.tag(\"royal\");\n\t\tconst color = this.decorator.data.sideToMove,\n\t\t\tmoveData = move[0];\n\t\tconst results = this.callHandler(\"makeMove\", arguments);\n\n\t\tif (!this.disabled && !setupComplete[color] && verifyDroppingMove(moveData) && setupPoints) {\n\t\t\tconst pointValue = pieceControlConfigSettings[moveData.piece.piece].points.singlesPoints;\n\t\t\tif (moveData.piece.piece === \"K\") {\n\t\t\t\tbank[color].delete(moveData.piece);\n\t\t\t\troyal[color] = moveData.endCoordinates;\n\t\t\t} else {\n\t\t\t\tsetupPoints[color] -= pointValue;\n\t\t\t}\n\n\t\t\tconst pointsLeft = setupPoints[color];\n\t\t\tfor (const [piece] of bank[color]) {\n\t\t\t\tif (piece.piece !== \"K\" && pointValue > pointsLeft) {\n\t\t\t\t\tbank[color].delete(piece);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (bank[color].size === 0) {\n\t\t\t\tsetupComplete[color] = true;\n\t\t\t} else {\n\t\t\t\tconst coordinateList = this.getCoordinateList(moveData.piece);\n\n\t\t\t\tlet anyDrop = false;\n\t\t\t\tfor (const coordinate of coordinateList[color]) {\n\t\t\t\t\tif (this.decorator.board[coordinate[0]][coordinate[1]].isEmpty()) {\n\t\t\t\t\t\tanyDrop = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!anyDrop) {\n\t\t\t\t\tsetupComplete[color] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (setupComplete.every((v, i) => v || dead[i])) {\n\t\t\tthis.disabled = true;\n\t\t\tfor (const color of colors) {\n\t\t\t\tif (!this.wereBanksEnabled[color]) {\n\t\t\t\t\tareBanksEnabled[color] = false;\n\t\t\t\t\tbank[color].clear();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!this.disabled && !ignoreNextMoves && setupComplete[this.decorator.data.sideToMove]) {\n\t\t\tBoard.prototype.makeMove.call(this.decorator, [{ type: InternalMoveSignature.Pass }]);\n\t\t}\n\n\t\treturn results;\n\t}\n}\n","import type { MoveData } from \"../../../MoveTree/MoveTreeInterface\";\nimport { Board } from \"../../../Board/Board\";\nimport { colors } from \"../../../GameInformation/GameData\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\nimport type { NumericColor } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\n\nexport interface Test {\n\ttaboo: boolean | false;\n}\n\nconst tag = \"taboo\";\nexport class Taboo extends VariantRule<typeof Board, typeof tag> implements VariantRuleHandler<Board> {\n\tstatic {\n\t\tVariantRule.initVariantRule(Taboo);\n\t}\n\n\tgetDecoratorType() {\n\t\treturn Board;\n\t}\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Taboo\",\n\t\t\t\tdescription: \"Giving check is forbidden\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.widespread,\n\t\t\t\tdisplayIcon: chessGlyphIndex.equal\n\t\t\t}\n\t\t} as const;\n\t}\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\treturn /^Taboo$/i.test(match);\n\t}\n\tserializeToParsingForm(): string {\n\t\treturn \"Taboo\";\n\t}\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\tisSetupComplex(): boolean {\n\t\treturn true;\n\t}\n\n\tisTheMoveLegal(_: NumericColor, moveData: MoveData): boolean {\n\t\tconst initialDead = this.decorator.data.fenOptions.tag(\"dead\").slice();\n\t\tconst snapshot = this.decorator.createSnapshot();\n\n\t\ttry {\n\t\t\tthis.decorator.makeMove([moveData], true);\n\t\t\tconst newDead = this.decorator.data.fenOptions.tag(\"dead\").slice();\n\n\t\t\tfor (const color of colors) {\n\t\t\t\tif ((!initialDead[color] && newDead[color]) || this.decorator.isKingInCheck(color)) return false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t} finally {\n\t\t\tthis.decorator.loadSnapshot(snapshot);\n\t\t}\n\t}\n}\n","import { createTuple, Tuple } from \"@client/ts/baseTypes\";\nimport { BoardSquares, initializeBoardSquares } from \"@client/ts/logic/BaseInterfaces\";\nimport type { Board } from \"@moveGeneration/Board/Board\";\nimport { stringifyCoordinate } from \"@moveGeneration/Board/BoardInterface\";\nimport type { FENData } from \"@moveGeneration/FENData/FENData\";\nimport { totalPlayers, colors, VariantType, boardDimension } from \"@moveGeneration/GameInformation/GameData\";\nimport type { NumericColor, Coordinate } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport { pawnPieceString, PieceString } from \"@moveGeneration/GameInformation/GameUnits/PieceString\";\nimport {\n\tInternalMoveSignature,\n\tMoveComponent,\n\tSpecialMove,\n\tverifyInternalMove,\n\tverifyStandardMove\n} from \"@moveGeneration/MoveTree/MoveTreeInterface\";\nimport type { PieceControlConfigurator } from \"@moveGeneration/PieceControl/PieceControlBuilder\";\nimport { pieceControlConfigSettings, PieceLetter } from \"@moveGeneration/PieceControl/PieceControlInterface\";\nimport type { VariantDataRules } from \"@moveGeneration/VariantRules/VariantRuleInterface\";\nimport { createBotAlgorithm, ZombieMoveGenerationAlgorithm, ZombieType } from \"../BotInterface\";\nimport { randomlyPickNextChainedMoves } from \"./RandomEvaluation\";\n\nconst onlyUnique = <T>(value: T, index: number, self: T[]) => self.indexOf(value) === index;\nconst stringifyKey = (i: number, j: number, color?: NumericColor) => `${i},${j}/${color ?? \"\"}`;\nfunction getPieceInFront(i: number, j: number, color: NumericColor): [number, number] {\n\tswitch (color) {\n\t\tcase 0:\n\t\t\treturn [i - 1, j];\n\t\tcase 1:\n\t\t\treturn [i, j + 1];\n\t\tcase 2:\n\t\t\treturn [i + 1, j];\n\t\tcase 3:\n\t\t\treturn [i, j - 1];\n\t}\n}\n\ninterface ReadonlyFlattenedBoardSettings {\n\tvariantData: VariantDataRules;\n\tpromotionRank: Tuple<number, typeof totalPlayers>;\n\tisFFA: boolean;\n\tisTeams: boolean;\n\tzombieType: Tuple<ZombieType, typeof totalPlayers>;\n\tdefaultSideToMove: NumericColor;\n}\n\ninterface SquareCoverage {\n\tattackers: Coordinate[];\n\tdefenders: Coordinate[];\n}\n\ninterface FlattenedBoardSettings extends Readonly<ReadonlyFlattenedBoardSettings> {\n\tboard: Board;\n\tboardSquares: PieceString[][];\n\tdata: FENData;\n\tremainingReal: number;\n\tremaining: Array<number | false>;\n\tcoverage: BoardSquares<Coordinate[]>;\n\tpieces: Coordinate[][];\n\troyal: Tuple<Coordinate | null, typeof totalPlayers>;\n\tcontrols: Record<PieceLetter, () => PieceControlConfigurator>;\n\tcoverageCache: Map<string, SquareCoverage>;\n\tpieceValueCache: Map<string, number>;\n\thangingCache: Map<string, number>;\n}\n\nfunction createComfuterAlgorithm(): ZombieMoveGenerationAlgorithm {\n\tlet boardAccessors: FlattenedBoardSettings;\n\tfunction augmentBoardAccessorsFromBoard(board: Board): Omit<FlattenedBoardSettings, keyof ReadonlyFlattenedBoardSettings> {\n\t\treturn {\n\t\t\tboard,\n\t\t\tboardSquares: board.board,\n\t\t\tdata: board.data,\n\t\t\tremainingReal: board.data.getRealPlayers(),\n\t\t\tremaining: board.data.fenOptions\n\t\t\t\t.tag(\"dead\")\n\t\t\t\t.map((v, i) => (v ? false : i))\n\t\t\t\t.filter((v) => v === false),\n\t\t\tcoverage: initializeBoardSquares(() => []),\n\t\t\tpieces: board.getPlayerPieces(),\n\t\t\tcontrols: board.controls,\n\t\t\troyal: board.data.fenOptions.tag(\"royal\"),\n\t\t\thangingCache: new Map(),\n\t\t\tcoverageCache: new Map(),\n\t\t\tpieceValueCache: new Map()\n\t\t};\n\t}\n\n\tfunction initializeBoardAccessorsFromBoard(board: Board) {\n\t\tconst promotionRank: Tuple<number, typeof totalPlayers> =\n\t\t\tboard.variantData.promotionRank !== false\n\t\t\t\t? [\n\t\t\t\t\t\tboardDimension - board.variantData.promotionRank,\n\t\t\t\t\t\tboard.variantData.promotionRank - 1,\n\t\t\t\t\t\tboard.variantData.promotionRank - 1,\n\t\t\t\t\t\tboardDimension - board.variantData.promotionRank\n\t\t\t\t  ]\n\t\t\t\t: createTuple(99, totalPlayers);\n\t\tboardAccessors = {\n\t\t\t...augmentBoardAccessorsFromBoard(board),\n\t\t\tvariantData: board.variantData,\n\t\t\tpromotionRank,\n\t\t\tisFFA: board.gameType.isFFA(),\n\t\t\tisTeams: !board.gameType.isFFA(),\n\t\t\tzombieType: board.data.fenOptions.tag(\"zombieType\"),\n\t\t\tdefaultSideToMove: board.data.sideToMove\n\t\t};\n\t}\n\n\tfunction getDistanceFromPromotion(color: NumericColor, i: number, j: number): number {\n\t\tif (i === -1) return 99;\n\t\treturn Math.abs(boardAccessors.promotionRank[color] - (color & 1 ? i : j)) || 99;\n\t}\n\n\tfunction getDistanceFromKing(i: number, j: number, color: NumericColor): number {\n\t\tif (i === -1) return 999;\n\t\tconst royalPiece = boardAccessors.royal[color];\n\t\tif (!royalPiece) return 999;\n\t\tconst x = Math.abs(i - royalPiece[0]),\n\t\t\ty = Math.abs(j - royalPiece[1]);\n\t\tif (x === 0 && y === 0) return 999;\n\t\treturn Math.max(x, y);\n\t}\n\n\tfunction inspectCoverage(): void {\n\t\tconst { board, boardSquares, pieces, coverage } = boardAccessors;\n\n\t\tfor (const color of colors) {\n\t\t\tfor (const coordinate of pieces[color]) {\n\t\t\t\tconst pc = boardSquares[coordinate[0]][coordinate[1]];\n\t\t\t\tif (!pc.isPiece()) continue;\n\t\t\t\tconst destinations = board.preGeneratedAttacks[color].pieceMovements.get(stringifyCoordinate(coordinate));\n\t\t\t\tif (!destinations) continue;\n\n\t\t\t\tfor (const dest of destinations) {\n\t\t\t\t\tcoverage[dest.move[0]][dest.move[1]].push(coordinate);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction getCoverage(i: number, j: number, color: NumericColor): SquareCoverage {\n\t\tconst { coverageCache, coverage, boardSquares, data, board, zombieType, defaultSideToMove } = boardAccessors;\n\t\tconst resigned = data.fenOptions.tag(\"resigned\");\n\n\t\tconst key = stringifyKey(i, j, color);\n\t\tif (coverageCache.has(key)) return coverageCache.get(key)!;\n\t\tconst attackers: Coordinate[] = [],\n\t\t\tdefenders: Coordinate[] = [];\n\t\tconst cvg = coverage[i][j];\n\t\tif (cvg.length) {\n\t\t\tfor (const pieceC of cvg) {\n\t\t\t\tconst piece = boardSquares[pieceC[0]][pieceC[1]];\n\t\t\t\tif (!piece.isPiece()) continue;\n\t\t\t\tconst pieceColor = piece.color;\n\t\t\t\tif (resigned[pieceColor] && zombieType[pieceColor] === ZombieType.Rando) continue;\n\t\t\t\tif (board.gameType.isSameTeam(pieceColor, defaultSideToMove)) {\n\t\t\t\t\tdefenders.push(pieceC);\n\t\t\t\t} else {\n\t\t\t\t\tattackers.push(pieceC);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst cache = color === defaultSideToMove ? { attackers, defenders } : { defenders: attackers, attackers: defenders };\n\t\tcoverageCache.set(key, cache);\n\t\treturn cache;\n\t}\n\n\tfunction getPieceValue(i: number, j: number): number {\n\t\tconst { boardSquares, pieceValueCache, isFFA, isTeams, remainingReal, royal, board } = boardAccessors;\n\n\t\tconst coordinates: [number, number] = [i, j];\n\t\tconst pieceString = boardSquares[i][j];\n\t\tif (!pieceString.isPiece()) return 0;\n\t\tconst piece = pieceString.piece;\n\t\tconst key = `${coordinates[0]},${coordinates[1]}/${pieceString.color}`;\n\t\tif (pieceValueCache.has(key)) return pieceValueCache.get(key)!;\n\n\t\tlet value = 0;\n\t\tconst controlSetting = pieceControlConfigSettings[piece];\n\t\tif (!controlSetting.moveGenerationSettings.isPawn) {\n\t\t\tvalue = isTeams ? controlSetting.points.botTeamsValue : controlSetting.points.botFFAValue;\n\t\t} else {\n\t\t\tvalue = isFFA ? 1 : 0.4;\n\t\t\tconst promotionDistance = getDistanceFromPromotion(pieceString.color, ...coordinates);\n\t\t\tvalue += (2 / (getDistanceFromKing(...coordinates, pieceString.color) * 3)) * (remainingReal / 4);\n\t\t\tvalue += 3 / (promotionDistance * 3);\n\n\t\t\tif (promotionDistance < 2) {\n\t\t\t\tconst inFront = getPieceInFront(...coordinates, pieceString.color);\n\t\t\t\tconst { attackers, defenders } = getCoverage(...inFront, pieceString.color);\n\t\t\t\tif (!defenders.length) {\n\t\t\t\t\tvalue += 3 / promotionDistance;\n\t\t\t\t}\n\t\t\t\tif (attackers.length < defenders.length) {\n\t\t\t\t\tvalue += 2 / promotionDistance;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet isRoyal = false;\n\t\tfor (const royalPiece of royal) {\n\t\t\tif (!royalPiece) continue;\n\t\t\tif (royalPiece[0] === coordinates[0] && royalPiece[1] === coordinates[1]) {\n\t\t\t\tisRoyal = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!isRoyal && piece !== pawnPieceString.piece) {\n\t\t\tfor (const color of colors) {\n\t\t\t\tif (!board.gameType.isSameTeam(color, pieceString.color)) {\n\t\t\t\t\tlet d = getDistanceFromKing(...coordinates, color);\n\t\t\t\t\tif (d < 3) d = 2;\n\t\t\t\t\tvalue += (5 - remainingReal) / d;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpieceValueCache.set(key, value);\n\t\treturn value;\n\t}\n\n\tfunction getCoordinationEval(player: NumericColor): number {\n\t\tconst { pieces, remainingReal } = boardAccessors;\n\n\t\tlet e = 0;\n\t\tfor (const piece of pieces[player]) {\n\t\t\tconst { defenders } = getCoverage(piece[0], piece[1], player);\n\t\t\tfor (const d of defenders) e += 30 / (getPieceValue(d[0], d[1]) * 2);\n\t\t}\n\t\tif (remainingReal === 2) {\n\t\t\te *= 0.4;\n\t\t} else if (remainingReal === 3) {\n\t\t\te *= 0.7;\n\t\t}\n\n\t\treturn e / 55;\n\t}\n\n\tfunction firstPlayerMovesBefore(p1: NumericColor, p2: NumericColor): boolean {\n\t\tconst { data, defaultSideToMove } = boardAccessors;\n\n\t\tlet next = data.nextTurn();\n\t\tdo {\n\t\t\tif (p1 === next) return true;\n\t\t\tif (p2 === next) return false;\n\t\t\tnext = data.nextTurn(next);\n\t\t} while (next !== defaultSideToMove);\n\n\t\treturn true;\n\t}\n\n\tfunction canRespondDirectlyToThreat(player: NumericColor, attackers: Coordinate[]): boolean {\n\t\tconst { boardSquares } = boardAccessors;\n\n\t\tlet attackingPlayers: NumericColor[] = [];\n\t\tfor (const pc of attackers) {\n\t\t\tconst square = boardSquares[pc[0]][pc[1]];\n\t\t\tif (!square.isPiece()) continue;\n\t\t\tattackingPlayers.push(square.color);\n\t\t}\n\t\tattackingPlayers = attackingPlayers.filter(onlyUnique);\n\n\t\tfor (const a of attackingPlayers) {\n\t\t\tif (firstPlayerMovesBefore(player, a)) return false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction hanging(i: number, j: number, pieceValue = getPieceValue(i, j)): number {\n\t\tconst { hangingCache, boardSquares, remaining, data } = boardAccessors;\n\n\t\tconst key = stringifyKey(i, j);\n\t\tif (hangingCache.has(key)) return hangingCache.get(key)!;\n\t\tconst square = boardSquares[i][j];\n\t\tif (!square.isPiece()) return 0;\n\t\tconst { attackers, defenders } = getCoverage(i, j, square.color);\n\n\t\tlet attackerValue = 999;\n\t\tfor (const pc of attackers) {\n\t\t\tattackerValue = Math.min(attackerValue, getPieceValue(pc[0], pc[1]));\n\t\t}\n\t\tlet attackedFromLeft = false;\n\t\tconst nextTurn = data.nextTurn(square.color);\n\t\tif (remaining.length > 2) {\n\t\t\tfor (const pc of attackers) {\n\t\t\t\tif (boardSquares[pc[0]][pc[1]].color === nextTurn) {\n\t\t\t\t\tattackedFromLeft = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst threatened = pieceValue - attackerValue;\n\t\tlet pawnDefends: Coordinate | undefined;\n\t\tfor (const pc of defenders) {\n\t\t\tif (boardSquares[pc[0]][pc[1]].piece === pawnPieceString.piece) {\n\t\t\t\tpawnDefends = pc;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tlet h = 0;\n\t\tconst underDefended = attackers.length - defenders.length > 0;\n\t\tif (underDefended) h = pieceValue;\n\t\tif (underDefended && pawnDefends) h = 0;\n\t\tif (pawnDefends && attackers.length - defenders.length > 1) {\n\t\t\th = getPieceValue(pawnDefends[0], pawnDefends[1]);\n\t\t}\n\t\tif (!h && threatened > 0) h = threatened;\n\t\tif (!h && attackedFromLeft && threatened >= -2) {\n\t\t\th = -threatened;\n\t\t}\n\t\tif (h && canRespondDirectlyToThreat(square.color, attackers)) {\n\t\t\th /= 6;\n\t\t}\n\n\t\thangingCache.set(key, h);\n\t\treturn h;\n\t}\n\n\tfunction getMobilityEval(player: NumericColor): number {\n\t\tconst { pieces, boardSquares, isTeams, royal, defaultSideToMove, board } = boardAccessors;\n\n\t\tlet e = 0;\n\t\tfor (const coordinate of pieces[player]) {\n\t\t\tif (hanging(coordinate[0], coordinate[1]) > 2) continue;\n\t\t\tconst piece = boardSquares[coordinate[0]][coordinate[1]];\n\t\t\tif (!piece.isPiece()) continue;\n\n\t\t\tlet destinations = board.preGeneratedAttacks[player].pieceMovements.get(stringifyCoordinate(coordinate))?.length ?? 0;\n\t\t\tif (/[QDAEHΔ]/.test(piece.piece)) destinations /= isTeams ? 2 : 3;\n\t\t\tif (/[RBV]]/.test(piece.piece)) destinations /= isTeams ? 1.5 : 2;\n\t\t\te += destinations / (isTeams ? 10 : board.gameType.type === VariantType.Solo ? 21 : 16);\n\n\t\t\tlet isRoyal = false;\n\t\t\tfor (const royalPiece of royal) {\n\t\t\t\tif (!royalPiece) continue;\n\t\t\t\tif (royalPiece[0] === coordinate[0] && royalPiece[1] === coordinate[1]) {\n\t\t\t\t\tisRoyal = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!isRoyal && !isTeams && piece.piece === pawnPieceString.piece) {\n\t\t\t\tconst blockedBy = getPieceInFront(coordinate[0], coordinate[1], player);\n\t\t\t\tconst bSqr = boardSquares[blockedBy[0]][blockedBy[1]];\n\t\t\t\tif (bSqr.isEmpty()) continue;\n\n\t\t\t\tif (!bSqr.isPiece()) {\n\t\t\t\t\te -= 2;\n\t\t\t\t} else if (board.gameType.isSameTeam(bSqr.color, defaultSideToMove)) {\n\t\t\t\t\te -= 0.5;\n\t\t\t\t} else if (bSqr.piece === pawnPieceString.piece) {\n\t\t\t\t\te -= 1.8;\n\t\t\t\t} else if (player === bSqr.color) {\n\t\t\t\t\te -= 0.5;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn e;\n\t}\n\n\tfunction getDistFromHill(player: NumericColor): number {\n\t\tconst royalPiece = boardAccessors.royal[player];\n\t\tif (!royalPiece) return 999;\n\t\tconst x = Math.abs(6.5 - royalPiece[0]);\n\t\tconst y = Math.abs(6.5 - royalPiece[1]);\n\t\tconst d = (x + y) / 2 + Math.max(x, y) / 2;\n\t\tif (!d) return 999;\n\t\treturn d;\n\t}\n\n\tfunction getMatesEval(): number {\n\t\tconst { board, variantData, data, pieces, remainingReal } = boardAccessors;\n\t\tboard.data.sideToMove = board.data.previousTurn();\n\t\tconst { checkmates, stalemates, checks } = board.getCheckmatesAndStalemates();\n\t\tboard.data.sideToMove = board.data.nextTurn();\n\t\tlet e = 0;\n\t\tfor (const color of colors) {\n\t\t\tif (checkmates[color]) {\n\t\t\t\te += 500;\n\t\t\t} else if (stalemates[color]) e -= 300;\n\t\t}\n\n\t\tconst checksLength = checks.filter(Boolean).length;\n\t\tif (checksLength === 3) {\n\t\t\te += 10;\n\t\t} else if (checksLength === 2) {\n\t\t\te += 1;\n\t\t} else if (checksLength === 1) {\n\t\t\tconst prev = data.previousTurn();\n\t\t\tif (remainingReal > 2 && checks[prev]) {\n\t\t\t\te += 1.2;\n\t\t\t} else if (remainingReal === 2) {\n\t\t\t\te += 0.1;\n\t\t\t} else {\n\t\t\t\te += 0.4;\n\t\t\t}\n\t\t}\n\n\t\tif (checksLength && variantData.nCheck) {\n\t\t\tfor (const color of colors) {\n\t\t\t\tconst lives = data.fenOptions.tag(\"lives\")[color];\n\t\t\t\tif (lives && checks[color]) e += 4 / (lives + 1);\n\t\t\t}\n\t\t\te += 0.3;\n\t\t}\n\t\tif (variantData.barePieceRule) {\n\t\t\tfor (const color of colors) {\n\t\t\t\tif (pieces[color].length <= 1) e += 300;\n\t\t\t}\n\t\t}\n\n\t\treturn e;\n\t}\n\n\tfunction getMaterialEval(): { myMaterial: number; oppMaterial: number } {\n\t\tconst { board, pieces, isTeams, remainingReal, defaultSideToMove, variantData } = boardAccessors;\n\t\tlet myMaterial = 0,\n\t\t\toppMaterial = 0;\n\n\t\tfor (const color of colors) {\n\t\t\tif (board.gameType.isSameTeam(color, defaultSideToMove)) {\n\t\t\t\tfor (const pc of pieces[color]) {\n\t\t\t\t\tlet pieceValue = getPieceValue(pc[0], pc[1]);\n\t\t\t\t\tpieceValue -= hanging(pc[0], pc[1]);\n\t\t\t\t\tmyMaterial += pieceValue;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (const pc of pieces[color]) {\n\t\t\t\t\tlet pcVal = getPieceValue(pc[0], pc[1]);\n\t\t\t\t\tif (!isTeams && remainingReal === 4 && Math.abs(color - defaultSideToMove) === 2 && !variantData.giveaway) {\n\t\t\t\t\t\tpcVal /= board.gameType.type === VariantType.Solo ? 2 : 3;\n\t\t\t\t\t}\n\t\t\t\t\tpcVal -= hanging(pc[0], pc[1], pcVal);\n\t\t\t\t\toppMaterial -= pcVal;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!isTeams && remainingReal === 4) {\n\t\t\toppMaterial /= 1.4;\n\t\t\tmyMaterial *= 1.2;\n\t\t}\n\t\tif (!isTeams && remainingReal === 3) {\n\t\t\toppMaterial /= 1.25;\n\t\t\tmyMaterial *= 1.1;\n\t\t}\n\t\tmyMaterial *= 2;\n\t\toppMaterial *= 2;\n\n\t\treturn { myMaterial, oppMaterial };\n\t}\n\n\tfunction getPinsEval(): { pinnedEval: number; discovsEval: number } {\n\t\tconst { board, royal, pieces, defaultSideToMove, remainingReal } = boardAccessors;\n\n\t\tlet pinnedEval = 0,\n\t\t\tdiscovsEval = 0;\n\t\tfor (const i of colors) {\n\t\t\tconst discovered: Coordinate[] = [];\n\t\t\tconst pins: Coordinate[] = [];\n\n\t\t\tfor (const piece of pieces[i]) {\n\t\t\t\tconst royalPiece = royal[i];\n\t\t\t\tif (!royalPiece) break;\n\t\t\t\tif (royalPiece[0] === piece[0] && royalPiece[1] === piece[1]) continue;\n\t\t\t\tconst [royalX, royalY] = royalPiece;\n\t\t\t\tconst pieceX = piece[0],\n\t\t\t\t\tpieceY = piece[1];\n\n\t\t\t\tfor (const [attackPiece, attackLine] of board.preGeneratedAttacks[i].slidingPiecesRayTracing) {\n\t\t\t\t\tlet isPieceUnderAttack = false,\n\t\t\t\t\t\tisRoyalUnderAttack = false;\n\t\t\t\t\tfor (const [attackedX, attackedY] of attackLine) {\n\t\t\t\t\t\tif (!isPieceUnderAttack && attackedX === pieceX && attackedY === pieceY) isPieceUnderAttack = true;\n\t\t\t\t\t\tif (!isRoyalUnderAttack && attackedX === royalX && attackedY === royalY) isRoyalUnderAttack = true;\n\n\t\t\t\t\t\tif (isPieceUnderAttack && isRoyalUnderAttack) {\n\t\t\t\t\t\t\tpins.push(piece);\n\t\t\t\t\t\t} else if (isRoyalUnderAttack && !isPieceUnderAttack) {\n\t\t\t\t\t\t\tdiscovered.push([attackPiece[0], attackPiece[1]]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const coordinate of pins) {\n\t\t\t\tif (hanging(coordinate[0], coordinate[1]) > 2) continue;\n\t\t\t\tconst pieceValue = Math.sqrt(getPieceValue(coordinate[0], coordinate[1]));\n\t\t\t\tif (!board.gameType.isSameTeam(i, defaultSideToMove)) {\n\t\t\t\t\tpinnedEval += pieceValue / 2;\n\t\t\t\t} else {\n\t\t\t\t\tpinnedEval -= pieceValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const coordinate of discovered) {\n\t\t\t\tif (hanging(coordinate[0], coordinate[1]) > 2) continue;\n\t\t\t\tconst pieceValue = Math.sqrt(getPieceValue(coordinate[0], coordinate[1]));\n\t\t\t\tif (board.gameType.isSameTeam(i, defaultSideToMove)) {\n\t\t\t\t\tdiscovsEval += pieceValue / 2;\n\t\t\t\t} else {\n\t\t\t\t\tdiscovsEval -= pieceValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpinnedEval *= remainingReal / 6;\n\t\tdiscovsEval *= remainingReal / 6;\n\t\tif (discovsEval < 0) discovsEval /= 10;\n\n\t\treturn { pinnedEval, discovsEval };\n\t}\n\n\tfunction getKingSafetyEval(player: NumericColor): { kingEval: number; checkableEval: number; exposedEval: number } {\n\t\tconst { board, royal, boardSquares, remainingReal, data, variantData, defaultSideToMove } = boardAccessors;\n\t\tlet kingEval = 0,\n\t\t\tcheckableEval = 0,\n\t\t\texposedEval = 0;\n\t\tif (variantData.giveaway) return { kingEval, checkableEval, exposedEval };\n\t\tconst baseReferences: Coordinate[][][] = initializeBoardSquares(() => []);\n\n\t\tfor (const [coordinate, attack] of board.preGeneratedAttacks[player].hoppingPieceLines) {\n\t\t\tbaseReferences[attack[0]][attack[1]].push([coordinate[0], coordinate[1]]);\n\t\t}\n\t\tfor (const [coordinate, line] of board.preGeneratedAttacks[player].slidingPiecesLines) {\n\t\t\tfor (const attack of line) {\n\t\t\t\tbaseReferences[attack[0]][attack[1]].push([coordinate[0], coordinate[1]]);\n\t\t\t}\n\t\t}\n\n\t\tconst royalPiece = royal[player];\n\t\tconst squareAccessDefinitions = new Set<string>();\n\t\tif (royalPiece) {\n\t\t\tconst isChecked = Boolean(\n\t\t\t\tboard.preGeneratedAttacks[player].slidingPieces[royalPiece[0]][royalPiece[1]] ||\n\t\t\t\t\tboard.preGeneratedAttacks[player].hoppingPieces[royalPiece[0]][royalPiece[1]]\n\t\t\t);\n\t\t\tfor (let i = 0; i < boardDimension; i++) {\n\t\t\t\tfor (let j = 0; j < boardDimension; j++) {\n\t\t\t\t\tif (isChecked) {\n\t\t\t\t\t\tlet checkableSq = 0;\n\t\t\t\t\t\tif (remainingReal === 2) {\n\t\t\t\t\t\t\tcheckableSq -= 0.8;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst players = baseReferences[i][j].map((coord) => {\n\t\t\t\t\t\t\t\tconst piece = boardSquares[coord[0]][coord[1]];\n\t\t\t\t\t\t\t\tif (!piece.isPiece()) return player;\n\t\t\t\t\t\t\t\treturn piece.color;\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tconst prev = data.nextTurn(player);\n\t\t\t\t\t\t\tconst next = data.previousTurn(player);\n\t\t\t\t\t\t\tfor (const player of players) {\n\t\t\t\t\t\t\t\tif (remainingReal === 3) {\n\t\t\t\t\t\t\t\t\tcheckableSq -= player === next ? 3 : 2;\n\t\t\t\t\t\t\t\t} else if (remainingReal === 4) {\n\t\t\t\t\t\t\t\t\tcheckableSq -= player === next ? 5 : player === prev ? 2 : 3;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst { defenders } = getCoverage(i, j, player);\n\t\t\t\t\t\tif (defenders.length) checkableSq += 2.5;\n\t\t\t\t\t\tif (checkableSq > 0) checkableSq = 0;\n\n\t\t\t\t\t\tconst accessKey = stringifyKey(i, j);\n\t\t\t\t\t\tif (!squareAccessDefinitions.has(accessKey)) {\n\t\t\t\t\t\t\texposedEval -= 0.123;\n\t\t\t\t\t\t\tsquareAccessDefinitions.add(accessKey);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcheckableEval += checkableSq;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst ki = royalPiece[0],\n\t\t\t\tkj = royalPiece[1];\n\t\t\tfor (let d = 1; d < 3; d++) {\n\t\t\t\tconst x = [ki, ki + d, ki - d];\n\t\t\t\tconst y = [kj, kj + d, kj - d];\n\t\t\t\tfor (const i of x) {\n\t\t\t\t\tfor (const j of y) {\n\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n\t\t\t\t\t\tif (!boardSquares[i]?.[j]) continue;\n\t\t\t\t\t\tif (i === ki && j === kj) continue;\n\t\t\t\t\t\tconst pieceString = boardSquares[i][j];\n\t\t\t\t\t\tif (!pieceString.isPiece()) continue;\n\t\t\t\t\t\tif (board.gameType.isSameTeam(pieceString.color, player)) {\n\t\t\t\t\t\t\tkingEval += pieceString.piece === pawnPieceString.piece ? 2 : 1;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tkingEval -= getPieceValue(i, j);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (let k = -1; k < 2; k++) {\n\t\t\t\tfor (let h = -1; h < 2; h++) {\n\t\t\t\t\tconst i = ki + k;\n\t\t\t\t\tconst j = kj + h;\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n\t\t\t\t\tif (!boardSquares[i]?.[j]) continue;\n\t\t\t\t\tconst { attackers, defenders } = getCoverage(i, j, player);\n\t\t\t\t\tkingEval -= 2 * attackers.length;\n\t\t\t\t\tkingEval += 1 * defenders.length;\n\t\t\t\t}\n\t\t\t}\n\t\t\tkingEval /= 10;\n\t\t}\n\n\t\tif (variantData.nCheck && !board.gameType.isSameTeam(board.data.sideToMove, defaultSideToMove)) {\n\t\t\tconst lives = data.fenOptions.tag(\"lives\")[board.data.sideToMove];\n\t\t\tswitch (lives) {\n\t\t\t\tcase null:\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tcheckableEval *= 1.5;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\tcheckableEval *= 3;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tcheckableEval *= 1.3;\n\t\t\t}\n\t\t}\n\n\t\treturn { kingEval, checkableEval, exposedEval };\n\t}\n\n\tfunction isZombieEatZombie(move: MoveComponent): boolean {\n\t\tif (!verifyStandardMove(move)) return false;\n\t\tconst { data, defaultSideToMove, boardSquares, variantData } = boardAccessors;\n\t\tif (variantData.giveaway) return false;\n\t\tconst resigned = data.fenOptions.tag(\"resigned\");\n\n\t\tif (!resigned[defaultSideToMove]) return false;\n\t\tconst targetPiece = boardSquares[move.endCoordinates[0]][move.endCoordinates[1]];\n\t\tif (!targetPiece.isPiece()) return false;\n\t\tif (resigned[targetPiece.color]) return true;\n\t\treturn false;\n\t}\n\n\tfunction getEval(move: MoveComponent): number {\n\t\tlet totalEval = 0;\n\t\tconst { board, data, defaultSideToMove, variantData, royal, isTeams } = boardAccessors;\n\t\tconst snapshot = board.createSnapshot();\n\n\t\tconst isKingsideCastle = data.fenOptions.isKingsideCastlingAvailable(data.sideToMove, board),\n\t\t\tisQueensideCastle = data.fenOptions.isQueensideCastlingAvailable(data.sideToMove, board);\n\t\tboard.makeMove([move], true);\n\t\tboard.pregenerateAttacks();\n\t\tboardAccessors = { ...boardAccessors, ...augmentBoardAccessorsFromBoard(board) };\n\t\tinspectCoverage();\n\n\t\tconst { myMaterial, oppMaterial } = getMaterialEval();\n\t\tconst hillEval = variantData.kingOfTheHill ? 416 / (3 * getDistFromHill(defaultSideToMove)) : 0;\n\n\t\tif (variantData.giveaway) {\n\t\t\ttotalEval = -3 * myMaterial - oppMaterial - getCoordinationEval(defaultSideToMove) * 10 + hillEval;\n\t\t} else {\n\t\t\ttotalEval += getMatesEval();\n\n\t\t\tconst royalPiece = royal[defaultSideToMove];\n\t\t\tif (royalPiece) {\n\t\t\t\tconst { attackers } = getCoverage(royalPiece[0], royalPiece[1], defaultSideToMove);\n\t\t\t\tif (attackers.length) totalEval -= 700;\n\t\t\t}\n\n\t\t\ttotalEval += getMobilityEval(defaultSideToMove);\n\t\t\ttotalEval += getCoordinationEval(defaultSideToMove);\n\n\t\t\tif (isTeams) {\n\t\t\t\tconst partner = colors.find((v) => v !== defaultSideToMove && board.gameType.isSameTeam(defaultSideToMove, v));\n\t\t\t\tif (partner) Object.values(getKingSafetyEval(partner)).forEach((v) => (totalEval += v));\n\t\t\t}\n\n\t\t\tObject.values(getPinsEval()).forEach((v) => (totalEval += v));\n\t\t\tObject.values(getKingSafetyEval(defaultSideToMove)).forEach((v) => (totalEval += v));\n\t\t\ttotalEval += myMaterial + oppMaterial + hillEval;\n\t\t}\n\n\t\tconst isCastling =\n\t\t\t\"specialType\" in move && (move.specialType === SpecialMove.CastlingKingside || move.specialType === SpecialMove.CastlingQueenside);\n\t\tif (!isCastling && (isKingsideCastle || isQueensideCastle)) totalEval -= 0.5;\n\t\tif (isZombieEatZombie(move)) {\n\t\t\ttotalEval -= 10000;\n\t\t}\n\t\tswitch (board.moves.getHash(board.moves.constructPreliminaryHashString(board))) {\n\t\t\tcase 1:\n\t\t\t\ttotalEval -= 10000;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\ttotalEval -= 20000;\n\t\t\t\tbreak;\n\t\t}\n\t\tif (variantData.fiftyMoveRule && variantData.fiftyMoveRule - board.data.plyCount < 8) totalEval -= 150000;\n\n\t\tboard.loadSnapshot(snapshot);\n\t\treturn totalEval;\n\t}\n\n\treturn {\n\t\tstringifiedType: ZombieType.Futer,\n\t\tevaluate(moves, board): Map<MoveComponent, number> {\n\t\t\tinitializeBoardAccessorsFromBoard(board.createClone());\n\n\t\t\tconst moveValues = new Map<MoveComponent, number>();\n\t\t\tfor (const move of moves) {\n\t\t\t\tif (verifyInternalMove(move)) {\n\t\t\t\t\tswitch (move.type) {\n\t\t\t\t\t\tcase InternalMoveSignature.Resign:\n\t\t\t\t\t\tcase InternalMoveSignature.Timeout:\n\t\t\t\t\t\t\tmoveValues.set(move, -Infinity);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase InternalMoveSignature.ClaimWin:\n\t\t\t\t\t\t\tmoveValues.set(move, Infinity);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else moveValues.set(move, getEval(move));\n\t\t\t}\n\n\t\t\treturn moveValues;\n\t\t},\n\t\tpickPreferredMove(evaluations: Map<MoveComponent, number>) {\n\t\t\tconst sorted = [...evaluations.entries()].sort((a, b) => b[1] - a[1]);\n\t\t\tconst best: MoveComponent[] = [];\n\n\t\t\tfor (const [move, evaluated] of sorted) {\n\t\t\t\tif (sorted[0][1] - evaluated > 0.5) break;\n\t\t\t\tbest.push(move);\n\t\t\t}\n\n\t\t\tif (best.length > 5) best.length = 5;\n\t\t\tlet pick = Math.floor(Math.random() * best.length);\n\t\t\tif (pick > 0 && Math.random() > 0.8) pick = 0;\n\t\t\tif (pick > 1 && Math.random() > 0.8) pick = 1;\n\t\t\tif (pick > 2 && Math.random() > 0.8) pick = 2;\n\t\t\treturn randomlyPickNextChainedMoves(best[pick]);\n\t\t}\n\t};\n}\nexport const comfuterAlgorithm = createBotAlgorithm(createComfuterAlgorithm());\n","import { MoveComponent, verifyStandardMove, SpecialMove, verifyInternalMove } from \"@moveGeneration/MoveTree/MoveTreeInterface\";\nimport { pieceControlConfigSettings } from \"@moveGeneration/PieceControl/PieceControlInterface\";\nimport { createBotAlgorithm, ZombieMoveGenerationAlgorithm, ZombieType } from \"../BotInterface\";\nimport { comfuterAlgorithm } from \"./ComfuterEvaluation\";\n\nexport const createComfuterBasedAlgorithm = (\n\talgorithm: Omit<ZombieMoveGenerationAlgorithm, \"pickPreferredMove\">\n): ZombieMoveGenerationAlgorithm => ({\n\t...algorithm,\n\tpickPreferredMove(...args) {\n\t\treturn comfuterAlgorithm.pickPreferredMove.apply(this, args);\n\t}\n});\n\nexport const comfuterCheckerAlgorithm = createBotAlgorithm(\n\tcreateComfuterBasedAlgorithm({\n\t\tstringifiedType: ZombieType.F_Checker,\n\t\tevaluate(moves, board): Map<MoveComponent, number> {\n\t\t\tconst baseEvaluations = comfuterAlgorithm.evaluate.call(this, moves, board);\n\n\t\t\tfor (const [move, evaluation] of baseEvaluations) {\n\t\t\t\tif (verifyInternalMove(move)) continue;\n\t\t\t\tconst snapshot = board.createSnapshot();\n\t\t\t\tconst { checks, checkmates } = board.makeMove([move]);\n\t\t\t\tconst checksLength = checks.filter(Boolean).length;\n\t\t\t\tbaseEvaluations.set(move, evaluation + (checkmates.includes(true) ? checksLength * 500 : checksLength * 1500));\n\t\t\t\tboard.moves.deleteMove(board.moves.currentMove);\n\t\t\t\tboard.loadSnapshot(snapshot);\n\t\t\t}\n\n\t\t\treturn baseEvaluations;\n\t\t}\n\t})\n);\n\nexport const comfuterMuncherAlgorithm = createBotAlgorithm(\n\tcreateComfuterBasedAlgorithm({\n\t\tstringifiedType: ZombieType.F_Muncher,\n\t\tevaluate(moves, board): Map<MoveComponent, number> {\n\t\t\tconst baseEvaluations = comfuterAlgorithm.evaluate.call(this, moves, board);\n\n\t\t\tfor (const [move, evaluation] of baseEvaluations) {\n\t\t\t\tif (!verifyStandardMove(move)) continue;\n\t\t\t\tif (move.specialType === SpecialMove.EnPassant || board.board[move.endCoordinates[0]][move.endCoordinates[1]].isEmpty())\n\t\t\t\t\tcontinue;\n\n\t\t\t\tbaseEvaluations.set(move, evaluation + 5000);\n\t\t\t}\n\n\t\t\treturn baseEvaluations;\n\t\t}\n\t})\n);\n\nexport const comfuterPusherAlgorithm = createBotAlgorithm(\n\tcreateComfuterBasedAlgorithm({\n\t\tstringifiedType: ZombieType.F_Pusher,\n\t\tevaluate(moves, board): Map<MoveComponent, number> {\n\t\t\tconst baseEvaluations = comfuterAlgorithm.evaluate.call(this, moves, board);\n\n\t\t\tfor (const [move, evaluation] of baseEvaluations) {\n\t\t\t\tif (!verifyStandardMove(move)) continue;\n\t\t\t\tconst pieceString = board.board[move.startCoordinates[0]][move.startCoordinates[1]];\n\t\t\t\tif (pieceString.isPiece() && !pieceControlConfigSettings[pieceString.piece].moveGenerationSettings.isPawn) {\n\t\t\t\t\tbaseEvaluations.set(move, evaluation + 5000);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn baseEvaluations;\n\t\t}\n\t})\n);\n\nexport const patzerAlgorithm = createBotAlgorithm(\n\tcreateComfuterBasedAlgorithm({\n\t\tstringifiedType: ZombieType.Patzer,\n\t\tevaluate(moves, defaultBoard): Map<MoveComponent, number> {\n\t\t\tconst baseEvaluations = comfuterAlgorithm.evaluate.call(this, moves, defaultBoard);\n\t\t\tfor (const [move, evaluation] of baseEvaluations) {\n\t\t\t\tbaseEvaluations.set(move, -evaluation);\n\t\t\t}\n\n\t\t\treturn baseEvaluations;\n\t\t}\n\t})\n);\n","import { createBotAlgorithm, ZombieType } from \"../BotInterface\";\nimport { comfuterAlgorithm } from \"./ComfuterEvaluation\";\nimport { createComfuterBasedAlgorithm } from \"./ComfuterEvaluationExtensions\";\nimport { randoBotAlgorithm } from \"./RandomEvaluation\";\n\nexport const RanterAlgorithm = createBotAlgorithm(\n\tcreateComfuterBasedAlgorithm({\n\t\tstringifiedType: ZombieType.Ranter,\n\t\tevaluate(...args) {\n\t\t\tif (Math.random() < 0.5) {\n\t\t\t\treturn randoBotAlgorithm.evaluate.apply(this, args);\n\t\t\t} else return comfuterAlgorithm.evaluate.apply(this, args);\n\t\t}\n\t})\n);\n","import { Move, MoveComponent, verifyRequiredMove, verifyStandardMove } from \"@moveGeneration/MoveTree/MoveTreeInterface\";\nimport { createBotAlgorithm, ZombieType } from \"../BotInterface\";\n\nexport function randomlyPickNextChainedMoves(move: MoveComponent, resultingMove: MoveComponent[] = []): Move {\n\tconst newMove = [...resultingMove, move];\n\tif (move.nextChainedMoves && !move.isForcedContinuation && Math.random() > 0.5) {\n\t\treturn randomlyPickNextChainedMoves(move.nextChainedMoves[Math.floor(Math.random() * move.nextChainedMoves.length)], newMove);\n\t} else {\n\t\tif (!verifyRequiredMove(newMove)) throw new Error(\"Required move length is 0\");\n\t\treturn newMove;\n\t}\n}\n\nexport const randoBotAlgorithm = createBotAlgorithm({\n\tstringifiedType: ZombieType.Rando,\n\tevaluate(moves, board): Map<MoveComponent, number> {\n\t\tconst copyOfMoves = moves.slice();\n\t\tfor (let i = moves.length - 1; i > 0; i--) {\n\t\t\tconst j = Math.floor(Math.random() * (i + 1));\n\t\t\t[copyOfMoves[i], copyOfMoves[j]] = [moves[j], moves[i]];\n\t\t}\n\n\t\tconst data = board.data,\n\t\t\tboardSquares = board.board;\n\n\t\tconst zombieEatZombieMoves: typeof moves = [];\n\t\tconst otherMoves: typeof moves = [];\n\t\tfor (const move of copyOfMoves) {\n\t\t\tif (verifyStandardMove(move)) {\n\t\t\t\tconst targetPiece = boardSquares[move.endCoordinates[1]][move.endCoordinates[0]];\n\t\t\t\tif (targetPiece.isPiece() && data.fenOptions.tag(\"resigned\")[targetPiece.color]) {\n\t\t\t\t\tzombieEatZombieMoves.push(move);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\totherMoves.push(move);\n\t\t}\n\n\t\tlet startingEvaluation = 0;\n\t\treturn new Map([\n\t\t\t...otherMoves.reduce<Array<[MoveComponent, number]>>((p, n) => (p.push([n, --startingEvaluation]), p), []),\n\t\t\t...zombieEatZombieMoves.reduce<Array<[MoveComponent, number]>>((p, n) => (p.push([n, --startingEvaluation / 2]), p), [])\n\t\t]);\n\t},\n\tpickPreferredMove(evaluations: Map<MoveComponent, number>): Move {\n\t\treturn randomlyPickNextChainedMoves([...evaluations.entries()].reduce((p, n) => (n[1] > p[1] ? n : p))[0]);\n\t}\n});\n","import { MoveComponent, verifyStandardMove, SpecialMove } from \"@moveGeneration/MoveTree/MoveTreeInterface\";\nimport { pieceControlConfigSettings } from \"@moveGeneration/PieceControl/PieceControlInterface\";\nimport { createBotAlgorithm, ZombieMoveGenerationAlgorithm, ZombieType } from \"../BotInterface\";\nimport { randoBotAlgorithm } from \"./RandomEvaluation\";\n\nexport const createRandomBasedAlgorithm = (\n\talgorithm: Omit<ZombieMoveGenerationAlgorithm, \"pickPreferredMove\">\n): ZombieMoveGenerationAlgorithm => ({\n\t...algorithm,\n\tpickPreferredMove(...args) {\n\t\treturn randoBotAlgorithm.pickPreferredMove.apply(this, args);\n\t}\n});\n\nexport const checkerAlgorithm = createBotAlgorithm(\n\tcreateRandomBasedAlgorithm({\n\t\tstringifiedType: ZombieType.Checker,\n\t\tevaluate(moves, board): Map<MoveComponent, number> {\n\t\t\tconst baseEvaluations = randoBotAlgorithm.evaluate.call(this, moves, board);\n\n\t\t\tfor (const [move, evaluation] of baseEvaluations) {\n\t\t\t\tconst snapshot = board.createSnapshot();\n\t\t\t\tconst { checks, checkmates } = board.makeMove([move]);\n\t\t\t\tif (checks.filter((c, i) => c && !checkmates[i] === c).length === 0) {\n\t\t\t\t\tbaseEvaluations.set(move, evaluation / (evaluation / 2));\n\t\t\t\t}\n\t\t\t\tboard.loadSnapshot(snapshot);\n\t\t\t}\n\n\t\t\treturn baseEvaluations;\n\t\t}\n\t})\n);\n\nexport const muncherAlgorithm = createBotAlgorithm(\n\tcreateRandomBasedAlgorithm({\n\t\tstringifiedType: ZombieType.Muncher,\n\t\tevaluate(moves, board): Map<MoveComponent, number> {\n\t\t\tconst baseEvaluations = randoBotAlgorithm.evaluate.call(this, moves, board);\n\n\t\t\tfor (const [move, evaluation] of baseEvaluations) {\n\t\t\t\tif (!verifyStandardMove(move)) continue;\n\t\t\t\tif (move.specialType === SpecialMove.EnPassant || board.board[move.endCoordinates[0]][move.endCoordinates[1]].isEmpty())\n\t\t\t\t\tcontinue;\n\n\t\t\t\tbaseEvaluations.set(move, evaluation / (evaluation / 2));\n\t\t\t}\n\n\t\t\treturn baseEvaluations;\n\t\t}\n\t})\n);\n\nexport const pusherAlgorithm = createBotAlgorithm(\n\tcreateRandomBasedAlgorithm({\n\t\tstringifiedType: ZombieType.Pusher,\n\t\tevaluate(moves, board): Map<MoveComponent, number> {\n\t\t\tconst baseEvaluations = randoBotAlgorithm.evaluate.call(this, moves, board);\n\n\t\t\tfor (const [move, evaluation] of baseEvaluations) {\n\t\t\t\tif (!verifyStandardMove(move)) continue;\n\t\t\t\tconst pieceString = board.board[move.startCoordinates[0]][move.startCoordinates[1]];\n\t\t\t\tif (pieceString.isPiece() && !pieceControlConfigSettings[pieceString.piece].moveGenerationSettings.isPawn) {\n\t\t\t\t\tbaseEvaluations.set(move, evaluation / (evaluation / 2));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn baseEvaluations;\n\t\t}\n\t})\n);\n","import { Board } from \"@moveGeneration/Board/Board\";\nimport { Move, MoveComponent } from \"@moveGeneration/MoveTree/MoveTreeInterface\";\n\nexport enum ZombieType {\n\tRando = \"rando\",\n\tFuter = \"comfuter\",\n\tRanter = \"ranter\",\n\tPatzer = \"patzer\",\n\tPusher = \"pusher\",\n\tChecker = \"checker\",\n\tMuncher = \"muncher\",\n\tF_Pusher = \"pusher_comfuter\",\n\tF_Checker = \"checker_comfuter\",\n\tF_Muncher = \"muncher_comfuter\"\n}\n\nexport const verifyZombieType = (zombieType: string): zombieType is ZombieType => zombieType in ZombieType;\n\nexport interface ZombieMoveGenerationAlgorithm {\n\treadonly stringifiedType: ZombieType;\n\tevaluate(moves: MoveComponent[], board: Board): Map<MoveComponent, number>;\n\tpickPreferredMove(evaluations: Map<MoveComponent, number>): Move;\n}\n\nexport const botAlgorithms = new Map<ZombieType, ZombieMoveGenerationAlgorithm>();\n\nexport function createBotAlgorithm(algorithm: ZombieMoveGenerationAlgorithm) {\n\tbotAlgorithms.set(algorithm.stringifiedType, algorithm);\n\treturn algorithm;\n}\n","import { Board } from \"@moveGeneration/Board/Board\";\nimport { InsufficientMaterialConstructor, InsufficientMaterialState } from \"./InsufficientMaterialConstructor\";\nimport { Tuple, assertNonUndefined, createTuple, createTupleFromCallback } from \"@client/ts/baseTypes\";\nimport { colors, totalPlayers } from \"@moveGeneration/GameInformation/GameData\";\nimport { Coordinate, NumericColor } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport { stalemateOptionsValues } from \"../../FENDataDecorators/StalemateOptions\";\nimport { pieceControlConfigSettings, verifyPieceLetter } from \"@moveGeneration/PieceControl/PieceControlInterface\";\nimport { disabledRank } from \"../../PieceControlDecorators/PromotionRank\";\nimport { compareCoordinates } from \"@moveGeneration/Board/BoardInterface\";\n\nexport class InsufficientMaterialChecker {\n\tprivate readonly noRoyalsToMate: boolean = false;\n\tprivate readonly isDisabled: boolean = false;\n\tprivate readonly promotionPieces;\n\tprivate readonly hasPromotion;\n\n\tconstructor(readonly state: InsufficientMaterialState, board: Board) {\n\t\tfor (const variantRule of board.variantRules) {\n\t\t\tconst { isDisabled, isPartiallyDisabled } = variantRule.getInsufficientMaterialData();\n\t\t\tif (isDisabled) {\n\t\t\t\tthis.isDisabled = true;\n\t\t\t\tbreak;\n\t\t\t} else if (isPartiallyDisabled) this.noRoyalsToMate = true;\n\t\t}\n\t\tthis.hasPromotion = board.variantData.promotionRank !== disabledRank;\n\t\tthis.promotionPieces = board.variantData.promotionPieces || [];\n\t}\n\n\tprivate getRoyalPieceMedians(board: Board) {\n\t\tconst { walls, royalMoveMedians } = this.state,\n\t\t\troyal = board.data.fenOptions.tag(\"royal\"),\n\t\t\tvariantData = board.variantData,\n\t\t\tboardSquares = board.board;\n\t\tconst extraWalls = boardSquares.reduce((accumulator, row, i) => {\n\t\t\treturn (\n\t\t\t\taccumulator +\n\t\t\t\trow.reduce((accumulator, square, j) => {\n\t\t\t\t\tif (square.isWall() && !walls[i][j]) {\n\t\t\t\t\t\treturn accumulator + 1;\n\t\t\t\t\t} else return accumulator;\n\t\t\t\t}, 0)\n\t\t\t);\n\t\t}, 0);\n\n\t\treturn royalMoveMedians.map((median, i) => {\n\t\t\tif (!royal[i]) return;\n\n\t\t\tlet minimumMedian: number;\n\t\t\tif (variantData.stalemateOptions === stalemateOptionsValues.stalemateLoses) {\n\t\t\t\tminimumMedian = 1;\n\t\t\t\tmedian--;\n\t\t\t} else {\n\t\t\t\tmedian++;\n\t\t\t\tminimumMedian = 2;\n\t\t\t}\n\n\t\t\tmedian -= extraWalls;\n\t\t\tif (median < minimumMedian) median = minimumMedian;\n\n\t\t\treturn median;\n\t\t});\n\t}\n\n\tprivate obtainPieceSymbolFromCoordinate(board: Board, coordinate: Coordinate) {\n\t\tconst { optimizedPieces, pieceSquareMedians, backwardsPieceRegistry } = this.state;\n\t\tconst piece = board.board[coordinate[0]][coordinate[1]];\n\t\tif (pieceControlConfigSettings[piece.piece].moveGenerationSettings.isPawn && this.hasPromotion) {\n\t\t\tconst availableSymbols = [...optimizedPieces]\n\t\t\t\t.filter((p) => verifyPieceLetter(p) && !pieceControlConfigSettings[p].moveGenerationSettings.isPawn)\n\t\t\t\t.map((p) => pieceSquareMedians[p]);\n\t\t\tif (availableSymbols.length === 0) {\n\t\t\t\treturn { selectedSymbol: InsufficientMaterialConstructor.NON_INDEXED_PIECE_SYMBOL, piece };\n\t\t\t} else {\n\t\t\t\tconst candidates = availableSymbols.map((s) => {\n\t\t\t\t\treturn s[Object.getOwnPropertySymbols(s)[0]].reduce<number>((p, n) => p + (n ?? 0), 0);\n\t\t\t\t});\n\t\t\t\tconst candidateIndex = candidates.indexOf(Math.max(...candidates));\n\t\t\t\tconst symbol = Object.getOwnPropertySymbols(availableSymbols[candidateIndex])[0];\n\t\t\t\treturn {\n\t\t\t\t\tselectedSymbol: symbol,\n\t\t\t\t\tpiece\n\t\t\t\t};\n\t\t\t}\n\t\t} else {\n\t\t\tconst availableSymbols = Object.getOwnPropertySymbols(pieceSquareMedians[piece.piece]);\n\t\t\tconst selectedSymbol =\n\t\t\t\tavailableSymbols.length === 1 ? availableSymbols[0] : backwardsPieceRegistry[piece.piece][coordinate[0]][coordinate[1]];\n\t\t\tassertNonUndefined(selectedSymbol);\n\n\t\t\treturn { selectedSymbol, piece };\n\t\t}\n\t}\n\n\tprivate getPartialIntersection(parameters: {\n\t\tboard: Board;\n\t\tarmy: Coordinate[];\n\t\tpieces: Tuple<Coordinate[], typeof totalPlayers>;\n\t\troyalColor: NumericColor;\n\t}) {\n\t\tconst { pieceSquareMedians } = this.state,\n\t\t\t{ board, army, pieces, royalColor } = parameters;\n\t\tfor (const coordinate of army) {\n\t\t\tconst { piece, selectedSymbol } = this.obtainPieceSymbolFromCoordinate(board, coordinate);\n\t\t\tconst symbolsLength = Object.getOwnPropertySymbols(pieceSquareMedians[piece.piece]).length;\n\t\t\tif (symbolsLength > 1 || pieceControlConfigSettings[piece.piece].moveGenerationSettings.isColorBound) {\n\t\t\t\tfor (const enemyCoordinate of pieces[royalColor]) {\n\t\t\t\t\tconst { selectedSymbol: enemySymbol } = this.obtainPieceSymbolFromCoordinate(board, enemyCoordinate);\n\t\t\t\t\tif (selectedSymbol === enemySymbol) return Infinity;\n\t\t\t\t}\n\t\t\t} else return Infinity;\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\tcheckCurrentState(board: Board) {\n\t\tconst fenOptions = board.data.fenOptions;\n\t\tconst dead = fenOptions.tag(\"dead\"),\n\t\t\troyal = fenOptions.tag(\"royal\");\n\t\tconst pieces = board.getPlayerPieces(),\n\t\t\tresultingInsufficientPieces = createTuple(false, totalPlayers);\n\t\tif (this.isDisabled) return resultingInsufficientPieces;\n\n\t\tconst royalPieceMedians = this.getRoyalPieceMedians(board),\n\t\t\t{ oppositionMedians, pieceSquareMedians } = this.state;\n\t\tconst squaresPlayerCanOutrange = createTupleFromCallback(() => createTuple(0, totalPlayers), totalPlayers);\n\t\tfor (const color of colors) {\n\t\t\tconst army = pieces[color];\n\t\t\tif (dead[color]) continue;\n\t\t\tfor (const royalColor of colors) {\n\t\t\t\tif (color === royalColor || dead[royalColor]) continue;\n\t\t\t\tif (!royal[royalColor] || this.noRoyalsToMate) {\n\t\t\t\t\tsquaresPlayerCanOutrange[royalColor][color] = this.getPartialIntersection({ board, army, pieces, royalColor });\n\t\t\t\t} else {\n\t\t\t\t\tconst royalSquares = royalPieceMedians[royalColor];\n\t\t\t\t\tif (royalSquares === undefined) continue;\n\t\t\t\t\tconst fenRoyal = royal[color],\n\t\t\t\t\t\tcurrentColorBounds: symbol[] = [];\n\t\t\t\t\tfor (const coordinate of army) {\n\t\t\t\t\t\tif (fenRoyal && compareCoordinates(coordinate, fenRoyal)) {\n\t\t\t\t\t\t\tif (board.variantData.royalsCannotCapture) {\n\t\t\t\t\t\t\t\tsquaresPlayerCanOutrange[color][royalColor]++;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsquaresPlayerCanOutrange[color][royalColor] += oppositionMedians[color][royalColor];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst { piece, selectedSymbol } = this.obtainPieceSymbolFromCoordinate(board, coordinate);\n\t\t\t\t\t\t\tif (this.hasPromotion && pieceControlConfigSettings[piece.piece].moveGenerationSettings.isPawn) {\n\t\t\t\t\t\t\t\tconst medians = this.promotionPieces.map((piece) => {\n\t\t\t\t\t\t\t\t\tconst subSymbol = Object.getOwnPropertySymbols(pieceSquareMedians[piece])[0];\n\t\t\t\t\t\t\t\t\treturn pieceSquareMedians[piece][subSymbol][royalColor] ?? 0;\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tsquaresPlayerCanOutrange[color][royalColor] += Math.max(...medians);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (pieceControlConfigSettings[piece.piece].moveGenerationSettings.isColorBound) {\n\t\t\t\t\t\t\t\t\tif (currentColorBounds.includes(selectedSymbol)) continue;\n\t\t\t\t\t\t\t\t\tcurrentColorBounds.push(selectedSymbol);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tsquaresPlayerCanOutrange[color][royalColor] += pieceSquareMedians[piece.piece][selectedSymbol][royalColor] ?? 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tsquaresPlayerCanOutrange[color][royalColor] += pieces[royalColor].length - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (const color of colors) {\n\t\t\tif (dead[color]) continue;\n\t\t\tlet sum = 0;\n\t\t\tfor (let i = 0; i < totalPlayers; i++) {\n\t\t\t\tif (i === color) continue;\n\t\t\t\tsum += squaresPlayerCanOutrange[i][color];\n\t\t\t}\n\n\t\t\tconst royal = royalPieceMedians[color];\n\t\t\tif ((royal !== undefined && sum <= royal) || sum < 0) resultingInsufficientPieces[color] = true;\n\t\t}\n\t\treturn resultingInsufficientPieces;\n\t}\n}\n","import { Tuple, createTuple, createTupleFromCallback } from \"@client/ts/baseTypes\";\nimport { BoardSquares, initializeBoardSquares } from \"@client/ts/logic/BaseInterfaces\";\nimport { Board, baseImmunes } from \"@moveGeneration/Board/Board\";\nimport { boardDimension, colors, totalPlayers } from \"@moveGeneration/GameInformation/GameData\";\nimport { PieceString, createPieceFromData, emptyPieceString } from \"@moveGeneration/GameInformation/GameUnits/PieceString\";\nimport {\n\tPieceLetter,\n\tdefaultPieces,\n\tgrasshopperPieceLetter,\n\tpieceControlConfigSettings,\n\tverifyPieceLetter\n} from \"@moveGeneration/PieceControl/PieceControlInterface\";\nimport { binaryMasks, findMinimumOnBoardSquares, oneBitMask, optimizePieceSet } from \"./Utilities\";\nimport { disabledRank } from \"../../PieceControlDecorators/PromotionRank\";\nimport { stringifyCoordinate } from \"@moveGeneration/Board/BoardInterface\";\nimport { bitCount } from \"@utils/NumberUtils\";\nimport { PieceMedianCounterReturnType } from \"./PieceMedianCounter\";\n\nexport interface InsufficientMaterialState {\n\treadonly walls: BoardSquares<boolean>;\n\treadonly backwardsPieceRegistry: Record<PieceLetter, BoardSquares<symbol | null>>;\n\treadonly pieceSquareMedians: Record<PieceLetter, Record<symbol, Tuple<number | undefined, typeof totalPlayers>>>;\n\treadonly royalMoveMedians: Tuple<number, typeof totalPlayers>;\n\treadonly optimizedPieces: Set<PieceLetter>;\n\toppositionMedians: Tuple<Tuple<number, typeof totalPlayers>, typeof totalPlayers>;\n}\n\nexport class InsufficientMaterialConstructor {\n\tstatic readonly NON_INDEXED_PIECE_SYMBOL = Symbol();\n\tprivate readonly board: Board;\n\tprivate readonly emptyBoard: BoardSquares<PieceString>;\n\tprivate readonly pieceMoveRegistry: Record<PieceLetter, Record<symbol, BoardSquares<Uint16Array>>> = {};\n\tprivate readonly possibleRoyals = createTupleFromCallback<string[], typeof totalPlayers>(() => [], totalPlayers);\n\tprivate readonly boardDestinations = new Map<PieceLetter, Uint16Array[]>();\n\tprivate readonly royalPieceSets = createTupleFromCallback(() => new Set<string>(), totalPlayers);\n\treadonly state: InsufficientMaterialState;\n\n\tconstructor(board: Board, readonly callback: (state: InsufficientMaterialState) => void) {\n\t\tthis.board = board.createClone();\n\t\tthis.emptyBoard = this.board.board.map((row) => row.map((square) => (square.isWall() ? square : emptyPieceString)));\n\t\tthis.state = {\n\t\t\twalls: this.emptyBoard.map((row) => row.map((square) => square.isWall())),\n\t\t\tbackwardsPieceRegistry: {},\n\t\t\troyalMoveMedians: createTuple(0, totalPlayers),\n\t\t\tpieceSquareMedians: {\n\t\t\t\t[grasshopperPieceLetter]: {\n\t\t\t\t\t[InsufficientMaterialConstructor.NON_INDEXED_PIECE_SYMBOL]: [2, 2, 2, 2]\n\t\t\t\t}\n\t\t\t},\n\t\t\toptimizedPieces: optimizePieceSet(this.board.variantData.promotionPieces || [], true),\n\t\t\toppositionMedians: createTupleFromCallback(() => createTuple(0, totalPlayers), totalPlayers)\n\t\t};\n\t}\n\n\tprivate initializeRoyals() {\n\t\tconst boardSquares = this.board.board,\n\t\t\tpromotionPieces = this.board.variantData.promotionPieces || [];\n\t\tthis.board.data.fenOptions.tag(\"royal\").forEach((royal, color) => {\n\t\t\tif (royal) {\n\t\t\t\tconst piece = boardSquares[royal[0]][royal[1]].piece;\n\t\t\t\tif (pieceControlConfigSettings[piece].moveGenerationSettings.isPawn) {\n\t\t\t\t\tthis.possibleRoyals[color] = [piece, ...promotionPieces];\n\t\t\t\t} else this.possibleRoyals[color] = [piece];\n\t\t\t} else if (promotionPieces.includes(defaultPieces.king)) {\n\t\t\t\tthis.possibleRoyals[color] = [defaultPieces.king];\n\t\t\t}\n\t\t});\n\n\t\tfor (const color of colors) {\n\t\t\tif (this.possibleRoyals[color].length > 1) {\n\t\t\t\tthis.royalPieceSets[color] = optimizePieceSet(this.possibleRoyals[color], false);\n\t\t\t} else if (this.possibleRoyals[color].length === 1) {\n\t\t\t\tthis.royalPieceSets[color].add(this.possibleRoyals[color][0]);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate recurseThroughSquares(i: number, j: number, piece: PieceString) {\n\t\tconst {\n\t\t\temptyBoard,\n\t\t\tboard: { controls },\n\t\t\tpieceMoveRegistry\n\t\t} = this;\n\t\tconst currentSquares = new Set<string>(),\n\t\t\tunvisitedSquares = new Set<string>();\n\t\tif (!piece.isPiece()) throw new TypeError(`Wrong piece signature detected at ${piece.value}`);\n\t\tconst baseBuilder = controls[piece.piece]().setColor(piece.color).setBoard(emptyBoard).setBaseImmunePieces(baseImmunes);\n\t\tconst registryResult = initializeBoardSquares(() => new Uint16Array(boardDimension).fill(oneBitMask));\n\n\t\tfunction recurse(x: number, y: number) {\n\t\t\tconst control = baseBuilder.setCoordinates(x, y).constructPieceControl();\n\t\t\tconst moves = control.getPseudoLegalMoves(),\n\t\t\t\tmoveLength = moves.length;\n\t\t\tif (moveLength === 0) return;\n\n\t\t\tfor (let i = 0; i < moveLength; i++) {\n\t\t\t\tconst move = moves[i].move;\n\t\t\t\tconst moveString = stringifyCoordinate(move);\n\t\t\t\tregistryResult[x][y][move[0]] |= binaryMasks[move[1]];\n\t\t\t\tif (!currentSquares.has(moveString)) {\n\t\t\t\t\tunvisitedSquares.add(moveString);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const value of unvisitedSquares) {\n\t\t\t\tconst [x, y] = value.split(\":\");\n\t\t\t\tif (!currentSquares.has(value)) {\n\t\t\t\t\tcurrentSquares.add(value);\n\t\t\t\t\trecurse(parseInt(x, 10), parseInt(y, 10));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\trecurse(i, j);\n\t\tif (!(piece.piece in pieceMoveRegistry)) pieceMoveRegistry[piece.piece] = {};\n\t\tpieceMoveRegistry[piece.piece][Symbol()] = registryResult;\n\n\t\tconst permutations = new Uint16Array(14).fill(oneBitMask);\n\t\tcurrentSquares.forEach((value) => {\n\t\t\tconst valueArr = value.split(\":\");\n\t\t\tpermutations[parseInt(valueArr[0], 10)] |= binaryMasks[parseInt(valueArr[1], 10)];\n\t\t});\n\t\tunvisitedSquares.forEach((value) => {\n\t\t\tconst valueArr = value.split(\":\");\n\t\t\tpermutations[parseInt(valueArr[0], 10)] |= binaryMasks[parseInt(valueArr[1], 10)];\n\t\t});\n\n\t\treturn permutations;\n\t}\n\n\tprivate addToBoardDestinations(i: number, j: number, piece: PieceString) {\n\t\tconst permutations = this.recurseThroughSquares(i, j, piece);\n\n\t\tconst boardPiece = this.boardDestinations.get(piece.piece);\n\t\tif (boardPiece) {\n\t\t\tthis.boardDestinations.set(piece.piece, boardPiece.concat(permutations));\n\t\t} else {\n\t\t\tthis.boardDestinations.set(piece.piece, [permutations]);\n\t\t}\n\t}\n\n\tprivate getBoardDestinations() {\n\t\tconst boardSquares = this.board.board,\n\t\t\tpromotionRank = this.board.variantData.promotionRank || disabledRank,\n\t\t\tpromotionPieces = this.board.variantData.promotionPieces || [];\n\t\tfor (let i = 0; i < boardDimension; i++) {\n\t\t\tfor (let j = 0; j < boardDimension; j++) {\n\t\t\t\tif (boardSquares[i][j].isPiece()) this.addToBoardDestinations(i, j, boardSquares[i][j]);\n\t\t\t}\n\t\t}\n\n\t\tconst hasPromotion = promotionRank !== disabledRank && promotionPieces.some((p) => verifyPieceLetter(p));\n\t\tconst promotionRanks = [boardDimension - promotionRank, promotionRank - 1, promotionRank - 1, boardDimension - promotionRank];\n\t\tconst optimizedPieces = optimizePieceSet(promotionPieces, true);\n\t\tif (hasPromotion) {\n\t\t\tfor (let color of colors) {\n\t\t\t\tcolor &= 1;\n\t\t\t\tfor (let x = 0; x < boardDimension; x++) {\n\t\t\t\t\tconst [i, j] = [color ? promotionRanks[color] : x, color ? x : promotionRanks[color]];\n\t\t\t\t\tif (this.state.walls[i][j]) continue;\n\t\t\t\t\tfor (const piece of optimizedPieces) {\n\t\t\t\t\t\tthis.addToBoardDestinations(i, j, createPieceFromData(0, piece));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate initializeBackwardsPieceRegistry() {\n\t\tconst entries = this.boardDestinations.entries(),\n\t\t\t{\n\t\t\t\tstate: { backwardsPieceRegistry },\n\t\t\t\tpieceMoveRegistry\n\t\t\t} = this;\n\t\tfor (const [entry, uintArray] of entries) {\n\t\t\tif (pieceControlConfigSettings[entry].moveGenerationSettings.isPawn || entry === grasshopperPieceLetter || !verifyPieceLetter(entry))\n\t\t\t\tcontinue;\n\t\t\tlet isAlwaysIntersecting = true;\n\t\t\tconst permutationArray: Array<number | Uint16Array> = [];\n\n\t\t\tfor (const permutationEntry of uintArray) {\n\t\t\t\tif (permutationArray.length === 0) {\n\t\t\t\t\tpermutationArray.push(permutationEntry);\n\t\t\t\t} else {\n\t\t\t\t\tconst index = permutationArray.findIndex((uintArr) => {\n\t\t\t\t\t\tif (typeof uintArr !== \"number\") return uintArr.every((n, j) => n === permutationEntry[j]);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t});\n\t\t\t\t\tif (~index) {\n\t\t\t\t\t\tpermutationArray.push(index);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpermutationArray.push(permutationEntry);\n\t\t\t\t\t\tisAlwaysIntersecting = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (isAlwaysIntersecting) {\n\t\t\t\tpieceMoveRegistry[entry] = {\n\t\t\t\t\t[Symbol()]: pieceMoveRegistry[entry][Object.getOwnPropertySymbols(pieceMoveRegistry[entry])[0]]\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tif (!(entry in backwardsPieceRegistry)) {\n\t\t\t\t\tbackwardsPieceRegistry[entry] = initializeBoardSquares(() => null);\n\t\t\t\t}\n\n\t\t\t\tconst remappedSymbols: Array<symbol | number> = [];\n\t\t\t\tfor (const squares of permutationArray) {\n\t\t\t\t\tlet remappedSymbol: symbol | undefined;\n\t\t\t\t\tif (typeof squares === \"number\") {\n\t\t\t\t\t\tremappedSymbols.push(squares);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tfor (let i = 0; i < boardDimension; i++) {\n\t\t\t\t\t\tfor (let j = 0; j < boardDimension; j++) {\n\t\t\t\t\t\t\tif ((squares[i] & binaryMasks[j]) ^ oneBitMask) {\n\t\t\t\t\t\t\t\tif (!remappedSymbol) {\n\t\t\t\t\t\t\t\t\tremappedSymbol = Symbol();\n\t\t\t\t\t\t\t\t\tremappedSymbols.push(remappedSymbol);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tthis.state.backwardsPieceRegistry[entry][i][j] ??= remappedSymbol;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst uintValues = Object.getOwnPropertySymbols(pieceMoveRegistry[entry]).map((sym) => pieceMoveRegistry[entry][sym]);\n\t\t\t\tpieceMoveRegistry[entry] = {};\n\t\t\t\tfor (let i = 0; i < uintValues.length; i++) {\n\t\t\t\t\tconst remapped = remappedSymbols[i];\n\t\t\t\t\tif (typeof remapped === \"number\") continue;\n\t\t\t\t\tif (typeof remapped === \"undefined\") break;\n\t\t\t\t\tpieceMoveRegistry[entry][remapped] = uintValues[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate generateOppositionSquares() {\n\t\tconst boardSquares = this.board.board,\n\t\t\tcontrols = this.board.controls,\n\t\t\t{ emptyBoard } = this;\n\t\tconst royalMoves = createTuple<BoardSquares<Uint16Array>, typeof totalPlayers>(\n\t\t\tinitializeBoardSquares(() => new Uint16Array(boardDimension).fill(oneBitMask)),\n\t\t\ttotalPlayers\n\t\t);\n\t\tconst oppositionRowEchelon = createTuple<BoardSquares<Uint16Array> | undefined, typeof totalPlayers>(undefined, totalPlayers);\n\n\t\tthis.board.data.fenOptions.tag(\"royal\").forEach((royal, color) => {\n\t\t\tif (!royal) return;\n\t\t\tconst royalPiece = boardSquares[royal[0]][royal[1]];\n\t\t\tconst controlBuilder = controls[royalPiece.piece];\n\t\t\tconst builder = controlBuilder().setColor(0).setBaseImmunePieces(baseImmunes).setBoard(emptyBoard);\n\t\t\tconst finalArray = initializeBoardSquares(() => new Uint16Array(14).fill(oneBitMask));\n\t\t\tfor (let i = 0; i < boardSquares.length; i++) {\n\t\t\t\tfor (let j = 0; j < boardSquares[0].length; j++) {\n\t\t\t\t\tif (emptyBoard[i][j].isWall()) continue;\n\t\t\t\t\tconst control = builder.setCoordinates(i, j).constructPieceControl();\n\t\t\t\t\tconst moves = control.getPseudoLegalMoves();\n\t\t\t\t\tconst permutationArray = new Uint16Array(boardDimension).fill(oneBitMask);\n\t\t\t\t\tfor (const { move } of moves) permutationArray[move[0]] |= binaryMasks[move[1]];\n\t\t\t\t\tfinalArray[i][j] = permutationArray;\n\t\t\t\t\troyalMoves[color][i][j] = permutationArray;\n\t\t\t\t}\n\t\t\t}\n\t\t\toppositionRowEchelon[color] = finalArray;\n\t\t});\n\n\t\tfor (const color of colors) {\n\t\t\tthis.state.royalMoveMedians[color] = findMinimumOnBoardSquares(royalMoves[color]);\n\t\t}\n\t\treturn { oppositionRowEchelon, royalMoves };\n\t}\n\n\tprivate generateOppositeMedians(rowEchelon: Tuple<BoardSquares<Uint16Array> | undefined, typeof totalPlayers>) {\n\t\tconst {\n\t\t\t\temptyBoard,\n\t\t\t\tstate: { oppositionMedians }\n\t\t\t} = this,\n\t\t\troyals = this.board.data.fenOptions.tag(\"royal\");\n\t\tfor (let i = 0; i < totalPlayers; i++) {\n\t\t\tfor (let j = 0; j < totalPlayers; j++) {\n\t\t\t\tif (i === j || rowEchelon[i] === undefined) continue;\n\t\t\t\tconst royalPieceA = royals[i],\n\t\t\t\t\troyalPieceB = royals[j];\n\t\t\t\tif (!royalPieceA || !royalPieceB) continue;\n\t\t\t\tconst finalArray = Array.from({ length: 14 }, () => Array.from({ length: 14 }, () => 0));\n\t\t\t\tfor (let i2 = 0; i2 < boardDimension; i2++) {\n\t\t\t\t\tfor (let j2 = 0; j2 < boardDimension; j2++) {\n\t\t\t\t\t\tif (emptyBoard[i2][j2].isWall()) continue;\n\t\t\t\t\t\tconst jjIndex = rowEchelon[j];\n\t\t\t\t\t\tconst iiIndex = rowEchelon[i];\n\t\t\t\t\t\tif (!jjIndex || !iiIndex)\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t`Central opposition matrix indexes are undefined: ${jjIndex?.toString() ?? \"undefined\"}  ${\n\t\t\t\t\t\t\t\t\tiiIndex?.toString() ?? \"undefined\"\n\t\t\t\t\t\t\t\t}`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t(jjIndex[i2][j2][royalPieceA[1]] & binaryMasks[royalPieceA[0]]) ^ oneBitMask &&\n\t\t\t\t\t\t\t(iiIndex[i2][j2][royalPieceB[1]] & binaryMasks[royalPieceB[0]]) ^ oneBitMask\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst uintArray = jjIndex[i2][j2].map((e, x) => e & iiIndex[i2][j2][x]);\n\t\t\t\t\t\tlet newResultingSquares = 0;\n\t\t\t\t\t\tfor (let dimSquare = 0; dimSquare < boardDimension; dimSquare++) {\n\t\t\t\t\t\t\tnewResultingSquares += bitCount(uintArray[dimSquare]) - 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfinalArray[i2][j2] = newResultingSquares;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet minimum = Infinity;\n\t\t\t\tfor (let i2 = 0; i2 < boardDimension; i2++) {\n\t\t\t\t\tfor (let j2 = 0; j2 < boardDimension; j2++) {\n\t\t\t\t\t\tif (finalArray[i2][j2] !== 0 && finalArray[i2][j2] < minimum) {\n\t\t\t\t\t\t\tminimum = finalArray[i2][j2];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\toppositionMedians[i][j] = minimum - 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate generatePieceMoveMedians(royalMoves: Tuple<BoardSquares<Uint16Array>, typeof totalPlayers>) {\n\t\tconst {\n\t\t\tpieceMoveRegistry,\n\t\t\tstate: { pieceSquareMedians, walls },\n\t\t\troyalPieceSets\n\t\t} = this;\n\t\tlet currentMessages = 0,\n\t\t\trequiredMessages = 0;\n\t\tfor (const pieceLetter in pieceMoveRegistry) {\n\t\t\tif (!verifyPieceLetter(pieceLetter) || !Object.prototype.hasOwnProperty.call(pieceMoveRegistry, pieceLetter)) continue;\n\t\t\tif (pieceLetter in pieceSquareMedians) continue;\n\t\t\tpieceSquareMedians[pieceLetter] = {};\n\t\t\tconst registeredSymbols = Object.getOwnPropertySymbols(pieceMoveRegistry[pieceLetter]);\n\t\t\tfor (const registeredSymbol of registeredSymbols) {\n\t\t\t\tconst pieceMedianCounter = new Worker(new URL(\"./PieceMedianCounter.ts\", import.meta.url));\n\t\t\t\tpieceMedianCounter.postMessage({\n\t\t\t\t\twalls,\n\t\t\t\t\tmoveRegistryArray: pieceMoveRegistry[pieceLetter][registeredSymbol].map((r) => r.map((uint) => uint.buffer)),\n\t\t\t\t\troyalMoves: royalMoves.map((board) => board.map((r) => r.map((uint) => uint.buffer))),\n\t\t\t\t\troyalPieceSet: royalPieceSets.map((s) => [...s])\n\t\t\t\t});\n\t\t\t\trequiredMessages++;\n\t\t\t\tpieceMedianCounter.onmessage = (e: MessageEvent<PieceMedianCounterReturnType>) => {\n\t\t\t\t\tpieceSquareMedians[pieceLetter][registeredSymbol] = e.data;\n\t\t\t\t\tpieceMedianCounter.terminate();\n\t\t\t\t\tif (requiredMessages === ++currentMessages) {\n\t\t\t\t\t\tthis.callback(this.state);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\tgenerateInsufficientMaterialState() {\n\t\tthis.initializeRoyals();\n\t\tthis.getBoardDestinations();\n\t\tthis.initializeBackwardsPieceRegistry();\n\t\tconst { royalMoves, oppositionRowEchelon } = this.generateOppositionSquares();\n\t\tthis.generateOppositeMedians(oppositionRowEchelon);\n\t\tthis.generatePieceMoveMedians(royalMoves);\n\t}\n}\n","import type { PieceLetter } from \"@moveGeneration/PieceControl/PieceControlInterface\";\nimport type { InsufficientMaterialState } from \"./InsufficientMaterialConstructor\";\nimport type { BoardSquares } from \"@client/ts/logic/BaseInterfaces\";\nimport type { ImplementInterface, Tuple } from \"@client/ts/baseTypes\";\nimport type { totalPlayers } from \"@moveGeneration/GameInformation/GameData\";\n\ninterface SerializedInsufficientMaterialDraft {\n\treadonly backwardsPieceRegistry: Record<PieceLetter, BoardSquares<number | null>>;\n\treadonly optimizedPieces: PieceLetter[];\n\treadonly pieceSquareMedians: Record<PieceLetter, Record<number, Tuple<number | undefined, typeof totalPlayers>>>;\n}\nexport type SerializedInsufficientMaterialState = ImplementInterface<InsufficientMaterialState, SerializedInsufficientMaterialDraft>;\n\nexport function serializeInsufficientMaterialState(state: InsufficientMaterialState): SerializedInsufficientMaterialState {\n\tconst backwardsPieceRegistry: Record<PieceLetter, BoardSquares<number | null>> = {};\n\tconst counters: Record<symbol, number> = {};\n\n\tlet individualCounter = 0;\n\tlet key: PieceLetter;\n\tfor (key in state.backwardsPieceRegistry) {\n\t\tif (!Object.prototype.hasOwnProperty.call(state.backwardsPieceRegistry, key)) continue;\n\t\tbackwardsPieceRegistry[key] = state.backwardsPieceRegistry[key].map((r) =>\n\t\t\tr.map((e) => {\n\t\t\t\tif (e !== null) {\n\t\t\t\t\tif (e in counters) {\n\t\t\t\t\t\treturn counters[e];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcounters[e] = individualCounter++;\n\t\t\t\t\t\treturn counters[e];\n\t\t\t\t\t}\n\t\t\t\t} else return e;\n\t\t\t})\n\t\t);\n\t}\n\n\tconst pieceSquareMedians: Record<PieceLetter, Record<number, Tuple<number | undefined, typeof totalPlayers>>> = {};\n\tfor (key in state.pieceSquareMedians) {\n\t\tif (!Object.prototype.hasOwnProperty.call(state.pieceSquareMedians, key)) continue;\n\t\tconst result: Record<number, Tuple<number | undefined, typeof totalPlayers>> = {};\n\t\tfor (const symbol of Object.getOwnPropertySymbols(state.pieceSquareMedians[key])) {\n\t\t\tif (symbol in counters) {\n\t\t\t\tresult[counters[symbol]] = state.pieceSquareMedians[key][symbol];\n\t\t\t} else result[individualCounter--] = state.pieceSquareMedians[key][symbol];\n\t\t}\n\t\tpieceSquareMedians[key] = result;\n\t}\n\n\treturn {\n\t\t...state,\n\t\tbackwardsPieceRegistry,\n\t\tpieceSquareMedians,\n\t\toptimizedPieces: [...state.optimizedPieces]\n\t};\n}\n\nexport function deserializeInsufficientMaterialState(state: SerializedInsufficientMaterialState): InsufficientMaterialState {\n\tconst backwardsPieceRegistry: Record<PieceLetter, BoardSquares<symbol | null>> = {};\n\tconst counters: Record<PieceLetter, Record<number, symbol>> = {};\n\tlet key: PieceLetter;\n\tfor (key in state.backwardsPieceRegistry) {\n\t\tif (!Object.prototype.hasOwnProperty.call(state.backwardsPieceRegistry, key)) continue;\n\t\tcounters[key] = {};\n\t\tbackwardsPieceRegistry[key] = state.backwardsPieceRegistry[key].map((r) =>\n\t\t\tr.map((e) => {\n\t\t\t\tif (e !== null) {\n\t\t\t\t\tif (!(e in counters[key])) counters[key][e] = Symbol();\n\t\t\t\t\treturn counters[key][e];\n\t\t\t\t} else return e;\n\t\t\t})\n\t\t);\n\t}\n\n\tconst pieceSquareMedians: Record<PieceLetter, Record<symbol, Tuple<number | undefined, typeof totalPlayers>>> = {};\n\tfor (key in state.pieceSquareMedians) {\n\t\tif (!Object.prototype.hasOwnProperty.call(state.pieceSquareMedians, key)) continue;\n\t\tconst result: Record<symbol, Tuple<number | undefined, typeof totalPlayers>> = {};\n\t\tfor (const numericKey in state.pieceSquareMedians[key]) {\n\t\t\tif (!Object.prototype.hasOwnProperty.call(state.pieceSquareMedians[key], numericKey)) continue;\n\t\t\tconst indexingNumber = Number(numericKey);\n\t\t\tif (key in counters && indexingNumber in counters[key]) {\n\t\t\t\tresult[counters[key][indexingNumber]] = state.pieceSquareMedians[key][indexingNumber];\n\t\t\t} else result[Symbol()] = state.pieceSquareMedians[key][indexingNumber];\n\t\t}\n\t\tpieceSquareMedians[key] = result;\n\t}\n\n\treturn {\n\t\t...state,\n\t\tbackwardsPieceRegistry,\n\t\tpieceSquareMedians,\n\t\toptimizedPieces: new Set(state.optimizedPieces)\n\t};\n}\n","import { boardDimension } from \"@moveGeneration/GameInformation/GameData\";\nimport type { Coordinate } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport { pieceControlConfigSettings } from \"@moveGeneration/PieceControl/PieceControlInterface\";\nimport { FENData } from \"../../../FENData/FENData\";\nimport type { MoveData } from \"../../../MoveTree/MoveTreeInterface\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\nimport { RoyalsCannotCapture } from \"../PieceControlDecorators/RoyalsCannotCapture\";\nimport { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\n\nconst tag = \"atomic\";\nexport class Atomic extends VariantRule<typeof FENData, typeof tag> implements VariantRuleHandler<FENData> {\n\tstatic {\n\t\tVariantRule.initVariantRule(Atomic);\n\t}\n\treadonly dependencies = new Map([[RoyalsCannotCapture, []]]);\n\n\tstatic readonly atomicCoordinates: Coordinate[] = [\n\t\t[-1, -1],\n\t\t[-1, 0],\n\t\t[0, -1],\n\t\t[-1, 1],\n\t\t[1, -1],\n\t\t[1, 0],\n\t\t[0, 1],\n\t\t[1, 1]\n\t];\n\n\tgetDecoratorType() {\n\t\treturn FENData;\n\t}\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Atomic\",\n\t\t\t\tdescription: \"Captures cause all surrounding pieces except pawns to explode\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.extending,\n\t\t\t\tdisplayIcon: chessGlyphIndex.atomic\n\t\t\t}\n\t\t} as const;\n\t}\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\treturn /^Atomic$/i.test(match);\n\t}\n\tserializeToParsingForm(): string {\n\t\treturn \"Atomic\";\n\t}\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\tisComplexEvaluation(): boolean {\n\t\treturn true;\n\t}\n\n\tgetCapturedPieces(moveData: MoveData): Coordinate[] {\n\t\tconst baseCoordinates = this.callHandler(\"getCapturedPieces\", arguments);\n\t\tconst addCoordinate = (disI: number, disJ: number) => {\n\t\t\tconst coordinateI = moveData.endCoordinates[0] + disI;\n\t\t\tconst coordinateJ = moveData.endCoordinates[1] + disJ;\n\t\t\tif (coordinateI >= 0 && coordinateI <= boardDimension && coordinateJ >= 0 && coordinateJ <= boardDimension) {\n\t\t\t\tconst pieceString = this.decorator.board.board[coordinateI][coordinateJ];\n\t\t\t\tif (\n\t\t\t\t\t(pieceString.isPiece() || pieceString.isDead()) &&\n\t\t\t\t\t!pieceControlConfigSettings[pieceString.piece].moveGenerationSettings.isPawn\n\t\t\t\t) {\n\t\t\t\t\tbaseCoordinates.push([coordinateI, coordinateJ]);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tif (baseCoordinates.length !== 0) {\n\t\t\tfor (const [i, j] of Atomic.atomicCoordinates) {\n\t\t\t\taddCoordinate(i, j);\n\t\t\t}\n\t\t\tbaseCoordinates.push([...moveData.startCoordinates]);\n\t\t}\n\n\t\treturn baseCoordinates;\n\t}\n}\n","import type { PlayerBooleanTuple } from \"@moveGeneration/Board/Board\";\nimport { FENData } from \"@moveGeneration/FENData/FENData\";\nimport { totalPlayers, VariantType } from \"@moveGeneration/GameInformation/GameData\";\nimport { verifyNumericColor } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport { createPieceFromData, deadColorIndex } from \"@moveGeneration/GameInformation/GameUnits/PieceString\";\nimport { InternalMove, InternalMoveSignature } from \"@moveGeneration/MoveTree/MoveTreeInterface\";\nimport { pieceControlConfigSettings } from \"@moveGeneration/PieceControl/PieceControlInterface\";\nimport { VariantRule } from \"@moveGeneration/VariantRules/VariantRule\";\nimport { VariantRuleAllowedChecks, variantRuleColors, VariantRuleHandler } from \"@moveGeneration/VariantRules/VariantRuleInterface\";\n\nconst tag = \"deadKingWalking\";\nexport class DeadKingWalking extends VariantRule<typeof FENData, typeof tag> implements VariantRuleHandler<FENData> {\n\tstatic {\n\t\tVariantRule.initVariantRule(DeadKingWalking);\n\t}\n\n\tgetDecoratorType() {\n\t\treturn FENData;\n\t}\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Zombies\",\n\t\t\t\tdescription: \"Resigned players are controlled by a bot\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.autogenous,\n\t\t\t\tdisplayIcon: \"\"\n\t\t\t}\n\t\t} as const;\n\t}\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\treturn /^DeadKingWalking$/i.test(match);\n\t}\n\tserializeToParsingForm(): string {\n\t\treturn \"DeadKingWalking\";\n\t}\n\tisDisabled({ variantDataRules, gameType, fenTags }: VariantRuleAllowedChecks): boolean {\n\t\treturn (\n\t\t\tgameType === VariantType.Teams ||\n\t\t\tfenTags.dead.value.reduce((p, n, i) => p + Number(n || fenTags.resigned.value[i]), 0) <= totalPlayers - 1 ||\n\t\t\t(variantDataRules.pointsForMate !== false && variantDataRules.pointsForMate < 6)\n\t\t);\n\t}\n\n\tprocessInternalMove(internalMove: InternalMove): { stalemates: PlayerBooleanTuple } {\n\t\tif (\n\t\t\tinternalMove.type === InternalMoveSignature.Resign ||\n\t\t\tinternalMove.type === InternalMoveSignature.ClaimWin ||\n\t\t\tinternalMove.type === InternalMoveSignature.Timeout\n\t\t) {\n\t\t\tconst { sideToMove, fenOptions, board } = this.decorator;\n\t\t\tconst dead = fenOptions.tag(\"dead\"),\n\t\t\t\tresigned = fenOptions.tag(\"resigned\");\n\n\t\t\tresigned[sideToMove] = true;\n\t\t\tdead[sideToMove] = true;\n\n\t\t\tfor (const coordinate of board.getPlayerPieces()[sideToMove]) {\n\t\t\t\tconst piece = board.board[coordinate[0]][coordinate[1]].piece;\n\t\t\t\tif (pieceControlConfigSettings[piece].moveGenerationSettings.isPawn) {\n\t\t\t\t\tboard.board[coordinate[0]][coordinate[1]] = createPieceFromData(deadColorIndex, piece);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst deadPlayers = dead.map((d, i) => d || resigned[i]).filter(Boolean);\n\t\t\tif (deadPlayers.length === totalPlayers - 1) {\n\t\t\t\tconst alivePlayer = deadPlayers.findIndex((d) => !d);\n\t\t\t\tif (verifyNumericColor(alivePlayer)) {\n\t\t\t\t\tthis.decorator.assignPoints(\n\t\t\t\t\t\talivePlayer,\n\t\t\t\t\t\tthis.decorator.countTotalPointsOnBoard().reduce((p, n, i) => p + (i === alivePlayer ? n : 0), 0)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn { stalemates: [false, false, false, false] };\n\t\t} else return this.callHandler(\"processInternalMove\", arguments);\n\t}\n}\n","import { MoveData, SpecialMove } from \"../../../MoveTree/MoveTreeInterface\";\nimport { FENData } from \"../../../FENData/FENData\";\nimport { emptyPieceString, PieceString } from \"../../../GameInformation/GameUnits/PieceString\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\nimport { pieceControlConfigSettings } from \"@moveGeneration/PieceControl/PieceControlInterface\";\nimport { Coordinate, nonPlayablePieces } from \"../../../GameInformation/GameUnits/GameUnits\";\nimport { assertNonUndefined } from \"@client/ts/baseTypes\";\nimport { isVerticalPlacement } from \"@client/ts/logic/BaseInterfaces\";\nimport { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\n\nconst tag = \"enPassant\";\nexport class EnPassant extends VariantRule<typeof FENData, typeof tag> implements VariantRuleHandler<FENData> {\n\tstatic {\n\t\tVariantRule.initVariantRule(EnPassant);\n\t}\n\n\tgetDecoratorType() {\n\t\treturn FENData;\n\t}\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"En Passant\",\n\t\t\t\tdescription: \"Pawns can capture en passant\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.minor,\n\t\t\t\tdisplayIcon: chessGlyphIndex.pawnConnection\n\t\t\t}\n\t\t} as const;\n\t}\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\treturn /^EnPassant$/i.test(match);\n\t}\n\tserializeToParsingForm(): string {\n\t\treturn \"EnPassant\";\n\t}\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\tprocessStandardMove(moveData: MoveData): { endPiece: PieceString[] } {\n\t\tconst enPassants = this.decorator.fenOptions.tag(\"enPassant\");\n\t\tconst {\n\t\t\tstartCoordinates: [startI, startJ],\n\t\t\tendCoordinates: [endI, endJ]\n\t\t} = moveData;\n\t\tif (moveData.specialType === SpecialMove.EnPassant) {\n\t\t\tconst eligibleEnPassants: number[] = [];\n\t\t\tenPassants.forEach((e, i) => {\n\t\t\t\tif (!e) return;\n\t\t\t\tif (e[0][0] === endI && e[0][1] === endJ) eligibleEnPassants.push(i);\n\t\t\t});\n\t\t\tfor (const enPassantCoordinate of eligibleEnPassants) {\n\t\t\t\tconst enPassant = enPassants[enPassantCoordinate];\n\t\t\t\tassertNonUndefined(enPassant);\n\t\t\t\tthis.decorator.board.board[enPassant[1][0]][enPassant[1][1]] = emptyPieceString;\n\t\t\t\tenPassants[enPassantCoordinate] = null;\n\t\t\t}\n\t\t} else {\n\t\t\tconst pieceString = this.decorator.board.board[startI][startJ];\n\n\t\t\tif (!pieceString.isEmpty() && pieceString.piece !== nonPlayablePieces.duck) {\n\t\t\t\tenPassants[this.decorator.sideToMove] = null;\n\t\t\t\tconst setting = pieceControlConfigSettings[pieceString.piece];\n\t\t\t\tif (\n\t\t\t\t\tsetting.moveGenerationSettings.isPawn &&\n\t\t\t\t\tMath.abs(isVerticalPlacement(this.decorator.sideToMove) ? startI - endI : startJ - endJ) === 2\n\t\t\t\t) {\n\t\t\t\t\tconst enPassantInfo: [Coordinate, Coordinate] = [\n\t\t\t\t\t\t[Math.ceil((startI + endI) / 2), Math.ceil((startJ + endJ) / 2)],\n\t\t\t\t\t\t[endI, endJ]\n\t\t\t\t\t];\n\t\t\t\t\tenPassants[this.decorator.sideToMove] = enPassantInfo;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.callHandler(\"processStandardMove\", arguments);\n\t}\n}\n","import { createTuple } from \"../../../../../baseTypes\";\nimport { FENData } from \"../../../FENData/FENData\";\nimport type { PostMoveResults } from \"../../../FENData/FENDataInterface\";\nimport { totalPlayers } from \"../../../GameInformation/GameData\";\nimport { createPieceFromData, deadColorIndex } from \"../../../GameInformation/GameUnits/PieceString\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\nimport { RoyalsCannotCapture } from \"../PieceControlDecorators/RoyalsCannotCapture\";\nimport { pieceControlConfigSettings } from \"@moveGeneration/PieceControl/PieceControlInterface\";\nimport { MoveComponent, verifyStandardMove } from \"../../../MoveTree/MoveTreeInterface\";\nimport type { Coordinate } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\n\nconst tag = \"fatalCapture\";\nexport class FatalCapture extends VariantRule<typeof FENData, typeof tag> implements VariantRuleHandler<FENData> {\n\tstatic {\n\t\tVariantRule.initVariantRule(FatalCapture);\n\t}\n\treadonly dependencies = new Map([[RoyalsCannotCapture, []]]);\n\n\tgetDecoratorType() {\n\t\treturn FENData;\n\t}\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Fatal Capture\",\n\t\t\t\tdescription: \"Pieces (but not pawns) die when they capture\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.extending,\n\t\t\t\tdisplayIcon: chessGlyphIndex.trashBin\n\t\t\t}\n\t\t} as const;\n\t}\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\treturn /^FatalCapture$/i.test(match);\n\t}\n\tserializeToParsingForm(): string {\n\t\treturn \"FatalCapture\";\n\t}\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\taffectOptions(move: MoveComponent): PostMoveResults {\n\t\tlet endCaptureCoordinates: Coordinate | undefined;\n\t\tif (verifyStandardMove(move)) {\n\t\t\tconst {\n\t\t\t\tstartCoordinates: [startI, startJ],\n\t\t\t\tendCoordinates: [endI, endJ]\n\t\t\t} = move;\n\t\t\tconst isCapture = this.decorator.board.board[endI][endJ].isPiece();\n\t\t\tconst royal = this.decorator.fenOptions.tag(\"royal\")[this.decorator.sideToMove];\n\t\t\tif (royal && startI === royal[0] && startJ === royal[1] && isCapture) {\n\t\t\t\treturn {\n\t\t\t\t\tcheckmates: this.decorator.board.gameType.getBaseColors(this.decorator.sideToMove),\n\t\t\t\t\tchecks: createTuple(false, totalPlayers),\n\t\t\t\t\tstalemates: createTuple(false, totalPlayers)\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tendCaptureCoordinates = isCapture ? move.endCoordinates : undefined;\n\t\t}\n\n\t\tconst returnType = this.callHandler(\"affectOptions\", arguments);\n\t\tif (endCaptureCoordinates) {\n\t\t\tconst pieceString = this.decorator.board.board[endCaptureCoordinates[0]][endCaptureCoordinates[1]];\n\t\t\tif (!pieceControlConfigSettings[pieceString.piece].moveGenerationSettings.isPawn) {\n\t\t\t\tthis.decorator.board.board[endCaptureCoordinates[0]][endCaptureCoordinates[1]] = createPieceFromData(\n\t\t\t\t\tdeadColorIndex,\n\t\t\t\t\tthis.decorator.board.board[endCaptureCoordinates[0]][endCaptureCoordinates[1]].piece\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn returnType;\n\t}\n}\n","import { FENData } from \"../../../FENData/FENData\";\nimport type { PostMoveResults } from \"../../../FENData/FENDataInterface\";\nimport { totalPlayers } from \"../../../GameInformation/GameData\";\nimport type { PieceString } from \"../../../GameInformation/GameUnits/PieceString\";\nimport type { MoveComponent, MoveData } from \"../../../MoveTree/MoveTreeInterface\";\nimport { VariantRule } from \"../../VariantRule\";\nimport type { VariantRuleHandler } from \"../../VariantRuleInterface\";\n\nconst tag = \"fiftyMoveRule\";\nexport class FiftyMoveRule extends VariantRule<typeof FENData, typeof tag> implements VariantRuleHandler<FENData> {\n\tstatic {\n\t\tVariantRule.initVariantRule(FiftyMoveRule);\n\t}\n\tprivate totalFullMoves: number;\n\n\tconstructor(fullMoves?: unknown) {\n\t\tsuper();\n\t\tif (typeof fullMoves === \"number\" && fullMoves > 0) {\n\t\t\tthis.totalFullMoves = fullMoves;\n\t\t} else {\n\t\t\tthis.totalFullMoves = 50;\n\t\t}\n\t}\n\n\tgetDecoratorType() {\n\t\treturn FENData;\n\t}\n\n\tgetPublicProperties() {\n\t\tconst isDisabled = this.totalFullMoves === Infinity;\n\t\treturn {\n\t\t\tparameterValue: this.totalFullMoves,\n\t\t\tinformation: {\n\t\t\t\tname: \"N Move Rule\",\n\t\t\t\ttextualForm: \"\",\n\t\t\t\tdescription: isDisabled\n\t\t\t\t\t? \"50 move rule disabled\"\n\t\t\t\t\t: `After ${this.totalFullMoves} full moves without captures or pawn pushes game is over`,\n\t\t\t\ttag\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string) {\n\t\tconst matchArray = match.match(/^FiftyMoveRule=((?:\\d+)|(?:Infinity))$/i);\n\t\tif (matchArray) {\n\t\t\tthis.totalFullMoves = Number(matchArray[1]);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn `FiftyMoveRule=${this.totalFullMoves}`;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\tgetParametrizedOptions() {\n\t\tconst options = new Map<string, number>();\n\t\tfor (const value of [50, 150, 200, 25, 10]) options.set(`${value} Move rule`, value);\n\t\toptions.set(\"Unlimited\", Infinity);\n\t\treturn options;\n\t}\n\n\tprocessStandardMove(moveData: MoveData): { endPiece: PieceString[] } {\n\t\tif (this.decorator.getCapturedPieces(moveData).length > 0) {\n\t\t\tthis.decorator.plyCount = 0;\n\t\t}\n\n\t\treturn this.callHandler(\"processStandardMove\", arguments);\n\t}\n\n\taffectOptions(move: MoveComponent): PostMoveResults {\n\t\tconst results = this.callHandler(\"affectOptions\", arguments);\n\t\tif (move.isIrreversible) {\n\t\t\tthis.decorator.plyCount = 0;\n\t\t} else {\n\t\t\tthis.decorator.plyCount++;\n\t\t}\n\n\t\tconst alivePlayers = totalPlayers - this.decorator.fenOptions.tag(\"dead\").filter(Boolean).length;\n\t\tif (alivePlayers > 0 && Math.floor(this.decorator.plyCount / alivePlayers) > this.totalFullMoves) {\n\t\t\tthis.decorator.assignGeneralTermination(\"50-move Rule\");\n\t\t\tthis.injectIntoBaseClass(function (this: FENData) {\n\t\t\t\tthis.spreadPointsBetweenPlayersEvenly();\n\t\t\t})();\n\t\t}\n\n\t\treturn results;\n\t}\n}\n","import type { NumericColor } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport { FENData } from \"../../../FENData/FENData\";\nimport type { PostMoveResults } from \"../../../FENData/FENDataInterface\";\nimport { totalPlayers } from \"../../../GameInformation/GameData\";\nimport type { PieceString } from \"../../../GameInformation/GameUnits/PieceString\";\nimport type { MoveData } from \"../../../MoveTree/MoveTreeInterface\";\nimport { VariantRule } from \"../../VariantRule\";\nimport {\n\tAllowedSuperClasses,\n\tVariantDataRules,\n\tVariantRuleAllowedChecks,\n\tvariantRuleColors,\n\tVariantRuleHandler\n} from \"../../VariantRuleInterface\";\nimport { ForcedCapture } from \"../BoardDecorators/ForcedCapture\";\nimport { StalemateOptions, stalemateOptionsValues } from \"./StalemateOptions\";\nimport { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\n\nconst tag = \"giveaway\";\nexport class Giveaway extends VariantRule<typeof FENData, typeof tag> implements VariantRuleHandler<FENData> {\n\tstatic {\n\t\tVariantRule.initVariantRule(Giveaway);\n\t}\n\tprivate static readonly pointsForPiece = 3;\n\tprivate static readonly stalematePoints = {\n\t\t[1]: 200,\n\t\t[2]: 400,\n\t\t[3]: 600\n\t};\n\treadonly dependencies = new Map<new (...args: unknown[]) => VariantRule<AllowedSuperClasses, keyof VariantDataRules>, unknown[]>([\n\t\t[ForcedCapture, []],\n\t\t[StalemateOptions, [stalemateOptionsValues.stalemateWins]]\n\t]);\n\n\tprivate initiallyAliveColors = totalPlayers;\n\n\tgetDecoratorType() {\n\t\treturn FENData;\n\t}\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Giveaway\",\n\t\t\t\tdescription: \"First to lose all pieces or stalemate wins\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.widespread,\n\t\t\t\tdisplayIcon: chessGlyphIndex.gift\n\t\t\t}\n\t\t} as const;\n\t}\n\tmatchesPGNDeclaration(match: string) {\n\t\treturn /^Giveaway$/i.test(match);\n\t}\n\tserializeToParsingForm(): string {\n\t\treturn \"Giveaway\";\n\t}\n\tisDisabled({ variantDataRules }: VariantRuleAllowedChecks): boolean {\n\t\treturn variantDataRules.taboo;\n\t}\n\n\tinitDecoratorSettings() {\n\t\tthis.decorator.fenOptions.setTag(\"royal\", [null, null, null, null]);\n\t\tthis.initiallyAliveColors = this.decorator.fenOptions\n\t\t\t.tag(\"dead\")\n\t\t\t.map((d, i) => d || this.decorator.fenOptions.tag(\"resigned\")[i])\n\t\t\t.filter(Boolean).length;\n\n\t\tfor (const decorator of this.wrappingDecorators) decorator.initDecoratorSettings?.();\n\t}\n\n\tprocessStandardMove(moveData: MoveData): { endPiece: PieceString[] } {\n\t\tconst capturedPieces = this.decorator.getCapturedPieces(moveData);\n\t\tconst board = this.decorator.board.board;\n\t\tfor (const capturedPiece of capturedPieces) {\n\t\t\tconst pieceString = board[capturedPiece[0]][capturedPiece[1]];\n\t\t\tif (pieceString.isPiece()) {\n\t\t\t\tthis.assignPoints(pieceString.color, Giveaway.pointsForPiece, true);\n\t\t\t}\n\t\t}\n\n\t\tthis.callHandler(\"processStandardMove\", arguments);\n\t\treturn { endPiece: [] };\n\t}\n\n\taffectOptions(): PostMoveResults {\n\t\tconst returnType = this.callHandler(\"affectOptions\", arguments);\n\t\tthis.decorator.fenOptions.setTag(\"royal\", [null, null, null, null]);\n\t\treturn returnType;\n\t}\n\n\tobtainPointsForMate(): number {\n\t\t// Checkmates do not exist, so the only scenario in which this gets called is stalemate\n\t\tconst aliveColors = this.decorator.fenOptions.tag(\"dead\").filter(Boolean).length;\n\t\tswitch (aliveColors) {\n\t\t\tcase 1:\n\t\t\t\tif (this.initiallyAliveColors === totalPlayers) {\n\t\t\t\t\treturn Giveaway.stalematePoints[1];\n\t\t\t\t}\n\t\t\t// * Fallthrough\n\t\t\tcase 2:\n\t\t\t\tif (this.initiallyAliveColors >= totalPlayers - 1) {\n\t\t\t\t\treturn Giveaway.stalematePoints[2];\n\t\t\t\t}\n\t\t\t// * Fallthrough\n\t\t\tcase 3:\n\t\t\t\treturn Giveaway.stalematePoints[3];\n\t\t\tdefault:\n\t\t\t\tconsole.error(`Unexpected players length ${aliveColors}`);\n\t\t\t\treturn 0;\n\t\t}\n\t}\n\n\tassignPoints(sideToMove: NumericColor, points: number, isGiveawayAssigned = false) {\n\t\tif (isGiveawayAssigned) {\n\t\t\tfor (const decorator of this.wrappingDecorators) {\n\t\t\t\tif (decorator.assignPoints) {\n\t\t\t\t\tdecorator.assignPoints(sideToMove, points);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tFENData.prototype.assignPoints.call(this.decorator, sideToMove, points);\n\t\t}\n\t}\n}\n","import { compareArrays } from \"@client/ts/utils/ArrayUtils\";\nimport { compareCoordinates } from \"../../../Board/BoardInterface\";\nimport { FENData } from \"../../../FENData/FENData\";\nimport { PostMoveResults } from \"../../../FENData/FENDataInterface\";\nimport { colors, convertCoordinateToPGN4, getPlayerNameFromColor } from \"../../../GameInformation/GameData\";\nimport { InternalMoveSignature } from \"../../../MoveTree/MoveTreeInterface\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\nimport type { Coordinate } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport { parseSingleCoordinate } from \"@client/ts/logic/utils/Tags/Utils\";\nimport { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\n\nconst tag = \"kingOfTheHill\";\nexport class KingOfTheHill extends VariantRule<typeof FENData, typeof tag> implements VariantRuleHandler<FENData> {\n\tstatic {\n\t\tVariantRule.initVariantRule(KingOfTheHill);\n\t}\n\tprivate static readonly defaultCoordinates: Coordinate[] = [\n\t\t[7, 7],\n\t\t[7, 6],\n\t\t[6, 7],\n\t\t[6, 6]\n\t];\n\tprivate static readonly defaultRoyal = \"K\";\n\n\tprivate hillSquares: Coordinate[];\n\n\tconstructor(hillSquares?: unknown) {\n\t\tsuper();\n\t\tif (\n\t\t\tArray.isArray(hillSquares) &&\n\t\t\thillSquares.every<Coordinate>((c): c is Coordinate => Array.isArray(c) && c.length === 2 && c.every((n) => typeof n === \"number\"))\n\t\t) {\n\t\t\tthis.hillSquares = hillSquares;\n\t\t} else {\n\t\t\tthis.hillSquares = KingOfTheHill.defaultCoordinates;\n\t\t}\n\t}\n\n\tgetDecoratorType() {\n\t\treturn FENData;\n\t}\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: this.hillSquares,\n\t\t\tinformation: {\n\t\t\t\tname: \"King of the Hill\",\n\t\t\t\tdescription: \"A king reaching the hill will checkmate all opponents\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.autogenous,\n\t\t\t\tdisplayIcon: chessGlyphIndex.kingOfTheHill\n\t\t\t}\n\t\t} as const;\n\t}\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\tconst matchArray = match.toLowerCase().match(/^KotH(?:=(.+))?$/i);\n\t\tif (matchArray) {\n\t\t\tif (matchArray[1]) {\n\t\t\t\tconst coordinatesArray: Coordinate[] = [];\n\t\t\t\tconst presumedOption = matchArray[1].split(\",\");\n\t\t\t\tfor (const coordinate of presumedOption) {\n\t\t\t\t\tconst parsedCoordinate = parseSingleCoordinate(coordinate);\n\t\t\t\t\tif (parsedCoordinate) {\n\t\t\t\t\t\tcoordinatesArray.push(parsedCoordinate);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (coordinatesArray.length > 0) {\n\t\t\t\t\tthis.hillSquares = coordinatesArray;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\tserializeToParsingForm(): string {\n\t\tif (compareArrays(this.hillSquares, KingOfTheHill.defaultCoordinates)) {\n\t\t\treturn \"KotH\";\n\t\t} else {\n\t\t\treturn `KotH=${this.hillSquares.map((c) => convertCoordinateToPGN4(c)).join(\",\")}`;\n\t\t}\n\t}\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\tgetInsufficientMaterialData() {\n\t\treturn {\n\t\t\tisPartiallyDisabled: true,\n\t\t\tisDisabled: true\n\t\t} as const;\n\t}\n\n\taffectOptions(): PostMoveResults {\n\t\tconst { board, sideToMove, fenOptions } = this.decorator;\n\t\tconst returnValues = this.callHandler(\"affectOptions\", arguments);\n\n\t\tconst royal = fenOptions.tag(\"royal\")[sideToMove],\n\t\t\tdead = fenOptions.tag(\"dead\"),\n\t\t\twb = fenOptions.tag(\"wb\");\n\t\tif (\n\t\t\tboard.variantData.giveaway &&\n\t\t\tthis.hillSquares.some((c) => {\n\t\t\t\tconst pieceString = board.board[c[0]][c[1]];\n\t\t\t\treturn pieceString.isPiece() && pieceString.piece === KingOfTheHill.defaultRoyal;\n\t\t\t})\n\t\t) {\n\t\t\tthis.decorator.processInternalMove({ type: InternalMoveSignature.Stalemate });\n\t\t\treturnValues.stalemates[sideToMove] = true;\n\t\t} else if (royal && this.hillSquares.some((c) => compareCoordinates(c, royal))) {\n\t\t\tconst pointsForMate = this.decorator.obtainPointsForMate();\n\t\t\tfor (const color of colors) {\n\t\t\t\tif (color === sideToMove) continue;\n\t\t\t\tif (!dead[color]) {\n\t\t\t\t\tdead[color] = true;\n\t\t\t\t\tthis.decorator.assignPoints(sideToMove, pointsForMate);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.decorator.board.variantData.taboo) {\n\t\t\t\tthis.decorator.gameOver = `${getPlayerNameFromColor(sideToMove, wb).toUpperCase()} WON THE RACE!`;\n\t\t\t} else {\n\t\t\t\tthis.decorator.assignGeneralTermination(\"King of the Hill\");\n\t\t\t}\n\t\t}\n\n\t\treturn returnValues;\n\t}\n}\n","import { createTuple, Tuple, verifyTupleType } from \"@client/ts/baseTypes\";\nimport { compareCoordinates } from \"../../../Board/BoardInterface\";\nimport { FENData } from \"../../../FENData/FENData\";\nimport { createDefaultFENEffectSettings, PostMoveResults } from \"../../../FENData/FENDataInterface\";\nimport { colors, totalPlayers } from \"../../../GameInformation/GameData\";\nimport { MoveComponent, verifyStandardMove } from \"../../../MoveTree/MoveTreeInterface\";\nimport { VariantRule } from \"../../VariantRule\";\nimport type { VariantRuleAllowedChecks, VariantRuleHandler } from \"../../VariantRuleInterface\";\n\nconst tag = \"nCheck\";\nexport class NCheck extends VariantRule<typeof FENData, typeof tag> implements VariantRuleHandler<FENData> {\n\tstatic {\n\t\tVariantRule.initVariantRule(NCheck);\n\t}\n\tprivate defaultChecks: Tuple<number, typeof totalPlayers>;\n\tconstructor(defaultChecks?: unknown) {\n\t\tsuper();\n\t\tif (\n\t\t\tArray.isArray(defaultChecks) &&\n\t\t\tverifyTupleType(defaultChecks, totalPlayers) &&\n\t\t\tdefaultChecks.every<number>((check): check is number => typeof check === \"number\")\n\t\t) {\n\t\t\tthis.defaultChecks = defaultChecks;\n\t\t} else {\n\t\t\tthis.defaultChecks = createTuple(3, totalPlayers);\n\t\t}\n\t}\n\n\tgetDecoratorType() {\n\t\treturn FENData;\n\t}\n\tgetPublicProperties() {\n\t\tconst checks = this.defaultChecks\n\t\t\t.filter(Boolean)\n\t\t\t.reduce((p, n, i, arr) => p + (arr[i - 1] === arr[i] ? \"\" : `-${n}`), \"\")\n\t\t\t.slice(1);\n\t\treturn {\n\t\t\tparameterValue: this.defaultChecks,\n\t\t\tinformation: {\n\t\t\t\tname: `N-Check`,\n\t\t\t\ttextualForm: `${checks}+`,\n\t\t\t\tdescription: `Checking a king ${checks} times is checkmate`,\n\t\t\t\ttag\n\t\t\t}\n\t\t} as const;\n\t}\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\tconst matchArray = match.toLowerCase().match(/^(\\d\\d?\\d?(?:-\\d\\d?\\d?){0,3})-check$/i);\n\t\tif (matchArray) {\n\t\t\tconst checks = matchArray[1].split(\"-\");\n\t\t\tfor (let i = 0; i <= checks.length; i++) {\n\t\t\t\tif (checks[i]) {\n\t\t\t\t\tthis.defaultChecks[i] = Number(checks[i]);\n\t\t\t\t} else {\n\t\t\t\t\twhile (i !== totalPlayers) {\n\t\t\t\t\t\tthis.defaultChecks[i] = this.defaultChecks[i - 1];\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\tserializeToParsingForm(): string {\n\t\treturn `${this.defaultChecks.join(\"-\")}-check`;\n\t}\n\tisDisabled({ variantDataRules }: VariantRuleAllowedChecks): boolean {\n\t\treturn variantDataRules.giveaway;\n\t}\n\n\tgetInsufficientMaterialData() {\n\t\treturn {\n\t\t\tisPartiallyDisabled: true,\n\t\t\tisDisabled: false\n\t\t} as const;\n\t}\n\n\tgetParametrizedOptions() {\n\t\tconst resultingMap = new Map<string, Tuple<number, typeof totalPlayers> | false>([[\"N+ Off\", false]]);\n\t\tfor (let i = 1; i < 10; i++) resultingMap.set(`${i}+`, createTuple(i, totalPlayers));\n\t\tfor (const value of [12, 15, 20, 30, 50]) resultingMap.set(`${value}+`, createTuple(value, totalPlayers));\n\t\treturn resultingMap;\n\t}\n\n\tinitDecoratorSettings() {\n\t\tconst lives = this.decorator.fenOptions.tag(\"lives\");\n\t\tfor (const color of colors) {\n\t\t\tif (lives[color] === null) {\n\t\t\t\tlives[color] = this.defaultChecks[color];\n\t\t\t}\n\t\t}\n\n\t\tfor (const decorator of this.wrappingDecorators) decorator.initDecoratorSettings?.();\n\t}\n\n\taffectOptions(move: MoveComponent, settings = createDefaultFENEffectSettings()): PostMoveResults {\n\t\tconst { board, sideToMove } = this.decorator;\n\t\tconst currentChecks = board.getCurrentChecks().map((arr) => new Set(arr));\n\t\tconst isNCheckValidated = !settings.ignoreCheckmateChecks && !settings.ignoreNextTurn;\n\t\tconst royal = this.decorator.fenOptions.tag(\"royal\"),\n\t\t\tlives = this.decorator.fenOptions.tag(\"lives\");\n\t\tconst results = this.callHandler(\"affectOptions\", arguments);\n\n\t\tconst isStandardMove = verifyStandardMove(move);\n\t\tif (isNCheckValidated) {\n\t\t\tconst updatedChecks = board.getCurrentChecks(sideToMove);\n\n\t\t\tconst playerChecks = createTuple(0, totalPlayers);\n\t\t\tfor (const color of colors) {\n\t\t\t\tfor (const coordinate of updatedChecks[color]) {\n\t\t\t\t\tconst royalPiece = royal[color];\n\t\t\t\t\tif (\n\t\t\t\t\t\t!currentChecks[color].has(coordinate) ||\n\t\t\t\t\t\t(royalPiece && isStandardMove && compareCoordinates(move.endCoordinates, royalPiece))\n\t\t\t\t\t) {\n\t\t\t\t\t\tplayerChecks[color]++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (lives.every<number>((live): live is number => live !== null)) {\n\t\t\t\tfor (const color of colors) {\n\t\t\t\t\tlives[color] -= playerChecks[color];\n\t\t\t\t\tif (lives[color] <= 0) {\n\t\t\t\t\t\tthis.decorator.assignPoints(sideToMove, this.decorator.obtainPointsForMate());\n\t\t\t\t\t\tthis.decorator.turnPiecesDead(color);\n\t\t\t\t\t\tlives[color] = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.decorator.getRealPlayers() > 1) {\n\t\t\t\tthis.decorator.sideToMove = this.decorator.nextTurn(sideToMove);\n\t\t\t\tboard.pregenerateAttacks();\n\t\t\t}\n\t\t}\n\n\t\treturn results;\n\t}\n}\n","import { FENData } from \"../../../FENData/FENData\";\nimport { getOppositePlacedColor, totalPlayers, VariantType } from \"../../../GameInformation/GameData\";\nimport type { PieceString } from \"../../../GameInformation/GameUnits/PieceString\";\nimport { pieceControlConfigSettings } from \"../../../PieceControl/PieceControlInterface\";\nimport { VariantRule } from \"../../VariantRule\";\nimport type { VariantRuleAllowedChecks, VariantRuleHandler } from \"../../VariantRuleInterface\";\n\nconst tag = \"oppositeMultiplier\";\n\nexport class OppositeMultiplier extends VariantRule<typeof FENData, typeof tag> implements VariantRuleHandler<FENData> {\n\tprivate static readonly MAXIMUM_MULTIPLIER = 6;\n\tstatic {\n\t\tVariantRule.initVariantRule(OppositeMultiplier);\n\t}\n\tprivate oppositeMultiplierValue = 2;\n\n\tgetDecoratorType() {\n\t\treturn FENData;\n\t}\n\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: this.oppositeMultiplierValue,\n\t\t\tinformation: {\n\t\t\t\tname: \"Opposite's piece value\",\n\t\t\t\ttextualForm: `Ox${this.oppositeMultiplierValue}`,\n\t\t\t\tdescription: `Opposite's pieces are worth ${this.oppositeMultiplierValue} times their normal points value until one player is eliminated`,\n\t\t\t\ttag\n\t\t\t}\n\t\t} as const;\n\t}\n\t\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\tconst matchArray = match.toLowerCase().match(/^OppX=(\\d)$/i);\n\t\tif (matchArray) {\n\t\t\tconst numericValue = Number(matchArray[1]);\n\t\t\tif (numericValue <= 0 || numericValue > OppositeMultiplier.MAXIMUM_MULTIPLIER) return false;\n\t\t\tthis.oppositeMultiplierValue = numericValue;\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn `OppX=${this.oppositeMultiplierValue}`;\n\t}\n\n\tisDisabled({ variantDataRules, gameType, fenTags }: VariantRuleAllowedChecks): boolean {\n\t\treturn (\n\t\t\tgameType === VariantType.Teams ||\n\t\t\tvariantDataRules.giveaway ||\n\t\t\tfenTags.dead.value.reduce((p, n, i) => p + Number(n || fenTags.resigned.value[i]), 0) <= totalPlayers - 1\n\t\t);\n\t}\n\n\tgetParametrizedOptions() {\n\t\tconst options = new Map<string, number | false>([[\"Ox Off\", false]]);\n\t\tfor (let i = 1; i <= OppositeMultiplier.MAXIMUM_MULTIPLIER; i++) options.set(`Ox${i}`, i);\n\t\treturn options;\n\t}\n\n\tgetPointsForPiece(pieceString: PieceString): number {\n\t\tconst dead = this.decorator.fenOptions.tag(\"dead\"),\n\t\t\tresigned = this.decorator.fenOptions.tag(\"resigned\");\n\t\tconst aliveColors = dead.map((d, i) => d || resigned[i]).filter(Boolean).length;\n\t\tif (aliveColors === totalPlayers && pieceString.isPiece() && pieceString.color === getOppositePlacedColor(this.decorator.sideToMove)) {\n\t\t\treturn pieceControlConfigSettings[pieceString.piece].points.singlesPoints * this.oppositeMultiplierValue;\n\t\t} else return this.callHandler(\"getPointsForPiece\", arguments);\n\t}\n}\n","import { MoveData, SpecialMove } from \"../../../MoveTree/MoveTreeInterface\";\nimport type { PlayerBooleanTuple } from \"../../../Board/Board\";\nimport { FENData } from \"../../../FENData/FENData\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\nimport { getOppositePlacedColor } from \"../../../GameInformation/GameData\";\nimport { PieceString } from \"@moveGeneration/GameInformation/GameUnits/PieceString\";\n\nconst tag = \"oppositeSideCastling\";\nexport class OppositeSideCastling extends VariantRule<typeof FENData, typeof tag> implements VariantRuleHandler<FENData> {\n\tstatic {\n\t\tVariantRule.initVariantRule(OppositeSideCastling);\n\t}\n\n\tgetDecoratorType() {\n\t\treturn FENData;\n\t}\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Opposite-side Castling\",\n\t\t\t\tdescription: \"Once your opponent has castled, you can only castle to the opposite side\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.minor,\n\t\t\t\tdisplayIcon: \"ὸ\"\n\t\t\t}\n\t\t} as const;\n\t}\n\tmatchesPGNDeclaration(match: string) {\n\t\treturn /^OppositeSideCastling$/i.test(match);\n\t}\n\tserializeToParsingForm(): string {\n\t\treturn \"OppositeSideCastling\";\n\t}\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\tprocessStandardMove(moveData: MoveData): { endPiece: PieceString[] } {\n\t\tconst result = this.callHandler(\"processStandardMove\", arguments);\n\n\t\tif (\"specialType\" in moveData) {\n\t\t\tlet castlingDataReference: PlayerBooleanTuple | undefined;\n\t\t\tif (moveData.specialType === SpecialMove.CastlingKingside) {\n\t\t\t\tcastlingDataReference = this.decorator.fenOptions.tag(\"castleKingside\");\n\t\t\t} else if (moveData.specialType === SpecialMove.CastlingQueenside) {\n\t\t\t\tcastlingDataReference = this.decorator.fenOptions.tag(\"castleQueenside\");\n\t\t\t}\n\n\t\t\tif (castlingDataReference) {\n\t\t\t\tcastlingDataReference[getOppositePlacedColor(this.decorator.sideToMove)] = false;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n}\n","import { FENData } from \"../../../FENData/FENData\";\nimport { PostMoveResults } from \"../../../FENData/FENDataInterface\";\nimport { createPieceFromData, PieceString } from \"../../../GameInformation/GameUnits/PieceString\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\nimport type { PieceLetter } from \"@moveGeneration/PieceControl/PieceControlInterface\";\nimport { MoveComponent, MoveData, verifyInternalMove, verifyStandardMove } from \"../../../MoveTree/MoveTreeInterface\";\nimport { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\n\nconst tag = \"piecesGoToBanks\";\nexport class PiecesGoToBanks extends VariantRule<typeof FENData, typeof tag> implements VariantRuleHandler<FENData> {\n\tgetDecoratorType() {\n\t\treturn FENData;\n\t}\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Bank Captures\",\n\t\t\t\tdescription: \"Captured pieces go to banks\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.extending,\n\t\t\t\tdisplayIcon: chessGlyphIndex.copyToClipboard\n\t\t\t}\n\t\t} as const;\n\t}\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\treturn /^Crazy(?:house|wan)$/i.test(match);\n\t}\n\tserializeToParsingForm(): string {\n\t\treturn \"\";\n\t}\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\tprocessStandardMove(moveData: MoveData): { endPiece: PieceString[] } {\n\t\tconst promotedFrom = this.decorator.fenOptions.tag(\"promotedFrom\");\n\n\t\tif (moveData.promotion) {\n\t\t\tconst pieceLetter = this.decorator.board.board[moveData.startCoordinates[0]][moveData.startCoordinates[1]].piece;\n\t\t\tpromotedFrom.set(moveData.endCoordinates, pieceLetter);\n\t\t} else {\n\t\t\tfor (const [key, value] of promotedFrom) {\n\t\t\t\tif (key[0] === moveData.startCoordinates[0] && key[1] === moveData.endCoordinates[1]) {\n\t\t\t\t\tpromotedFrom.delete(key);\n\t\t\t\t\tpromotedFrom.set(moveData.endCoordinates, value);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.callHandler(\"processStandardMove\", arguments);\n\t}\n\n\taffectOptions(move: MoveComponent): PostMoveResults {\n\t\tconst fenOptions = this.decorator.fenOptions;\n\t\tconst areBanksEnabled = fenOptions.tag(\"areBanksEnabled\"),\n\t\t\tbank = fenOptions.tag(\"bank\"),\n\t\t\tpromotedFrom = fenOptions.tag(\"promotedFrom\");\n\n\t\tif (areBanksEnabled[this.decorator.sideToMove]) {\n\t\t\tif (!verifyInternalMove(move)) {\n\t\t\t\tif (verifyStandardMove(move)) {\n\t\t\t\t\tconst captures = this.decorator.getCapturedPieces(move);\n\t\t\t\t\tconst sideToMove = this.decorator.sideToMove;\n\t\t\t\t\tconst addPieceToBank = (piece: PieceLetter) => {\n\t\t\t\t\t\tfor (const [key, value] of bank[sideToMove]) {\n\t\t\t\t\t\t\tif (key.piece === piece && key.color === sideToMove) {\n\t\t\t\t\t\t\t\tbank[sideToMove].set(key, value + 1);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbank[sideToMove].set(createPieceFromData(sideToMove, piece), 1);\n\t\t\t\t\t};\n\n\t\t\t\t\tcaptures.forEach((c) => {\n\t\t\t\t\t\tfor (const [key, value] of promotedFrom) {\n\t\t\t\t\t\t\tif (key[0] === c[0] && key[1] === c[1]) {\n\t\t\t\t\t\t\t\tpromotedFrom.delete(key);\n\t\t\t\t\t\t\t\taddPieceToBank(value);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\taddPieceToBank(this.decorator.board.board[c[0]][c[1]].piece);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.callHandler(\"affectOptions\", arguments);\n\t}\n}\n","import { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\nimport { FENData } from \"../../../FENData/FENData\";\nimport { totalPlayers, VariantType } from \"../../../GameInformation/GameData\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { VariantRuleAllowedChecks, variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\n\nconst tag = \"playForMate\";\nexport class PlayForMate extends VariantRule<typeof FENData, typeof tag> implements VariantRuleHandler<FENData> {\n\tstatic {\n\t\tVariantRule.initVariantRule(PlayForMate);\n\t}\n\tprivate initiallyAliveColors = totalPlayers;\n\tprivate static readonly checkmatePoints = {\n\t\t[1]: 24,\n\t\t[2]: 32,\n\t\t[3]: 48\n\t};\n\n\tgetDecoratorType() {\n\t\treturn FENData;\n\t}\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Play for mate\",\n\t\t\t\tdescription: \"No points for pieces, only checkmates matter\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.pointsAlternation,\n\t\t\t\tdisplayIcon: chessGlyphIndex.hashtag\n\t\t\t}\n\t\t} as const;\n\t}\n\tmatchesPGNDeclaration(match: string) {\n\t\treturn /^Play4Mate$/i.test(match);\n\t}\n\tserializeToParsingForm(): string {\n\t\treturn \"Play4Mate\";\n\t}\n\tisDisabled({ gameType }: VariantRuleAllowedChecks): boolean {\n\t\treturn gameType === VariantType.Teams;\n\t}\n\n\tinitDecoratorSettings() {\n\t\tthis.initiallyAliveColors = this.decorator.fenOptions\n\t\t\t.tag(\"dead\")\n\t\t\t.map((d, i) => d || this.decorator.fenOptions.tag(\"resigned\")[i])\n\t\t\t.filter(Boolean).length;\n\n\t\tfor (const decorator of this.wrappingDecorators) decorator.initDecoratorSettings?.();\n\t}\n\n\tobtainPointsForMate(): number {\n\t\tconst aliveColors = this.decorator.fenOptions.tag(\"dead\").filter(Boolean).length;\n\t\tswitch (aliveColors) {\n\t\t\tcase 1:\n\t\t\t\tif (this.initiallyAliveColors === totalPlayers) {\n\t\t\t\t\treturn PlayForMate.checkmatePoints[1];\n\t\t\t\t}\n\t\t\t// * Fallthrough\n\t\t\tcase 2:\n\t\t\t\tif (this.initiallyAliveColors >= totalPlayers - 1) {\n\t\t\t\t\treturn PlayForMate.checkmatePoints[2];\n\t\t\t\t}\n\t\t\t// * Fallthrough\n\t\t\tcase 3:\n\t\t\t\treturn PlayForMate.checkmatePoints[3];\n\t\t\tdefault:\n\t\t\t\tconsole.error(`Unexpected players length ${aliveColors}`);\n\t\t\t\treturn 0;\n\t\t}\n\t}\n\n\tgetPointsForPiece(): number {\n\t\treturn 0;\n\t}\n}\n","import { VariantType } from \"@moveGeneration/GameInformation/GameData\";\nimport { FENData } from \"../../../FENData/FENData\";\nimport { VariantRule } from \"../../VariantRule\";\nimport type { VariantRuleAllowedChecks, VariantRuleHandler } from \"../../VariantRuleInterface\";\n\nconst tag = \"pointsForMate\";\nexport class PointsForMate extends VariantRule<typeof FENData, typeof tag> implements VariantRuleHandler<FENData> {\n\tstatic {\n\t\tVariantRule.initVariantRule(PointsForMate);\n\t}\n\tprivate pointsForMate: number;\n\tconstructor(pointsForMate?: unknown) {\n\t\tsuper();\n\t\tif (typeof pointsForMate === \"number\") {\n\t\t\tthis.pointsForMate = pointsForMate;\n\t\t} else {\n\t\t\tthis.pointsForMate = 20;\n\t\t}\n\t}\n\n\tgetDecoratorType() {\n\t\treturn FENData;\n\t}\n\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: this.pointsForMate,\n\t\t\tinformation: {\n\t\t\t\tname: `Points for Mate`,\n\t\t\t\ttextualForm: `+${this.pointsForMate}`,\n\t\t\t\tdescription: `Checkmates & king captures are worth ${this.pointsForMate} points`,\n\t\t\t\ttag\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string) {\n\t\tconst matchArray = match.match(/^PointsForMate=(3|5|10|40)$/i);\n\t\tif (matchArray) {\n\t\t\tthis.pointsForMate = Number(matchArray[1]);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn `PointsForMate=${this.pointsForMate}`;\n\t}\n\n\tisDisabled({ variantDataRules, gameType }: VariantRuleAllowedChecks): boolean {\n\t\treturn variantDataRules.giveaway || variantDataRules.playForMate || gameType === VariantType.Teams;\n\t}\n\n\tgetParametrizedOptions() {\n\t\tconst options = new Map<string, number>();\n\t\tfor (const value of [20, 3, 5, 10, 40]) options.set(`+${value}`, value);\n\t\treturn options;\n\t}\n\n\tobtainPointsForMate() {\n\t\treturn this.pointsForMate;\n\t}\n}\n","import { throwOnNever } from \"@client/ts/baseTypes\";\nimport { FENData } from \"../../../FENData/FENData\";\nimport { InternalMove, InternalMoveSignature } from \"../../../MoveTree/MoveTreeInterface\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\nimport { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\n\nconst tag = \"stalemateOptions\";\nexport const stalemateOptionsValues = {\n\tstalemateLoses: \"loss\",\n\tstalemateWins: \"win\",\n\tstalemateDraws: \"draw\"\n} as const;\nexport type CustomStalemateValue = (typeof stalemateOptionsValues)[keyof typeof stalemateOptionsValues];\nexport const verifyCustomStalemateValue = (v: string): v is CustomStalemateValue => Object.values<string>(stalemateOptionsValues).includes(v);\n\nexport class StalemateOptions extends VariantRule<typeof FENData, typeof tag> implements VariantRuleHandler<FENData> {\n\tstatic {\n\t\tVariantRule.initVariantRule(StalemateOptions);\n\t}\n\tprivate type: CustomStalemateValue | undefined;\n\tprivate isFFA = false;\n\n\tconstructor(type?: unknown) {\n\t\tsuper();\n\t\tif (typeof type === \"string\" && verifyCustomStalemateValue(type)) {\n\t\t\tthis.type = type;\n\t\t} else {\n\t\t\tthis.type = undefined;\n\t\t}\n\t}\n\n\tgetDecoratorType() {\n\t\treturn FENData;\n\t}\n\n\tgetPublicProperties() {\n\t\tconst description =\n\t\t\tthis.type === \"draw\"\n\t\t\t\t? `Stalemate is a draw`\n\t\t\t\t: this.isFFA\n\t\t\t\t? `The remaining players share the points`\n\t\t\t\t: `The stalemated player ${this.type === \"loss\" ? \"loses\" : \"wins\"}`;\n\t\treturn {\n\t\t\tparameterValue: this.type,\n\t\t\tinformation: {\n\t\t\t\tname: \"Stalemate\",\n\t\t\t\tdescription,\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.minor,\n\t\t\t\tdisplayIcon: chessGlyphIndex.dollarSign\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\tconst matchArray = match.toLowerCase().match(/^Stalemate=(.+)$/i);\n\t\tif (matchArray) {\n\t\t\tconst presumedOption = matchArray[1];\n\t\t\tif (verifyCustomStalemateValue(presumedOption)) {\n\t\t\t\tthis.type = presumedOption;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn `Stalemate=${this.type ?? \"draw\"}`;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\t\n\tgetParametrizedOptions() {\n\t\treturn new Map<string, CustomStalemateValue>([\n\t\t\t[\"Draw\", stalemateOptionsValues.stalemateDraws],\n\t\t\t[\"The stalemated player loses\", stalemateOptionsValues.stalemateLoses],\n\t\t\t[\"The stalemated player wins\", stalemateOptionsValues.stalemateWins]\n\t\t]);\n\t}\n\n\tinitDecoratorSettings() {\n\t\tif (this.type === undefined) {\n\t\t\tif (this.decorator.board.gameType.isFFA() && this.decorator.fenOptions.tag(\"dead\").filter(Boolean).length > 2) {\n\t\t\t\tthis.type = \"win\";\n\t\t\t\tthis.isFFA = true;\n\t\t\t} else {\n\t\t\t\tthis.type = \"draw\";\n\t\t\t\tthis.isFFA = false;\n\t\t\t}\n\t\t}\n\n\t\tfor (const decorator of this.wrappingDecorators) decorator.initDecoratorSettings?.();\n\t}\n\n\tprocessInternalMove(internalMove: InternalMove): { stalemates: [boolean, boolean, boolean, boolean] } {\n\t\tconst currentTurn = this.decorator.sideToMove;\n\t\tconst returnValues = this.callHandler(\"processInternalMove\", arguments);\n\t\tif (internalMove.type === InternalMoveSignature.Stalemate) {\n\t\t\tconst pointsForMate = this.decorator.obtainPointsForMate();\n\t\t\tswitch (this.type) {\n\t\t\t\tcase \"loss\":\n\t\t\t\t\tif (!this.isFFA) {\n\t\t\t\t\t\tthis.decorator.points[currentTurn] += pointsForMate;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t// * Fallthrough\n\t\t\t\tcase \"draw\":\n\t\t\t\t\tthis.injectIntoBaseClass(function (this: FENData) {\n\t\t\t\t\t\tthis.spreadPointsBetweenPlayersEvenly();\n\t\t\t\t\t})();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"win\":\n\t\t\t\t\tthis.decorator.points[this.decorator.sideToMove] += pointsForMate;\n\t\t\t\t\tbreak;\n\t\t\t\tcase undefined:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrowOnNever(this.type);\n\t\t\t}\n\n\t\t\tif (this.decorator.getRealPlayers() === 1) {\n\t\t\t\tthis.decorator.assignGeneralTermination(\"Stalemate\", currentTurn);\n\t\t\t}\n\t\t}\n\n\t\treturn returnValues;\n\t}\n}\n","import type { Tuple } from \"@client/ts/baseTypes\";\nimport { compareCoordinates } from \"../../../Board/BoardInterface\";\nimport { FENData } from \"../../../FENData/FENData\";\nimport { PostMoveResults } from \"../../../FENData/FENDataInterface\";\nimport { colors, totalPlayers, VariantType } from \"../../../GameInformation/GameData\";\nimport { createPieceFromData } from \"../../../GameInformation/GameUnits/PieceString\";\nimport { pieceControlConfigSettings } from \"../../../PieceControl/PieceControlInterface\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { VariantRuleAllowedChecks, variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\nimport { DeadKingWalking } from \"./DeadKingWalking\";\nimport { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\n\nconst tag = \"takeover\";\nexport class Takeover extends VariantRule<typeof FENData, typeof tag> implements VariantRuleHandler<FENData> {\n\tstatic {\n\t\tVariantRule.initVariantRule(Takeover);\n\t}\n\treadonly dependencies = new Map([[DeadKingWalking, []]]);\n\n\tgetDecoratorType() {\n\t\treturn FENData;\n\t}\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Takeover\",\n\t\t\t\tdescription: \"Checkmate players to take control of their pieces\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.phased,\n\t\t\t\tdisplayIcon: chessGlyphIndex.exchange\n\t\t\t}\n\t\t} as const;\n\t}\n\tmatchesPGNDeclaration(match: string) {\n\t\treturn /^Takeover$/i.test(match);\n\t}\n\tserializeToParsingForm(): string {\n\t\treturn \"Takeover\";\n\t}\n\tisDisabled({ gameType }: VariantRuleAllowedChecks): boolean {\n\t\treturn gameType === VariantType.Teams;\n\t}\n\n\taffectOptions(): PostMoveResults {\n\t\tconst sideToMove = this.decorator.sideToMove,\n\t\t\tdetectedPieces = this.decorator.board.getPlayerPieces();\n\t\tconst results = this.callHandler(\"affectOptions\", arguments);\n\t\tfor (const color of colors) {\n\t\t\tif (!results.checkmates[color]) continue;\n\t\t\tfor (const piece of detectedPieces[sideToMove]) {\n\t\t\t\tconst pieceString = this.decorator.board.board[piece[0]][piece[1]];\n\t\t\t\tif (!pieceString.isDead() || pieceControlConfigSettings[pieceString.piece].moveGenerationSettings.isPawn) continue;\n\t\t\t\tthis.decorator.board.board[piece[0]][piece[1]] = createPieceFromData(sideToMove, pieceString.piece);\n\t\t\t}\n\t\t}\n\n\t\treturn results;\n\t}\n\n\tcountTotalPointsOnBoard(): [number, number, number, number] {\n\t\tconst zombieImmune = this.decorator.fenOptions.tag(\"zombieImmune\"),\n\t\t\troyals = this.decorator.fenOptions.tag(\"royal\");\n\t\tconst resultingPoints: Tuple<number, typeof totalPlayers> = [0, 0, 0, 0];\n\t\tthis.decorator.board.getPlayerPieces().forEach((army, color) => {\n\t\t\tif (zombieImmune[color]) return;\n\t\t\tconst royal = royals[color];\n\t\t\tfor (const coordinate of army) {\n\t\t\t\tif (royal && compareCoordinates(coordinate, royal)) {\n\t\t\t\t\tresultingPoints[color] += this.decorator.obtainPointsForMate();\n\t\t\t\t} else {\n\t\t\t\t\tconst piece = this.decorator.board.board[coordinate[0]][coordinate[1]].piece;\n\t\t\t\t\tresultingPoints[color] += pieceControlConfigSettings[piece].points.singlesPoints;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn resultingPoints;\n\t}\n}\n","import { FENData } from \"../../../FENData/FENData\";\nimport { PostMoveResults } from \"../../../FENData/FENDataInterface\";\nimport { VariantRule } from \"../../VariantRule\";\nimport type { VariantRuleHandler } from \"../../VariantRuleInterface\";\n\nconst tag = \"threefoldRepetition\";\nexport class ThreefoldRepetition extends VariantRule<typeof FENData, typeof tag> implements VariantRuleHandler<FENData> {\n\tstatic {\n\t\tVariantRule.initVariantRule(ThreefoldRepetition);\n\t}\n\tprivate totalRepetitionsRequired: number;\n\n\tconstructor(totalRepetitions?: unknown) {\n\t\tsuper();\n\t\tif (typeof totalRepetitions === \"number\" && totalRepetitions > 0) {\n\t\t\tthis.totalRepetitionsRequired = totalRepetitions;\n\t\t} else {\n\t\t\tthis.totalRepetitionsRequired = 3;\n\t\t}\n\t}\n\n\tgetDecoratorType() {\n\t\treturn FENData;\n\t}\n\n\tgetPublicProperties() {\n\t\tconst isDisabled = this.totalRepetitionsRequired === Infinity;\n\t\treturn {\n\t\t\tparameterValue: this.totalRepetitionsRequired,\n\t\t\tinformation: {\n\t\t\t\tname: \"N-fold Repetition\",\n\t\t\t\ttextualForm: \"\",\n\t\t\t\tdescription: isDisabled\n\t\t\t\t\t? \"3-fold repetition disabled\"\n\t\t\t\t\t: `After position repeats ${this.totalRepetitionsRequired} times game is over`,\n\t\t\t\ttag\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string) {\n\t\tconst matchArray = match.match(/^ThreefoldRepetition=((?:\\d+)|(?:Infinity))$/i);\n\t\tif (matchArray) {\n\t\t\tthis.totalRepetitionsRequired = Number(matchArray[1]);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn `ThreefoldRepetition=${this.totalRepetitionsRequired}`;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\tgetParametrizedOptions() {\n\t\tconst options = new Map<string, number>();\n\t\tfor (const value of [3, 2, 5]) options.set(`${value}-fold`, value);\n\t\toptions.set(\"Unlimited\", Infinity);\n\t\treturn options;\n\t}\n\n\taffectOptions(): PostMoveResults {\n\t\tconst results = this.callHandler(\"affectOptions\", arguments);\n\t\tconst repetitions = this.decorator.board.moves.getHash(this.decorator.board.moves.constructPreliminaryHashString(this.decorator.board));\n\n\t\tif (repetitions + 1 >= this.totalRepetitionsRequired) {\n\t\t\tthis.decorator.assignGeneralTermination(\"Threefold Repetition\");\n\t\t\tthis.injectIntoBaseClass(function (this: FENData) {\n\t\t\t\tthis.spreadPointsBetweenPlayersEvenly();\n\t\t\t})();\n\t\t}\n\n\t\treturn results;\n\t}\n}\n","import { createTuple } from \"../../../../../baseTypes\";\nimport { totalPlayers } from \"../../../GameInformation/GameData\";\nimport { PieceControl } from \"../../../PieceControl/PieceControl\";\nimport type { ControlConfiguration } from \"@moveGeneration/PieceControl/PieceControlInterface\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\nimport { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\n\nconst tag = \"anyCapture\";\nexport class AnyCapture extends VariantRule<typeof PieceControl, typeof tag> implements VariantRuleHandler<PieceControl> {\n\tstatic {\n\t\tVariantRule.initVariantRule(AnyCapture);\n\t}\n\n\tgetDecoratorType() {\n\t\treturn PieceControl;\n\t}\n\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Any Capture\",\n\t\t\t\tdescription: \"You can capture your own pieces\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.autogenous,\n\t\t\t\tdisplayIcon: chessGlyphIndex.captureAnything\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\treturn /^AnyCapture$/i.test(match);\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn \"AnyCapture\";\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\tconfigure(configuration: Required<ControlConfiguration>) {\n\t\tconst modifiedConfiguration: Required<ControlConfiguration> = {\n\t\t\t...configuration,\n\t\t\timmunePieces: createTuple(false, totalPlayers)\n\t\t};\n\n\t\tfor (const decorator of this.wrappingDecorators) {\n\t\t\tif (decorator.configure) return decorator.configure(modifiedConfiguration);\n\t\t}\n\t\treturn PieceControl.prototype.configure.call(this.decorator, modifiedConfiguration);\n\t}\n}\n","import { PieceLetter, verifyPieceLetter, pieceControlConfigSettings, defaultPieces } from \"@moveGeneration/PieceControl/PieceControlInterface\";\nimport { compileEnumeration, prefixWithIndefiniteArticle } from \"@client/ts/utils/StringFormatUtils\";\nimport { PieceControl } from \"../../../PieceControl/PieceControl\";\nimport { VariantRule } from \"../../VariantRule\";\nimport type { VariantRuleHandler } from \"../../VariantRuleInterface\";\n\nconst tag = \"promotionPieces\";\nexport class PromoteTo extends VariantRule<typeof PieceControl, typeof tag> implements VariantRuleHandler<PieceControl> {\n\tstatic {\n\t\tVariantRule.initVariantRule(PromoteTo);\n\t}\n\n\tstatic filterPromotionPieceString(pieces: string): PieceLetter[] {\n\t\tconst inputPromotion = pieces.split(\"\").filter<PieceLetter>((p): p is PieceLetter => verifyPieceLetter(p));\n\t\treturn inputPromotion.length ? inputPromotion : [defaultPieces.queen, defaultPieces.rook, defaultPieces.bishop, defaultPieces.knight];\n\t}\n\n\tprivate promotionPieces: PieceLetter[];\n\tconstructor(promotionPieces?: unknown) {\n\t\tsuper();\n\t\tthis.promotionPieces =\n\t\t\tArray.isArray(promotionPieces) &&\n\t\t\tpromotionPieces.every<PieceLetter>((p): p is PieceLetter => typeof p === \"string\" && verifyPieceLetter(p))\n\t\t\t\t? promotionPieces\n\t\t\t\t: [defaultPieces.queen, defaultPieces.rook, defaultPieces.bishop, defaultPieces.knight];\n\t}\n\n\tgetDecoratorType() {\n\t\treturn PieceControl;\n\t}\n\n\tgetPublicProperties() {\n\t\tconst pieceNames = this.promotionPieces.reduce<string[]>((p, c) => {\n\t\t\tconst pieceName = pieceControlConfigSettings[c].naming.name;\n\t\t\treturn [...p, pieceName];\n\t\t}, []);\n\t\treturn {\n\t\t\tparameterValue: this.promotionPieces,\n\t\t\tinformation: {\n\t\t\t\tname: \"Pawns promote to\",\n\t\t\t\ttextualForm: \"\",\n\t\t\t\tdescription: `Pawns promote to ${prefixWithIndefiniteArticle(compileEnumeration(pieceNames))}`,\n\t\t\t\ttag\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\tconst matchArray = match.match(/^PromoteTo=([A-ZxΘ]+)$/i);\n\t\tif (matchArray) {\n\t\t\tthis.promotionPieces = PromoteTo.filterPromotionPieceString(matchArray[1]);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn `PromoteTo=${this.promotionPieces.join(\"\")}`;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\tinitDecoratorSettings(): void {\n\t\tif (this.decorator.hooks.usePawnLogic) {\n\t\t\tthis.decorator.hooks.usePawnLogic.promotionPieces = this.promotionPieces;\n\t\t}\n\n\t\tfor (const decorator of this.wrappingDecorators) decorator.initDecoratorSettings?.();\n\t}\n}\n","import { formatOrdinalNumber } from \"@client/ts/utils/StringFormatUtils\";\nimport { boardDimension } from \"../../../GameInformation/GameData\";\nimport { PieceControl } from \"../../../PieceControl/PieceControl\";\nimport { VariantRule } from \"../../VariantRule\";\nimport type { VariantRuleHandler } from \"../../VariantRuleInterface\";\n\nconst tag = \"promotionRank\";\nexport const disabledRank = 99;\nexport class PromotionRank extends VariantRule<typeof PieceControl, typeof tag> implements VariantRuleHandler<PieceControl> {\n\tstatic {\n\t\tVariantRule.initVariantRule(PromotionRank);\n\t}\n\n\tprivate promotionRank: number;\n\tconstructor(promotionRank?: unknown) {\n\t\tsuper();\n\t\tthis.promotionRank = typeof promotionRank === \"number\" ? promotionRank : 8;\n\t}\n\n\tgetDecoratorType() {\n\t\treturn PieceControl;\n\t}\n\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: this.promotionRank,\n\t\t\tinformation: {\n\t\t\t\tname: \"Promotion Rank\",\n\t\t\t\ttextualForm: \"\",\n\t\t\t\tdescription: `on the ${this.promotionRank}${formatOrdinalNumber(this.promotionRank)} rank`,\n\t\t\t\ttag\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\tconst matchArray = match.match(/^Prom=(\\d\\d?)$/i);\n\t\tif (matchArray) {\n\t\t\tthis.promotionRank = Number(matchArray[1]);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn `Prom=${this.promotionRank}`;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\tgetParametrizedOptions() {\n\t\tconst resultingMap = new Map<string, number>();\n\t\tfor (let i = 1; i <= boardDimension; i++) {\n\t\t\tresultingMap.set(String(i) + formatOrdinalNumber(i), i);\n\t\t}\n\t\tresultingMap.set(\"No promotion\", disabledRank);\n\t\treturn resultingMap;\n\t}\n\n\tinitDecoratorSettings(): void {\n\t\tif (this.decorator.hooks.usePawnLogic) {\n\t\t\tthis.decorator.hooks.usePawnLogic.promotionRanks = [\n\t\t\t\tboardDimension - this.promotionRank,\n\t\t\t\tthis.promotionRank - 1,\n\t\t\t\tthis.promotionRank - 1,\n\t\t\t\tboardDimension - this.promotionRank\n\t\t\t];\n\t\t}\n\n\t\tfor (const decorator of this.wrappingDecorators) decorator.initDecoratorSettings?.();\n\t}\n}\n","import { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\nimport { PieceControl } from \"../../../PieceControl/PieceControl\";\nimport { AttackType, PieceControlConfiguration } from \"../../../PieceControl/PieceControlInterface\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\n\nconst tag = \"royalsCannotCapture\";\nexport class RoyalsCannotCapture extends VariantRule<typeof PieceControl, typeof tag> implements VariantRuleHandler<PieceControl> {\n\tgetDecoratorType() {\n\t\treturn PieceControl;\n\t}\n\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Royals Cannot Capture\",\n\t\t\t\tdescription: \"Royal pieces cannot capture pieces.\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.autogenous,\n\t\t\t\tdisplayIcon: chessGlyphIndex.handshake\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(): boolean {\n\t\treturn false;\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn \"\";\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\tgetMovePossibility(configuration: PieceControlConfiguration): boolean {\n\t\tconst royal = this.decorator.fenData.fenOptions.tag(\"royal\")[this.decorator.color];\n\t\tif (royal && royal[0] === this.decorator.i && royal[1] === this.decorator.j) {\n\t\t\tconfiguration.special = AttackType.MoveOnly;\n\t\t}\n\n\t\tfor (const decorator of this.wrappingDecorators) {\n\t\t\tif (decorator.getMovePossibility) return decorator.getMovePossibility(configuration);\n\t\t}\n\t\treturn PieceControl.prototype.getMovePossibility.call(this.decorator, configuration);\n\t}\n}\n","import { AttackType } from \"@moveGeneration/PieceControl/PieceControlInterface\";\nimport { PieceControl } from \"../../../PieceControl/PieceControl\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\nimport { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\n\nconst tag = \"sideways\";\nexport class Sideways extends VariantRule<typeof PieceControl, typeof tag> implements VariantRuleHandler<PieceControl> {\n\tstatic {\n\t\tVariantRule.initVariantRule(Sideways);\n\t}\n\n\tgetDecoratorType() {\n\t\treturn PieceControl;\n\t}\n\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Sideways\",\n\t\t\t\tdescription: \"Pawns can also move one square sideways\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.autogenous,\n\t\t\t\tdisplayIcon: chessGlyphIndex.pawnSideways\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\treturn /^Sideways$/i.test(match);\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn \"Sideways\";\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\tgetPossibleCells() {\n\t\tif (this.decorator.hooks.usePawnLogic) {\n\t\t\tthis.injectIntoBaseClass(function (this: PieceControl) {\n\t\t\t\tthis.generateJumpAttack({ displacement: [0, -1], special: AttackType.MoveOnly });\n\t\t\t\tthis.generateJumpAttack({ displacement: [0, 1], special: AttackType.MoveOnly });\n\t\t\t})();\n\t\t}\n\n\t\tfor (const decorator of this.wrappingDecorators) {\n\t\t\tif (decorator.getPossibleCells) return decorator.getPossibleCells();\n\t\t}\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\t\tconst prototype: PieceControl = Object.getPrototypeOf(this.decorator);\n\t\tprototype.getPossibleCells.call(this.decorator);\n\t}\n}\n","import { PieceControl } from \"../../../PieceControl/PieceControl\";\nimport { AttackType, PieceControlConfiguration } from \"../../../PieceControl/PieceControlInterface\";\nimport { VariantRule } from \"../../VariantRule\";\nimport type { VariantRuleHandler } from \"../../VariantRuleInterface\";\n\nconst tag = \"stonewall\";\nexport class Stonewall extends VariantRule<typeof PieceControl, typeof tag> implements VariantRuleHandler<PieceControl> {\n\tstatic {\n\t\tVariantRule.initVariantRule(Stonewall);\n\t}\n\n\tgetDecoratorType() {\n\t\treturn PieceControl;\n\t}\n\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Stonewall\",\n\t\t\t\ttextualForm: \"\",\n\t\t\t\tdescription: \"Dead pieces cannot be captured\",\n\t\t\t\ttag\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\treturn /^Deadwall$/i.test(match);\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn \"Deadwall\";\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\tgetMovePossibility(configuration: PieceControlConfiguration): boolean {\n\t\tconst {\n\t\t\tdisplacement: [i, j],\n\t\t\tspecial\n\t\t} = configuration;\n\t\tlet modifiedConfiguration = configuration;\n\n\t\tif (\n\t\t\t(special === AttackType.AttackOnly || special === AttackType.Normal || special === AttackType.RayGen) &&\n\t\t\tthis.decorator.board[i] &&\n\t\t\tthis.decorator.board[i][j] &&\n\t\t\tthis.decorator.board[i][j].isDead()\n\t\t) {\n\t\t\tmodifiedConfiguration = {\n\t\t\t\t...configuration,\n\t\t\t\tspecial: AttackType.MoveOnly\n\t\t\t};\n\t\t}\n\n\t\tfor (const decorator of this.wrappingDecorators) {\n\t\t\tif (decorator.getMovePossibility) return decorator.getMovePossibility(configuration);\n\t\t}\n\t\treturn PieceControl.prototype.getMovePossibility.call(this.decorator, modifiedConfiguration);\n\t}\n}\n","import type { ControlConfiguration } from \"@moveGeneration/PieceControl/PieceControlInterface\";\nimport { PieceControl } from \"../../../PieceControl/PieceControl\";\nimport { VariantRule } from \"../../VariantRule\";\nimport { variantRuleColors, VariantRuleHandler } from \"../../VariantRuleInterface\";\nimport { chessGlyphIndex } from \"@client/fonts/chessGlyphIndex\";\n\nconst tag = \"torpedo\";\nexport class Torpedo extends VariantRule<typeof PieceControl, typeof tag> implements VariantRuleHandler<PieceControl> {\n\tstatic {\n\t\tVariantRule.initVariantRule(Torpedo);\n\t}\n\n\tgetDecoratorType() {\n\t\treturn PieceControl;\n\t}\n\n\tgetPublicProperties() {\n\t\treturn {\n\t\t\tparameterValue: true,\n\t\t\tinformation: {\n\t\t\t\tname: \"Torpedo\",\n\t\t\t\tdescription: \"Pawns can always jump two squares\",\n\t\t\t\ttag,\n\t\t\t\tcolor: variantRuleColors.autogenous,\n\t\t\t\tdisplayIcon: chessGlyphIndex.torpedo\n\t\t\t}\n\t\t} as const;\n\t}\n\n\tmatchesPGNDeclaration(match: string): boolean {\n\t\treturn /^Torpedo$/i.test(match);\n\t}\n\n\tserializeToParsingForm(): string {\n\t\treturn \"Torpedo\";\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn false;\n\t}\n\n\tconfigure(configuration: ControlConfiguration) {\n\t\tconst modifiedConfiguration: ControlConfiguration = {\n\t\t\t...configuration,\n\t\t\tbaseRank: true\n\t\t};\n\n\t\tfor (const decorator of this.wrappingDecorators) {\n\t\t\tif (decorator.configure) return decorator.configure(modifiedConfiguration);\n\t\t}\n\t\tPieceControl.prototype.configure.call(this.decorator, modifiedConfiguration);\n\t}\n}\n","import type { FunctionType, Tuple } from \"@client/ts/baseTypes\";\nimport { createHexColor, IndexedColor } from \"@client/ts/interfaces/Colors\";\nimport type { FENOptionsTags } from \"@moveGeneration/FENData/FENOptions/FENOptionsTagsInterface\";\nimport type { Coordinate } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport type { Board } from \"../Board/Board\";\nimport type { FENData } from \"../FENData/FENData\";\nimport type { totalPlayers, VariantType } from \"../GameInformation/GameData\";\nimport type { PieceControl } from \"../PieceControl/PieceControl\";\nimport type { PieceLetter } from \"../PieceControl/PieceControlInterface\";\nimport type { CustomStalemateValue } from \"./VariantRuleDefinitions/FENDataDecorators/StalemateOptions\";\nimport type { StripPieceStringObjects } from \"@moveGeneration/MoveTree/MoveTreeInterface\";\n\nexport interface VariantHandlerTarget<C extends AllowedHandlerClasses> {\n\t__baseClass: C;\n\tinitDecoratorSettings(): void;\n}\n\nexport type FunctionProperties<T> = Pick<T, { [K in keyof T]: T[K] extends FunctionType ? K : never }[keyof T]>;\nexport type AllowedHandlerClasses = Board | FENData | PieceControl;\nexport type AllowedSuperClasses = typeof Board | typeof FENData | typeof PieceControl;\n\nexport type VariantRuleHandler<C extends AllowedHandlerClasses> = {\n\t[K in keyof FunctionProperties<C>]?: C[K];\n};\n\ninterface BaseVariantRuleInformation<K extends keyof VariantDataRules> {\n\tname: string;\n\tdescription: string;\n\ttag: K;\n}\ninterface TextualVariantRuleInformation<K extends keyof VariantDataRules> extends BaseVariantRuleInformation<K> {\n\ttextualForm: string;\n\tcolor?: never;\n\tdisplayIcon?: never;\n}\ninterface StandardVariantRuleInformation<K extends keyof VariantDataRules> extends BaseVariantRuleInformation<K> {\n\ttextualForm?: never;\n\tcolor: IndexedColor;\n\tdisplayIcon: string;\n}\nexport type VariantRuleInformation<K extends keyof VariantDataRules> =\n\t| Readonly<StandardVariantRuleInformation<K>>\n\t| Readonly<TextualVariantRuleInformation<K>>;\n\nexport interface VariantRuleAllowedChecks {\n\treadonly variantDataRules: VariantDataRules | StripPieceStringObjects<VariantDataRules>;\n\treadonly gameType: VariantType;\n\treadonly fenTags: FENOptionsTags;\n}\n\nexport interface VariantDataRules {\n\talternativeTeams: number | false;\n\tblindfold: boolean;\n\tcaptureTheKing: boolean;\n\tchess960: number | false;\n\tcrazyhouse: boolean;\n\tghostboard: boolean;\n\tparadigmChess30: number | false;\n\ttaboo: boolean;\n\tenPassant: boolean;\n\tfatalCapture: boolean;\n\tpiecesGoToBanks: boolean;\n\tanyCapture: boolean;\n\tpromotionPieces: PieceLetter[] | false;\n\tpromotionRank: number | false;\n\tsideways: boolean;\n\tstonewall: boolean;\n\ttorpedo: boolean;\n\toppositeSideCastling: boolean;\n\tsetupChess: number | false;\n\tpiecesFaceCenter: boolean;\n\troyalsCannotCapture: boolean;\n\tseirawanSetup: boolean;\n\tatomic: boolean;\n\tfogOfWar: boolean;\n\tanonymous: boolean;\n\tsemiAnonymous: boolean;\n\tstalemateOptions: CustomStalemateValue | undefined;\n\tforcedCapture: boolean;\n\tgiveaway: boolean;\n\tallowPassing: boolean;\n\tpointsForMate: number | false;\n\ttakeover: boolean;\n\tkingOfTheHill: Coordinate[] | false;\n\tbarePieceRule: boolean;\n\tduckChess: boolean;\n\tplayForMate: boolean;\n\toppositeMultiplier: number | false;\n\tnCheck: Tuple<number, typeof totalPlayers> | false;\n\tselfCheck: boolean;\n\tfiftyMoveRule: number | false;\n\tthreefoldRepetition: number | false;\n\tselfPartner: boolean;\n\tdeadKingWalking: boolean;\n}\n\nexport const variantRuleColors = {\n\tminor: createHexColor(\"#e01492\"),\n\tvisual: createHexColor(\"#ad5709\"),\n\tautogenous: createHexColor(\"#f2791e\"),\n\tmetadata: createHexColor(\"#89a5d3\"),\n\tstartingPosition: createHexColor(\"#7030a0\"),\n\textending: createHexColor(\"#fbaa07\"),\n\twidespread: createHexColor(\"#d40c0c\"),\n\tpointsAlternation: createHexColor(\"#00b0f0\"),\n\tphased: createHexColor(\"#00b050\")\n} as const;\n","import { Board } from \"../Board/Board\";\nimport { FENData } from \"../FENData/FENData\";\nimport { PieceControl } from \"../PieceControl/PieceControl\";\nimport { ForcedCapture } from \"./VariantRuleDefinitions/BoardDecorators/ForcedCapture\";\nimport { SeirawanSetup } from \"./VariantRuleDefinitions/BoardDecorators/SeirawanSetup\";\nimport { SetupChess } from \"./VariantRuleDefinitions/BoardDecorators/SetupChess\";\nimport { Taboo } from \"./VariantRuleDefinitions/BoardDecorators/Taboo\";\nimport { FiftyMoveRule } from \"./VariantRuleDefinitions/FENDataDecorators/FiftyMoveRule\";\nimport { Giveaway } from \"./VariantRuleDefinitions/FENDataDecorators/Giveaway\";\nimport { StalemateOptions } from \"./VariantRuleDefinitions/FENDataDecorators/StalemateOptions\";\nimport { ThreefoldRepetition } from \"./VariantRuleDefinitions/FENDataDecorators/ThreefoldRepetition\";\nimport { PromoteTo } from \"./VariantRuleDefinitions/PieceControlDecorators/PromoteTo\";\nimport { PromotionRank } from \"./VariantRuleDefinitions/PieceControlDecorators/PromotionRank\";\nimport { VariantRule, VariantRulePublicProperties } from \"./VariantRule\";\nimport type { AllowedSuperClasses, VariantDataRules, VariantRuleAllowedChecks } from \"./VariantRuleInterface\";\n\nexport interface VariantRuleParsingTypes {\n\tboardDecorators: Array<VariantRule<typeof Board, keyof VariantDataRules>>;\n\tpieceControlDecorators: Array<VariantRule<typeof PieceControl, keyof VariantDataRules>>;\n\tfenDataDecorators: Array<VariantRule<typeof FENData, keyof VariantDataRules>>;\n\t[Symbol.iterator]: () => Generator<VariantRule<AllowedSuperClasses, keyof VariantDataRules>, void>;\n}\nexport const createBaseParsingTypes = (): VariantRuleParsingTypes => ({\n\tboardDecorators: [],\n\tpieceControlDecorators: [],\n\tfenDataDecorators: [],\n\t*[Symbol.iterator]() {\n\t\tfor (const rv of [...this.boardDecorators, ...this.pieceControlDecorators, ...this.fenDataDecorators]) {\n\t\t\tconst variantRule: VariantRule<AllowedSuperClasses, keyof VariantDataRules> = rv;\n\t\t\tyield variantRule;\n\t\t}\n\t}\n});\n\nconst variantRulePriorities = [SetupChess, ForcedCapture, Taboo, SeirawanSetup, PromoteTo, PromotionRank, Giveaway].reverse();\n\nfunction differentiateDecoratorMethods(\n\tvariant: VariantRule<AllowedSuperClasses, keyof VariantDataRules>,\n\tmethods: {\n\t\t[K in keyof Omit<VariantRuleParsingTypes, symbol>]: (\n\t\t\tvariant: VariantRuleParsingTypes[K] extends Array<VariantRule<infer C, keyof VariantDataRules>>\n\t\t\t\t? VariantRule<C, keyof VariantDataRules>\n\t\t\t\t: never\n\t\t) => void;\n\t}\n) {\n\tconst verifyDecorator = <C extends typeof Board | typeof PieceControl | typeof FENData>(\n\t\trv: VariantRule<AllowedSuperClasses, keyof VariantDataRules>,\n\t\ttype: C\n\t): rv is VariantRule<C, keyof VariantDataRules> => rv.getDecoratorType() === type;\n\n\tif (verifyDecorator(variant, Board)) {\n\t\tmethods.boardDecorators(variant);\n\t} else if (verifyDecorator(variant, PieceControl)) {\n\t\tmethods.pieceControlDecorators(variant);\n\t} else if (verifyDecorator(variant, FENData)) {\n\t\tmethods.fenDataDecorators(variant);\n\t}\n}\n\nexport function parseVariantRules(rules: string): VariantRuleParsingTypes {\n\ttype VariantRuleConstructor = new (...args: unknown[]) => VariantRule<AllowedSuperClasses, keyof VariantDataRules>;\n\tconst variantClasses = new Set<VariantRuleConstructor>();\n\tconst variantRuleList = new Set<VariantRule<AllowedSuperClasses, keyof VariantDataRules>>();\n\tconst forcedRules = [PromotionRank, PromoteTo, StalemateOptions, FiftyMoveRule, ThreefoldRepetition];\n\tfor (const variantRule of VariantRule.variantRuleList) {\n\t\tconst rv = new variantRule();\n\t\tvariantRuleList.add(rv);\n\t\tvariantClasses.add(variantRule);\n\t}\n\n\tconst finalList = createBaseParsingTypes();\n\tconst rulesStrings = rules.split(/\\s+/);\n\n\tconst insertVariantRule = (variant: VariantRule<AllowedSuperClasses, keyof VariantDataRules>) => {\n\t\tdifferentiateDecoratorMethods(variant, {\n\t\t\tboardDecorators: (variant: VariantRule<typeof Board, keyof VariantDataRules>) => {\n\t\t\t\tfinalList.boardDecorators.push(variant);\n\t\t\t},\n\t\t\tpieceControlDecorators: (variant: VariantRule<typeof PieceControl, keyof VariantDataRules>) => {\n\t\t\t\tfinalList.pieceControlDecorators.push(variant);\n\t\t\t},\n\t\t\tfenDataDecorators: (variant: VariantRule<typeof FENData, keyof VariantDataRules>) => {\n\t\t\t\tfinalList.fenDataDecorators.push(variant);\n\t\t\t}\n\t\t});\n\n\t\tfor (const [dependency, dependencyArgs] of variant.dependencies) {\n\t\t\tif (\n\t\t\t\t!Object.values(finalList).some((decorators: Array<VariantRule<AllowedSuperClasses, keyof VariantDataRules>>) =>\n\t\t\t\t\tdecorators.some((rv) => rv instanceof dependency)\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tinsertVariantRule(new dependency(...dependencyArgs));\n\t\t\t}\n\t\t}\n\t};\n\n\tfor (const variant of variantRuleList) {\n\t\tfor (const ruleString of rulesStrings) {\n\t\t\tif (variant.matchesPGNDeclaration(ruleString)) {\n\t\t\t\tinsertVariantRule(variant);\n\t\t\t\tvariantRuleList.delete(variant);\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (const forcedRule of forcedRules) {\n\t\tconst variant = new forcedRule();\n\t\tdifferentiateDecoratorMethods(variant, {\n\t\t\tboardDecorators: (variant: VariantRule<typeof Board, keyof VariantDataRules>) => {\n\t\t\t\tif (!finalList.boardDecorators.some((rule) => rule instanceof forcedRule)) {\n\t\t\t\t\tfinalList.boardDecorators.push(variant);\n\t\t\t\t}\n\t\t\t},\n\t\t\tpieceControlDecorators: (variant: VariantRule<typeof PieceControl, keyof VariantDataRules>) => {\n\t\t\t\tif (!finalList.pieceControlDecorators.some((rule) => rule instanceof forcedRule)) {\n\t\t\t\t\tfinalList.pieceControlDecorators.push(variant);\n\t\t\t\t}\n\t\t\t},\n\t\t\tfenDataDecorators: (variant: VariantRule<typeof FENData, keyof VariantDataRules>) => {\n\t\t\t\tif (!finalList.fenDataDecorators.some((rule) => rule instanceof forcedRule)) {\n\t\t\t\t\tfinalList.fenDataDecorators.push(variant);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tfor (const rule of variantRulePriorities) {\n\t\tconst resultingRule = new rule();\n\t\tdifferentiateDecoratorMethods(resultingRule, {\n\t\t\tboardDecorators: () => {\n\t\t\t\tconst index = finalList.boardDecorators.findIndex((c) => c instanceof rule);\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\tfinalList.boardDecorators.unshift(finalList.boardDecorators.splice(index, 1)[0]);\n\t\t\t\t}\n\t\t\t},\n\t\t\tpieceControlDecorators: () => {\n\t\t\t\tconst index = finalList.pieceControlDecorators.findIndex((c) => c instanceof rule);\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\tfinalList.pieceControlDecorators.unshift(finalList.pieceControlDecorators.splice(index, 1)[0]);\n\t\t\t\t}\n\t\t\t},\n\t\t\tfenDataDecorators: () => {\n\t\t\t\tconst index = finalList.fenDataDecorators.findIndex((c) => c instanceof rule);\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\tfinalList.fenDataDecorators.unshift(finalList.fenDataDecorators.splice(index, 1)[0]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\treturn finalList;\n}\n\nexport function compileVariantRuleData(rules: VariantRuleParsingTypes): VariantDataRules {\n\tconst finalObject: Partial<VariantDataRules> = {};\n\tconst variantRuleList = VariantRule.variantRuleList.map((rv) => new rv());\n\tfor (const rule of variantRuleList) {\n\t\tfinalObject[rule.getPublicProperties().information.tag] = false;\n\t}\n\n\tconst setFinalObjectProperty = <K extends keyof VariantDataRules>(properties: VariantRulePublicProperties<K>) => {\n\t\tfinalObject[properties.information.tag] = properties.parameterValue;\n\t};\n\n\tfor (const rule of rules) setFinalObjectProperty(rule.getPublicProperties());\n\treturn finalObject as VariantDataRules;\n}\n\nexport function copyVariantRules<T extends AllowedSuperClasses>(\n\trvs: Array<VariantRule<T, keyof VariantDataRules>>\n): Array<VariantRule<T, keyof VariantDataRules>> {\n\treturn rvs.map((rv) => {\n\t\tconst parameterValue = rv.getPublicProperties().parameterValue;\n\t\tconst parameterArray = parameterValue !== false ? [parameterValue] : [];\n\t\treturn new rv.constructor(parameterArray);\n\t});\n}\n\nexport function validateVariantRules(board: Board) {\n\tconst configuration: VariantRuleAllowedChecks = {\n\t\tvariantDataRules: board.variantData,\n\t\tgameType: board.gameType.type,\n\t\tfenTags: board.data.fenOptions.tags\n\t};\n\treturn {\n\t\t...board.variantRules,\n\t\tboardDecorators: board.variantRules.boardDecorators.filter((rv) => !rv.isDisabled(configuration)),\n\t\tpieceControlDecorators: board.variantRules.pieceControlDecorators.filter((rv) => !rv.isDisabled(configuration)),\n\t\tfenDataDecorators: board.variantRules.fenDataDecorators.filter((rv) => !rv.isDisabled(configuration))\n\t};\n}\n","import type { Board } from \"@moveGeneration/Board/Board\";\nimport type { GameData } from \"@moveGeneration/GameInformation/GameData\";\nimport { nonPlayablePieces } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport type { PieceLetter } from \"@moveGeneration/PieceControl/PieceControlInterface\";\nimport { compileVariantRuleData } from \"@moveGeneration/VariantRules/VariantRuleSetup\";\nimport { parsePGN4Moves } from \"./Moves/ParsePGNMoves\";\nimport { serializePGNMoves } from \"./Moves/SerializePGNMoves\";\nimport { createDefaultVariantTags, VariantTags } from \"./TagInterface\";\n\nexport function parsePGN4(pgn4: string) {\n\tlet pgn4Tags: string[],\n\t\tpgn4Moves = \"\";\n\tconst match = pgn4.match(/(?=1\\.\\s*?[xA-ZΑ-ωa-n0-9-])/);\n\tif (match?.index) {\n\t\tpgn4Moves = pgn4.substring(match.index);\n\t\tpgn4Tags = pgn4\n\t\t\t.substring(0, match.index)\n\t\t\t.split(\"]\")\n\t\t\t.map((t) => t.trim());\n\t} else {\n\t\tpgn4Tags = pgn4.split(\"]\").map((t) => t.trim());\n\t}\n\tconst moves = pgn4Moves.length ? parsePGN4Moves(pgn4Moves) : [];\n\n\tconst variantTags = createDefaultVariantTags();\n\tlet wasFEN4set = false;\n\tfor (const input of pgn4Tags) {\n\t\tlet variantTag: keyof VariantTags;\n\t\tfor (variantTag in variantTags) {\n\t\t\tconst tag = variantTags[variantTag];\n\t\t\tif (Object.prototype.hasOwnProperty.call(variantTags, variantTag) && tag.verifyTagInParsing(input)) {\n\t\t\t\tif (variantTag === \"startingPosition\") wasFEN4set = true;\n\t\t\t\ttag.currentValue = tag.parseTag(input);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tif (!wasFEN4set) variantTags.startingPosition.currentValue.fenData.fenOptions.setTag(\"noCorners\", true);\n\n\tconst gameData: GameData = {\n\t\tsite: variantTags.site.currentValue,\n\t\tgameNumber: variantTags.gameNumber.currentValue,\n\t\tdate: variantTags.date.currentValue,\n\t\ttimeControl: variantTags.timeControl.currentValue,\n\t\tplayers: variantTags.playerData.currentValue,\n\t\ttermination: variantTags.termination.currentValue,\n\t\tresult: undefined\n\t};\n\n\tconst variantRuleData = compileVariantRuleData(variantTags.variantRules.currentValue);\n\tconst promotionPieces = Array.isArray(variantRuleData.promotionPieces) ? variantRuleData.promotionPieces : [];\n\n\tconst nonPlayablePieceValues: string[] = Object.values(nonPlayablePieces);\n\treturn {\n\t\tgameData,\n\t\tgameType: variantTags.variantType.currentValue,\n\t\tvariantRules: variantTags.variantRules.currentValue,\n\t\tvariantRuleData,\n\t\tboard: variantTags.startingPosition.currentValue.board,\n\t\tfenData: variantTags.startingPosition.currentValue.fenData,\n\t\tpieceSet: new Set<PieceLetter>(\n\t\t\t[...variantTags.startingPosition.currentValue.pieceSet, ...promotionPieces].filter((e) => !nonPlayablePieceValues.includes(e))\n\t\t),\n\t\tmoves\n\t};\n}\n\nexport interface SerializedBoardStrings {\n\tboard: string;\n\tmoves: string;\n}\nconst defaultTags = createDefaultVariantTags();\nexport function serializeBoard(board: Board): SerializedBoardStrings {\n\treturn {\n\t\tboard: Object.values(defaultTags)\n\t\t\t.map((t) => t.serialize(board))\n\t\t\t.filter<string>((v): v is string => v !== undefined)\n\t\t\t.join(\"\\n\"),\n\t\tmoves: serializePGNMoves(board.moves)\n\t};\n}\n","import { assertNonUndefined } from \"@client/ts/baseTypes\";\nimport { verifyColorEnumValue, colorEnum } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport { duckPieceString, createPieceFromData, deadColorIndex } from \"@moveGeneration/GameInformation/GameUnits/PieceString\";\nimport {\n\tMoveData,\n\tDroppingMove,\n\tInternalMove,\n\tInternalMoveSignature,\n\tSpecialMove,\n\tMoveComponent,\n\tverifyInternalMove,\n\tMoveWrapper,\n\tcreateDummyMoveMetadata,\n\tverifyMoveWrapperProperties,\n\tMove,\n\tverifyRequiredMove\n} from \"@moveGeneration/MoveTree/MoveTreeInterface\";\nimport { verifyPieceLetter } from \"@moveGeneration/PieceControl/PieceControlInterface\";\nimport { parseEnPassantCoordinates, parseSingleCoordinate } from \"../Utils\";\n\nexport const PGN4_SYNTAX = {\n\tSPLIT: \".\",\n\tPIECE_REGEX: /[xA-ZΑ-ωa-nrbyg0-9-=+#@]/,\n\tPIECE_REGEX_SIMPLIFIED: /[A-ZΑ-ωa-n0-9-]/,\n\tMOVE_CAPTURING_REGEX: /^[A-ZΑ-ω]?([a-n]\\d{1,2})(?:-|x[A-ZΑ-ω]?)[A-ZΑ-ω]?([a-n]\\d{1,2})/,\n\tDUCK_MOVE_CAPTURING_REGEX: /Θ([a-n]\\d{1,2})?-([a-n]\\d{1,2})/,\n\tDROPPING_MOVE_CAPTURING_REGEX: /Θ?@([a-z])([A-ZΑ-ω])-([a-n]\\d{1,2})/,\n\tBRACKETS: {\n\t\tCOMMENT_START: \"{\",\n\t\tCOMMENT_END: \"}\",\n\t\tVARIATION_START: \"(\",\n\t\tVARIATION_END: \")\"\n\t},\n\tCOORDINATE_REGEX: /[a-n](?:(?:1[0-4])|(?:[1-9]))/,\n\tCOMMENT_SYNTAXES: {\n\t\tCLOCK: /\\[%timestamp (-?\\d+?)]/,\n\t\tARROWS: /\\[%cal ((?:R|B|Y|G).+?)]/,\n\t\tSQUARES: /\\[%csl ((?:R|B|Y|G).+?)]/,\n\t\tANNOTATION: /\\[%ann (.+?)]/\n\t}\n} as const;\n\nfunction obtainDuckMove(move: string): MoveData | DroppingMove | undefined {\n\tconst match = move.match(PGN4_SYNTAX.DUCK_MOVE_CAPTURING_REGEX);\n\tif (match) {\n\t\tif (match[1]) {\n\t\t\tconst startCoordinates = parseSingleCoordinate(match[1]);\n\t\t\tconst endCoordinates = parseSingleCoordinate(match[2]);\n\t\t\tif (!startCoordinates || !endCoordinates) return;\n\t\t\treturn { startCoordinates, endCoordinates };\n\t\t} else {\n\t\t\tconst endCoordinates = parseSingleCoordinate(match[2]);\n\t\t\tif (!endCoordinates) return;\n\t\t\treturn { piece: duckPieceString, endCoordinates };\n\t\t}\n\t} else return;\n}\n\nfunction obtainInternalType(type: string): InternalMove | undefined {\n\tlet internalMove: keyof typeof InternalMoveSignature;\n\tfor (internalMove in InternalMoveSignature) {\n\t\tif (Object.prototype.hasOwnProperty.call(InternalMoveSignature, internalMove)) {\n\t\t\tif (InternalMoveSignature[internalMove] === type) return { type: InternalMoveSignature[internalMove] };\n\t\t}\n\t}\n}\n\nfunction obtainDroppingMove(move: string): DroppingMove | undefined {\n\tconst match = move.match(PGN4_SYNTAX.DROPPING_MOVE_CAPTURING_REGEX);\n\tif (match) {\n\t\tconst [, color, piece, coordinate] = match;\n\t\tif (!verifyColorEnumValue(color) || !verifyPieceLetter(piece)) return;\n\t\tconst endCoordinates = parseSingleCoordinate(coordinate);\n\t\tif (!endCoordinates) return;\n\t\treturn {\n\t\t\tpiece: createPieceFromData(colorEnum[color], piece),\n\t\t\tendCoordinates\n\t\t};\n\t} else return;\n}\n\nfunction obtainStandardMove(move: string): MoveData | undefined {\n\tconst moveData: MoveData = { startCoordinates: [-1, -1], endCoordinates: [-1, -1] };\n\tconst promotionMatch = move.match(/.*?=([A-Zx])/);\n\tif (promotionMatch?.[1]) {\n\t\tmoveData.promotion = [createPieceFromData(deadColorIndex, promotionMatch[1].charAt(0))];\n\t}\n\n\tconst moveCoordinates = move.match(PGN4_SYNTAX.MOVE_CAPTURING_REGEX);\n\tif (moveCoordinates) {\n\t\tconst startCoordinate = parseSingleCoordinate(moveCoordinates[1]);\n\t\tconst endCoordinate = parseSingleCoordinate(moveCoordinates[2]);\n\n\t\tassertNonUndefined(startCoordinate);\n\t\tassertNonUndefined(endCoordinate);\n\t\tmoveData.startCoordinates = startCoordinate;\n\t\tmoveData.endCoordinates = endCoordinate;\n\n\t\treturn moveData;\n\t} else {\n\t\tif (/O-O-O.*/.test(move)) {\n\t\t\treturn { ...moveData, specialType: SpecialMove.CastlingQueenside };\n\t\t} else if (/O-O.*/.test(move)) {\n\t\t\treturn { ...moveData, specialType: SpecialMove.CastlingKingside };\n\t\t}\n\t}\n}\n\nfunction cloneMoveData(move: MoveComponent): MoveComponent {\n\tif (!verifyInternalMove(move)) {\n\t\tif (\"startCoordinates\" in move) {\n\t\t\tconst newMove: MoveData = {\n\t\t\t\tstartCoordinates: [...move.startCoordinates],\n\t\t\t\tendCoordinates: [...move.endCoordinates]\n\t\t\t};\n\t\t\tif (\"specialType\" in move) {\n\t\t\t\tnewMove.specialType = move.specialType;\n\t\t\t}\n\t\t\tif (\"promotion\" in move) {\n\t\t\t\tnewMove.promotion = move.promotion;\n\t\t\t}\n\t\t\treturn newMove;\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tendCoordinates: move.endCoordinates,\n\t\t\t\tpiece: move.piece\n\t\t\t};\n\t\t}\n\t} else {\n\t\treturn { type: move.type };\n\t}\n}\n\nexport const parsePGN4Moves = (moves: string): MoveWrapper[] => {\n\tconst parseMoves = (selectedMove: string, path: number[]): MoveWrapper[] => {\n\t\tconst moveList: MoveWrapper[] = [];\n\t\tconst currentPath = path;\n\n\t\tfunction getMoveIndexes(mI: number) {\n\t\t\twhile (selectedMove[mI] && PGN4_SYNTAX.PIECE_REGEX.test(selectedMove[mI])) mI++;\n\t\t\treturn mI;\n\t\t}\n\n\t\tfunction parseComment(mI: number) {\n\t\t\twhile (selectedMove[mI] && selectedMove[mI] !== PGN4_SYNTAX.BRACKETS.COMMENT_END) mI++;\n\t\t\treturn mI;\n\t\t}\n\n\t\tfunction getEnumeratorIndex(mI: number) {\n\t\t\twhile (selectedMove[mI] && /\\d|\\./.test(selectedMove[mI])) mI++;\n\t\t\treturn --mI;\n\t\t}\n\n\t\tfunction findBracketIndex(i: number) {\n\t\t\tlet depth = 0;\n\t\t\tfor (; i < selectedMove.length; i++) {\n\t\t\t\tswitch (selectedMove[i]) {\n\t\t\t\t\tcase PGN4_SYNTAX.BRACKETS.COMMENT_START:\n\t\t\t\t\t\ti = parseComment(i);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase PGN4_SYNTAX.BRACKETS.VARIATION_START:\n\t\t\t\t\t\tdepth++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase PGN4_SYNTAX.BRACKETS.VARIATION_END:\n\t\t\t\t\t\tif (--depth === 0) {\n\t\t\t\t\t\t\treturn i;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthrow new TypeError(\"No matching parentheses for input \" + selectedMove);\n\t\t}\n\n\t\tfunction processMoveDataInsertion() {\n\t\t\tif (currentMoveData) {\n\t\t\t\tcurrentPath.push(++increment);\n\t\t\t\tcurrentMove.path = currentPath.slice();\n\t\t\t\tcurrentPath.pop();\n\t\t\t\tcurrentMove.moveData = currentMoveData.map((m) => cloneMoveData(m));\n\t\t\t\tcurrentMove.metadata = createDummyMoveMetadata();\n\t\t\t\tconst clockSyntax = currentMove.comment?.match(PGN4_SYNTAX.COMMENT_SYNTAXES.CLOCK);\n\t\t\t\tif (clockSyntax && !isNaN(Number(clockSyntax[1]))) {\n\t\t\t\t\tcurrentMove.comment = currentMove.comment?.replace(PGN4_SYNTAX.COMMENT_SYNTAXES.CLOCK, \"\");\n\t\t\t\t\tcurrentMove.metadata.playerClock = Number(clockSyntax[1]);\n\t\t\t\t}\n\t\t\t\tconst arrowSyntax = currentMove.comment?.match(PGN4_SYNTAX.COMMENT_SYNTAXES.ARROWS);\n\t\t\t\tif (arrowSyntax) {\n\t\t\t\t\tconst arrows = arrowSyntax[1].split(\",\");\n\t\t\t\t\tfor (const arrow of arrows) {\n\t\t\t\t\t\tconst [color, coordinate] = [arrow[0], arrow.slice(1)];\n\t\t\t\t\t\tconst numericColor = color.toLowerCase(),\n\t\t\t\t\t\t\tarrowCoordinates = parseEnPassantCoordinates(coordinate);\n\t\t\t\t\t\tif (!verifyColorEnumValue(numericColor) || !arrowCoordinates) continue;\n\t\t\t\t\t\tcurrentMove.metadata.highlightedArrows.push([colorEnum[numericColor], ...arrowCoordinates]);\n\t\t\t\t\t}\n\t\t\t\t\tcurrentMove.comment = currentMove.comment?.replace(PGN4_SYNTAX.COMMENT_SYNTAXES.ARROWS, \"\");\n\t\t\t\t}\n\t\t\t\tconst squareSyntax = currentMove.comment?.match(PGN4_SYNTAX.COMMENT_SYNTAXES.SQUARES);\n\t\t\t\tif (squareSyntax) {\n\t\t\t\t\tconst squares = squareSyntax[1].split(\",\");\n\t\t\t\t\tfor (const square of squares) {\n\t\t\t\t\t\tconst [color, inputCoordinate] = [square[0], square.slice(1)];\n\t\t\t\t\t\tconst numericColor = color.toLowerCase(),\n\t\t\t\t\t\t\tcoordinate = parseSingleCoordinate(inputCoordinate);\n\t\t\t\t\t\tif (!verifyColorEnumValue(numericColor) || !coordinate) continue;\n\t\t\t\t\t\tcurrentMove.metadata.highlightedSquares.push([colorEnum[numericColor], coordinate]);\n\t\t\t\t\t}\n\t\t\t\t\tcurrentMove.comment = currentMove.comment?.replace(PGN4_SYNTAX.COMMENT_SYNTAXES.SQUARES, \"\");\n\t\t\t\t}\n\t\t\t\tconst annotationMatch = currentMove.comment?.match(PGN4_SYNTAX.COMMENT_SYNTAXES.ANNOTATION);\n\t\t\t\tif (annotationMatch) {\n\t\t\t\t\tcurrentMove.metadata.annotation = annotationMatch[1];\n\t\t\t\t\tcurrentMove.comment = currentMove.comment?.replace(PGN4_SYNTAX.COMMENT_SYNTAXES.ANNOTATION, \"\");\n\t\t\t\t}\n\n\t\t\t\tif (verifyMoveWrapperProperties(currentMove)) {\n\t\t\t\t\tmoveList.push(Object.assign({}, currentMove));\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error(`Not all properties of move wrapper are filled out: ${JSON.stringify(currentMove)}`);\n\t\t\t\t}\n\n\t\t\t\tcurrentMove = {\n\t\t\t\t\talternativeLines: [],\n\t\t\t\t\tcomment: \"\"\n\t\t\t\t};\n\t\t\t\tcurrentMoveData = undefined;\n\t\t\t}\n\t\t}\n\n\t\tfunction obtainMoveFromInfo(info: string): Move {\n\t\t\tconst currentMove: MoveComponent[] = [];\n\t\t\tconst internalType = obtainInternalType(info[0]);\n\t\t\tif (info.length === 1 && internalType !== undefined) {\n\t\t\t\treturn [internalType];\n\t\t\t}\n\n\t\t\tconst standardMove = obtainStandardMove(info);\n\t\t\tif (standardMove) currentMove.push(standardMove);\n\t\t\tconst droppingMove = obtainDroppingMove(info);\n\t\t\tif (droppingMove) currentMove.push(droppingMove);\n\t\t\tconst duckMove = obtainDuckMove(info);\n\t\t\tif (duckMove) currentMove.push(duckMove);\n\n\t\t\tif (verifyRequiredMove(currentMove)) {\n\t\t\t\treturn currentMove;\n\t\t\t} else throw new Error(`Move length is 0 for string ${info}`);\n\t\t}\n\n\t\tlet currentMoveData: Move | undefined;\n\t\tlet currentMove: Partial<MoveWrapper> = {\n\t\t\talternativeLines: [],\n\t\t\tcomment: \"\"\n\t\t};\n\n\t\tlet increment = -1,\n\t\t\tvariationIncrement = -1;\n\t\ttry {\n\t\t\tfor (let i = 0; i < selectedMove.length; i++) {\n\t\t\t\tconst isNumNaN = isNaN(Number(selectedMove[i]));\n\t\t\t\tif (isNumNaN && !/\\s/.test(selectedMove[i]) && selectedMove[i] !== PGN4_SYNTAX.SPLIT) {\n\t\t\t\t\tif (PGN4_SYNTAX.PIECE_REGEX_SIMPLIFIED.test(selectedMove[i])) {\n\t\t\t\t\t\tconst index = getMoveIndexes(i);\n\t\t\t\t\t\tcurrentMoveData = obtainMoveFromInfo(selectedMove.substring(i, index));\n\t\t\t\t\t\ti = index;\n\t\t\t\t\t} else if (moves[i] === PGN4_SYNTAX.BRACKETS.COMMENT_START) {\n\t\t\t\t\t\tconst index = parseComment(i);\n\t\t\t\t\t\tcurrentMove.comment = moves.substring(i + 1, index);\n\t\t\t\t\t\ti = index;\n\t\t\t\t\t} else if (moves[i] === PGN4_SYNTAX.BRACKETS.VARIATION_START) {\n\t\t\t\t\t\tconst index = findBracketIndex(i);\n\t\t\t\t\t\tcurrentPath.push(increment + 1, ++variationIncrement);\n\t\t\t\t\t\tcurrentMove.alternativeLines?.push([...parseMoves(moves.substring(i + 1, index), currentPath.slice())]);\n\t\t\t\t\t\ti = index;\n\t\t\t\t\t}\n\t\t\t\t} else if (\n\t\t\t\t\t(selectedMove[i] === PGN4_SYNTAX.SPLIT && moves[i + 1] && moves[i + 1] === PGN4_SYNTAX.SPLIT) ||\n\t\t\t\t\t(moves[i].trim() && !isNumNaN && moves[i + 1] && (moves[i + 1] === PGN4_SYNTAX.SPLIT || !isNaN(Number(moves[i + 1]))))\n\t\t\t\t) {\n\t\t\t\t\tif (!isNumNaN) i = getEnumeratorIndex(i);\n\t\t\t\t\tif (currentMoveData) {\n\t\t\t\t\t\tprocessMoveDataInsertion();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} finally {\n\t\t\tprocessMoveDataInsertion();\n\t\t\tcurrentPath.push(increment + 1);\n\t\t\tcurrentMove.path = currentPath.slice();\n\t\t\tif (verifyMoveWrapperProperties(currentMove)) {\n\t\t\t\tmoveList.push(Object.assign({}, currentMove));\n\t\t\t}\n\t\t}\n\n\t\treturn moveList;\n\t};\n\n\treturn parseMoves(moves, []);\n};\n","import type { MoveTreeInterface } from \"@moveGeneration/MoveTree/MoveTree\";\nimport type { MoveWrapper } from \"@moveGeneration/MoveTree/MoveTreeInterface\";\n\nexport function serializePGNMoves(moveTree: MoveTreeInterface): string {\n\tlet resultingString = \"\";\n\n\tconst traverse = (moves: MoveWrapper[]) => {\n\t\tfor (const moveWrapper of moves) {\n\t\t\tif (moveWrapper.metadata.currentFullMove) {\n\t\t\t\tresultingString = resultingString.replace(/\\s\\.\\.\\s$/, \"\");\n\t\t\t\tresultingString += ` ${moveWrapper.metadata.currentFullMove}. `;\n\t\t\t}\n\n\t\t\tresultingString += moveWrapper.cachedNames.fullMoveNotation;\n\t\t\tif (moveWrapper.comment) resultingString += ` {${moveWrapper.comment}}`;\n\t\t\tresultingString += \" .. \";\n\n\t\t\tfor (const alternativeLine of moveWrapper.alternativeLines) {\n\t\t\t\tresultingString += \"(.. \";\n\t\t\t\ttraverse(alternativeLine);\n\t\t\t\tresultingString += \" )\";\n\t\t\t}\n\t\t}\n\n\t\tresultingString = resultingString.replace(/\\s\\.\\.\\s$/, \"\");\n\t};\n\n\ttraverse(moveTree.moves);\n\treturn resultingString;\n}\n","import type { Board } from \"@moveGeneration/Board/Board\";\nimport { createFENDataTag } from \"./TagLogic/FENDataTag\";\nimport * as GenericTags from \"./TagLogic/GameMetadataTags\";\nimport { createVariantRulesTag } from \"./TagLogic/VariantRulesTag\";\n\nexport const createDefaultVariantTags = () => ({\n\tvariantType: GenericTags.createVariantTypeTag(),\n\tstartingPosition: createFENDataTag(),\n\tvariantRules: createVariantRulesTag(),\n\tdate: GenericTags.createDateTag(),\n\tsite: GenericTags.createSiteTag(),\n\ttimeControl: GenericTags.createTimeControlTag(),\n\ttermination: GenericTags.createTerminationTag(),\n\tgameNumber: GenericTags.createGameNumberTag(),\n\tplayerData: GenericTags.createPlayerDataTag(),\n\tresults: GenericTags.createResultsTag()\n});\nexport type VariantTags = ReturnType<typeof createDefaultVariantTags>;\n\nexport interface VariantTag<T> {\n\tcurrentValue: T;\n\treadonly tag: keyof VariantTags;\n\tverifyTagInParsing(inputTag: string): boolean;\n\tparseTag(tagContents: string): T;\n\tserialize(board: Board): string | undefined;\n}\n","import { createTuple, Tuple, verifyTupleType } from \"@client/ts/baseTypes\";\nimport { BoardSquares, initializeBoardSquares } from \"@client/ts/logic/BaseInterfaces\";\nimport { FENData, FENOptions } from \"@moveGeneration/FENData/FENData\";\nimport type { FENOptionsTags } from \"@moveGeneration/FENData/FENOptions/FENOptionsTagsInterface\";\nimport { boardDimension, colors, totalPlayers } from \"@moveGeneration/GameInformation/GameData\";\nimport {\n\tverifyColorEnumValue,\n\tcolorEnum,\n\tCoordinate,\n\tnonPlayablePieces,\n\tstringColorEnum\n} from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\nimport { createPieceFromString, emptyPieceString, PieceString } from \"@moveGeneration/GameInformation/GameUnits/PieceString\";\nimport type { PieceLetter } from \"@moveGeneration/PieceControl/PieceControlInterface\";\nimport type { VariantTag } from \"../TagInterface\";\nimport { tagNamesEqual, unwrapTag, wrapTag } from \"../Utils\";\n\nexport function checkDimensionIntersection(dimension: Coordinate, [i, j]: Coordinate) {\n\tconst dimensionI = (boardDimension - dimension[0]) / 2,\n\t\tdimensionJ = (boardDimension - dimension[1]) / 2;\n\treturn i < dimensionI || i >= dimensionI + dimension[0] || j < dimensionJ || j >= dimensionJ + dimension[1];\n}\n\nfunction serializeFENOptions(fenOptions: FENOptions): string {\n\tconst resultingStrings: string[] = [];\n\tlet key: keyof FENOptionsTags;\n\tfor (key in fenOptions.tags) {\n\t\tif (!Object.prototype.hasOwnProperty.call(fenOptions.tags, key)) continue;\n\t\tconst serializedForm = fenOptions.tags[key].serialize();\n\t\tif (serializedForm) resultingStrings.push(serializedForm);\n\t}\n\n\treturn `{${resultingStrings.join(\",\")}}`;\n}\n\nfunction modifyFourBooleanParameter(part: string, fenDataArrayRef: Tuple<boolean, typeof totalPlayers>) {\n\tconst booleans = part.split(\",\").map((e) => Boolean(Number(e)));\n\tif (verifyTupleType(booleans, totalPlayers)) {\n\t\tfenDataArrayRef.forEach((_, i, arr) => (arr[i] = booleans[i]));\n\t} else {\n\t\tconsole.error(\"Incorrect amount of arguments for the boolean parameter length in FENData: \" + part);\n\t\tconsole.trace(`Expected ${totalPlayers} arguments, but got ${booleans.length}`);\n\t}\n}\n\nconst predefinedFENpositions = {\n\t\"4PC\": \"R-0,0,0,0-1,1,1,1-1,1,1,1-0,0,0,0-0-x,x,x,yR,yN,yB,yK,yQ,yB,yN,yR,x,x,x/x,x,x,yP,yP,yP,yP,yP,yP,yP,yP,x,x,x/x,x,x,8,x,x,x/bR,bP,10,gP,gR/bN,bP,10,gP,gN/bB,bP,10,gP,gB/bQ,bP,10,gP,gK/bK,bP,10,gP,gQ/bB,bP,10,gP,gB/bN,bP,10,gP,gN/bR,bP,10,gP,gR/x,x,x,8,x,x,x/x,x,x,rP,rP,rP,rP,rP,rP,rP,rP,x,x,x/x,x,x,rR,rN,rB,rQ,rK,rB,rN,rR,x,x,x\",\n\t\"4PCo\": \"R-0,0,0,0-1,1,1,1-1,1,1,1-0,0,0,0-0-x,x,x,yR,yN,yB,yK,yQ,yB,yN,yR,x,x,x/x,x,x,yP,yP,yP,yP,yP,yP,yP,yP,x,x,x/x,x,x,8,x,x,x/bR,bP,10,gP,gR/bN,bP,10,gP,gN/bB,bP,10,gP,gB/bK,bP,10,gP,gQ/bQ,bP,10,gP,gK/bB,bP,10,gP,gB/bN,bP,10,gP,gN/bR,bP,10,gP,gR/x,x,x,8,x,x,x/x,x,x,rP,rP,rP,rP,rP,rP,rP,rP,x,x,x/x,x,x,rR,rN,rB,rQ,rK,rB,rN,rR,x,x,x\",\n\t\"4PCb\": \"R-0,0,0,0-1,1,1,1-1,1,1,1-0,0,0,0-0-x,x,x,yR,yN,yB,yQ,yK,yB,yN,yR,x,x,x/x,x,x,yP,yP,yP,yP,yP,yP,yP,yP,x,x,x/x,x,x,8,x,x,x/bR,bP,10,gP,gR/bN,bP,10,gP,gN/bB,bP,10,gP,gB/bQ,bP,10,gP,gQ/bK,bP,10,gP,gK/bB,bP,10,gP,gB/bN,bP,10,gP,gN/bR,bP,10,gP,gR/x,x,x,8,x,x,x/x,x,x,rP,rP,rP,rP,rP,rP,rP,rP,x,x,x/x,x,x,rR,rN,rB,rQ,rK,rB,rN,rR,x,x,x\",\n\t\"4PCn\": \"R-0,0,0,0-1,1,1,1-1,1,1,1-0,0,0,0-0-x,x,x,yR,yN,yB,yQ,yK,yB,yN,yR,x,x,x/x,x,x,yP,yP,yP,yP,yP,yP,yP,yP,x,x,x/x,x,x,8,x,x,x/bR,bP,10,gP,gR/bN,bP,10,gP,gN/bB,bP,10,gP,gB/bQ,bP,10,gP,gK/bK,bP,10,gP,gQ/bB,bP,10,gP,gB/bN,bP,10,gP,gN/bR,bP,10,gP,gR/x,x,x,8,x,x,x/x,x,x,rP,rP,rP,rP,rP,rP,rP,rP,x,x,x/x,x,x,rR,rN,rB,rQ,rK,rB,rN,rR,x,x,x\",\n\t\"2PC\": \"R-0,1,0,1-1,1,1,1-1,1,1,1-0,0,0,0-0-{'pawnBaseRank':5,'wb':true,'dim':'8x8'}-x,x,x,x,x,x,x,x,x,x,x,x,x,x/x,x,x,x,x,x,x,x,x,x,x,x,x,x/x,x,x,x,x,x,x,x,x,x,x,x,x,x/x,x,x,yR,yN,yB,yQ,yK,yB,yN,yR,x,x,x/x,x,x,yP,yP,yP,yP,yP,yP,yP,yP,x,x,x/x,x,x,8,x,x,x/x,x,x,8,x,x,x/x,x,x,8,x,x,x/x,x,x,8,x,x,x/x,x,x,rP,rP,rP,rP,rP,rP,rP,rP,x,x,x/x,x,x,rR,rN,rB,rQ,rK,rB,rN,rR,x,x,x/x,x,x,x,x,x,x,x,x,x,x,x,x,x/x,x,x,x,x,x,x,x,x,x,x,x,x,x/x,x,x,x,x,x,x,x,x,x,x,x,x,x\"\n} as const;\nconst verifyPredefinedFENPosition = (fenShorthand: string): fenShorthand is keyof typeof predefinedFENpositions =>\n\tfenShorthand in predefinedFENpositions;\n\nconst fenDataTag = \"StartFen4\";\nexport const createFENDataTag = (): VariantTag<{\n\tboard: BoardSquares<PieceString>;\n\tfenData: FENData;\n\tpieceSet: Set<PieceLetter>;\n}> => ({\n\ttag: \"startingPosition\",\n\tcurrentValue: {\n\t\tboard: initializeBoardSquares((): PieceString => emptyPieceString),\n\t\tfenData: new FENData(),\n\t\tpieceSet: new Set<PieceLetter>()\n\t},\n\tverifyTagInParsing(inputTag) {\n\t\treturn tagNamesEqual(inputTag, fenDataTag);\n\t},\n\tparseTag(inputTag) {\n\t\tconst tagContents = unwrapTag(inputTag, fenDataTag);\n\t\tconst fenDataString = verifyPredefinedFENPosition(tagContents) ? predefinedFENpositions[tagContents] : tagContents;\n\n\t\tconst fenData = new FENData();\n\t\tconst board: BoardSquares<PieceString> = initializeBoardSquares(() => emptyPieceString);\n\t\tconst pieceSet = new Set<PieceLetter>();\n\n\t\tconst transparentWall = createPieceFromString(\"x\");\n\t\tconst parts = fenDataString.split(\"-\");\n\t\tif (parts.length < 7 || parts[parts.length - 1].split(\"/\").length !== boardDimension) {\n\t\t\tconsole.warn(\"FEN has less than 7 parts: \" + fenDataString);\n\t\t} else {\n\t\t\tconst sideToMove = parts[0].charAt(0).toLowerCase();\n\t\t\tif (verifyColorEnumValue(sideToMove)) {\n\t\t\t\tfenData.sideToMove = colorEnum[sideToMove];\n\t\t\t} else {\n\t\t\t\tconsole.warn(\"FEN option 1: side to move is not an alphabetic color: \" + sideToMove);\n\t\t\t}\n\n\t\t\tmodifyFourBooleanParameter(parts[1], fenData.fenOptions.tag(\"dead\"));\n\t\t\tmodifyFourBooleanParameter(parts[2], fenData.fenOptions.tag(\"castleKingside\"));\n\t\t\tmodifyFourBooleanParameter(parts[3], fenData.fenOptions.tag(\"castleQueenside\"));\n\n\t\t\tconst points = parts[4].split(\",\").map((e) => Number(e));\n\t\t\tif (verifyTupleType(points, totalPlayers)) {\n\t\t\t\tfenData.points = points;\n\t\t\t} else {\n\t\t\t\tconsole.warn(`FEN option 5: points is of incorrect length: ${points.join(\",\")}`);\n\t\t\t}\n\n\t\t\tfenData.plyCount = Number(parts[5]);\n\n\t\t\tconst royals: Tuple<Coordinate | null, typeof totalPlayers> = createTuple(null, totalPlayers);\n\t\t\tconst verifyKeyInTags = (key: string): key is keyof FENOptionsTags => key in fenData.fenOptions.tags;\n\n\t\t\tif (parts[6].startsWith(\"{\")) {\n\t\t\t\tconst initialParsing: unknown = JSON.parse(parts[6].replaceAll(\"(\", \"[\").replaceAll(\")\", \"]\").replaceAll(\"'\", '\"'));\n\t\t\t\tif (typeof initialParsing !== \"object\" || initialParsing === null)\n\t\t\t\t\tthrow new Error(\"Unexpected object definition syntax for \" + String(initialParsing));\n\t\t\t\tfor (const [key, value] of Object.entries(initialParsing)) {\n\t\t\t\t\tif (!verifyKeyInTags(key)) continue;\n\t\t\t\t\tconst tag = fenData.fenOptions.tags[key];\n\t\t\t\t\ttag.value = tag.parse(value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst position = parts[parts.length - 1].split(\"/\"),\n\t\t\t\tdimension = fenData.fenOptions.tag(\"dim\");\n\t\t\tposition.forEach((line, i) => {\n\t\t\t\tlet j = 0;\n\t\t\t\tfor (let pieceStr of line.split(\",\")) {\n\t\t\t\t\tif (pieceStr.endsWith('\"')) pieceStr = pieceStr.slice(0, -1);\n\t\t\t\t\tif (isNaN(Number(pieceStr))) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (!checkDimensionIntersection(dimension, [i, j])) {\n\t\t\t\t\t\t\t\tconst pieceString = createPieceFromString(pieceStr);\n\t\t\t\t\t\t\t\tboard[i][j] = pieceString;\n\t\t\t\t\t\t\t\tif (pieceString.isPiece()) {\n\t\t\t\t\t\t\t\t\tif (pieceString.piece === \"K\" && !royals[pieceString.color]) {\n\t\t\t\t\t\t\t\t\t\troyals[pieceString.color] = [i, j];\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tpieceSet.add(pieceString.piece);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else j += Number(pieceStr);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfor (const color of colors) {\n\t\t\t\tfor (const [piece] of fenData.fenOptions.tag(\"bank\")[color]) {\n\t\t\t\t\tif (piece.piece in nonPlayablePieces) continue;\n\t\t\t\t\tpieceSet.add(piece.piece);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfenData.fenOptions.setTag(\"royal\", royals);\n\n\t\t\tfor (let i = 0; i < boardDimension; i++) {\n\t\t\t\tfor (let j = 0; j < boardDimension; j++) {\n\t\t\t\t\tif (checkDimensionIntersection(dimension, [i, j])) board[i][j] = transparentWall;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!fenData.fenOptions.tag(\"noCorners\")) {\n\t\t\tconst cornerAreaSize = 3,\n\t\t\t\tarrayDimension = boardDimension - 1;\n\t\t\tbaseLoop: for (let i = 0; i < cornerAreaSize; i++) {\n\t\t\t\tfor (let j = 0; j < cornerAreaSize; j++) {\n\t\t\t\t\tconst squares: Coordinate[] = [\n\t\t\t\t\t\t[i, j],\n\t\t\t\t\t\t[arrayDimension - i, j],\n\t\t\t\t\t\t[i, arrayDimension - j],\n\t\t\t\t\t\t[arrayDimension - i, arrayDimension - j]\n\t\t\t\t\t];\n\t\t\t\t\tfor (const square of squares) {\n\t\t\t\t\t\tconst pieceString = board[square[0]][square[1]];\n\t\t\t\t\t\tif (!pieceString.isWall() || pieceString.piece !== transparentWall.piece) {\n\t\t\t\t\t\t\tfenData.fenOptions.setTag(\"noCorners\", true);\n\t\t\t\t\t\t\tbreak baseLoop;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { fenData, board, pieceSet };\n\t},\n\tserialize(baseBoard) {\n\t\tconst { board, data } = baseBoard;\n\t\tlet resultingString = \"\";\n\t\tresultingString += `${stringColorEnum[data.sideToMove].toUpperCase()}-`;\n\t\tresultingString += `${data.fenOptions\n\t\t\t.tag(\"dead\")\n\t\t\t.map((d) => Number(d))\n\t\t\t.join(\",\")}-`;\n\t\tresultingString += `${data.fenOptions\n\t\t\t.tag(\"castleKingside\")\n\t\t\t.map((d) => Number(d))\n\t\t\t.join(\",\")}-`;\n\t\tresultingString += `${data.fenOptions\n\t\t\t.tag(\"castleQueenside\")\n\t\t\t.map((d) => Number(d))\n\t\t\t.join(\",\")}-`;\n\t\tresultingString += `${data.points.join(\",\")}-`;\n\t\tresultingString += `${data.plyCount}-`;\n\t\tresultingString += `${serializeFENOptions(data.fenOptions)}-`;\n\n\t\tlet currentEmptySquares = 0;\n\t\tfor (const row of board) {\n\t\t\tfor (const pieceString of row) {\n\t\t\t\tif (pieceString.isEmpty()) {\n\t\t\t\t\tcurrentEmptySquares++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (currentEmptySquares !== 0) {\n\t\t\t\t\tresultingString += `${currentEmptySquares},`;\n\t\t\t\t\tcurrentEmptySquares = 0;\n\t\t\t\t}\n\t\t\t\tresultingString += `${pieceString.value},`;\n\t\t\t}\n\n\t\t\tif (currentEmptySquares !== 0) {\n\t\t\t\tresultingString += `${currentEmptySquares}/`;\n\t\t\t\tcurrentEmptySquares = 0;\n\t\t\t} else {\n\t\t\t\tresultingString = resultingString.slice(0, -1);\n\t\t\t\tresultingString += \"/\";\n\t\t\t}\n\t\t}\n\t\tresultingString = resultingString.slice(0, -1);\n\n\t\treturn wrapTag(fenDataTag, resultingString);\n\t}\n});\n","import { createTupleFromCallback, Tuple } from \"@client/ts/baseTypes\";\nimport {\n\tcolors,\n\tGamePlayerData,\n\tgetPlayerNameFromColor,\n\tplayerNames,\n\tTermination,\n\tTimeControl,\n\ttotalPlayers,\n\tvalidateTerminationString,\n\tVariantType\n} from \"@moveGeneration/GameInformation/GameData\";\nimport { truncateNumber } from \"@utils/NumberUtils\";\nimport type { VariantTag } from \"../TagInterface\";\nimport { tagNamesEqual, unwrapTag, wrapTag } from \"../Utils\";\n\nconst variantTypeTag = \"Variant\";\nexport const createVariantTypeTag = (): VariantTag<VariantType> => ({\n\ttag: \"variantType\",\n\tcurrentValue: VariantType.FFA,\n\tverifyTagInParsing(inputTag) {\n\t\treturn tagNamesEqual(inputTag, variantTypeTag);\n\t},\n\tparseTag(inputTag) {\n\t\tconst tagContents = unwrapTag(inputTag, variantTypeTag);\n\t\tfor (const type of Object.values(VariantType)) {\n\t\t\tif (tagContents === type) return type;\n\t\t}\n\n\t\treturn VariantType.FFA;\n\t},\n\tserialize(board) {\n\t\treturn wrapTag(variantTypeTag, board.gameType.type);\n\t}\n});\n\nconst variantDateTag = \"Date\";\nexport const createDateTag = (): VariantTag<Date> => ({\n\ttag: \"date\",\n\tcurrentValue: new Date(),\n\tverifyTagInParsing(inputTag) {\n\t\treturn tagNamesEqual(inputTag, variantDateTag);\n\t},\n\tparseTag(tagContents) {\n\t\treturn new Date(unwrapTag(tagContents, variantDateTag));\n\t},\n\tserialize(board) {\n\t\tif (!board.gameData.date) return;\n\t\tif (typeof board.gameData.date === \"object\") {\n\t\t\treturn wrapTag(variantDateTag, board.gameData.date.toUTCString());\n\t\t} else {\n\t\t\treturn wrapTag(variantDateTag, board.gameData.date);\n\t\t}\n\t}\n});\n\nconst variantSiteTag = \"Site\";\nexport const createSiteTag = (): VariantTag<string> => ({\n\ttag: \"site\",\n\tcurrentValue: \"\",\n\tverifyTagInParsing(inputTag) {\n\t\treturn tagNamesEqual(inputTag, variantSiteTag);\n\t},\n\tparseTag(tagContents) {\n\t\treturn unwrapTag(tagContents, variantSiteTag);\n\t},\n\tserialize(board) {\n\t\tif (!board.gameData.site) return;\n\t\treturn wrapTag(variantSiteTag, board.gameData.site);\n\t}\n});\n\nconst variantTimeControlTag = \"TimeControl\",\n\tgetDefaultTimeControl = (): TimeControl => ({ baseTime: 180, increment: 2, isDelay: false });\nexport const createTimeControlTag = (): VariantTag<TimeControl> => ({\n\ttag: \"timeControl\",\n\tcurrentValue: getDefaultTimeControl(),\n\tverifyTagInParsing(inputTag) {\n\t\treturn tagNamesEqual(inputTag, variantTimeControlTag);\n\t},\n\tparseTag(inputTag) {\n\t\tconst defaultTC = getDefaultTimeControl();\n\t\tconst matchArray = unwrapTag(inputTag, variantTimeControlTag)\n\t\t\t.match(/^((?:0\\.\\d\\d?)?|(?:\\d\\d?s?))(?:(?:(?:\\+|\\|)(\\d\\d?)(D?))|(\\smin))$/)\n\t\t\t?.slice(1);\n\n\t\tif (matchArray) {\n\t\t\tconst [minutesMatch, secondsMatch, delay] = matchArray;\n\t\t\tif (!secondsMatch) return defaultTC;\n\t\t\tdefaultTC.isDelay = delay ? true : false;\n\t\t\tif (/\\smin/.test(secondsMatch)) {\n\t\t\t\tdefaultTC.increment = 0;\n\t\t\t} else {\n\t\t\t\tdefaultTC.increment = Number(secondsMatch);\n\t\t\t}\n\t\t\tif (minutesMatch.endsWith(\"s\")) {\n\t\t\t\tdefaultTC.baseTime = Math.round(Number(minutesMatch.slice(0, -1)));\n\t\t\t} else {\n\t\t\t\tdefaultTC.baseTime = Number(minutesMatch) * 60;\n\t\t\t}\n\t\t}\n\n\t\treturn defaultTC;\n\t},\n\tserialize(board) {\n\t\tconst timeControl = board.gameData.timeControl;\n\t\tconst noIncrement = timeControl.increment === 0;\n\t\tlet timeControlString = \"\";\n\t\tif (timeControl.baseTime < 60) {\n\t\t\ttimeControlString += noIncrement ? `${timeControl.baseTime * 60} sec` : `${timeControl.baseTime * 60}s`;\n\t\t} else if (timeControl.baseTime > 60 && noIncrement) {\n\t\t\ttimeControlString += `${truncateNumber(timeControl.baseTime / 60, 1)} min`;\n\t\t} else {\n\t\t\ttimeControlString += truncateNumber(timeControl.baseTime / 60, 1);\n\t\t}\n\n\t\tif (!noIncrement) {\n\t\t\ttimeControlString += \"|\";\n\t\t\ttimeControlString += timeControl.increment;\n\t\t}\n\t\tif (timeControl.isDelay) {\n\t\t\ttimeControlString += \"D\";\n\t\t}\n\n\t\treturn wrapTag(variantTimeControlTag, timeControlString);\n\t}\n});\n\nconst variantTerminationTag = \"Termination\";\nexport const createTerminationTag = (): VariantTag<Termination | undefined> => ({\n\ttag: \"termination\",\n\tcurrentValue: undefined,\n\tverifyTagInParsing(inputTag) {\n\t\treturn tagNamesEqual(inputTag, variantTerminationTag);\n\t},\n\tparseTag(inputTag) {\n\t\tconst tagContents = unwrapTag(inputTag, variantTerminationTag);\n\t\treturn validateTerminationString(tagContents) ? tagContents : undefined;\n\t},\n\tserialize(board) {\n\t\tif (!board.gameData.termination) return;\n\t\treturn wrapTag(variantTerminationTag, board.gameData.termination);\n\t}\n});\n\nconst variantGameId = \"GameNr\";\nexport const createGameNumberTag = (): VariantTag<number | undefined> => ({\n\ttag: \"gameNumber\",\n\tcurrentValue: undefined,\n\tverifyTagInParsing(inputTag) {\n\t\treturn tagNamesEqual(inputTag, variantGameId);\n\t},\n\tparseTag(inputTag) {\n\t\tconst id = Number(unwrapTag(inputTag, variantGameId));\n\t\treturn isNaN(id) ? undefined : id;\n\t},\n\tserialize(board) {\n\t\tif (!board.gameData.gameNumber) return;\n\t\treturn wrapTag(variantGameId, board.gameData.gameNumber.toString());\n\t}\n});\n\nexport const createPlayerDataTag = (): VariantTag<Tuple<GamePlayerData, typeof totalPlayers>> => ({\n\ttag: \"playerData\",\n\tcurrentValue: createTupleFromCallback(() => ({}), totalPlayers),\n\tverifyTagInParsing(inputTag) {\n\t\tfor (const color of colors) {\n\t\t\tconst playerName = getPlayerNameFromColor(color);\n\t\t\tif (tagNamesEqual(inputTag, playerName) || tagNamesEqual(inputTag, `${playerName}Elo`)) return true;\n\t\t}\n\n\t\treturn false;\n\t},\n\tparseTag(inputTag) {\n\t\tfor (const color of colors) {\n\t\t\tconst playerName = getPlayerNameFromColor(color);\n\t\t\tconst newCurrentValue: Tuple<GamePlayerData, typeof totalPlayers> = [...this.currentValue];\n\t\t\tif (tagNamesEqual(inputTag, playerName)) {\n\t\t\t\tconst name = unwrapTag(inputTag, playerName);\n\t\t\t\tif (name) newCurrentValue[color] = { ...newCurrentValue[color], name };\n\t\t\t\treturn newCurrentValue;\n\t\t\t} else if (tagNamesEqual(inputTag, `${playerName}Elo`)) {\n\t\t\t\tconst elo = Number(unwrapTag(inputTag, playerName));\n\t\t\t\tif (!isNaN(elo)) newCurrentValue[color] = { ...newCurrentValue[color], elo };\n\t\t\t\treturn newCurrentValue;\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(\"Tag does not match any player data signature\");\n\t},\n\tserialize(board) {\n\t\tconst uniqueResultingTags: string[] = [];\n\t\tfor (const color of colors) {\n\t\t\tconst playerData = board.gameData.players[color];\n\t\t\tif (playerData.elo) {\n\t\t\t\tuniqueResultingTags.push(wrapTag(`${playerNames[color]}Elo`, String(playerData.elo)));\n\t\t\t}\n\t\t\tif (playerData.name) {\n\t\t\t\tuniqueResultingTags.push(wrapTag(`${playerNames[color]}`, String(playerData.name)));\n\t\t\t}\n\t\t}\n\n\t\treturn uniqueResultingTags.join(\"\\n\");\n\t}\n});\n\nconst resultsTag = \"Results\";\nexport const createResultsTag = (): VariantTag<string> => ({\n\ttag: \"results\",\n\tcurrentValue: \"\",\n\tverifyTagInParsing(inputTag) {\n\t\treturn tagNamesEqual(inputTag, resultsTag);\n\t},\n\tparseTag(tagContents) {\n\t\treturn unwrapTag(tagContents, resultsTag);\n\t},\n\tserialize(board) {\n\t\tif (!board.gameData.result) return;\n\t\treturn wrapTag(resultsTag, board.gameData.result);\n\t}\n});\n","import { createBaseParsingTypes, parseVariantRules, VariantRuleParsingTypes } from \"@moveGeneration/VariantRules/VariantRuleSetup\";\nimport type { VariantTag } from \"../TagInterface\";\nimport { tagNamesEqual, unwrapTag, wrapTag } from \"../Utils\";\n\nconst variantRulesTag = \"RuleVariants\";\nexport const createVariantRulesTag = (): VariantTag<VariantRuleParsingTypes> => ({\n\ttag: \"variantRules\",\n\tcurrentValue: createBaseParsingTypes(),\n\tverifyTagInParsing(inputTag) {\n\t\treturn tagNamesEqual(inputTag, variantRulesTag);\n\t},\n\tparseTag(tagContents) {\n\t\treturn parseVariantRules(unwrapTag(tagContents, variantRulesTag));\n\t},\n\tserialize(board) {\n\t\tconst resultingRuleList: string[] = [];\n\t\tfor (const rule of board.variantRules) {\n\t\t\tconst serializedForm = rule.serializeToParsingForm();\n\t\t\tif (serializedForm) {\n\t\t\t\tresultingRuleList.push(serializedForm);\n\t\t\t}\n\t\t}\n\n\t\treturn wrapTag(variantRulesTag, resultingRuleList.join(\" \"));\n\t}\n});\n","import type { Coordinate } from \"@moveGeneration/GameInformation/GameUnits/GameUnits\";\n\nexport function parseSingleCoordinate(coordinate: string): Coordinate | undefined {\n\tif (coordinate.length === 0) return;\n\tconst parsedCoordinate: [number, number] = [14 - Number(coordinate.slice(1)), coordinate.charCodeAt(0) - 97];\n\tif (Number.isNaN(parsedCoordinate[0]) || Number.isNaN(parsedCoordinate[1])) return;\n\tif (parsedCoordinate[0] < 0 || parsedCoordinate[0] > 13 || parsedCoordinate[1] < 0 || parsedCoordinate[1] > 13) return;\n\treturn parsedCoordinate;\n}\n\nexport function parseEnPassantCoordinates(coordinates: string): [Coordinate, Coordinate] | undefined {\n\tif (coordinates.length === 0) return;\n\tconst coordinatesArray = coordinates.split(\":\");\n\treturn [\n\t\t[14 - Number(coordinatesArray[0].slice(1)), coordinatesArray[0].charCodeAt(0) - 97],\n\t\t[14 - Number(coordinatesArray[1].slice(1)), coordinatesArray[1].charCodeAt(0) - 97]\n\t];\n}\n\nexport const wrapTag = (baseTag: string, content: string) => `[${baseTag} \"${content}\"]`;\nexport const tagNamesEqual = (baseTag: string, definedTag: string) => baseTag.toLowerCase().startsWith(`[${definedTag.toLowerCase()} \"`);\nexport const unwrapTag = (baseTag: string, definedTag: string) => baseTag.replace(`[${definedTag} \"`, \"\").slice(0, -1);\n","export function copyClass<T, P extends unknown[]>(instance: T, baseClass: new (...args: P) => T, customProperties = false): T {\n\tconst prototype: unknown = Object.getPrototypeOf(instance);\n\tif (typeof prototype !== \"object\") throw new Error(\"Expected prototype to be an object\");\n\tconst properties: unknown = Object.create(prototype);\n\tif (typeof properties !== \"object\" || properties === null) throw new Error(\"Expected prototype to be an object\");\n\tconst copy: unknown = Object.assign(properties, customProperties ? {} : instance);\n\tif (!(copy instanceof baseClass)) throw new Error(\"Expected prototype to not be overridden\");\n\treturn copy;\n}\n\nexport const verifyObjectType = (v: unknown): v is Record<PropertyKey, unknown> => typeof v === \"object\" && v !== null;\nexport function verifyPropertiesInObject<K extends string>(obj: Record<PropertyKey, unknown>, keys: readonly K[]): obj is Record<K, unknown> {\n\tfor (const key of keys) {\n\t\tif (!Object.prototype.hasOwnProperty.call(obj, key)) return false;\n\t}\n\treturn true;\n}\n","export function formatOrdinalNumber(num: number): string {\n\tconst lastTwoDigits = Number(String(num).slice(-2));\n\tif (lastTwoDigits > 3 && lastTwoDigits < 21) return \"th\";\n\tswitch (lastTwoDigits % 10) {\n\t\tcase 1:\n\t\t\treturn \"st\";\n\t\tcase 2:\n\t\t\treturn \"nd\";\n\t\tcase 3:\n\t\t\treturn \"rd\";\n\t\tdefault:\n\t\t\treturn \"th\";\n\t}\n}\n\nexport function compileEnumeration(list: string[]): string {\n\tif (list.length === 0) return \"\";\n\tif (list.length === 1) return list[0];\n\tlet result = \"\";\n\tfor (let i = 0; i < list.length; i++) {\n\t\tif (i === list.length - 2) {\n\t\t\tresult += ` ${list[i]} or `;\n\t\t} else if (i === list.length - 1) {\n\t\t\tresult += list[i];\n\t\t} else {\n\t\t\tresult += list[i] + \", \";\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function prefixWithIndefiniteArticle(str: string): string {\n\tconst vowels = /[AEUIO]/i;\n\treturn vowels.test(str.charAt(0)) ? \"an \" + str : \"a \" + str;\n}\n\nexport function convertSecondsToFlexibleHoursMinutesSeconds(seconds: number): string {\n\tif (seconds >= 3600) {\n\t\treturn new Date(seconds * 1000).toISOString().substring(11, 16);\n\t} else {\n\t\treturn new Date(seconds * 1000).toISOString().substring(14, 19);\n\t}\n}\n\nexport function convertCamelCaseToKebabCase(baseString: string): string {\n\treturn baseString.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n}\n\nexport function hashString(string: string): number {\n\tlet hash = 0;\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst char = string.charCodeAt(i);\n\t\thash = (hash << 5) - hash + char;\n\t\thash |= 0;\n\t}\n\n\treturn hash;\n}\n","var map = {\n\t\"./BoardDecorators/AllowPassing.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/AllowPassing.ts\",\n\t\"./BoardDecorators/AlternativeTeams.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/AlternativeTeams.ts\",\n\t\"./BoardDecorators/BarePieceRule.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/BarePieceRule.ts\",\n\t\"./BoardDecorators/Blindfold.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/Blindfold.ts\",\n\t\"./BoardDecorators/CaptureTheKing.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/CaptureTheKing.ts\",\n\t\"./BoardDecorators/Chess960.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/Chess960.ts\",\n\t\"./BoardDecorators/Crazyhouse.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/Crazyhouse.ts\",\n\t\"./BoardDecorators/DuckChess.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/DuckChess.ts\",\n\t\"./BoardDecorators/FogOfWar.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/FogOfWar.ts\",\n\t\"./BoardDecorators/ForcedCapture.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/ForcedCapture.ts\",\n\t\"./BoardDecorators/GameMetadataRules.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/GameMetadataRules.ts\",\n\t\"./BoardDecorators/Ghostboard.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/Ghostboard.ts\",\n\t\"./BoardDecorators/ParadigmChess30.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/ParadigmChess30.ts\",\n\t\"./BoardDecorators/PiecesFaceCenter.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/PiecesFaceCenter.ts\",\n\t\"./BoardDecorators/SeirawanSetup.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/SeirawanSetup.ts\",\n\t\"./BoardDecorators/SelfCheck.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/SelfCheck.ts\",\n\t\"./BoardDecorators/SetupChess.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/SetupChess.ts\",\n\t\"./BoardDecorators/Taboo.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardDecorators/Taboo.ts\",\n\t\"./BoardVariantModules/EngineMoveGeneration/Algorithms/ComfuterEvaluation.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardVariantModules/EngineMoveGeneration/Algorithms/ComfuterEvaluation.ts\",\n\t\"./BoardVariantModules/EngineMoveGeneration/Algorithms/ComfuterEvaluationExtensions.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardVariantModules/EngineMoveGeneration/Algorithms/ComfuterEvaluationExtensions.ts\",\n\t\"./BoardVariantModules/EngineMoveGeneration/Algorithms/MixedAlgorithms.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardVariantModules/EngineMoveGeneration/Algorithms/MixedAlgorithms.ts\",\n\t\"./BoardVariantModules/EngineMoveGeneration/Algorithms/RandomEvaluation.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardVariantModules/EngineMoveGeneration/Algorithms/RandomEvaluation.ts\",\n\t\"./BoardVariantModules/EngineMoveGeneration/Algorithms/RandomEvaluationExtensions.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardVariantModules/EngineMoveGeneration/Algorithms/RandomEvaluationExtensions.ts\",\n\t\"./BoardVariantModules/EngineMoveGeneration/BotInterface.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardVariantModules/EngineMoveGeneration/BotInterface.ts\",\n\t\"./BoardVariantModules/InsufficientMaterial/InsufficientMaterialChecker.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardVariantModules/InsufficientMaterial/InsufficientMaterialChecker.ts\",\n\t\"./BoardVariantModules/InsufficientMaterial/InsufficientMaterialConstructor.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardVariantModules/InsufficientMaterial/InsufficientMaterialConstructor.ts\",\n\t\"./BoardVariantModules/InsufficientMaterial/PieceMedianCounter.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardVariantModules/InsufficientMaterial/PieceMedianCounter.ts\",\n\t\"./BoardVariantModules/InsufficientMaterial/StateSerializer.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardVariantModules/InsufficientMaterial/StateSerializer.ts\",\n\t\"./BoardVariantModules/InsufficientMaterial/Utilities.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/BoardVariantModules/InsufficientMaterial/Utilities.ts\",\n\t\"./FENDataDecorators/Atomic.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/FENDataDecorators/Atomic.ts\",\n\t\"./FENDataDecorators/DeadKingWalking.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/FENDataDecorators/DeadKingWalking.ts\",\n\t\"./FENDataDecorators/EnPassant.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/FENDataDecorators/EnPassant.ts\",\n\t\"./FENDataDecorators/FatalCapture.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/FENDataDecorators/FatalCapture.ts\",\n\t\"./FENDataDecorators/FiftyMoveRule.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/FENDataDecorators/FiftyMoveRule.ts\",\n\t\"./FENDataDecorators/Giveaway.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/FENDataDecorators/Giveaway.ts\",\n\t\"./FENDataDecorators/KingOfTheHill.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/FENDataDecorators/KingOfTheHill.ts\",\n\t\"./FENDataDecorators/NCheck.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/FENDataDecorators/NCheck.ts\",\n\t\"./FENDataDecorators/OppositeMultiplier.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/FENDataDecorators/OppositeMultiplier.ts\",\n\t\"./FENDataDecorators/OppositeSideCastling.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/FENDataDecorators/OppositeSideCastling.ts\",\n\t\"./FENDataDecorators/PiecesGoToBanks.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/FENDataDecorators/PiecesGoToBanks.ts\",\n\t\"./FENDataDecorators/PlayForMate.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/FENDataDecorators/PlayForMate.ts\",\n\t\"./FENDataDecorators/PointsForMate.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/FENDataDecorators/PointsForMate.ts\",\n\t\"./FENDataDecorators/StalemateOptions.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/FENDataDecorators/StalemateOptions.ts\",\n\t\"./FENDataDecorators/Takeover.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/FENDataDecorators/Takeover.ts\",\n\t\"./FENDataDecorators/ThreefoldRepetition.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/FENDataDecorators/ThreefoldRepetition.ts\",\n\t\"./PieceControlDecorators/AnyCapture.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/PieceControlDecorators/AnyCapture.ts\",\n\t\"./PieceControlDecorators/PromoteTo.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/PieceControlDecorators/PromoteTo.ts\",\n\t\"./PieceControlDecorators/PromotionRank.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/PieceControlDecorators/PromotionRank.ts\",\n\t\"./PieceControlDecorators/RoyalsCannotCapture.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/PieceControlDecorators/RoyalsCannotCapture.ts\",\n\t\"./PieceControlDecorators/Sideways.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/PieceControlDecorators/Sideways.ts\",\n\t\"./PieceControlDecorators/Stonewall.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/PieceControlDecorators/Stonewall.ts\",\n\t\"./PieceControlDecorators/Torpedo.ts\": \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions/PieceControlDecorators/Torpedo.ts\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./src/main/client/ts/logic/movegen/VariantRules/VariantRuleDefinitions sync recursive \\\\.ts$\";"],"names":["chessGlyphIndex","doubleBackwardArrow","downloadIcon","endBackwardArrow","forwardDoubleArrow","userSearch","userConnection","notAllowed","clock","extraInformation","authorshipNotice","draw","backwardArrow","userInformation","smallBackwardArrow","leaderBoard","equal","downwardArrow","upperArrow","endForwardArrow","urlAttached","crossMark","rightOutwardsArrow","hashtag","newspaper","twitter","checkMark","camera","alternativeLine","play","pause","reload","world","points","medal","soundOff","circleCrossMark","steadyEvaluation","facebook","circle","soundOn","plus","openEye","copyToClipboard","wavingFlag","editText","fullArrowLeft","fullArrowRight","smallArrowForward","goBackArrow","youtube","calendar","user","chat","lock","box","circularArrows","lightBulb","briefcase","board","knightArrows","newMessage","drawing","twoUsers","twoUsers2","openingBook","disclaimer","ringingBell","list","rookAndPawn","hamburgerList","mail","userExtraInformation","house","sheetAndPencil","openMail","chatBox","fullArrowDown","smallArrowUp","fullArrowUp","arrowIntoBox","key","file","books","sharing","userNotAllowed","userCrossMark","questionMark","boardWithCircle","googlePlus","reset","reddit","openBook","userPlus","cog","pin","suitcase","mark","cake","openLink","bishopStroke","linkedin","knight","threeCheck","chess960rapid","connection","quotes","exit","crossedBinoculars","leaderBoardReversed","bishopFull","printer","verticalEvaluation","t","pawn","twoPawns","unrated","elite","bug","cpu","forwardArrowCircle","squareCrossMark","android","twoUsersPlus","crossedArrows","king","kingFull","bishop","twoFullRooks","kingStrokes","fullKnight2","chess960","leaderBoardAscent","crazyhouse","checklist","target","pawnAndHalfRook","halfRookAndPawn","knightStrokes","pawnLogo","queenFull","exchange","userNext","userPrevious","compass","pawnStrokes","rookStrokes","screenDisplays","kingOfTheHill","antichess","queen","threePawns","queenStrokes","rookSmallStrokes","rookSmall","bishopPair","rookPair","knightPair","twoUsersSearch","shield","kingSmall","bishopSmall","knightSmall","userNoConnection","userStream","queenAlternative","pawnAlternative","threePawnsAlternative","twoPawnsAlternative","rookAlternative","knightPairFull","bishopPairFull","addBoard","diamond","scales","pawn3d","userShieldPlus","gold","ellipsis","analysis","archive","arrowBottomIntoBox","disclaimerEditor","sendTrophy","addCheckMark","checkMarkSquare","squareStaircase","arrowsUpBottom","star","verticalDash","shieldCheckMark","top3","addImage","chessStream","removeTrophy","importantMail","arrowLeave","donut","computerAnalysis","checkMarkSquareSmall","diagonalExpandArrows","leaderBoardHorizontal","checkMarkAsCircle","arrowFromBox","boxArrowBottom","boxArrowLeft","boxArrowRight","fourArrowsCentral","clashingSwords","ratingOffset","smilingFace","fileCabinet","editClock","userShield","homeFilled","paymentCard","fourArrowsOutwards","puzzle","addPhoto","arrowWallLeft","arrowWallRight","boardConfiguration","fourBlocks","sandglass","crown","cloudUpload","webChatBox","puzzleRush","knightHops","instagram","squarePlus","squareMinus","squareEqual","square","fireFull","pawnRecycle","noEngine","google","fourPlayer","pieceMeal","arrowBoldUp","arrowBoldDown","blunder","mistake","videoChatBox","bonesCrossed","displays","arrowEnter","newspaperHalf","bookmark","puzzleLarge","movePawn","pawn3dLarge","sun","rapid","blitz","bullet","mortarboard","laptop","resetWidth","pawnConnection","copyToClipboardFromText","fire","crownSmall","orderedList","chess960daily","arrowWallBottom","pawn3dBold","plusInCircle","lightCorner","darkCorner","steepCurve","heart","checkMarkThin","connectionDiagonal","diadem","plusMinus","recycling","metrics","top1","engineCheckMark","wikipedia","tournament","houseConfiguration","computerHindsight","computerCheckMark","lightDarkTheme","whistlingBell","crossMarkCompact","eyeCrossed","fide","favorite","tShirtPawn","addSmile","library","discord","analysisCheckMark","versusComputer","dollarSign","bestMove","gift","evaluationLinear","evaluationThrowaway","evaluationEqual","evaluationDead","evaluationSharp","evaluationPerplexing","evaluationSmooth","libraryAdd","selfPartner","fourPlayerConfiguration","listDownFlow","puzzleBattle","hyperbullet","gameLink","gameStudy","evaluationCrazy","engine","crossedSwordsInCircle","hallmark","like","boardTwoPlayers","fourPlayerChess","variants","cloudUploadCompact","clockIncrement","videoCamera","inaccuracy","bot","torpedo","vk","blindfold","customSettings","captureAnything","pawnSideways","noCastling","fogOfWar","automate","atomic","pawnCounterfeit","elephant","fullBlock","fourFullBlocks","nineFullBlocks","nineFullBlocksCrossed","hamburgerMenuCompact","listCompact","geoMark","crossedDonut","handshake","verified","sandglassRunningOut","rapidLowOnTime","tourneyBanner","noCloud","fork","donutTarget","newCalendarDay","cornerInfiltration","hastTagCompact","chatterbox","circleStar","targetPractice","pawnPromotion","flagProgression","pawnDoubleAttack","kingAndRook","specialMedal","pawnBanner","userSquare","verifiedCandidate","saveFile","duck","addBanner","qrCode","noAnalysis","dualPawn","gameEscape","tournamentCup","noExchanges","tikTok","pieChart","search","binoculars","largeBoard","exclamation","tournamentCupIcon","trashBin","arrowForwardBoldCompact","giftDiamond","filter","noChat","newSheet","xml","blockUser","facebookLike","facebookDislike","apple","phone","throwOnNever","verifyTupleType","hexColorRegex","createHexColor","color","test","TypeError","verifyHexColor","validateHexColor","_unused","createRGBColor","concat","wrapRGBColor","join","verifyRGBColor","Array","isArray","validateRGBColor","every","c","forEach","_unused2","createHSLColor","hue","saturation","lightness","wrapHSLColor","verifyHSLColor","validateHSLColor","verifyNumberRecord","obj","Object","prototype","hasOwnProperty","call","_unused3","wrapIndexedColor","validateIndexedColor","Board","totalPlayers","PieceString","verifyStandardMove","verifyDroppingMove","verifyRequiredMove","decorateClassWithVariants","compareArrays","serializeBoard","assertNonUndefined","createTuple","stringifyCoordinate","changeGameTermination","validateMoveTree","assertValidMove","InsufficientMaterialConstructor","InsufficientMaterialChecker","StateSerializer","deserializeInsufficientMaterialState","requiredDispatches","initialDispatches","dispatchSyncRecord","withWorkerResult","_","propertyKey","descriptor","originalMethod","value","_len","arguments","length","args","_key","postMessage","apply","workerDataSync","type","gameObjectPropertySync","push","RequestManager","_dec","_dec2","_dec3","_dec4","_dec5","_dec6","_dec7","_dec8","_dec9","_dec10","_dec11","_dec12","_dec13","_dec14","_dec15","_dec16","_dec17","_dec18","_dec19","_dec20","_dec21","_dec22","_dec23","_dec24","_dec25","_dec26","_dec27","_dec28","_dec29","_dec30","_dec31","_dec32","_class","constructor","_defineProperty","Map","stripPieceStrings","object","JSON","parse","stringify","generateInitiallyAliveColors","data","fenOptions","tag","map","d","reduce","p","n","i","generateCurrentMoves","internalMoves","getAllowedInternalMoves","legalMoves","_iterator","_createForOfIteratorHelper","getPlayerPieces","sideToMove","_step","s","done","piece","set","getLegalMoves","err","e","f","construct","_variantName","pgn4","variantRules","boardDecorators","insufficientMaterialModule","state","insufficientMaterialChecker","moves","currentMove","serializeInsufficientMaterialState","generateInsufficientMaterialState","constructWithGeneratedData","insufficientMaterialState","getFENSettings","royalCount","isCustomRoyals","_iterator2","_step2","row","_iterator3","_step3","isPiece","createSerializedState","getInitiallyAliveColors","initiallyAliveColors","getMoveTree","traverse","fullMoveCounter","undefined","results","_iterator4","_step4","moveWrapper","resultingWrapper","alternativeLines","comment","path","slice","cachedNames","_objectSpread","metadata","currentSideToMove","playerClock","highlightedArrows","highlightedSquares","currentFullMove","_iterator5","_step5","loadSnapshotByPath","snapshot","preliminarySnapshot","getBoardSnapshot","getMove","loadSnapshot","boardSnapshot","verifyNextChainedMovesAreDeleted","move","convertStrippedMoveToNormal","newMove","_iterator6","_step6","moveComponent","nextChainedMoves","Error","_moveComponent$promot","promotion","fromObjectToClass","makeMove","passedMove","augmentMoveWithMetadata","makeMoveFunction","serializeBoardToPGN","getDroppingMoves","pieceString","gameOver","j","_this$legalMoves$get","get","getInternalMoves","getVariantData","variantData","getBoard","r","toObject","getGameData","newGameData","gameData","date","toUTCString","getCurrentMove","getVariantRules","resultingRules","_iterator7","_step7","variantRule","getPublicProperties","getVariantType","gameType","deleteMove","playPreferredBotMove","getRealPlayers","_iterator8","_step8","_this$legalMoves$get2","preGeneratedAttacks","pieceDrops","algorithm","getDefaultZombieAlgorithm","evaluate","pickPreferredMove","changeFogPerspective","fogOfWarPerspective","newPerspective","nextTurn","getSquareVisibility","squareVisibility","_applyDecoratedDescriptor","getOwnPropertyDescriptor","requestManager","self","onmessage","requestName","method","parameters","createTupleFromCallback","initializeBoardSquares","createMoveTree","createBaseMoveWrapper","InternalMoveSignature","SpecialMove","FENData","boardDimension","colors","nonPlayablePieces","createPieceFromData","deadColorIndex","pawnPieceString","wallPieceString","PieceControlBuilder","initPieceControlDeclarations","AttackType","pieceControlConfigSettings","copyVariantRules","validateVariantRules","createGameTypeSettings","createComplexMoveLegalityTracker","createBasePreGeneratedAttacks","compareCoordinates","copyClass","parsePGN4","baseImmunes","initDecoratorSettings","__baseClass","parsingResults","fenData","injectBoard","fenDataDecorators","variantRuleData","isTwoPlayer","initPieceControls","pieceSet","createSnapshot","pregenerateAttacks","pieces","size","builder","setFENData","setVariantRules","pieceControlDecorators","pieceControlConfigurator","createPieceControlWrap","controls","a","isComplexSetup","assign","runComplexLegalityEvaluationChecks","createClone","targetObject","presumedPieceLetters","Set","letter","add","isKingInCheck","baseColor","fenRoyal","royal","coordinates","slidingPieces","hoppingPieces","playerPieces","isEmpty","getCheckmatesAndStalemates","dead","kingChecks","playerArmy","kingCaptures","checkmates","stalemates","checks","hasComplexRules","moveGenerationSettings","isComplex","hasComplexPieces","getCurrentChecks","resigned","playerRoyals","attackingCoordinates","pieceMovements","_step4$value","_slicedToArray","startingCoordinate","attackList","attack","ignoreNextMoves","returnValues","pregeneratedAttacks","affectOptions","ignoreCheckmateChecks","ignoreNextTurn","setNewMove","moveData","fenDataString","constructPreliminaryHashString","TeamsCheckmate","Stalemate","exclusiveSideToMoveGeneration","army","armyColor","coordinate","controlBuilder","setColor","setCoordinates","setBoard","setting","resultingMoves","control","setBaseImmunePieces","getBaseColors","constructPieceControl","getPseudoLegalMoves","isJumping","attacks","rayGenJumpingAttacks","_iterator9","_step9","hoppingPieceLines","l","attackingColors","isSliding","rayGenSlidingAttacks","_iterator10","_step10","_iterator12","_step12","_iterator13","_step13","subAttack","slidingPiecesLines","m","coordinateArray","rayGen","RayTraceLimited","_iterator11","_step11","_iterator14","_step14","isRoyalOnLine","resultingAttack","_iterator15","_step15","_royal$_color","slidingPiecesRayTracing","wall","isSetupComplex","isComplexEvaluation","isTheMoveLegal","isSeirawanDrop","royals","_moveData$startCoordi","startCoordinates","pieceI","pieceJ","_moveData$endCoordina","endCoordinates","attackI","attackJ","moveArray","_this$makeMove","_ref","_ref2","royalI","royalJ","isRoyalMove","attackers","targetSafety","legalitySettings","canKingCapture","_iterator16","_step16","kingCaptureColor","royalDefendedSquare","isFFA","_iterator17","_step17","_step17$value","attackingPiece","attackLine","isPieceUnderAttack","isRoyalUnderAttack","isTheTargetSquarePinListed","_iterator21","_step21","_step21$value","attackedX","attackedY","Boolean","_iterator18","_step18","_step18$value","attackCoordinates","_iterator19","_step19","_step19$value","isTheTargetSquareBlocked","_iterator20","_step20","_step20$value","getCastlingMoves","specialMoves","isKingsideCastlingAvailable","getKingsideCastlingEndCoordinate","specialType","CastlingKingside","isQueensideCastlingAvailable","getQueensideCastlingEndCoordinate","CastlingQueenside","getEnPassantMoves","pieceLetter","isPawn","enPassantCaptures","getAvailableEnPassantCaptures","pawnAttacks","_iterator22","_step22","_iterator23","_step23","enP","EnPassant","isIrreversible","irreversible","getSpecialMoves","_this$board$i","pseudoLegalMoves","generatedMove","split","capturedPieces","getCapturedPieces","isKingCapture","find","_piece","_sideToMove","currentMoves","DrawByAgreement","currentSnapshot","Resign","maximum","Math","max","pointIndexes","ClaimWin","Timeout","VariantType","verifyNumericColor","DisplaySettings","Highlighted","Fogged","Ghosted","Blindfolded","PieceFacesCenter","baseTeams","unstringifyCoordinate","result","v","Number","isNaN","FFA","teamSettings","firstTeamColors","secondTeamColors","Solo","isSameTeam","colorA","colorB","getTeammateColor","teammateIndex","b","indexOf","variantRuleCache","coordinate1","coordinate2","compareMoves","verifyInternalMove","validateBoardMove","startingMoves","firstMove","specialMoveSettings","hasEnPassant","duckChess","_loop","legalMove","_ret","isVerticalPlacement","createDefaultArmyDeathSettings","createDefaultFENEffectSettings","getNeighboringSideToMove","getPlayerNameFromColor","verifyDrawingTermination","verifyWinningTermination","emptyPieceString","FENOptions","defaultPointsForMate","plyCount","privateGameOver","generateCastling","newFENData","fenOptionsSnapshot","isDead","getCastlingPieceEndCoordinates","getKingsideCastlingTandemPiece","getQueensideCastlingTandemPiece","processStandardMove","_promotion$","startI","startJ","endI","endJ","endPiece","_this$getCastlingPiec","_this$getCastlingPiec2","kingsidePiece","queensidePiece","secondKPiece","_this$fenOptions$getK","getKingsideCastlingPieceEndCoordinate","_this$fenOptions$getK2","kI","kJ","secondQPiece","_this$fenOptions$getQ","getQueensideCastlingPieceEndCoordinate","_this$fenOptions$getQ2","qI","qJ","console","error","String","castleKingside","castleQueenside","setTag","royalPiece","spreadPointsBetweenPlayersEvenly","realPlayers","individualPoints","ceil","obtainPointsForMate","assignPoints","branchBetweenResignationMoves","playerName","toUpperCase","processInternalMove","internalMove","_this$board$insuffici","insufficientMaterial","checkCurrentState","assignGeneralTermination","turnPiecesDead","excludeRoyals","doNotSetDead","deadPlayers","isResignationOver","alivePlayer","findIndex","countTotalPointsOnBoard","Pass","getCurrentResult","processDroppingMove","bank","areBanksEnabled","setupComplete","playerBank","pieceStringReference","keys","safeReference","bankPieceCount","delete","settings","onlyPawns","getKingCaptures","royalCoordinate","processPointsForChecks","currentChecks","updatedChecks","playerChecks","has","checkedPlayers","moveStalemates","endSquare","arr","totalMateSum","boardAlternations","pointDistribution","checkmatePoints","pieceCapturingPoints","getPointsForPiece","isOver","_this$board$insuffici2","insufficientPieces","insufficient","player","previousTurn","singlesPoints","zombieImmune","resultingPoints","firstAlivePlayer","maximumIndex","generalTermination","getHorizontalPlacementModulus","getVerticalPlacementModulus","botAlgorithms","ZombieType","createFENOptionsTags","createFENOptionsTagsSnapshot","pieceCoordinates","pieceEndCoordinates","checkSquares","loadSerializedState","newTags","tagsSnapshot","tags","loadTagSnapshot","verifyKeyTag","newOptions","serializedState","fenTag","_this","_this$tag","_this$tag2","dimensionRY","dimensionBG","dimensions","royalRanks","royalCoordinates","kingsideCastlePieceCoordinate","queensideCastlePieceCoordinate","boardSquares","royalCoordinateI","royalRanksI","condition","kArr","castlingData","castlingQueensideData","castlingKingsideData","qArr","isCastlingAvailable","squares","checkSquare","coordinateA","coordinateB","getCastlingEndCoordinate","_this$tag$player","enPassant","F_Checker","convertCoordinateToPGN4","createPieceFromString","verifyPieceLetter","verifyZombieType","PGN4_SYNTAX","parseEnPassantCoordinates","parseSingleCoordinate","verifyObjectType","verifyParameterType","param","createBooleanTupleTag","defaultValue","isStatic","resultingObject","serialize","tuple","defaultPawnBaseRank","createPawnBaseRankTag","createEnPassantTag","input","_parseEnPassantCoordi","some","defaultCastleWith","createCastleWithTag","defaultBoxOffset","createBoxOffsetTag","createBooleanTag","defaultDimension","createDimensionTag","baseInput","reverse","defaultZombies","Rando","createZombiesTag","newZombies","zombieType","createRoyalTag","_parseSingleCoordinat","createLivesTag","createBankTag","defaultBanks","pieceDefinition","_pieceDefinition$spli","_pieceDefinition$spli2","_pieceDefinition$spli3","count","charAt","resultingStrings","entries","_ref3","_ref4","pieceStringObject","createPromotedFromTag","promotedFromMap","parsedCoordinate","promotedFromStrings","_step5$value","newMap","_step6$value","clear","_step7$value","createSetupPointsTag","createSeirawanDropsTag","seirawanDropsArray","COORDINATE_REGEX","coord","values","Tags","verifyDynamicFENOptionKey","verifyDynamicTag","pawnBaseRank","boxOffset","wb","dim","noCorners","castleWith","lives","promotedFrom","setupPoints","seirawanDrops","resultingTags","duckLetter","emptyLetter","pawnPieceLetter","wallPieceLetter","colorEnum","stringColorEnum","comparePieceStrings","pieceString1","pieceString2","_color","comparePieceStringObjects","isWall","getStringifiedColor","verifyColorEnum","testEmptyPieceString","testWallPieceString","testActivePieceString","testDuckPieceString","duckPieceString","convertCoordinateToPGN4Array","generateCastlingString","extractPiece","movingPiece","obtainAmbiguousOrthogonality","moveMetadata","_parameters$snapshot","isCapture","_moveMetadata$movingP","registeredPieces","_step$value","movements","boardPiece","ambiguousRank","c2","ambiguousFile","extractPromotion","extractChecksAndCheckmates","repeat","shortenedMoveNotationStringify","dimension","_moveWrapper$metadata","resultingString","isFirstCapturingMoveSet","_obtainAmbiguousOrtho","_obtainAmbiguousOrtho2","annotation","fullMoveNotationStringify","firstStandardMoveCaptureSet","moveNotation","fullMoveNotation","shortenedMoveNotation","getMoveFromPathAndTree","findLastIndex","alterCurrentPath","current","indexOfMinus","lastNumber","popped","pop","verifyValidMove","baseSnapshot","snapshots","WeakMap","boardHashes","startingSnapshot","hash","obtainMatchingAlternativeLine","baseMoveWrapper","newMoveWrapper","alternativeFirstMove","stripEmptyAlternativeLines","splice","stripDeletedMoveHashes","boardHash","currentLine","line","addBoardSnapshot","hasAdditionalPath","assignMoveWrapperKey","items","finalIndex","newCurrentMove","getHash","preliminaryHashString","totalCount","stringifyMove","standardMove","postMoveResults","deadColors","lastCurrentMoves","lastCurrent","alternativeLineContainer","boardObject","serializedForm","ps","verifyMoveWrapperProperties","move1","move2","createDummyMoveMetadata","requiredSettings","wrapper","verifyInternalMoveArray","verifyDroppingMoveArray","verifyStandardMoveArray","_movePath$shift","movePath","currentSelection","shift","currentIndex","index","getLatestChainedMoves","clonedBoard","currentTimeOnClocks","timeControl","baseTime","previousSideToMove","validationResult","firstStandardMoveSet","termination","Teams","currentResults","PieceControl","sliding","jumping","rayGenCache","hooks","useTrajectory","usePerspective","usePawnLogic","useHopping","baseRankActive","immunePieces","configure","configuration","_configuration$baseRa","_configuration$coordi","baseRankCalc","baseRank","isRayTrace","attackType","RayTrace","modifyDisplacements","baseDisplacements","pushMove","isRayGen","promotionRanks","promotionPieces","_settings$irreversibl","_settings$irreversibl2","generateSlidingAttack","_settings$limit","_settings$special","_this$hooks$usePerspe","_settings$displacemen","displacement","displacementI","displacementJ","limit","Infinity","special","Normal","rayTraceLimit","_this$modifyDisplacem","_this$modifyDisplacem2","iLength","jLength","getMovePossibility","generateJumpAttack","_settings$special2","_this$hooks$usePerspe2","_settings$displacemen2","squareBlockingIndex","_this$modifyDisplacem3","_this$modifyDisplacem4","isTestPassed","_this$hooks$usePerspe3","trajectory","trajectoryX","trajectoryY","_this$modifyDisplacem5","_this$modifyDisplacem6","_configuration$displa","pushTo","RayGen","AttackOnly","MoveOnly","getPossibleCells","trace","slidingLines","PieceControlConfigurator","_control","_isConfigured","x","y","immune","_generalConfig","rules","information","decoratedControl","createPieceDeclaration","dameLetter","defaultPieces","grasshopperPieceLetter","orthogonalMoves","diagonalMoves","kingDirections","camelHops","dabbabaHops","alfilHops","baseClassRef","teamsPoints","botFFAValue","botTeamsValue","rook","isColorBound","naming","name","shortName","toLowerCase","description","stoneGeneralControl","soldierControl","xiangqiHorseControl","verifyFunctionType","importAll","verifyHandlerProperty","handler","verifyPrototypeProperty","superClass","VariantRule","initVariantRule","rv","variantRuleList","initializeBaseHandler","decorator","initializeWrappingHandler","wrappingDecorators","injectIntoBaseClass","callback","bind","callHandler","decoratorMethod","decoratorType","getDecoratorType","prototypeMethod","getInsufficientMaterialData","isPartiallyDisabled","isDisabled","objectPrototype","Reflect","ownKeys","_Reflect$getPrototype","getPrototypeOf","baseClass","classReference","decoratorProperties","methods","lastInheritedMethods","basePrototype","verifyKeyInDecoratorProperties","k","_basePrototype","verifyOwnProperty","getOwnPropertyNames","property","localProperty","defineProperty","enumerable","configurable","_loop2","variantRuleChain","variantDecorator","variant","variantFunc","writable","require","context","variantRuleColors","AllowPassing","parameterValue","minor","displayIcon","matchesPGNDeclaration","match","serializeToParsingForm","variantDataRules","giveaway","passingMoves","AlternativeTeams","teammate","rbTeams","teamOne","teamTwo","autogenous","matchArray","getParametrizedOptions","_decorator$initDecora","BarePieceRule","_this$decorator","Blindfold","visual","CaptureTheKing","taboo","Chess960","createBaseChess960mappings","colorBoundPieces","supermajorPieces","minorPieces","edgePieces","positionID","startingPosition","regExp","newID","nr","rank","chess960ranges","legacy","legacy2PThreshold","legacy2PRank","legacy2PTakeaway","legacy4Prank","pieceArrays","ranks","walls","intersections","pieceMasks","includes","c960range","calcNr","positions","generatePositionIndexes","colorBoundIndexes","floor","sort","supermajorIndex","minorPieceIndexes","minorPieceCache","position","fill","edgeSet","royalSet","colorDelta","majorDelta","_i","_intersections","intersection","calcTempNr","cycles","twins","royalPieces","royalOnCorrectRank","replaceRow","supermajorOverRoyal","mI","from","FiftyMoveRule","Crazyhouse","extending","resultingMoveDrops","isRY","pawnPromotionRank","promotionRank","moveDrop","_this$decorator$makeM","DuckChess","latestMoves","ducks","emptySquares","droppingChainedMoves","duckChainedMoves","emptySquare","FogOfWar","widespread","currentPlayerMoves","_arr","drop","ForcedCapture","hasCaptures","isCapturing","shuffleArray","Anonymous","players","elo","semiAnonTag","SemiAnonymous","_decorator$initDecora2","spTag","SelfPartner","fenTags","_decorator$initDecora3","firstTeamPlayer","secondTeamPlayer","Ghostboard","ParadigmChess30","positionId","getInformation","paradigmRanges","twoPlayerRank","twoPlayerAdjustment","_royalPieces$player","moveCoordinate","iter","_pieceCoordinates$i$s","rp","permutations","PiecesFaceCenter","SeirawanSetup","setupChess","_this$decorator$data","disabledIndex","returnValue","_this$decorator$data2","stringifiedCoordinate","validateWithDrops","continuations","SelfCheck","nCheck","captureTheKing","baseChecks","newCoordinates","_step2$value","SetupChess","phased","options","areSetupPointsUnset","bankEnabled","wereBanksEnabled","files","pawnRanks","permutationCoordinates","flatMap","pawnPermutationCoordinates","disabled","getCoordinateList","coordinateList","pointValue","pointsLeft","anyDrop","Taboo","initialDead","newDead","createBotAlgorithm","randomlyPickNextChainedMoves","onlyUnique","stringifyKey","getPieceInFront","createComfuterAlgorithm","boardAccessors","augmentBoardAccessorsFromBoard","remainingReal","remaining","coverage","hangingCache","coverageCache","pieceValueCache","initializeBoardAccessorsFromBoard","isTeams","defaultSideToMove","getDistanceFromPromotion","abs","getDistanceFromKing","inspectCoverage","_boardAccessors","pc","destinations","dest","getCoverage","_boardAccessors2","defenders","cvg","pieceC","pieceColor","cache","getPieceValue","_boardAccessors3","controlSetting","promotionDistance","inFront","_getCoverage","isRoyal","getCoordinationEval","_boardAccessors4","_getCoverage2","firstPlayerMovesBefore","p1","p2","_boardAccessors5","next","canRespondDirectlyToThreat","_boardAccessors6","attackingPlayers","hanging","pieceValue","_boardAccessors7","_getCoverage3","attackerValue","min","attackedFromLeft","threatened","pawnDefends","h","underDefended","getMobilityEval","_boardAccessors8","_board$preGeneratedAt","_board$preGeneratedAt2","blockedBy","bSqr","getDistFromHill","getMatesEval","_boardAccessors9","_board$getCheckmatesA","checksLength","prev","barePieceRule","getMaterialEval","_boardAccessors10","myMaterial","oppMaterial","pcVal","getPinsEval","_boardAccessors11","pinnedEval","discovsEval","discovered","pins","_royalPiece","royalX","royalY","pieceX","pieceY","_iterator24","_step24","_step24$value","attackPiece","_iterator25","_step25","_step25$value","_pins","sqrt","_i2","_discovered","getKingSafetyEval","_boardAccessors12","kingEval","checkableEval","exposedEval","baseReferences","_iterator26","_step26","_step26$value","_iterator27","_step27","_step27$value","_iterator30","_step30","squareAccessDefinitions","isChecked","checkableSq","_iterator28","_step28","_getCoverage4","accessKey","ki","kj","_i3","_x2","_iterator29","_step29","_boardSquares$_i","_boardSquares$_i2","_getCoverage5","isZombieEatZombie","_boardAccessors13","targetPiece","getEval","totalEval","_boardAccessors14","isKingsideCastle","isQueensideCastle","_getMaterialEval","hillEval","_getCoverage6","partner","isCastling","fiftyMoveRule","stringifiedType","Futer","moveValues","_iterator31","_step31","evaluations","sorted","best","_iterator32","_step32","_step32$value","evaluated","pick","random","comfuterAlgorithm","createComfuterBasedAlgorithm","comfuterCheckerAlgorithm","baseEvaluations","evaluation","_board$makeMove","comfuterMuncherAlgorithm","F_Muncher","comfuterPusherAlgorithm","F_Pusher","_step3$value","patzerAlgorithm","Patzer","defaultBoard","randoBotAlgorithm","RanterAlgorithm","Ranter","resultingMove","isForcedContinuation","copyOfMoves","zombieEatZombieMoves","otherMoves","startingEvaluation","createRandomBasedAlgorithm","checkerAlgorithm","Checker","muncherAlgorithm","Muncher","pusherAlgorithm","Pusher","stalemateOptionsValues","disabledRank","_variantRule$getInsuf","noRoyalsToMate","hasPromotion","getRoyalPieceMedians","_this$state","royalMoveMedians","extraWalls","accumulator","median","minimumMedian","stalemateOptions","stalemateLoses","obtainPieceSymbolFromCoordinate","_this$state2","optimizedPieces","pieceSquareMedians","backwardsPieceRegistry","availableSymbols","selectedSymbol","NON_INDEXED_PIECE_SYMBOL","candidates","getOwnPropertySymbols","candidateIndex","symbol","getPartialIntersection","royalColor","_this$obtainPieceSymb","symbolsLength","enemyCoordinate","_this$obtainPieceSymb2","enemySymbol","resultingInsufficientPieces","royalPieceMedians","_this$state3","oppositionMedians","squaresPlayerCanOutrange","royalSquares","currentColorBounds","royalsCannotCapture","_this$obtainPieceSymb3","medians","_pieceSquareMedians$p","subSymbol","_pieceSquareMedians$p2","sum","binaryMasks","findMinimumOnBoardSquares","oneBitMask","optimizePieceSet","bitCount","emptyBoard","initializeRoyals","possibleRoyals","royalPieceSets","recurseThroughSquares","pieceMoveRegistry","currentSquares","unvisitedSquares","baseBuilder","registryResult","Uint16Array","recurse","moveLength","moveString","_value$split","_value$split2","parseInt","Symbol","valueArr","addToBoardDestinations","boardDestinations","getBoardDestinations","initializeBackwardsPieceRegistry","entry","uintArray","isAlwaysIntersecting","permutationArray","permutationEntry","uintArr","remappedSymbols","remappedSymbol","_this$state$backwards","_j2","_this$state$backwards2","uintValues","sym","remapped","generateOppositionSquares","royalMoves","oppositionRowEchelon","finalArray","generateOppositeMedians","rowEchelon","royalPieceA","royalPieceB","_loop3","i2","_loop4","_j3","_jjIndex$toString","_iiIndex$toString","j2","jjIndex","iiIndex","toString","newResultingSquares","dimSquare","_ret2","minimum","generatePieceMoveMedians","_this2","currentMessages","requiredMessages","_loop5","registeredSymbols","_loop6","registeredSymbol","pieceMedianCounter","Worker","URL","import","meta","url","moveRegistryArray","uint","buffer","royalPieceSet","terminate","_ret3","_this$generateOpposit","counters","individualCounter","numericKey","indexingNumber","RoyalsCannotCapture","Atomic","baseCoordinates","addCoordinate","disI","disJ","coordinateI","coordinateJ","atomicCoordinates","DeadKingWalking","pointsForMate","enPassants","eligibleEnPassants","_eligibleEnPassants","enPassantCoordinate","enPassantInfo","FatalCapture","endCaptureCoordinates","_move$startCoordinate","_move$endCoordinates","returnType","fullMoves","totalFullMoves","textualForm","alivePlayers","StalemateOptions","Giveaway","stalemateWins","capturedPiece","pointsForPiece","aliveColors","stalematePoints","isGiveawayAssigned","KingOfTheHill","hillSquares","defaultCoordinates","coordinatesArray","presumedOption","defaultRoyal","NCheck","defaultChecks","check","resultingMap","isNCheckValidated","isStandardMove","live","getOppositePlacedColor","OppositeMultiplier","oppositeMultiplierValue","numericValue","MAXIMUM_MULTIPLIER","OppositeSideCastling","castlingDataReference","PiecesGoToBanks","captures","addPieceToBank","PlayForMate","pointsAlternation","PointsForMate","playForMate","stalemateDraws","verifyCustomStalemateValue","_this$type","currentTurn","Takeover","detectedPieces","ThreefoldRepetition","totalRepetitions","totalRepetitionsRequired","repetitions","AnyCapture","modifiedConfiguration","compileEnumeration","prefixWithIndefiniteArticle","PromoteTo","filterPromotionPieceString","inputPromotion","pieceNames","pieceName","formatOrdinalNumber","PromotionRank","Sideways","Stonewall","Torpedo","_regeneratorRuntime","exports","Op","hasOwn","desc","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","Context","makeInvokeMethod","tryCatch","fn","arg","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","__await","then","unwrapped","previousPromise","callInvokeWithMethodAndArg","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","return","info","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","ctor","setPrototypeOf","__proto__","awrap","async","Promise","val","skipTempReset","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","_catch","thrown","delegateYield","createBaseParsingTypes","_callee","_callee$","_context","variantRulePriorities","differentiateDecoratorMethods","verifyDecorator","parseVariantRules","variantClasses","forcedRules","finalList","rulesStrings","insertVariantRule","dependencies","dependency","dependencyArgs","decorators","ruleString","forcedRule","_forcedRules","rule","resultingRule","unshift","compileVariantRuleData","finalObject","setFinalObjectProperty","properties","rvs","parameterArray","parsePGN4Moves","serializePGNMoves","createDefaultVariantTags","pgn4Tags","pgn4Moves","substring","trim","variantTags","wasFEN4set","variantTag","verifyTagInParsing","currentValue","parseTag","site","gameNumber","playerData","nonPlayablePieceValues","variantType","defaultTags","verifyColorEnumValue","SPLIT","PIECE_REGEX","PIECE_REGEX_SIMPLIFIED","MOVE_CAPTURING_REGEX","DUCK_MOVE_CAPTURING_REGEX","DROPPING_MOVE_CAPTURING_REGEX","BRACKETS","COMMENT_START","COMMENT_END","VARIATION_START","VARIATION_END","COMMENT_SYNTAXES","CLOCK","ARROWS","SQUARES","ANNOTATION","obtainDuckMove","obtainInternalType","obtainDroppingMove","_match","obtainStandardMove","promotionMatch","moveCoordinates","startCoordinate","endCoordinate","cloneMoveData","parseMoves","selectedMove","moveList","currentPath","getMoveIndexes","parseComment","getEnumeratorIndex","findBracketIndex","depth","processMoveDataInsertion","currentMoveData","_currentMove$comment","_currentMove$comment3","_currentMove$comment5","_currentMove$comment7","increment","clockSyntax","_currentMove$comment2","replace","arrowSyntax","_currentMove$comment4","arrows","arrow","numericColor","arrowCoordinates","squareSyntax","_currentMove$comment6","inputCoordinate","annotationMatch","_currentMove$comment8","obtainMoveFromInfo","internalType","droppingMove","duckMove","variationIncrement","isNumNaN","_currentMove$alternat","moveTree","createFENDataTag","GenericTags","createVariantRulesTag","createVariantTypeTag","createDateTag","createSiteTag","createTimeControlTag","createTerminationTag","createGameNumberTag","createPlayerDataTag","createResultsTag","tagNamesEqual","unwrapTag","wrapTag","checkDimensionIntersection","dimensionI","dimensionJ","serializeFENOptions","modifyFourBooleanParameter","part","fenDataArrayRef","booleans","predefinedFENpositions","verifyPredefinedFENPosition","fenShorthand","fenDataTag","inputTag","tagContents","transparentWall","parts","warn","verifyKeyInTags","startsWith","initialParsing","replaceAll","_Object$entries","_Object$entries$_i","pieceStr","endsWith","cornerAreaSize","arrayDimension","baseLoop","_i4","_squares","baseBoard","currentEmptySquares","playerNames","validateTerminationString","truncateNumber","variantTypeTag","_Object$values","variantDateTag","Date","variantSiteTag","variantTimeControlTag","getDefaultTimeControl","isDelay","_unwrapTag$match","defaultTC","_matchArray","minutesMatch","secondsMatch","delay","round","noIncrement","timeControlString","variantTerminationTag","variantGameId","id","newCurrentValue","uniqueResultingTags","resultsTag","variantRulesTag","resultingRuleList","charCodeAt","baseTag","content","definedTag","instance","customProperties","copy","verifyPropertiesInObject","num","lastTwoDigits","str","vowels","convertSecondsToFlexibleHoursMinutesSeconds","seconds","toISOString","convertCamelCaseToKebabCase","baseString","hashString","string","char"],"sourceRoot":""}