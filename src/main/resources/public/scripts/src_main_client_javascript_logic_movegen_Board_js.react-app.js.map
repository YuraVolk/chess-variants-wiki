{"version":3,"file":"src_main_client_javascript_logic_movegen_Board_js.react-app.js","mappings":"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","sources":["webpack://spring-react-app/./src/main/client/javascript/logic/movegen/Board.js","webpack://spring-react-app/./src/main/client/javascript/logic/movegen/PieceControl.js","webpack://spring-react-app/./src/main/client/javascript/logic/movegen/Reporter.js","webpack://spring-react-app/./src/main/client/javascript/logic/movegen/Variant.js","webpack://spring-react-app/./src/main/client/javascript/logic/utils/CRC32.js","webpack://spring-react-app/./src/main/client/javascript/logic/utils/FENOptions.js","webpack://spring-react-app/./src/main/client/javascript/logic/utils/InsufficientMaterialGeneration.js","webpack://spring-react-app/./src/main/client/javascript/logic/utils/MoveTree.js","webpack://spring-react-app/./src/main/client/javascript/logic/utils/Parsers.js","webpack://spring-react-app/webpack/bootstrap","webpack://spring-react-app/webpack/runtime/define property getters","webpack://spring-react-app/webpack/runtime/get javascript chunk filename","webpack://spring-react-app/webpack/runtime/global","webpack://spring-react-app/webpack/runtime/hasOwnProperty shorthand","webpack://spring-react-app/webpack/runtime/make namespace object","webpack://spring-react-app/webpack/runtime/publicPath","webpack://spring-react-app/webpack/runtime/importScripts chunk loading","webpack://spring-react-app/webpack/before-startup","webpack://spring-react-app/webpack/startup","webpack://spring-react-app/webpack/after-startup"],"sourcesContent":["import { createMoveTree } from \"../utils/MoveTree\";\r\nimport { parseEnPassantCoordinates, parsePGN4moves, parseSingleCoordinate, parseFEN4 } from \"../utils/Parsers\";\r\nimport * as Pieces from \"./PieceControl\";\r\nimport { Reporter, topicLines } from \"./Reporter\";\r\nimport { parseGameRules } from \"./Variant\";\r\n\r\nconst colorEnum = {\r\n    get r() { return 0 },\r\n    get b() { return 1 },\r\n    get y() { return 2 },\r\n    get g() { return 3 },\r\n    get Red() { return 0 },\r\n    get Blue() { return 1 },\r\n    get Yellow() { return 2 },\r\n    get Green() { return 3 },\r\n    get '0'() { return 'r' },\r\n    get '1'() { return 'b' },\r\n    get '2'() { return 'y' },\r\n    get '3'() { return 'g' }\r\n};\r\n\r\nconst specialMovesEnum = {\r\n    get resign() { return 'R' },\r\n    get stalemate() { return 'S' },\r\n    get draw() { return 'D' },\r\n    get pass() { return 'P' },\r\n    get timeout() { return 'T' }\r\n};\r\n\r\nconst variantTypes = {\r\n    solo: Symbol(),\r\n    ffa: Symbol(),\r\n    teams: Symbol()\r\n};\r\n\r\nconst baseImmunes = Array(4).fill(false);\r\n\r\nconst createBasePreGeneratedAttacks = () => {\r\n    return {\r\n        hoppingPieces: Array.from({ length: 14 }, () => Array.from({ length: 14 }, () => 0)),\r\n        slidingPieces: Array.from({ length: 14 }, () => Array.from({ length: 14 }, () => 0)),\r\n        hoppingPieceLines: [],\r\n        slidingPiecesLines: [],\r\n        slidingPiecesRayTracing: [],\r\n        attackingColors: Array.from({ length: 14 }, () => Array.from({ length: 14 }, () => 0))\r\n    };\r\n};\r\n\r\nclass Board {\r\n    // type = static, game, puzzle\r\n    constructor(type, pgn4) {\r\n        this.controls = new Map();\r\n        this.controlsSettings = new Map();\r\n        this.data = {};\r\n        this.moves = createMoveTree();\r\n        this.preGeneratedAttacks = createBasePreGeneratedAttacks();\r\n        this.board = [];\r\n        this.boardMemo = [];\r\n        this.isComplexSetup = {\r\n            hasComplexPieces: false,\r\n            hasComplexRules: false,\r\n            isComplex() { return this.hasComplexPieces || this.hasComplexRules; }\r\n        };\r\n        this.reporter = new Reporter(Object.values(topicLines));\r\n\r\n        this.gameData = {\r\n            gameNumber: undefined,\r\n            timeControl: undefined,\r\n            players: [{}, {}, {}, {}],\r\n            site: undefined,\r\n            date: undefined,\r\n            result: undefined,\r\n            termination: undefined\r\n        };\r\n        this.gameType = {\r\n            type: variantTypes.ffa,\r\n            teamSettings: {\r\n                firstTeamColors: undefined,\r\n                secondTeamColors: undefined\r\n            },\r\n            getBaseColors(color) {\r\n                if (this.isFFA()) {\r\n                    return Array(4).fill(undefined).map((_, i) => i === color);\r\n                } else {\r\n                    return this.teamSettings.firstTeamColors[color] ? this.teamSettings.firstTeamColors : this.teamSettings.secondTeamColors;\r\n                }\r\n            },\r\n            isFFA() {\r\n                return this.type === variantTypes.solo || this.type === variantTypes.ffa;\r\n            }\r\n        };\r\n\r\n        let pgn4Tags, pgn4Moves;\r\n        const match = pgn4.match(/(?=1\\.\\s*?[xA-ZΑ-ωa-n0-9-])/);\r\n        if (match?.index) {\r\n            pgn4Moves = pgn4.substring(match.index);\r\n            pgn4Tags = pgn4.substring(0, match.index).split(\"]\");\r\n\r\n            this.moves.moves = parsePGN4moves(pgn4Moves);\r\n        } else {\r\n            pgn4Tags = pgn4.split(\"]\");\r\n        }\r\n\r\n        const tagFunctions = {\r\n            ['StartFen4']: {\r\n                func: (fen4) => {\r\n                    ({ board: this.board, data: this.data } = parseFEN4(fen4, (letter) => {\r\n                        if (letter.startsWith(\"d\") || letter.length === 1) return;\r\n                        const realLetter = letter.charAt(1);\r\n                        if (this.controls.has(realLetter)) return;\r\n                        const information = Pieces.PieceControl.getConstructor(realLetter);\r\n                        const control = Reflect.construct(information.construct, []);\r\n                        control.setReporter(this.reporter);\r\n                        this.controls.set(realLetter, control);\r\n                        this.controlsSettings.set(realLetter, information);\r\n\r\n                        if (information.isComplex) this.isComplexSetup.hasComplexPieces = true;\r\n                    }));\r\n                },\r\n                arguments: null\r\n            },\r\n            ['RuleVariants']: {\r\n                func: (rules) => {\r\n                    const list = parseGameRules(rules);\r\n                    this.reporter.addGameRules(list);\r\n                },\r\n                arguments: null\r\n            },\r\n            ['Variant']: {\r\n                func: (variant) => {\r\n                    switch (variant) {\r\n                        case \"FFA\":\r\n                            this.gameType.type = variantTypes.ffa;\r\n                            break;\r\n                        case \"Solo\":\r\n                            this.gameType.type = variantTypes.solo;\r\n                            break;\r\n                        case \"Teams\":\r\n                            this.gameType.type = variantTypes.teams;\r\n                            this.gameType.teamSettings.firstTeamColors = [true, false, true, false];\r\n                            this.gameType.teamSettings.secondTeamColors = [false, true, false, true];\r\n                    }\r\n                },\r\n                arguments: null\r\n            },\r\n            ['Date']: {\r\n                func: (date) => { this.gameData.date = new Date(date); },\r\n                arguments: null\r\n            },\r\n            ['GameNr']: {\r\n                func: (number) => { if (!isNaN(number)) this.gameData.gameNumber = parseInt(number, 10); },\r\n                arguments: null\r\n            },\r\n            ['Termination']: {\r\n                func: (termination) => { this.gameData.termination = termination; },\r\n                arguments: null\r\n            },\r\n            ['Site']: {\r\n                func: (site) => { this.gameData.site = site; },\r\n                arguments: null\r\n            },\r\n            ['TimeControl']: {\r\n                func: (tc) => { this.gameData.timeControl = tc; },\r\n                arguments: null\r\n            }\r\n        };\r\n\r\n        const parsePlayerMatch = (match, content) => {\r\n            if (match[2] !== undefined) {\r\n                this.gameData.players[colorEnum[match[1]]].elo = parseInt(content, 10);\r\n            } else {\r\n                this.gameData.players[colorEnum[match[1]]].name = content;\r\n            }\r\n        };\r\n\r\n        const leftFunctions = new Set(Object.keys(tagFunctions));\r\n\r\n        pgn4Tags.forEach(tag => {\r\n            let isPresent = false;\r\n            for (const v of leftFunctions) {\r\n                const tagStart = `[${v} \"`;\r\n                if (tag.startsWith(tagStart)) {\r\n                    isPresent = true;\r\n                    tagFunctions[v].arguments = tag.replace(tagStart, \"\").slice(0, -1);\r\n                    leftFunctions.delete(v);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!isPresent) {\r\n                const playerMatch = tag.match(/\\[(Red|Blue|Yellow|Green)(Elo)?\\s*?\"/);\r\n                if (playerMatch) parsePlayerMatch(playerMatch, tag.replace(playerMatch[0], \"\").slice(0, -1));\r\n            }\r\n        });\r\n\r\n        const parseTag = (obj) => { if (obj.arguments) obj.func.call(this, obj.arguments); };\r\n        parseTag(tagFunctions['Variant']);\r\n        parseTag(tagFunctions['StartFen4']);\r\n        parseTag(tagFunctions['RuleVariants']);\r\n        parseTag(tagFunctions['Termination']);\r\n        parseTag(tagFunctions['Date']);\r\n        parseTag(tagFunctions['GameNr']);\r\n        parseTag(tagFunctions['Site']);\r\n        parseTag(tagFunctions['TimeControl']);\r\n\r\n        this.reporter.evaluateCase(this.reporter.createShallowCase(topicLines.boardModification, this.gameType, this));\r\n        this.currentBoard = this.board;\r\n        this.pregenerateAttacks();\r\n\r\n        this.insufficientMaterialModule = null;\r\n        const insufficientMaterialGenerationWorker = new Worker(new URL(\"../utils/InsufficientMaterialGeneration.js\", import.meta.url));\r\n        insufficientMaterialGenerationWorker.postMessage({ board: this });\r\n    }\r\n\r\n    createVirtualCopy() {\r\n        const excludedObjects = new WeakSet([this.data, this.board, this.boardMemo, this.isComplexSetup, this.preGeneratedAttacks, this.insufficientMaterialModule]);\r\n        const targetObject = {};\r\n        for (const property of Object.getOwnPropertyNames(Board.prototype)) {\r\n            if (property === 'constructor') continue;\r\n            targetObject[property] = Board.prototype[property].bind(targetObject);\r\n        }\r\n\r\n        for (const field of Object.getOwnPropertyNames(this)) {\r\n            if (typeof this[field] === 'object') {\r\n                if (excludedObjects.has(this[field])) {\r\n                    excludedObjects.delete(this[field]);\r\n                } else {\r\n                    targetObject[field] = this[field];\r\n                }\r\n            } else {\r\n                targetObject[field] = this[field];\r\n            }\r\n        }\r\n\r\n        targetObject.board = [];\r\n        targetObject.boardMemo = [];\r\n        targetObject.isComplexSetup = Object.assign({}, this.isComplexSetup);\r\n        targetObject.preGeneratedAttacks = createBasePreGeneratedAttacks();\r\n        targetObject.data = this.data.createVirtualCopy();\r\n        targetObject.insufficientMaterialModule = this.insufficientMaterialModule;\r\n\r\n        return targetObject;\r\n    }\r\n\r\n    getSquares() { return this.board; }\r\n    getReporter() { return this.reporter; }\r\n    getPieceControls() { return this.controls; }\r\n    getBoardData() { return this.data; }\r\n\r\n    isKingInCheck(baseColor, fenRoyal = this.data.fenOptions.royal) {\r\n        if (!fenRoyal[baseColor]) return false;\r\n        if (this.isComplexSetup) {\r\n            for (let i = 0; i < 14; i++) {\r\n                for (let j = 0; j < 14; j++) {\r\n                    const square = this.currentBoard[i][j];\r\n                    if (square.length !== 2 || square.startsWith(\"d\")) continue;\r\n                    const color = square.charAt(0);\r\n                    if (colorEnum[color] === baseColor) continue;\r\n                    const control = this.controls.get(square.charAt(1));\r\n                    control.setColor(color);\r\n                    control.baseRankActive = false;\r\n                    control.setCoordinates(this.currentBoard, this.data.fenOptions, [j, i]);\r\n                    control.immunePieces = baseImmunes;\r\n                    const threats = control.getPseudoLegalMoves();\r\n                    if (threats.some(a => a.every((v, i) => v === fenRoyal[baseColor][i]))) return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        } else {\r\n            const coordinates = fenRoyal[baseColor];\r\n            return this.preGeneratedAttacks.slidingPieces[coordinates[1]][coordinates[0]]\r\n                || this.preGeneratedAttacks.hoppingPieces[coordinates[1]][coordinates[0]];\r\n        }\r\n    }\r\n\r\n    getPlayerPieces() {\r\n        const playerPieces = [[], [], [], []];\r\n\r\n        for (let i = 0; i < 14; i++) {\r\n            for (let j = 0; j < 14; j++) {\r\n                const square = this.currentBoard[i][j];\r\n                const color = colorEnum[square.charAt(0)];\r\n                if (color !== undefined) playerPieces[color].push([j, i]);\r\n            }\r\n        }\r\n\r\n        return playerPieces;\r\n    }\r\n\r\n    getCheckmatesAndStalemates() {\r\n        const kingChecks = Array(4).fill(false);\r\n        const legalMoves = Array(4).fill(false);\r\n        const playerPieces = this.getPlayerPieces();\r\n\r\n        for (let i = 0; i < playerPieces[this.data.sideToMove].length; i++) {\r\n            const move = playerPieces[this.data.sideToMove][i];\r\n            if (this.getLegalMoves(move[0], move[1]).length) {\r\n                legalMoves[this.data.sideToMove] = true;\r\n                break;\r\n            }\r\n        }\r\n        if (this.isKingInCheck(this.data.sideToMove)) kingChecks[this.data.sideToMove] = true;\r\n\r\n        const virtualCopy = this.createVirtualCopy();\r\n        virtualCopy.board = this.board;\r\n        virtualCopy.boardMemo = this.boardMemo;\r\n        virtualCopy.currentBoard = virtualCopy.board;\r\n        playerPieces.forEach((moves, p) => {\r\n            if (p === this.data.sideToMove) return;\r\n            if (!virtualCopy.isComplexSetup.isComplex()) virtualCopy.pregenerateAttacks(p);\r\n            for (let i = 0; i < moves.length; i++) {\r\n                if (virtualCopy.getLegalMoves(moves[i][0], moves[i][1], p).length) {\r\n                    legalMoves[p] = true;\r\n                    break;\r\n                }\r\n                if (virtualCopy.isKingInCheck(p)) kingChecks[p] = true;\r\n            }\r\n        });\r\n\r\n        return {\r\n            checkmates: legalMoves.map((move, i) => !move && kingChecks[i]),\r\n            stalemates: legalMoves.map((move, i) => !move && !kingChecks[i])\r\n        };\r\n    }\r\n\r\n    runComplexLegalityEvaluationChecks() {\r\n        if (this.isComplexSetup.hasComplexRules) return;\r\n        for (let i = 0; i < 14; i++) {\r\n            for (let j = 0; j < 14; j++) {\r\n                const square = this.currentBoard[i][j];\r\n                const piece = colorEnum[square.charAt(1)];\r\n                if (piece && this.controlsSettings.get(piece) && this.controlsSettings.get(piece).isComplex) {\r\n                    this.isComplexSetup.hasComplexPieces = true;\r\n                    return;\r\n                } \r\n            }\r\n        }\r\n    }\r\n\r\n    makeMove(_startX, _startY, _endX, _endY, _promotion = null) {\r\n        this.data.affectOptions(this, ...arguments);\r\n        this.pregenerateAttacks();\r\n        this.runComplexLegalityEvaluationChecks();\r\n    }\r\n\r\n    /**\r\n     * Futer benchmarks:\r\n     * Std: 30 moves per second\r\n     * Atomic & racing with xiangqi horses: 15 moves per second\r\n     */\r\n\r\n    makeVirtualMove(_startX, _startY, _endX, _endY, _promotion = null) {\r\n        this.boardMemo = this.board.map(r => r.slice()).slice();\r\n        this.currentBoard = this.boardMemo;\r\n        this.runComplexLegalityEvaluationChecks();\r\n        return this.data.createVirtualEffect(this, ...arguments);\r\n    }\r\n\r\n    pregenerateAttacks(sideToMove = this.data.sideToMove) {\r\n        this.preGeneratedAttacks = createBasePreGeneratedAttacks();\r\n        for (let i = 0; i < 14; i++) {\r\n            for (let j = 0; j < 14; j++) {\r\n                const square = this.currentBoard[i][j];\r\n                if (square.length !== 2 || square.startsWith(\"d\")) continue;\r\n                const color = square.charAt(0);\r\n                if (colorEnum[color] === sideToMove) continue;\r\n                const letter = square.charAt(1);\r\n                const control = this.controls.get(square.charAt(1));\r\n                control.setColor(color);\r\n                control.baseRankActive = false;\r\n                control.setCoordinates(this.currentBoard, this.data.fenOptions, [j, i]);\r\n                control.setBaseImmunePieces(Array(4).fill(false));\r\n\r\n                if (this.controlsSettings.get(letter).isJumping) {\r\n                    control.rayGenJumpingAttacks().forEach(a => {\r\n                        this.preGeneratedAttacks.hoppingPieces[a[1]][a[0]]++;\r\n                        this.preGeneratedAttacks.hoppingPieceLines.push([[j, i], a]);\r\n                        const l = this.preGeneratedAttacks.attackingColors[a[1]][a[0]];\r\n                        if (l !== -1 && this.preGeneratedAttacks.attackingColors[a[1]][a[0]] !== colorEnum[color] + 1) {\r\n                            this.preGeneratedAttacks.attackingColors[a[1]][a[0]] = l === 0 ? 1 + colorEnum[color] : -1;\r\n                        }\r\n                    });\r\n                }\r\n\r\n                if (this.controlsSettings.get(letter).isSliding) {\r\n                    const attacks = control.rayGenSlidingAttacks();\r\n                    attacks.forEach(a => {\r\n                        a.forEach(sa => {\r\n                            sa.forEach(ssa => {\r\n                                this.preGeneratedAttacks.slidingPieces[ssa[1]][ssa[0]]++;\r\n                                const l = this.preGeneratedAttacks.attackingColors[ssa[1]][ssa[0]];\r\n                                if (l !== -1 && this.preGeneratedAttacks.attackingColors[ssa[1]][ssa[0]] !== colorEnum[color] + 1) {\r\n                                    this.preGeneratedAttacks.attackingColors[ssa[1]][ssa[0]] = l === 0 ? 1 + colorEnum[color] : -1;\r\n                                }\r\n                            });\r\n                        });\r\n                        this.preGeneratedAttacks.slidingPiecesLines.push([[j, i], ...a]);\r\n                    });\r\n\r\n                    control.rayGenSlidingAttacks(Pieces.attackTypeEnum.rayTraceLimited).forEach(a => {\r\n                        this.preGeneratedAttacks.slidingPiecesRayTracing.push([[j, i], ...a]);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    isTheMoveLegal(color, attackX, attackY, pieceX, pieceY, promotion = null) {\r\n        if (this.isComplexSetup.isComplex()) {\r\n            const virtualFEN = this.makeVirtualMove(pieceX, pieceY, attackX, attackY, promotion);\r\n            const check = this.isKingInCheck(color, virtualFEN.fenOptions.royal);\r\n            this.currentBoard = this.board;\r\n            this.runComplexLegalityEvaluationChecks();\r\n            return check;\r\n        } else {\r\n            const [royalX, royalY] = this.data.fenOptions.royal[color];\r\n            const isRoyalMove = royalX === pieceX && royalY === pieceY;\r\n            const attackers = this.preGeneratedAttacks.hoppingPieces[royalY][royalX] +\r\n                this.preGeneratedAttacks.slidingPieces[royalY][royalX];\r\n            const targetSafety = this.preGeneratedAttacks.slidingPieces[attackY][attackX]\r\n                + this.preGeneratedAttacks.hoppingPieces[attackY][attackX] === 0;\r\n            const legalitySettings = {\r\n                canKingCapture: undefined\r\n            };\r\n\r\n            for (let i = 0; i < this.data.fenOptions.royal.length; i++) {\r\n                if (i !== color && this.data.fenOptions.royal[i] && this.data.fenOptions.royal[i][0] === attackX\r\n                    && this.data.fenOptions.royal[i][1] === attackY) {\r\n                    const royalDefendedSquare = this.preGeneratedAttacks.attackingColors[this.data.fenOptions.royal[i][1]][this.data.fenOptions.royal[i][0]];\r\n                    if ((royalDefendedSquare === i + 1 || royalDefendedSquare === 0)\r\n                        && (isRoyalMove || this.preGeneratedAttacks.attackingColors[royalY][royalX] === i + 1)) {\r\n                        legalitySettings.canKingCapture = i + 1;\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let lineWrapIndex = 0; lineWrapIndex < this.preGeneratedAttacks.slidingPiecesRayTracing.length; lineWrapIndex++) {\r\n                const [attackingPiece, attackLine] = this.preGeneratedAttacks.slidingPiecesRayTracing[lineWrapIndex];\r\n                let isPieceUnderAttack = false, isRoyalUnderAttack = false, isTheTargetSquarePinListed = false;\r\n                for (let attackIndex = 0; attackIndex < attackLine.length; attackIndex++) {\r\n                    const [attackedX, attackedY] = attackLine[attackIndex];\r\n                    if (!isPieceUnderAttack && attackedX === pieceX && attackedY === pieceY) isPieceUnderAttack = true;\r\n                    else if (!isTheTargetSquarePinListed && isPieceUnderAttack && !isRoyalUnderAttack &&\r\n                        attackedX === attackX && attackedY === attackY) isTheTargetSquarePinListed = true;\r\n                    if (!isRoyalUnderAttack && attackedX === royalX && attackedY === royalY) isRoyalUnderAttack = true;\r\n\r\n                    if (isRoyalMove) {\r\n                        if (isRoyalUnderAttack && attackedX === attackX && attackedY === attackY) {\r\n                            if (legalitySettings.canKingCapture > 0 && colorEnum[this.currentBoard[attackedY][attackedX].charAt(0)] + 1 === legalitySettings.canKingCapture) continue;\r\n                            return false;\r\n                        }\r\n                    } else {\r\n                        if (isPieceUnderAttack && isRoyalUnderAttack && attackingPiece[0] !== attackX\r\n                            && attackingPiece[1] !== attackY && !isTheTargetSquarePinListed) {\r\n                            if (legalitySettings.canKingCapture > 0 && colorEnum[this.currentBoard[attackedY][attackedX].charAt(0)] + 1 === legalitySettings.canKingCapture) continue;\r\n                            return false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (attackers > 1) {\r\n                return isRoyalMove ? targetSafety || legalitySettings.canKingCapture : legalitySettings.canKingCapture;\r\n            } else if (attackers === 1) {\r\n                if (!isRoyalMove) {\r\n                    if (this.preGeneratedAttacks.hoppingPieces[royalY][royalX] === 1) {\r\n                        for (let lineWrapIndex = 0; lineWrapIndex < this.preGeneratedAttacks.hoppingPieceLines.length; lineWrapIndex++) {\r\n                            const [attackingPiece, attackCoordinates] = this.preGeneratedAttacks.hoppingPieceLines[lineWrapIndex];\r\n\r\n                            if (attackCoordinates[0] === royalX && attackCoordinates[1] === royalY\r\n                                && attackingPiece[0] === attackX && attackingPiece[1] === attackY) {\r\n                                return true;\r\n                            }\r\n                        }\r\n\r\n                        return legalitySettings.canKingCapture;\r\n                    } else {\r\n                        for (let lineWrapIndex = 0; lineWrapIndex < this.preGeneratedAttacks.slidingPiecesLines.length; lineWrapIndex++) {\r\n                            const [attackingPiece, attackLine] = this.preGeneratedAttacks.slidingPiecesRayTracing[lineWrapIndex];\r\n                            let isRoyalUnderAttack = false, isTheTargetSquareBlocked = false;\r\n                            for (let attackIndex = 0; attackIndex < attackLine.length; attackIndex++) {\r\n                                const [attackedX, attackedY] = attackLine[attackIndex];\r\n                                if (!isRoyalUnderAttack && attackedX === royalX && attackedY === royalY) isRoyalUnderAttack = true;\r\n                                else if (!isTheTargetSquareBlocked && !isRoyalUnderAttack &&\r\n                                    attackedX === attackX && attackedY === attackY) isTheTargetSquareBlocked = true;\r\n                        \r\n                                if (isRoyalUnderAttack && !(attackingPiece[0] === attackX\r\n                                    && attackingPiece[1] === attackY) && !isTheTargetSquareBlocked) {\r\n                                    if (legalitySettings.canKingCapture > 0 && colorEnum[this.currentBoard[attackedY][attackedX].charAt(0)] + 1 === legalitySettings.canKingCapture) continue;\r\n                                    return legalitySettings.canKingCapture;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        return true;\r\n                    }\r\n                } else {\r\n                    return targetSafety || legalitySettings.canKingCapture;\r\n                }\r\n            } else {\r\n                return isRoyalMove ? targetSafety || legalitySettings.canKingCapture : true;\r\n            }\r\n        }\r\n    }\r\n\r\n    getLegalMoves(x, y, baseColor = this.data.sideToMove) {\r\n        if (this.currentBoard[y] && this.currentBoard[y][x] && this.currentBoard[y][x].length === 2) {\r\n            const piece = this.currentBoard[y][x];\r\n            const color = piece.charAt(0);\r\n            const control = this.controls.get(piece.charAt(1));\r\n            control.setColor(color);\r\n            if (control.color !== baseColor) return [];\r\n            if (control.hooks.usePawnLogic && this.data.fenOptions.pawnBaseRank < 13) {\r\n                control.setBaseRankActive(this.data.fenOptions.pawnBaseRank - 1, x, y);\r\n            }\r\n            control.setCoordinates(this.currentBoard, this.data.fenOptions, [x, y]);\r\n            control.setBaseImmunePieces(this.gameType.getBaseColors(colorEnum[color]));\r\n\r\n            const pseudoLegalMoves = control.getPseudoLegalMoves();\r\n            if (this.data.fenOptions.royal[colorEnum[color]]) {\r\n                return pseudoLegalMoves.filter(m => {\r\n                    return this.isTheMoveLegal(colorEnum[color], m[0], m[1], x, y);\r\n                });\r\n            } else {\r\n                return pseudoLegalMoves;\r\n            }\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n}\r\n\r\nexport { Board, colorEnum, specialMovesEnum };","import { colorEnum } from \"./Board\";\r\nimport { topicLines } from \"./Reporter\";\r\n\r\nconst attackTypeEnum = {\r\n    attackOnly: Symbol(),\r\n    moveOnly: Symbol(),\r\n    normal: Symbol(),\r\n    rayGen: Symbol(),\r\n    rayTrace: Symbol(),\r\n    rayTraceLimited: Symbol(),\r\n    isRayTrace(attackType) {\r\n        return attackType === this.rayTrace || attackType === this.rayTraceLimited;\r\n    }\r\n};\r\n\r\nclass PieceControl {\r\n    /*---------------------------------- INITIALIZATION -----------------------------------------*/\r\n    static letterMap = new Map();\r\n\r\n    constructor(pieceLetter, inferredOptions) {\r\n        PieceControl.letterMap.set(pieceLetter, inferredOptions);\r\n        this.moves = [];\r\n        this.color = 0; // default\r\n        this.sliding = [];\r\n        this.jumping = [];\r\n        this.rayGenCache = [];\r\n        this.hooks = {\r\n            useTrajectory: undefined,\r\n            usePerspective: undefined,\r\n            usePawnLogic: undefined,\r\n            useHopping: undefined\r\n        };\r\n\r\n        this.reporter = null;\r\n        this.letter = pieceLetter;\r\n        this.moveLegalityCase = null;\r\n        \r\n        this.baseRankActive = false;\r\n        this.immunePieces = [];\r\n\r\n        this.extends = [];\r\n    }\r\n\r\n    static getConstructor(letter) {\r\n        return PieceControl.letterMap.get(letter) ?? PieceControl;\r\n    }\r\n\r\n    setColor(color) {\r\n        this.color = colorEnum[color] ?? 0;\r\n    }\r\n\r\n    setBaseImmunePieces(immunePieces) {\r\n        this.immunePieces = immunePieces; // array [false, false, true, false] i.e.\r\n    }\r\n\r\n    setBaseRankActive(baseRank, x, y) {\r\n        this.baseRankActive = [13 - y, x, y, 13 - x][this.color] === baseRank;\r\n    }\r\n\r\n    setCoordinates(board, fenOptions, [x, y]) {\r\n        this.board = board;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.moves = [];\r\n        this.fenOptions = fenOptions;\r\n    }\r\n\r\n    setReporter(reporter) {\r\n        this.reporter = reporter;\r\n        reporter.evaluateCase(reporter.createShallowCase(topicLines.moveGeneration, this.hooks, this));\r\n        this.moveLegalityCase = reporter.createCase(topicLines.moveGenerationLegality);\r\n    }\r\n\r\n    /*---------------------------------- INITIALIZATION -----------------------------------------*/\r\n    /*-------------------------------------------------------------------------------------------*/\r\n    /*--------------------------------- MOVE GENERATION -----------------------------------------*/\r\n\r\n    modifyDisplacements(x, y) {\r\n        return [[x, y], [-y, x], [-x, -y], [y, -x]][this.color];\r\n    }\r\n\r\n    pushMove(x, y, isRayGen) {\r\n        if (!isRayGen && this.hooks.usePawnLogic && this.hooks.usePawnLogic.promotionRanks) {\r\n            if (this.hooks.usePawnLogic.promotionRanks[this.color] === (this.color % 2 === 0 ? y : x)) {\r\n                this.moves.push([x, y, [this.hooks.usePawnLogic.promotionPieces ?? 'QRBN']]);\r\n            } else {\r\n                this.moves.push([x, y]);\r\n            }\r\n        } else {\r\n            this.moves.push([x, y]);\r\n        }\r\n    }\r\n\r\n    generateSlidingAttack(displacementX, displacementY, special = attackTypeEnum.normal, limit = Infinity, i = -1, rayGenCache = null) {\r\n        let rayTraceLimit = 0;\r\n        if (this.hooks.usePerspective && this.hooks.usePerspective[this.color]) {\r\n            [displacementX, displacementY] = this.modifyDisplacements(displacementX, displacementY);\r\n        }\r\n\r\n        let startX = this.x + displacementX, startY = this.y + displacementY;\r\n        const xLength = this.board[0].length, yLength = this.board.length;\r\n        const isRayGen = rayGenCache || attackTypeEnum.isRayTrace(special);\r\n\r\n        while (limit > 0 && startX >= 0 && startX < xLength && startY >= 0 && startY < yLength) {\r\n            // TODO add trajectories?\r\n\r\n            // Move possibility\r\n            if (!this.getMovePossibility(startX, startY, special, rayGenCache)) {\r\n                this.moveLegalityCase.tests.isBlocked = [true, false];\r\n            } else this.moveLegalityCase.tests.isBlocked = [false, false];\r\n\r\n            // Always delegate legality checks, except if it is raytracing, raytracing doesn't need legality checks.\r\n            if (this.reporter.evaluateCase(this.moveLegalityCase, { inferredClass: this, arguments: {\r\n                special,\r\n                startX: this.x, startY: this.y\r\n            }}, isRayGen)) {\r\n                this.pushMove(startX, startY, isRayGen);\r\n            } \r\n\r\n            // Raytracing for getting pinned pieces, AKA rayTraceLimited\r\n            if (special === attackTypeEnum.rayTraceLimited && this.board[startY][startX].length !== 0) {\r\n                rayTraceLimit++;\r\n                if (rayTraceLimit === 2) break;\r\n            }\r\n            if (!attackTypeEnum.isRayTrace(special) && this.board[startY][startX].length !== 0) {\r\n                break;\r\n            }\r\n\r\n            startX += displacementX;\r\n            startY += displacementY;\r\n            limit--;\r\n        }\r\n    }\r\n\r\n    generateJumpAttack(displacementX, displacementY, special = attackTypeEnum.normal, i = -1, rayGenCache = null) {\r\n        if (this.hooks.usePerspective && this.hooks.usePerspective[this.color]) {\r\n            [displacementX, displacementY] = this.modifyDisplacements(displacementX, displacementY);\r\n        }\r\n\r\n        let startX = this.x + displacementX, startY = this.y + displacementY;\r\n        const isRayGen = rayGenCache || attackTypeEnum.isRayTrace(special);\r\n       \r\n        if (this.hooks.useTrajectory && i !== -1) { // Bifuracted pieces, i.e. xiangqi horse\r\n            const trajectory = this.hooks.useTrajectory[i];\r\n            let trajectoryX, trajectoryY;\r\n            if (this.hooks.usePerspective && this.hooks.usePerspective[this.color]) {\r\n                [trajectoryX, trajectoryY] = this.modifyDisplacements(trajectory[0], trajectory[1]);\r\n            } else {\r\n                trajectoryX = trajectory[0], trajectoryY = trajectory[1];\r\n            }\r\n            // Check bifuraction possibility\r\n            if (!this.getMovePossibility(this.x + trajectoryX, this.y + trajectoryY, special, rayGenCache)) { \r\n                this.moveLegalityCase.tests.isTrajectoryBlocked = [true, true];\r\n            } else this.moveLegalityCase.tests.isTrajectoryBlocked = [false, true];\r\n        }\r\n\r\n    \r\n        // Check move possibility\r\n        if (!this.getMovePossibility(startX, startY, special, rayGenCache)) {\r\n            this.moveLegalityCase.tests.isBlocked = [true, false];\r\n        } else this.moveLegalityCase.tests.isBlocked = [false, false];\r\n        if (this.reporter.evaluateCase(this.moveLegalityCase, { inferredClass: this, arguments: {\r\n                special,\r\n                startX, startY\r\n            }}, isRayGen)) {\r\n            this.pushMove(startX, startY, isRayGen);\r\n        }\r\n        this.reporter.resetCase(this.moveLegalityCase);\r\n    }\r\n\r\n    getMovePossibility(startX, startY, special = attackTypeEnum.normal, rayGenCache = null) {\r\n        let modifiedX = startX, modifiedY = startY;\r\n        if (!this.board[modifiedY] || this.board[modifiedY][modifiedX] === undefined) return false; // Out of bounds?\r\n\r\n        const piece = this.board[modifiedY][modifiedX];\r\n        // Make sure you don't capture immune zombie or your own piece, unless it is ray-genning to get legal moves.\r\n        if (!rayGenCache && !attackTypeEnum.isRayTrace(special)) { \r\n            if (this.immunePieces[colorEnum[piece.charAt(0)] ?? null] ?? false) return false;\r\n        }\r\n\r\n        const pushTo = () => {\r\n            if (rayGenCache) {\r\n                this.rayGenCache.push(rayGenCache);\r\n            }\r\n\r\n            return true;\r\n        };\r\n\r\n        if (special === attackTypeEnum.normal) {\r\n            if (piece.length !== 1) {\r\n                return pushTo();\r\n            }\r\n        } else if (special === attackTypeEnum.rayGen) {\r\n            if (piece.length !== 0) {\r\n                return pushTo();\r\n            }\r\n        } else if (special === attackTypeEnum.attackOnly) {\r\n            if (piece.length === 2) {\r\n                return pushTo();\r\n            }\r\n        } else if (special === attackTypeEnum.moveOnly) {\r\n            if (piece.length === 0) {\r\n                return pushTo();\r\n            }\r\n        } else if (attackTypeEnum.isRayTrace(special)) {\r\n            return pushTo();\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /*--------------------------------- MOVE GENERATION -----------------------------------------*/\r\n    /*-------------------------------------------------------------------------------------------*/\r\n    /*------------------------------- OUTPUT GENERATION -----------------------------------------*/\r\n\r\n    getPossibleCells() {\r\n        if (this.hooks.useHopping) {\r\n            this.sliding.forEach(a => this.generateSlidingAttack(a[0], a[1], attackTypeEnum.rayGen, Infinity, null, a.slice()));\r\n            const moves = this.moves.slice();\r\n            this.moves = [];\r\n            moves.forEach((s, i) => {\r\n                const startX = s[0] + this.rayGenCache[i][0];\r\n                const startY = s[1] + this.rayGenCache[i][1];\r\n                if (this.getMovePossibility(startX, startY)) {\r\n                    this.moveLegalityCase.tests.isBlocked = [false, false];\r\n                } else this.moveLegalityCase.tests.isBlocked = [true, false];\r\n\r\n                if (this.reporter.evaluateCase(this.moveLegalityCase, { inferredClass: this, arguments: {\r\n                    startX, startY,\r\n                    special: attackTypeEnum.normal\r\n                }})) {\r\n                    this.moves.push([startX, startY]);\r\n                }\r\n                this.reporter.resetCase(this.moveLegalityCase);\r\n            });\r\n            this.rayGenCache = [];\r\n        } else {\r\n            this.sliding.forEach(a => this.generateSlidingAttack(a[0], a[1]));\r\n            this.jumping.forEach(a => this.generateJumpAttack(a[0], a[1]));\r\n        }\r\n    }\r\n\r\n    rayGenJumpingAttacks() {\r\n        this.jumping.forEach(a => this.generateJumpAttack(a[0], a[1], attackTypeEnum.rayTrace));\r\n        return this.moves.splice(0);\r\n    }\r\n\r\n    rayGenSlidingAttacks(trace) {\r\n        const slidingLines = [];\r\n\r\n        this.sliding.forEach(a => {\r\n            this.generateSlidingAttack(a[0], a[1], trace ?? attackTypeEnum.normal);\r\n            if (this.moves.length !== 0) {\r\n                slidingLines.push([this.moves.splice(0)]);\r\n            }\r\n        });\r\n\r\n        return slidingLines;\r\n    }\r\n\r\n    getPseudoLegalMoves() {\r\n        this.extends.forEach(f => f());\r\n        this.getPossibleCells();\r\n        return this.moves.splice(0);\r\n    }\r\n\r\n    /*------------------------------- OUTPUT GENERATION -----------------------------------------*/\r\n}\r\n\r\nclass RookControl extends PieceControl {\r\n    constructor() {\r\n        super(\"R\", {\r\n            construct: new.target,\r\n            points: 5,\r\n            isComplex: false,\r\n            isJumping: false,\r\n            isSliding: true\r\n        });\r\n        this.sliding = [[-1, 0], [1, 0], [0, 1], [0, -1]];\r\n    }\r\n}\r\n\r\nclass BishopControl extends PieceControl {\r\n    constructor() {\r\n        super(\"B\", {\r\n            construct: new.target,\r\n            points: 5,\r\n            isComplex: false,\r\n            isJumping: false,\r\n            isSliding: true\r\n        });\r\n        this.sliding = [[-1, -1], [1, 1], [-1, 1], [1, -1]];\r\n    }\r\n}\r\n\r\nclass QueenControl extends PieceControl {\r\n    constructor() {\r\n        super(\"Q\", {\r\n            construct: new.target,\r\n            points: 9,\r\n            isComplex: false,\r\n            isJumping: false,\r\n            isSliding: true\r\n        });\r\n        this.sliding = [[-1, 0], [1, 0], [0, 1], [0, -1], [-1, -1], [1, 1], [-1, 1], [1, -1]];\r\n    }\r\n}\r\n\r\nclass DameControl extends PieceControl {\r\n    constructor() {\r\n        super(\"D\", {\r\n            construct: new.target,\r\n            points: 1,\r\n            isComplex: false,\r\n            isJumping: false,\r\n            isSliding: true\r\n        });\r\n        this.sliding = [[-1, 0], [1, 0], [0, 1], [0, -1], [-1, -1], [1, 1], [-1, 1], [1, -1]];\r\n    }\r\n}\r\n\r\nclass KingControl extends PieceControl {\r\n    constructor() {\r\n        super(\"K\", {\r\n            construct: new.target,\r\n            points: 3,\r\n            isComplex: false,\r\n            isJumping: true,\r\n            isSliding: false\r\n        });\r\n        this.jumping = [[-1, 0], [1, 0], [0, 1], [0, -1], [-1, -1], [1, 1], [-1, 1], [1, -1]];\r\n    }\r\n}\r\n\r\nclass GeneralControl extends PieceControl {\r\n    constructor() {\r\n        super(\"M\", {\r\n            construct: new.target,\r\n            points: 5,\r\n            isComplex: false,\r\n            isJumping: true,\r\n            isSliding: false\r\n        });\r\n        this.jumping = [[-1, 0], [1, 0], [0, 1], [0, -1], [-1, -1], [1, 1], [-1, 1], [1, -1],\r\n        [-1, -2], [-2, -1], [-1, 2], [2, -1], [-2, 1], [1, -2], [1, 2], [2, 1]];\r\n    }\r\n}\r\n\r\nclass FerzControl extends PieceControl {\r\n    constructor() {\r\n        super(\"F\", {\r\n            construct: new.target,\r\n            points: 1,\r\n            isComplex: false,\r\n            isJumping: true,\r\n            isSliding: false\r\n        });\r\n        this.jumping = [[-1, -1], [1, 1], [-1, 1], [1, -1]];\r\n    }\r\n}\r\n\r\nclass WazirControl extends PieceControl {\r\n    constructor() {\r\n        super(\"W\", {\r\n            construct: new.target,\r\n            points: 1,\r\n            isComplex: false,\r\n            isJumping: true,\r\n            isSliding: false\r\n        });\r\n        this.jumping = [[-1, 0], [1, 0], [0, 1], [0, -1]];\r\n    }\r\n}\r\n\r\nclass DabbabaControl extends PieceControl {\r\n    constructor() {\r\n        super(\"S\", {\r\n            construct: new.target,\r\n            points: 1,\r\n            isComplex: false,\r\n            isJumping: true,\r\n            isSliding: false\r\n        });\r\n        this.jumping = [[-2, 0], [2, 0], [0, 2], [0, -2]];\r\n    }\r\n}\r\n\r\nclass DabbabaRiderControl extends PieceControl {\r\n    constructor() {\r\n        super(\"T\", {\r\n            construct: new.target,\r\n            points: 4,\r\n            isComplex: false,\r\n            isJumping: false,\r\n            isSliding: true\r\n        });\r\n        this.sliding = [[-2, 0], [2, 0], [0, 2], [0, -2]];\r\n    }\r\n}\r\n\r\nclass AlfilControl extends PieceControl {\r\n    constructor() {\r\n        super(\"I\", {\r\n            construct: new.target,\r\n            points: 1,\r\n            isComplex: false,\r\n            isJumping: true,\r\n            isSliding: false\r\n        });\r\n        this.jumping = [[-2, -2], [2, 2], [-2, 2], [2, -2]];\r\n    }\r\n}\r\n\r\nclass AlfilRiderControl extends PieceControl {\r\n    constructor() {\r\n        super(\"J\", {\r\n            construct: new.target,\r\n            points: 1,\r\n            isComplex: false,\r\n            isJumping: false,\r\n            isSliding: true\r\n        });\r\n        this.sliding = [[-2, -2], [2, 2], [-2, 2], [2, -2]];\r\n    }\r\n}\r\n\r\nclass AlibabaControl extends PieceControl {\r\n    constructor() {\r\n        super(\"Y\", {\r\n            construct: new.target,\r\n            points: 3,\r\n            isComplex: false,\r\n            isJumping: true,\r\n            isSliding: false\r\n        });\r\n        this.jumping = [[-2, 0], [2, 0], [0, 2], [0, -2], [-2, -2], [2, 2], [-2, 2], [2, -2]];\r\n    }\r\n}\r\n\r\nclass AlibabaRiderControl extends PieceControl {\r\n    constructor() {\r\n        super(\"Z\", {\r\n            construct: new.target,\r\n            points: 6,\r\n            isComplex: false,\r\n            isJumping: false,\r\n            isSliding: true\r\n        });\r\n        this.sliding = [[-2, 0], [2, 0], [0, 2], [0, -2], [-2, -2], [2, 2], [-2, 2], [2, -2]];\r\n    }\r\n}\r\n\r\nclass AmazonControl extends PieceControl {\r\n    constructor() {\r\n        super(\"A\", {\r\n            construct: new.target,\r\n            points: 12,\r\n            isComplex: false,\r\n            isJumping: true,\r\n            isSliding: true\r\n        });\r\n        this.sliding = [[-1, 0], [1, 0], [0, 1], [0, -1], [-1, -1], [1, 1], [-1, 1], [1, -1]];\r\n        this.jumping = [[-1, -2], [-2, -1], [-1, 2], [2, -1], [-2, 1], [1, -2], [1, 2], [2, 1]];\r\n    }\r\n}\r\n\r\nclass KnightControl extends PieceControl {\r\n    constructor() {\r\n        super(\"N\", {\r\n            construct: new.target,\r\n            points: 3,\r\n            isComplex: false,\r\n            isJumping: true,\r\n            isSliding: false\r\n        });\r\n        this.jumping = [[-1, -2], [-2, -1], [-1, 2], [2, -1], [-2, 1], [1, -2], [1, 2], [2, 1]];\r\n    }\r\n}\r\n\r\nclass CamelControl extends PieceControl {\r\n    constructor() {\r\n        super(\"C\", {\r\n            construct: new.target,\r\n            points: 3,\r\n            isComplex: false,\r\n            isJumping: true,\r\n            isSliding: false\r\n        });\r\n        this.jumping = [[-1, -3], [-3, -1], [-1, 3], [3, -1], [-3, 1], [1, -3], [1, 3], [3, 1]];\r\n    }\r\n}\r\n\r\nclass ChancellorControl extends PieceControl {\r\n    constructor() {\r\n        super(\"E\", {\r\n            construct: new.target,\r\n            points: 7,\r\n            isComplex: false,\r\n            isJumping: true,\r\n            isSliding: true\r\n        });\r\n        this.sliding = [[-1, 0], [1, 0], [0, 1], [0, -1]];\r\n        this.jumping = [[-1, -2], [-2, -1], [-1, 2], [2, -1], [-2, 1], [1, -2], [1, 2], [2, 1]];\r\n    }\r\n}\r\n\r\nclass ArchbishopControl extends PieceControl {\r\n    constructor() {\r\n        super(\"H\", {\r\n            construct: new.target,\r\n            points: 7,\r\n            isComplex: false,\r\n            isJumping: true,\r\n            isSliding: true\r\n        });\r\n        this.sliding = [[-1, -1], [1, 1], [-1, 1], [1, -1]];\r\n        this.jumping = [[-1, -2], [-2, -1], [-1, 2], [2, -1], [-2, 1], [1, -2], [1, 2], [2, 1]];\r\n    }\r\n}\r\n\r\nclass KnightRiderControl extends PieceControl {\r\n    constructor() {\r\n        super(\"O\", {\r\n            construct: new.target,\r\n            points: 7,\r\n            isComplex: false,\r\n            isJumping: false,\r\n            isSliding: true\r\n        });\r\n        this.sliding = [[-1, -2], [-2, -1], [-1, 2], [2, -1], [-2, 1], [1, -2], [1, 2], [2, 1]];\r\n    }\r\n}\r\n\r\nclass CamelRiderControl extends PieceControl {\r\n    constructor() {\r\n        super(\"L\", {\r\n            construct: new.target,\r\n            points: 7,\r\n            isComplex: false,\r\n            isJumping: false,\r\n            isSliding: true\r\n        });\r\n        this.sliding = [[-1, -3], [-3, -1], [-1, 3], [3, -1], [-3, 1], [1, -3], [1, 3], [3, 1]];\r\n    }\r\n}\r\n\r\nclass WildebeestControl extends PieceControl {\r\n    constructor() {\r\n        super(\"V\", {\r\n            construct: new.target,\r\n            points: 5,\r\n            isComplex: false,\r\n            isJumping: true,\r\n            isSliding: false\r\n        });\r\n        this.jumping = [[-1, -3], [-3, -1], [-1, 3], [3, -1], [-3, 1], [1, -3], [1, 3], [3, 1],\r\n        [-1, -2], [-2, -1], [-1, 2], [2, -1], [-2, 1], [1, -2], [1, 2], [2, 1]];\r\n    }\r\n}\r\n\r\nclass PawnControl extends PieceControl {\r\n    constructor() {\r\n        super(\"P\", {\r\n            construct: new.target,\r\n            points: 1,\r\n            isComplex: false,\r\n            isJumping: true,\r\n            isSliding: false\r\n        });\r\n        this.hooks.usePerspective = Array(4).fill(true);\r\n        this.hooks.usePawnLogic = true;\r\n    }\r\n\r\n    getPossibleCells() {\r\n        this.generateJumpAttack(-1, -1, attackTypeEnum.attackOnly);\r\n        this.generateJumpAttack(1, -1, attackTypeEnum.attackOnly);\r\n        this.generateSlidingAttack(0, -1, attackTypeEnum.moveOnly, this.baseRankActive ? 2 : 1);\r\n        return this.moves;\r\n    }\r\n\r\n    rayGenJumpingAttacks() {\r\n        this.generateJumpAttack(-1, -1, attackTypeEnum.rayTrace);\r\n        this.generateJumpAttack(1, -1, attackTypeEnum.rayTrace);\r\n        const moves = this.moves.slice();\r\n        this.moves = [];\r\n        return moves;\r\n    }\r\n}\r\n\r\nclass BerolinaControl extends PieceControl {\r\n    constructor() {\r\n        super(\"α\", {\r\n            construct: new.target,\r\n            points: 1,\r\n            isComplex: false,\r\n            isJumping: true,\r\n            isSliding: false\r\n        });\r\n        this.hooks.usePerspective = Array(4).fill(true);\r\n        this.hooks.usePawnLogic = true;\r\n    }\r\n\r\n    getPossibleCells() {\r\n        this.generateSlidingAttack(-1, -1, attackTypeEnum.moveOnly, this.baseRankActive ? 2 : 1);\r\n        this.generateSlidingAttack(1, -1, attackTypeEnum.moveOnly, this.baseRankActive ? 2 : 1);\r\n        this.generateJumpAttack(0, -1, attackTypeEnum.attackOnly);\r\n        return this.moves;\r\n    }\r\n\r\n    rayGenJumpingAttacks() {\r\n        this.generateJumpAttack(0, -1, attackTypeEnum.rayTrace);\r\n        const moves = this.moves.slice();\r\n        this.moves = [];\r\n        return moves;\r\n    }\r\n}\r\n\r\nclass StoneGeneralControl extends PieceControl {\r\n    constructor() {\r\n        super(\"γ\", {\r\n            construct: new.target,\r\n            points: 1,\r\n            isComplex: false,\r\n            isJumping: true,\r\n            isSliding: false\r\n        });\r\n        this.hooks.usePerspective = Array(4).fill(true);\r\n        this.hooks.usePawnLogic = true;\r\n    }\r\n\r\n    getPossibleCells() {\r\n        this.generateSlidingAttack(-1, -1, attackTypeEnum.moveOnly, this.baseRankActive ? 2 : 0);\r\n        this.generateSlidingAttack(1, -1, attackTypeEnum.moveOnly, this.baseRankActive ? 2 : 0);\r\n        this.generateJumpAttack(-1, -1);\r\n        this.generateJumpAttack(1, -1);\r\n        return this.moves;\r\n    }\r\n\r\n    rayGenJumpingAttacks() {\r\n        this.generateJumpAttack(-1, -1, attackTypeEnum.rayTrace);\r\n        this.generateJumpAttack(1, -1, attackTypeEnum.rayTrace);\r\n        const moves = this.moves.slice();\r\n        this.moves = [];\r\n        return moves;\r\n    }\r\n}\r\n\r\nclass SoldierControl extends PieceControl {\r\n    constructor() {\r\n        super(\"β\", {\r\n            construct: new.target,\r\n            points: 1,\r\n            isComplex: false,\r\n            isJumping: true,\r\n            isSliding: false\r\n        });\r\n        this.hooks.usePerspective = Array(4).fill(true);\r\n        this.hooks.usePawnLogic = true;\r\n    }\r\n\r\n    getPossibleCells() {\r\n        this.generateSlidingAttack(0, -1, attackTypeEnum.moveOnly, this.baseRankActive ? 2 : 0);\r\n        this.generateJumpAttack(0, -1);\r\n        return this.moves;\r\n    }\r\n\r\n    rayGenJumpingAttacks() {\r\n        this.generateJumpAttack(0, -1, attackTypeEnum.rayTrace);\r\n        const moves = this.moves.slice();\r\n        this.moves = [];\r\n        return moves;\r\n    }\r\n}\r\n\r\nclass SergeantControl extends PieceControl {\r\n    constructor() {\r\n        super(\"δ\", {\r\n            construct: new.target,\r\n            points: 1,\r\n            isComplex: false,\r\n            isJumping: true,\r\n            isSliding: false\r\n        });\r\n        this.hooks.usePerspective = Array(4).fill(true);\r\n        this.hooks.usePawnLogic = true;\r\n    }\r\n\r\n    getPossibleCells() {\r\n        this.generateSlidingAttack(-1, -1, attackTypeEnum.moveOnly, this.baseRankActive ? 2 : 0);\r\n        this.generateSlidingAttack(1, -1, attackTypeEnum.moveOnly, this.baseRankActive ? 2 : 0);\r\n        this.generateSlidingAttack(0, -1, attackTypeEnum.moveOnly, this.baseRankActive ? 2 : 0);\r\n        this.generateJumpAttack(0, -1);\r\n        this.generateJumpAttack(-1, -1);\r\n        this.generateJumpAttack(1, -1);\r\n        return this.moves;\r\n    }\r\n\r\n    rayGenJumpingAttacks() {\r\n        this.generateJumpAttack(0, -1, attackTypeEnum.rayTrace);\r\n        this.generateJumpAttack(-1, -1, attackTypeEnum.rayTrace);\r\n        this.generateJumpAttack(1, -1, attackTypeEnum.rayTrace);\r\n        const moves = this.moves.slice();\r\n        this.moves = [];\r\n        return moves;\r\n    }\r\n}\r\n\r\nclass ChineseHorseControl extends PieceControl {\r\n    constructor() {\r\n        super(\"U\", {\r\n            construct: new.target,\r\n            points: 2,\r\n            isComplex: true,\r\n            isSliding: false,\r\n            isJumping: true,\r\n        });\r\n        this.hooks.useTrajectory = [[-1, 0], [1, 0], [0, 1], [0, -1]];\r\n    }\r\n\r\n    getPossibleCells() {\r\n        this.generateJumpAttack(-1, -2, attackTypeEnum.normal, 3);\r\n        this.generateJumpAttack(1, -2, attackTypeEnum.normal, 3);\r\n        this.generateJumpAttack(-1, 2, attackTypeEnum.normal, 2);\r\n        this.generateJumpAttack(1, 2, attackTypeEnum.normal, 2);\r\n        this.generateJumpAttack(2, -1, attackTypeEnum.normal, 1);\r\n        this.generateJumpAttack(2, 1, attackTypeEnum.normal, 1);\r\n        this.generateJumpAttack(-2, -1, attackTypeEnum.normal, 0);\r\n        this.generateJumpAttack(-2, 1, attackTypeEnum.normal, 0);\r\n\r\n        return this.moves;\r\n    }\r\n}\r\n\r\nclass DragonBishopControl extends PieceControl {\r\n    constructor() {\r\n        super(\"Δ\", {\r\n            construct: new.target,\r\n            points: 7,\r\n            isComplex: true,\r\n            isJumping: true,\r\n            isSliding: true\r\n        });\r\n        this.sliding = [[-1, -1], [1, 1], [-1, 1], [1, -1]];\r\n        this.hooks.useTrajectory = [[-1, 0], [1, 0], [0, 1], [0, -1]];\r\n    }\r\n\r\n    getPossibleCells() {\r\n        this.generateJumpAttack(-1, -2, attackTypeEnum.normal, 3);\r\n        this.generateJumpAttack(1, -2, attackTypeEnum.normal, 3);\r\n        this.generateJumpAttack(-1, 2, attackTypeEnum.normal, 2);\r\n        this.generateJumpAttack(1, 2, attackTypeEnum.normal, 2);\r\n        this.generateJumpAttack(2, -1, attackTypeEnum.normal, 1);\r\n        this.generateJumpAttack(2, 1, attackTypeEnum.normal, 1);\r\n        this.generateJumpAttack(-2, -1, attackTypeEnum.normal, 0);\r\n        this.generateJumpAttack(-2, 1, attackTypeEnum.normal, 0);\r\n        this.sliding.forEach(a => { this.generateSlidingAttack(a[0], a[1])});\r\n\r\n        return this.moves;\r\n    }\r\n}\r\n\r\nclass GrasshopperControl extends PieceControl {\r\n    constructor() {\r\n        super(\"G\", {\r\n            construct: new.target,\r\n            points: 3,\r\n            isComplex: true,\r\n            isJumping: true,\r\n            isSliding: false\r\n        });\r\n        this.hooks.useHopping = true;\r\n        this.sliding = [[-1, 0], [1, 0], [0, 1], [0, -1], [-1, -1], [1, 1], [-1, 1], [1, -1]];\r\n    }\r\n}\r\n\r\nconst pieces = [\r\n    KingControl, QueenControl, DameControl, RookControl, BishopControl, KnightControl, PawnControl,\r\n    AmazonControl, ChancellorControl, ArchbishopControl, GeneralControl, CamelControl, WildebeestControl, GrasshopperControl, FerzControl,\r\n    WazirControl, AlfilControl, DabbabaControl, AlibabaControl, ChineseHorseControl, BerolinaControl, SoldierControl, KnightRiderControl,\r\n    CamelRiderControl, AlfilRiderControl, DabbabaRiderControl, AlibabaRiderControl, DragonBishopControl, StoneGeneralControl, SergeantControl\r\n];\r\npieces.forEach(p => Reflect.construct(p, []));\r\n\r\nexport { attackTypeEnum, PieceControl };","const topicLines = {\r\n    moveGeneration: Symbol(), // Sideways Pawns, Torpedo, promotion\r\n    moveGenerationLegality: Symbol(), // Any Capture, Stonewall\r\n    fenOptions: Symbol(), // opposite-side castling, N-Check, Self-check, Teammate\r\n    postMoveOptions: Symbol(), // Fatal Capture, OxN, P4M, Atomic, Points for Mate, Takeover, Stalemate settings, Bare piece rule\r\n    mateHandling: Symbol(), // No DKW, KotH, Racing Kings, \r\n    moveValidation: Symbol(), // Giveaway, Munching Chess, CTK, Allow Passing, Racing Kings\r\n    boardModification: Symbol() // Chess 960, paradigm chess30, alt. teams\r\n};\r\n\r\nclass Reporter {\r\n    constructor(topics) {\r\n        this.topics = topics.reduce((object, line) => ({ ...object, [line]: [] }), {});\r\n        this.cases = new WeakMap();\r\n        this.rules = [];\r\n    }\r\n\r\n    addGameRules(rules) {\r\n        rules.forEach(rv => {\r\n            if (rv.extendCategory && this.topics[rv.extendCategory]) {\r\n                this.topics[rv.extendCategory].push(rv);\r\n            }\r\n        });\r\n        this.rules = rules;\r\n    }\r\n\r\n    getRules() { return this.rules; }\r\n\r\n    getProxy() {\r\n        return new Proxy({}, {\r\n            set(target, prop, value) {\r\n                if (!target[prop] || !target[prop].isFrozen || value === null) {\r\n                    if (value === null) {\r\n                        if (Reflect.has(target, prop)) {\r\n                            Reflect.deleteProperty(target, prop);\r\n                        }\r\n                    } else {\r\n                        const result = Reflect.set(target, prop, {\r\n                            passed: !value[0],\r\n                            isFrozen: value[1]\r\n                        });\r\n                        return Object.isExtensible(target) ? result : true;\r\n                    }\r\n                }\r\n                return true;\r\n            }\r\n        });\r\n    }\r\n\r\n    createCase(topicLine) {\r\n        if (!this.topics[topicLine]) return;\r\n        const proxy = this.getProxy();\r\n        const object = { uid: Symbol(), tests: proxy };\r\n        this.cases.set(object, topicLine);\r\n        return object;\r\n    }\r\n\r\n    createShallowCase(topicLine, inferredProxy, inferredClass) {\r\n        if (!this.topics[topicLine]) return;\r\n        const object = {\r\n            uid: Symbol(),\r\n            isShallow: true,\r\n            proxyData: {\r\n                baseObject: inferredProxy,\r\n                baseClass: inferredClass,\r\n            },\r\n            classMutations: [],\r\n            objectMutations: [],\r\n            addClassMutation(callback) {\r\n                this.classMutations.push(callback);\r\n            },\r\n            addObjectMutation(callback) {\r\n                this.objectMutations.push(callback);\r\n            }\r\n        };\r\n        this.cases.set(object, topicLine);\r\n        return object;\r\n    }\r\n\r\n    evaluateCase(testCase, settings, ignoreOutput = false) {\r\n        if (testCase.isShallow) {\r\n            this.topics[this.cases.get(testCase)].forEach(rv => {\r\n                if (rv.shallowEvaluate) rv.shallowEvaluate(testCase);\r\n            });\r\n            testCase.classMutations.forEach(m => m());\r\n            testCase.objectMutations.forEach(m => m());\r\n            this.resetCase(testCase);\r\n\r\n        } else {\r\n            if (!ignoreOutput) {\r\n                this.topics[this.cases.get(testCase)].forEach(rv => {\r\n                    if (rv.evaluate) rv.evaluate(testCase.tests, settings);\r\n                });\r\n            }\r\n\r\n            const passed = Object.values(testCase.tests).every(p => p.passed);\r\n            this.resetCase(testCase);\r\n            return passed;\r\n        }\r\n    }\r\n\r\n    evaluateCaseSuspended(testCase, settings, ignoreOutput = false) {\r\n        if (testCase.isShallow) {\r\n            this.topics[this.cases.get(testCase)].forEach(rv => {\r\n                if (rv.shallowEvaluate) rv.shallowEvaluate(testCase);\r\n            });\r\n\r\n            return () => {\r\n                testCase.classMutations.forEach(m => m());\r\n                testCase.objectMutations.forEach(m => m());\r\n                this.resetCase(testCase);\r\n            };\r\n        } else {\r\n            const suspendedCases = [];\r\n            if (!ignoreOutput) {\r\n                this.topics[this.cases.get(testCase)].forEach(rv => {\r\n                    if (rv.evaluate) {\r\n                        if (rv.suspended) {\r\n                            suspendedCases.push(rv);\r\n                        } else {\r\n                            rv.evaluate(testCase.tests, settings);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n            return () => {\r\n                if (!ignoreOutput) {\r\n                    Object.preventExtensions(testCase.tests);\r\n                    suspendedCases.forEach(rv => rv.evaluate(testCase.tests, settings));\r\n                    const passed = Object.values(testCase.tests).every(p => p.passed);\r\n                    this.resetCase(testCase);\r\n                    return passed;\r\n                }\r\n            };\r\n        }\r\n    }\r\n\r\n    resetCase(testCase) {\r\n        if (testCase.isShallow) {\r\n            testCase = {};\r\n        } else {\r\n            testCase.tests = this.getProxy();\r\n        }  \r\n    }\r\n}\r\n\r\nexport { topicLines, Reporter };","import { attackTypeEnum } from './PieceControl';\r\nimport { topicLines } from './Reporter';\r\nimport { colorEnum } from './Board';\r\n\r\nconst ruleList = {};\r\nconst regExRules = {};\r\n\r\nclass SidewaysPawns {\r\n    constructor() {\r\n        ruleList[\"SidewaysPawns\"] = this;\r\n        this.extendCategory = topicLines.moveGeneration;\r\n    }\r\n\r\n    shallowEvaluate(object) {\r\n        if (object.proxyData.baseClass.hooks.usePawnLogic) {\r\n            object.addClassMutation(() => {\r\n                object.proxyData.baseClass.extends.push(function () {\r\n                    this.generateJumpAttack(-1, 0, attackTypeEnum.moveOnly);\r\n                    this.generateJumpAttack(1, 0, attackTypeEnum.moveOnly);\r\n                }.bind(object.proxyData.baseClass));\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nclass Torpedo {\r\n    constructor() {\r\n        ruleList[\"Torpedo\"] = this;\r\n        this.extendCategory = topicLines.moveGeneration;\r\n    }\r\n\r\n    shallowEvaluate(object) {\r\n        if (object.proxyData.baseClass.hooks.usePawnLogic) {\r\n            object.addClassMutation(() => {\r\n                object.proxyData.baseClass.extends.push(function () {\r\n                    this.baseRankActive = true;\r\n                }.bind(object.proxyData.baseClass));\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nclass AnyCapture {\r\n    constructor() {\r\n        ruleList[\"AnyCapture\"] = this;\r\n        this.extendCategory = topicLines.moveGenerationLegality;\r\n    }\r\n\r\n    evaluate(proxy, settings) {\r\n        const { startX, startY, special } = settings.arguments;\r\n        const { board, fenOptions } = settings.inferredClass;\r\n\r\n        if (startX != null && startY != null) {\r\n            if (special === attackTypeEnum.moveOnly) return;\r\n            if (!board[startY] || !board[startY][startX]) return;\r\n\r\n            const piece = board[startY][startX];\r\n            if (piece.length === 2) {\r\n                const color = colorEnum[piece.charAt(0)];\r\n                if (color && fenOptions.resigned[color] && fenOptions.zombieImmune[color]) {\r\n                    proxy.isBlocked = [true, true];\r\n                } else {\r\n                    if (!!fenOptions.royal[color] && fenOptions.royal[color][0] === startX\r\n                        && fenOptions.royal[color][1] === startY) proxy.isBlocked = [true, true];\r\n                    else proxy.isBlocked = [false, false];\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass PromotionRank {\r\n    constructor(match = undefined) {\r\n        if (!match) regExRules['Prom=(\\\\d\\\\d?)'] = new.target;\r\n        else if (match[1]) {\r\n            this.promotionRank = parseInt(match[1], 10) - 1;\r\n        }\r\n\r\n        this.extendCategory = topicLines.moveGeneration;\r\n    }\r\n\r\n    shallowEvaluate(object) {\r\n        const hooks = object.proxyData.baseObject;\r\n        if (hooks.usePawnLogic) {\r\n            object.addObjectMutation(() => {\r\n                if (this.promotionRank === 98) {\r\n                    if (typeof hooks.usePawnLogic !== 'object') {\r\n                        hooks.usePawnLogic = { promotionRanks: false };\r\n                    } else {\r\n                        hooks.usePawnLogic.promotionRanks = false;\r\n                    }\r\n                } else {\r\n                    const promotionRanks = [13 - this.promotionRank, this.promotionRank, this.promotionRank, 13 - this.promotionRank];\r\n                    if (typeof hooks.usePawnLogic !== 'object') {\r\n                        hooks.usePawnLogic = { promotionRanks };\r\n                    } else {\r\n                        hooks.usePawnLogic.promotionRanks = promotionRanks;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    getData() {\r\n        return [13 - this.promotionRank, this.promotionRank, this.promotionRank, 13 - this.promotionRank];\r\n    }\r\n}\r\n\r\nclass PromoteTo {\r\n    constructor(match = undefined) {\r\n        if (!match) regExRules['PromoteTo=([A-Zx]+)'] = new.target;\r\n        else if (match[1]) {\r\n            this.promotionPieces = match[1].split(\"\");\r\n        }\r\n\r\n        this.extendCategory = topicLines.moveGeneration;\r\n    }\r\n\r\n    shallowEvaluate(object) {\r\n        const hooks = object.proxyData.baseObject;\r\n        if (hooks.usePawnLogic) {\r\n            object.addObjectMutation(() => {\r\n                if (typeof hooks.usePawnLogic !== 'object') {\r\n                    hooks.usePawnLogic = { promotionPieces: this.promotionPieces };\r\n                } else {\r\n                    hooks.usePawnLogic.promotionPieces = this.promotionPieces;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    getData() {\r\n        return this.promotionPieces;\r\n    }\r\n}\r\n\r\nclass AlternativeTeams {\r\n    constructor(match = undefined) {\r\n        if (!match) regExRules['Teammate=(1|3)'] = new.target;\r\n        else if (match[1]) {\r\n            this.teammate = parseInt(match[1], 10);\r\n        }\r\n\r\n        this.extendCategory = topicLines.boardModification;\r\n    }\r\n\r\n    shallowEvaluate(object) {\r\n        const settings = object.proxyData.baseObject;\r\n        if (!settings.isFFA()) {\r\n            object.addObjectMutation(() => {\r\n                if (this.teammate === 1) {\r\n                    settings.teamSettings.firstTeamColors = [true, true, false, false];\r\n                    settings.teamSettings.secondTeamColors = [false, false, true, true];\r\n                } else {\r\n                    settings.teamSettings.firstTeamColors = [true, false, false, true];\r\n                    settings.teamSettings.secondTeamColors = [false, true, true, false];\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n[SidewaysPawns, Torpedo, AnyCapture, PromotionRank, PromoteTo, AlternativeTeams].forEach(rv => Reflect.construct(rv, []));\r\nconst parseGameRules = (rules) => {\r\n    const finalList = [];\r\n    const ruleList = rules.split(/\\s+/);\r\n    const regExRuleSet = new Set(Object.keys(regExRules));\r\n\r\n    ruleList.forEach(rv => {\r\n        if (!ruleList[rv]) {\r\n            regExRuleSet.forEach(regex => {\r\n                const match = rv.match(new RegExp(regex));\r\n                if (match) {\r\n                    finalList.push(new (regExRules[regex])(match));\r\n                    regExRuleSet.delete(regex);\r\n                }\r\n            });\r\n        } else {\r\n            finalList.push(ruleList[rv]);\r\n        }\r\n    });\r\n\r\n    return finalList;\r\n};\r\n\r\nexport { SidewaysPawns, Torpedo, AnyCapture, PromotionRank, PromoteTo, AlternativeTeams, ruleList, parseGameRules };","const crc32 = (function() {\r\n    const table = new Uint32Array(256);\r\n    for (let i = 256; i--;) {\r\n        let tmp = i;\r\n        for (let k = 8; k--;) {\r\n            tmp = tmp & 1 ? 3988292384 ^ tmp >>> 1 : tmp >>> 1;\r\n        }\r\n        table[i] = tmp;\r\n    }\r\n\r\n    const encoder = new TextEncoder();\r\n\r\n    return (str) => {\r\n        const arr = new Uint8Array();\r\n        encoder.encodeInto(str, arr);\r\n        let crc = -1;\r\n\r\n        for (let i = 0, l = arr.length; i < l; i++) {\r\n            crc = crc >>> 8 ^ table[crc & 255 ^ arr[i]];\r\n        }\r\n\r\n        return (crc ^ -1) >>> 0;\r\n    };\r\n})();\r\n\r\nexport default crc32;","import { colorEnum } from \"../movegen/Board\";\r\nimport { topicLines } from \"../movegen/Reporter\";\r\n\r\nexport default function createFENOptions() {\r\n    const copySettings = (object, base) => {\r\n        let val;\r\n        if (typeof object === 'object') {\r\n            if (object === null) val = null;\r\n            else {\r\n                if (Array.isArray(object)) {\r\n                    val = object.map(copySettings);\r\n                } else {\r\n                    val = Object.keys(object).reduce((p, n) => {\r\n                        p[n] = copySettings(object[n], base);\r\n                        return p;\r\n                    }, {});\r\n                }\r\n            }\r\n        } else if (typeof object !== 'function') {\r\n            val = object;\r\n        } else {\r\n            val = object.bind(base);\r\n        }\r\n\r\n        return val;\r\n    };\r\n\r\n    // The function has this set to the Board.js instance, and keeps the reference to the data object.\r\n    function processRules(object, startX, startY, endX, endY, promotion) {\r\n        const piece = promotion ? this.currentBoard[startY][startX].charAt(0).concat(promotion) : this.currentBoard[startY][startX];\r\n        const endSquare = this.currentBoard[endY][endX];\r\n        this.currentBoard[endY][endX] = piece;\r\n        this.currentBoard[startY][startX] = '';\r\n  \r\n        object.fenOptions.royal = object.fenOptions.royal.map((r, i) => {\r\n            if (r) {\r\n                if (r[0] === startX && r[1] === startY) {\r\n                    object.fenOptions.castleKingside[i] = false;\r\n                    object.fenOptions.castleQueenside[i] = false;\r\n                    return [endX, endY];\r\n                } else return r.slice();\r\n            } else return null;\r\n        });\r\n\r\n        if (object.fenOptions.enPassant && object.fenOptions.enPassant[object.sideToMove]) {\r\n            object.fenOptions.enPassant[object.sideToMove] = '';\r\n            if (object.fenOptions.enPassant.every(v => !v)) object.fenOptions.enPassant = undefined;\r\n        }\r\n\r\n        const { checkmates, stalemates } = this.getCheckmatesAndStalemates();\r\n        const totalMateSum = checkmates.reduce((p, n) => n ? p + 20 : p, 0);\r\n        const boardAlternations = {\r\n            pointDistribution: {\r\n                stalematePoints: stalemates.map((s, i) => s && i === object.sideToMove ? 20 : 0),\r\n                checkmatePoints: checkmates.map((_, i) => i === object.sideToMove ? totalMateSum : 0),\r\n                pieceCapturingPoints: Array(4).fill(0)\r\n            },\r\n            deadPieceList: [],\r\n            takeoverPieceList: []\r\n        };\r\n\r\n\r\n        if (endSquare.length === 2) {\r\n            boardAlternations.pointDistribution.pieceCapturingPoints[object.sideToMove] = this.controlsSettings.get(endSquare.charAt(1))?.points ?? 0;\r\n        }\r\n\r\n        const detectedPieces = this.getPlayerPieces();\r\n        detectedPieces.forEach((p, i) => {\r\n            if (checkmates[i] || (i === object.sideToMove && stalemates[i])) {\r\n                p.forEach(piece => {\r\n                    boardAlternations.deadPieceList.push(piece);\r\n                });\r\n                object.fenOptions.dead[i] = true;\r\n            }\r\n        });\r\n\r\n        this.reporter.evaluateCase(this.reporter.createShallowCase(topicLines.fenOptions, boardAlternations, this));\r\n\r\n        boardAlternations.deadPieceList.forEach(coord => { this.currentBoard[coord[1]][coord[0]] = 'd' + this.currentBoard[coord[1]][coord[0]].slice(1) });\r\n        boardAlternations.takeoverPieceList.forEach(coord => { this.currentBoard[coord[1]][coord[0]] = colorEnum[(object.sideToMove).toString()] + this.currentBoard[coord[1]][coord[0]].slice(1) });\r\n        if (this.gameType.isFFA()) {\r\n            object.points = object.points.map((p, i) => p + boardAlternations.pointDistribution.stalematePoints[i]\r\n            + boardAlternations.pointDistribution.checkmatePoints[i] + boardAlternations.pointDistribution.pieceCapturingPoints[i]);\r\n        }\r\n        \r\n        do {\r\n            object.sideToMove = object.sideToMove === 3 ? 0 : object.sideToMove + 1;\r\n        } while (object.fenOptions.dead[object.sideToMove]);\r\n    }\r\n\r\n    const validatedFenOptions = {\r\n        zombieType: Array(4).fill(null),\r\n        royal: undefined\r\n    };\r\n\r\n    return {\r\n        points: [0, 0, 0, 0],\r\n        sideToMove: 0,\r\n        fenOptions: {\r\n            dead: Array(4).fill(false),\r\n            resigned: Array(4).fill(false),\r\n            enPassant: undefined,\r\n            castleKingside: Array(4).fill(false),\r\n            castleQueenside: Array(4).fill(false),\r\n            castleWith: 'R',\r\n            boxOffset: 0,\r\n            zombieImmune: Array(4).fill(null),\r\n            pawnBaseRank: 2,\r\n            wb: false,\r\n            dimension: [14, 14],\r\n            noCorners: true,\r\n            lives: Array(4).fill(null),\r\n            plyCount: 0,\r\n            get zombieType() {\r\n                return validatedFenOptions.zombieType.every(v => !v) ? false : validatedFenOptions.zombieType;\r\n            },\r\n            set zombieType(v) { validatedFenOptions.zombieType = v },\r\n            get royal() { return validatedFenOptions.royal },\r\n            set royal(v) {\r\n                validatedFenOptions.royal = v.filter((v) => {\r\n                    if (!v || typeof v === 'string') return true;\r\n                    else return v[0] >= 0 && v[0] < 14 && v[1] >= 0 && v[1] < 14;\r\n                });\r\n            }\r\n        },\r\n        constructPreliminaryHashString(board) {\r\n            const builder = '';\r\n            builder += this.sideToMove;\r\n            builder = this.points.reduce((p, n) => p + '' + n, builder);\r\n            builder = this.fenOptions.castleKingside.reduce((p, n) => p + (n ? '1' : '0'), builder);\r\n            builder = this.fenOptions.castleQueenside.reduce((p, n) => p + (n ? '1' : '0'), builder);\r\n            builder = this.fenOptions.lives.reduce((p, n) => p + '' + (n ?? ''), builder);\r\n            builder = this.fenOptions.dead.reduce((p, n) => p + (n ? '1' : '0'), builder);\r\n            builder = this.fenOptions.resigned.reduce((p, n) => p + (n ? '1' : '0'), builder);\r\n            builder = this.fenOptions.resigned.reduce((p, n) => p + (n ? '1' : '0'), builder);\r\n            builder = this.fenOptions.enPassant ? this.fenOptions.enPassant.reduce((p, n) => p + '' + (n ?? ''), builder) : builder;\r\n            builder = board.reduce((p, n) => p + n.join(\"-\"), builder);\r\n            return builder;\r\n        },\r\n        createVirtualEffect(board, startX, startY, endX, endY, promotion = null) {\r\n            const newObject = copySettings(this, this);\r\n            processRules.call(board, newObject, startX, startY, endX, endY, promotion, suppliedArguments);\r\n            return newObject;\r\n        },\r\n        createVirtualCopy() {\r\n            return copySettings(this, this);\r\n        },\r\n        affectOptions(board, startX, startY, endX, endY, promotion = null) {\r\n            processRules.call(board, this, startX, startY, endX, endY, promotion);\r\n        }\r\n    };\r\n};","import { colorEnum } from \"../movegen/Board\";\r\nimport { PromoteTo, PromotionRank } from \"../movegen/Variant\";\r\n\r\nconst binaryMasks = Array(14).fill(1).map((v, i) => v << 14 | v << (13 - i));\r\n\r\nself.onmessage = ({ data: { board } }) => {\r\n    // Step 1. Initialize the royals, get the optimal royal piece configuration.\r\n    const possibleRoyals = [[], [], [], []];\r\n    const boardSquares = board.getSquares(), options = board.getBoardData(),\r\n        controls = board.getPieceControls(), reporter = board.getReporter();\r\n   \r\n    let promotionPieces = [], promotionRanks = [];\r\n    reporter.getRules().forEach(r => {\r\n        if (r instanceof PromoteTo) {\r\n            promotionPieces = r.getData();\r\n        } else if (r instanceof PromotionRank) {\r\n            promotionRanks = r.getData();\r\n        }\r\n    });\r\n\r\n    options.fenOptions.royal.forEach((r, i) => {\r\n        if (r) {\r\n            if (controls.has(boardSquares[r[1]][r[0]]) && controls.get(boardSquares[r[1]][r[0]]).hooks.usePawnLogic) {\r\n                possibleRoyals[i] = [boardSquares[r[1]][r[0]].charAt(1), ...promotionPieces];\r\n            } else possibleRoyals[i] = [boardSquares[r[1]][r[0]].charAt(1)];\r\n        } else if (promotionPieces.includes(\"K\")) {\r\n            possibleRoyals = [\"K\"];\r\n        }\r\n    });\r\n\r\n    const royalMoveSets = [\r\n        [\"β\", \"W\", \"R\", \"E\", \"M\", \"Q\", \"D\", \"A\"],\r\n        [\"γ\", \"F\", \"B\", \"H\", \"M\", \"Q\", \"D\", \"A\", \"Δ\"],\r\n        [\"Y\", \"Z\"], [\"I\", \"J\"], [\"S\", \"T\"], [\"S\", \"Y\"], [\"I\", \"Y\"],\r\n        [\"U\", \"N\", \"O\", \"M\", \"H\", \"A\", \"E\", \"Δ\", \"M\", \"V\"], [\"C\", \"L\"], [\"C\", \"V\"]\r\n    ];\r\n    const royalPieceSets = Array.from({ length: 4 }, () => new Set());\r\n    for (let i = 0; i < possibleRoyals.length; i++) {\r\n        if (possibleRoyals[i].length > 1) {\r\n            royalMoveSets.forEach(e => {\r\n                for (let j = 0; j < e.length; j++) {\r\n                    if (possibleRoyals[i].includes(e[j])) {\r\n                        const targetArr = e.slice(j + 1);\r\n                        possibleRoyals[i].forEach(v => { if (!targetArr.includes(v)) { royalPieceSets.add(v); } });\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                possibleRoyals[i].forEach(v => royalPieceSets.add(v));\r\n            });\r\n        } else if (possibleRoyals[i].length === 1) {\r\n            royalPieceSets[i].add(possibleRoyals[i][0]);\r\n        }\r\n    }\r\n    performance.mark(\"insuffStart\");\r\n    // Step 2. Get all the co-ordinates that a single piece can reach, and what can promoted pieces reach.\r\n    const boardDestinations = new Map();\r\n    const walls = \"XxΘ\";\r\n    const emptyBoard = boardSquares.map(row => row.map(square => walls.includes(square) ? square : ''));\r\n    const virtualFenOptions = options.createVirtualCopy();\r\n    const baseImmune = Array(4).fill(false);\r\n    virtualFenOptions.fenOptions.royal = Array(4).fill(null);\r\n\r\n    const getAllSquaresRecursively = (x, y, piece) => {\r\n        const currentSquares = new Set(), unvisitedSquares = new Set();\r\n        const control = controls.get(piece.charAt(1));\r\n        control.setColor(colorEnum[piece.charAt(0)]);\r\n        if (control.hooks.usePawnLogic && options.fenOptions.pawnBaseRank < 13) {\r\n            control.setBaseRankActive(options.fenOptions.pawnBaseRank - 1, x, y);\r\n        }\r\n        control.setBaseImmunePieces(baseImmune);\r\n\r\n        const recurse = (x, y) => {\r\n            control.setCoordinates(emptyBoard, virtualFenOptions, [x, y]);\r\n            const moves = control.getPseudoLegalMoves();\r\n            if (moves.length === 0) return;\r\n            moves.forEach(m => {\r\n                const moveString = m[0] + \":\" + m[1];\r\n                if (!currentSquares.has(moveString)) {\r\n                    unvisitedSquares.add(moveString);\r\n                }\r\n            });\r\n\r\n            for (const value of unvisitedSquares) {\r\n                const [x, y] = value.split(\":\").map(v => parseInt(v, 10));\r\n                if (!currentSquares.has(value)) {\r\n                    currentSquares.add(value);\r\n                    recurse(x, y);\r\n                }\r\n            }\r\n        };\r\n\r\n        recurse(x, y);\r\n\r\n        const permutations = new Uint16Array(14).fill(1 << 14);\r\n        currentSquares.forEach(value => {\r\n            const valueArr = value.split(\":\").map(v => parseInt(v, 10));\r\n            permutations[valueArr[1]] |= binaryMasks[[valueArr[0]]];\r\n        });\r\n        unvisitedSquares.forEach(value => {\r\n            const valueArr = value.split(\":\").map(v => parseInt(v, 10));\r\n            permutations[valueArr[1]] |= binaryMasks[[valueArr[0]]];\r\n        });\r\n     \r\n        return permutations;\r\n    };\r\n\r\n \r\n    for (let i = 0; i < boardSquares.length; i++) {\r\n        for (let j = 0; j < boardSquares[0].length; j++) {\r\n            if (boardSquares[i][j].length === 2 && !boardSquares[i][j].startsWith(\"d\")) {\r\n                const piece = boardSquares[i][j].charAt(1);\r\n                const permutations = getAllSquaresRecursively(j, i, boardSquares[i][j]);\r\n                if (boardDestinations.has(piece)) {\r\n                    boardDestinations.set(piece, boardDestinations.get(piece).concat(permutations));\r\n                } else {\r\n                    boardDestinations.set(piece, [permutations]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n\r\n    for (let i = 0; i < promotionPieces.length; i++) {\r\n        for (let j = 0; j < promotionRanks.length; j++) {\r\n            const piece = promotionPieces[i];\r\n            const x = 0, y = 0;\r\n            if (j % 2 === 0) y = promotionRanks[j]; else x = promotionRanks[j];\r\n            const constructedPieceString = \"p\" + colorEnum[j.toString()] + piece;\r\n\r\n            const permutations = getAllSquaresRecursively(x, y, boardSquares[i][j]);\r\n            if (boardDestinations.has(constructedPieceString)) {\r\n                boardDestinations.set(constructedPieceString, boardDestinations.get(constructedPieceString).concat(permutations));\r\n            } else {\r\n                boardDestinations.set(constructedPieceString, [permutations]);\r\n            }\r\n        }\r\n    }\r\n    performance.mark(\"insuffEnd\");\r\n    performance.measure(\"measure1\", \"insuffStart\", \"insuffEnd\");\r\n\r\n    const registryIndexes = new Map();\r\n    const registry = {};\r\n    const entries = boardDestinations.entries();\r\n\r\n    for (const entry of entries) {\r\n        if (/[βαγδPG]/.test(entry[0])) continue;\r\n        let isAlwaysIntersecting = true;\r\n        const permutationArray = [];\r\n\r\n        for (let i = 0; i < entry[1].length; i++) {\r\n            if (permutationArray.length === 0) {\r\n                permutationArray.push(entry[1][i]);\r\n            } else {\r\n                const index = permutationArray.findIndex(uintArr => uintArr.every((n, j) => n === entry[1][i][j]));\r\n                if (index > -1) {\r\n                    permutationArray.push(index);\r\n                } else {\r\n                    permutationArray.push(entry[1][i]);\r\n                    isAlwaysIntersecting = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!isAlwaysIntersecting) {\r\n            let baseArray = [];\r\n\r\n            permutationArray.forEach(uintArray => {\r\n                if (typeof uintArray === 'number') return;\r\n\r\n                const uid = Symbol();\r\n                if (baseArray.length === 0) {\r\n                    uintArray.forEach(p => {\r\n                        const newArr = [];\r\n                        for (let i = 0; i < 14; i++) {\r\n                            newArr.push((p & binaryMasks[i]) === binaryMasks[i] ? uid : null);\r\n                        }\r\n                        baseArray.push(newArr);\r\n                    });\r\n                } else {\r\n                    uintArray.forEach((p, j) => {\r\n                        for (let i = 0; i < 14; i++) {\r\n                            if (!baseArray[j][i] && (p & binaryMasks[i]) === binaryMasks[i]) {\r\n                                baseArray[j][i] = uid;\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n\r\n                registry[uid] = uintArray;\r\n            });\r\n\r\n            registryIndexes.set(entry[0], baseArray);\r\n        }\r\n    }\r\n\r\n  \r\n    console.log(performance.getEntriesByType(\"measure\"));\r\n    // Step 3. Get all the possible squares the royal pieces can reach, and calculate the possible squares minus the opposition squares.\r\n    // This will be a matrix of arrays of 2D arrays of a special object, with the covered squares being Uint16Arrays and the optimal square being an array of two numbers.\r\n    const oppositionMatrix = Array.from({ length: 4 }, () => Array.from({ length: 4 }, () => null));\r\n    const scanAttackSquares = (piece) => {\r\n        const control = controls.get(piece);\r\n        control.setColor(colorEnum[piece.charAt(0)]);\r\n        if (control.hooks.usePawnLogic && options.fenOptions.pawnBaseRank < 13) {\r\n            control.setBaseRankActive(options.fenOptions.pawnBaseRank - 1, x, y);\r\n        }\r\n        control.setBaseImmunePieces(baseImmune);\r\n\r\n        const finalArray = Array.from({ length: 14 }, () => Array.from({ length: 14 }, () => null));\r\n        for (let i = 0; i < boardSquares.length; i++) {\r\n            for (let j = 0; j < boardSquares[0].length; i++) {\r\n                if (emptyBoard[i][j].length === 0) {\r\n                    control.setCoordinates(emptyBoard, virtualFenOptions, [x, y]);\r\n                    const moves = control.getPseudoLegalMoves();\r\n                    const baseArray = Array.from({ length: 14 }, () => Array.from({ length: 14 }, () => '0'));\r\n                    moves.forEach(m => baseArray[m[1]][m[0]] = '1');\r\n                    const permutations = new Uint16Array(14);\r\n                    baseArray.forEach((r, i) => permutations[i] = parseInt(r.join(\"\"), 2));\r\n                    finalArray[i][j] = permutations;\r\n                }\r\n            }\r\n        }\r\n\r\n        return finalArray;\r\n    };\r\n\r\n    for (let i = 0; i < possibleRoyals.length; i++) {\r\n        for (let j = 0; j < possibleRoyals[i].length; j++) {\r\n            const royal = possibleRoyals[i][j];\r\n            if (!oppositionMatrix[i][i]) oppositionMatrix[i][i] = [];\r\n            oppositionMatrix[i][i].push(scanAttackSquares(royal));\r\n        }\r\n    }\r\n\r\n\r\n    for (let i = 0; i < oppositionMatrix.length; i++) {\r\n        for (let j = 0; j < oppositionMatrix[0].length; j++) {\r\n            if (i === j) continue;\r\n\r\n        }\r\n    }\r\n};","import { specialMovesEnum } from '../movegen/Board';\r\nimport crc32 from './CRC32';\r\nimport { parseSingleCoordinate } from './Parsers';\r\n\r\nconst lineSymbols = {\r\n    lineStart: Symbol(),\r\n    lineEnd: Symbol()\r\n};\r\n\r\nconst moveTypesSpecial = {\r\n    castling: Symbol()\r\n};\r\n\r\nfunction createMoveDataFromPGN(moveString) {\r\n    const move = {\r\n        startCoordinates: [],\r\n        endCoordinates: []\r\n    };\r\n    \r\n    if (/O-O-?O?.*/.test(moveString)) {\r\n        move.specialType = moveTypesSpecial.castling;\r\n    } else {\r\n        const coordinates = moveString.match(/[A-ZΑ-ω]([a-n]\\d{1,2})(?:-|x)[A-ZΑ-ω]?([a-n]\\d{1,2})/);\r\n        move.startCoordinates = parseSingleCoordinate(coordinates[1]);\r\n        move.endCoordinates = parseSingleCoordinate(coordinates[2]);\r\n    }\r\n\r\n    return move;\r\n}\r\n\r\nfunction createMoveTree() {\r\n    const getSelection = (root, path) => {\r\n        let currentSelection = root;\r\n        for (let i = 0; i < path.length; i++) {\r\n            if (Array.isArray(currentSelection)) {\r\n                currentSelection = currentSelection[path[i]];\r\n            } else {\r\n                if (currentSelection?.alternativeLines) {\r\n                    currentSelection = currentSelection?.alternativeLines[path[i]];\r\n                } else {\r\n                    currentSelection.alternativeLines = [];\r\n                    currentSelection = currentSelection.alternativeLines;\r\n                }\r\n\r\n                if (!currentSelection) return undefined;\r\n            }\r\n        }\r\n\r\n        return currentSelection;\r\n    };\r\n\r\n    const generateObject = (object, current) => {\r\n        let suffix = '';\r\n        const stripRegex = /\\+#/g;\r\n        switch (current[0]) {\r\n            case 'moveName':\r\n                const stripped = current[1].replace(stripRegex, '');\r\n                object.moveName = stripped;\r\n                object.moveData = createMoveDataFromPGN(stripped);\r\n                break;\r\n            case 'type':\r\n                object.isResigned = current[1].type === specialMovesEnum.resign ?? false;\r\n                object.isPassing = current[1].type === specialMovesEnum.pass ?? false;\r\n                object.isTimeout = current[1].type === specialMovesEnum.timeout ?? false;\r\n                object.isStalemate = current[1].type === specialMovesEnum.stalemate ?? false;\r\n                object.isDraw = current[1].type === specialMovesEnum.draw ?? false;\r\n                break;\r\n            case 'comment':\r\n                object.comment = current[1];\r\n                break;\r\n            case 'suffix':\r\n                suffix = current[1].replace(stripRegex, '');\r\n                if (suffix.startsWith('=')) {\r\n                    object.isPromotion = suffix.slice(1);\r\n                }\r\n                break;\r\n        }\r\n        if (suffix && object.moveName) object.moveName = object.moveName + suffix;\r\n    }\r\n\r\n    return {\r\n        moves: [],\r\n        currentMove: [0],\r\n        boardHashes: new Map(),\r\n        setNewMove(path, move) {\r\n            if (typeof move !== 'object') return;\r\n            const selection = getSelection(this.moves, path);\r\n\r\n            if (selection) {\r\n                if (Array.isArray(selection)) {\r\n                    selection.push(move[1]);\r\n                } else {\r\n                    selection.alternativeLines = [];\r\n                    selection.alternativeLines.push([move[1]]);\r\n                }\r\n            }\r\n        },\r\n        getMove(path) {\r\n            const selection = getSelection(this.moves, path);\r\n            let object = {};\r\n            if (selection && typeof path[path.length - 1] === 'string') {\r\n                object =  selection[path[path.length - 1]];\r\n            } else object = selection;\r\n\r\n            const result = {};\r\n            for (const entry of Object.entries(object)) {\r\n                if (entry[0] !== 'alternativeLines') {\r\n                    generateObject(result, entry);\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n        setHash(data, board) {\r\n            const str = data.constructPreliminaryHashString(board);\r\n            const hash = crc32(str);\r\n            if (this.boardHashes.has(hash)) {\r\n                this.boardHashes.set(hash, this.boardHashes.get(hash) + 1);\r\n            } else {\r\n                this.boardHashes.set(hash, 1);\r\n            }\r\n        },\r\n        getHash(data, board) {\r\n            const str = data.constructPreliminaryHashString(board);\r\n            const hash = crc32(str);\r\n            return this.boardHashes.has(hash) ? this.boardHashes.get(hash) : 0;\r\n        },\r\n        *[Symbol.iterator]() {\r\n            function* getEntries(entries, path) {\r\n                let object = {};\r\n                let index = 0;\r\n                let current = entries[index];\r\n\r\n                while (index < entries.length) {\r\n                    path.push(index);\r\n                    let isAltGen = null;\r\n                    for (const entry of Object.entries(current)) {\r\n                        if (entry[0] === 'alternativeLines') {\r\n                            isAltGen = entry[1].length ? entry[1] : false;\r\n                        } else {\r\n                            generateObject(object, entry);\r\n                        }\r\n                    }\r\n\r\n                    object.path = path.slice();\r\n                    yield object;\r\n                    object = new Object();\r\n                    if (isAltGen) {\r\n                        yield lineSymbols.lineStart;\r\n                        yield* getEntries(isAltGen, path);\r\n                        yield lineSymbols.lineEnd;\r\n                    }\r\n\r\n                    [index, current] = [++index, entries[index]];\r\n                    path.pop(index);\r\n                }\r\n            }\r\n\r\n            yield* getEntries(this.moves, []);\r\n        }\r\n    };\r\n}\r\n\r\nexport { lineSymbols, moveTypesSpecial, createMoveTree };","import { specialMovesEnum, colorEnum } from \"../movegen/Board\";\r\nimport createFENOptions from \"./FENOptions\";\r\n\r\nconst parseSingleCoordinate = (coordinate) => {\r\n    if (coordinate.length === 0) return null;\r\n    return [coordinate.charCodeAt(0) - 97, 14 - parseInt(coordinate.slice(1), 10)];\r\n};\r\n\r\nconst parseEnPassantCoordinates = (coordinates) => {\r\n    if (coordinates.length === 0) return null;\r\n    const coordinatesArray = coordinates.split(\":\");\r\n    return [[coordinatesArray[0].charCodeAt(0) - 97, 14 - parseInt(coordinatesArray[0].slice(1), 10)],\r\n    [coordinatesArray[1].charCodeAt(0) - 97, 14 - parseInt(coordinatesArray[1].slice(1), 10)]];\r\n};\r\n\r\nconst parsePGN4moves = (moves) => {\r\n    const constants = {\r\n        SPLIT: '.',\r\n        PIECE_REGEX: /[xA-ZΑ-ωa-n0-9-=+#]/,\r\n        PIECE_REGEX_SIMPLIFIED: /[A-ZΑ-ωa-n0-9-]/,\r\n        BRACKETS: {\r\n            COMMENT_START: '{',\r\n            COMMENT_END: '}',\r\n            VARIATION_START: '(',\r\n            VARIATION_END: ')'\r\n        }\r\n    };\r\n\r\n    const parseMoves = (moves, path) => {\r\n        const moveList = [];\r\n        const currentPath = path;\r\n\r\n        const getMoveIndexes = (mI) => {\r\n            while (moves[mI] && constants.PIECE_REGEX.test(moves[mI])) mI++;\r\n            return mI;\r\n        };\r\n\r\n        const parseComment = (mI) => {\r\n            while (moves[mI] && moves[mI] !== constants.BRACKETS.COMMENT_END) mI++;\r\n            return mI;\r\n        };\r\n\r\n        const getEnumeratorIndex = (mI) => {\r\n            while (moves[mI] && /\\d|\\./.test(moves[mI])) mI++;\r\n            return --mI;\r\n        };\r\n\r\n        const findBracketIndex = (i) => {\r\n            let depth = 0;\r\n            for (; i < moves.length; i++) {\r\n                switch (moves[i]) {\r\n                    case constants.BRACKETS.COMMENT_START:\r\n                        i = parseComment(i);\r\n                        break;\r\n                    case constants.BRACKETS.VARIATION_START:\r\n                        depth++;\r\n                        break;\r\n                    case constants.BRACKETS.VARIATION_END:\r\n                        if (--depth === 0) {\r\n                            return i;\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n\r\n            console.error(\"No closing matching parentheses\");\r\n            return i;\r\n        };\r\n\r\n        const setName = (move, name) => {\r\n            if (name.endsWith(specialMovesEnum.resign)) move.type = specialMovesEnum.resign;\r\n            if (name.endsWith(specialMovesEnum.timeout)) move.type = specialMovesEnum.timeout;\r\n            if (name.endsWith(specialMovesEnum.stalemate)) move.type = specialMovesEnum.stalemate;\r\n            if (name === specialMovesEnum.pass || move.type === specialMovesEnum.draw) move.type = name;\r\n            const promotionMatch = name.match(/.*?(=[A-Zx])/);\r\n            if (promotionMatch && promotionMatch[1]) {\r\n                move.suffix = promotionMatch[1];\r\n            }\r\n\r\n            move.moveName = name;\r\n            console.log(promotionMatch, move)\r\n        }\r\n\r\n        let currentMove = { alternativeLines: [] };\r\n        let increment = -1, variationIncrement = -1;\r\n\r\n        for (let i = 0; i < moves.length; i++) {\r\n            let beNaN = isNaN(moves[i]);\r\n            if (beNaN && !/\\s/.test(moves[i]) && moves[i] !== constants.SPLIT) {\r\n                if (constants.PIECE_REGEX_SIMPLIFIED.test(moves[i])) {\r\n                    const indexes = getMoveIndexes(i);\r\n                    setName(currentMove, moves.substring(i, indexes));\r\n                    i = indexes - 1;\r\n                } else if (moves[i] === constants.BRACKETS.COMMENT_START) {\r\n                    const indexes = parseComment(i);\r\n                    currentMove.comment = moves.substring(i + 1, indexes);\r\n                    i = indexes;\r\n                } else if (moves[i] === constants.BRACKETS.VARIATION_START) {\r\n                    const index = findBracketIndex(i);\r\n                    currentPath.push(increment + 1, ++variationIncrement);\r\n                    currentMove.alternativeLines.push(parseMoves(moves.substring(i + 1, index), currentPath.slice()));\r\n                    currentPath.pop();\r\n                    currentPath.pop();\r\n                    i = index;\r\n                }\r\n            } else if ((moves[i] === constants.SPLIT && moves[i + 1] && moves[i + 1] === constants.SPLIT)\r\n                || (moves[i].trim() && !beNaN) && moves[i + 1] && (moves[i + 1] === constants.SPLIT || !isNaN(moves[i + 1]))) {\r\n                if (!beNaN) i = getEnumeratorIndex(i);\r\n                if (currentMove.moveName) {\r\n                    currentPath.push(++increment);\r\n                    currentMove.path = currentPath.slice();\r\n                    currentPath.pop();\r\n                    moveList.push(Object.assign({}, currentMove));\r\n                }\r\n                currentMove = { alternativeLines: [] };\r\n            }\r\n        }\r\n\r\n        if (currentMove.moveName) {\r\n            currentPath.push(++increment);\r\n            currentMove.path = currentPath.slice();\r\n            moveList.push(Object.assign({}, currentMove));\r\n        }\r\n\r\n        return moveList;\r\n    }\r\n\r\n    return parseMoves(moves, []);\r\n};\r\n\r\nconst parseFEN4 = (fen4, addControlCallback) => {\r\n    const data = createFENOptions();\r\n    const board = [];\r\n\r\n    const parts = fen4.split(\"-\");\r\n    if (parts.length < 7 || parts[parts.length - 1].split(\"/\").length !== 14) {\r\n        console.error(\"FEN has less than 7 parts\");\r\n    } else {\r\n        data.sideToMove = colorEnum[parts[0].charAt(0).toLowerCase()];\r\n\r\n        data.fenOptions.dead = parts[1].split(\",\").map(e => parseInt(e, 10));\r\n        data.fenOptions.castleKingside = parts[2].split(\",\").map(e => parseInt(e, 10));\r\n        data.fenOptions.castleQueenside = parts[3].split(\",\").map(e => parseInt(e, 10));\r\n        data.points = parts[4].split(\",\").map(e => parseInt(e, 10));\r\n        data.fenOptions.plyCount = parseInt(parts[5], 10);\r\n\r\n        try {\r\n            if (parts[6].startsWith(\"{\")) {\r\n                const extra = JSON.parse(parts[6].replaceAll(\"\\(\", '[').replaceAll(\")\", \"]\").replaceAll(\"'\", '\"'));\r\n                [\"enPassant\", \"zombieType\", \"zombieImmune\", \"pawnBaseRank\", \"wb\", \"boxOffset\", \"noCorners\", \"lives\", \"castleWith\", \"royal\"]\r\n                    .forEach(e => { if (extra[e]) data.fenOptions[e] = extra[e] });\r\n                const res = [];\r\n                if (extra.resigned) res.push(extra.resigned);\r\n                if (extra.stalemated) res.push(extra.stalemated);\r\n                if (extra.flagged) res.push(extra.flagged);\r\n                data.fenOptions.resigned = res[0] ? res[0].map((_, i) => res.some(a => a[i])) : Array(4).fill(false);\r\n                if (extra.dim) {\r\n                    data.fenOptions.dimension = extra.dim.split(\"x\").map(e => parseInt(e, 10));\r\n                }\r\n            }\r\n        } catch (_) {\r\n            fallback();\r\n        }\r\n\r\n        const fenPart = parts[6].startsWith(\"{\") ? parts[7] : parts[6];\r\n        const detectedRoyals = [null, null, null, null];\r\n        fenPart.split(\"/\").forEach((line, i) => {\r\n            board.push([]);\r\n            let j = 0;\r\n            line.split(\",\").forEach((p) => {\r\n                const altP = p.endsWith('\"') ? p.slice(0, -1) : p;\r\n                if (isNaN(altP)) {\r\n                    board[i].push(altP);\r\n                    if (!data.fenOptions.royal && !altP.startsWith(\"d\") && altP.length !== 1) {\r\n                        if (altP.charAt(1) === \"K\") {\r\n                            detectedRoyals[colorEnum[altP.charAt(0)]] = [j, i];\r\n                        }\r\n                    }\r\n                    addControlCallback(altP);\r\n                } else {\r\n                    board[i].push(...Array(parseInt(altP, 10)).fill(\"\"));\r\n                    j += parseInt(altP, 10) - 1;\r\n                }\r\n                j++;\r\n            });\r\n        });\r\n\r\n        if (data.fenOptions.enPassant) {\r\n            data.fenOptions.enPassant = data.fenOptions.enPassant.map(s => parseEnPassantCoordinates(s));\r\n        } else data.fenOptions.enPassant = Array(4).fill(null);\r\n        if (data.fenOptions.royal) {\r\n            data.fenOptions.royal = data.fenOptions.royal.map(s => parseSingleCoordinate(s));\r\n        } else data.fenOptions.royal = detectedRoyals;\r\n        console.log(data.fenOptions)\r\n    }\r\n\r\n    return { board, data };\r\n};\r\n\r\nexport { parseSingleCoordinate, parseEnPassantCoordinates, parsePGN4moves, parseFEN4 };","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".react-app.js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = self.location + \"\";\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t\"src_main_client_javascript_logic_movegen_Board_js\": 1\n};\n\n// no chunk install function needed\n// no chunk loading\n\n// no HMR\n\n// no HMR manifest","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/main/client/javascript/logic/utils/InsufficientMaterialGeneration.js\");\n",""],"names":["createMoveTree","parseEnPassantCoordinates","parsePGN4moves","parseSingleCoordinate","parseFEN4","Pieces","Reporter","topicLines","parseGameRules","colorEnum","r","b","y","g","Red","Blue","Yellow","Green","specialMovesEnum","resign","stalemate","draw","pass","timeout","variantTypes","solo","Symbol","ffa","teams","baseImmunes","Array","fill","createBasePreGeneratedAttacks","hoppingPieces","from","length","slidingPieces","hoppingPieceLines","slidingPiecesLines","slidingPiecesRayTracing","attackingColors","Board","type","pgn4","controls","Map","controlsSettings","data","moves","preGeneratedAttacks","board","boardMemo","isComplexSetup","hasComplexPieces","hasComplexRules","isComplex","reporter","Object","values","gameData","gameNumber","undefined","timeControl","players","site","date","result","termination","gameType","teamSettings","firstTeamColors","secondTeamColors","getBaseColors","color","isFFA","map","_","i","pgn4Tags","pgn4Moves","match","index","substring","split","tagFunctions","func","fen4","letter","startsWith","realLetter","charAt","has","information","PieceControl","getConstructor","control","Reflect","construct","setReporter","set","arguments","rules","list","addGameRules","variant","Date","number","isNaN","parseInt","tc","parsePlayerMatch","content","elo","name","leftFunctions","Set","keys","forEach","tag","isPresent","v","tagStart","replace","slice","playerMatch","parseTag","obj","call","evaluateCase","createShallowCase","boardModification","currentBoard","pregenerateAttacks","insufficientMaterialModule","insufficientMaterialGenerationWorker","Worker","URL","import","meta","url","postMessage","excludedObjects","WeakSet","targetObject","getOwnPropertyNames","prototype","property","bind","field","assign","createVirtualCopy","baseColor","fenRoyal","fenOptions","royal","j","square","get","setColor","baseRankActive","setCoordinates","immunePieces","threats","getPseudoLegalMoves","some","a","every","coordinates","playerPieces","push","kingChecks","legalMoves","getPlayerPieces","sideToMove","move","getLegalMoves","isKingInCheck","virtualCopy","p","checkmates","stalemates","piece","_startX","_startY","_endX","_endY","_promotion","affectOptions","runComplexLegalityEvaluationChecks","createVirtualEffect","setBaseImmunePieces","isJumping","rayGenJumpingAttacks","l","isSliding","attacks","rayGenSlidingAttacks","sa","ssa","attackTypeEnum","rayTraceLimited","attackX","attackY","pieceX","pieceY","promotion","virtualFEN","makeVirtualMove","check","royalX","royalY","isRoyalMove","attackers","targetSafety","legalitySettings","canKingCapture","royalDefendedSquare","lineWrapIndex","attackingPiece","attackLine","isPieceUnderAttack","isRoyalUnderAttack","isTheTargetSquarePinListed","attackIndex","attackedX","attackedY","attackCoordinates","isTheTargetSquareBlocked","x","hooks","usePawnLogic","pawnBaseRank","setBaseRankActive","pseudoLegalMoves","filter","m","isTheMoveLegal","attackOnly","moveOnly","normal","rayGen","rayTrace","isRayTrace","attackType","pieceLetter","inferredOptions","letterMap","sliding","jumping","rayGenCache","useTrajectory","usePerspective","useHopping","moveLegalityCase","baseRank","moveGeneration","createCase","moveGenerationLegality","isRayGen","promotionRanks","promotionPieces","displacementX","displacementY","special","limit","Infinity","rayTraceLimit","modifyDisplacements","startX","startY","xLength","yLength","getMovePossibility","tests","isBlocked","inferredClass","pushMove","trajectory","trajectoryX","trajectoryY","isTrajectoryBlocked","resetCase","modifiedX","modifiedY","pushTo","generateSlidingAttack","s","generateJumpAttack","splice","trace","slidingLines","f","getPossibleCells","RookControl","points","BishopControl","QueenControl","DameControl","KingControl","GeneralControl","FerzControl","WazirControl","DabbabaControl","DabbabaRiderControl","AlfilControl","AlfilRiderControl","AlibabaControl","AlibabaRiderControl","AmazonControl","KnightControl","CamelControl","ChancellorControl","ArchbishopControl","KnightRiderControl","CamelRiderControl","WildebeestControl","PawnControl","BerolinaControl","StoneGeneralControl","SoldierControl","SergeantControl","ChineseHorseControl","DragonBishopControl","GrasshopperControl","pieces","postMoveOptions","mateHandling","moveValidation","topics","reduce","object","line","cases","WeakMap","rv","extendCategory","Proxy","target","prop","value","isFrozen","deleteProperty","passed","isExtensible","topicLine","proxy","getProxy","uid","inferredProxy","isShallow","proxyData","baseObject","baseClass","classMutations","objectMutations","addClassMutation","callback","addObjectMutation","testCase","settings","ignoreOutput","shallowEvaluate","evaluate","suspendedCases","suspended","preventExtensions","ruleList","regExRules","SidewaysPawns","Torpedo","AnyCapture","resigned","zombieImmune","PromotionRank","promotionRank","PromoteTo","AlternativeTeams","teammate","finalList","regExRuleSet","regex","RegExp","crc32","table","Uint32Array","tmp","k","encoder","TextEncoder","str","arr","Uint8Array","encodeInto","crc","createFENOptions","copySettings","base","val","isArray","n","processRules","endX","endY","concat","endSquare","castleKingside","castleQueenside","enPassant","getCheckmatesAndStalemates","totalMateSum","boardAlternations","pointDistribution","stalematePoints","checkmatePoints","pieceCapturingPoints","deadPieceList","takeoverPieceList","detectedPieces","dead","coord","toString","validatedFenOptions","zombieType","castleWith","boxOffset","wb","dimension","noCorners","lives","plyCount","constructPreliminaryHashString","builder","join","newObject","suppliedArguments","binaryMasks","self","onmessage","possibleRoyals","boardSquares","getSquares","options","getBoardData","getPieceControls","getReporter","getRules","getData","includes","royalMoveSets","royalPieceSets","e","targetArr","add","performance","mark","boardDestinations","walls","emptyBoard","row","virtualFenOptions","baseImmune","getAllSquaresRecursively","currentSquares","unvisitedSquares","recurse","moveString","permutations","Uint16Array","valueArr","constructedPieceString","measure","registryIndexes","registry","entries","entry","test","isAlwaysIntersecting","permutationArray","findIndex","uintArr","baseArray","uintArray","newArr","console","log","getEntriesByType","oppositionMatrix","scanAttackSquares","finalArray","lineSymbols","lineStart","lineEnd","moveTypesSpecial","castling","createMoveDataFromPGN","startCoordinates","endCoordinates","specialType","getSelection","root","path","currentSelection","alternativeLines","generateObject","current","suffix","stripRegex","stripped","moveName","moveData","isResigned","isPassing","isTimeout","isStalemate","isDraw","comment","isPromotion","currentMove","boardHashes","setNewMove","selection","getMove","setHash","hash","getHash","iterator","getEntries","isAltGen","pop","coordinate","charCodeAt","coordinatesArray","constants","SPLIT","PIECE_REGEX","PIECE_REGEX_SIMPLIFIED","BRACKETS","COMMENT_START","COMMENT_END","VARIATION_START","VARIATION_END","parseMoves","moveList","currentPath","getMoveIndexes","mI","parseComment","getEnumeratorIndex","findBracketIndex","depth","error","setName","endsWith","promotionMatch","increment","variationIncrement","beNaN","indexes","trim","addControlCallback","parts","toLowerCase","extra","JSON","parse","replaceAll","res","stalemated","flagged","dim","fallback","fenPart","detectedRoyals","altP"],"sourceRoot":""}